{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Loop \u00b6 Welcome to the \"LoopDocs\" website where you can learn about Loop. This site shows you step-by-step how to build, set up and operate the Loop app. You do not need a technical or computer background to do this. Loop requires a substantial time commitment. In order to become a proficient looper, you need to learn the information on this site and follow the steps carefully. Consider doing this over a period of time and reviewing the materials more than once. You will need to test and perhaps adjust your settings to be successful with Loop, or any hybrid closed-loop system You will find links as you read to a robust support community Once you are looping, you should regularly follow one or more support forums for important updates on Loop. Spending this time is important for success in building and operating Loop safely. This website is updated regularly to keep pace with Loop developments and Apple releases. What is Loop \u00b6 Loop is an app you build and load on an iPhone (or iPod). After building the Loop app: You enter your personal therapy settings (e.g., carbohydrate ratio, basal rates, insulin sensitivity) You enter the carbs you eat Loop uses this information, your insulin on board ( IOB ) and glucose data, to determine how much insulin you need to bring your blood glucose within the target range you set You can choose to have Loop automatically control insulin dosing (closed-loop mode) or have Loop recommend insulin that you manually accept or modify (open-loop mode) What is Loop Video \u00b6 If you have never used Loop, click on links below for an introduction. Loop Video This What is Loop video with associated pdf deck was created by the Loop and Learn Team Special thanks to Tina and Reese Hammer for the terrific video Special thanks to Matthew Fouse for the generous use of his beautiful graphics Important Disclaimer \u00b6 Please consult with your health care professional regarding your diabetes management. The Loop app is an open source project used by many, but it is not approved for therapy by any government organization. You take full responsibility for building and running this system and do so at your own risk. Volunteer Community \u00b6 Loop has been, and continues to be, developed and supported by volunteers. From the code to this website, you are able to loop because many volunteers have given their personal and family time. Please add your time by reading this website thoroughly before embarking on your Loop journey.","title":"Home"},{"location":"#welcome-to-loop","text":"Welcome to the \"LoopDocs\" website where you can learn about Loop. This site shows you step-by-step how to build, set up and operate the Loop app. You do not need a technical or computer background to do this. Loop requires a substantial time commitment. In order to become a proficient looper, you need to learn the information on this site and follow the steps carefully. Consider doing this over a period of time and reviewing the materials more than once. You will need to test and perhaps adjust your settings to be successful with Loop, or any hybrid closed-loop system You will find links as you read to a robust support community Once you are looping, you should regularly follow one or more support forums for important updates on Loop. Spending this time is important for success in building and operating Loop safely. This website is updated regularly to keep pace with Loop developments and Apple releases.","title":"Welcome to Loop"},{"location":"#what-is-loop","text":"Loop is an app you build and load on an iPhone (or iPod). After building the Loop app: You enter your personal therapy settings (e.g., carbohydrate ratio, basal rates, insulin sensitivity) You enter the carbs you eat Loop uses this information, your insulin on board ( IOB ) and glucose data, to determine how much insulin you need to bring your blood glucose within the target range you set You can choose to have Loop automatically control insulin dosing (closed-loop mode) or have Loop recommend insulin that you manually accept or modify (open-loop mode)","title":"What is Loop"},{"location":"#what-is-loop-video","text":"If you have never used Loop, click on links below for an introduction. Loop Video This What is Loop video with associated pdf deck was created by the Loop and Learn Team Special thanks to Tina and Reese Hammer for the terrific video Special thanks to Matthew Fouse for the generous use of his beautiful graphics","title":"What is Loop Video"},{"location":"#important-disclaimer","text":"Please consult with your health care professional regarding your diabetes management. The Loop app is an open source project used by many, but it is not approved for therapy by any government organization. You take full responsibility for building and running this system and do so at your own risk.","title":"Important Disclaimer"},{"location":"#volunteer-community","text":"Loop has been, and continues to be, developed and supported by volunteers. From the code to this website, you are able to loop because many volunteers have given their personal and family time. Please add your time by reading this website thoroughly before embarking on your Loop journey.","title":"Volunteer Community"},{"location":"build/build_errors/","text":"Build Errors \u00b6 There are two types of build indications that may be seen: they are warnings (yellow or purple icons) and red errors. You'll see the warnings and errors in the left-hand column of the Xcode window. Yellow and Purple warnings do not cause the build to fail, those are just warnings. You will often see yellow and purple icons. Ignore those. Do not try to do anything to fix those. Red errors will have to be resolved before you can successfully build the Loop app. The steps below explain how to resolve them based on the messages you are seeing. Start with The Obvious Error Causes \u00b6 New Loop Builders This page contains build error help for people updating their Loop app as well as brand new Loop app builders. Review the \"obvious\" errors causes first. If that doesn't help, then, skim the page until you reach Find Your Error Message or search the page (Cmd-F) or search LoopDocs for your error. Once you've identified your error message, try to resolve it. Still stuck? Read Posting for Help Before you start trying to resolve your red errors, start with the most obvious things that can cause a red error message: Did you forget to select Loop(WorkSpace)? The first time you build after downloading new code, you must manually select Loop ( Workspace ) instead of Loop in Xcode . Did you check that you have the minumum Xcode version for your iOS ? This is critical. If you are updating your Loop app, please review the iOS driven requirements for minimum version of macOS and Xcode . Did you check your Apple developer account for new license agreement? Periodically, Apple will release a new developer license agreement that you need to sign before you can build new apps. You will get a build failure if there is a pending license agreement to sign. Login to your Apple developer account to check if there's a new license agreement. Do you have a new computer, never used to build Loop? Did you Add Apple ID to Xcode ? Did you reboot, i.e., restart, your computer after updating Xcode ? You should reboot following Xcode installation or update and you must make sure your command line tools match the version of Xcode you just installed. Xcode Command Line Tools Did you get a fresh download of Loop code? If you tried to build with an old download that you used a long time ago, that old version may not be compatible with the new iOS and Xcode versions. Check also, that you are actually using the new download in Xcode . When you use the Build Select Script , it automatically opens Xcode using the new download. If you want to build using a recent download, this section tells you how to Find My Dowloaded Loop Code . Are you are using a free developer account? Make sure you finished the removal of Siri and Push Notification capabilities described in the Free Account link. DO NOT USE BETA VERSIONS If you are using an iOS beta version or an Xcode beta version, Loop might not build. Deleting iOS beta from a phone is a pain...so don't install it unless you know what you are doing. Fix 95% of errors \u00b6 If you have checked all those steps above and think you have a true build error, here's a tip that resolves 95% of all build errors when updating Loop code. Open your project in Xcode as normal. Then go to the menu bar at the top of the screen and find the \"Product\" menu item. Use the drop down selection for \"Clean Build Folder\" or press shift-command-K. Either will work the same. Wait for the clean to finish before trying to build again. On the far right, next to the name Full Path is the folder name that Xcode will be using to build. Make sure it is the new code you just downloaded and not an older folder. If you are updating Loop and did not Delete Old Provisioning Profiles , do it now Return to Xcode and try building your app again. Still failing for phone or watch or both? Try the Unpair and Reboot procedure. Unpair and Reboot \u00b6 This is reported to fix a variety of watch building errors and cannot prepare phone for development errors: Open Xcode (if not already open) Plug phone into computer and make sure it is unlocked Using the Xcode menu, select Windows Devices and Simulators On left side, Right-Click (or Control-Click) on your phone Choose Unpair Device It may not be necessary, but the suggestion is to reboot phone, (watch) and Mac - in other words, you can try to build without rebooting, but if that fails, repeat the steps and reboot before trying again. The next time you plug this phone into your computer, you will be asked to trust the computer on the phone (and watch). Note this is unpairing the device from Xcode and your computer, not the same as, and much faster than, unpairing your watch from your phone. If the build fails again, look through the list below and see if you can match your error message with one of the error messages listed later in this page. If you really can't find your solution, then post for help. But help us help you. Ignore yellow and purple warning messages - those are not errors - do not try to fix them Confirm it really is an error not already on this page; read this page carefully, including all the circled bits in the images in the Specific Error Messages section Follow the steps in the Posting for Help section WE CANNOT HELP without version numbers and screenshots Do not take pictures of your computer screen with your phone, use screenshots Posting for help \u00b6 STOP!! Read this section! Important! Before you post in a Loop Social Media site asking for help with build errors, do your work first. The build errors listed below (and the checks listed above) will fix most of problems you may encounter. PLEASE READ THIS PAGE . The volunteers answering questions online would love to spend more time helping people use Loop and less time answering questions that can be addressed by using this page. Therefore, try to resolve your build error yourself. Then, if you need to post for help, please include enough information with the post so the volunteers know where you are in your troubleshooting attempts. Your Post Must Include: The version of Xcode you are using The version of Loop you are building with The version of iOS on your Loop iPhone Free or paid account, and if free, confirmation that you deleted Siri and Push Notification capabilities Confirmation that you are not using an Xcode beta or iOS beta version (so we don't have to ask, please actually type \"I am not using beta versions\") Screenshots of your WHOLE Xcode window and/or Terminal window showing your error and any messages you've seen while working through the build errors/solutions. Do NOT use phone photographs of your computer screen. See below for instructions on how to capture a screenshot. State which fixes from the list below you have already tried AND post the screenshots of the results of those fix attempts. Screenshots \u00b6 Please take screenshots of your issue and use them in your posts. On an Apple computer, press shift-command-4 keys at the same time followed by pressing the space bar and then click on the window of interest. The screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". Use screenshots instead of cell phone images or words whenever possible. Screenshots are higher resolution and easier to read. Use the whole Xcode window screenshot when posting for build help. Find Your Error Message(s) \u00b6 To begin fixing the error, use the Report Navigator view to find your error message. The key is to (1) READ THE ERROR MESSAGE and then (2) FIND YOUR MESSAGE IN ONE OF THE TOPICS BELOW . Here's a super tip: Merely seeing the \"exit code\" in Xcode is not enough information to discern what error is causing your build to fail; some exit codes have multiple causes. Look at the detailed message to guide your search for the matching solution. Notice the screenshots below have red circles highlighting certain error messages. Read your error message(s) from your screen, being guided by the red circles in the screenshots. Once you find your error message (hint: not \"exit code\"), you can either: Take the error message from your Xcode screen and use LoopDoc's search function to enter in some of that phrase to bring up the appropriate solution topic, or Take the error message from your Xcode screen and read through EACH OF THE TOPICS BELOW. Check each of the red circles to see if you have a match. Kind of like a matching puzzle. For example, if you see \"Invalid active developer path (/Library/Developer/CommandLineTools)\" in your error message, use the search tool in LoopDocs with \"invalid active\". You will get a couple of links and one is the Command Line Tools fix for that error message. Click on the link and you'll find the solution. Specific Error Messages \u00b6 Run Destination is Not Valid; Failed to Prepare the Device \u00b6 Error Message: The run destination for name's phone is not valid for running the scheme \"Loop ( Workspace )\" Solution: Follow the link for the Unpair and Reboot procedure. If you are running iOS 16 on your phone, make sure developer mode is turned on. Package.resolved file corrupted or malformed \u00b6 Error Message: Package.resolved file is corrupted or malformed; fix or delete the file to continue: unsupported schema version 2 This error is new with Loop-dev, which uses Package Dependencies . There are 2 problems shown here The version of Xcode is out of date The graphic was acquired using a camera instead of a screenshot , and yes - that was a joke - using a camera does not cause a build error Solution: Update Xcode , which may require you to update macOS . Couldn't Get Revision for Package Dependency \u00b6 Many Search 1.4.3 for this Error \u00b6 This error is new with Loop-dev, which uses Package Dependencies . If you notice a red x in Xcode (as circled in the graphic below) Click on the red x to show the error in the left pane Alternatively, you can click on the icon shown with the red square to see the same information Error Message: Text in error: Uncategorized Couldn't get revision . . . Solution: Refer to the graphic below Click on the folder icon (indicated by red square) Hold down the Control-Key and click the Package Dependencies row to display the dropdown menu (shown in the inset) Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish You can start the build as soon as the Indexing message appears Cycle Dependency \u00b6 This error is new with Xcode 13.3 (late Sep 2021) which has a new requirement For those who care: the new requirement is that for a certain type of instruction file, the line with the Headers keyword must be located before the line with the Sources keyword There used to be many repositories that did not have lines in that order All of these instruction files have been updated for Loop Master, Loop dev and FreeAPS If you are building with an older copy of the code, you may see this error Error Message: Text in error: Left window (the exact target names are not important): Cycle in dependencies between targets . . . Middle window: Target build order preserved because \"Build Order\" is set to \"Manual Order\" in the scheme settings Solution: No need to quit Xcode - follow these steps using the Xcode Menu bar. (It's possible that only Step 1 is required, but sometimes all steps are needed.) From the Product menu (of Xcode ), select Clean Build Folder From the File menu, select Close Workspace From the File menu, select Open Recent and choose the top line Press the Build Button (play icon) Entitlements Error \u00b6 Error Message: Text in error message can be either of these: Entitlements file \"WatchApp Extension.entitlements\" was modified . . . or Entitlements file \"Loop.entitlements\" was modified . . . Solution: No need to quit Xcode - follow these numbered steps as indicated in the graphic below. Click on the Loop icon under PROJECT From the Product menu (of Xcode ), select Clean Build Folder Press the Build Button (play icon) It turns out that You can start building before indexing completes - just make sure it has started The behavior causing this in Xcode has been reported to Apple CompileAssetCatalog Error \u00b6 This error is found when there is a space embedded in the path name to your LoopWorspace folder. The good news is that LoopWorkspace seems to be able to build from an iCloud or Dropbox drive. Text in error message: Command CompileAssetCatalog failed with a nonzero exit code. . . Solution: This is very similar to the steps for the WatchApp Entitlements Error but you need to repeat it for 2 targets: Loop and WatchApp - the graphic below matches the step numbers in the list. Click on Loop folder Click on Loop target Click on the General tab Click on the App Icons Source dropdown menu Click on the item already selected (the line will change from red to blank) Repeat the App Icons Source dropdown menu selection for the WatchApp target (Optional) Clear the Build Error (Menu at top of Xcode : Select Product->Clean Build Folder) Press build Carthage Error \u00b6 You should not see carthage errors, but if you do, you probably did not select Loop ( Workspace ) at the top of the Xcode window. Review the graphic from the Prepare to Build Instructions. Or maybe you are a repeat builder who did not read the updated information and tried to use the old zip-download method. That is no longer supported. Please read all of the Updating page. Or maybe you are trying to build using an old download; some older versions did require carthage . Best practice is to download new code. Error Message: Wrong Version of Carthage Error Applications/ Xcode .app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: one of -create, -thin , -extract , -remove , -replace , -verify_arch \u2026 , -archs, -info, or -detailed_info must be specified. Solution: Download fresh code with Build Select Script (if you haven't already done so) and select Loop ( Workspace ) before building with Xcode . Could Not Locate Device Support Files \u00b6 Error Message: \"Could not locate device support files.\" That message is telling you that your iOS on the Loop phone requires you to get a newer version of Xcode to be able to build Loop onto that phone. Solution: Update your Xcode version; this may also require a macOS update. Please review the phone iOS driven requirements for Xcode and macOS . No Such Module 'LoopKit' or Similar Message \u00b6 Error Message: If you see a Cartfile failure and several other red errors (in particular saying there is \"no such module 'LoopKit'\"). Solution : Read the Carthage Error section above. Developer License Update (PLA Update) \u00b6 Error message: \"The Apple Developer Program License Agreement has been updated, In order to access certain membership resources, you must accept the latest license agreement\". Or you may see \"Unable to process request - PLA Update available. You currently don't have access to this membership resource. To resolve this issue, agree to the latest Program License Agreement in your developer account.\" Solution: You'll need to log onto your developer account at developer.apple.com and accept the latest license agreement. Could Not Get a Container Directory URL \u00b6 Error message: \"Could not get a container directory URL . Please ensure App Groups are set up correctly in entitlements.\" Solution : To resolve this error, you will need to click on the Loop target's signing area and then the plus-sign in the App Groups area under the signing. Copy and paste the bundle indentifier into the new container that starts with group. and then add Group to the end of the name. Click OK to save. Note, the line will start with lower case group. followed by your bundle identifier and an upper case Group added to the end of the bundle identifier. The final App Group should now have a blue check box, the name should start with group and end with LoopGroup . See the screenshot as an example. Click the build button after your App Group is setup similarly and you should be good. Missing Command Line Tools \u00b6 Error message: \"Invalid active developer path (/Library/Developer/CommandLineTools)\" Solution: Go to your Xcode preferences and under the Locations tab, select your Xcode version (the figure shows 14.0.1 - yours should match your Xcode version) in the dropdown menu for Command Line Tools. Device Management Could Not Launch Loop \u00b6 Error message: \"Could not launch \"Loop\". Verify the Developer App certificate for your account is trusted on your device. Open Settings and navigate to General -> Device Management, then select your Developer App certificate to trust it.\" New Solution First try the Unpair and Reboot process above. If that doesn't work, then try the solution listed below. Solution: If you get this message and are unable to find the Device Management option in your phone settings, then we need to do a little extra step to clear out some old info. Plug the phone into the computer and open Xcode Click the \"Window\" menu item in Xcode and then choose \"Devices and Simulators\" Right click your phone on the left and pick \"Show Provisioning Profiles\" Delete all of the items in the list that have Loop in the name Go to your four signing targets and change the signing team back to \"None\" for a quick bit, and then change back to your regular signing team name again. Rebuild Loop That should clear the out, problematic profiles and allow a successful build. If your problem persists after that, then you might need to do total reset of your phone to clear out the pesky problem. Before you do this, you may want to Post for Help to make sure it is really necessary: Wipe the iPhone clean and set it up as a new device FIRST - write down or screenshot all your settings Pod users - you will have to start a fresh pod after this If you want your old pod to continue giving you basal rate, don't replace the pod before wiping your phone. Once the phone is reset and a new Loop app is added, you must start a new pod. The old pod should have the sound connection broken before being discarded because you won't be able to deactivate the pod. Delete all certificates from your Developer account (you'll need to login to your Developer account to do that) Delete your old Loop code download and get a new one. Rebuild Loop on the phone with the new download of Loop code. Start a new pod with the new Loop app on the reset phone. Pending Certificate Request \u00b6 Error message: \"You already have a current iOS Development certificate or a pending certificate request.\" Solution: This error message has recently started to appear for some new Loop builders. To resolve the issue, please log in to your Developer account at developer.apple.com and then click on \"Certificates, Identifiers & Profiles\". Under that screen, you will see \"Development\" under the \"Certificates\" section in the column on the left. You will need to click on the certificates, and choose \"revoke\" from the options that show after you click on the certificate. Confirm the warning message that will appear asking \"Do you want to revoke the certificate?\" After you do that, return to Xcode and open up Xcode preferences. Under the Accounts section of Preferences, click on the minus sign to delete your Apple ID. Re-enter your Apple ID (yes...add that account right back that you literally just deleted), return to your Loop's target signing areas in Xcode and your error message should have resolved as a new certificate will have been issued and a provisioning profile should have been created automatically. You can verify the iOS development certificates are working by clicking on \"Manage Certificates\" in Xcode Preferences, Accounts and viewing the iOS Development Certificates. You should have one for your account that has a clean status similar to the screenshot below. Command CodeSign Failed \u00b6 Error message: \"errSecInternalComponent, Command CodeSign failed with a nonzero exit code\" Solution: This error message is likely due to inadvertently saying \"no\" to allowing Keychain Access or changing your computer or AppleID password. Regardless, the solution is as follows: Close Xcode Open your Keychain Access application (found in Applications within the Utilities folder) In the upper left corner of keychain access, make sure you have the keychain login highlighted and then right-click the lock next to the login . Click the lock closed, and then click the lock to open it again. You will be prompted for a password. Enter your computer admin password. Close Keychain Access app. Open your Loop project again in Xcode . In the main Xcode menu (grey menu bar at the very top of your Apple display area), select Product and then select the option for Clean . (Keyboard shortcut is shift-command-k) Now try rebuilding your Loop app. If you ever get prompted again to allow Xcode access to Keychain, make sure to click on the option to Always Allow. Unrecognized Arguments \u00b6 Error message: \"Unrecognized arguments: --cache-builds\" Solution: This is a homebrew / carthage error, so I don't think you'll see this. If you do, download a fresh copy of Loop code and try again. If it repeats, it is time to request assistance. Please read Posting for Help . Abort with Payload \u00b6 Error message: \" Abort with payload \" Your app will only open briefly with a white screen and then close, if you build with this error. Solution: This error message is caused by having the Loop download folder in an iCloud mapped drive when doing the zip download. Move your Loop download folder back to the Downloads folder, then rebuild. LoopWorkspace builds with Xcode 13 appear to work fine with an iCloud drive. You may run into the spaces in your path name problem - which has a different solution. Apple Watch Issues \u00b6 Apple Watch: Loop App Not Appearing \u00b6 Error: Apple watch app is not appearing. Solution: This error usually appears because you have not updated the watchOS prior to building Loop, or you didn't have your Apple watch paired at the time of building Loop. Don't forget to open the iPhone's Watch app, select My Watch tab on the bottom left, scroll all the way down, and click Install for the Loop app listed at the very bottom under \"available apps\". Apple Watch: Loop App Not Installing \u00b6 Before trying this solution, see if the Unpair and Reboot procedure works. Error: The Loop app appears on the list of apps available to install on the watch, but when you press \"install\", and it goes through the animation of filling in the circle while it's installing, but then at the end it just toggles back to saying \"INSTALL\". Solution: Plug your iPhone into the computer and start Xcode . On your watch, look for a prompt that says \"Trust this computer\". Scroll down on the watch face and select the \"Trust\" button. In Xcode , go to the top menu bar and select \"Clean Build Folder\" from the Product menu option, and then rebuild your Loop app. If the watch app still fails to install properly, the next section should work. Apple Watch: Loop App Not Running on Watch \u00b6 Error: Tapping the Loop app icon on the watch results in flash of the watch screen and then return to the Loop app icon or a brief display of the watch interface and then return to the Loop app icon. Solution: Plug in your iPhone, with the watch already paired, into the computer and start Xcode with your current build folder. In Xcode , from the list of schemes where you normally choose Loop ( Workspace ), choose the WatchApp scheme (near the bottom of the list) and then select your watch (not a simulator) from the device list, see the graphics below. Press the play button to build and deploy the WatchApp directly to your watch. It will launch correctly and will not crash when you subsequently launch it from the complication or your watch Home Screen.. Warning: Make sure your watchOS is up to date with respect to your phone iOS . If not, you may need to update to be successful. On pressing clicking build/play, some people report receiving an error stating \u201ciPhone/Apple Watch are ineligible because the OS on the watch doesn\u2019t support WatchKit App Products\u201d or similar wording. This is a known issue with some Mac USB ports. Fixes in preference order are: 1) swap which USB port is in use; 2) unplug and replug the USB cable from both the iPhone and Mac; or 3) as a last resort, reboot the iPhone and Mac. Don't forget to select Loop( Workspace ) after building to the watch before trying to build to a phone.","title":"Oh dear! Build errors?"},{"location":"build/build_errors/#build-errors","text":"There are two types of build indications that may be seen: they are warnings (yellow or purple icons) and red errors. You'll see the warnings and errors in the left-hand column of the Xcode window. Yellow and Purple warnings do not cause the build to fail, those are just warnings. You will often see yellow and purple icons. Ignore those. Do not try to do anything to fix those. Red errors will have to be resolved before you can successfully build the Loop app. The steps below explain how to resolve them based on the messages you are seeing.","title":"Build Errors"},{"location":"build/build_errors/#start-with-the-obvious-error-causes","text":"New Loop Builders This page contains build error help for people updating their Loop app as well as brand new Loop app builders. Review the \"obvious\" errors causes first. If that doesn't help, then, skim the page until you reach Find Your Error Message or search the page (Cmd-F) or search LoopDocs for your error. Once you've identified your error message, try to resolve it. Still stuck? Read Posting for Help Before you start trying to resolve your red errors, start with the most obvious things that can cause a red error message: Did you forget to select Loop(WorkSpace)? The first time you build after downloading new code, you must manually select Loop ( Workspace ) instead of Loop in Xcode . Did you check that you have the minumum Xcode version for your iOS ? This is critical. If you are updating your Loop app, please review the iOS driven requirements for minimum version of macOS and Xcode . Did you check your Apple developer account for new license agreement? Periodically, Apple will release a new developer license agreement that you need to sign before you can build new apps. You will get a build failure if there is a pending license agreement to sign. Login to your Apple developer account to check if there's a new license agreement. Do you have a new computer, never used to build Loop? Did you Add Apple ID to Xcode ? Did you reboot, i.e., restart, your computer after updating Xcode ? You should reboot following Xcode installation or update and you must make sure your command line tools match the version of Xcode you just installed. Xcode Command Line Tools Did you get a fresh download of Loop code? If you tried to build with an old download that you used a long time ago, that old version may not be compatible with the new iOS and Xcode versions. Check also, that you are actually using the new download in Xcode . When you use the Build Select Script , it automatically opens Xcode using the new download. If you want to build using a recent download, this section tells you how to Find My Dowloaded Loop Code . Are you are using a free developer account? Make sure you finished the removal of Siri and Push Notification capabilities described in the Free Account link. DO NOT USE BETA VERSIONS If you are using an iOS beta version or an Xcode beta version, Loop might not build. Deleting iOS beta from a phone is a pain...so don't install it unless you know what you are doing.","title":"Start with The Obvious Error Causes"},{"location":"build/build_errors/#fix-95-of-errors","text":"If you have checked all those steps above and think you have a true build error, here's a tip that resolves 95% of all build errors when updating Loop code. Open your project in Xcode as normal. Then go to the menu bar at the top of the screen and find the \"Product\" menu item. Use the drop down selection for \"Clean Build Folder\" or press shift-command-K. Either will work the same. Wait for the clean to finish before trying to build again. On the far right, next to the name Full Path is the folder name that Xcode will be using to build. Make sure it is the new code you just downloaded and not an older folder. If you are updating Loop and did not Delete Old Provisioning Profiles , do it now Return to Xcode and try building your app again. Still failing for phone or watch or both? Try the Unpair and Reboot procedure.","title":"Fix 95% of errors"},{"location":"build/build_errors/#unpair-and-reboot","text":"This is reported to fix a variety of watch building errors and cannot prepare phone for development errors: Open Xcode (if not already open) Plug phone into computer and make sure it is unlocked Using the Xcode menu, select Windows Devices and Simulators On left side, Right-Click (or Control-Click) on your phone Choose Unpair Device It may not be necessary, but the suggestion is to reboot phone, (watch) and Mac - in other words, you can try to build without rebooting, but if that fails, repeat the steps and reboot before trying again. The next time you plug this phone into your computer, you will be asked to trust the computer on the phone (and watch). Note this is unpairing the device from Xcode and your computer, not the same as, and much faster than, unpairing your watch from your phone. If the build fails again, look through the list below and see if you can match your error message with one of the error messages listed later in this page. If you really can't find your solution, then post for help. But help us help you. Ignore yellow and purple warning messages - those are not errors - do not try to fix them Confirm it really is an error not already on this page; read this page carefully, including all the circled bits in the images in the Specific Error Messages section Follow the steps in the Posting for Help section WE CANNOT HELP without version numbers and screenshots Do not take pictures of your computer screen with your phone, use screenshots","title":"Unpair and Reboot"},{"location":"build/build_errors/#posting-for-help","text":"STOP!! Read this section! Important! Before you post in a Loop Social Media site asking for help with build errors, do your work first. The build errors listed below (and the checks listed above) will fix most of problems you may encounter. PLEASE READ THIS PAGE . The volunteers answering questions online would love to spend more time helping people use Loop and less time answering questions that can be addressed by using this page. Therefore, try to resolve your build error yourself. Then, if you need to post for help, please include enough information with the post so the volunteers know where you are in your troubleshooting attempts. Your Post Must Include: The version of Xcode you are using The version of Loop you are building with The version of iOS on your Loop iPhone Free or paid account, and if free, confirmation that you deleted Siri and Push Notification capabilities Confirmation that you are not using an Xcode beta or iOS beta version (so we don't have to ask, please actually type \"I am not using beta versions\") Screenshots of your WHOLE Xcode window and/or Terminal window showing your error and any messages you've seen while working through the build errors/solutions. Do NOT use phone photographs of your computer screen. See below for instructions on how to capture a screenshot. State which fixes from the list below you have already tried AND post the screenshots of the results of those fix attempts.","title":"Posting for help"},{"location":"build/build_errors/#screenshots","text":"Please take screenshots of your issue and use them in your posts. On an Apple computer, press shift-command-4 keys at the same time followed by pressing the space bar and then click on the window of interest. The screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". Use screenshots instead of cell phone images or words whenever possible. Screenshots are higher resolution and easier to read. Use the whole Xcode window screenshot when posting for build help.","title":"Screenshots"},{"location":"build/build_errors/#find-your-error-messages","text":"To begin fixing the error, use the Report Navigator view to find your error message. The key is to (1) READ THE ERROR MESSAGE and then (2) FIND YOUR MESSAGE IN ONE OF THE TOPICS BELOW . Here's a super tip: Merely seeing the \"exit code\" in Xcode is not enough information to discern what error is causing your build to fail; some exit codes have multiple causes. Look at the detailed message to guide your search for the matching solution. Notice the screenshots below have red circles highlighting certain error messages. Read your error message(s) from your screen, being guided by the red circles in the screenshots. Once you find your error message (hint: not \"exit code\"), you can either: Take the error message from your Xcode screen and use LoopDoc's search function to enter in some of that phrase to bring up the appropriate solution topic, or Take the error message from your Xcode screen and read through EACH OF THE TOPICS BELOW. Check each of the red circles to see if you have a match. Kind of like a matching puzzle. For example, if you see \"Invalid active developer path (/Library/Developer/CommandLineTools)\" in your error message, use the search tool in LoopDocs with \"invalid active\". You will get a couple of links and one is the Command Line Tools fix for that error message. Click on the link and you'll find the solution.","title":"Find Your Error Message(s)"},{"location":"build/build_errors/#specific-error-messages","text":"","title":"Specific Error Messages"},{"location":"build/build_errors/#run-destination-is-not-valid-failed-to-prepare-the-device","text":"Error Message: The run destination for name's phone is not valid for running the scheme \"Loop ( Workspace )\" Solution: Follow the link for the Unpair and Reboot procedure. If you are running iOS 16 on your phone, make sure developer mode is turned on.","title":"Run Destination is Not Valid; Failed to Prepare the Device"},{"location":"build/build_errors/#packageresolved-file-corrupted-or-malformed","text":"Error Message: Package.resolved file is corrupted or malformed; fix or delete the file to continue: unsupported schema version 2 This error is new with Loop-dev, which uses Package Dependencies . There are 2 problems shown here The version of Xcode is out of date The graphic was acquired using a camera instead of a screenshot , and yes - that was a joke - using a camera does not cause a build error Solution: Update Xcode , which may require you to update macOS .","title":"Package.resolved file corrupted or malformed"},{"location":"build/build_errors/#couldnt-get-revision-for-package-dependency","text":"","title":"Couldn't Get Revision for Package Dependency"},{"location":"build/build_errors/#many-search-143-for-this-error","text":"This error is new with Loop-dev, which uses Package Dependencies . If you notice a red x in Xcode (as circled in the graphic below) Click on the red x to show the error in the left pane Alternatively, you can click on the icon shown with the red square to see the same information Error Message: Text in error: Uncategorized Couldn't get revision . . . Solution: Refer to the graphic below Click on the folder icon (indicated by red square) Hold down the Control-Key and click the Package Dependencies row to display the dropdown menu (shown in the inset) Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish You can start the build as soon as the Indexing message appears","title":"Many Search 1.4.3 for this Error"},{"location":"build/build_errors/#cycle-dependency","text":"This error is new with Xcode 13.3 (late Sep 2021) which has a new requirement For those who care: the new requirement is that for a certain type of instruction file, the line with the Headers keyword must be located before the line with the Sources keyword There used to be many repositories that did not have lines in that order All of these instruction files have been updated for Loop Master, Loop dev and FreeAPS If you are building with an older copy of the code, you may see this error Error Message: Text in error: Left window (the exact target names are not important): Cycle in dependencies between targets . . . Middle window: Target build order preserved because \"Build Order\" is set to \"Manual Order\" in the scheme settings Solution: No need to quit Xcode - follow these steps using the Xcode Menu bar. (It's possible that only Step 1 is required, but sometimes all steps are needed.) From the Product menu (of Xcode ), select Clean Build Folder From the File menu, select Close Workspace From the File menu, select Open Recent and choose the top line Press the Build Button (play icon)","title":"Cycle Dependency"},{"location":"build/build_errors/#entitlements-error","text":"Error Message: Text in error message can be either of these: Entitlements file \"WatchApp Extension.entitlements\" was modified . . . or Entitlements file \"Loop.entitlements\" was modified . . . Solution: No need to quit Xcode - follow these numbered steps as indicated in the graphic below. Click on the Loop icon under PROJECT From the Product menu (of Xcode ), select Clean Build Folder Press the Build Button (play icon) It turns out that You can start building before indexing completes - just make sure it has started The behavior causing this in Xcode has been reported to Apple","title":"Entitlements Error"},{"location":"build/build_errors/#compileassetcatalog-error","text":"This error is found when there is a space embedded in the path name to your LoopWorspace folder. The good news is that LoopWorkspace seems to be able to build from an iCloud or Dropbox drive. Text in error message: Command CompileAssetCatalog failed with a nonzero exit code. . . Solution: This is very similar to the steps for the WatchApp Entitlements Error but you need to repeat it for 2 targets: Loop and WatchApp - the graphic below matches the step numbers in the list. Click on Loop folder Click on Loop target Click on the General tab Click on the App Icons Source dropdown menu Click on the item already selected (the line will change from red to blank) Repeat the App Icons Source dropdown menu selection for the WatchApp target (Optional) Clear the Build Error (Menu at top of Xcode : Select Product->Clean Build Folder) Press build","title":"CompileAssetCatalog Error"},{"location":"build/build_errors/#carthage-error","text":"You should not see carthage errors, but if you do, you probably did not select Loop ( Workspace ) at the top of the Xcode window. Review the graphic from the Prepare to Build Instructions. Or maybe you are a repeat builder who did not read the updated information and tried to use the old zip-download method. That is no longer supported. Please read all of the Updating page. Or maybe you are trying to build using an old download; some older versions did require carthage . Best practice is to download new code. Error Message: Wrong Version of Carthage Error Applications/ Xcode .app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: one of -create, -thin , -extract , -remove , -replace , -verify_arch \u2026 , -archs, -info, or -detailed_info must be specified. Solution: Download fresh code with Build Select Script (if you haven't already done so) and select Loop ( Workspace ) before building with Xcode .","title":"Carthage Error"},{"location":"build/build_errors/#could-not-locate-device-support-files","text":"Error Message: \"Could not locate device support files.\" That message is telling you that your iOS on the Loop phone requires you to get a newer version of Xcode to be able to build Loop onto that phone. Solution: Update your Xcode version; this may also require a macOS update. Please review the phone iOS driven requirements for Xcode and macOS .","title":"Could Not Locate Device Support Files"},{"location":"build/build_errors/#no-such-module-loopkit-or-similar-message","text":"Error Message: If you see a Cartfile failure and several other red errors (in particular saying there is \"no such module 'LoopKit'\"). Solution : Read the Carthage Error section above.","title":"No Such Module 'LoopKit' or Similar Message"},{"location":"build/build_errors/#developer-license-update-pla-update","text":"Error message: \"The Apple Developer Program License Agreement has been updated, In order to access certain membership resources, you must accept the latest license agreement\". Or you may see \"Unable to process request - PLA Update available. You currently don't have access to this membership resource. To resolve this issue, agree to the latest Program License Agreement in your developer account.\" Solution: You'll need to log onto your developer account at developer.apple.com and accept the latest license agreement.","title":"Developer License Update (PLA Update)"},{"location":"build/build_errors/#could-not-get-a-container-directory-url","text":"Error message: \"Could not get a container directory URL . Please ensure App Groups are set up correctly in entitlements.\" Solution : To resolve this error, you will need to click on the Loop target's signing area and then the plus-sign in the App Groups area under the signing. Copy and paste the bundle indentifier into the new container that starts with group. and then add Group to the end of the name. Click OK to save. Note, the line will start with lower case group. followed by your bundle identifier and an upper case Group added to the end of the bundle identifier. The final App Group should now have a blue check box, the name should start with group and end with LoopGroup . See the screenshot as an example. Click the build button after your App Group is setup similarly and you should be good.","title":"Could Not Get a Container Directory URL"},{"location":"build/build_errors/#missing-command-line-tools","text":"Error message: \"Invalid active developer path (/Library/Developer/CommandLineTools)\" Solution: Go to your Xcode preferences and under the Locations tab, select your Xcode version (the figure shows 14.0.1 - yours should match your Xcode version) in the dropdown menu for Command Line Tools.","title":"Missing Command Line Tools"},{"location":"build/build_errors/#device-management-could-not-launch-loop","text":"Error message: \"Could not launch \"Loop\". Verify the Developer App certificate for your account is trusted on your device. Open Settings and navigate to General -> Device Management, then select your Developer App certificate to trust it.\" New Solution First try the Unpair and Reboot process above. If that doesn't work, then try the solution listed below. Solution: If you get this message and are unable to find the Device Management option in your phone settings, then we need to do a little extra step to clear out some old info. Plug the phone into the computer and open Xcode Click the \"Window\" menu item in Xcode and then choose \"Devices and Simulators\" Right click your phone on the left and pick \"Show Provisioning Profiles\" Delete all of the items in the list that have Loop in the name Go to your four signing targets and change the signing team back to \"None\" for a quick bit, and then change back to your regular signing team name again. Rebuild Loop That should clear the out, problematic profiles and allow a successful build. If your problem persists after that, then you might need to do total reset of your phone to clear out the pesky problem. Before you do this, you may want to Post for Help to make sure it is really necessary: Wipe the iPhone clean and set it up as a new device FIRST - write down or screenshot all your settings Pod users - you will have to start a fresh pod after this If you want your old pod to continue giving you basal rate, don't replace the pod before wiping your phone. Once the phone is reset and a new Loop app is added, you must start a new pod. The old pod should have the sound connection broken before being discarded because you won't be able to deactivate the pod. Delete all certificates from your Developer account (you'll need to login to your Developer account to do that) Delete your old Loop code download and get a new one. Rebuild Loop on the phone with the new download of Loop code. Start a new pod with the new Loop app on the reset phone.","title":"Device Management Could Not Launch Loop"},{"location":"build/build_errors/#pending-certificate-request","text":"Error message: \"You already have a current iOS Development certificate or a pending certificate request.\" Solution: This error message has recently started to appear for some new Loop builders. To resolve the issue, please log in to your Developer account at developer.apple.com and then click on \"Certificates, Identifiers & Profiles\". Under that screen, you will see \"Development\" under the \"Certificates\" section in the column on the left. You will need to click on the certificates, and choose \"revoke\" from the options that show after you click on the certificate. Confirm the warning message that will appear asking \"Do you want to revoke the certificate?\" After you do that, return to Xcode and open up Xcode preferences. Under the Accounts section of Preferences, click on the minus sign to delete your Apple ID. Re-enter your Apple ID (yes...add that account right back that you literally just deleted), return to your Loop's target signing areas in Xcode and your error message should have resolved as a new certificate will have been issued and a provisioning profile should have been created automatically. You can verify the iOS development certificates are working by clicking on \"Manage Certificates\" in Xcode Preferences, Accounts and viewing the iOS Development Certificates. You should have one for your account that has a clean status similar to the screenshot below.","title":"Pending Certificate Request"},{"location":"build/build_errors/#command-codesign-failed","text":"Error message: \"errSecInternalComponent, Command CodeSign failed with a nonzero exit code\" Solution: This error message is likely due to inadvertently saying \"no\" to allowing Keychain Access or changing your computer or AppleID password. Regardless, the solution is as follows: Close Xcode Open your Keychain Access application (found in Applications within the Utilities folder) In the upper left corner of keychain access, make sure you have the keychain login highlighted and then right-click the lock next to the login . Click the lock closed, and then click the lock to open it again. You will be prompted for a password. Enter your computer admin password. Close Keychain Access app. Open your Loop project again in Xcode . In the main Xcode menu (grey menu bar at the very top of your Apple display area), select Product and then select the option for Clean . (Keyboard shortcut is shift-command-k) Now try rebuilding your Loop app. If you ever get prompted again to allow Xcode access to Keychain, make sure to click on the option to Always Allow.","title":"Command CodeSign Failed"},{"location":"build/build_errors/#unrecognized-arguments","text":"Error message: \"Unrecognized arguments: --cache-builds\" Solution: This is a homebrew / carthage error, so I don't think you'll see this. If you do, download a fresh copy of Loop code and try again. If it repeats, it is time to request assistance. Please read Posting for Help .","title":"Unrecognized Arguments"},{"location":"build/build_errors/#abort-with-payload","text":"Error message: \" Abort with payload \" Your app will only open briefly with a white screen and then close, if you build with this error. Solution: This error message is caused by having the Loop download folder in an iCloud mapped drive when doing the zip download. Move your Loop download folder back to the Downloads folder, then rebuild. LoopWorkspace builds with Xcode 13 appear to work fine with an iCloud drive. You may run into the spaces in your path name problem - which has a different solution.","title":"Abort with Payload"},{"location":"build/build_errors/#apple-watch-issues","text":"","title":"Apple Watch Issues"},{"location":"build/build_errors/#apple-watch-loop-app-not-appearing","text":"Error: Apple watch app is not appearing. Solution: This error usually appears because you have not updated the watchOS prior to building Loop, or you didn't have your Apple watch paired at the time of building Loop. Don't forget to open the iPhone's Watch app, select My Watch tab on the bottom left, scroll all the way down, and click Install for the Loop app listed at the very bottom under \"available apps\".","title":"Apple Watch: Loop App Not Appearing"},{"location":"build/build_errors/#apple-watch-loop-app-not-installing","text":"Before trying this solution, see if the Unpair and Reboot procedure works. Error: The Loop app appears on the list of apps available to install on the watch, but when you press \"install\", and it goes through the animation of filling in the circle while it's installing, but then at the end it just toggles back to saying \"INSTALL\". Solution: Plug your iPhone into the computer and start Xcode . On your watch, look for a prompt that says \"Trust this computer\". Scroll down on the watch face and select the \"Trust\" button. In Xcode , go to the top menu bar and select \"Clean Build Folder\" from the Product menu option, and then rebuild your Loop app. If the watch app still fails to install properly, the next section should work.","title":"Apple Watch: Loop App Not Installing"},{"location":"build/build_errors/#apple-watch-loop-app-not-running-on-watch","text":"Error: Tapping the Loop app icon on the watch results in flash of the watch screen and then return to the Loop app icon or a brief display of the watch interface and then return to the Loop app icon. Solution: Plug in your iPhone, with the watch already paired, into the computer and start Xcode with your current build folder. In Xcode , from the list of schemes where you normally choose Loop ( Workspace ), choose the WatchApp scheme (near the bottom of the list) and then select your watch (not a simulator) from the device list, see the graphics below. Press the play button to build and deploy the WatchApp directly to your watch. It will launch correctly and will not crash when you subsequently launch it from the complication or your watch Home Screen.. Warning: Make sure your watchOS is up to date with respect to your phone iOS . If not, you may need to update to be successful. On pressing clicking build/play, some people report receiving an error stating \u201ciPhone/Apple Watch are ineligible because the OS on the watch doesn\u2019t support WatchKit App Products\u201d or similar wording. This is a known issue with some Mac USB ports. Fixes in preference order are: 1) swap which USB port is in use; 2) unplug and replug the USB cable from both the iPhone and Mac; or 3) as a last resort, reboot the iPhone and Mac. Don't forget to select Loop( Workspace ) after building to the watch before trying to build to a phone.","title":"Apple Watch: Loop App Not Running on Watch"},{"location":"build/code_customization/","text":"Code Customizations \u00b6 Based on Loop users\u2019 experience, there are some customizations that you may want to incorporate ahead of building your Loop app and Apple Watch app. These customizations must be done prior to building the Loop app onto your iPhone, they cannot be done from within the app itself. If you are an experienced builder - you know what to do. Build then Customize \u00b6 For new builders, please build the code before you make any changes. Start with Open Loop and familiarize yourself with the interface. Later, you can make the customization(s) you desire (using Xcode as your editor) on the same download as the original build and then build again to the phone. The second build will be much faster than the first build. When applying a customization, the downloaded code should be fairly recent. If you are not sure, get a fresh download. If you know your downloaded code is the Current Release , you can skip the download and use the same folder as last time. Find My Dowloaded Loop Code \u00b6 Refer to the graphic below. The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom. Open Finder Navigate to Downloads/BuildLoop and look for your download by name and date Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145, and inside that folder open the LoopWorkspace folder Inside the Downloads/BuildLoop/Loop-220803-1145/LoopWorkspace folder, double-click on Loop.xcworkspace Xcode automatically opens to that particular download You can then make the customizations and build to your phone Experienced Builders Experienced builders will often build a fresh download to a simulator for their phone iOS (not their phone) to ensure download is good and is compatible with macOS , Xcode and phone iOS . Once the build is successful, they apply their customizations and build again to the simulator. Last step is to build the customized version to their real phone. Be sure to read the Instructions for Finding the Lines . Line numbers may change Every effort will be made to update the line numbers as the code is updated, but there may be times where the screenshots and line numbers differ from the current version of Loop code. You may notice some customizations list line numbers for different branches If you cannot identify a line that looks exactly like the example - do not guess - go to your favorite social media group and ask for help Loop 2.2.x vs Loop 3 (Loop-dev) Loop-dev is still being tested - but when it is released it will be Loop 3. To simplify the amount of changes required after the release, the labels indicate Loop 2.2.x or Loop 3, if needed. Users of Loop Master refer to the Loop 2.2.x examples. Users of Loop-dev refer to the Loop 3 examples. Note that some changes are in a different file for Loop-dev (part of the architecture upgrade for the app). Instructions for Finding the Lines \u00b6 For each customization, you will be given landmarks to find the correct location in the code. You can choose to search using the Key_Phrase or navigate to the file in the folder structure and look for (cmd-L #) the line number. Note that the folder is listed with respect to the LoopWorkspace directory. For each change you make in Xcode - be sure to save the file - otherwise the modification does not get built into your app. Key_Phrase use the copy button at right, paste into search Folder: Loop/subfolder1/subfolder2/etc. File: filename.swift, line number(s) There may be a figure illustrating the change. Below the figure, the original, and in some cases, the modified code will be displayed as text. Most customizations show the original line of code that you will be changing Sometimes that line is long and you may need to use the scroll bar to see the entire line in LoopDocs In most cases, an example customization is shown to assist you in deciding how to edit the line to meet your needs To search using the Key_Phrase (see graphic below for clarification): A copy button is available when you hover your mouse in the right-hand side of the block below the title Key_Phrase ; click on it to copy the phrase In Xcode , tap the Find menu item and select Find in Workspace Paste the text into the Find search-box that opens on upper left of Xcode screen and hit enter You should see a message 1 result in 1 file (for most cases) Some customizations will show more than one result, but that will be explained in the directions for that customization The file in which the line is located is reported showing the line in that file containing the Key_Phrase Click on the one you think is correct and it will display in the main middle window of Xcode with the Keyword highlighted on the line you selected The Key_Phrase was selected to limit the search to just the relevant line (if possible) In some cases, the Key_Phrase gets you close but not exactly on the line where you need to make the modifications - please read carefully Folders and Icons \u00b6 The folders listed in the code customization steps below are the actual directory names as stored on your computer. However, a shortened name is used for some folders when being displayed as icons in Xcode . Some people prefer to search through the folder icons to find a file instead of using the Find in Workspace feature. In the graphic below, the user searched for an item found for both Eros and DASH pods (in two different files). The top part of the graphic shows the result of the search with user clicking on one instance. On the right side of the top graphic (highlighted by red rectangle) is the name of the selected file on the computer with the full directory name. Inset 1: User clicked on the folder icon (highlighted by red square) to see the list of icons for folders included in the LoopWorkspace Inset 2: User opens folders under RileyLink icon to open OmniKit, then OmnipodCommon to find the Pod.swift file These folder icon names are different from the directory names on the computer: Folder Icon Name Directory Name ShareClient dexcom-share-client-swift RileyLink rileylink_ios Amplitude Amplitude- iOS All other icons and directory names match. Disable Authentication for Bolusing \u00b6 Depending on your iPhone preferences and model, you may have Face ID or Touch ID enabled. Those security features will also be used to authenticate bolus delivery in Loop. You can choose to disable authentication (i.e., not require Face ID, Touch ID, or passcode for bolusing) through the following code customization. Loop 3 For Loop 3 (under test as Loop-dev), this controls the authorization requirement to modify Therapy Settings as well as to confirm bolus delivery. Key_Phrase canEvaluatePolicy(.deviceOwnerAuthentication Loop 2.2.x Folder: Loop/View Controllers File: BolusViewController.swift, Line 529 Loop 3 Folder: LoopKit/LoopKitUI/Extensions/ File: Environment+Authenticate.swift, Line 20 The screenshot below was taken with Loop v2.0 when the line number was 201; with Loop 2.2.x versions, that same code is found at line 529. Add the false && as shown in the screenshot below: Loop 2.2.x \u00b6 Code Before Modification if context.canEvaluatePolicy(.deviceOwnerAuthentication, error: nil) { Code After Modification if false && context.canEvaluatePolicy(.deviceOwnerAuthentication, error: nil) { Loop 3 \u00b6 Code Before Modification if context.canEvaluatePolicy(.deviceOwnerAuthentication, error: &error) { Code After Modification if false && context.canEvaluatePolicy(.deviceOwnerAuthentication, error: &error) { Default Carb Absorption Times \u00b6 Loop\u2019s default carb absorption times are based on the high, medium, and low glycemic index absorption curves presented in Think Like A Pancreas by Gary Scheiner. With Loop 2.2.x, the lollipop (fast) icon is set for 2 hours, taco (medium) icon for 3 hours, and pizza (slow) icon for 4 hours. This is modified for Loop 3 to 30 minutes, 3 hours and 5 hours respectively. Key_Phrase defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes Loop 2.2.x Folder: Loop/LoopCore File: LoopSettings.swift Line: 16 (2.2.4 master), 41 (2.2.4 AB), 50 (2.2.5 and later) Loop 3 Folder: Loop/LoopCore File: LoopCoreConstants.swift Line: 16 For example, if you wanted to modify Loop 2.2.9 so that lollipop represents a 30 minute absorption and pizza a 5 hour absorption, the edit would be as follows: Code Before Modification for Loop 2.2.x public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .hours(2), medium: .hours(3), slow: .hours(4)) Code After Modification or default for Loop 3 public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .minutes(30), medium: .hours(3), slow: .hours(5)) Note that if you change from 2 hours to 30 minutes, you must also change the indication before the parentheses. Adjust Percent Bolus for Automatic Bolus \u00b6 If you are mostly happy with the Dosing Strategy of Automatic Bolus but wish it delivered more or less insulin during every Loop interval, then this customization is for you. This customization changes the percent of the recommended bolus used for automatic delivery. The method for calculating that recommendation is not changed by this modification. The default value is 40% (0.4). It is recommended you take small changes of 0.1 at a time. Once you modify it once and try it out for a while, it\u2019s easy to go back and change it again. With Loop 2.2.x, the end of the line has a comment // % , whereas with Loop 3, there is an explanatory comment (line starting with // ) before the line. Change just the number and double check that the value is less than 1. Key_Phrase let bolusPartialApplicationFactor Loop 2.2.x Folder: Loop/LoopCore File: LoopSettings.swift Line: 89 (2.2.5 and later) Loop 3 Folder: Loop/Loop/Models File: LoopConstants.swift Line: 44 Code Before Modification public let bolusPartialApplicationFactor = 0.4 Code After Modification to 50% of recommended insulin public let bolusPartialApplicationFactor = 0.5 Do not exceed 1.0 This number should never be bigger than 1 (you\u2019d be getting more than Loop recommends). If you think you need more than 1, consider your settings and meal entries. Modify Override Sensitivity \u00b6 Some people want finer settings on the override sensitivity picker and may want to limit the overall range for overrides \u2013 especially for children. 1% Settings Available without Customization With the advent of Loop 3, the Override Sensitivity values are not limited by the default picker values of 10%. Not available in Loop 2.2.x Not available in FreeAPS (based off Loop 2.2.x) Select 1% Sensitivity Any override more than a factor of 2 from 100% can cause Loop predictions to be wrong \u2013 especially if a carb count is entered. (An override is NOT the same as a manual temp basal - it changes insulin sensitivity factor and carb ratio in addition to the basal rate needed for zero change in IOB for the duration of the override.) This example customization changes the lower bound for sensitivity to 50% (factor of 2 smaller than 100%) and provides 5% steps. Key_Phrase let allScaleFactorPercentages Loop 2.2.x and Loop 3 Folder: LoopKit/LoopKitUI/Views File: InsulinSensitivityScalingTableViewCell.swift, Line 19 Code Before Modification private let allScaleFactorPercentages = Array(stride(from: 10, through: 200, by: 10)) Code After Modification to 50% to 200% by steps of 5% private let allScaleFactorPercentages = Array(stride(from: 50, through: 200, by: 5)) Modify Maximum Carb Entry \u00b6 Some people want to limit the maximum number of carbs that can be entered in one entry \u2013 especially for children or folks who eat lower carb. This helps prevent accidental typos, e.g., entry of 115 g instead of 15 g for a meal. Key_Phrase maxQuantity = As shown in the graphic below, this phrase shows up in 2 places, only the first one should be modified. Loop 2.2.x and Loop 3 Folder: Loop/Loop/View Controllers File: CarbEntryViewController.swift, Line 33 (Loop 2.2.x) or 36 (Loop 3) Code Before Modification var maxQuantity = HKQuantity(unit: .gram(), doubleValue: 250) Code After Modification to limit carb entry to 99 g var maxQuantity = HKQuantity(unit: .gram(), doubleValue: 99) Pods: Add Extra Insulin on Insertion \u00b6 The default value is 0.0 u of extra insulin. If you use this customization, start with a small number and work your way up. If you are coming from manual podding and routinely gave yourself an extra bolus with your PDM at pod change time, you may not need nearly as much with Loop - be conservative. Note that Loop does not include the amount of insulin in the prime or insertion steps in your IOB . The pod reports every pulse that it delivers to Loop. If you look in the Pod Settings insulin delivered row, that is the total delivered by the pod minus the (prime plus insertion) amounts. The only way to know that you successfully made this change is to count the clicks. Normal insertion is 0.5 U (0.5 U / 0.05 U per click = 10 clicks). So if you add 0.35 U to the \"extra\" value, you should get 0.35 / 0.05 = 7 extra clicks. In other words, 17 total clicks after you press insert. This code change is found in one location for Eros Pods (called Omnipod throughout the app) and DASH Pods (called Omnipod Dash throughout the app). I tend to change both files, but if you're only using one kind of pod, that is really not necessary. Key_Phrase let cannulaInsertionUnitsExtra Loop 2.2.x: Eros Pod (ones that require a RileyLink compatible device) Folder: rileylink_ios/OmniKit/Model File: Pod.swift, Line 72 (Loop 2.2.x) Eros or DASH Pod (Loop 3 only) Folder: rileylink_ios/OmniKit/OmnipodCommon (Eros) Folder: OmniBLE/OmniBLE/OmnipodCommon (DASH) File: Pod.swift, Line 87 (Eros); Line 82 (DASH) When finding the file using the folder icons in Xcode , instead of using the Key_Phrase in Find in Workspace , the RileyLink icon represents the rileylink_ios folder name on the computer. Code Before Modification public static let cannulaInsertionUnitsExtra = 0.0 // edit to add a fixed additional amount of insulin during cannula insertion Code After Modification to add 0.35 U public static let cannulaInsertionUnitsExtra = 0.35 // edit to add a fixed additional amount of insulin during cannula insertion Modify the Guardrails \u00b6 The Therapy Setting Guardrails are for Loop 3 (Loop-dev) only. If you build Loop-dev over a version of Loop 2.2.x or FreeAPS where the Correction Range is lower than the default value of 87 mg/dL (4.8 mmol/L), your app will crash when you try to onboard. The solution (until this is fixed) is to customize and lower the minimum value to be at or below the value you have currently set. Rebuild the app with the modified settings and you should be able to continue the onboarding process. Key_Phrase Guardrail(absoluteBounds: Loop 3 only Folder: LoopKit/Extensions File: Guardrail+Settings.swift Line: 12 for suspendThreshold Line: 26 for correctionRange Code Before Modification static let suspendThreshold = Guardrail(absoluteBounds: 67...110, recommendedBounds: 74...80, unit: .milligramsPerDeciliter, startingSuggestion: 80) and static let correctionRange = Guardrail(absoluteBounds: 87...180, recommendedBounds: 100...115, unit: .milligramsPerDeciliter, startingSuggestion: 100) Modify the 67 for suspendThreshold or 87 for correctionRange to the desired value. Loop automatically converts from mg/dL. So you must enter values reasonable for mg/dL (18 times higher than for mmol/L). If fixing a crashed app during onboarding, you must lower the 87 to match or be less than what is in your old settings. Adjust Future Carbs Time Interval \u00b6 Loop 3 (Loop-dev) limits the future time change allowed to 1 hour. Key_Phrase cell.datePicker.maximumDate = date.addingTimeInterval Loop 3 only: Folder: Loop/Loop/View Controllers File:CarbEntryViewController.swift Line: 361 Default shown below (for maximum and minimum): Code Before Modification cell.datePicker.maximumDate = date.addingTimeInterval(.hours(1)) cell.datePicker.minimumDate = date.addingTimeInterval(.hours(-12)) Change the maximumDate to the number of hours in the future you desire. Remember that Loop may increase insulin dosing for future carbs - make sure that they actually arrive. The minimumDate is how far back in the past you can modify time. The default is 12 hours in the past. Adjust the Watch Crown Sensitivity \u00b6 The rate of change of the carb and bolus entry pickers when using the digital crown can be altered as can the rotation required to confirm a bolus on the watch. If you are running an older series watch - you may want to make these customizations. When I switched from Series 3 to Series 7 watch - it was amazing. I got a graph on the main watch screen I didn't even know existed and the bolus acceptance was a breeze! There are a number of places where you need to make changes (2 for sensitivity and 2 for bolus confirmation for Loop 2.2.x), so walk though them one at a time. For the Watch Crown Sensitivity , the 1/24 value is the ratio of rotations of the crown to the amount of change in the value. Changing it to 1/12 would mean that half as many turns would be needed for the same amount of carb or bolus entry. The Loop 2.2.x customizations are throughly tested by many users. The Loop 3 customization is provided from code inspection and one test - use with care. Loop 2.2.x Sensitivity \u00b6 Key_Phrase let rotationsPerIncrement Folder: Loop/WatchApp Extension/Controllers File: AddCarbsInterfaceController.swift, Line: 249 Initial Value: 1/24; try 1/12 to increase change in picker value for a given motion Key_Phrase let rotationsPerValue Folder: Loop/WatchApp Extension/Controllers File: BolusInterfaceController.swift, Line: 191 Initial Value: 1/24; try 1/12 to increase change in picker value for a given motion Loop 2.2.x Bolus Confirmation \u00b6 In order to reduce the amount the user has to spin the watch crown to confirm a bolus, there are 3 numbers on 2 lines that must be modified. You will be working in the same file you just used to modify the watch sensitivity to adjusting the bolus amount, BolusInterfaceController.swift. For example to change rotation required to 70% of the default, change 1.0 to 0.7 in 3 places on those 2 lines. This Key_Phrase returns 3 lines, the second 2 of which are the ones in that file where the change is required: Key_Phrase abs(accumulatedRotation) Folder: Loop/WatchApp Extension/Controllers File: BolusInterfaceController.swift, Lines: 311 and 360 Initial Value: 1.0; try 0.7 to decrease how much is needed to confirm bolus Loop 3 Digital Crown Adjustments \u00b6 These are new instructions and the user should take care - and please report back if you have problems. First - try it with no customization. Then make small changes. This key phrase will indicate three different files in the same folder as shown in the graphic below - you can adjust each in turn as you desire. When you click on the line, the quantity you change is a few lines below where you find the Key_Phrase , except for the CarbAndDateInput file. Key_Phrase .digitalCrownRotation Folder: Loop/WatchApp Extension/Views/Carb Entry & Bolus Modify Bolus Confirmation Motion \u00b6 File: BolusConfirmationView.swift, line 59 Initial Value for scalingRotationBy is 4 Decrease to require less motion to confirm bolus (use whole numbers only), start with 3 Modify Bolus Picker Sensitivity \u00b6 File: BolusInput.swift, line 53 Initial Value for rotationsPerIncrement is 1/24 A change to 1/12 increases the change in picker value for a given motion Modify Carb and Time Picker Sensitivity \u00b6 File: CarbAndDateInput.swift, line 68 Initial Value for rotationsPerIncrement is 1/24 A change to 1/12 increases the change in picker value for a given motion Expiration Notification Customization \u00b6 An expiration notification feature has been added to Loop. You get a notification when you open the Loop app to alert you that the expiration is approaching. (Not available with version v2.2.4 and earlier.) Read Loop App Expiration Notification to see the expiration reminder Read Loop App Expiration Date if you have an older version of Loop If you prefer a different notification time and frequency, there are two lines you can modify: Loop 2.2.x and Loop 3 Folder: Loop/Managers File: ProfileExpirationAlerter.swift Line 16: modify how long before expiration you get the FIRST notification Line 28: modify how frequently you will be notified Key_Phrase expirationAlertWindow: TimeInterval Key_Phrase minimumTimeBetweenAlerts: TimeInterval Default code for line 16: static let expirationAlertWindow: TimeInterval = .days(20) Example modifications to First Notification: 30 days: change .days(20) to .days(30) 12 hours: change .days(20) to .hours(12) Default code for line 28: let minimumTimeBetweenAlerts: TimeInterval = timeUntilExpiration > .hours(24) ? .days(2) : .hours(1) Modify Frequency of Repeated Notifications (Three Values): This phrase: > .hours(24) ? .days(2) : .hours(1) Rewritten as: > Time_A ? Frequency_A : Frequency_B , means: Use Frequency_A if there is more time between now and the expiration date than Time_A Use Frequency_B if there is less time between now and the expiration date than Time_A You can enter Time or Frequency as .days(value) , .hours(value) or .minutes(value) . Free App Users: An example change that a Free Loop App user (who has to build once a week) might choose is: > .hours(4) ? .days(10) : .hours(2) Combined with an .hours(12) on line 16, they would get notified at 12 hours, 4 hours and 2 hours before expiration on the day of expiration and only when the app is opened. Since you'll be building once a week, you can play around with these values until you are happy. Exponential Insulin Curve \u00b6 The Exponential Insulin Curve Models (Rapid-Acting Adult, Rapid-Acting Child, and Fiasp) default to an insulin duration of 360 minutes...but the peak activity of the various curves differs, as follows: Rapid-acting adult curve peaks at 75 minutes Rapid-acting child curve peaks at 65 minutes Fiasp peaks curve peaks at 55 minutes If you wish to customize these values, please make sure you know what you are doing. This is not a modification recommended for Loop novices. For Loop 3 users, the file is in a different submodule and includes more models. Key_Phrase MARK: - Model generation Loop 2.2.x Folder: Loop/LoopCore/Insulin File: ExponentialInsulinModelPreset.swift Lines: actionDuration (20 to 29) peakActivity (31 to 40) effectDelay (42 to 51) Loop 3 << NOTE more models Folder: LoopKit/LoopKit/Insulin/ << NOTE new location File: ExponentialInsulinModelPreset.swift Lines: actionDuration (19 to 32) peakActivity (34 to 47) effectDelay (49 to 62) Loop Logo \u00b6 If you want an app logo other than the default green circle for your Loop app, you can easily customize this. To make it easy to generate the correct sizes of icons, you can use a site like appicon.build or appicon.co and just drag and drop your source image. The source image needs to be 1024 pixels x 1024 pixels. The site will email you a zip file or automatically download a set of files. Highlight and copy the contents of the Appicon.appiconset that you are sent, including the Contents.json file Use Finder to Navigate to the LoopWorkspace folder. These instructions assume you used the Build Select Script - if your files are in a different folder, make the appropriate adjustment. Use Finder to navigate to Downloads / BuildLoop and open the folder with the most recent date (e.g., Loop-Master-211006-0524) Double-click on the LoopWorkspace folder Double-click on the AdditionaAssets.xcassets folder Double-click on the CustomLoopIcon.appiconset folder Replace the contents of the Appicon.appiconset with your copied images and Contents.json file. Rebuild your app You may see a yellow warning that there are \u201cunassigned children\u201d depending on the images the app icon generator tool produced. The unassigned children alert will not prevent your app from building, it\u2019s simply because there are more sizes of images than Loop app uses. You can just leave the unassigned children alone (wow...how often do you get to say that phrase?). And now you'll be the proud new owner of a custom Loop icon. Additional Customizations \u00b6 Additional customizations may be found on another website, especially for older versions of the app. If you did not find the customization you want here on LoopDocs, then try the Loop and Learn Customization Page . Check that page in case this list is not up to date. Add Lyumjev Insulin Model (this is only needed for Loop 2.2.x, included in Loop 3) Pods: Increase Log File History Hours (only needed for Loop 2.2.x) Medtronic: Disable mySentry (only needed for older versions of Loop 2.2.x) Pods: Change Default Expiration Reminder (only needed for Loop 2.2.x) Emoji Modifications Disable Suspend Beeps (only needed for Loop 2.2.x) Note that the other site has an index that points back to LoopDocs if the customization is found on this page. Additional Customizations for Loop dev \u00b6 The customizations below only work with the Loop dev branch . You should be comfortable typing commands in a terminal You should be comfortable with manipulations (as directed) with Xcode You will need to open a terminal in the LoopWorkspace folder of the code that you previously downloaded The next section provides instructions on opening the terminal in the correct place Open a Terminal in LoopWorkspace Folder \u00b6 Refer to the graphic below. The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom. Double clicking on that file opens Xcode ; but to apply customizations, you need to type commands in the terminal. Open Finder Navigate to Downloads/BuildLoop and look for your download by name and date Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145 Find the LoopWorkspace folder icon (dashed-blue rectangle) Hold down the CTRL key and click (or right-click) LoopWorkspace A menu appears - select New Terminal at Folder (near the bottom of the list) This new terminal window is now in the LoopWorkspace folder needed to type commands to apply patches. Custom Type One LoopPatches \u00b6 Several items have been consolidated into a set of patches found at CustomTypeOne/LoopPatches . These patches only work with Loop dev branch (downloaded after July 14, 2022). You must install the patches following the directions carefully. Add Libre App to Loop Phone \u00b6 This method only works for Loop dev branch and only for some Libre sensors. The US versions for Libre 2 cannot be read with an iPhone. There are several options for code that will read the raw Libre values and convert them into glucose readings. You must do your own research to decide which code to use. Be aware that you must perform careful calibrations to maintain accurate glucose estimates. These are the Libre iOS app options. xDrip4iOS: Documentation Check to see if your sensor is compatible To use this code with Loop, you must \"build it yourself\" with the same developer ID as you use with Loop (directions are in the documentation) If you use the TestFlight installation method, you will not be able to use this with Loop (on your phone without needing an internet connection) GlucoseDirect: README file on github repository If you use the TestFlight installation method, you will not be able to use this with Loop LibreTransmitter for Loop: README file on github repository LibreTransmitter is incorporated into Loop directly, so there not a separate app to be installed Refer to Modify Loop to use Libre Once you have chosen the desired app, you need to install it on your Loop phone using the same developer ID as was used for the Loop app and then you must modify the Loop dev code that you previously downloaded. Modify Loop to use Libre \u00b6 None of these methods have been tested by the LoopDocs team. This information is copied from zulipchat conversations (shown in links below). For your selected app to read the Libre, you must also add a client to Loop dev to interface with the \"reader\" app. You only need to add the client for the app you've chosen for accessing your Libre sensor. However, you may find watching the video for GlucoseDirectClient and reading the step-by-step instructions for xdrip-client-swift or LibreTransmitter may together give you a better idea how to incorporate your preferred app with Loop dev. Add a client that interfaces with xDrip4iOS: Add xdrip-client-swift to Loop dev Note - there are extra details visible when you click on the black arrow icons in this file zulipchat converstation Add a client that interfaces with GlucoseDirect: Add GlucoseDirectClient zulipchat conversation The instructions are in the video on the GlucoseDirectClient repo page Add LibreTransmitter to Loop as a plugin: LibreTransmitter for Loop: README file on github repository LibreTransmitter is incorporated into Loop directly, so there not a separate app to be installed zulipchat conversation The required GetGlucoseFromRaw.swift file is not included in the repository due to legal concerns, so you have to get it from elsewhere","title":"Customize your Loop"},{"location":"build/code_customization/#code-customizations","text":"Based on Loop users\u2019 experience, there are some customizations that you may want to incorporate ahead of building your Loop app and Apple Watch app. These customizations must be done prior to building the Loop app onto your iPhone, they cannot be done from within the app itself. If you are an experienced builder - you know what to do.","title":"Code Customizations"},{"location":"build/code_customization/#build-then-customize","text":"For new builders, please build the code before you make any changes. Start with Open Loop and familiarize yourself with the interface. Later, you can make the customization(s) you desire (using Xcode as your editor) on the same download as the original build and then build again to the phone. The second build will be much faster than the first build. When applying a customization, the downloaded code should be fairly recent. If you are not sure, get a fresh download. If you know your downloaded code is the Current Release , you can skip the download and use the same folder as last time.","title":"Build then Customize"},{"location":"build/code_customization/#find-my-dowloaded-loop-code","text":"Refer to the graphic below. The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom. Open Finder Navigate to Downloads/BuildLoop and look for your download by name and date Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145, and inside that folder open the LoopWorkspace folder Inside the Downloads/BuildLoop/Loop-220803-1145/LoopWorkspace folder, double-click on Loop.xcworkspace Xcode automatically opens to that particular download You can then make the customizations and build to your phone Experienced Builders Experienced builders will often build a fresh download to a simulator for their phone iOS (not their phone) to ensure download is good and is compatible with macOS , Xcode and phone iOS . Once the build is successful, they apply their customizations and build again to the simulator. Last step is to build the customized version to their real phone. Be sure to read the Instructions for Finding the Lines . Line numbers may change Every effort will be made to update the line numbers as the code is updated, but there may be times where the screenshots and line numbers differ from the current version of Loop code. You may notice some customizations list line numbers for different branches If you cannot identify a line that looks exactly like the example - do not guess - go to your favorite social media group and ask for help Loop 2.2.x vs Loop 3 (Loop-dev) Loop-dev is still being tested - but when it is released it will be Loop 3. To simplify the amount of changes required after the release, the labels indicate Loop 2.2.x or Loop 3, if needed. Users of Loop Master refer to the Loop 2.2.x examples. Users of Loop-dev refer to the Loop 3 examples. Note that some changes are in a different file for Loop-dev (part of the architecture upgrade for the app).","title":"Find My Dowloaded Loop Code"},{"location":"build/code_customization/#instructions-for-finding-the-lines","text":"For each customization, you will be given landmarks to find the correct location in the code. You can choose to search using the Key_Phrase or navigate to the file in the folder structure and look for (cmd-L #) the line number. Note that the folder is listed with respect to the LoopWorkspace directory. For each change you make in Xcode - be sure to save the file - otherwise the modification does not get built into your app. Key_Phrase use the copy button at right, paste into search Folder: Loop/subfolder1/subfolder2/etc. File: filename.swift, line number(s) There may be a figure illustrating the change. Below the figure, the original, and in some cases, the modified code will be displayed as text. Most customizations show the original line of code that you will be changing Sometimes that line is long and you may need to use the scroll bar to see the entire line in LoopDocs In most cases, an example customization is shown to assist you in deciding how to edit the line to meet your needs To search using the Key_Phrase (see graphic below for clarification): A copy button is available when you hover your mouse in the right-hand side of the block below the title Key_Phrase ; click on it to copy the phrase In Xcode , tap the Find menu item and select Find in Workspace Paste the text into the Find search-box that opens on upper left of Xcode screen and hit enter You should see a message 1 result in 1 file (for most cases) Some customizations will show more than one result, but that will be explained in the directions for that customization The file in which the line is located is reported showing the line in that file containing the Key_Phrase Click on the one you think is correct and it will display in the main middle window of Xcode with the Keyword highlighted on the line you selected The Key_Phrase was selected to limit the search to just the relevant line (if possible) In some cases, the Key_Phrase gets you close but not exactly on the line where you need to make the modifications - please read carefully","title":"Instructions for Finding the Lines"},{"location":"build/code_customization/#folders-and-icons","text":"The folders listed in the code customization steps below are the actual directory names as stored on your computer. However, a shortened name is used for some folders when being displayed as icons in Xcode . Some people prefer to search through the folder icons to find a file instead of using the Find in Workspace feature. In the graphic below, the user searched for an item found for both Eros and DASH pods (in two different files). The top part of the graphic shows the result of the search with user clicking on one instance. On the right side of the top graphic (highlighted by red rectangle) is the name of the selected file on the computer with the full directory name. Inset 1: User clicked on the folder icon (highlighted by red square) to see the list of icons for folders included in the LoopWorkspace Inset 2: User opens folders under RileyLink icon to open OmniKit, then OmnipodCommon to find the Pod.swift file These folder icon names are different from the directory names on the computer: Folder Icon Name Directory Name ShareClient dexcom-share-client-swift RileyLink rileylink_ios Amplitude Amplitude- iOS All other icons and directory names match.","title":"Folders and Icons"},{"location":"build/code_customization/#disable-authentication-for-bolusing","text":"Depending on your iPhone preferences and model, you may have Face ID or Touch ID enabled. Those security features will also be used to authenticate bolus delivery in Loop. You can choose to disable authentication (i.e., not require Face ID, Touch ID, or passcode for bolusing) through the following code customization. Loop 3 For Loop 3 (under test as Loop-dev), this controls the authorization requirement to modify Therapy Settings as well as to confirm bolus delivery. Key_Phrase canEvaluatePolicy(.deviceOwnerAuthentication Loop 2.2.x Folder: Loop/View Controllers File: BolusViewController.swift, Line 529 Loop 3 Folder: LoopKit/LoopKitUI/Extensions/ File: Environment+Authenticate.swift, Line 20 The screenshot below was taken with Loop v2.0 when the line number was 201; with Loop 2.2.x versions, that same code is found at line 529. Add the false && as shown in the screenshot below:","title":"Disable Authentication for Bolusing"},{"location":"build/code_customization/#default-carb-absorption-times","text":"Loop\u2019s default carb absorption times are based on the high, medium, and low glycemic index absorption curves presented in Think Like A Pancreas by Gary Scheiner. With Loop 2.2.x, the lollipop (fast) icon is set for 2 hours, taco (medium) icon for 3 hours, and pizza (slow) icon for 4 hours. This is modified for Loop 3 to 30 minutes, 3 hours and 5 hours respectively. Key_Phrase defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes Loop 2.2.x Folder: Loop/LoopCore File: LoopSettings.swift Line: 16 (2.2.4 master), 41 (2.2.4 AB), 50 (2.2.5 and later) Loop 3 Folder: Loop/LoopCore File: LoopCoreConstants.swift Line: 16 For example, if you wanted to modify Loop 2.2.9 so that lollipop represents a 30 minute absorption and pizza a 5 hour absorption, the edit would be as follows: Code Before Modification for Loop 2.2.x public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .hours(2), medium: .hours(3), slow: .hours(4)) Code After Modification or default for Loop 3 public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .minutes(30), medium: .hours(3), slow: .hours(5)) Note that if you change from 2 hours to 30 minutes, you must also change the indication before the parentheses.","title":"Default Carb Absorption Times"},{"location":"build/code_customization/#adjust-percent-bolus-for-automatic-bolus","text":"If you are mostly happy with the Dosing Strategy of Automatic Bolus but wish it delivered more or less insulin during every Loop interval, then this customization is for you. This customization changes the percent of the recommended bolus used for automatic delivery. The method for calculating that recommendation is not changed by this modification. The default value is 40% (0.4). It is recommended you take small changes of 0.1 at a time. Once you modify it once and try it out for a while, it\u2019s easy to go back and change it again. With Loop 2.2.x, the end of the line has a comment // % , whereas with Loop 3, there is an explanatory comment (line starting with // ) before the line. Change just the number and double check that the value is less than 1. Key_Phrase let bolusPartialApplicationFactor Loop 2.2.x Folder: Loop/LoopCore File: LoopSettings.swift Line: 89 (2.2.5 and later) Loop 3 Folder: Loop/Loop/Models File: LoopConstants.swift Line: 44 Code Before Modification public let bolusPartialApplicationFactor = 0.4 Code After Modification to 50% of recommended insulin public let bolusPartialApplicationFactor = 0.5 Do not exceed 1.0 This number should never be bigger than 1 (you\u2019d be getting more than Loop recommends). If you think you need more than 1, consider your settings and meal entries.","title":"Adjust Percent Bolus for Automatic Bolus"},{"location":"build/code_customization/#modify-override-sensitivity","text":"Some people want finer settings on the override sensitivity picker and may want to limit the overall range for overrides \u2013 especially for children. 1% Settings Available without Customization With the advent of Loop 3, the Override Sensitivity values are not limited by the default picker values of 10%. Not available in Loop 2.2.x Not available in FreeAPS (based off Loop 2.2.x) Select 1% Sensitivity Any override more than a factor of 2 from 100% can cause Loop predictions to be wrong \u2013 especially if a carb count is entered. (An override is NOT the same as a manual temp basal - it changes insulin sensitivity factor and carb ratio in addition to the basal rate needed for zero change in IOB for the duration of the override.) This example customization changes the lower bound for sensitivity to 50% (factor of 2 smaller than 100%) and provides 5% steps. Key_Phrase let allScaleFactorPercentages Loop 2.2.x and Loop 3 Folder: LoopKit/LoopKitUI/Views File: InsulinSensitivityScalingTableViewCell.swift, Line 19 Code Before Modification private let allScaleFactorPercentages = Array(stride(from: 10, through: 200, by: 10)) Code After Modification to 50% to 200% by steps of 5% private let allScaleFactorPercentages = Array(stride(from: 50, through: 200, by: 5))","title":"Modify Override Sensitivity"},{"location":"build/code_customization/#modify-maximum-carb-entry","text":"Some people want to limit the maximum number of carbs that can be entered in one entry \u2013 especially for children or folks who eat lower carb. This helps prevent accidental typos, e.g., entry of 115 g instead of 15 g for a meal. Key_Phrase maxQuantity = As shown in the graphic below, this phrase shows up in 2 places, only the first one should be modified. Loop 2.2.x and Loop 3 Folder: Loop/Loop/View Controllers File: CarbEntryViewController.swift, Line 33 (Loop 2.2.x) or 36 (Loop 3) Code Before Modification var maxQuantity = HKQuantity(unit: .gram(), doubleValue: 250) Code After Modification to limit carb entry to 99 g var maxQuantity = HKQuantity(unit: .gram(), doubleValue: 99)","title":"Modify Maximum Carb Entry"},{"location":"build/code_customization/#pods-add-extra-insulin-on-insertion","text":"The default value is 0.0 u of extra insulin. If you use this customization, start with a small number and work your way up. If you are coming from manual podding and routinely gave yourself an extra bolus with your PDM at pod change time, you may not need nearly as much with Loop - be conservative. Note that Loop does not include the amount of insulin in the prime or insertion steps in your IOB . The pod reports every pulse that it delivers to Loop. If you look in the Pod Settings insulin delivered row, that is the total delivered by the pod minus the (prime plus insertion) amounts. The only way to know that you successfully made this change is to count the clicks. Normal insertion is 0.5 U (0.5 U / 0.05 U per click = 10 clicks). So if you add 0.35 U to the \"extra\" value, you should get 0.35 / 0.05 = 7 extra clicks. In other words, 17 total clicks after you press insert. This code change is found in one location for Eros Pods (called Omnipod throughout the app) and DASH Pods (called Omnipod Dash throughout the app). I tend to change both files, but if you're only using one kind of pod, that is really not necessary. Key_Phrase let cannulaInsertionUnitsExtra Loop 2.2.x: Eros Pod (ones that require a RileyLink compatible device) Folder: rileylink_ios/OmniKit/Model File: Pod.swift, Line 72 (Loop 2.2.x) Eros or DASH Pod (Loop 3 only) Folder: rileylink_ios/OmniKit/OmnipodCommon (Eros) Folder: OmniBLE/OmniBLE/OmnipodCommon (DASH) File: Pod.swift, Line 87 (Eros); Line 82 (DASH) When finding the file using the folder icons in Xcode , instead of using the Key_Phrase in Find in Workspace , the RileyLink icon represents the rileylink_ios folder name on the computer. Code Before Modification public static let cannulaInsertionUnitsExtra = 0.0 // edit to add a fixed additional amount of insulin during cannula insertion Code After Modification to add 0.35 U public static let cannulaInsertionUnitsExtra = 0.35 // edit to add a fixed additional amount of insulin during cannula insertion","title":"Pods: Add Extra Insulin on Insertion"},{"location":"build/code_customization/#modify-the-guardrails","text":"The Therapy Setting Guardrails are for Loop 3 (Loop-dev) only. If you build Loop-dev over a version of Loop 2.2.x or FreeAPS where the Correction Range is lower than the default value of 87 mg/dL (4.8 mmol/L), your app will crash when you try to onboard. The solution (until this is fixed) is to customize and lower the minimum value to be at or below the value you have currently set. Rebuild the app with the modified settings and you should be able to continue the onboarding process. Key_Phrase Guardrail(absoluteBounds: Loop 3 only Folder: LoopKit/Extensions File: Guardrail+Settings.swift Line: 12 for suspendThreshold Line: 26 for correctionRange Code Before Modification static let suspendThreshold = Guardrail(absoluteBounds: 67...110, recommendedBounds: 74...80, unit: .milligramsPerDeciliter, startingSuggestion: 80) and static let correctionRange = Guardrail(absoluteBounds: 87...180, recommendedBounds: 100...115, unit: .milligramsPerDeciliter, startingSuggestion: 100) Modify the 67 for suspendThreshold or 87 for correctionRange to the desired value. Loop automatically converts from mg/dL. So you must enter values reasonable for mg/dL (18 times higher than for mmol/L). If fixing a crashed app during onboarding, you must lower the 87 to match or be less than what is in your old settings.","title":"Modify the Guardrails"},{"location":"build/code_customization/#adjust-future-carbs-time-interval","text":"Loop 3 (Loop-dev) limits the future time change allowed to 1 hour. Key_Phrase cell.datePicker.maximumDate = date.addingTimeInterval Loop 3 only: Folder: Loop/Loop/View Controllers File:CarbEntryViewController.swift Line: 361 Default shown below (for maximum and minimum): Code Before Modification cell.datePicker.maximumDate = date.addingTimeInterval(.hours(1)) cell.datePicker.minimumDate = date.addingTimeInterval(.hours(-12)) Change the maximumDate to the number of hours in the future you desire. Remember that Loop may increase insulin dosing for future carbs - make sure that they actually arrive. The minimumDate is how far back in the past you can modify time. The default is 12 hours in the past.","title":"Adjust Future Carbs Time Interval"},{"location":"build/code_customization/#adjust-the-watch-crown-sensitivity","text":"The rate of change of the carb and bolus entry pickers when using the digital crown can be altered as can the rotation required to confirm a bolus on the watch. If you are running an older series watch - you may want to make these customizations. When I switched from Series 3 to Series 7 watch - it was amazing. I got a graph on the main watch screen I didn't even know existed and the bolus acceptance was a breeze! There are a number of places where you need to make changes (2 for sensitivity and 2 for bolus confirmation for Loop 2.2.x), so walk though them one at a time. For the Watch Crown Sensitivity , the 1/24 value is the ratio of rotations of the crown to the amount of change in the value. Changing it to 1/12 would mean that half as many turns would be needed for the same amount of carb or bolus entry. The Loop 2.2.x customizations are throughly tested by many users. The Loop 3 customization is provided from code inspection and one test - use with care.","title":"Adjust the Watch Crown Sensitivity"},{"location":"build/code_customization/#loop-22x-sensitivity","text":"Key_Phrase let rotationsPerIncrement Folder: Loop/WatchApp Extension/Controllers File: AddCarbsInterfaceController.swift, Line: 249 Initial Value: 1/24; try 1/12 to increase change in picker value for a given motion Key_Phrase let rotationsPerValue Folder: Loop/WatchApp Extension/Controllers File: BolusInterfaceController.swift, Line: 191 Initial Value: 1/24; try 1/12 to increase change in picker value for a given motion","title":"Loop 2.2.x Sensitivity"},{"location":"build/code_customization/#loop-22x-bolus-confirmation","text":"In order to reduce the amount the user has to spin the watch crown to confirm a bolus, there are 3 numbers on 2 lines that must be modified. You will be working in the same file you just used to modify the watch sensitivity to adjusting the bolus amount, BolusInterfaceController.swift. For example to change rotation required to 70% of the default, change 1.0 to 0.7 in 3 places on those 2 lines. This Key_Phrase returns 3 lines, the second 2 of which are the ones in that file where the change is required: Key_Phrase abs(accumulatedRotation) Folder: Loop/WatchApp Extension/Controllers File: BolusInterfaceController.swift, Lines: 311 and 360 Initial Value: 1.0; try 0.7 to decrease how much is needed to confirm bolus","title":"Loop 2.2.x Bolus Confirmation"},{"location":"build/code_customization/#loop-3-digital-crown-adjustments","text":"These are new instructions and the user should take care - and please report back if you have problems. First - try it with no customization. Then make small changes. This key phrase will indicate three different files in the same folder as shown in the graphic below - you can adjust each in turn as you desire. When you click on the line, the quantity you change is a few lines below where you find the Key_Phrase , except for the CarbAndDateInput file. Key_Phrase .digitalCrownRotation Folder: Loop/WatchApp Extension/Views/Carb Entry & Bolus","title":"Loop 3 Digital Crown Adjustments"},{"location":"build/code_customization/#expiration-notification-customization","text":"An expiration notification feature has been added to Loop. You get a notification when you open the Loop app to alert you that the expiration is approaching. (Not available with version v2.2.4 and earlier.) Read Loop App Expiration Notification to see the expiration reminder Read Loop App Expiration Date if you have an older version of Loop If you prefer a different notification time and frequency, there are two lines you can modify: Loop 2.2.x and Loop 3 Folder: Loop/Managers File: ProfileExpirationAlerter.swift Line 16: modify how long before expiration you get the FIRST notification Line 28: modify how frequently you will be notified Key_Phrase expirationAlertWindow: TimeInterval Key_Phrase minimumTimeBetweenAlerts: TimeInterval Default code for line 16: static let expirationAlertWindow: TimeInterval = .days(20) Example modifications to First Notification: 30 days: change .days(20) to .days(30) 12 hours: change .days(20) to .hours(12) Default code for line 28: let minimumTimeBetweenAlerts: TimeInterval = timeUntilExpiration > .hours(24) ? .days(2) : .hours(1) Modify Frequency of Repeated Notifications (Three Values): This phrase: > .hours(24) ? .days(2) : .hours(1) Rewritten as: > Time_A ? Frequency_A : Frequency_B , means: Use Frequency_A if there is more time between now and the expiration date than Time_A Use Frequency_B if there is less time between now and the expiration date than Time_A You can enter Time or Frequency as .days(value) , .hours(value) or .minutes(value) . Free App Users: An example change that a Free Loop App user (who has to build once a week) might choose is: > .hours(4) ? .days(10) : .hours(2) Combined with an .hours(12) on line 16, they would get notified at 12 hours, 4 hours and 2 hours before expiration on the day of expiration and only when the app is opened. Since you'll be building once a week, you can play around with these values until you are happy.","title":"Expiration Notification Customization"},{"location":"build/code_customization/#exponential-insulin-curve","text":"The Exponential Insulin Curve Models (Rapid-Acting Adult, Rapid-Acting Child, and Fiasp) default to an insulin duration of 360 minutes...but the peak activity of the various curves differs, as follows: Rapid-acting adult curve peaks at 75 minutes Rapid-acting child curve peaks at 65 minutes Fiasp peaks curve peaks at 55 minutes If you wish to customize these values, please make sure you know what you are doing. This is not a modification recommended for Loop novices. For Loop 3 users, the file is in a different submodule and includes more models. Key_Phrase MARK: - Model generation Loop 2.2.x Folder: Loop/LoopCore/Insulin File: ExponentialInsulinModelPreset.swift Lines: actionDuration (20 to 29) peakActivity (31 to 40) effectDelay (42 to 51) Loop 3 << NOTE more models Folder: LoopKit/LoopKit/Insulin/ << NOTE new location File: ExponentialInsulinModelPreset.swift Lines: actionDuration (19 to 32) peakActivity (34 to 47) effectDelay (49 to 62)","title":"Exponential Insulin Curve"},{"location":"build/code_customization/#loop-logo","text":"If you want an app logo other than the default green circle for your Loop app, you can easily customize this. To make it easy to generate the correct sizes of icons, you can use a site like appicon.build or appicon.co and just drag and drop your source image. The source image needs to be 1024 pixels x 1024 pixels. The site will email you a zip file or automatically download a set of files. Highlight and copy the contents of the Appicon.appiconset that you are sent, including the Contents.json file Use Finder to Navigate to the LoopWorkspace folder. These instructions assume you used the Build Select Script - if your files are in a different folder, make the appropriate adjustment. Use Finder to navigate to Downloads / BuildLoop and open the folder with the most recent date (e.g., Loop-Master-211006-0524) Double-click on the LoopWorkspace folder Double-click on the AdditionaAssets.xcassets folder Double-click on the CustomLoopIcon.appiconset folder Replace the contents of the Appicon.appiconset with your copied images and Contents.json file. Rebuild your app You may see a yellow warning that there are \u201cunassigned children\u201d depending on the images the app icon generator tool produced. The unassigned children alert will not prevent your app from building, it\u2019s simply because there are more sizes of images than Loop app uses. You can just leave the unassigned children alone (wow...how often do you get to say that phrase?). And now you'll be the proud new owner of a custom Loop icon.","title":"Loop Logo"},{"location":"build/code_customization/#additional-customizations","text":"Additional customizations may be found on another website, especially for older versions of the app. If you did not find the customization you want here on LoopDocs, then try the Loop and Learn Customization Page . Check that page in case this list is not up to date. Add Lyumjev Insulin Model (this is only needed for Loop 2.2.x, included in Loop 3) Pods: Increase Log File History Hours (only needed for Loop 2.2.x) Medtronic: Disable mySentry (only needed for older versions of Loop 2.2.x) Pods: Change Default Expiration Reminder (only needed for Loop 2.2.x) Emoji Modifications Disable Suspend Beeps (only needed for Loop 2.2.x) Note that the other site has an index that points back to LoopDocs if the customization is found on this page.","title":"Additional Customizations"},{"location":"build/code_customization/#additional-customizations-for-loop-dev","text":"The customizations below only work with the Loop dev branch . You should be comfortable typing commands in a terminal You should be comfortable with manipulations (as directed) with Xcode You will need to open a terminal in the LoopWorkspace folder of the code that you previously downloaded The next section provides instructions on opening the terminal in the correct place","title":"Additional Customizations for Loop dev"},{"location":"build/code_customization/#open-a-terminal-in-loopworkspace-folder","text":"Refer to the graphic below. The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom. Double clicking on that file opens Xcode ; but to apply customizations, you need to type commands in the terminal. Open Finder Navigate to Downloads/BuildLoop and look for your download by name and date Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145 Find the LoopWorkspace folder icon (dashed-blue rectangle) Hold down the CTRL key and click (or right-click) LoopWorkspace A menu appears - select New Terminal at Folder (near the bottom of the list) This new terminal window is now in the LoopWorkspace folder needed to type commands to apply patches.","title":"Open a Terminal in LoopWorkspace Folder"},{"location":"build/code_customization/#custom-type-one-looppatches","text":"Several items have been consolidated into a set of patches found at CustomTypeOne/LoopPatches . These patches only work with Loop dev branch (downloaded after July 14, 2022). You must install the patches following the directions carefully.","title":"Custom Type One LoopPatches"},{"location":"build/code_customization/#add-libre-app-to-loop-phone","text":"This method only works for Loop dev branch and only for some Libre sensors. The US versions for Libre 2 cannot be read with an iPhone. There are several options for code that will read the raw Libre values and convert them into glucose readings. You must do your own research to decide which code to use. Be aware that you must perform careful calibrations to maintain accurate glucose estimates. These are the Libre iOS app options. xDrip4iOS: Documentation Check to see if your sensor is compatible To use this code with Loop, you must \"build it yourself\" with the same developer ID as you use with Loop (directions are in the documentation) If you use the TestFlight installation method, you will not be able to use this with Loop (on your phone without needing an internet connection) GlucoseDirect: README file on github repository If you use the TestFlight installation method, you will not be able to use this with Loop LibreTransmitter for Loop: README file on github repository LibreTransmitter is incorporated into Loop directly, so there not a separate app to be installed Refer to Modify Loop to use Libre Once you have chosen the desired app, you need to install it on your Loop phone using the same developer ID as was used for the Loop app and then you must modify the Loop dev code that you previously downloaded.","title":"Add Libre App to Loop Phone"},{"location":"build/code_customization/#modify-loop-to-use-libre","text":"None of these methods have been tested by the LoopDocs team. This information is copied from zulipchat conversations (shown in links below). For your selected app to read the Libre, you must also add a client to Loop dev to interface with the \"reader\" app. You only need to add the client for the app you've chosen for accessing your Libre sensor. However, you may find watching the video for GlucoseDirectClient and reading the step-by-step instructions for xdrip-client-swift or LibreTransmitter may together give you a better idea how to incorporate your preferred app with Loop dev. Add a client that interfaces with xDrip4iOS: Add xdrip-client-swift to Loop dev Note - there are extra details visible when you click on the black arrow icons in this file zulipchat converstation Add a client that interfaces with GlucoseDirect: Add GlucoseDirectClient zulipchat conversation The instructions are in the video on the GlucoseDirectClient repo page Add LibreTransmitter to Loop as a plugin: LibreTransmitter for Loop: README file on github repository LibreTransmitter is incorporated into Loop directly, so there not a separate app to be installed zulipchat conversation The required GetGlucoseFromRaw.swift file is not included in the repository due to legal concerns, so you have to get it from elsewhere","title":"Modify Loop to use Libre"},{"location":"build/health/","text":"Health Data \u00b6 The Loop app uses the Health app to record blood glucose, insulin, and carbohydrate data. The blood glucose, insulin, and carbohydrate data stored in the Health app can also be accessed and uploaded by the Tidepool Mobile app which enables display on of your data on the Tidepool web-based display tool. Please review the settings below to ensure you have the proper settings. Loop Permissions \u00b6 You need to set up Loop's permissions to read and write some data in the Health app. When you finish building your first Loop app, the Health app screen for Loop permissions automatically appears. (People who have been looping a while should be aware that the permissions are slightly different now.) Do not enable permission for Loop to read carbohydrates from the Apple Health app. You can also get to this screen (for iOS 14) by iPhone -> Settings -> Health (heart icon) -> Data Access & Devices -> Loop. New Instructions Loop does not need to read carbohydrates from the Health app. The old instructions suggested turning on all switches. This is NOT necessary for carbohydrates and can be dangerous if A different app writes carbohydrates to the Health app If two Loopers use the same Apple ID - PLEASE - do not do this; Loopers need their own Apple ID Blood Glucose : Permission to Write and Read Loop eavesdrops on the Bluetooth communication of the Dexcom G4/G5/G6 CGM and writes the values to the Health app for the first 3 hours After 3 hours, the Dexcom CGM app allows other apps (including the Health app) access to its CGM data, so Loop needs to read the older Blood Glucose from the Health app During times when there is no CGM data, the user can enter a finger stick value into the Health app Blood Glucose (BG) screen and Loop will read it, e.g., during sensor warmup Carbohydrates : Permission to Write ONLY Loop has its own carbohydrate data store and does not need to read carbs from the Health app Once Loop records a carbohydrate entry, it will start to dose insulin to accommodate the expected rise in blood glucose from the carbohydrates consumed If any other app writes carbohydrates to the Health app, you do not want Loop to add them to what you've already entered into the Loop app (resulting in duplicate entries) Insulin Delivery : Permission to Write and Read Loop writes basal and bolus doses to the Health app Loop reads any manual insulin added to the Health app, e.g., insulin taken by injection Sleep : Permission to Read Loop uses Sleep information to decide which times of day to use the limited daily allocation from Apple for updates to the Loop watch complication. Dexcom Permissions \u00b6 You also need to enable your Dexcom Mobile app to write to the Health app. The steps shown in the figure below are valid for iOS 12. For iOS 13/14, the menu items are: iPhone -> Settings -> Health (heart icon) -> Data Access & Devices -> Dexcom app. Make sure Dexcom has permission to write Blood Glucose (after the 3 hour delay). If you do not do this, you will have a maximum history of 3 hours displayed in the Loop Glucose screen.","title":"Step 1: Health Permissions"},{"location":"build/health/#health-data","text":"The Loop app uses the Health app to record blood glucose, insulin, and carbohydrate data. The blood glucose, insulin, and carbohydrate data stored in the Health app can also be accessed and uploaded by the Tidepool Mobile app which enables display on of your data on the Tidepool web-based display tool. Please review the settings below to ensure you have the proper settings.","title":"Health Data"},{"location":"build/health/#loop-permissions","text":"You need to set up Loop's permissions to read and write some data in the Health app. When you finish building your first Loop app, the Health app screen for Loop permissions automatically appears. (People who have been looping a while should be aware that the permissions are slightly different now.) Do not enable permission for Loop to read carbohydrates from the Apple Health app. You can also get to this screen (for iOS 14) by iPhone -> Settings -> Health (heart icon) -> Data Access & Devices -> Loop. New Instructions Loop does not need to read carbohydrates from the Health app. The old instructions suggested turning on all switches. This is NOT necessary for carbohydrates and can be dangerous if A different app writes carbohydrates to the Health app If two Loopers use the same Apple ID - PLEASE - do not do this; Loopers need their own Apple ID Blood Glucose : Permission to Write and Read Loop eavesdrops on the Bluetooth communication of the Dexcom G4/G5/G6 CGM and writes the values to the Health app for the first 3 hours After 3 hours, the Dexcom CGM app allows other apps (including the Health app) access to its CGM data, so Loop needs to read the older Blood Glucose from the Health app During times when there is no CGM data, the user can enter a finger stick value into the Health app Blood Glucose (BG) screen and Loop will read it, e.g., during sensor warmup Carbohydrates : Permission to Write ONLY Loop has its own carbohydrate data store and does not need to read carbs from the Health app Once Loop records a carbohydrate entry, it will start to dose insulin to accommodate the expected rise in blood glucose from the carbohydrates consumed If any other app writes carbohydrates to the Health app, you do not want Loop to add them to what you've already entered into the Loop app (resulting in duplicate entries) Insulin Delivery : Permission to Write and Read Loop writes basal and bolus doses to the Health app Loop reads any manual insulin added to the Health app, e.g., insulin taken by injection Sleep : Permission to Read Loop uses Sleep information to decide which times of day to use the limited daily allocation from Apple for updates to the Loop watch complication.","title":"Loop Permissions"},{"location":"build/health/#dexcom-permissions","text":"You also need to enable your Dexcom Mobile app to write to the Health app. The steps shown in the figure below are valid for iOS 12. For iOS 13/14, the menu items are: iPhone -> Settings -> Health (heart icon) -> Data Access & Devices -> Dexcom app. Make sure Dexcom has permission to write Blood Glucose (after the 3 hour delay). If you do not do this, you will have a maximum history of 3 hours displayed in the Loop Glucose screen.","title":"Dexcom Permissions"},{"location":"build/loopworkspace/","text":"Loop Workspace \u00b6 This page is for the \"advanced\" user. It is a short introduction for folks interested in testing code before it is released, or contributing to that code. If you wandered over here meaning to build the latest Loop release, the rest of this page might be interesting but you should not follow any of the steps. Head back over to Build Loop App when you are ready to build the app. LoopWorkspace is now used for all Loop Builds With the release of Xcode 13, Loop builds require LoopWorkspace Loop old-timers may remember the zip-download method - it is no longer available For all Loopers who want the latest Loop Release Follow the step-by-step instructions found at Build Loop App The typical user who wants to build Loop does not need to know the level of detail on the rest of this page. What is git ? \u00b6 Git is a system of \"distributed version control\" that allows remotely (as in not located in same place) collaborating people to work on one project and still track their changes to the same place. For example, if I sent 5 people one document to proof-read at the same time...it is quite possible that the edits I will get back from those 5 people would conflict with each other. Bob may have entirely deleted a sentence while Mary would have added words to that sentence. Git lets these remotely collaborating people deal with \"resolving conflict\" between versions more easily and merging suggestions (pull requests) into a coordinated space. So, in using git , we can do things with \" git commands\". Like \"Hey git ...make me an exact copy of that guy's work over there.\" or \"Hey git , I'd like to compare my version of this page with Joe's version of the same page.\" Or using my old cookbook analogy...\"Hey git , I'd like to start a new cookbook called Italian Desserts.\" But yes, git commands take awhile to properly use. And they are not plain english friendly. What is LoopWorkspace? \u00b6 There is more information in Loop Development FAQs that is not repeated here. The important fact for this discussion on LoopWorkspace is that Loop developers own an account in GitHub called LoopKit . Within that account, the developers have several \"repositories\" that support Loop in particular. A repository is like a book...let's think of it like a cookbook for now. Within the LoopKit account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of the info about the app itself; the outward facing things that you interact with. How information is put to you and taken in from you...that's in Loop repository code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. CGMBLEkit for some of the transmitter parts of Loop, RileyLink_ios for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc. When you build Loop from LoopWorkspace, each of those repositories is downloaded to your computer. This is slower than the old zip-download as far as downloading Loop - but it is much faster when you build Loop because all the files are already on your computer. LoopWorkspace uses submodules to define how the frameworks are coordinated for building. The graphic below shows the dev branch at a particular point in time. The precise version, or commit , of each submodule is defined by 7-character hexadecimal codes (look up SHA-1 ) with the repository for each submodule defined in a text file called .gitmodules . Several key git and other operating system commands will be provided later to assist you These commands will not be explained in detail If you want to know more, search the internet for documentation Often a series of commands is shown on one line, separated by semicolons The commit identifier for each submodule is important because that repository can be modified after things are set up and working with Loop. When you download the code from that repository you want the exact version that was tested. Later on there will be information about determining your git branch for a given submodule You'll see language: (HEAD detached at #) That # is the commit identifier for the submodule The commit for the LoopKit submodule is highlighted by the red rectangle in the graphic below. Advanced users testing the dev branch (or other branches or forks) need to know how to tell if their current download is up-to-date. Clone LoopWorkspace \u00b6 To get that LoopWorkspace code to your computer, first open a terminal. Make sure your current path name does not have any embedded spaces. If it does, you will get errors on your build. If you don't know how to open a terminal and navigate to a directory, reconsider whether you are ready for this page. You need to use a \" git clone \" command LIKE THIS (but not exactly the same...you're going to edit the \" branch -name\" part in there): git clone --branch=branch-name --recurse-submodules https://github.com/LoopKit/LoopWorkspace Now...look carefully and notice two things...that command is getting (1) the version of LoopWorkspace found in the LoopKit repository and (2) selects the branch you want to start working with when the clone is done. So, you will need to edit that \" branch -name\" before using the command so that you are getting started with the branch you want. If you want to clone from a different fork , the LoopKit will be replaced with the name of the github site for the fork . For example, to test dev (which is under development and has some cool new architecture and features), you would copy/paste: git clone --branch=dev --recurse-submodules https://github.com/LoopKit/LoopWorkspace Start Xcode using command line \u00b6 If you want to start the build from the command line, enter the following 2 lines into the terminal and skip ahead to Building LoopWorkspace cd LoopWorkspace xed . Remember the warning - if you build dev on your phone from Loop master, it should work fine. Going backwards, please delete the app from you phone and enter all your settings again to return to master. Start Xcode using Finder \u00b6 The cloned version of the LoopWorkspace will go into the current directory in the Terminal app when you executed the command. Terminal app opens in your User account home directory by default when you first open it. Unless you changed to a different directory, check your home directory for the LoopWorkspace folder. How can you find your home directory? In Terminal , if you use cd that will take you there automatically. In Finder , shift-command-H will open your \"home\" folder. There are a lot of cloned things in this home directory that involve Loop. You may have fewer...but be aware, you can always delete and reclone if you are in doubt or confused. You can also set up a special directory to hold the cloned code - just make sure there are no embedded spaces in the full path name. For this graphic, the cloned LoopWorkspace is in the home directory. Open Finder and navigate to the location that has LoopWorkspace Open the LoopWorkspace folder Search for and double-click on the Loop.xcworkspace folder - this automatically opens the Workspace in Xcode Building LoopWorkspace \u00b6 Once Xcode is opened for the LoopWorkspace, everything is pretty similar to building master. You need to click on that blue Loop folder to see the signing targets, and you need to change the build scheme to the left of your phone to \"Loop ( Workspace )\" in order to build properly. New for dev branch of LoopKit/LoopWorkspace Enter your Apple Developers ID in the LoopConfigOverride.xcconfig file that now appears in the top of the folder list (not shown in this graphic). This automatically signs the 5 targets required for the dev branch . Updating Loop using LoopWorkspace \u00b6 When it's time to update the copy of LoopWorkspace on your computer - you have choices. You can use the method below or redo the whole cloning process. Make sure you are in the correct branch using this git command: git branch If you are not in the correct branch , for example dev , then issue this git command (suitably modified for the desired branch ) git checkout dev Use the following git commands in the LoopWorkspace folder of your terminal: git fetch git pull --recurse If you are testing the LoopKit dev branch , you need to be on zulipchat and subscribe to at least the #development and #github streams. (It's a good idea to subscribe to all the streams.) When you see repository updates similar to the graphic below, there may also be an announcement in the #development channel that LoopWorkspace is updated and ready to test. If not you can check the commits in LoopWorkspace and see if they've been updated. It's a good idea to wait 24 hours. My procedure is to build dev to my backup phone and then put it on my \"real\" phone. Otherwise, wait for someone else to do it and give the all-clear in zulipchat. Build Following Update \u00b6 Sometimes there is a change to the Workspace scheme in Xcode that interferes with building following an update to your local clone . In those cases, these steps typically work. Try the first one, and if that doesn't work, try the first two, etc. Only after trying all three should you post asking for help on zulipchat. In Xcode Menu, select Product->Clean Build Folder In Xcode Menu, select File->Close Workspace and then File->Open Recent and select top line (one you just closed) Quit Xcode and delete derived data , then reopen Xcode (you may need to resolve package versions again) Delete Derived Data \u00b6 This command deletes derived data stored across all workspaces and projects by Xcode on your computer. If you have multiple clones locally, it deletes derived data from all of them. The derived data will be regenerated next time you build with Xcode using that clone . Copy and paste this command into a terminal window. Copy and Paste to Delete Derived Data rm -rf ~/Library/Developer/Xcode/DerivedData Compare your local clone to LoopWorkspace \u00b6 In an ideal world, LoopWorkspace has the most recent compatible submodule identifiers revised at the same time the submodules are updated. You will notice the commit identifiers for the updated submodules are different from the ones you have locally. You can check your current submodules with the git submodule status command in the LoopWorkspace folder of your terminal: What are those super-long numbers? Those are the actual SHA-1 (remember - look it up) for the commits. But the first 7 characters are sufficient to uniquely identify the commit you need for the repository and branch identified in .gitmodules . So compare the first 7 characters to the LoopKit / LoopWorkspace number and you know whether you need to update or not. To determine the commit for a single submodule on your computer, use the following commands in the LoopWorkspace folder: cd <submodule-name>; git branch; cd .. The response will be similar to this exchange: cd rileylink_ios; git branch; cd .. * (HEAD detached at 2541c1c) dev The asterick indicates the branch that is currently checked out (active). The phrase * (HEAD detached at #) allows you to compare your local version version with the commit identifier on github. LoopWorkspace Unchanged \u00b6 What happens if you update ( git pull --recurse ) and there are no changes at the LoopWorkspace repository ? There will be no change to your current clone on your computer. You'll see a series of responses saying: Fetching submodule submodule-name for each submodule-name followed by Already up to date. LoopWorkspace Updated \u00b6 What happens if you update ( git pull --recurse ) and there are changes at the LoopWorkspace repository ? The changes will be brought down to your clone on your computer. You'll need to build Loop again to get these changes incorporated in the app on your phone. You'll see a series of responses saying: Fetching submodule submodule-name for each submodule-name One or more will show changes and specify which submodules were changed followed by Submodule path submodule-name: checked out new SHA-1 Update Locally \u00b6 It has happened that you notice changes in one or more repository (in the #github stream) followed by an announcement in the #development stream that changes have been committed and please test. But you get the response shown in the LoopWorkspace Unchanged scenario. You can make a comment in zulipchat, saying please update LoopWorkspace and then wait, or you can download the appropriate commit . If you are a new tester - you probably want to wait. If you want to go on and test, you can update to the correct commit without waiting for LoopWorkspace to get updated. First, in zulipchat, in the #github stream of the commit , click on the word pushed and that will take you to the commit . For example, clicking on pushed in zulipchat from the graphic shown above, goes to this website: https://github.com/ps2/rileylink_ios/compare/8ff4bca2bc5f...2541c1c899a9 This indicates the final commit of that push for rileylink_ios is identified as 2541c1c . At this point, the commands to get that commit locally on your computer are as follows, starting from the LoopWorkspace folder: cd rileylink_ios; git fetch; git checkout 2541c1c; cd .. If you got a error message the # you requested did not match any file(s) known to git , you either typed it incorrectly or you forgot the git fetch command. The fetch command brings down information from github to your computer but doesn't make changes to what you have checked out. Local Modifications Conflict \u00b6 If you have modified anything in a submodule folder on your computer, it might be in conflict with the latest commit . If you get a messages such as this: error: Your local changes to the following files would be overwritten by checkout: Loop/Managers/DeviceDataManager.swift Loop/Models/LoopConstants.swift Please commit your changes or stash them before you switch branches. Aborting The easiest fix is to type: cd Loop; git stash; cd .. git pull --recurse Checking out different branches within a LoopWorkspace \u00b6 More advanced users...I'm not going to explain this in quite so much detail, but yes, you can individually change the branches in a LoopWorkspace. There are 2 main ways to do this. If you're already familiar with git , the easiest way is to cd into the appropriate repository (like cd rileylink_ios ) and checkout the desired branch . If you're not as familiar with git , if you edit your .gitmodules directory in LoopWorkspace, you can specify other repos to use (and add a line to specify branches, too). Then if you do a git submodule sync the workspace will sync to new submodules . Then git submodule update --init --recursive --remote will update all the submodules to the right branches and get HEADs detached correctly, etc. Note that the HEADs will be detached at the top of the branch (most recent commit ) based off of .gitmodules . Non-LoopKit clones \u00b6 Average Loopers can skip this whole section...it's for Developers mostly This whole section about non-LoopKit workspace clones is something almost every Looper can totally skip over. I'm only writing up this section for people who are interested in dabbling in code collaborations/customizations that they would want to maintain separate from LoopKit proper. Scenario: You have a friend named DeveloperBob who has his own version of LoopWorkspace that he's customized. DeveloperBob wants you to look at his code customizations and collaborate with him. You need to change the \" git clone \" command to get DeveloperBob's version, not LoopKit's version. And, you'd want to make sure you specify the branch that the new feature is on, too. DeveloperBob should usually include the branch name when he posts/shares. So, the command line might be edited to something like: git clone --branch=new-features --recurse-submodules https://github.com/DeveloperBob/LoopWorkspace So...if you are trying to grab someone's LoopWorkspace to use it, you'll need to make sure you get the command correct if they don't specify it for you. You can't clone mutliple \"LoopWorkspaces\" into the exact same home directory (because they will have the same name), so you may want to create a subdirectory to put them in. Like you could make a folder called \"DeveloperBob\" and then move into that directory in Terminal before you clone DeveloperBob's LoopWorkspace. How would you do that? Simple cd && mkdir DeveloperBob would make the new folder in your home directory. And then cd DeveloperBob would move your Terminal app to be working inside the new DeveloperBob folder. So if you wanted to clone DeveloperBob's LoopWorkspace, that would be a good way to keep track of where the code came from. If you ever get in doubt and can't remember where your code was cloned from, you can cd LoopWorkspace to get into the directory and then use git remote -v to tell you where it came from. Pushing commits from LoopWorkspace \u00b6 So you've got a great idea for a new feature, made those changes to your LoopWorkspace and want to get them into Github. Awesome! To understand how to do this, we'll need to understand a bit more about how git keeps track of changes. In git , developers can have different \"branches\" (see the branch FAQs page for more details about what a branch is). There are two different types of branches: remote and local. If you were to fork Loop on Github, then the branches that you can see on Github are \"remote\" branches - they're hosted on the Github server. On the other hand, you can also create \"local\" branches that are stored directly on your computer by \"checking out\" the remote branch . You'll need to \" commit \" your changes to the local branch , then \"push\" those changes to the remote branch in order to be able to see them in Github. There are specific commands that you can type into the command line to do all of these actions, but I'm not going to go into detail because there are different ways and everyone has their own preference. It's a little easier to think about this with an analogy. Let's say you're working at a company that's creating a cookbook. There's a centralized, production-ready version of the cookbook on their website that all the employees can view. Think of the website version of this cookbook as being like the remote branch . You're assigned to change the pancake recipe in the cookbook. Since the company doesn't want employees to make changes directly to the version of the cookbook that the customers see, you need to make a copy of it on your computer so you can make your changes to the pancake recipe. When you make the personal copy on your computer, it's like \"checking out\" the remote branch . Your copy is like the local branch - you can make whatever changes you want without having to worry about customers accidentally seeing them. When you make an important change to the recipe (like adding a photo or changing the ingredients), you might want to make a note in the edit history so that you can go back to that version of the recipe in case you accidentally make unintended changes - those notes you make would be \"commits\". Once you're happy with the recipe, you'll add it back into the production version of the cookbook on the website, which is similar to what you're doing when you \"push\" your changes. Where do the submodules fit in? Each submodule is actually a branch , so when you make changes to multiple submodules , you'll need to commit those changes to their respective branches. Let's say you've made changes to Loop and LoopKit. You'll need to go into Loop and commit and push the changes, then go into LoopKit and commit and push the changes. There are a few different ways to keep track of all these different branches. Some people like using the command line (which is what you're using when you do commands like git clone ) because it's very customizable and has the largest variety of commands. Others like to use graphical Git editors, which make it easier to see changes and be able to do a variety of common actions (like cloning, committing, and pushing) with the push of a button. Everyone has their own preferences, but some methods that Loop contributors have used in the past include the command line, Gitkraken , and SourceTree .","title":"LoopWorkspace"},{"location":"build/loopworkspace/#loop-workspace","text":"This page is for the \"advanced\" user. It is a short introduction for folks interested in testing code before it is released, or contributing to that code. If you wandered over here meaning to build the latest Loop release, the rest of this page might be interesting but you should not follow any of the steps. Head back over to Build Loop App when you are ready to build the app. LoopWorkspace is now used for all Loop Builds With the release of Xcode 13, Loop builds require LoopWorkspace Loop old-timers may remember the zip-download method - it is no longer available For all Loopers who want the latest Loop Release Follow the step-by-step instructions found at Build Loop App The typical user who wants to build Loop does not need to know the level of detail on the rest of this page.","title":"Loop Workspace"},{"location":"build/loopworkspace/#what-is-git","text":"Git is a system of \"distributed version control\" that allows remotely (as in not located in same place) collaborating people to work on one project and still track their changes to the same place. For example, if I sent 5 people one document to proof-read at the same time...it is quite possible that the edits I will get back from those 5 people would conflict with each other. Bob may have entirely deleted a sentence while Mary would have added words to that sentence. Git lets these remotely collaborating people deal with \"resolving conflict\" between versions more easily and merging suggestions (pull requests) into a coordinated space. So, in using git , we can do things with \" git commands\". Like \"Hey git ...make me an exact copy of that guy's work over there.\" or \"Hey git , I'd like to compare my version of this page with Joe's version of the same page.\" Or using my old cookbook analogy...\"Hey git , I'd like to start a new cookbook called Italian Desserts.\" But yes, git commands take awhile to properly use. And they are not plain english friendly.","title":"What is git?"},{"location":"build/loopworkspace/#what-is-loopworkspace","text":"There is more information in Loop Development FAQs that is not repeated here. The important fact for this discussion on LoopWorkspace is that Loop developers own an account in GitHub called LoopKit . Within that account, the developers have several \"repositories\" that support Loop in particular. A repository is like a book...let's think of it like a cookbook for now. Within the LoopKit account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of the info about the app itself; the outward facing things that you interact with. How information is put to you and taken in from you...that's in Loop repository code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. CGMBLEkit for some of the transmitter parts of Loop, RileyLink_ios for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc. When you build Loop from LoopWorkspace, each of those repositories is downloaded to your computer. This is slower than the old zip-download as far as downloading Loop - but it is much faster when you build Loop because all the files are already on your computer. LoopWorkspace uses submodules to define how the frameworks are coordinated for building. The graphic below shows the dev branch at a particular point in time. The precise version, or commit , of each submodule is defined by 7-character hexadecimal codes (look up SHA-1 ) with the repository for each submodule defined in a text file called .gitmodules . Several key git and other operating system commands will be provided later to assist you These commands will not be explained in detail If you want to know more, search the internet for documentation Often a series of commands is shown on one line, separated by semicolons The commit identifier for each submodule is important because that repository can be modified after things are set up and working with Loop. When you download the code from that repository you want the exact version that was tested. Later on there will be information about determining your git branch for a given submodule You'll see language: (HEAD detached at #) That # is the commit identifier for the submodule The commit for the LoopKit submodule is highlighted by the red rectangle in the graphic below. Advanced users testing the dev branch (or other branches or forks) need to know how to tell if their current download is up-to-date.","title":"What is LoopWorkspace?"},{"location":"build/loopworkspace/#clone-loopworkspace","text":"To get that LoopWorkspace code to your computer, first open a terminal. Make sure your current path name does not have any embedded spaces. If it does, you will get errors on your build. If you don't know how to open a terminal and navigate to a directory, reconsider whether you are ready for this page. You need to use a \" git clone \" command LIKE THIS (but not exactly the same...you're going to edit the \" branch -name\" part in there): git clone --branch=branch-name --recurse-submodules https://github.com/LoopKit/LoopWorkspace Now...look carefully and notice two things...that command is getting (1) the version of LoopWorkspace found in the LoopKit repository and (2) selects the branch you want to start working with when the clone is done. So, you will need to edit that \" branch -name\" before using the command so that you are getting started with the branch you want. If you want to clone from a different fork , the LoopKit will be replaced with the name of the github site for the fork . For example, to test dev (which is under development and has some cool new architecture and features), you would copy/paste: git clone --branch=dev --recurse-submodules https://github.com/LoopKit/LoopWorkspace","title":"Clone LoopWorkspace"},{"location":"build/loopworkspace/#start-xcode-using-command-line","text":"If you want to start the build from the command line, enter the following 2 lines into the terminal and skip ahead to Building LoopWorkspace cd LoopWorkspace xed . Remember the warning - if you build dev on your phone from Loop master, it should work fine. Going backwards, please delete the app from you phone and enter all your settings again to return to master.","title":"Start Xcode using command line"},{"location":"build/loopworkspace/#start-xcode-using-finder","text":"The cloned version of the LoopWorkspace will go into the current directory in the Terminal app when you executed the command. Terminal app opens in your User account home directory by default when you first open it. Unless you changed to a different directory, check your home directory for the LoopWorkspace folder. How can you find your home directory? In Terminal , if you use cd that will take you there automatically. In Finder , shift-command-H will open your \"home\" folder. There are a lot of cloned things in this home directory that involve Loop. You may have fewer...but be aware, you can always delete and reclone if you are in doubt or confused. You can also set up a special directory to hold the cloned code - just make sure there are no embedded spaces in the full path name. For this graphic, the cloned LoopWorkspace is in the home directory. Open Finder and navigate to the location that has LoopWorkspace Open the LoopWorkspace folder Search for and double-click on the Loop.xcworkspace folder - this automatically opens the Workspace in Xcode","title":"Start Xcode using Finder"},{"location":"build/loopworkspace/#building-loopworkspace","text":"Once Xcode is opened for the LoopWorkspace, everything is pretty similar to building master. You need to click on that blue Loop folder to see the signing targets, and you need to change the build scheme to the left of your phone to \"Loop ( Workspace )\" in order to build properly. New for dev branch of LoopKit/LoopWorkspace Enter your Apple Developers ID in the LoopConfigOverride.xcconfig file that now appears in the top of the folder list (not shown in this graphic). This automatically signs the 5 targets required for the dev branch .","title":"Building LoopWorkspace"},{"location":"build/loopworkspace/#updating-loop-using-loopworkspace","text":"When it's time to update the copy of LoopWorkspace on your computer - you have choices. You can use the method below or redo the whole cloning process. Make sure you are in the correct branch using this git command: git branch If you are not in the correct branch , for example dev , then issue this git command (suitably modified for the desired branch ) git checkout dev Use the following git commands in the LoopWorkspace folder of your terminal: git fetch git pull --recurse If you are testing the LoopKit dev branch , you need to be on zulipchat and subscribe to at least the #development and #github streams. (It's a good idea to subscribe to all the streams.) When you see repository updates similar to the graphic below, there may also be an announcement in the #development channel that LoopWorkspace is updated and ready to test. If not you can check the commits in LoopWorkspace and see if they've been updated. It's a good idea to wait 24 hours. My procedure is to build dev to my backup phone and then put it on my \"real\" phone. Otherwise, wait for someone else to do it and give the all-clear in zulipchat.","title":"Updating Loop using LoopWorkspace"},{"location":"build/loopworkspace/#build-following-update","text":"Sometimes there is a change to the Workspace scheme in Xcode that interferes with building following an update to your local clone . In those cases, these steps typically work. Try the first one, and if that doesn't work, try the first two, etc. Only after trying all three should you post asking for help on zulipchat. In Xcode Menu, select Product->Clean Build Folder In Xcode Menu, select File->Close Workspace and then File->Open Recent and select top line (one you just closed) Quit Xcode and delete derived data , then reopen Xcode (you may need to resolve package versions again)","title":"Build Following Update"},{"location":"build/loopworkspace/#compare-your-local-clone-to-loopworkspace","text":"In an ideal world, LoopWorkspace has the most recent compatible submodule identifiers revised at the same time the submodules are updated. You will notice the commit identifiers for the updated submodules are different from the ones you have locally. You can check your current submodules with the git submodule status command in the LoopWorkspace folder of your terminal: What are those super-long numbers? Those are the actual SHA-1 (remember - look it up) for the commits. But the first 7 characters are sufficient to uniquely identify the commit you need for the repository and branch identified in .gitmodules . So compare the first 7 characters to the LoopKit / LoopWorkspace number and you know whether you need to update or not. To determine the commit for a single submodule on your computer, use the following commands in the LoopWorkspace folder: cd <submodule-name>; git branch; cd .. The response will be similar to this exchange: cd rileylink_ios; git branch; cd .. * (HEAD detached at 2541c1c) dev The asterick indicates the branch that is currently checked out (active). The phrase * (HEAD detached at #) allows you to compare your local version version with the commit identifier on github.","title":"Compare your local clone to LoopWorkspace"},{"location":"build/loopworkspace/#loopworkspace-unchanged","text":"What happens if you update ( git pull --recurse ) and there are no changes at the LoopWorkspace repository ? There will be no change to your current clone on your computer. You'll see a series of responses saying: Fetching submodule submodule-name for each submodule-name followed by Already up to date.","title":"LoopWorkspace Unchanged"},{"location":"build/loopworkspace/#loopworkspace-updated","text":"What happens if you update ( git pull --recurse ) and there are changes at the LoopWorkspace repository ? The changes will be brought down to your clone on your computer. You'll need to build Loop again to get these changes incorporated in the app on your phone. You'll see a series of responses saying: Fetching submodule submodule-name for each submodule-name One or more will show changes and specify which submodules were changed followed by Submodule path submodule-name: checked out new SHA-1","title":"LoopWorkspace Updated"},{"location":"build/loopworkspace/#update-locally","text":"It has happened that you notice changes in one or more repository (in the #github stream) followed by an announcement in the #development stream that changes have been committed and please test. But you get the response shown in the LoopWorkspace Unchanged scenario. You can make a comment in zulipchat, saying please update LoopWorkspace and then wait, or you can download the appropriate commit . If you are a new tester - you probably want to wait. If you want to go on and test, you can update to the correct commit without waiting for LoopWorkspace to get updated. First, in zulipchat, in the #github stream of the commit , click on the word pushed and that will take you to the commit . For example, clicking on pushed in zulipchat from the graphic shown above, goes to this website: https://github.com/ps2/rileylink_ios/compare/8ff4bca2bc5f...2541c1c899a9 This indicates the final commit of that push for rileylink_ios is identified as 2541c1c . At this point, the commands to get that commit locally on your computer are as follows, starting from the LoopWorkspace folder: cd rileylink_ios; git fetch; git checkout 2541c1c; cd .. If you got a error message the # you requested did not match any file(s) known to git , you either typed it incorrectly or you forgot the git fetch command. The fetch command brings down information from github to your computer but doesn't make changes to what you have checked out.","title":"Update Locally"},{"location":"build/loopworkspace/#local-modifications-conflict","text":"If you have modified anything in a submodule folder on your computer, it might be in conflict with the latest commit . If you get a messages such as this: error: Your local changes to the following files would be overwritten by checkout: Loop/Managers/DeviceDataManager.swift Loop/Models/LoopConstants.swift Please commit your changes or stash them before you switch branches. Aborting The easiest fix is to type: cd Loop; git stash; cd .. git pull --recurse","title":"Local Modifications Conflict"},{"location":"build/loopworkspace/#checking-out-different-branches-within-a-loopworkspace","text":"More advanced users...I'm not going to explain this in quite so much detail, but yes, you can individually change the branches in a LoopWorkspace. There are 2 main ways to do this. If you're already familiar with git , the easiest way is to cd into the appropriate repository (like cd rileylink_ios ) and checkout the desired branch . If you're not as familiar with git , if you edit your .gitmodules directory in LoopWorkspace, you can specify other repos to use (and add a line to specify branches, too). Then if you do a git submodule sync the workspace will sync to new submodules . Then git submodule update --init --recursive --remote will update all the submodules to the right branches and get HEADs detached correctly, etc. Note that the HEADs will be detached at the top of the branch (most recent commit ) based off of .gitmodules .","title":"Checking out different branches within a LoopWorkspace"},{"location":"build/loopworkspace/#non-loopkit-clones","text":"Average Loopers can skip this whole section...it's for Developers mostly This whole section about non-LoopKit workspace clones is something almost every Looper can totally skip over. I'm only writing up this section for people who are interested in dabbling in code collaborations/customizations that they would want to maintain separate from LoopKit proper. Scenario: You have a friend named DeveloperBob who has his own version of LoopWorkspace that he's customized. DeveloperBob wants you to look at his code customizations and collaborate with him. You need to change the \" git clone \" command to get DeveloperBob's version, not LoopKit's version. And, you'd want to make sure you specify the branch that the new feature is on, too. DeveloperBob should usually include the branch name when he posts/shares. So, the command line might be edited to something like: git clone --branch=new-features --recurse-submodules https://github.com/DeveloperBob/LoopWorkspace So...if you are trying to grab someone's LoopWorkspace to use it, you'll need to make sure you get the command correct if they don't specify it for you. You can't clone mutliple \"LoopWorkspaces\" into the exact same home directory (because they will have the same name), so you may want to create a subdirectory to put them in. Like you could make a folder called \"DeveloperBob\" and then move into that directory in Terminal before you clone DeveloperBob's LoopWorkspace. How would you do that? Simple cd && mkdir DeveloperBob would make the new folder in your home directory. And then cd DeveloperBob would move your Terminal app to be working inside the new DeveloperBob folder. So if you wanted to clone DeveloperBob's LoopWorkspace, that would be a good way to keep track of where the code came from. If you ever get in doubt and can't remember where your code was cloned from, you can cd LoopWorkspace to get into the directory and then use git remote -v to tell you where it came from.","title":"Non-LoopKit clones"},{"location":"build/loopworkspace/#pushing-commits-from-loopworkspace","text":"So you've got a great idea for a new feature, made those changes to your LoopWorkspace and want to get them into Github. Awesome! To understand how to do this, we'll need to understand a bit more about how git keeps track of changes. In git , developers can have different \"branches\" (see the branch FAQs page for more details about what a branch is). There are two different types of branches: remote and local. If you were to fork Loop on Github, then the branches that you can see on Github are \"remote\" branches - they're hosted on the Github server. On the other hand, you can also create \"local\" branches that are stored directly on your computer by \"checking out\" the remote branch . You'll need to \" commit \" your changes to the local branch , then \"push\" those changes to the remote branch in order to be able to see them in Github. There are specific commands that you can type into the command line to do all of these actions, but I'm not going to go into detail because there are different ways and everyone has their own preference. It's a little easier to think about this with an analogy. Let's say you're working at a company that's creating a cookbook. There's a centralized, production-ready version of the cookbook on their website that all the employees can view. Think of the website version of this cookbook as being like the remote branch . You're assigned to change the pancake recipe in the cookbook. Since the company doesn't want employees to make changes directly to the version of the cookbook that the customers see, you need to make a copy of it on your computer so you can make your changes to the pancake recipe. When you make the personal copy on your computer, it's like \"checking out\" the remote branch . Your copy is like the local branch - you can make whatever changes you want without having to worry about customers accidentally seeing them. When you make an important change to the recipe (like adding a photo or changing the ingredients), you might want to make a note in the edit history so that you can go back to that version of the recipe in case you accidentally make unintended changes - those notes you make would be \"commits\". Once you're happy with the recipe, you'll add it back into the production version of the cookbook on the website, which is similar to what you're doing when you \"push\" your changes. Where do the submodules fit in? Each submodule is actually a branch , so when you make changes to multiple submodules , you'll need to commit those changes to their respective branches. Let's say you've made changes to Loop and LoopKit. You'll need to go into Loop and commit and push the changes, then go into LoopKit and commit and push the changes. There are a few different ways to keep track of all these different branches. Some people like using the command line (which is what you're using when you do commands like git clone ) because it's very customizable and has the largest variety of commands. Others like to use graphical Git editors, which make it easier to see changes and be able to do a variety of common actions (like cloning, committing, and pushing) with the push of a button. Everyone has their own preferences, but some methods that Loop contributors have used in the past include the command line, Gitkraken , and SourceTree .","title":"Pushing commits from LoopWorkspace"},{"location":"build/overview/","text":"Build Overview \u00b6 What do I need to Loop? \u00b6 To Loop you need a: Compatible Computer Compatible iPhone/iPod Touch Compatible Pump Compatible CGM RileyLink Compatible Device (not needed for Omnipod DASH) Apple Developer Membership (not needed if you rebuild weekly) Xcode (a free Apple application) If building to a Simulator to try things out, the only requirements are a computer and Xcode . Getting Ready to Build \u00b6 Start by clicking through the Build pages from Compatible Computer through Build Loop App and read the top three boxes on each page: icons for those boxes are displayed below for reference. On a desktop, you can use n for next and p for previous. Time Estimate Summary FAQs Next, read pages from Compatible Computer through Build Loop App completely and skim Oh dear! Build errors? . Most of the mistakes you can make when building have already been made. The Build Errors page shows how to fix them. When you are ready to proceed, complete the tasks on each page. You can do one a day, take a week per page or blaze through them quickly. Just be sure to read carefully and if you are confused - reach out for help: How to Find Help . After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app. What if I get stuck? \u00b6 Try to: Scroll back in the directions and see if you missed a paragraph or step. Compare your screen's display with the graphics in the step. Is something different or does yours have an error message? If you have an error message, does it guide you to the problem and solution? If you are still stumped - reach out for help: How to Find Help .","title":"Build Overview"},{"location":"build/overview/#build-overview","text":"","title":"Build Overview"},{"location":"build/overview/#what-do-i-need-to-loop","text":"To Loop you need a: Compatible Computer Compatible iPhone/iPod Touch Compatible Pump Compatible CGM RileyLink Compatible Device (not needed for Omnipod DASH) Apple Developer Membership (not needed if you rebuild weekly) Xcode (a free Apple application) If building to a Simulator to try things out, the only requirements are a computer and Xcode .","title":"What do I need to Loop?"},{"location":"build/overview/#getting-ready-to-build","text":"Start by clicking through the Build pages from Compatible Computer through Build Loop App and read the top three boxes on each page: icons for those boxes are displayed below for reference. On a desktop, you can use n for next and p for previous. Time Estimate Summary FAQs Next, read pages from Compatible Computer through Build Loop App completely and skim Oh dear! Build errors? . Most of the mistakes you can make when building have already been made. The Build Errors page shows how to fix them. When you are ready to proceed, complete the tasks on each page. You can do one a day, take a week per page or blaze through them quickly. Just be sure to read carefully and if you are confused - reach out for help: How to Find Help . After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app.","title":"Getting Ready to Build"},{"location":"build/overview/#what-if-i-get-stuck","text":"Try to: Scroll back in the directions and see if you missed a paragraph or step. Compare your screen's display with the graphics in the step. Is something different or does yours have an error message? If you have an error message, does it guide you to the problem and solution? If you are still stumped - reach out for help: How to Find Help .","title":"What if I get stuck?"},{"location":"build/step1/","text":"Compatible Computer \u00b6 Time Estimate 5 minutes, if you have a Mac with Monterey macOS (12.5) 30-60 minutes, if you need to install macOS updates Hint: OS stands for Operating System Summary Your computer, iPhone and Xcode must have compatible versions to build Loop. A summary list of Compatible Versions is found on this page with more detail in a later page If you are buying a Mac, chose one with Monterey (or newer) operating system and at least 256 GB (512 GB is better). FAQs \"Can I use a PC or Windows computer? I don't own an Apple computer.\" Yes, you can. Please read this FAQ about using a Virtual Machine . \"Can I borrow someone else's Apple computer?\" Please see this FAQ about Borrowing a Computer . \"How often do I need to use the computer?\" Computer access is required when Initially installing the Loop app Loop app expires (Annually for a paid account or weekly for a free account) Updating to a newer Loop release You do NOT need access to an Apple computer to update your phone iOS , troubleshoot or change Loop settings If you have access to a computer with MacOS 12.5 or newer, you can skip ahead to Check Space Available . Compatible Versions \u00b6 The minimum macOS depends on the iOS of your iPhone/iPod. Monterey is required to build on any iPhone with an iOS version starting with iOS 15.4 and can be used to build Loop for any of the phone iOS versions listed below. Higher values of iOS might trigger the need for an update to macOS or Xcode . The Loop and Learn Version Updates page posts an update every time a new iOS is released and tested. That page is typically updated faster than LoopDocs and reports changes, if any, to the minimum Xcode or macOS . iOS 16 or newer , the minimum macOS is Monterey (12.5) iOS 15.4 or newer , the minimum macOS is Monterey (12.0) iOS 15 - 15.3.1 , the minimum macOS is Big Sur (11.3) iOS 14.5 , the minimum macOS is Big Sur (11.0) If your macOS does not meet the minimum, check to see if you can update your macOS If you are an existing Looper with an older macOS , please click to Read the Warning before you update your phone to iOS 15. iOS Dictates Your Computer Needs The more up-to-date you keep your phone iOS , the more up-to-date your computer and macOS needs to be to build Loop. A new build is required at least once a year. More information on iOS is in Download Xcode . Do not use any of the beta macOS versions. (If you don't know what that means, you aren't using one.) Check Your macOS Version \u00b6 To find your macOS version, click on the Apple icon in the computer's upper left corner and select About this Mac . The graphic below highlights the macOS version with a red rectangle. Your computer can be a MacBook, iMac, macMini, etc... if it has the minimum required macOS version and enough storage. If you do not have the required minimum macOS version, check the Software Update button on that screen to see if you can update. Apple says upgrading to macOS Monterey requires 26 GB of available storage. Check the Space Available \u00b6 You need to have 50 GB free space in order to install Xcode in Download Xcode . At the top of the menu on the graphic above, click on the Storage Tab highlighted with a red rectangle. To free up space, move things like photos to an external drive. The Xcode application cannot be run from an external drive. If you are evaluating a used computer, it's best to have at least 256 GB total disk space (more is better). Which Macs Are Compatible with macOS Monterey ? \u00b6 Monterey is the best operating system for building Loop. You can install Monterey on the following: MacBook, early 2016 or newer MacBook Air, early 2015 or newer MacBook Pro, early 2015 or newer Mac Pro, late 2013 or newer Mac Mini, late 2014 or newer iMac, 2015 or newer iMac Pro, 2017 or newer get the full list from Apple for Monterey Older Macs \u00b6 Several experienced Loopers have reported success using OpenCore-Legacy-Patcher to enable older Macs computers to use new versions of the operating system. Use this link at your own risk. This is not suggested for novice Mac users. OpenCore Legacy Patcher Rosetta \u00b6 Many new Apple computers use the M1 or M2 Apple Silicon chips, instead of Intel chips. When the M1 first came out, you had to install Rosetta to allow apps written for Intel chips to run on these newer computers. It is very unlikely that you will be asked to install Rosetta , but if you are, accept the suggestion. Click on this link for more information from Apple about Rosetta . Older Operating System Warning \u00b6 Check before Upgrading iPhone If you built Loop with Catalina : DO NOT UPGRADE your phone to iOS 15 FIRST upgrade to at least Xcode 13, build the app on your phone THEN upgrade to iOS 15 Otherwise you will get the dreaded \"Loop\" is no longer available and need to rush through the updating Loop steps If this happens to you, your pod will continue delivering basal, but you will not be able to bolus. Next Step: Compatible iPhone/iPod Touch \u00b6 Now you are ready to check if you have a Compatible iPhone/iPod touch .","title":"Compatible Computer"},{"location":"build/step1/#compatible-computer","text":"Time Estimate 5 minutes, if you have a Mac with Monterey macOS (12.5) 30-60 minutes, if you need to install macOS updates Hint: OS stands for Operating System Summary Your computer, iPhone and Xcode must have compatible versions to build Loop. A summary list of Compatible Versions is found on this page with more detail in a later page If you are buying a Mac, chose one with Monterey (or newer) operating system and at least 256 GB (512 GB is better). FAQs \"Can I use a PC or Windows computer? I don't own an Apple computer.\" Yes, you can. Please read this FAQ about using a Virtual Machine . \"Can I borrow someone else's Apple computer?\" Please see this FAQ about Borrowing a Computer . \"How often do I need to use the computer?\" Computer access is required when Initially installing the Loop app Loop app expires (Annually for a paid account or weekly for a free account) Updating to a newer Loop release You do NOT need access to an Apple computer to update your phone iOS , troubleshoot or change Loop settings If you have access to a computer with MacOS 12.5 or newer, you can skip ahead to Check Space Available .","title":"Compatible Computer"},{"location":"build/step1/#compatible-versions","text":"The minimum macOS depends on the iOS of your iPhone/iPod. Monterey is required to build on any iPhone with an iOS version starting with iOS 15.4 and can be used to build Loop for any of the phone iOS versions listed below. Higher values of iOS might trigger the need for an update to macOS or Xcode . The Loop and Learn Version Updates page posts an update every time a new iOS is released and tested. That page is typically updated faster than LoopDocs and reports changes, if any, to the minimum Xcode or macOS . iOS 16 or newer , the minimum macOS is Monterey (12.5) iOS 15.4 or newer , the minimum macOS is Monterey (12.0) iOS 15 - 15.3.1 , the minimum macOS is Big Sur (11.3) iOS 14.5 , the minimum macOS is Big Sur (11.0) If your macOS does not meet the minimum, check to see if you can update your macOS If you are an existing Looper with an older macOS , please click to Read the Warning before you update your phone to iOS 15. iOS Dictates Your Computer Needs The more up-to-date you keep your phone iOS , the more up-to-date your computer and macOS needs to be to build Loop. A new build is required at least once a year. More information on iOS is in Download Xcode . Do not use any of the beta macOS versions. (If you don't know what that means, you aren't using one.)","title":"Compatible Versions"},{"location":"build/step1/#check-your-macos-version","text":"To find your macOS version, click on the Apple icon in the computer's upper left corner and select About this Mac . The graphic below highlights the macOS version with a red rectangle. Your computer can be a MacBook, iMac, macMini, etc... if it has the minimum required macOS version and enough storage. If you do not have the required minimum macOS version, check the Software Update button on that screen to see if you can update. Apple says upgrading to macOS Monterey requires 26 GB of available storage.","title":"Check Your macOS Version"},{"location":"build/step1/#check-the-space-available","text":"You need to have 50 GB free space in order to install Xcode in Download Xcode . At the top of the menu on the graphic above, click on the Storage Tab highlighted with a red rectangle. To free up space, move things like photos to an external drive. The Xcode application cannot be run from an external drive. If you are evaluating a used computer, it's best to have at least 256 GB total disk space (more is better).","title":"Check the Space Available"},{"location":"build/step1/#which-macs-are-compatible-with-macos-monterey","text":"Monterey is the best operating system for building Loop. You can install Monterey on the following: MacBook, early 2016 or newer MacBook Air, early 2015 or newer MacBook Pro, early 2015 or newer Mac Pro, late 2013 or newer Mac Mini, late 2014 or newer iMac, 2015 or newer iMac Pro, 2017 or newer get the full list from Apple for Monterey","title":"Which Macs Are Compatible with macOS Monterey?"},{"location":"build/step1/#older-macs","text":"Several experienced Loopers have reported success using OpenCore-Legacy-Patcher to enable older Macs computers to use new versions of the operating system. Use this link at your own risk. This is not suggested for novice Mac users. OpenCore Legacy Patcher","title":"Older Macs"},{"location":"build/step1/#rosetta","text":"Many new Apple computers use the M1 or M2 Apple Silicon chips, instead of Intel chips. When the M1 first came out, you had to install Rosetta to allow apps written for Intel chips to run on these newer computers. It is very unlikely that you will be asked to install Rosetta , but if you are, accept the suggestion. Click on this link for more information from Apple about Rosetta .","title":"Rosetta"},{"location":"build/step1/#older-operating-system-warning","text":"Check before Upgrading iPhone If you built Loop with Catalina : DO NOT UPGRADE your phone to iOS 15 FIRST upgrade to at least Xcode 13, build the app on your phone THEN upgrade to iOS 15 Otherwise you will get the dreaded \"Loop\" is no longer available and need to rush through the updating Loop steps If this happens to you, your pod will continue delivering basal, but you will not be able to bolus.","title":"Older Operating System Warning"},{"location":"build/step1/#next-step-compatible-iphoneipod-touch","text":"Now you are ready to check if you have a Compatible iPhone/iPod touch .","title":"Next Step: Compatible iPhone/iPod Touch"},{"location":"build/step10/","text":"Test Settings \u00b6 Time Estimate 2 hours to read the rest of LoopDocs (particularly the \"Set Up\", \"Operate\", and \"FAQ\" sections) and LoopTips thoroughly and thoughtfully If you like quizzes, this older quiz has not been updated for Loop 3, but the questions are still really good and the \"scoring\" provides extra insight into why your answer was right or wrong 15 minutes to take this quiz to confirm you understand Loop's expected behavior With Loop 3: you can remote bolus and you can set a manual temp basal rate and DASH pods can be used without a RileyLink 1-3 days to test settings for safety and to get the most out of Loop This step can be done after you build Loop, just stay in Open Loop while you test Summary Before you use Closed Loop mode, test and validate your basal rates, ISF (correction factor), and CR (carb ratios) You may need to adjust your settings for Loop Accurate settings are vital for success FAQs \"My endo chose my pump settings, so do I need to test them?\" Yes. Your endo chose your settings in a different context, with different constraints. What is safe and ideal in traditional pump therapy, may not be the best selection for the Loop app. Testing your settings, even for just a couple days, makes a big difference. \"I have great control, why would I need to test my settings?\" \"Great control\" may be due to lots of adjustments - bumps and nudges of insulin or carbs. Those bumps and nudges may be covering for underlying settings that need adjustment. If you are coming from a treatment style that involves memorizing your insulin doses for meals, you may not know your actual CR or ISF . Testing is key to success with Loop. \"I can't basal test with my 2-year-old. What can I do?\" That is pretty tough. Consult your endo, watch your patterns, and do the best you can...little kiddos are a difficult group to test settings. Once you become comfortable with Loop, there are tricks to adjust settings while staying in closed loop as long as settings are fairly close. Loop is just a fancy calculator underneath the hood. The math problems it solves depend on the settings you provide. So test settings before using Loop. Basal Rates \u00b6 Correct basal rates keep your blood glucose steady without food present. The standard method is to test your basal by having a relaxing 4-6 hours without eating at least two hours before you begin the test. Does your blood sugar stay steady? Or do you climb and need a correction? Or do you go low and need to eat? Setting basal is a crucial step to setting yourself up for Loop success. It determines how much of the insulin delivered (from basal and bolus) is counted as insulin on board ( IOB ). Basal Tricks Loop keeps track of how much more or less insulin than your scheduled basal rates are required to keep glucose in target. Once you become a proficient looper, you can tune your basal by looking at IOB overnight or when food and exercise are not involved. Insulin Sensitivity Factor \u00b6 The Insulin Sensitivity Factor ( ISF ), sometimes called Correction Factor, is how much one unit of insulin will bring down your glucose. The higher the value of this setting, the more sensitive to insulin you are. An ISF of 30 (1.65) means one unit of insulin lowers your glucose 30 mg/dL (1.65 mmol/L) in the absence of food or activity, when basal rates are correct. Test ISF after you test and determine your basal rates. Simply bring yourself to a higher glucose with a glucose tab or choose a time when you are \"stuck\" higher than your target. Calculate how much insulin is required to lower your glucose to target, take it and observe if your glucose flattens out at your target within 3 hours Do not do this test if you have recently eaten, recovered from a low glucose, engaged in physical activity, are sick or under stress A starting point for ISF is to take total daily dose and divide that into 1800 This is just a starting point, many people have higher or lower ISF than this formula suggests Example, you take 30 U a day and have no idea what your ISF should be Start with 60 mg/dL (3.2 mmol/L) and test it Carb Ratio \u00b6 The Carb Ratio ( CR ) is the amount of carbs covered by one unit of insulin. Ideally, a good carb ratio will restore your glucose close to its starting point within 3 hours of the meal . (High fat/protein meals may cause glucose to be impacted longer.) If you are spiking higher than you\u2019d like after a meal, but still coming back to the starting glucose, consider pre-bolusing your meal earlier (maybe by 15-20 minutes) rather than changing the carb ratio. Other Resources \u00b6 Check the companion site LoopTips . Several direct links to discussions are provided below: How to check settings Why settings are important What to do when you need to change settings which covers short term and long term reasons If you\u2019re fascinated by this topic, read the book 'Think Like A Pancreas' by Gary Scheiner for a really great discussion. Next Step: Make Plans for Loop Data \u00b6 Now you are ready to make plans for Loop Data .","title":"Test Settings"},{"location":"build/step10/#test-settings","text":"Time Estimate 2 hours to read the rest of LoopDocs (particularly the \"Set Up\", \"Operate\", and \"FAQ\" sections) and LoopTips thoroughly and thoughtfully If you like quizzes, this older quiz has not been updated for Loop 3, but the questions are still really good and the \"scoring\" provides extra insight into why your answer was right or wrong 15 minutes to take this quiz to confirm you understand Loop's expected behavior With Loop 3: you can remote bolus and you can set a manual temp basal rate and DASH pods can be used without a RileyLink 1-3 days to test settings for safety and to get the most out of Loop This step can be done after you build Loop, just stay in Open Loop while you test Summary Before you use Closed Loop mode, test and validate your basal rates, ISF (correction factor), and CR (carb ratios) You may need to adjust your settings for Loop Accurate settings are vital for success FAQs \"My endo chose my pump settings, so do I need to test them?\" Yes. Your endo chose your settings in a different context, with different constraints. What is safe and ideal in traditional pump therapy, may not be the best selection for the Loop app. Testing your settings, even for just a couple days, makes a big difference. \"I have great control, why would I need to test my settings?\" \"Great control\" may be due to lots of adjustments - bumps and nudges of insulin or carbs. Those bumps and nudges may be covering for underlying settings that need adjustment. If you are coming from a treatment style that involves memorizing your insulin doses for meals, you may not know your actual CR or ISF . Testing is key to success with Loop. \"I can't basal test with my 2-year-old. What can I do?\" That is pretty tough. Consult your endo, watch your patterns, and do the best you can...little kiddos are a difficult group to test settings. Once you become comfortable with Loop, there are tricks to adjust settings while staying in closed loop as long as settings are fairly close. Loop is just a fancy calculator underneath the hood. The math problems it solves depend on the settings you provide. So test settings before using Loop.","title":"Test Settings"},{"location":"build/step10/#basal-rates","text":"Correct basal rates keep your blood glucose steady without food present. The standard method is to test your basal by having a relaxing 4-6 hours without eating at least two hours before you begin the test. Does your blood sugar stay steady? Or do you climb and need a correction? Or do you go low and need to eat? Setting basal is a crucial step to setting yourself up for Loop success. It determines how much of the insulin delivered (from basal and bolus) is counted as insulin on board ( IOB ). Basal Tricks Loop keeps track of how much more or less insulin than your scheduled basal rates are required to keep glucose in target. Once you become a proficient looper, you can tune your basal by looking at IOB overnight or when food and exercise are not involved.","title":"Basal Rates"},{"location":"build/step10/#insulin-sensitivity-factor","text":"The Insulin Sensitivity Factor ( ISF ), sometimes called Correction Factor, is how much one unit of insulin will bring down your glucose. The higher the value of this setting, the more sensitive to insulin you are. An ISF of 30 (1.65) means one unit of insulin lowers your glucose 30 mg/dL (1.65 mmol/L) in the absence of food or activity, when basal rates are correct. Test ISF after you test and determine your basal rates. Simply bring yourself to a higher glucose with a glucose tab or choose a time when you are \"stuck\" higher than your target. Calculate how much insulin is required to lower your glucose to target, take it and observe if your glucose flattens out at your target within 3 hours Do not do this test if you have recently eaten, recovered from a low glucose, engaged in physical activity, are sick or under stress A starting point for ISF is to take total daily dose and divide that into 1800 This is just a starting point, many people have higher or lower ISF than this formula suggests Example, you take 30 U a day and have no idea what your ISF should be Start with 60 mg/dL (3.2 mmol/L) and test it","title":"Insulin Sensitivity Factor"},{"location":"build/step10/#carb-ratio","text":"The Carb Ratio ( CR ) is the amount of carbs covered by one unit of insulin. Ideally, a good carb ratio will restore your glucose close to its starting point within 3 hours of the meal . (High fat/protein meals may cause glucose to be impacted longer.) If you are spiking higher than you\u2019d like after a meal, but still coming back to the starting glucose, consider pre-bolusing your meal earlier (maybe by 15-20 minutes) rather than changing the carb ratio.","title":"Carb Ratio"},{"location":"build/step10/#other-resources","text":"Check the companion site LoopTips . Several direct links to discussions are provided below: How to check settings Why settings are important What to do when you need to change settings which covers short term and long term reasons If you\u2019re fascinated by this topic, read the book 'Think Like A Pancreas' by Gary Scheiner for a really great discussion.","title":"Other Resources"},{"location":"build/step10/#next-step-make-plans-for-loop-data","text":"Now you are ready to make plans for Loop Data .","title":"Next Step: Make Plans for Loop Data"},{"location":"build/step11/","text":"Make Plans for your Loop Data \u00b6 Time Estimate Apple Health: 0 minutes, already a part of your system Tidepool: 30 minutes to set up an account and add Tidepool Mobile to your phone Nightscout: 1-2 hours to build it yourself if you've never done it before 1 hour to choose and sign up for a service if you want to pay someone Summary Review the three major systems that can store and show your Loop data. Set up either Tidepool or Nightscout prior to your next endo appointment to provide Looping data to review. FAQs Do I have to set one of these up? Apple Health is already built into your iPhone and used by Loop, so there's no setup involved. Do I need all three? No, you can choose what suits you best. You can add a data system later. Why do I need any of these? With Loop use, your PDM ( Omnipod ) is not used or your pump (Medtronic) does not have sufficient memory for all the Loop commands. Your endo will have nothing to download at your next visit. You need to provide them with the information. Is it worth the time to setup Nightscout? I feel like I'm already doing so much outside my comfort zone. Yes. Loopers find it is definitely worth the time investment. Nightscout provides essential data for evaluating settings and useful alarms and alerts. Some Facebook help sites require Nightscout data to diagnose and suggest steps to address problems. There are fee-based services that will set up Nightscout for you, if you don't want to build it yourself. Data Options \u00b6 Apple Health app Great resource to view on the Loop phone Not so great for showing your endo Tidepool Some endo offices will use your Tidepool website when you provide them with an invitation Many users of the mobile app like the note taking ability The mobile app also uploads Apple HealthKit data to Tidepool Nightscout: Nightscout link in LoopDocs Nightscout link to LoopTips Nightscout has a lot of useful alarms and alerts, provides a care portal and detailed reports Some versions of Loop and Nightscout together allow for remote interface between caregiver and looper All of the options are free and straightforward to setup. (There are paid options for configuring Nightscout; links to those providers are found along with the DIY steps in the Nightscout docs.) Take some time to familiarize yourself with these options and setup your preferred system(s). Many Loopers use all three for various aspects. Nightscout is the most useful day-to-day for some of its capabilities such as plotting IOB and providing a secure, real-time Dashboard of Loop status visible to anyone with access codes and the internet. Next Step: Meet the Community \u00b6 Now you are ready to Meet the Community .","title":"Loop Data"},{"location":"build/step11/#make-plans-for-your-loop-data","text":"Time Estimate Apple Health: 0 minutes, already a part of your system Tidepool: 30 minutes to set up an account and add Tidepool Mobile to your phone Nightscout: 1-2 hours to build it yourself if you've never done it before 1 hour to choose and sign up for a service if you want to pay someone Summary Review the three major systems that can store and show your Loop data. Set up either Tidepool or Nightscout prior to your next endo appointment to provide Looping data to review. FAQs Do I have to set one of these up? Apple Health is already built into your iPhone and used by Loop, so there's no setup involved. Do I need all three? No, you can choose what suits you best. You can add a data system later. Why do I need any of these? With Loop use, your PDM ( Omnipod ) is not used or your pump (Medtronic) does not have sufficient memory for all the Loop commands. Your endo will have nothing to download at your next visit. You need to provide them with the information. Is it worth the time to setup Nightscout? I feel like I'm already doing so much outside my comfort zone. Yes. Loopers find it is definitely worth the time investment. Nightscout provides essential data for evaluating settings and useful alarms and alerts. Some Facebook help sites require Nightscout data to diagnose and suggest steps to address problems. There are fee-based services that will set up Nightscout for you, if you don't want to build it yourself.","title":"Make Plans for your Loop Data"},{"location":"build/step11/#data-options","text":"Apple Health app Great resource to view on the Loop phone Not so great for showing your endo Tidepool Some endo offices will use your Tidepool website when you provide them with an invitation Many users of the mobile app like the note taking ability The mobile app also uploads Apple HealthKit data to Tidepool Nightscout: Nightscout link in LoopDocs Nightscout link to LoopTips Nightscout has a lot of useful alarms and alerts, provides a care portal and detailed reports Some versions of Loop and Nightscout together allow for remote interface between caregiver and looper All of the options are free and straightforward to setup. (There are paid options for configuring Nightscout; links to those providers are found along with the DIY steps in the Nightscout docs.) Take some time to familiarize yourself with these options and setup your preferred system(s). Many Loopers use all three for various aspects. Nightscout is the most useful day-to-day for some of its capabilities such as plotting IOB and providing a secure, real-time Dashboard of Loop status visible to anyone with access codes and the internet.","title":"Data Options"},{"location":"build/step11/#next-step-meet-the-community","text":"Now you are ready to Meet the Community .","title":"Next Step: Meet the Community"},{"location":"build/step12/","text":"Meet the Community \u00b6 Time Estimate Read about your Social Media Options : 5 minutes Join one or more groups: 10 minutes Summary Learn how to use the search tools explained in How to Ask for Help Learn the motto \"Help us help you\". Learn what information helps in solving a problem in building or in using Loop FAQs \"I'm worried I'll ask a stupid question\" Don't worry. All the mentors started out as novices. Focus instead on asking a thorough question. A thorough question explains what you've already tried or read, has screenshots of what you are confused by, and any other details you can provide. Online Groups \u00b6 There's a wonderful community of Loopers who are willing to help you through the process. This link on Social Media Options walks you through those groups and how to join. Volunteers provide the Loop help found at these sites. None of the people are paid to answer questions or spend time troubleshooting. They simply want to help others. Please decrease their support burden by doing your homework and providing the information they need when requesting help. Please click the image below to watch this video full of tips to make the most of your online resources. Please watch this video (just under 7 minutes) to learn about using announcements and searches in Facebook groups and the LoopDocs pages. Note, the LoopDocs menus were reorganized after this video was prepared to make it easier to progress through the pages. Screenshots \u00b6 Please take screenshots of your issue and include them in your posts. On an Apple computer, press shift-command-4 keys at the same time and a little crosshairs tool will appear. Click-and-drag across the area you'd like to include in the screenshot. When you let go of the button, the screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". To capture an entire window, press shift-command-4 keys at the same time followed by pressing the space bar and then click on the window of interest. Use screenshots instead of cell phone images whenever possible. Screenshots are higher resolution and easier to read. Take a wide screenshot (full window capture) when asking for help with settings or Xcode build errors. Nightscout and Xcode have lots of valuable information off-to-the-side that can be valuable for troubleshooters. Descriptive Language \u00b6 Use descriptive language - the most accurate, detailed words possible - when asking for help. Try to avoid the word \"it\" and instead use details and information to explain why you're asking for help, what you've already tried, and what happened when you tried those things (including screenshots). Let's illustrate with a couple of examples. Example 1 \u00b6 Loop no longer allows you to enter your correction range in the wrong order, i.e., 110 to 90; but it once did and Loop would stop working. We're using that problem as an example below. Bad: \"It's not working.\" <----makes me wonder what \"it\" is? What part of \"it\" isn't working exactly? The app? The glucose control? The pump integration? Alarms? Bolusing? CGM ? Ok: \"My Loop app won't open.\" <---- Ok, so now I know the Loop app itself seems to be the problem, but still don't know if this is a build error or an error that has happened after building. The solutions might be different. Better: \"My Loop app was working yesterday just fine, and now today it's not doing the things like I expect.\" <----- Getting closer. Now, I know this is not a build error and that it sounds like a more recent issue. I'm starting to narrow down the potential causes. This is about as much detail as it takes for me, as a volunteer, to consider helping. I might not have to ask 42 questions, but instead only 4 questions to find the remaining information for troubleshooting. If there were more details, it would save time. Awesome: \"My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments and ever since it just turns white and closes no matter what I try.\" <---- DEFINITELY getting closer. Now I have a strong suspicion about where the bug is happening and can help with a couple links. GOLD MEDAL WORTHY: \"My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments to correction ranges. Ever since I did that, the app immediately turns white and shuts down. I have tried restarting my phone, but it has not fixed the problem. I tried searching the docs for 'loop closing' but didn't see results that matched my issue.\" <----- This person is doing an outstanding job of describing the problem. Lots of good details. Has shown initiative to try to use the resources already. This person did an excellent job of helping all of us help him/her. Example 2 \u00b6 This example is not quite as old, but it refers to older Loop and iOS versions. It exemplifies the details needed to assist someone with a build error. Bad: \"My Loop app won't build.\" <----- What step are you on? What is the iOS on your phone? What kind of computer are you using? What macOS ? What Xcode version? Have you built successfully before or is this new? Ok: \"I'm trying to update my Loop app and am getting a few errors that I don't understand.\" <----- Wow, sure would be nice to know what those error messages are. Are they red or yellow? A screenshot sure would help here. Awesome: \"I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code that I don't understand. I've tried everything in the docs and nothing worked.\" <---- While I'm super happy they \"tried everything\", I'm no closer to knowing what the exact error message is nor which \"stuff\" exactly they tried. But all the version numbers are included. GOLD MEDAL WORTHY: \"I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code 645 that I don't understand. Here's the screenshot of the error message. I tried searching the docs for \"exit code 645\" and didn't see any responses that helped. \" <---- This is the kind of detail that will get you to an answer very fast. Be OK with Links \u00b6 Often, the best answer to your question is sending a link to the answer in LoopDocs or LoopTips. This provides you a quick, accurate and complete answer. We understand that there is so much information in these sites that it can be hard to find answers. Mentors know the docs well, are experts at using the search tools and will send direct links to the sections that best answer your question. If you've searched the docs and read relevant info already, please include that in your post or your reply. That way you don't get linked back to the part you are confused about. And if you have already read the specific section a mentor just linked, be specific about why your problem is not addressed by that link. Or just say \"I'm confused when the doc says this\". Letting us know when these docs can be improved is very useful. Next Step: Build Loop App \u00b6 Now you are ready to Build the Loop App for the released version of the code. This is the version new Loopers should start with. If you understand what a development branch is and want to build the development branch for Loop or the FreeAPS fork , use this page Loop-dev , to build and test the development branch of the app. The Loop dev branch will be released as Loop 3.","title":"Meet the Community"},{"location":"build/step12/#meet-the-community","text":"Time Estimate Read about your Social Media Options : 5 minutes Join one or more groups: 10 minutes Summary Learn how to use the search tools explained in How to Ask for Help Learn the motto \"Help us help you\". Learn what information helps in solving a problem in building or in using Loop FAQs \"I'm worried I'll ask a stupid question\" Don't worry. All the mentors started out as novices. Focus instead on asking a thorough question. A thorough question explains what you've already tried or read, has screenshots of what you are confused by, and any other details you can provide.","title":"Meet the Community"},{"location":"build/step12/#online-groups","text":"There's a wonderful community of Loopers who are willing to help you through the process. This link on Social Media Options walks you through those groups and how to join. Volunteers provide the Loop help found at these sites. None of the people are paid to answer questions or spend time troubleshooting. They simply want to help others. Please decrease their support burden by doing your homework and providing the information they need when requesting help. Please click the image below to watch this video full of tips to make the most of your online resources. Please watch this video (just under 7 minutes) to learn about using announcements and searches in Facebook groups and the LoopDocs pages. Note, the LoopDocs menus were reorganized after this video was prepared to make it easier to progress through the pages.","title":"Online Groups"},{"location":"build/step12/#screenshots","text":"Please take screenshots of your issue and include them in your posts. On an Apple computer, press shift-command-4 keys at the same time and a little crosshairs tool will appear. Click-and-drag across the area you'd like to include in the screenshot. When you let go of the button, the screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". To capture an entire window, press shift-command-4 keys at the same time followed by pressing the space bar and then click on the window of interest. Use screenshots instead of cell phone images whenever possible. Screenshots are higher resolution and easier to read. Take a wide screenshot (full window capture) when asking for help with settings or Xcode build errors. Nightscout and Xcode have lots of valuable information off-to-the-side that can be valuable for troubleshooters.","title":"Screenshots"},{"location":"build/step12/#descriptive-language","text":"Use descriptive language - the most accurate, detailed words possible - when asking for help. Try to avoid the word \"it\" and instead use details and information to explain why you're asking for help, what you've already tried, and what happened when you tried those things (including screenshots). Let's illustrate with a couple of examples.","title":"Descriptive Language"},{"location":"build/step12/#example-1","text":"Loop no longer allows you to enter your correction range in the wrong order, i.e., 110 to 90; but it once did and Loop would stop working. We're using that problem as an example below. Bad: \"It's not working.\" <----makes me wonder what \"it\" is? What part of \"it\" isn't working exactly? The app? The glucose control? The pump integration? Alarms? Bolusing? CGM ? Ok: \"My Loop app won't open.\" <---- Ok, so now I know the Loop app itself seems to be the problem, but still don't know if this is a build error or an error that has happened after building. The solutions might be different. Better: \"My Loop app was working yesterday just fine, and now today it's not doing the things like I expect.\" <----- Getting closer. Now, I know this is not a build error and that it sounds like a more recent issue. I'm starting to narrow down the potential causes. This is about as much detail as it takes for me, as a volunteer, to consider helping. I might not have to ask 42 questions, but instead only 4 questions to find the remaining information for troubleshooting. If there were more details, it would save time. Awesome: \"My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments and ever since it just turns white and closes no matter what I try.\" <---- DEFINITELY getting closer. Now I have a strong suspicion about where the bug is happening and can help with a couple links. GOLD MEDAL WORTHY: \"My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments to correction ranges. Ever since I did that, the app immediately turns white and shuts down. I have tried restarting my phone, but it has not fixed the problem. I tried searching the docs for 'loop closing' but didn't see results that matched my issue.\" <----- This person is doing an outstanding job of describing the problem. Lots of good details. Has shown initiative to try to use the resources already. This person did an excellent job of helping all of us help him/her.","title":"Example 1"},{"location":"build/step12/#example-2","text":"This example is not quite as old, but it refers to older Loop and iOS versions. It exemplifies the details needed to assist someone with a build error. Bad: \"My Loop app won't build.\" <----- What step are you on? What is the iOS on your phone? What kind of computer are you using? What macOS ? What Xcode version? Have you built successfully before or is this new? Ok: \"I'm trying to update my Loop app and am getting a few errors that I don't understand.\" <----- Wow, sure would be nice to know what those error messages are. Are they red or yellow? A screenshot sure would help here. Awesome: \"I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code that I don't understand. I've tried everything in the docs and nothing worked.\" <---- While I'm super happy they \"tried everything\", I'm no closer to knowing what the exact error message is nor which \"stuff\" exactly they tried. But all the version numbers are included. GOLD MEDAL WORTHY: \"I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code 645 that I don't understand. Here's the screenshot of the error message. I tried searching the docs for \"exit code 645\" and didn't see any responses that helped. \" <---- This is the kind of detail that will get you to an answer very fast.","title":"Example 2"},{"location":"build/step12/#be-ok-with-links","text":"Often, the best answer to your question is sending a link to the answer in LoopDocs or LoopTips. This provides you a quick, accurate and complete answer. We understand that there is so much information in these sites that it can be hard to find answers. Mentors know the docs well, are experts at using the search tools and will send direct links to the sections that best answer your question. If you've searched the docs and read relevant info already, please include that in your post or your reply. That way you don't get linked back to the part you are confused about. And if you have already read the specific section a mentor just linked, be specific about why your problem is not addressed by that link. Or just say \"I'm confused when the doc says this\". Letting us know when these docs can be improved is very useful.","title":"Be OK with Links"},{"location":"build/step12/#next-step-build-loop-app","text":"Now you are ready to Build the Loop App for the released version of the code. This is the version new Loopers should start with. If you understand what a development branch is and want to build the development branch for Loop or the FreeAPS fork , use this page Loop-dev , to build and test the development branch of the app. The Loop dev branch will be released as Loop 3.","title":"Next Step: Build Loop App"},{"location":"build/step13/","text":"Advanced Users Only \u00b6 Typically, the dev branch is tested by developers and experienced users. When the dev branch gets more mature, adventurous Loopers want to try out the new features and are not waiting for the release. Please pay extra attention if you proceed with Loop-dev. About Loop-dev \u00b6 Please read What's going on in the dev branch ? before deciding to test the dev branch . Note, the dev branch requires a minimum of iOS 14 on your device Once you install the dev branch on a device, you must delete the app to return to master (the released version), which means all settings will need to be entered in master and a new pod started The dev branch Loop user interface is updated - as an experienced Looper, you will notice the difference Updated documentation is a work-in-progress located under the Loop 3 tab of LoopDocs The development branch supports Omnipod DASH and many less experienced users want that capability. To assist these individuals, a special script (similar to the Build Select script) is provided. The name of the script: BuildLoopFixedDev refers to the fact that the scripts build a version ( commit ) of the dev branch that has been lightly tested. The developers continue to make changes to dev, and after testing, the script is updated to the next lightly tested commit . Returning to Older Version If you decide to return to Loop v2.2.x (or FreeAPS) after building Loop-dev on your phone, you will have to delete the Loop app and all other apps with the shared app group ID. This list includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app. If you use Loop Follow, that does not need to be deleted. For more information, click on Remove Apps with Shared App Group Download Loop-dev \u00b6 This page documents using the BuildLoopFixedDev script to download the development branch of the app for Loop or FreeAPS. The BuildLoopFixedDev script downloads the development branch and then selects a specific commit that has been lightly tested This is still code under development, so please pay attention to your app and report any unexpected behavior on Loop Zulipchat . iOS 16: Developer Mode Required If your phone is running iOS 16, please click on this Developer Mode link, follow the directions on that page and then return to this page. (If you continue on the page with the Developer Mode link, you will be building the released code, not the dev code.) Loop-dev Version \u00b6 The version of code that shows up under the Loop Settings screen will remain \"Loop v2.3.0(57)(dev)\" until Loop-dev is released. As part of the release process, the version number will be updated; but in the interim, it does not change when the code is modified. If you need help with your app, the mentors need more information. Please issue a Loop Report when asking for help. The location for the Issue Report button is in a different location with Loop-dev; refer to Support . If you want to keep track yourself, refer to Identify Loop-dev Version Start the BuildLoopFixedDev Script \u00b6 Copy the line below that starts with /bin/bash by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen. Copy and Paste to start the BuildLoopFixedDev.sh script /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoopFixedDev.sh)\" Paste the line into a Terminal window. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.) Once the line is pasted, hit return to execute the script. Read the screen (shown below). Type 1 and return if you understand the warning and agree. Please read what is on the screen as you progress. Adjust font size as directed if you have difficulty seeing the directions. The next graphic warns you about building a development branch . The date and commit number in the script might not match the graphic below. The values in the script will be updated at appropriate times. The date indicates when that commit was added to the branch . Enter your choice for app and hit return. Loop-dev is strongly recommended. If you get errors when attempting to download, review this section of LoopDocs. (It is in the directions for building the released code.) Resolve the errors, if possible, then return to this page. Wait for Download to Complete \u00b6 This download can take from 3 minutes to 30 minutes depending on your download speed. You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning. You only need to review the display to look for any error messages. When the download completes, the \"Check for successful download\" message is displayed. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. (Your messages about \"Submodule path\" will be different because this graphic is from a different version of Loop.) If you do not find the word error in your terminal window, continue with Download was Successful . If you see the word \"error\" in your terminal window: Read the error message Try to figure out the problem If you need help, reach out to your favorite Loop Social Media site Tap any key other than 1, followed by return to cancel Download was Successful \u00b6 After the download step, the specific, lightly tested version of Loop-dev, indicated by the commit number, will be \"checked out\". You will see that commit number indicated by the line that includes \"HEAD detached at\". Remember, the specific number shown in your terminal may not match the graphic below. Verify the word \"error\" is not shown in the terminal and proceed by typing 1 and hitting return. Sign Targets \u00b6 What does Sign Targets Mean? \" Sign Targets \" in Xcode identifies who built the app. You cannot deploy an app to a phone without signing each target associated with that app. This replaces several of the steps that used to be required to build Loop. The first time you use the script, you will be asked how you want to sign the targets. If you have previously run the script and configured your computer with your Apple Developer ID, this question will not be shown. Skip ahead to Review LoopConfigOverride.xcconfig . The next question, as shown in graphic below, is whether you will (1) Enter Apple Developer ID or (2) Sign Manually. If you are building with a paid developers account, choose option 1, and skip ahead to Create Permanent LoopConfigOverride.xcconfig If you plan to build to a simulator on your computer, choose option 2 and proceed with signing as described on the Build Loop page If you are building with a Free option, choose option 2 then: Review Loop-dev with Free Account Proceed with signing as described on the Build Loop Loop-dev with Free Account \u00b6 Yes you can build Loop-dev with the free account (Personal Team). There are some extra steps needed compared to the steps given for Loop 2.2.x on the Build with Free Account section. If you know your Personal Team ID, you can enter it as directed in Sign Targets above, otherwise, do manual signing. You must remove additional capabilities, the complete list is: Loop Target: Push Notifications; Siri and Time Sensitive Notifications Watch App Extension Target: Siri Add the keyword SIRI_DISABLED to the LoopConfigOverride.xcconfig file Examine the file and find the line that starts with SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited) Insert the new keyword (separated by a space) anywhere after $(inherited) and before the slashes near the end of the line Create Permanent LoopConfigOverride.xcconfig \u00b6 The following graphics show the terminal display after selecting option 1 to use Apple Developer ID. Graphic below: User is presented with instructions for getting Team ID from the Membership page After review, the user hits return Graphic below: The instructions remain on the screen for reference The developer.apple.com web page (not shown) opened automatically in the browser after user hit return User obtains ID User enters ID in terminal and then hits return After hitting return, the user can verify the entry. Review LoopConfigOverride.xcconfig \u00b6 Use Your Team ID The ID, 0123456789, shown in the graphic below is for illustration purposes only. Your terminal display shows your Apple Developer ID (the Team ID on the Membership page). If you previously built with this computer using the script, you already have the file configured. The review step is the same each time. Graphic below: The developer ID stored in the permanent file is displayed for review After review, hit return to continue and Plug in Your Phone OR - to modify the ID in the file, see Problem with the ID? Problem with the ID? \u00b6 If there is a problem with the ID that is stored on your computer, you can modify it before continuing. The instructions, shown in the terminal message, are repeated here: To edit the LoopConfigOverride.xcconfig file with a different developer ID: Open finder, navigate to Downloads/BuildLoop Locate and double click on LoopConfigOverride.xcconfig This will open that file in Xcode Edit in Xcode and save file You can now return to the terminal and hit return for the next step. Build Loop \u00b6 Plug in Your Phone \u00b6 Refer to the graphic below. The messages in the terminal instruct you to: Unlock your phone Plug Phone into the computer (Optional) If you have an Apple Watch that has never had Loop on it Make sure watch is paired, unlocked and on your wrist If you have never \"Trusted\" this computer with these device(s), do so now A screen will pop up on your phone (and watch) asking if you trust the computer Select \"Trust\" After clicking on \"Trust\" the computer for phone and watch, phone should remain plugged in, but watch does not need to stay in proximity of the phone Now you are ready to hit return in the terminal window The final action of the script is to Open a browser window displaying this section of LoopDocs Open Xcode Final Messages \u00b6 The final messages (not shown) let you know you can rerun the script with an up-arrow / return, you can close the terminal window, and you can use a specific command to configure the terminal to be in the LoopWorkspace folder for the downloaded code. Wait until you've successfully built the app before closing the terminal The command of the form: cd /<specific-to-you-and-your-computer>/Downloads/BuildLoop/<download-folder-name>/LoopWorkspace can be useful for some specific actions; most people will not need this. Initial Xcode Screens \u00b6 If you want to Customize Loop , best practice is to build the fresh download (to a simulator instead of your phone) to make sure there are no problems with the download. Then customize and build to your phone.. Refer to the GIF below: Frame 1: Xcode screen opened by the script after a fresh download Wait for indexing to begin If you see messages about fetching symbols or resolving packages, please wait until you see the Indexing message as shown in the GIF below just to the left of the dashed-blue rectangle Indexing makes finding text with Xcode faster; it does not need to complete before building The red rectangle indicates where you will change Loop to Loop ( Workspace ) The red x in the dashed-blue rectangle region indicates you need to fix a problem before building Frame 2: Inset shows the action needed to select Loop ( Workspace ) Frame 3: Loop ( Workspace ) selected but there's a red x in the dashed-blue rectangle region Package Dependency Error \u00b6 If there is no red x in the dashed-blue rectange region on your Xcode screen, skip ahead to Start Build on this page. Otherwise, tap on the red x in the dashed-blue rectange region: If your screen is similar to the figure below, perform the Fix for Package Dependency (repeated below - also found on Build Errors page) If you have a different error, search the Build Error page Fix for Package Dependency \u00b6 Click on the folder icon (indicated by red square) Hold down the Control-Key and click the Package Dependencies row to display the dropdown menu (shown in the inset) Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish You can start the build as soon as the Indexing message appears Start Build \u00b6 Refer to the GIF below: Frame 1: Package Dependency resolved (no red x) Xcode is Indexing as seen in dashed-green rectangle region Indexing makes finding text with Xcode faster; it does not need to complete before building Click the \"Play\" button highlighted by red rectangle to start the build Frame 2: Build has started Xcode is Building as seen in dashed-green rectangle region Frame 3: Build succeeded App is running as seen in dashed-green rectangle region At this point, you can unplug your phone and acknowledge the Xcode message: Lost connection to the debugger on . . . . The square icon next to the play button goes away as soon as you unplug your phone from Xcode . The Loop app on your phone closes (but does not quit) when you unplug the phone. Open the Loop app on your phone just to be sure. New to Loop-dev \u00b6 If this is your first build with Loop-dev, please review these pages before you continue: First Build on this phone: Onboarding Building Loop-dev over Loop 2.2.x or FreeAPS: Experienced Looper Onboarding Carb Absorption Time Update \u00b6 If you used earlier versions of Loop, please be aware that absorption times have changed. Loop-dev Carb Absorption Times Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details. Loop-dev uses absorption times of 30 minute, 3 hours and 5 hours for the Candy, Taco, Pizza icons Loop 2.2.x used 2 hours, 3 hours and 4 hours The 30 minute (candy) time is for rapid acting carbs only If you selected the candy icon for a complex meal, you told Loop to expect your glucose to rise rapidly. When that rapid rise does not materialize, you may find Loop predicts an unexpectedly low glucose because the algorithm assumes something must be affecting your glucose downward in a strong way. If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction. Update Loop-dev \u00b6 While Loop-dev is under active test, you should update frequently. When building frequently, it is optional to update your provisioning profile with every new build. If you want to always ensure one year, follow the steps for Updating: Delete Provisioning Profiles for instructions. Checking for updates every week is a good idea. Also - subscribe to all the streams on Loop Zulipchat to make sure you don't miss critical information. You may choose to run the script each time you update. You can discard older versions of the download by using Finder and navigating to Downloads/BuildLoop. Only the most recent copy is required to build loop. Do not discard the Downloads/BuildLoop/LoopConfigOverride.xcconfig file - that is used to automatically sign your app so you can build. You may prefer to use commands to fetch and pull the latest code without making a new clone . Folder Name If you decide to update code in the same folder, you should edit the folder name to remove the specific build commit appended by the script. This is not required but may avoid confusion. Open a Terminal in LoopWorkspace Folder \u00b6 Refer to the graphic below. The Downloads folder in Finder is highlighted by the green rectangle on the upper left. The folder containing the code downloaded by the BuildLoopFixedDev script is highlighted by the red rectangle. Note the folder name indicates the app name and branch : Loop-dev, the date: 221016, the local time 1619 and the commit number: ca8a374. The LoopWorkspace folder below that (dashed blue rectangle) is the folder that needs to be opened in the terminal app. Open Finder Navigate to Downloads/BuildLoop and look for your download (highlighted by red rectangle) by name and date Open the folder to view LoopWorkspace (dashed blue rectangle) Hold down the CTRL key and click (or right-click) LoopWorkspace A menu appears - select New Terminal at Folder (near the bottom of the list) This new terminal window opens in the LoopWorkspace folder needed to perform git commands to update your downloaded copy ( clone ) when new updates are made to the repository . Some users like to use GitKraken to assist them (link takes you to a tutorial video). Some are comfortable with the command line git commands described on here . Identify Loop-dev Version \u00b6 The version of code that shows up under the Loop Settings screen will remain \"Loop v2.3.0(57)(dev)\" until Loop-dev is released. In order to identify which version of dev you have on your phone, you need the commit . The commit is identified by a 7-digit alphanumeric code. That code was also appended to the folder name of the downloaded code under Downloads/BuildLoop as shown in the graphic above. You can use finder to view the folder name after the script completes. It also appears in the Loop Report, refer to Support for instructions on issuing a Loop Report. After you issue the Loop Report, look at the workspaceGitRevision number near the beginning of the report. When you ran the BuildLoopFixedDev script, the instructions informed you of the commit . Manual vs Automatic Signing \u00b6 If you manually sign any of the targets, for example as an alternative way to get your Developer ID, the file in the Loop folder called Loop.xcodeproj/project.pbxproj is automatically modified to use that target name. Once that happens, the feature that enables Xcode to use the LOOP_DEVELOPMENT_TEAM keyword in the LoopConfigOverride.xcconfig is no longer available. To restore that capability, navigate in the terminal to the LoopWorkspace/Loop folder and issue this command: git restore Loop.xcodeproj/project.pbxproj Remove carthage \u00b6 Completely Optional This section is completely optional. It is only provided to assist those who installed carthage for Loop and want to remove it. You no longer need carthage , and can uninstall it from your system. You do NOT need to uninstall carthage - your choice. If you share the computer with someone else, make sure they don't need carthage . To determine if cathage is installed on your system, copy and paste this phrase into the terminal and hit return: carthage version If the response gives you a version number, then carthage is installed - you can uninstall it if you choose If the response indicates, \" carthage : command not found\", you are done - it is no longer needed to build Loop-dev If carthage is on your system, you can choose to remove it (completely optional with respect to building Loop with updated code). Copy and paste the following line into the terminal window and hit return. rm -rf /usr/local/bin/carthage If the response says you don't have the privilege to do this - it is best to stop. That means carthage was installed by another user - not you. Check with them to make sure they don't require carthage on the computer. The presence or absence of carthage no longer affects the build process for Loop - so it is fine to leave it on your computer. Assuming the previous line did not give an error, then copy and paste this line into the terminal window and hit return to complete carthage removal: sudo rm -rf /Library/Frameworks/CarthageKit.framework You will be prompted for a password when you hit enter on the second line. It is the same password you use in order to log into the computer. It will not echo to the screen.","title":"Loop-dev"},{"location":"build/step13/#advanced-users-only","text":"Typically, the dev branch is tested by developers and experienced users. When the dev branch gets more mature, adventurous Loopers want to try out the new features and are not waiting for the release. Please pay extra attention if you proceed with Loop-dev.","title":"Advanced Users Only"},{"location":"build/step13/#about-loop-dev","text":"Please read What's going on in the dev branch ? before deciding to test the dev branch . Note, the dev branch requires a minimum of iOS 14 on your device Once you install the dev branch on a device, you must delete the app to return to master (the released version), which means all settings will need to be entered in master and a new pod started The dev branch Loop user interface is updated - as an experienced Looper, you will notice the difference Updated documentation is a work-in-progress located under the Loop 3 tab of LoopDocs The development branch supports Omnipod DASH and many less experienced users want that capability. To assist these individuals, a special script (similar to the Build Select script) is provided. The name of the script: BuildLoopFixedDev refers to the fact that the scripts build a version ( commit ) of the dev branch that has been lightly tested. The developers continue to make changes to dev, and after testing, the script is updated to the next lightly tested commit . Returning to Older Version If you decide to return to Loop v2.2.x (or FreeAPS) after building Loop-dev on your phone, you will have to delete the Loop app and all other apps with the shared app group ID. This list includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app. If you use Loop Follow, that does not need to be deleted. For more information, click on Remove Apps with Shared App Group","title":"About Loop-dev"},{"location":"build/step13/#download-loop-dev","text":"This page documents using the BuildLoopFixedDev script to download the development branch of the app for Loop or FreeAPS. The BuildLoopFixedDev script downloads the development branch and then selects a specific commit that has been lightly tested This is still code under development, so please pay attention to your app and report any unexpected behavior on Loop Zulipchat . iOS 16: Developer Mode Required If your phone is running iOS 16, please click on this Developer Mode link, follow the directions on that page and then return to this page. (If you continue on the page with the Developer Mode link, you will be building the released code, not the dev code.)","title":"Download Loop-dev"},{"location":"build/step13/#loop-dev-version","text":"The version of code that shows up under the Loop Settings screen will remain \"Loop v2.3.0(57)(dev)\" until Loop-dev is released. As part of the release process, the version number will be updated; but in the interim, it does not change when the code is modified. If you need help with your app, the mentors need more information. Please issue a Loop Report when asking for help. The location for the Issue Report button is in a different location with Loop-dev; refer to Support . If you want to keep track yourself, refer to Identify Loop-dev Version","title":"Loop-dev Version"},{"location":"build/step13/#start-the-buildloopfixeddev-script","text":"Copy the line below that starts with /bin/bash by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen. Copy and Paste to start the BuildLoopFixedDev.sh script /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoopFixedDev.sh)\" Paste the line into a Terminal window. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.) Once the line is pasted, hit return to execute the script. Read the screen (shown below). Type 1 and return if you understand the warning and agree. Please read what is on the screen as you progress. Adjust font size as directed if you have difficulty seeing the directions. The next graphic warns you about building a development branch . The date and commit number in the script might not match the graphic below. The values in the script will be updated at appropriate times. The date indicates when that commit was added to the branch . Enter your choice for app and hit return. Loop-dev is strongly recommended. If you get errors when attempting to download, review this section of LoopDocs. (It is in the directions for building the released code.) Resolve the errors, if possible, then return to this page.","title":"Start the BuildLoopFixedDev Script"},{"location":"build/step13/#wait-for-download-to-complete","text":"This download can take from 3 minutes to 30 minutes depending on your download speed. You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning. You only need to review the display to look for any error messages. When the download completes, the \"Check for successful download\" message is displayed. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. (Your messages about \"Submodule path\" will be different because this graphic is from a different version of Loop.) If you do not find the word error in your terminal window, continue with Download was Successful . If you see the word \"error\" in your terminal window: Read the error message Try to figure out the problem If you need help, reach out to your favorite Loop Social Media site Tap any key other than 1, followed by return to cancel","title":"Wait for Download to Complete"},{"location":"build/step13/#download-was-successful","text":"After the download step, the specific, lightly tested version of Loop-dev, indicated by the commit number, will be \"checked out\". You will see that commit number indicated by the line that includes \"HEAD detached at\". Remember, the specific number shown in your terminal may not match the graphic below. Verify the word \"error\" is not shown in the terminal and proceed by typing 1 and hitting return.","title":"Download was Successful"},{"location":"build/step13/#sign-targets","text":"What does Sign Targets Mean? \" Sign Targets \" in Xcode identifies who built the app. You cannot deploy an app to a phone without signing each target associated with that app. This replaces several of the steps that used to be required to build Loop. The first time you use the script, you will be asked how you want to sign the targets. If you have previously run the script and configured your computer with your Apple Developer ID, this question will not be shown. Skip ahead to Review LoopConfigOverride.xcconfig . The next question, as shown in graphic below, is whether you will (1) Enter Apple Developer ID or (2) Sign Manually. If you are building with a paid developers account, choose option 1, and skip ahead to Create Permanent LoopConfigOverride.xcconfig If you plan to build to a simulator on your computer, choose option 2 and proceed with signing as described on the Build Loop page If you are building with a Free option, choose option 2 then: Review Loop-dev with Free Account Proceed with signing as described on the Build Loop","title":"Sign Targets"},{"location":"build/step13/#loop-dev-with-free-account","text":"Yes you can build Loop-dev with the free account (Personal Team). There are some extra steps needed compared to the steps given for Loop 2.2.x on the Build with Free Account section. If you know your Personal Team ID, you can enter it as directed in Sign Targets above, otherwise, do manual signing. You must remove additional capabilities, the complete list is: Loop Target: Push Notifications; Siri and Time Sensitive Notifications Watch App Extension Target: Siri Add the keyword SIRI_DISABLED to the LoopConfigOverride.xcconfig file Examine the file and find the line that starts with SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited) Insert the new keyword (separated by a space) anywhere after $(inherited) and before the slashes near the end of the line","title":"Loop-dev with Free Account"},{"location":"build/step13/#create-permanent-loopconfigoverridexcconfig","text":"The following graphics show the terminal display after selecting option 1 to use Apple Developer ID. Graphic below: User is presented with instructions for getting Team ID from the Membership page After review, the user hits return Graphic below: The instructions remain on the screen for reference The developer.apple.com web page (not shown) opened automatically in the browser after user hit return User obtains ID User enters ID in terminal and then hits return After hitting return, the user can verify the entry.","title":"Create Permanent LoopConfigOverride.xcconfig"},{"location":"build/step13/#review-loopconfigoverridexcconfig","text":"Use Your Team ID The ID, 0123456789, shown in the graphic below is for illustration purposes only. Your terminal display shows your Apple Developer ID (the Team ID on the Membership page). If you previously built with this computer using the script, you already have the file configured. The review step is the same each time. Graphic below: The developer ID stored in the permanent file is displayed for review After review, hit return to continue and Plug in Your Phone OR - to modify the ID in the file, see Problem with the ID?","title":"Review LoopConfigOverride.xcconfig"},{"location":"build/step13/#build-loop","text":"","title":"Build Loop"},{"location":"build/step13/#plug-in-your-phone","text":"Refer to the graphic below. The messages in the terminal instruct you to: Unlock your phone Plug Phone into the computer (Optional) If you have an Apple Watch that has never had Loop on it Make sure watch is paired, unlocked and on your wrist If you have never \"Trusted\" this computer with these device(s), do so now A screen will pop up on your phone (and watch) asking if you trust the computer Select \"Trust\" After clicking on \"Trust\" the computer for phone and watch, phone should remain plugged in, but watch does not need to stay in proximity of the phone Now you are ready to hit return in the terminal window The final action of the script is to Open a browser window displaying this section of LoopDocs Open Xcode","title":"Plug in Your Phone"},{"location":"build/step13/#initial-xcode-screens","text":"If you want to Customize Loop , best practice is to build the fresh download (to a simulator instead of your phone) to make sure there are no problems with the download. Then customize and build to your phone.. Refer to the GIF below: Frame 1: Xcode screen opened by the script after a fresh download Wait for indexing to begin If you see messages about fetching symbols or resolving packages, please wait until you see the Indexing message as shown in the GIF below just to the left of the dashed-blue rectangle Indexing makes finding text with Xcode faster; it does not need to complete before building The red rectangle indicates where you will change Loop to Loop ( Workspace ) The red x in the dashed-blue rectangle region indicates you need to fix a problem before building Frame 2: Inset shows the action needed to select Loop ( Workspace ) Frame 3: Loop ( Workspace ) selected but there's a red x in the dashed-blue rectangle region","title":"Initial Xcode Screens"},{"location":"build/step13/#package-dependency-error","text":"If there is no red x in the dashed-blue rectange region on your Xcode screen, skip ahead to Start Build on this page. Otherwise, tap on the red x in the dashed-blue rectange region: If your screen is similar to the figure below, perform the Fix for Package Dependency (repeated below - also found on Build Errors page) If you have a different error, search the Build Error page","title":"Package Dependency Error"},{"location":"build/step13/#fix-for-package-dependency","text":"Click on the folder icon (indicated by red square) Hold down the Control-Key and click the Package Dependencies row to display the dropdown menu (shown in the inset) Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish You can start the build as soon as the Indexing message appears","title":"Fix for Package Dependency"},{"location":"build/step13/#start-build","text":"Refer to the GIF below: Frame 1: Package Dependency resolved (no red x) Xcode is Indexing as seen in dashed-green rectangle region Indexing makes finding text with Xcode faster; it does not need to complete before building Click the \"Play\" button highlighted by red rectangle to start the build Frame 2: Build has started Xcode is Building as seen in dashed-green rectangle region Frame 3: Build succeeded App is running as seen in dashed-green rectangle region At this point, you can unplug your phone and acknowledge the Xcode message: Lost connection to the debugger on . . . . The square icon next to the play button goes away as soon as you unplug your phone from Xcode . The Loop app on your phone closes (but does not quit) when you unplug the phone. Open the Loop app on your phone just to be sure.","title":"Start Build"},{"location":"build/step13/#new-to-loop-dev","text":"If this is your first build with Loop-dev, please review these pages before you continue: First Build on this phone: Onboarding Building Loop-dev over Loop 2.2.x or FreeAPS: Experienced Looper Onboarding","title":"New to Loop-dev"},{"location":"build/step13/#carb-absorption-time-update","text":"If you used earlier versions of Loop, please be aware that absorption times have changed. Loop-dev Carb Absorption Times Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details. Loop-dev uses absorption times of 30 minute, 3 hours and 5 hours for the Candy, Taco, Pizza icons Loop 2.2.x used 2 hours, 3 hours and 4 hours The 30 minute (candy) time is for rapid acting carbs only If you selected the candy icon for a complex meal, you told Loop to expect your glucose to rise rapidly. When that rapid rise does not materialize, you may find Loop predicts an unexpectedly low glucose because the algorithm assumes something must be affecting your glucose downward in a strong way. If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction.","title":"Carb Absorption Time Update"},{"location":"build/step13/#update-loop-dev","text":"While Loop-dev is under active test, you should update frequently. When building frequently, it is optional to update your provisioning profile with every new build. If you want to always ensure one year, follow the steps for Updating: Delete Provisioning Profiles for instructions. Checking for updates every week is a good idea. Also - subscribe to all the streams on Loop Zulipchat to make sure you don't miss critical information. You may choose to run the script each time you update. You can discard older versions of the download by using Finder and navigating to Downloads/BuildLoop. Only the most recent copy is required to build loop. Do not discard the Downloads/BuildLoop/LoopConfigOverride.xcconfig file - that is used to automatically sign your app so you can build. You may prefer to use commands to fetch and pull the latest code without making a new clone . Folder Name If you decide to update code in the same folder, you should edit the folder name to remove the specific build commit appended by the script. This is not required but may avoid confusion.","title":"Update Loop-dev"},{"location":"build/step13/#open-a-terminal-in-loopworkspace-folder","text":"Refer to the graphic below. The Downloads folder in Finder is highlighted by the green rectangle on the upper left. The folder containing the code downloaded by the BuildLoopFixedDev script is highlighted by the red rectangle. Note the folder name indicates the app name and branch : Loop-dev, the date: 221016, the local time 1619 and the commit number: ca8a374. The LoopWorkspace folder below that (dashed blue rectangle) is the folder that needs to be opened in the terminal app. Open Finder Navigate to Downloads/BuildLoop and look for your download (highlighted by red rectangle) by name and date Open the folder to view LoopWorkspace (dashed blue rectangle) Hold down the CTRL key and click (or right-click) LoopWorkspace A menu appears - select New Terminal at Folder (near the bottom of the list) This new terminal window opens in the LoopWorkspace folder needed to perform git commands to update your downloaded copy ( clone ) when new updates are made to the repository . Some users like to use GitKraken to assist them (link takes you to a tutorial video). Some are comfortable with the command line git commands described on here .","title":"Open a Terminal in LoopWorkspace Folder"},{"location":"build/step13/#identify-loop-dev-version","text":"The version of code that shows up under the Loop Settings screen will remain \"Loop v2.3.0(57)(dev)\" until Loop-dev is released. In order to identify which version of dev you have on your phone, you need the commit . The commit is identified by a 7-digit alphanumeric code. That code was also appended to the folder name of the downloaded code under Downloads/BuildLoop as shown in the graphic above. You can use finder to view the folder name after the script completes. It also appears in the Loop Report, refer to Support for instructions on issuing a Loop Report. After you issue the Loop Report, look at the workspaceGitRevision number near the beginning of the report. When you ran the BuildLoopFixedDev script, the instructions informed you of the commit .","title":"Identify Loop-dev Version"},{"location":"build/step13/#manual-vs-automatic-signing","text":"If you manually sign any of the targets, for example as an alternative way to get your Developer ID, the file in the Loop folder called Loop.xcodeproj/project.pbxproj is automatically modified to use that target name. Once that happens, the feature that enables Xcode to use the LOOP_DEVELOPMENT_TEAM keyword in the LoopConfigOverride.xcconfig is no longer available. To restore that capability, navigate in the terminal to the LoopWorkspace/Loop folder and issue this command: git restore Loop.xcodeproj/project.pbxproj","title":"Manual vs Automatic Signing"},{"location":"build/step13/#remove-carthage","text":"Completely Optional This section is completely optional. It is only provided to assist those who installed carthage for Loop and want to remove it. You no longer need carthage , and can uninstall it from your system. You do NOT need to uninstall carthage - your choice. If you share the computer with someone else, make sure they don't need carthage . To determine if cathage is installed on your system, copy and paste this phrase into the terminal and hit return: carthage version If the response gives you a version number, then carthage is installed - you can uninstall it if you choose If the response indicates, \" carthage : command not found\", you are done - it is no longer needed to build Loop-dev If carthage is on your system, you can choose to remove it (completely optional with respect to building Loop with updated code). Copy and paste the following line into the terminal window and hit return. rm -rf /usr/local/bin/carthage If the response says you don't have the privilege to do this - it is best to stop. That means carthage was installed by another user - not you. Check with them to make sure they don't require carthage on the computer. The presence or absence of carthage no longer affects the build process for Loop - so it is fine to leave it on your computer. Assuming the previous line did not give an error, then copy and paste this line into the terminal window and hit return to complete carthage removal: sudo rm -rf /Library/Frameworks/CarthageKit.framework You will be prompted for a password when you hit enter on the second line. It is the same password you use in order to log into the computer. It will not echo to the screen.","title":"Remove carthage"},{"location":"build/step14/","text":"Build the Loop App \u00b6 Summary \u00b6 Time Estimate 60-80 minutes for first time builders 10-15 minutes for repeat builders Summary You will: Enable Developer Mode for iOS 16, watchOS 9 Run the Build Select Script to download Loop code Prepare to build the Loop app Press the Xcode Build Button to build Loop Watch in awe as you build your very own Loop app FAQs The FAQs for building Loop are in-line with the steps that trigger the questions. Build Video \u00b6 The Loop and Learn team prepared this YouTube video showing how to build Loop Master. We recommend reading the written directions below before (and while) watching the video. This video starts with the steps for updating Loop. If this is your first time building, pay attention to what you'll need to do in about a year. The part you'll need to do today (open the terminal to start downloading Loop) is about 3 minutes into the video. Developer Mode \u00b6 If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop . New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode .) If you want to know more, click on this Apple Link about Developer Mode . Loop will not run until you enable Developer Mode for iOS 16. Prepare your Phone and Watch \u00b6 If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode. You will see a message similar to the next graphic If you are building to a new phone - you may need to connect the device to Xcode and trust the computer before the developer mode will be available. If you are building to a new Apple Watch - you may need to build the app with Xcode to a phone paired with the watch before the developer mode will be available. If your phone uses iOS 16 and you do not enable Developer Mode; that phone shows up as an \"Unavailable Device\" under Xcode Developer Mode on iOS 16 Device \u00b6 To determine if Developer Mode is enabled, go into your phone settings, choose Privacy & Security, scroll to the bottom of the screen and tap on the Developer Mode row and examine the Developer Mode slider. If Developer Mode does not show up under Privacy & Security in your phone settings, wait until told to plug the phone, Trust the computer and then look for Developer Mode once connected to Xcode If Developer Mode is enabled, the slider will be green and no further action is required If Developer Mode is not enabled, the slider will be blank Move the slider so it is green Reboot the device when asked After the reboot, you will be asked if you want to turn on Developer mode Tap on the Turn On option Developer Mode on watchOS 9 Device \u00b6 Build, Enable, Build Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable Developer Mode and build again. To determine if Developer Mode is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to the bottom. Tap on the Developer icon, then tap on Developer Mode. If Developer Mode is enabled, the slider will be green and no further action is required If Developer Mode is not enabled, the slider will be blank Move the slider so it is green Reboot the device when asked After the reboot, if you are asked if you want to turn on Developer mode Tap on the Turn On option Download Loop \u00b6 This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop Master. Ensure a Year \u00b6 Rebuild / Update on Same Computer? If you used this same computer to build Loop previously and you did not delete provisioning profiles as instructed on the Updating/Rebuilding page - you will not get a full year with the app. Go to Updating: Delete Provisioning Profiles now and do that step if you missed it. Build Select Script \u00b6 These instructions show each step needed to download Loop using the Build Select script. Optional The Build Select Script can also be used to build a companion app, called Loop Follow, or a fork of Loop, called FreeAPS. Follow these links to different websites for more information about those apps. Information about Loop Follow Information specific to FreeAPS You do not need to know about these apps to build the released version of Loop. Open Terminal \u00b6 Go to the Finder app, click on Applications, then open the Utilities folder. Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal. Copy the line below that starts with /bin/bash by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen. Copy and Paste to start the Build Select script /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoop.sh)\" Paste the line of text into Terminal . Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.) Once the line is pasted, hit return to execute the script. Read the screen (shown below). Type 1 and return if you understand the warning and agree. Please read what is on the screen as you progress. Adjust font size as directed if you have difficulty seeing the directions. You must type 1 (as shown in the graphic above) and return to indicate you understand the warning. Next you will see an introduction to the Build Select script. Please read this. To build Loop, you will select the Build Loop option by typing 1 (as shown in the graphic below) and return. Next you are asked which version of Loop you would like to build. Type 1 and return to build Loop (as shown in the graphic below) or 2 for the FreeAPS fork of Loop. XCode Errors with Build Select \u00b6 WARNINGS If you see errors like these . . . xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun xcode-select: Failed to locate 'git', requesting installation of command line developer tools xcode-select: error: tool 'xed' requires Xcode You missed one of these steps: Install Xcode Xcode command line tools Wait for Download to Complete \u00b6 This download can take from 3 minutes to 30 minutes depending on your download speed. You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning. You only need to review the display to look for any error messages. The next graphic shows terminal messages for the beginning of a successful download. When the download completes, the \"Check for successful download\" message is displayed. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. If you do not find the word error in your terminal window, continue with Download was Successful . If you see the word \"error\" in your terminal window: Read the error message Try to figure out the problem If you need help, reach out to your favorite Loop Social Media site Tap any key other than 1, followed by return to cancel Download was Successful \u00b6 Once you confirm there were no errors, the script continues as shown in the graphic below: Make sure your phone is unlocked and plugged into the computer Hit return when ready to continue The final messages (not shown) inform you that you can rerun the script with an up-arrow / return, close the terminal window and provides an optional command to configure the terminal to be in the LoopWorkspace folder for the downloaded code. Wait until you've successfully built the app before closing the terminal The command of the form: cd /<specific-to-you-and-your-computer>/Downloads/BuildLoop/<download-folder-name>/LoopWorkspace can be useful for some specific actions; most people will not need this. Prepare to Build \u00b6 New builders should skip ahead to Select the Loop Folder and follow the detailed steps. Summary Graphic \u00b6 Experienced Builders Experienced builders can choose to follow the abbreviated build instructions instead. The Loop and Learn abbreviated Build Instructions is automatically opened by the Build Select script Rearrange screens so you can see the webpage and Xcode . Select the Loop Folder \u00b6 Don't touch that button! You will be told exactly where on each screen you should click. Please only click in the designated places. Follow the directions and compare your Xcode screen to the graphics as you walk through the steps. As shown in the GIF below: Frame 1: This is what the Xcode screen looks the very first time it is opened after a fresh download You need to click on the indicated Loop folder icon two times Frame 2: After the 2 clicks, the middle pane of the Xcode window is populated as shown Select Loop ( Workspace ) and Your Phone \u00b6 If this is the First Time your phone or watch has been connected to Xcode , you will need to tell the phone and watch to \"Trust this Computer\". The GIF below shows: Frame 1: Same as end of previous GIF There's a red rectangle around the dropdown menus The menu on the left says \"Loop\" Frame 2: Same as Frame 1 with a zoomed inset of the red rectangle You can see Loop has a check mark beside it Loop ( Workspace ) is one line below Select Loop ( Workspace ) Frame 3: Zoomed inset after selecting Loop ( Workspace ) Frame 4: Desired result of selecting Loop ( Workspace ) showing your phone iOS 16 Developer Mode If you have not enabled Developer Mode on a phone running iOS 16, you will see the phone name in the Unavailable Device section with the notation: \"(Developer Mode disabled)\". Refer to Prepare your Phone and Watch . My Phone is Not Selected Plug in your unlocked phone and select your phone using the dropdown menu (right side of red rectangle highlight in the GIF ) Look in the iOS Device section Not the iOS Simulator section I Still Don't See My Phone If you don't see your phone, unplug and plug in again Still don't see your phone - reboot the phone - and if that doesn't work - reboot the computer Still don't see your phone - try a different cable or USB slot Most Common Mistake The most common mistake in this step is: not selecting Loop ( Workspace ) not selecting your actual phone as shown in the screenshot below Build to a Simulator \u00b6 Skip this section if building to a phone and proceed to Select Signing & Capabilities Tab . If you want to build to a simulator, follow the directions in this section. Simply choose one of the iOS Simulators instead of a phone and build to it The iOS simulator you choose does not need to be the same model as your phone With a simulator, you do not need to sign targets: You must select Loop ( Workspace ) Then you can click on the \"play\" button in the upper left pane of Xcode to build to the simulator Skip ahead to Build Loop and ignore all the instructions about signing the app and warnings about code sign messages After a successful build, a simulated phone appears on your computer and you can interact with the app on that simulated phone Select Signing & Capabilities Tab \u00b6 The graphic below indicates in red the three places you need to click in order to begin signing targets. First, click on the tab labeled Signing & Capabilities Second, click on the icon labeled Loop under the word TARGETS Third, click on the dropdown menu (red circle) by the word Team Click Only where Instructed Make sure All , indicated by dashed blue oval, is selected If Debug or Release is accidentally tapped, you will not be able to build Make sure Automatically manage signing , indicated by dashed blue rectangle, is checked Sign Targets \u00b6 It is time to Sign the Targets with your Apple Developer ID . This associates your Developer ID with the app. You will be building multiple targets to make a complete app and must sign each one. With Loop 2.2.x, there are 4 targets. First Time In addition to the Trust Your Computer steps mentioned above for the first time you plug in your phone, the first time you use your Apple Developer ID to sign a target for an app, you need to register your device with your Apple Developer ID. A message similar to the one in the graphic below will appear with the first target you sign. At any time after you see that message, click on the \"Register Device\" button to confirm. You must be connected to the Internet for this step because your computer needs to communicate with Apple to register that device You must register the device at some point before you try to build the app to the device Start with the Loop target, the first one on the target list. Choose the team you'd like to sign with. If you select a team name without (personal team), your app will last a full year. If you select a team name with (personal team), your app will expire after 7 days You must disable Push Notification and Siri - click on the link for instructions then return using your browser back button If you never signed up for a Free Developer Account , you will not have a (personal team) showing A successfully signed target will have a Provisioning Profile and signing certificate similar to the screenshot below. Click on each of the three remaining targets shown in the red box below, and repeat the signing steps by choosing the same team name as you selected in the first target. The four targets that must be signed prior to building the Loop app are Loop , Loop Status Extension , Watch App , and WatchApp Extension . After signing the 4 targets, click on the Loop icon under the PROJECTS heading. (Refer to the bright blue box in graphic above - click on that Loop icon.) If you skip this step, you may get an \"Entitlements\" Build Error for either Loop or WatchApp Follow this procedure to fix the error: Entitlements Error Much easier to just click on Loop under Projects Advanced Users Only There are more targets that must be signed to build the dev branch . If you followed the directions in Loop-dev and edited the LoopConfigOverride.xcconfig, your targets are already signed. Repeat: only build the dev branch if you're a developer/advanced user If you are using a paid account, skip over the next section to Optional Steps Free Account \u00b6 These steps are only required for those building with the Free Account. The graphics in this section have not been updated to show \"Loop ( Workspace )\". The graphics in this section have not been updated for Xcode 13, which uses the trashcan icon instead of the x for removing capabilities. If you are using a free account to build Loop-dev, review this section and then Loop-dev with Free Account Free Developer Account Users: READ ME If you are using a free developer account, you will need to do an extra step before you can successfully sign the targets. As a free developer, you are restricted from building apps that have Siri or push notification capabilities built-in. Loop has both of these capabilities, so you will need to disable them before signing and building your app. The push notification capability is used for setting remote overrides; disabling it will not affect other notifications on the Loop phone, e.g., \"Loop Failure\", \"Pump Reservoir Low\", etc. Click on the small x next to the Siri and push notification lines located at the bottom of the Signing & Capabilities box. You need to do this in both the Loop and WatchApp Extension targets. Note that this graphic shows Debug selected in the Signing & Capabilities pane. This is not correct - make sure that All is selected instead. Optional Steps \u00b6 Code Customizations \u00b6 New Loop users : Customizations are not a required part of any Loop build. As you gain experience using your Loop app, you may want to customize some of the features. First time builders are encouraged to build with the standard, default code. You can always update your Loop app to add customizations at a later time, using the same download. Subsequent build time is much faster than the initial build for a given download. If you want any custom configurations to your Loop or Loop Apple Watch apps, follow the step-by-step instructions on the Code Customizations page prior to pressing the Build button. When you've finished your customizations, come on back to this section and continue with the rest of the build. Pair Your Apple Watch \u00b6 New Apple Watch users : If you have a new Apple watch and want to use it with Loop, first pair the watch with the iPhone before continuing to the next steps. If you get a new watch after building the Loop app, you'll need to redo your Loop build. (Don't worry, it's as easy as pressing play on your saved Loop project.) Existing Apple Watch users : Please update your watchOS prior to building the Loop app. The current version of Loop requires watchOS 4.1 or newer. Have the Apple Watch paired to the phone and unlocked and on the users's wrist in range of the phone during the build. You may get a Trust This Computer prompt on the watch for the first build of the app with that watch. Build Loop \u00b6 Before building Loop, confirm that: Your iPhone is unlocked and plugged into the computer You selected Loop ( Workspace ) You selected your phone and not a simulator You signed the four targets You clicked on the Loop icon under the PROJECTS heading OPTIONAL: Your Apple watch is paired and updated OPTIONAL: You finished desired customizations ? It is time to press the \u201cBuild\u201d (Play) button to start Xcode on its way. First Time for This Computer If you have never built an app on this computer, you will need to allow the app access once for every target. Review these instructions before you press the Build button so you know what to do. The graphics in this section have not been updated to show \"Loop ( Workspace )\". Helpful Tips The final step of a successful build is for Xcode to copy the completed build to your iPhone; if your phone is locked, Xcode pops up a message letting you know. Unlock your phone to continue. You\u2019ll see the progression of the build in the status window (top middle of Xcode ). New builds can take 5-30 minutes, depending on the speed of the computer. Just be patient. The progress will stay on one step/task for a very long time, and then the others will fly by. Not every step is equal in duration. Do not give up on the build. Xcode will ALWAYS tell you eventually that the build either succeeded or failed via an ephemeral (self-disappearing) pop-up message on the computer display. If you miss the message, you can look at the top of the Xcode window to see a \"Running Loop...\" (success) or \"Unlock Phone to Continue\" or \"Build Failed\" (failure) message where the step progress was previously counting down. Codesign / Keychain Access \u00b6 First Time Using Developer ID on Computer During your first build with a given Developer ID on your computer, you will see a codesign/keychain access prompt, as shown in the graphic below. Enter the same password you use to log in to the mac, select \"Always Allow\" and then do it again each time you are asked. It is normal for this prompt to come up repeatedly even after you enter the correct password (once for each target Loop needs to sign). In frustration, people think the prompt must be broken because it keeps reappearing and press deny or cancel. Don't press deny. Keep entering your computer password and pressing the \"Always Allow\" button as many times as it takes. The build will then continue. FYI: codesign is for code sign - nothing to do with design. Build Finished \u00b6 First Time Building on a New Device? If this is the first time you have installed an app on your iPhone using a free account, you will see warnings in both Xcode and on your phone after a successful build and install on your phone. Don't worry, dismiss the messages and do this extra step on the phone. These instructions are valid for iOS 15: Open Phone Settings Select General Select VPN & Device Management Under the Developer App section, tap on icon Tap on Trust You should now be able to open the app Build Succeeded \u00b6 Congratulations! If the build is successful, you'll see the message \"Running Loop...\" across the top of the Xcode window. Pick up your phone and look at it. You can unplug your phone from the computer now. You will get an Xcode message window that says \"Lost connection to the debugger on <your phone name>\". Just click OK. Xcode 14 Message \u00b6 It is not unusual with Xcode 14, to see a message that Launching Loop is taking longer than expected. So long as the app eventually opens on your phone and you do not get an error message, this is not a concern. If you click in the box to the left of \"Don't ask again\" before tapping on Continue, then you will not see this message in the future. Your brand new Loop app will automatically open a screen asking you to allow Loop to send you notifications. The Health app permissions screen will be visible in the background, but you must answer the Notification request first. Click Allow to enable Loop to send you notifications. Now the Health permissions screen is active. Click on the Turn All Categories On line and then immediately turn OFF the permission to read Carbohydrates . The end result is that Health should have permission to read and write Blood Glucose and Insulin Delivery; permission to write Carbohydrates ( NOT read carbs ); and permission to read Sleep Data. When the permissions are set correctly, i.e., match the image below, click Allow in the upper right corner. Next, you will use the Set up App section of this website to keep proceeding safely. FAQ: But what about those yellow or purple warnings that remain in Xcode ? If you see yellow or purple warnings during and after your build is done, those are not an issue. Just ignore the yellow or purple warnings. Build Failed \u00b6 Breaking News for Xcode 13 There is a new error for Xcode 13, \"WatchApp Extension.entitlements\" or \"Loop.entitlements\" depending on which icon you left highlighted when signing targets. (We checked many combinations - if you follow the instructions to highlight the Loop icon below PROJECTS , you won't get the error.) If you do see that error, follow this link: Entitlements Error for an easy fix. If you get any other message that your build failed and see RED ERROR messages, go to the Build Errors page to find the steps to fix your build error. Most build errors are covered on that page along with instructions on how to fix them and how to ask for help. Once you've resolved the issue and start the build process again, Xcode will continue to show a red circle on the top line from the previous failure. If you don't like seeing that, clean the build folder to clear the error. Otherwise, as long as the steps of the build are showing across the top line, Xcode is still working on the build. When the build succeeds, the red circle will disappear. Clean Build Folder In Xcode menu, select Product, then Clean Build Folder Wait for cleaning to complete: you'll see a \"Clean Finished\" message Summary \u00b6 If your build failed, you need to proceed to the Build Errors page to find the solution. Please go there first to find the help you need. If your build was successful but your phone was locked, you will see an Xcode message window that says \"Unlock <your phone name> to Continue\". Simply unlock your phone and the app will be copied onto your phone and automatically open. If there were no build errors, you're done building your Loop app. If your phone is still plugged into your computer, you can unplug it. You will get an Xcode message window that says \"Lost connection to the debugger on <your phone name>\". Just click OK. Protect that App \u00b6 Protect Against Deletion Prevent your Loop app from being deleted accidentally. If you, or a child, deletes the app from the home screen, it is gone - you have to rebuild and reenter all settings and start a new pod or add back in your Medtronic pump. The steps vary depending on iOS . With iOS 15 and 16, it is under Screen Time, Content & Privacy Restrictions, iTunes & App Store Purchases, Deleting Apps. Choose Don't Allow. If those steps don't help, do an internet search like this, where you use your current phone iOS version number: \"turn off app deletion iOS ##\" \" iOS ## prevent app deletion\" Follow the instructions to prevent deletion of what is now a critical medical app. Next Steps \u00b6 Add a Calendar Reminder It is good practice to add a reminder to your calendar when the app will expire (7 days or 1 year). Be sure to add an alert to that reminder so you have enough time to do all the Loop Updating steps to build the app again before it expires IMPORTANT SAFETY REMINDER \u00b6 DO THE STEPS BELOW STAY IN OPEN LOOP UNTIL YOU UNDERSTAND THE SYSTEM Go to the Set Up page to configure your Loop and follow that up with the first Operate page and work through those pages as you learn to run Loop safely.","title":"Build Loop App"},{"location":"build/step14/#build-the-loop-app","text":"","title":"Build the Loop App"},{"location":"build/step14/#summary","text":"Time Estimate 60-80 minutes for first time builders 10-15 minutes for repeat builders Summary You will: Enable Developer Mode for iOS 16, watchOS 9 Run the Build Select Script to download Loop code Prepare to build the Loop app Press the Xcode Build Button to build Loop Watch in awe as you build your very own Loop app FAQs The FAQs for building Loop are in-line with the steps that trigger the questions.","title":"Summary"},{"location":"build/step14/#build-video","text":"The Loop and Learn team prepared this YouTube video showing how to build Loop Master. We recommend reading the written directions below before (and while) watching the video. This video starts with the steps for updating Loop. If this is your first time building, pay attention to what you'll need to do in about a year. The part you'll need to do today (open the terminal to start downloading Loop) is about 3 minutes into the video.","title":"Build Video"},{"location":"build/step14/#developer-mode","text":"If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop . New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode .) If you want to know more, click on this Apple Link about Developer Mode . Loop will not run until you enable Developer Mode for iOS 16.","title":"Developer Mode"},{"location":"build/step14/#prepare-your-phone-and-watch","text":"If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode. You will see a message similar to the next graphic If you are building to a new phone - you may need to connect the device to Xcode and trust the computer before the developer mode will be available. If you are building to a new Apple Watch - you may need to build the app with Xcode to a phone paired with the watch before the developer mode will be available. If your phone uses iOS 16 and you do not enable Developer Mode; that phone shows up as an \"Unavailable Device\" under Xcode","title":"Prepare your Phone and Watch"},{"location":"build/step14/#download-loop","text":"This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop Master.","title":"Download Loop"},{"location":"build/step14/#ensure-a-year","text":"Rebuild / Update on Same Computer? If you used this same computer to build Loop previously and you did not delete provisioning profiles as instructed on the Updating/Rebuilding page - you will not get a full year with the app. Go to Updating: Delete Provisioning Profiles now and do that step if you missed it.","title":"Ensure a Year"},{"location":"build/step14/#build-select-script","text":"These instructions show each step needed to download Loop using the Build Select script. Optional The Build Select Script can also be used to build a companion app, called Loop Follow, or a fork of Loop, called FreeAPS. Follow these links to different websites for more information about those apps. Information about Loop Follow Information specific to FreeAPS You do not need to know about these apps to build the released version of Loop.","title":"Build Select Script"},{"location":"build/step14/#xcode-errors-with-build-select","text":"WARNINGS If you see errors like these . . . xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun xcode-select: Failed to locate 'git', requesting installation of command line developer tools xcode-select: error: tool 'xed' requires Xcode You missed one of these steps: Install Xcode Xcode command line tools","title":"XCode Errors with Build Select"},{"location":"build/step14/#wait-for-download-to-complete","text":"This download can take from 3 minutes to 30 minutes depending on your download speed. You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning. You only need to review the display to look for any error messages. The next graphic shows terminal messages for the beginning of a successful download. When the download completes, the \"Check for successful download\" message is displayed. You will need to scroll up in the terminal window to look through all the messages output to the terminal from the beginning of the download. If you do not find the word error in your terminal window, continue with Download was Successful . If you see the word \"error\" in your terminal window: Read the error message Try to figure out the problem If you need help, reach out to your favorite Loop Social Media site Tap any key other than 1, followed by return to cancel","title":"Wait for Download to Complete"},{"location":"build/step14/#download-was-successful","text":"Once you confirm there were no errors, the script continues as shown in the graphic below: Make sure your phone is unlocked and plugged into the computer Hit return when ready to continue The final messages (not shown) inform you that you can rerun the script with an up-arrow / return, close the terminal window and provides an optional command to configure the terminal to be in the LoopWorkspace folder for the downloaded code. Wait until you've successfully built the app before closing the terminal The command of the form: cd /<specific-to-you-and-your-computer>/Downloads/BuildLoop/<download-folder-name>/LoopWorkspace can be useful for some specific actions; most people will not need this.","title":"Download was Successful"},{"location":"build/step14/#prepare-to-build","text":"New builders should skip ahead to Select the Loop Folder and follow the detailed steps.","title":"Prepare to Build"},{"location":"build/step14/#summary-graphic","text":"Experienced Builders Experienced builders can choose to follow the abbreviated build instructions instead. The Loop and Learn abbreviated Build Instructions is automatically opened by the Build Select script Rearrange screens so you can see the webpage and Xcode .","title":"Summary Graphic"},{"location":"build/step14/#select-the-loop-folder","text":"Don't touch that button! You will be told exactly where on each screen you should click. Please only click in the designated places. Follow the directions and compare your Xcode screen to the graphics as you walk through the steps. As shown in the GIF below: Frame 1: This is what the Xcode screen looks the very first time it is opened after a fresh download You need to click on the indicated Loop folder icon two times Frame 2: After the 2 clicks, the middle pane of the Xcode window is populated as shown","title":"Select the Loop Folder"},{"location":"build/step14/#select-loop-workspace-and-your-phone","text":"If this is the First Time your phone or watch has been connected to Xcode , you will need to tell the phone and watch to \"Trust this Computer\". The GIF below shows: Frame 1: Same as end of previous GIF There's a red rectangle around the dropdown menus The menu on the left says \"Loop\" Frame 2: Same as Frame 1 with a zoomed inset of the red rectangle You can see Loop has a check mark beside it Loop ( Workspace ) is one line below Select Loop ( Workspace ) Frame 3: Zoomed inset after selecting Loop ( Workspace ) Frame 4: Desired result of selecting Loop ( Workspace ) showing your phone iOS 16 Developer Mode If you have not enabled Developer Mode on a phone running iOS 16, you will see the phone name in the Unavailable Device section with the notation: \"(Developer Mode disabled)\". Refer to Prepare your Phone and Watch . My Phone is Not Selected Plug in your unlocked phone and select your phone using the dropdown menu (right side of red rectangle highlight in the GIF ) Look in the iOS Device section Not the iOS Simulator section I Still Don't See My Phone If you don't see your phone, unplug and plug in again Still don't see your phone - reboot the phone - and if that doesn't work - reboot the computer Still don't see your phone - try a different cable or USB slot Most Common Mistake The most common mistake in this step is: not selecting Loop ( Workspace ) not selecting your actual phone as shown in the screenshot below","title":"Select Loop (Workspace) and Your Phone"},{"location":"build/step14/#build-to-a-simulator","text":"Skip this section if building to a phone and proceed to Select Signing & Capabilities Tab . If you want to build to a simulator, follow the directions in this section. Simply choose one of the iOS Simulators instead of a phone and build to it The iOS simulator you choose does not need to be the same model as your phone With a simulator, you do not need to sign targets: You must select Loop ( Workspace ) Then you can click on the \"play\" button in the upper left pane of Xcode to build to the simulator Skip ahead to Build Loop and ignore all the instructions about signing the app and warnings about code sign messages After a successful build, a simulated phone appears on your computer and you can interact with the app on that simulated phone","title":"Build to a Simulator"},{"location":"build/step14/#select-signing-capabilities-tab","text":"The graphic below indicates in red the three places you need to click in order to begin signing targets. First, click on the tab labeled Signing & Capabilities Second, click on the icon labeled Loop under the word TARGETS Third, click on the dropdown menu (red circle) by the word Team Click Only where Instructed Make sure All , indicated by dashed blue oval, is selected If Debug or Release is accidentally tapped, you will not be able to build Make sure Automatically manage signing , indicated by dashed blue rectangle, is checked","title":"Select Signing &amp; Capabilities Tab"},{"location":"build/step14/#sign-targets","text":"It is time to Sign the Targets with your Apple Developer ID . This associates your Developer ID with the app. You will be building multiple targets to make a complete app and must sign each one. With Loop 2.2.x, there are 4 targets. First Time In addition to the Trust Your Computer steps mentioned above for the first time you plug in your phone, the first time you use your Apple Developer ID to sign a target for an app, you need to register your device with your Apple Developer ID. A message similar to the one in the graphic below will appear with the first target you sign. At any time after you see that message, click on the \"Register Device\" button to confirm. You must be connected to the Internet for this step because your computer needs to communicate with Apple to register that device You must register the device at some point before you try to build the app to the device Start with the Loop target, the first one on the target list. Choose the team you'd like to sign with. If you select a team name without (personal team), your app will last a full year. If you select a team name with (personal team), your app will expire after 7 days You must disable Push Notification and Siri - click on the link for instructions then return using your browser back button If you never signed up for a Free Developer Account , you will not have a (personal team) showing A successfully signed target will have a Provisioning Profile and signing certificate similar to the screenshot below. Click on each of the three remaining targets shown in the red box below, and repeat the signing steps by choosing the same team name as you selected in the first target. The four targets that must be signed prior to building the Loop app are Loop , Loop Status Extension , Watch App , and WatchApp Extension . After signing the 4 targets, click on the Loop icon under the PROJECTS heading. (Refer to the bright blue box in graphic above - click on that Loop icon.) If you skip this step, you may get an \"Entitlements\" Build Error for either Loop or WatchApp Follow this procedure to fix the error: Entitlements Error Much easier to just click on Loop under Projects Advanced Users Only There are more targets that must be signed to build the dev branch . If you followed the directions in Loop-dev and edited the LoopConfigOverride.xcconfig, your targets are already signed. Repeat: only build the dev branch if you're a developer/advanced user If you are using a paid account, skip over the next section to Optional Steps","title":"Sign Targets"},{"location":"build/step14/#optional-steps","text":"","title":"Optional Steps"},{"location":"build/step14/#build-loop","text":"Before building Loop, confirm that: Your iPhone is unlocked and plugged into the computer You selected Loop ( Workspace ) You selected your phone and not a simulator You signed the four targets You clicked on the Loop icon under the PROJECTS heading OPTIONAL: Your Apple watch is paired and updated OPTIONAL: You finished desired customizations ? It is time to press the \u201cBuild\u201d (Play) button to start Xcode on its way. First Time for This Computer If you have never built an app on this computer, you will need to allow the app access once for every target. Review these instructions before you press the Build button so you know what to do. The graphics in this section have not been updated to show \"Loop ( Workspace )\". Helpful Tips The final step of a successful build is for Xcode to copy the completed build to your iPhone; if your phone is locked, Xcode pops up a message letting you know. Unlock your phone to continue. You\u2019ll see the progression of the build in the status window (top middle of Xcode ). New builds can take 5-30 minutes, depending on the speed of the computer. Just be patient. The progress will stay on one step/task for a very long time, and then the others will fly by. Not every step is equal in duration. Do not give up on the build. Xcode will ALWAYS tell you eventually that the build either succeeded or failed via an ephemeral (self-disappearing) pop-up message on the computer display. If you miss the message, you can look at the top of the Xcode window to see a \"Running Loop...\" (success) or \"Unlock Phone to Continue\" or \"Build Failed\" (failure) message where the step progress was previously counting down.","title":"Build Loop"},{"location":"build/step14/#build-finished","text":"First Time Building on a New Device? If this is the first time you have installed an app on your iPhone using a free account, you will see warnings in both Xcode and on your phone after a successful build and install on your phone. Don't worry, dismiss the messages and do this extra step on the phone. These instructions are valid for iOS 15: Open Phone Settings Select General Select VPN & Device Management Under the Developer App section, tap on icon Tap on Trust You should now be able to open the app","title":"Build Finished"},{"location":"build/step14/#build-succeeded","text":"Congratulations! If the build is successful, you'll see the message \"Running Loop...\" across the top of the Xcode window. Pick up your phone and look at it. You can unplug your phone from the computer now. You will get an Xcode message window that says \"Lost connection to the debugger on <your phone name>\". Just click OK.","title":"Build Succeeded"},{"location":"build/step14/#build-failed","text":"Breaking News for Xcode 13 There is a new error for Xcode 13, \"WatchApp Extension.entitlements\" or \"Loop.entitlements\" depending on which icon you left highlighted when signing targets. (We checked many combinations - if you follow the instructions to highlight the Loop icon below PROJECTS , you won't get the error.) If you do see that error, follow this link: Entitlements Error for an easy fix. If you get any other message that your build failed and see RED ERROR messages, go to the Build Errors page to find the steps to fix your build error. Most build errors are covered on that page along with instructions on how to fix them and how to ask for help. Once you've resolved the issue and start the build process again, Xcode will continue to show a red circle on the top line from the previous failure. If you don't like seeing that, clean the build folder to clear the error. Otherwise, as long as the steps of the build are showing across the top line, Xcode is still working on the build. When the build succeeds, the red circle will disappear. Clean Build Folder In Xcode menu, select Product, then Clean Build Folder Wait for cleaning to complete: you'll see a \"Clean Finished\" message","title":"Build Failed"},{"location":"build/step14/#summary_1","text":"If your build failed, you need to proceed to the Build Errors page to find the solution. Please go there first to find the help you need. If your build was successful but your phone was locked, you will see an Xcode message window that says \"Unlock <your phone name> to Continue\". Simply unlock your phone and the app will be copied onto your phone and automatically open. If there were no build errors, you're done building your Loop app. If your phone is still plugged into your computer, you can unplug it. You will get an Xcode message window that says \"Lost connection to the debugger on <your phone name>\". Just click OK.","title":"Summary"},{"location":"build/step14/#protect-that-app","text":"Protect Against Deletion Prevent your Loop app from being deleted accidentally. If you, or a child, deletes the app from the home screen, it is gone - you have to rebuild and reenter all settings and start a new pod or add back in your Medtronic pump. The steps vary depending on iOS . With iOS 15 and 16, it is under Screen Time, Content & Privacy Restrictions, iTunes & App Store Purchases, Deleting Apps. Choose Don't Allow. If those steps don't help, do an internet search like this, where you use your current phone iOS version number: \"turn off app deletion iOS ##\" \" iOS ## prevent app deletion\" Follow the instructions to prevent deletion of what is now a critical medical app.","title":"Protect that App"},{"location":"build/step14/#next-steps","text":"Add a Calendar Reminder It is good practice to add a reminder to your calendar when the app will expire (7 days or 1 year). Be sure to add an alert to that reminder so you have enough time to do all the Loop Updating steps to build the app again before it expires","title":"Next Steps"},{"location":"build/step14/#important-safety-reminder","text":"DO THE STEPS BELOW STAY IN OPEN LOOP UNTIL YOU UNDERSTAND THE SYSTEM Go to the Set Up page to configure your Loop and follow that up with the first Operate page and work through those pages as you learn to run Loop safely.","title":"IMPORTANT SAFETY REMINDER"},{"location":"build/step2/","text":"Compatible iPhone or iPod touch \u00b6 Time Estimate 5 minutes, to check your device and iOS 20 minutes, if need to update your compatible device to a new iOS 10 minutes, if you need to order a compatible device from Apple website 0 minutes, if you own an Android and won't buy Apple products; check out AndroidAPS Documention Summary Check your iPhone/iPod touch against the device compatibility list For all devices, the newest iOS is strongly recommended Make sure the phone has good battery life Turn off automatic updates FAQs \"Can I use an android?\" No. Check out AndroidAPS Documention . \"Can I use an iPad?\" No. iPads do not support Apple Health and Loop uses Apple Health. \"Does my iPhone need a cell plan?\" No. Loop works using communication on your phone with your CGM and your pump; no internet connection required. However, if access to Dexcom Follow or Nightscout monitoring of Loop is a priority, then a cell plan may be desired. Which Devices Are Compatible? \u00b6 Loop requires an iPhone or iPod touch. Loop uses the Apple Health app to store and retrieve your blood glucose and insulin data and to store your carbohydrate records. iPads do not have the Apple Health app, so iPads will not work with Loop. You need a minimum version of the mobile operating software, called the phone's \" iOS \", to be installed on your iPhone or iPod touch. Loop is compatible with iPhone and iPod touch devices with iOS 12.4 or newer. The next version of Loop will require a minimum of iOS 14. Compatible Devices \u00b6 These devices are compatible with iOS 14 through iOS 16. iPhone 14, all variants iPhone 13, all variants iPhone 12, all variants iPhone 11, all variants iPhone X, all variants iPhone 8, all variants iPhone SE (3rd generation or later model; 2022 first release) iPhone SE (2nd generation; 2020 first release) These devices are compatible with Loop 3, but cannot be upgraded to iOS 16. Loop 3 is the soon-to-be released version of Loop. This version of Loop requires iOS 14. iPhone 7, all variants iPhone 6s, all variants - but note the \"s\" iPhone SE (1st generation; 2016 first release) iPod Touch, 7th generation Devices Incompatible with Loop 3 \u00b6 These devices are compatible with Loop 2.2.x but will not be compatible when Loop 3 is released. Plan to Update Soon You will not be able to build the next release of Loop on these devices iPhone 5s, 6, 6+ iPod Touch, 6th generation Find Your Device's iOS \u00b6 Your phone's iOS version can be found under the phone Settings -> General -> About display as shown below. The iOS number is found on the Software Version line. Do not use any of the beta iOS versions. (Don't worry...if you don't know what that means, then you aren't using one.) Developer Mode \u00b6 With iOS 16 and watchOS 9, Apple added a feature. If you want to know more, click on this Apple Link about Developer Mode . When you build (or run) Loop on your phone running iOS 16, and watch paired to your phone running watchOS 9, you need to have Developer Mode enabled. You will be told to enable it in the Build Loop App: Prepare your Phone and Watch instructions. Developer Mode with iOS 16, watchOS 9 If you already have Loop on your phone/watch when you update to iOS 16/ watchOS 9, you will be told that Loop requires Developer Mode to run. You will not be able to run Loop on your phone (or watch) until you have enabled Developer Mode on the device(s). Battery Health \u00b6 Make sure the battery on your phone is solid. Your phone will become a critical health device - you want it to keep working. Make sure a charger and cord are in your diabetes supplies Consider buying a battery pack, keep it charged and add it to your travel bag Low Power Mode With newer iOS (14 and 15), some people have reported Loop continues working in the background (phone locked) even in Low Power Mode . Others, have reported they still get red loops. You can experiment to determine if your phone/ iOS /app is able to maintain green loops in low power mode. Otherwise, best practice is to avoid Low Power Mode. Turn Off Automatic Updates \u00b6 Apple provides updates regularly to the iOS . Often, these updates include critical security patches in addition to improved new features. Please be proactive - install updates as soon as the \"Loop\" all-clear is given. If a limitation on your Mac prevents you from updating your phone to the latest iOS , please pay attention to security vulnerabilities. Why Turn off Automatic Updates? \u00b6 Once you accept an iOS phone update, you cannot go backwards Some iOS updates require updates to Xcode and macOS before people can build Loop on that device again It is rare, but iOS updates have caused Loop to stop working until other updates were made and Loop was rebuilt on that phone Turn off automatic updates so you can choose when to update your phone and avoid being caught without a working Loop app Google the instructions for your device: Configure your phone to automatically download the updates Choose to perform the installation of the updates manually When iOS updates are released, the Loop and Learn Version Updates page is typically updated faster than LoopDocs. Check to see if a new update is causing an issue with Loop or your CGM before accepting the update from Apple. Within a few days, the \"All-Clear\" or \"WAIT there's a problem\" will be posted. Older Builds Updating to iOS 15 immediately stops the Loop app if it was built with Xcode versions 12.4 or earlier and requires a rebuild to continue Looping** Look at an Issue Report to determine the Xcode version used to build Loop on your phone Next Step: Compatible Pump \u00b6 Now you are ready to check if you have a Compatible Insulin Pump .","title":"Compatible iPhone/iPod"},{"location":"build/step2/#compatible-iphone-or-ipod-touch","text":"Time Estimate 5 minutes, to check your device and iOS 20 minutes, if need to update your compatible device to a new iOS 10 minutes, if you need to order a compatible device from Apple website 0 minutes, if you own an Android and won't buy Apple products; check out AndroidAPS Documention Summary Check your iPhone/iPod touch against the device compatibility list For all devices, the newest iOS is strongly recommended Make sure the phone has good battery life Turn off automatic updates FAQs \"Can I use an android?\" No. Check out AndroidAPS Documention . \"Can I use an iPad?\" No. iPads do not support Apple Health and Loop uses Apple Health. \"Does my iPhone need a cell plan?\" No. Loop works using communication on your phone with your CGM and your pump; no internet connection required. However, if access to Dexcom Follow or Nightscout monitoring of Loop is a priority, then a cell plan may be desired.","title":"Compatible iPhone or iPod touch"},{"location":"build/step2/#which-devices-are-compatible","text":"Loop requires an iPhone or iPod touch. Loop uses the Apple Health app to store and retrieve your blood glucose and insulin data and to store your carbohydrate records. iPads do not have the Apple Health app, so iPads will not work with Loop. You need a minimum version of the mobile operating software, called the phone's \" iOS \", to be installed on your iPhone or iPod touch. Loop is compatible with iPhone and iPod touch devices with iOS 12.4 or newer. The next version of Loop will require a minimum of iOS 14.","title":"Which Devices Are Compatible?"},{"location":"build/step2/#compatible-devices","text":"These devices are compatible with iOS 14 through iOS 16. iPhone 14, all variants iPhone 13, all variants iPhone 12, all variants iPhone 11, all variants iPhone X, all variants iPhone 8, all variants iPhone SE (3rd generation or later model; 2022 first release) iPhone SE (2nd generation; 2020 first release) These devices are compatible with Loop 3, but cannot be upgraded to iOS 16. Loop 3 is the soon-to-be released version of Loop. This version of Loop requires iOS 14. iPhone 7, all variants iPhone 6s, all variants - but note the \"s\" iPhone SE (1st generation; 2016 first release) iPod Touch, 7th generation","title":"Compatible Devices"},{"location":"build/step2/#devices-incompatible-with-loop-3","text":"These devices are compatible with Loop 2.2.x but will not be compatible when Loop 3 is released. Plan to Update Soon You will not be able to build the next release of Loop on these devices iPhone 5s, 6, 6+ iPod Touch, 6th generation","title":"Devices Incompatible with Loop 3"},{"location":"build/step2/#find-your-devices-ios","text":"Your phone's iOS version can be found under the phone Settings -> General -> About display as shown below. The iOS number is found on the Software Version line. Do not use any of the beta iOS versions. (Don't worry...if you don't know what that means, then you aren't using one.)","title":"Find Your Device's iOS"},{"location":"build/step2/#developer-mode","text":"With iOS 16 and watchOS 9, Apple added a feature. If you want to know more, click on this Apple Link about Developer Mode . When you build (or run) Loop on your phone running iOS 16, and watch paired to your phone running watchOS 9, you need to have Developer Mode enabled. You will be told to enable it in the Build Loop App: Prepare your Phone and Watch instructions. Developer Mode with iOS 16, watchOS 9 If you already have Loop on your phone/watch when you update to iOS 16/ watchOS 9, you will be told that Loop requires Developer Mode to run. You will not be able to run Loop on your phone (or watch) until you have enabled Developer Mode on the device(s).","title":"Developer Mode"},{"location":"build/step2/#battery-health","text":"Make sure the battery on your phone is solid. Your phone will become a critical health device - you want it to keep working. Make sure a charger and cord are in your diabetes supplies Consider buying a battery pack, keep it charged and add it to your travel bag Low Power Mode With newer iOS (14 and 15), some people have reported Loop continues working in the background (phone locked) even in Low Power Mode . Others, have reported they still get red loops. You can experiment to determine if your phone/ iOS /app is able to maintain green loops in low power mode. Otherwise, best practice is to avoid Low Power Mode.","title":"Battery Health"},{"location":"build/step2/#turn-off-automatic-updates","text":"Apple provides updates regularly to the iOS . Often, these updates include critical security patches in addition to improved new features. Please be proactive - install updates as soon as the \"Loop\" all-clear is given. If a limitation on your Mac prevents you from updating your phone to the latest iOS , please pay attention to security vulnerabilities.","title":"Turn Off Automatic Updates"},{"location":"build/step2/#why-turn-off-automatic-updates","text":"Once you accept an iOS phone update, you cannot go backwards Some iOS updates require updates to Xcode and macOS before people can build Loop on that device again It is rare, but iOS updates have caused Loop to stop working until other updates were made and Loop was rebuilt on that phone Turn off automatic updates so you can choose when to update your phone and avoid being caught without a working Loop app Google the instructions for your device: Configure your phone to automatically download the updates Choose to perform the installation of the updates manually When iOS updates are released, the Loop and Learn Version Updates page is typically updated faster than LoopDocs. Check to see if a new update is causing an issue with Loop or your CGM before accepting the update from Apple. Within a few days, the \"All-Clear\" or \"WAIT there's a problem\" will be posted. Older Builds Updating to iOS 15 immediately stops the Loop app if it was built with Xcode versions 12.4 or earlier and requires a rebuild to continue Looping** Look at an Issue Report to determine the Xcode version used to build Loop on your phone","title":"Why Turn off Automatic Updates?"},{"location":"build/step2/#next-step-compatible-pump","text":"Now you are ready to check if you have a Compatible Insulin Pump .","title":"Next Step: Compatible Pump"},{"location":"build/step3/","text":"Compatible Pump \u00b6 Time Estimate Omnipod users: 3 seconds to remember which PDM you've been using. Medtronic users: 10 minutes to put a battery in and look at model and firmware Other pump users: 5 days to email friends asking them to check closets for their old Medtronic pump or call your insurance to start prior authorization for Omnipod Summary If you have a Medtronic pump, check the Medtronic Pump Version list to ensure compatible model/firmware If you use Omnipod - check which kind FAQs \"How can I find a compatible Medtronic pump?\" Refer to Finding a Medtronic Pump \"What are the differences between Medtronic pump models?\" This question is also answered in the Extra Details section \"But what about the other types of pumps?\" No other pumps work with Loop at this time There are other open-source closed loop options such as AAPS: Android Artificial Pancreas System and OpenAPS that support other pumps. \"Can I change the firmware of my Medtronic pump?\" No. Pumps Compatible with Loop \u00b6 There are two types of pumps compatible with Loop. Older Medtronic pumps Omnipod Eros pumps Omnipod DASH pumps - under development and active test Check Medtronic Pump Version \u00b6 Medtronic 515 or 715 (any firmware) Medtronic 522 or 722 (any firmware) Medtronic 523 or 723 (firmware 2.4 or lower) Medtronic Worldwide Veo 554 or 754 (firmware 2.6A or lower) Medtronic Canadian/Australian Veo 554 or 754 (firmware 2.7A or lower) If you have one of the pumps listed above, you are good to go on Loop! Congrats! Extra Details on Medtronic \u00b6 There are a number of Medtronic insulin pumps manufactured between 2006 \u2013 2012 which are Loop compatible. Compatibility has two requirements: (1) pump model and (2) firmware. Medtronic Pump Model \u00b6 To determine your pump model, look at the backside of your pump. There should be a sticker on the underside of the pump. On the right-hand side of the sticker, it says REF MMT-XXXXXX MMT ---> Pump Manufacturer Model (MiniMed Medtronic) 722 ---> Pump Model Number NA ---> Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide) S ---> Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple) Some pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-722LNAS. This does not affect Loop compatibility. Medtronic Pump Firmware \u00b6 A pump\u2019s firmware is the internal software that runs your pump. Older Medtronic firmware allows Loop to act as a \u201cremote control\u201d to set temp basals and report back pump data. Newer firmware disabled that \u201cremote control\u201d access and therefore cannot be used with these DIY closed-loop systems. There is currently no ability to downgrade a pump\u2019s firmware or replace it with older firmware. Before you buy a used pump, make sure you are getting one with compatible firmware. The firmware on all 515/715 and 522/722 model Medtronic pumps is compatible with Loop. You will only need to check the firmware version for 523/723 and 554/754 model Medtronic pumps. Medtronic 515 or 715 --> any firmware Medtronic 522 or 722 --> any firmware Medtronic 523 or 723 --> firmware 2.4 or lower Medtronic Worldwide Veo 554 or 754 --> firmware 2.6A or lower Medtronic Canadian/Australian Veo 554 or 754 --> firmware 2.7A or lower To find your pump\u2019s firmware you will need to power it on. If the pump has not been powered on for some time (i.e., has been in storage without a battery for a while), it will run through a start-up count and the firmware version will appear on the bottom right of the pump\u2019s screen. Don\u2019t turn away, as the version number will only be displayed for a little while before the screen moves onto other information displays. If the pump has been active recently or has a reservoir installed, follow these steps: Press the button on your pump. Scroll down with the button to the bottom of the status display. Read the bottom line of the display. Medtronic Pump Differences \u00b6 If you are in the position of being able to shop around for different pump models, there are some slight differences between the Loop-compatible Medtronic pumps. 500 vs 700 : The difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs. The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want). x15/x22 vs x23/x54 : The differences noteworthy between the x15 and x22 pumps versus the x23 and x54 series pumps are: The x23/x54 pumps will allow for smaller insulin deliveries in certain situations, if the smaller scroll rate is selected in the Bolus>Setup>Scroll Rate menu. Loop will have the insulin delivery automatically rounded by the pump to the units available in the pump model, and any smaller adjustments (to make up for the rounding) will be made through Loop\u2019s use of temp basals. If you want the smaller increments of basal rates, you can still enter those values in the Loop app's settings and Loop will use those values for the purposes of insulin delivery calculations. Pump Model Basal increments Bolus increments Range 515/715 and 522/722 0.05 0.1 0.1 0.1 deliveries of less than 10 units greater than 10 units 523/723 and 554/754 0.025 0.05 0.1 0.025 0.05 0.1 between 0.025 to 0.975 units between 1 to 9.95 units greater than 10 units Additionally, because of the way Loop fetches information from the pump, the x23/x54 series of pumps are slightly better at conserving battery life through the use of the MySentry packets to collect information from the pump. x22 pumps do not use MySentry. The x23/x54 series pumps are also faster at delivering boluses greater than 10 units. On an x23 pump, a 13-unit bolus takes 5:00 minutes to complete. On an x22 pump, a 13-unit bolus takes 8:40 minutes to complete. Finding a Medtronic Pump \u00b6 Finding a compatible Medtronic pump is probably the most difficult part for most new Loopers. Our suggestions: Talk to friends in the diabetic community. Ask your endocrinologist. Ask at a local JDRF chapter meeting if someone has an old backup pump they'd be willing to donate to you. Join diabetic supply groups on Facebook; both for-trade and for-sale groups. Check Craigslist often and be willing to expand your search area to include larger cities. Check out the HelpAround, NextDoor, OfferUp, and/or LetGo apps for pumps. Search Medwow for used Medtronic pumps. Medwow has been fairly frustrating for most people; poor response rate and high prices. The most success appears to come from either one-on-one discussions with fellow diabetics/doctors or using apps (Craigslist, NextDoor, LetGo, HelpAround). If you are using Craigslist, you may wish to use an app on your iPhone to make the searching easier. There are apps to search multiple cities at once for your keywords and set up alerts. Safe Purchasing \u00b6 If you choose to purchase from a remote or unknown seller, here are some tips for safe purchasing: Use PayPal and purchase using the \"Goods and Services\" payment option. This costs nothing for the buyer, but the seller will lose 2.95% of the sale to PayPal fees. PayPal offers some protection for both buyer and seller in the event of fraud. Ask for photos of the pump. Check to make sure the serial number of the pump on the backside matches the serial number of the pump showing in the display menu. Ask for a short video of the pump, or at least a photo of the pump turned on, so that you can see the pump's firmware and model number. Cracks and some wear on these pumps are expected. These pumps are not usually free of marks. Many people are successfully looping on pumps that have cracks and rub marks, but you may want to ask if you are concerned about any you see in photos. Beware if the bottom of the reservoir/motor sleeve has the drive support cap pushed out, as shown here . Those pumps will generally not work (or only work intermittently), however some people have successfully repaired those pumps as shown in that link. Just be aware that it should be checked in advance. Repairs to cracks or missing bits of plastic on battery cap area and reservoir caps are possible and not very difficult in most situations. You can read more about how to repair those here . Ask for shipping that includes a tracking number. USPS Priority Mail's smallest box is a great option. It's only $7.20 domestically in the US and includes tracking. Ask the seller to add a small bit of packing protection such as bubble wrap around the pump to keep it safe during shipping. Make sure you get a tracking number within a reasonable period of time after you have paid. Red flags that may indicate a scam: Asking for payment through \"friends and family\" on PayPal, especially if you don't know the person or have any solid references for them. Paying in that way offers you no buyer protection. It's just like giving the seller cash, so you had better trust the seller. Offering an \"almost new\" pump is a big red flag. These pumps should be at least 5-years-old by now. Do you really think a 5 year old pump should be unused and sitting in shrink wrap at this point? This seems highly suspicious. There are some out there, but they are very infrequent. Not able to provide new pictures of the pump when requested. Sure they posted some pictures with the ad, but what if they just downloaded them from other people's ads? The seller should be able to furnish a couple of \"new\" photos at your request. A good one to ask for is the battery and reservoir tops so you can see the condition of those. Pump Supplies \u00b6 Medtronic will not typically sell pump supplies directly to customers who have not previously purchased a registered Medtronic pump. Ask your insurance about purchasing pump supplies through a durable medical equipment (DME) provider. Typically, the DME provider will coordinate with your insurance and doctor's office to get the necessary insurance approval and prescriptions for the supplies. If you are brand new to Medtronic infusion sites, you may want to ask for help from friends to try a variety of infusion sets before purchasing a full 90-day supply of any type in particular. Omnipod Pumps \u00b6 Reminder and Disclaimer The use of Omnipod pumps with Loop is not supported by Insulet, although they are aware it is happening. Do not call Insulet asking for help with your Loop build, setup, or operation. You are fully responsible for your use of Loop and do so at your own risk. Please read these documents and familiarize yourself with Loop before using. Omnipod Eros \u00b6 Eros pods were launched in 2013 and continue to be sold by Insulet. As far as we know, there have been no plans or timelines announced for the discontinuation of Eros pods for existing customers. Insulet doesn't specifically call these \"Eros\" anymore, they just use the term \"omnipod system\". For clarity, from Insulet's webpage : Eros system has that PDM we all recognize from the last several years. Omnipod DASH \u00b6 Insulet has announced their DASH system as an eventual replacement for the Eros/ Omnipod System. The DASH system has the newer, slimmer locked-android PDM and built-in BLE communications in the pod, so there is no requirement for a RileyLink compatible device. Loop is working with DASH pods in the development branch only . When that branch is ready for release, then it will become Loop 3.0. If you are an experienced looper and want to help test the next release, please start here , read carefully, follow the links and join zulipchat. Omnipod 5 \u00b6 Loop does not support Omnipod 5 pods. Next Step: Compatible CGM \u00b6 Now you are ready to check if you have a Compatible CGM .","title":"Compatible Pump"},{"location":"build/step3/#compatible-pump","text":"Time Estimate Omnipod users: 3 seconds to remember which PDM you've been using. Medtronic users: 10 minutes to put a battery in and look at model and firmware Other pump users: 5 days to email friends asking them to check closets for their old Medtronic pump or call your insurance to start prior authorization for Omnipod Summary If you have a Medtronic pump, check the Medtronic Pump Version list to ensure compatible model/firmware If you use Omnipod - check which kind FAQs \"How can I find a compatible Medtronic pump?\" Refer to Finding a Medtronic Pump \"What are the differences between Medtronic pump models?\" This question is also answered in the Extra Details section \"But what about the other types of pumps?\" No other pumps work with Loop at this time There are other open-source closed loop options such as AAPS: Android Artificial Pancreas System and OpenAPS that support other pumps. \"Can I change the firmware of my Medtronic pump?\" No.","title":"Compatible Pump"},{"location":"build/step3/#pumps-compatible-with-loop","text":"There are two types of pumps compatible with Loop. Older Medtronic pumps Omnipod Eros pumps Omnipod DASH pumps - under development and active test","title":"Pumps Compatible with Loop"},{"location":"build/step3/#check-medtronic-pump-version","text":"Medtronic 515 or 715 (any firmware) Medtronic 522 or 722 (any firmware) Medtronic 523 or 723 (firmware 2.4 or lower) Medtronic Worldwide Veo 554 or 754 (firmware 2.6A or lower) Medtronic Canadian/Australian Veo 554 or 754 (firmware 2.7A or lower) If you have one of the pumps listed above, you are good to go on Loop! Congrats!","title":"Check Medtronic Pump Version"},{"location":"build/step3/#extra-details-on-medtronic","text":"There are a number of Medtronic insulin pumps manufactured between 2006 \u2013 2012 which are Loop compatible. Compatibility has two requirements: (1) pump model and (2) firmware.","title":"Extra Details on Medtronic"},{"location":"build/step3/#medtronic-pump-model","text":"To determine your pump model, look at the backside of your pump. There should be a sticker on the underside of the pump. On the right-hand side of the sticker, it says REF MMT-XXXXXX MMT ---> Pump Manufacturer Model (MiniMed Medtronic) 722 ---> Pump Model Number NA ---> Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide) S ---> Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple) Some pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-722LNAS. This does not affect Loop compatibility.","title":"Medtronic Pump Model"},{"location":"build/step3/#medtronic-pump-firmware","text":"A pump\u2019s firmware is the internal software that runs your pump. Older Medtronic firmware allows Loop to act as a \u201cremote control\u201d to set temp basals and report back pump data. Newer firmware disabled that \u201cremote control\u201d access and therefore cannot be used with these DIY closed-loop systems. There is currently no ability to downgrade a pump\u2019s firmware or replace it with older firmware. Before you buy a used pump, make sure you are getting one with compatible firmware. The firmware on all 515/715 and 522/722 model Medtronic pumps is compatible with Loop. You will only need to check the firmware version for 523/723 and 554/754 model Medtronic pumps. Medtronic 515 or 715 --> any firmware Medtronic 522 or 722 --> any firmware Medtronic 523 or 723 --> firmware 2.4 or lower Medtronic Worldwide Veo 554 or 754 --> firmware 2.6A or lower Medtronic Canadian/Australian Veo 554 or 754 --> firmware 2.7A or lower To find your pump\u2019s firmware you will need to power it on. If the pump has not been powered on for some time (i.e., has been in storage without a battery for a while), it will run through a start-up count and the firmware version will appear on the bottom right of the pump\u2019s screen. Don\u2019t turn away, as the version number will only be displayed for a little while before the screen moves onto other information displays. If the pump has been active recently or has a reservoir installed, follow these steps: Press the button on your pump. Scroll down with the button to the bottom of the status display. Read the bottom line of the display.","title":"Medtronic Pump Firmware"},{"location":"build/step3/#medtronic-pump-differences","text":"If you are in the position of being able to shop around for different pump models, there are some slight differences between the Loop-compatible Medtronic pumps. 500 vs 700 : The difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs. The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want). x15/x22 vs x23/x54 : The differences noteworthy between the x15 and x22 pumps versus the x23 and x54 series pumps are: The x23/x54 pumps will allow for smaller insulin deliveries in certain situations, if the smaller scroll rate is selected in the Bolus>Setup>Scroll Rate menu. Loop will have the insulin delivery automatically rounded by the pump to the units available in the pump model, and any smaller adjustments (to make up for the rounding) will be made through Loop\u2019s use of temp basals. If you want the smaller increments of basal rates, you can still enter those values in the Loop app's settings and Loop will use those values for the purposes of insulin delivery calculations. Pump Model Basal increments Bolus increments Range 515/715 and 522/722 0.05 0.1 0.1 0.1 deliveries of less than 10 units greater than 10 units 523/723 and 554/754 0.025 0.05 0.1 0.025 0.05 0.1 between 0.025 to 0.975 units between 1 to 9.95 units greater than 10 units Additionally, because of the way Loop fetches information from the pump, the x23/x54 series of pumps are slightly better at conserving battery life through the use of the MySentry packets to collect information from the pump. x22 pumps do not use MySentry. The x23/x54 series pumps are also faster at delivering boluses greater than 10 units. On an x23 pump, a 13-unit bolus takes 5:00 minutes to complete. On an x22 pump, a 13-unit bolus takes 8:40 minutes to complete.","title":"Medtronic Pump Differences"},{"location":"build/step3/#finding-a-medtronic-pump","text":"Finding a compatible Medtronic pump is probably the most difficult part for most new Loopers. Our suggestions: Talk to friends in the diabetic community. Ask your endocrinologist. Ask at a local JDRF chapter meeting if someone has an old backup pump they'd be willing to donate to you. Join diabetic supply groups on Facebook; both for-trade and for-sale groups. Check Craigslist often and be willing to expand your search area to include larger cities. Check out the HelpAround, NextDoor, OfferUp, and/or LetGo apps for pumps. Search Medwow for used Medtronic pumps. Medwow has been fairly frustrating for most people; poor response rate and high prices. The most success appears to come from either one-on-one discussions with fellow diabetics/doctors or using apps (Craigslist, NextDoor, LetGo, HelpAround). If you are using Craigslist, you may wish to use an app on your iPhone to make the searching easier. There are apps to search multiple cities at once for your keywords and set up alerts.","title":"Finding a Medtronic Pump"},{"location":"build/step3/#safe-purchasing","text":"If you choose to purchase from a remote or unknown seller, here are some tips for safe purchasing: Use PayPal and purchase using the \"Goods and Services\" payment option. This costs nothing for the buyer, but the seller will lose 2.95% of the sale to PayPal fees. PayPal offers some protection for both buyer and seller in the event of fraud. Ask for photos of the pump. Check to make sure the serial number of the pump on the backside matches the serial number of the pump showing in the display menu. Ask for a short video of the pump, or at least a photo of the pump turned on, so that you can see the pump's firmware and model number. Cracks and some wear on these pumps are expected. These pumps are not usually free of marks. Many people are successfully looping on pumps that have cracks and rub marks, but you may want to ask if you are concerned about any you see in photos. Beware if the bottom of the reservoir/motor sleeve has the drive support cap pushed out, as shown here . Those pumps will generally not work (or only work intermittently), however some people have successfully repaired those pumps as shown in that link. Just be aware that it should be checked in advance. Repairs to cracks or missing bits of plastic on battery cap area and reservoir caps are possible and not very difficult in most situations. You can read more about how to repair those here . Ask for shipping that includes a tracking number. USPS Priority Mail's smallest box is a great option. It's only $7.20 domestically in the US and includes tracking. Ask the seller to add a small bit of packing protection such as bubble wrap around the pump to keep it safe during shipping. Make sure you get a tracking number within a reasonable period of time after you have paid. Red flags that may indicate a scam: Asking for payment through \"friends and family\" on PayPal, especially if you don't know the person or have any solid references for them. Paying in that way offers you no buyer protection. It's just like giving the seller cash, so you had better trust the seller. Offering an \"almost new\" pump is a big red flag. These pumps should be at least 5-years-old by now. Do you really think a 5 year old pump should be unused and sitting in shrink wrap at this point? This seems highly suspicious. There are some out there, but they are very infrequent. Not able to provide new pictures of the pump when requested. Sure they posted some pictures with the ad, but what if they just downloaded them from other people's ads? The seller should be able to furnish a couple of \"new\" photos at your request. A good one to ask for is the battery and reservoir tops so you can see the condition of those.","title":"Safe Purchasing"},{"location":"build/step3/#pump-supplies","text":"Medtronic will not typically sell pump supplies directly to customers who have not previously purchased a registered Medtronic pump. Ask your insurance about purchasing pump supplies through a durable medical equipment (DME) provider. Typically, the DME provider will coordinate with your insurance and doctor's office to get the necessary insurance approval and prescriptions for the supplies. If you are brand new to Medtronic infusion sites, you may want to ask for help from friends to try a variety of infusion sets before purchasing a full 90-day supply of any type in particular.","title":"Pump Supplies"},{"location":"build/step3/#omnipod-pumps","text":"Reminder and Disclaimer The use of Omnipod pumps with Loop is not supported by Insulet, although they are aware it is happening. Do not call Insulet asking for help with your Loop build, setup, or operation. You are fully responsible for your use of Loop and do so at your own risk. Please read these documents and familiarize yourself with Loop before using.","title":"Omnipod Pumps"},{"location":"build/step3/#omnipod-eros","text":"Eros pods were launched in 2013 and continue to be sold by Insulet. As far as we know, there have been no plans or timelines announced for the discontinuation of Eros pods for existing customers. Insulet doesn't specifically call these \"Eros\" anymore, they just use the term \"omnipod system\". For clarity, from Insulet's webpage : Eros system has that PDM we all recognize from the last several years.","title":"Omnipod Eros"},{"location":"build/step3/#omnipod-dash","text":"Insulet has announced their DASH system as an eventual replacement for the Eros/ Omnipod System. The DASH system has the newer, slimmer locked-android PDM and built-in BLE communications in the pod, so there is no requirement for a RileyLink compatible device. Loop is working with DASH pods in the development branch only . When that branch is ready for release, then it will become Loop 3.0. If you are an experienced looper and want to help test the next release, please start here , read carefully, follow the links and join zulipchat.","title":"Omnipod DASH"},{"location":"build/step3/#omnipod-5","text":"Loop does not support Omnipod 5 pods.","title":"Omnipod 5"},{"location":"build/step3/#next-step-compatible-cgm","text":"Now you are ready to check if you have a Compatible CGM .","title":"Next Step: Compatible CGM"},{"location":"build/step4/","text":"Compatible CGM \u00b6 Time Estimate 10 minutes to read this page Summary Loop is compatible with: Dexcom G4 Share, G5, or G6 CGM systems Medtronic sensors connected to a Loop-compatible Medtronic pumps FAQs \"What about Libre sensors?\" Refer to CGMs Not Supported in Loop \"What about Eversense?\" Refer to CGMs Not Supported in Loop Continuous Glucose Monitor ( CGM ) \u00b6 Loop uses your CGM glucose readings, carbohydrate input and therapy settings, to model your current glucose trend, predict future glucose and automatically adjust insulin dosing. A compatible CGM is essential to operation of the Loop app. Dexcom G5 and G6 CGM \u00b6 The Dexcom G5 and G6 CGM transmits data directly to the Dexcom app on your iPhone via Bluetooth. If the Dexcom app is on the same device as Loop, Loop can function without an internet connection. See Offline Use below. Dexcom G5 Support Dexcom has stopped supporting the G5 system in the US . In the US, and some other countries, the G5 is not available for download from the Apple Store. There are countries in which Dexcom does supply and support G5. The G5 capability will be supported in the next version of Loop (currently under test in the dev branch .) There are third party apps, which interface with G4 and G5 transmitters, supported by some forks of Loop. The version of Loop supported by these documents only works with the Dexcom apps. Dexcom G4 CGM with Share Receiver \u00b6 Loop 3.0 will not support G4 Loop 3 (currently under test in the dev branch ) will not support G4 because it is no longer available. If this is a problem for current Loop users, please post on your favorite social media site . The Dexcom G4 Share system transmits CGM data from the transmitter to a Dexcom G4 Share Receiver. The receiver, in turn, connects to the Dexcom Share2 app on your iPhone via Bluetooth. The Share2 app uploads CGM data to the Dexcom servers from your phone. For Loop to function without an internet connection, you will need the Dexcom app running on the same device as Loop. Medtronic CGM \u00b6 The Minimed Enlite CGM , available with the Medtronic 522/722, 523/723, and 554/754, wirelessly sends glucose readings to the pump. Loop can read the Medtronic CGM data directly from the pump using a RileyLink compatible device. Offline Use \u00b6 \"Offline Use\" means using Loop when there is no cell data or internet available. Loop does not require any special setup to operate offline. For offline Loop use, the iPhone's Bluetooth still needs to be active; and for Dexcom users, the Share2, G5, or G6 app also needs to be running on your Loop phone. If you put your iPhone into Airplane mode, remember to turn Bluetooth back on to keep your Loop running. If your offline use is failing, chances are you have forgotten to update your transmitter ID in Loop settings when you changed transmitters. Dexcom Share \u00b6 Loop can download Dexcom Share data for use in modeling BG. However, this is not a typical configuration and requires internet connection for both the phone with the Dexcom app and the phone with the Loop app. The Loop Set Up Steps for adding a CGM explain that you usually enter the Dexcom transmitter ID and leave the Dexcom Share setting blank. CGMs Not Supported in Loop \u00b6 Loop does not directly support other CGM , such as Libre, Eversense and Medtronic Guardian. When Loop 3 is released, any sensor that can be uploaded to Nightscout can be used with Loop if internet service is available. To use one of those alternate CGMs for Loop 2.2.x, you will need to look into third-party integrations, such as the FreeAPS fork , for access to the CGM data. First search for previous posts on the topic and then ask questions in a Loop Social Media site if you need help. Currently, there are no solutions for Eversense or Guardian CGM to be used directly with Loop, but some Uploaders to Nightscout are available using an Android phone. The next Loop release, and the current FreeAPS fork , allow the use of Nightscout as a CGM source. Next Step \u00b6 If your compatible pump is Medtronic or Omnipod (not DASH) Next step is to Order a RileyLink Compatible Device If your compatible pump is Omnipod DASH Next step is to enroll in the Apple Developer Program .","title":"Compatible CGM"},{"location":"build/step4/#compatible-cgm","text":"Time Estimate 10 minutes to read this page Summary Loop is compatible with: Dexcom G4 Share, G5, or G6 CGM systems Medtronic sensors connected to a Loop-compatible Medtronic pumps FAQs \"What about Libre sensors?\" Refer to CGMs Not Supported in Loop \"What about Eversense?\" Refer to CGMs Not Supported in Loop","title":"Compatible CGM"},{"location":"build/step4/#continuous-glucose-monitor-cgm","text":"Loop uses your CGM glucose readings, carbohydrate input and therapy settings, to model your current glucose trend, predict future glucose and automatically adjust insulin dosing. A compatible CGM is essential to operation of the Loop app.","title":"Continuous Glucose Monitor (CGM)"},{"location":"build/step4/#dexcom-g5-and-g6-cgm","text":"The Dexcom G5 and G6 CGM transmits data directly to the Dexcom app on your iPhone via Bluetooth. If the Dexcom app is on the same device as Loop, Loop can function without an internet connection. See Offline Use below. Dexcom G5 Support Dexcom has stopped supporting the G5 system in the US . In the US, and some other countries, the G5 is not available for download from the Apple Store. There are countries in which Dexcom does supply and support G5. The G5 capability will be supported in the next version of Loop (currently under test in the dev branch .) There are third party apps, which interface with G4 and G5 transmitters, supported by some forks of Loop. The version of Loop supported by these documents only works with the Dexcom apps.","title":"Dexcom G5 and G6 CGM"},{"location":"build/step4/#dexcom-g4-cgm-with-share-receiver","text":"Loop 3.0 will not support G4 Loop 3 (currently under test in the dev branch ) will not support G4 because it is no longer available. If this is a problem for current Loop users, please post on your favorite social media site . The Dexcom G4 Share system transmits CGM data from the transmitter to a Dexcom G4 Share Receiver. The receiver, in turn, connects to the Dexcom Share2 app on your iPhone via Bluetooth. The Share2 app uploads CGM data to the Dexcom servers from your phone. For Loop to function without an internet connection, you will need the Dexcom app running on the same device as Loop.","title":"Dexcom G4 CGM with Share Receiver"},{"location":"build/step4/#medtronic-cgm","text":"The Minimed Enlite CGM , available with the Medtronic 522/722, 523/723, and 554/754, wirelessly sends glucose readings to the pump. Loop can read the Medtronic CGM data directly from the pump using a RileyLink compatible device.","title":"Medtronic CGM"},{"location":"build/step4/#offline-use","text":"\"Offline Use\" means using Loop when there is no cell data or internet available. Loop does not require any special setup to operate offline. For offline Loop use, the iPhone's Bluetooth still needs to be active; and for Dexcom users, the Share2, G5, or G6 app also needs to be running on your Loop phone. If you put your iPhone into Airplane mode, remember to turn Bluetooth back on to keep your Loop running. If your offline use is failing, chances are you have forgotten to update your transmitter ID in Loop settings when you changed transmitters.","title":"Offline Use"},{"location":"build/step4/#dexcom-share","text":"Loop can download Dexcom Share data for use in modeling BG. However, this is not a typical configuration and requires internet connection for both the phone with the Dexcom app and the phone with the Loop app. The Loop Set Up Steps for adding a CGM explain that you usually enter the Dexcom transmitter ID and leave the Dexcom Share setting blank.","title":"Dexcom Share"},{"location":"build/step4/#cgms-not-supported-in-loop","text":"Loop does not directly support other CGM , such as Libre, Eversense and Medtronic Guardian. When Loop 3 is released, any sensor that can be uploaded to Nightscout can be used with Loop if internet service is available. To use one of those alternate CGMs for Loop 2.2.x, you will need to look into third-party integrations, such as the FreeAPS fork , for access to the CGM data. First search for previous posts on the topic and then ask questions in a Loop Social Media site if you need help. Currently, there are no solutions for Eversense or Guardian CGM to be used directly with Loop, but some Uploaders to Nightscout are available using an Android phone. The next Loop release, and the current FreeAPS fork , allow the use of Nightscout as a CGM source.","title":"CGMs Not Supported in Loop"},{"location":"build/step4/#next-step","text":"If your compatible pump is Medtronic or Omnipod (not DASH) Next step is to Order a RileyLink Compatible Device If your compatible pump is Omnipod DASH Next step is to enroll in the Apple Developer Program .","title":"Next Step"},{"location":"build/step5/","text":"Order a RileyLink Compatible Device \u00b6 Time Estimate 15-20 minutes to read about RileyLink compatible devices 15 minutes to order a device Summary Decide what kind of RileyLink compatible device to buy Order your compatible device FAQs What is a RileyLink Compatible Device? RileyLink refers to both the communication protocol and the name of the original device. Other DIY Loopers have created RileyLink Compatible Devices that use the RileyLink protocol. At the current time, RileyLink , OrangeLink and EmaLink devices are available for purchase and all can be used interchangeably with Loop. Do I have to buy one? These are open-source hardware devices, but it takes special skills to build them yourself. It is recommended you buy one (or two). \"What happens if I lose my RileyLink compatible device or walk away from it?\" Within a half hour, your pump returns to normal scheduled basal rate \"Can I swap out RileyLink compatible devices at any time?\" Yes, you can. You do not need to start a new pod or rebuild the Loop app. Tap on the pump menu in Loop settings to search for new devices and enable Loop to create a Bluetooth connection. You can swap between RileyLink , OrangeLink , EmaLink or some future RileyLink compatible device. \"How close does the RileyLink compatible device need to be to me? Do I have to carry it with me?\" See RileyLink Compatible Device Range . What is a RileyLink Compatible Device \u00b6 The RileyLink compatible device is required to allow your phone to talk to Compatible Medtronic and Omnipod Pumps. Details for RileyLink The RileyLink compatible device is an open-source hardware device that can bridge Bluetooth Low Energy ( BLE ) to the radio-frequency wireless communication used by select Medtronic and Omnipod pumps. The development branch of Loop (currently being tested) has Omnipod DASH support, among other new features. When using Omnipod DASH, the RileyLink compatible device is not necessary. If you are using Medtronic or Omnipod (Eros, not DASH), you still need the device regardless of which version of Loop you are running. Medtronic and Omnipod Eros pumps require a RileyLink compatible device. RileyLink Compatible Devices \u00b6 The RileyLink protocol defines a specific bluetooth interface and way of opening a Sub-GHz radio channel to pumps. All RileyLink compatible devices follow the RileyLink protocol. There used to be just one option, the original RileyLink . Now there are more options, so you have to make a decision. Depending on your choice, be sure to have the correct charger and cables or batteries handy and add spare compatible supplies to your diabetes go-bag. A Comparison Chart is provided by the GetRileyLink organization for all the RileyLink compatible devices listed below RileyLink Designed by Pete Schwamb Rechargable battery (max 36 hours per charge) No longer available new, check these Facebook Groups for used ones: Loop Resale Looping in a time of covid OrangeLink Designed by Vic Wu, available from GetRileyLink Uses 2 AAA batteries, batteries typically last weeks or more, depending on batteries/pump type Works with either Omnipod or Medtronic Uses new chipsets, reported to have longer range Matches Apple Airpod form factor, so you can use airpod cases EmaLink Designed by Sorin Kupas-Spunei to increase range, offer smaller sizes Rechargable battery (various case/battery sizes available) Micro/Nano: 2 to 3 days Standard: 6 to 7 days Maxx: 12 to 14 days Must order either Omnipod or Medtronic version This EmaLink Information includes photos of various EmaLink configurations as well as photos showing relative sizes of EmaLink , OrangeLink and RileyLink In North America, available from EmaLink .us More information \u00b6 There is an entire FAQs page on RileyLink Compatible Devices . Sections of interest include: Firmware Update information on the OrangeLink Ema and Orange Patch to see extra features on the Loop 2.2.x app screens Waiting for your RileyLink Compatible Device \u00b6 While you are waiting for the RileyLink compatible device to arrive, you can proceed with these build directions and can try one of the Simulated Loop options. After that, unless you are using Omnipod DASH, you'll have to wait for your device. The population of DIY loopers (Loop and Android APS) has grown enough that you might be able to find someone local to loan you their spare. Next Step: Enroll in Apple Developer Program \u00b6 Now you are ready to enroll in the Apple Developer Program .","title":"Order a RileyLink"},{"location":"build/step5/#order-a-rileylink-compatible-device","text":"Time Estimate 15-20 minutes to read about RileyLink compatible devices 15 minutes to order a device Summary Decide what kind of RileyLink compatible device to buy Order your compatible device FAQs What is a RileyLink Compatible Device? RileyLink refers to both the communication protocol and the name of the original device. Other DIY Loopers have created RileyLink Compatible Devices that use the RileyLink protocol. At the current time, RileyLink , OrangeLink and EmaLink devices are available for purchase and all can be used interchangeably with Loop. Do I have to buy one? These are open-source hardware devices, but it takes special skills to build them yourself. It is recommended you buy one (or two). \"What happens if I lose my RileyLink compatible device or walk away from it?\" Within a half hour, your pump returns to normal scheduled basal rate \"Can I swap out RileyLink compatible devices at any time?\" Yes, you can. You do not need to start a new pod or rebuild the Loop app. Tap on the pump menu in Loop settings to search for new devices and enable Loop to create a Bluetooth connection. You can swap between RileyLink , OrangeLink , EmaLink or some future RileyLink compatible device. \"How close does the RileyLink compatible device need to be to me? Do I have to carry it with me?\" See RileyLink Compatible Device Range .","title":"Order a RileyLink Compatible Device"},{"location":"build/step5/#what-is-a-rileylink-compatible-device","text":"The RileyLink compatible device is required to allow your phone to talk to Compatible Medtronic and Omnipod Pumps. Details for RileyLink The RileyLink compatible device is an open-source hardware device that can bridge Bluetooth Low Energy ( BLE ) to the radio-frequency wireless communication used by select Medtronic and Omnipod pumps. The development branch of Loop (currently being tested) has Omnipod DASH support, among other new features. When using Omnipod DASH, the RileyLink compatible device is not necessary. If you are using Medtronic or Omnipod (Eros, not DASH), you still need the device regardless of which version of Loop you are running. Medtronic and Omnipod Eros pumps require a RileyLink compatible device.","title":"What is a RileyLink Compatible Device"},{"location":"build/step5/#rileylink-compatible-devices","text":"The RileyLink protocol defines a specific bluetooth interface and way of opening a Sub-GHz radio channel to pumps. All RileyLink compatible devices follow the RileyLink protocol. There used to be just one option, the original RileyLink . Now there are more options, so you have to make a decision. Depending on your choice, be sure to have the correct charger and cables or batteries handy and add spare compatible supplies to your diabetes go-bag. A Comparison Chart is provided by the GetRileyLink organization for all the RileyLink compatible devices listed below RileyLink Designed by Pete Schwamb Rechargable battery (max 36 hours per charge) No longer available new, check these Facebook Groups for used ones: Loop Resale Looping in a time of covid OrangeLink Designed by Vic Wu, available from GetRileyLink Uses 2 AAA batteries, batteries typically last weeks or more, depending on batteries/pump type Works with either Omnipod or Medtronic Uses new chipsets, reported to have longer range Matches Apple Airpod form factor, so you can use airpod cases EmaLink Designed by Sorin Kupas-Spunei to increase range, offer smaller sizes Rechargable battery (various case/battery sizes available) Micro/Nano: 2 to 3 days Standard: 6 to 7 days Maxx: 12 to 14 days Must order either Omnipod or Medtronic version This EmaLink Information includes photos of various EmaLink configurations as well as photos showing relative sizes of EmaLink , OrangeLink and RileyLink In North America, available from EmaLink .us","title":"RileyLink Compatible Devices"},{"location":"build/step5/#more-information","text":"There is an entire FAQs page on RileyLink Compatible Devices . Sections of interest include: Firmware Update information on the OrangeLink Ema and Orange Patch to see extra features on the Loop 2.2.x app screens","title":"More information"},{"location":"build/step5/#waiting-for-your-rileylink-compatible-device","text":"While you are waiting for the RileyLink compatible device to arrive, you can proceed with these build directions and can try one of the Simulated Loop options. After that, unless you are using Omnipod DASH, you'll have to wait for your device. The population of DIY loopers (Loop and Android APS) has grown enough that you might be able to find someone local to loan you their spare.","title":"Waiting for your RileyLink Compatible Device"},{"location":"build/step5/#next-step-enroll-in-apple-developer-program","text":"Now you are ready to enroll in the Apple Developer Program .","title":"Next Step: Enroll in Apple Developer Program"},{"location":"build/step6/","text":"Enroll in Apple Developer Program \u00b6 Time Estimate 15-20 minutes to complete the enrollment forms up to 2 days to wait for confirmation email that enrollment has been activated Summary There are two options: Paid ($99/year) or Free (re-build weekly) Paid Developer Account: Go to the Apple Developer website to enroll in an individual account. Free: No action required at this time. FAQs \"Can I use someone else's Apple Developer account?\" Please refer to this Answer . \"Do I use my Apple ID or my child's Apple ID to enroll in the Apple Developer program?\" The Apple ID you use to enroll in the developer program must be associated with an adult. It does not need to be the same Apple ID as the Looper uses on their iPhone. For example, a parent installing Loop on their child's iPhone should configure a separate Apple ID for their child, but should use their own Apple ID to build the Loop app for that child. \"How long does it take to have my Apple Development account active after I enroll?\" After you enroll, make sure you look for a confirmation email. Apple says it can take up to 24-48 hours to confirm and setup a new Apple developer account. However, some people have had the process take minutes. One SURE way to make it take longer is to use a different credit card to pay for the Apple Developer account enrollment than is already associated with that Apple ID. When you do that, finishing the enrollment process may be a hassle. Loopers Need Their Own Apple ID \u00b6 The Apple ID is DIFFERENT than the Apple Developer ID. Apple ID Parents should set up a different Apple ID for each of their looper children and looper children should not use the parent Apple ID. Use Apple's Instructions for Create an Apple ID for your child . The Apple Health record is a convenient record of blood glucose, insulin and carbohydrates and should be associated with only one individual. Sharing an Apple ID among two or more loopers can cause safety issues. You don't want Sally to be dosed for Joe's lunch in addition to her own and vice versa. The recommendation for Health Permissions for Loop 2.2.x has changed to no longer provide permission to read Carbohydrates from Apple Health Loop 3 does not read Carbohydrates from Apple Health Developer Account \u00b6 To build the Loop app on a phone, you must use an Apple developer account associated with an adult (minimum age of 18). This Apple developer account is tied to the email address associated with your Apple ID. You can build apps on phones for everyone in your family with a single Apple Developer Account tied to the Apple ID of an adult. You have two options for an individual account: free or paid. Free Developer Account \u00b6 If you decide to use a FREE developer account, here's what you need to know: Loop apps signed with a free developer account will expire after 7 days. On the 7th day, your Loop app will simply turn white when you open it and then immediately close. To rebuild the Loop app, you will have to find a computer and rebuild the app onto your iPhone again. You cannot rebuild the app on day 5 (when it is convenient, for example), hoping to reset the 7-day clock. The app will still expire on the 7th day from when it was first signed and created. If you decide to switch to a paid account after trying out the free account, you will need to rebuild your Loop app to sign it with the new paid account. Furthermore, switching from a Free to a Paid account requires entering all the settings again (and starting a fresh pod). You will have to do an extra step during the build process to remove Siri and Apple Push capabilities to build with free accounts. Because free accounts do not have access to Apple Push notifications, you will also not be able to use remote overrides through Nightscout. Paid Developer Account \u00b6 If you decide to use a PAID developer account, here's what you need to know: Loop apps signed with a paid developer account will last for a full year. The paid developer account is $99 per year. The default setting is to auto-renew annually. You can change that selection in your developer account settings at any time. If your household has multiple Loop users, only one developer account is needed. That one developer account can be used to sign multiple Loop apps. Switching from Free to Paid Memberships \u00b6 You can try a free account first before buying a paid developer account. If you start with a free account, you'll build a Loop app (let's call it FreeLoop). When you switch to a paid account, you'll be building a totally new and separate Loop app onto your phone (let's call it PaidLoop). The two apps will look identical on your phone and they will both have the name Loop with the same icon, but they will be functionally separate from each other. Make sure you are successful building the PaidLoop app before deleting the FreeLoop app from your phone. Use the search feature on your phone to find both apps. One will have your configuration settings (FreeLoop), the other will not (PaidLoop). Before deleting the FreeLoop, either record all the settings or take screen shots of all the relevant settings screens. PaidLoop will know nothing about the settings and information you had stored in FreeLoop, so you will need to re-enter all your settings (basal rates, ISF , carb ratios, etc.) and configurations into the new PaidLoop. It will also not connect or control any pods you are currently using with the old FreeLoop app. The one exception is Nightscout credentials, which are stored in your keychain. If you entered your Nightscout credentials into FreeLoop, they will persist across app removal and be used by PaidLoop. With Loop 3, if you use Nightscout, you can import settings that were uploaded to Nightscout by FreeLoop into PaidLoop, so that simplifies the transition. Once PaidLoop is working, delete the FreeLoop instance from your phone to avoid confusion. If you followed the directions when building, you may have configured your phone to prevent deletion of Loop. Head over to Protect that App , reverse the steps, delete FreeLoop, then do the steps again to protect PaidLoop. Enrolling \u00b6 To enroll in an individual paid Paid account, go to the Apple's Developer Program website Apple Developer website . Be sure to use the credit card already associated with the email you are using for the developer account. If you switch credit cards, it can cause delays. If you choose to use the free account, you don't have to do anything on that website. You'll just wait for the instructions on the Xcode Preferences page and get your free account then. Next Step: Install Xcode \u00b6 Now you are ready to Install Xcode .","title":"Apple Developer Program"},{"location":"build/step6/#enroll-in-apple-developer-program","text":"Time Estimate 15-20 minutes to complete the enrollment forms up to 2 days to wait for confirmation email that enrollment has been activated Summary There are two options: Paid ($99/year) or Free (re-build weekly) Paid Developer Account: Go to the Apple Developer website to enroll in an individual account. Free: No action required at this time. FAQs \"Can I use someone else's Apple Developer account?\" Please refer to this Answer . \"Do I use my Apple ID or my child's Apple ID to enroll in the Apple Developer program?\" The Apple ID you use to enroll in the developer program must be associated with an adult. It does not need to be the same Apple ID as the Looper uses on their iPhone. For example, a parent installing Loop on their child's iPhone should configure a separate Apple ID for their child, but should use their own Apple ID to build the Loop app for that child. \"How long does it take to have my Apple Development account active after I enroll?\" After you enroll, make sure you look for a confirmation email. Apple says it can take up to 24-48 hours to confirm and setup a new Apple developer account. However, some people have had the process take minutes. One SURE way to make it take longer is to use a different credit card to pay for the Apple Developer account enrollment than is already associated with that Apple ID. When you do that, finishing the enrollment process may be a hassle.","title":"Enroll in Apple Developer Program"},{"location":"build/step6/#loopers-need-their-own-apple-id","text":"The Apple ID is DIFFERENT than the Apple Developer ID. Apple ID Parents should set up a different Apple ID for each of their looper children and looper children should not use the parent Apple ID. Use Apple's Instructions for Create an Apple ID for your child . The Apple Health record is a convenient record of blood glucose, insulin and carbohydrates and should be associated with only one individual. Sharing an Apple ID among two or more loopers can cause safety issues. You don't want Sally to be dosed for Joe's lunch in addition to her own and vice versa. The recommendation for Health Permissions for Loop 2.2.x has changed to no longer provide permission to read Carbohydrates from Apple Health Loop 3 does not read Carbohydrates from Apple Health","title":"Loopers Need Their Own Apple ID"},{"location":"build/step6/#developer-account","text":"To build the Loop app on a phone, you must use an Apple developer account associated with an adult (minimum age of 18). This Apple developer account is tied to the email address associated with your Apple ID. You can build apps on phones for everyone in your family with a single Apple Developer Account tied to the Apple ID of an adult. You have two options for an individual account: free or paid.","title":"Developer Account"},{"location":"build/step6/#free-developer-account","text":"If you decide to use a FREE developer account, here's what you need to know: Loop apps signed with a free developer account will expire after 7 days. On the 7th day, your Loop app will simply turn white when you open it and then immediately close. To rebuild the Loop app, you will have to find a computer and rebuild the app onto your iPhone again. You cannot rebuild the app on day 5 (when it is convenient, for example), hoping to reset the 7-day clock. The app will still expire on the 7th day from when it was first signed and created. If you decide to switch to a paid account after trying out the free account, you will need to rebuild your Loop app to sign it with the new paid account. Furthermore, switching from a Free to a Paid account requires entering all the settings again (and starting a fresh pod). You will have to do an extra step during the build process to remove Siri and Apple Push capabilities to build with free accounts. Because free accounts do not have access to Apple Push notifications, you will also not be able to use remote overrides through Nightscout.","title":"Free Developer Account"},{"location":"build/step6/#paid-developer-account","text":"If you decide to use a PAID developer account, here's what you need to know: Loop apps signed with a paid developer account will last for a full year. The paid developer account is $99 per year. The default setting is to auto-renew annually. You can change that selection in your developer account settings at any time. If your household has multiple Loop users, only one developer account is needed. That one developer account can be used to sign multiple Loop apps.","title":"Paid Developer Account"},{"location":"build/step6/#switching-from-free-to-paid-memberships","text":"You can try a free account first before buying a paid developer account. If you start with a free account, you'll build a Loop app (let's call it FreeLoop). When you switch to a paid account, you'll be building a totally new and separate Loop app onto your phone (let's call it PaidLoop). The two apps will look identical on your phone and they will both have the name Loop with the same icon, but they will be functionally separate from each other. Make sure you are successful building the PaidLoop app before deleting the FreeLoop app from your phone. Use the search feature on your phone to find both apps. One will have your configuration settings (FreeLoop), the other will not (PaidLoop). Before deleting the FreeLoop, either record all the settings or take screen shots of all the relevant settings screens. PaidLoop will know nothing about the settings and information you had stored in FreeLoop, so you will need to re-enter all your settings (basal rates, ISF , carb ratios, etc.) and configurations into the new PaidLoop. It will also not connect or control any pods you are currently using with the old FreeLoop app. The one exception is Nightscout credentials, which are stored in your keychain. If you entered your Nightscout credentials into FreeLoop, they will persist across app removal and be used by PaidLoop. With Loop 3, if you use Nightscout, you can import settings that were uploaded to Nightscout by FreeLoop into PaidLoop, so that simplifies the transition. Once PaidLoop is working, delete the FreeLoop instance from your phone to avoid confusion. If you followed the directions when building, you may have configured your phone to prevent deletion of Loop. Head over to Protect that App , reverse the steps, delete FreeLoop, then do the steps again to protect PaidLoop.","title":"Switching from Free to Paid Memberships"},{"location":"build/step6/#enrolling","text":"To enroll in an individual paid Paid account, go to the Apple's Developer Program website Apple Developer website . Be sure to use the credit card already associated with the email you are using for the developer account. If you switch credit cards, it can cause delays. If you choose to use the free account, you don't have to do anything on that website. You'll just wait for the instructions on the Xcode Preferences page and get your free account then.","title":"Enrolling"},{"location":"build/step6/#next-step-install-xcode","text":"Now you are ready to Install Xcode .","title":"Next Step: Install Xcode"},{"location":"build/step8/","text":"Download Xcode \u00b6 Time Estimate 45 minutes to 2 hours, depending on internet connection...but you don't need to babysit the download. Summary Check iPhone/iPod iOS version The iOS version determines minimum Xcode version The minimum Xcode version determines minimum macOS version To make it even more fun, the minimum macOS depends on whether your Mac uses M1 or is Intel-based (Mac or VM) If necessary, update macOS first and then return to this step Download Xcode from your computer's App Store application FAQs \"Why isn't my Xcode installing?\" The two most common reasons are: lack of internet connection or not enough free space on the computer hard drive Xcode is a large download, and it needs space to properly unpack and install itself After Xcode has finished downloading (looks like the progress bar is almost completed), it takes a long time to unpack and install, be patient For a new Xcode installation, at least 50GB of free space on your hard drive is required If you get low on free space, you may have installation failures Check the Space Available Although the download takes a long time, the good news is you can walk away once the download starts. If your laptop goes to sleep when you close the lid or when the screen saver starts, disable the screen saver and leave the laptop open. Can I use an External Drive Xcode needs to be on the Mac hard drive. But other things, like photos and documents can be moved to an external drive to make room for macOS and Xcode updates. Xcode is a free application for Apple computers. Xcode will turn the Loop \"raw\" code into an iOS application and install it onto your iPhone/iPod. Install Xcode \u00b6 Please read this entire page. First, choose a version of Xcode appropriate for your iOS device. Then, determine the minimum macOS version required for that Xcode version. Update to at least that minimum macOS version. Then follow the instructions to download and install Xcode or update an existing installation: Open your App Store in your computer and search for Xcode You will be downloading it brand new or updating an existing installation If the version number you need is bigger than what is shown in the App Store, you need to update macOS first Do not rely on the version number in this graphic Version Relationship Overview \u00b6 Have you turned off automatic updates on your iOS device? Loop and iOS Updates Please Read : Turn Off Automatic Updates Before manually accepting an iOS update, be sure you have compatible versions of Xcode and MacOS. Minimum Xcode Version The minimum version of Xcode you need is dependent on your version of iOS . Please Read : Minimum Version List Can't find the required Xcode version If your computer is not running the required minimum macOS , the App Store won't show the required minimum Xcode version You must use iOS to determine which Xcode , which determines which macOS Update your computer to at least that minimum macOS first Don't be the person who posts for help saying, \"I'm trying to update my Loop app but am getting errors.\" When asked what Xcode version they have and if they've updated, they respond, \"I don't have any Xcode updates available in the App Store, so I must be running the most current version.\" Actually, they forgot to check for macOS updates and therefore cannot see the needed Xcode update yet. After Update - Reboot \u00b6 After any update of macOS or Xcode , it is always a good idea to reboot. How do all the minimum versions relate to each other? \u00b6 The list below is the minimum versions you'll need based on your iOS . The highlighted sections, coordinated by color and linestyle in the graphic below, tie together the operating system nomenclature in the following bullets. The graphic is not updated as frequently as the words. Newer versions are always OK and should be used if your computer will accept the upgrade. For iOS 16 or greater, minimum macOS is 12.5 Minimum Xcode version is 14 For iOS 15.4 to 15.7, minimum macOS is 12.0 For iOS 15.5 to 15.7, minimum Xcode version is 13.4.x WARNING, first build to phone newly updated to iOS 15.7, cannot use Xcode 14.0; Xcode 13.4.1 and 14.0.1 (or greater) are fine For iOS 15.4.x, minimum Xcode version is 13.3 For iOS 15.0 to 15.2.x, minimum macOS is 11.3 For iOS 15.2.x, minimum Xcode version is 13.2 For iOS 15.0.x, minimum Xcode version is 13.0 For iOS 14.5.x, minimum macOS is 11.0 For iOS 14.5.x, minimum Xcode version is 12.5 If you built Loop using Xcode 12.4 or earlier do NOT upgrade that phone to iOS 15 - the Loop app will immediately stop working First upgrade macOS and Xcode and rebuild on phone, then upgrade the iOS For iOS 14.0 to 14.4.x, minimum macOS is 11.0 (M1/M2), 10.15.4 (Intel) For iOS 14.4.x, minimum Xcode version is 12.4 For iOS 14.3.x, minimum Xcode version is 12.3 For iOS 14.2.x, minimum Xcode version is 12.2 For iOS 14.1.x, minimum Xcode version is 12.1 For iOS 14.0.x, minimum Xcode version is 12.0 Wikipedia Chart for Apple Versions \u00b6 This graphic (copied from Wikipedia and last updated March 2022) is not updated with every iOS update - use it as a map to read the minimum requirements. Every attempt will be made to update the words in the Minimum Version List promptly - that's much easier than updating a graphic. Follow this link to Wikipedia and scroll down to the the current version of this figure - the graphic shown below is a map of how to read the current version of this figure at Wikipedia. What happens if you try using too old of Xcode ? \u00b6 It isn't some catastrophic failure if you try to build with an outdated Xcode without realizing it. If the build fails, nothing happens to your phone (or Loop on your phone if you are rebuilding). Nothing is copied from the computer to the phone until after you see the Build Succeeded message. You'll see a pretty obvious error message during your Loop build that says \"Could not locate device support files.\" That messages is telling you that your iOS on the phone requires you to get a newer version of Xcode to be able to build Loop onto that phone. So, if you see that error message, realize you may have to update your macOS to be able to see the newest Xcode version that you will need. Make sure to check that chart to see what your minimum versions are for the iOS you are running on your iPhone. With Loop 3, there is a new error when the Xcode version does not support the phone iOS . You will see Package.resolved file corrupted or malformed Next Step: Xcode Preferences \u00b6 Now you are ready to set up Xcode Preferences .","title":"Download Xcode"},{"location":"build/step8/#download-xcode","text":"Time Estimate 45 minutes to 2 hours, depending on internet connection...but you don't need to babysit the download. Summary Check iPhone/iPod iOS version The iOS version determines minimum Xcode version The minimum Xcode version determines minimum macOS version To make it even more fun, the minimum macOS depends on whether your Mac uses M1 or is Intel-based (Mac or VM) If necessary, update macOS first and then return to this step Download Xcode from your computer's App Store application FAQs \"Why isn't my Xcode installing?\" The two most common reasons are: lack of internet connection or not enough free space on the computer hard drive Xcode is a large download, and it needs space to properly unpack and install itself After Xcode has finished downloading (looks like the progress bar is almost completed), it takes a long time to unpack and install, be patient For a new Xcode installation, at least 50GB of free space on your hard drive is required If you get low on free space, you may have installation failures Check the Space Available Although the download takes a long time, the good news is you can walk away once the download starts. If your laptop goes to sleep when you close the lid or when the screen saver starts, disable the screen saver and leave the laptop open. Can I use an External Drive Xcode needs to be on the Mac hard drive. But other things, like photos and documents can be moved to an external drive to make room for macOS and Xcode updates. Xcode is a free application for Apple computers. Xcode will turn the Loop \"raw\" code into an iOS application and install it onto your iPhone/iPod.","title":"Download Xcode"},{"location":"build/step8/#install-xcode","text":"Please read this entire page. First, choose a version of Xcode appropriate for your iOS device. Then, determine the minimum macOS version required for that Xcode version. Update to at least that minimum macOS version. Then follow the instructions to download and install Xcode or update an existing installation: Open your App Store in your computer and search for Xcode You will be downloading it brand new or updating an existing installation If the version number you need is bigger than what is shown in the App Store, you need to update macOS first Do not rely on the version number in this graphic","title":"Install Xcode"},{"location":"build/step8/#version-relationship-overview","text":"Have you turned off automatic updates on your iOS device? Loop and iOS Updates Please Read : Turn Off Automatic Updates Before manually accepting an iOS update, be sure you have compatible versions of Xcode and MacOS. Minimum Xcode Version The minimum version of Xcode you need is dependent on your version of iOS . Please Read : Minimum Version List Can't find the required Xcode version If your computer is not running the required minimum macOS , the App Store won't show the required minimum Xcode version You must use iOS to determine which Xcode , which determines which macOS Update your computer to at least that minimum macOS first Don't be the person who posts for help saying, \"I'm trying to update my Loop app but am getting errors.\" When asked what Xcode version they have and if they've updated, they respond, \"I don't have any Xcode updates available in the App Store, so I must be running the most current version.\" Actually, they forgot to check for macOS updates and therefore cannot see the needed Xcode update yet.","title":"Version Relationship Overview"},{"location":"build/step8/#after-update-reboot","text":"After any update of macOS or Xcode , it is always a good idea to reboot.","title":"After Update - Reboot"},{"location":"build/step8/#how-do-all-the-minimum-versions-relate-to-each-other","text":"The list below is the minimum versions you'll need based on your iOS . The highlighted sections, coordinated by color and linestyle in the graphic below, tie together the operating system nomenclature in the following bullets. The graphic is not updated as frequently as the words. Newer versions are always OK and should be used if your computer will accept the upgrade. For iOS 16 or greater, minimum macOS is 12.5 Minimum Xcode version is 14 For iOS 15.4 to 15.7, minimum macOS is 12.0 For iOS 15.5 to 15.7, minimum Xcode version is 13.4.x WARNING, first build to phone newly updated to iOS 15.7, cannot use Xcode 14.0; Xcode 13.4.1 and 14.0.1 (or greater) are fine For iOS 15.4.x, minimum Xcode version is 13.3 For iOS 15.0 to 15.2.x, minimum macOS is 11.3 For iOS 15.2.x, minimum Xcode version is 13.2 For iOS 15.0.x, minimum Xcode version is 13.0 For iOS 14.5.x, minimum macOS is 11.0 For iOS 14.5.x, minimum Xcode version is 12.5 If you built Loop using Xcode 12.4 or earlier do NOT upgrade that phone to iOS 15 - the Loop app will immediately stop working First upgrade macOS and Xcode and rebuild on phone, then upgrade the iOS For iOS 14.0 to 14.4.x, minimum macOS is 11.0 (M1/M2), 10.15.4 (Intel) For iOS 14.4.x, minimum Xcode version is 12.4 For iOS 14.3.x, minimum Xcode version is 12.3 For iOS 14.2.x, minimum Xcode version is 12.2 For iOS 14.1.x, minimum Xcode version is 12.1 For iOS 14.0.x, minimum Xcode version is 12.0","title":"How do all the minimum versions relate to each other?"},{"location":"build/step8/#wikipedia-chart-for-apple-versions","text":"This graphic (copied from Wikipedia and last updated March 2022) is not updated with every iOS update - use it as a map to read the minimum requirements. Every attempt will be made to update the words in the Minimum Version List promptly - that's much easier than updating a graphic. Follow this link to Wikipedia and scroll down to the the current version of this figure - the graphic shown below is a map of how to read the current version of this figure at Wikipedia.","title":"Wikipedia Chart for Apple Versions"},{"location":"build/step8/#what-happens-if-you-try-using-too-old-of-xcode","text":"It isn't some catastrophic failure if you try to build with an outdated Xcode without realizing it. If the build fails, nothing happens to your phone (or Loop on your phone if you are rebuilding). Nothing is copied from the computer to the phone until after you see the Build Succeeded message. You'll see a pretty obvious error message during your Loop build that says \"Could not locate device support files.\" That messages is telling you that your iOS on the phone requires you to get a newer version of Xcode to be able to build Loop onto that phone. So, if you see that error message, realize you may have to update your macOS to be able to see the newest Xcode version that you will need. Make sure to check that chart to see what your minimum versions are for the iOS you are running on your iPhone. With Loop 3, there is a new error when the Xcode version does not support the phone iOS . You will see Package.resolved file corrupted or malformed","title":"What happens if you try using too old of Xcode?"},{"location":"build/step8/#next-step-xcode-preferences","text":"Now you are ready to set up Xcode Preferences .","title":"Next Step: Xcode Preferences"},{"location":"build/step9/","text":"Xcode Preferences \u00b6 Time Estimate about 10-15 minutes to install the Command Line Tools 5 minutes to add your Apple ID, assuming you remember your password Summary Open Xcode Preferences and add your Apple ID under the Accounts tab. Verify that Command Line Tools has been properly installed under Xcode Preferences under the Locations tab. FAQs \"I still only see an account with (personal team) beside it even though I enrolled in the paid Developer Account program...what should I do?\" You should check your spam email box in case Apple sent you an email there. Make sure you've waited the 48 hours that Apple says it may take to get your account approved. If it's been 48 hours and you still don't see anything in your email, contact Apple support and ask them about the status of your enrollment. It may be held up by something on their end. Xcode Version \u00b6 Open Xcode from your Applications folder. If it offers to start a new project with you, just close that window. Click on the Xcode ->About Xcode menu item. The version number is displayed. Command Line Tools \u00b6 The very first time you open Xcode it may install a package of command line tools. Wait patiently until it finishes. The command line tools may have installed without asking. Check that your Command Line Tools installed correctly. First, open Xcode Preferences (click on the word Xcode in the top menu bar (just to the right of the Apple icon in the upper-left corner) and select Preferences in the drop-down menu) Then select the Locations tab in the Preferences window to see the dropdown menu for Command Line Tools. Make sure the Xcode version listed matches what you just installed (not the version in this graphic) If it's blank, use the blue arrows to the right of the Command Line Tools row to select it Add Apple ID \u00b6 Go to the Xcode Preferences window from above, click on the Accounts tab and then press the + in the lower-left corner to add an Apple ID account. Xcode Accounts Tab \u00b6 The Xcode Accounts Tab, shown in the graphic (from Xcode 13) below allows you to have more than one account available to choose from when you sign your targets (another new term that is explained later). Normally, you would only have one. In the graphic, whichever item is selected on the left side (highlighted by Xcode in blue) shows up with more details on the right side of the display. If the Free account had been selected, the information shown in the red inset would have been displayed. Free and Paid The graphic below shows examples for a paid account and a free account. You will only see one. Free Developer Account \u00b6 If you want to use a free developer account, you will simply enter your Apple ID in this section and Xcode will automatically enroll your Apple ID in the free developer program. It will show up with the (Personal Team) and User indication. Paid Developer Account \u00b6 If you enrolled in the paid account already and have confirmation that your account is active, enter the Apple ID of the paid developer account. It will show up with just your name and the Admin indication. If you have enrolled and are waiting, the (Personal Team) and User indication shows up until the paid account is confirmed by Apple. Description The description line is initially empty. You can add your own description or just leave the line blank. Text added to the decription line shows up in two places: To the left, just above the email address and to the right once that Apple ID is selected. You are now done setting up Xcode . Great job! You will not need to redo the account setup steps on any subsequent builds or updates of your Loop app. Xcode will remember these settings. Next Step: Test Settings \u00b6 Now you are ready to Test Your Settings .","title":"Xcode Preferences"},{"location":"build/step9/#xcode-preferences","text":"Time Estimate about 10-15 minutes to install the Command Line Tools 5 minutes to add your Apple ID, assuming you remember your password Summary Open Xcode Preferences and add your Apple ID under the Accounts tab. Verify that Command Line Tools has been properly installed under Xcode Preferences under the Locations tab. FAQs \"I still only see an account with (personal team) beside it even though I enrolled in the paid Developer Account program...what should I do?\" You should check your spam email box in case Apple sent you an email there. Make sure you've waited the 48 hours that Apple says it may take to get your account approved. If it's been 48 hours and you still don't see anything in your email, contact Apple support and ask them about the status of your enrollment. It may be held up by something on their end.","title":"Xcode Preferences"},{"location":"build/step9/#xcode-version","text":"Open Xcode from your Applications folder. If it offers to start a new project with you, just close that window. Click on the Xcode ->About Xcode menu item. The version number is displayed.","title":"Xcode Version"},{"location":"build/step9/#command-line-tools","text":"The very first time you open Xcode it may install a package of command line tools. Wait patiently until it finishes. The command line tools may have installed without asking. Check that your Command Line Tools installed correctly. First, open Xcode Preferences (click on the word Xcode in the top menu bar (just to the right of the Apple icon in the upper-left corner) and select Preferences in the drop-down menu) Then select the Locations tab in the Preferences window to see the dropdown menu for Command Line Tools. Make sure the Xcode version listed matches what you just installed (not the version in this graphic) If it's blank, use the blue arrows to the right of the Command Line Tools row to select it","title":"Command Line Tools"},{"location":"build/step9/#add-apple-id","text":"Go to the Xcode Preferences window from above, click on the Accounts tab and then press the + in the lower-left corner to add an Apple ID account.","title":"Add Apple ID"},{"location":"build/step9/#xcode-accounts-tab","text":"The Xcode Accounts Tab, shown in the graphic (from Xcode 13) below allows you to have more than one account available to choose from when you sign your targets (another new term that is explained later). Normally, you would only have one. In the graphic, whichever item is selected on the left side (highlighted by Xcode in blue) shows up with more details on the right side of the display. If the Free account had been selected, the information shown in the red inset would have been displayed. Free and Paid The graphic below shows examples for a paid account and a free account. You will only see one.","title":"Xcode Accounts Tab"},{"location":"build/step9/#free-developer-account","text":"If you want to use a free developer account, you will simply enter your Apple ID in this section and Xcode will automatically enroll your Apple ID in the free developer program. It will show up with the (Personal Team) and User indication.","title":"Free Developer Account"},{"location":"build/step9/#paid-developer-account","text":"If you enrolled in the paid account already and have confirmation that your account is active, enter the Apple ID of the paid developer account. It will show up with just your name and the Admin indication. If you have enrolled and are waiting, the (Personal Team) and User indication shows up until the paid account is confirmed by Apple. Description The description line is initially empty. You can add your own description or just leave the line blank. Text added to the decription line shows up in two places: To the left, just above the email address and to the right once that Apple ID is selected. You are now done setting up Xcode . Great job! You will not need to redo the account setup steps on any subsequent builds or updates of your Loop app. Xcode will remember these settings.","title":"Paid Developer Account"},{"location":"build/step9/#next-step-test-settings","text":"Now you are ready to Test Your Settings .","title":"Next Step: Test Settings"},{"location":"build/updating/","text":"Updating Loop \u00b6 Time Estimate 25 minutes, if Xcode and macOS are already updated to support the current or desired iOS up to 2 days, if need to install macOS and / or Xcode update(s) Summary Summary of tasks to prepare for and update your app: Determine required macOS and Xcode version based on your phone iOS If necessary, update first macOS and then Xcode Check your Developer Account Delete provisioning profiles (ensure a year) Download Updated Loop code and Build Loop In each of the sections below, follow links to sections of other build pages then hit the back button on your browser to return to this page. FAQs \"What is an update?\" Anytime you want to change versions or if the app is about to expire, follow the instructions on this page. \"Do I delete my old Loop app first?\" Definitely not ! If you keep your Loop app on your phone, your Loop settings (and existing pod) will continue to work the same after the update. Seamless. \"Do I need to start a new pod when I update?\" No. Your existing pod session will continue seamlessly if you are using the same Developer Account to sign the Loop app targets as you did the last time you built. \"What if I'm using a new/different developer account?\" If you aren't building with the same developer account used when your existing app was built (this includes going from free to paid), then you will be installing a brand new (second) Loop app on your phone. Your existing pod won't work with the new app, so you might want to time this transition when you are due to change pods. Delete the old app once you get the new one all set up. \"What if it is a new computer but the same developer account?\" No big deal...use the Updating Steps to check that your new computer has the required compatible versions and then build your app. This will include installing Xcode , configuring Xcode preferences, and adding your Developer ID to Xcode : refer to What about a New Computer? . There is no need to delete provisioning profiles on a brand new computer, but no harm comes from following the instruction. When to Update Loop \u00b6 Under ordinary circumstances, you do not have to update your Loop app until it expires (1 year for a paid account). However, we encourage regular updates when a new version of iOS , or of Loop, is released because they often contain bug fixes or improvements which may increase operational stability. iOS Updates \u00b6 Under ordinary circumstance, updating the iOS on your phone does not require a rebuild of the app on your phone. However, it's important to be prepared in case of an emergency, such as a lost phone. Best Practice It is good practice to first check if your computer ( macOS or Xcode ) will require an update to support building Loop to your phone BEFORE applying an iOS update to your Looping phone. Follow these \"safe Looping\" steps for updating your iOS : Check which version of macOS and Xcode is required for the phone iOS you intend to install. Update macOS / Xcode if needed Check Loop: Current Release status - if there is new code, you should download it Build app to your iPhone Then update your iPhone iOS Loop Releases provides information about current and previous Loop versions. Updating to iOS 16 ( watchOS 9) requires enabling Developer Mode . Your existing app will not open until you take this step. Once enabled, the app opens again. A rebuild is not required. iOS 15 Warning - Check Before You Update DO NOT INSTALL iOS 15 on your phone without first updating Loop if the Xcode version used to build your Loop app is 12D or earlier - the Loop app will stop working and you will have to rebuild Loop. Follow this link, Xcode version , for instructions to determine what version was used when building the Loop app currently on your phone. \"Loop\" is No Longer Available \u00b6 The apps built and signed by you in Xcode with a paid developer account will last for 12 months; then they expire and must be rebuilt. At least once per year you will have to rebuild your app and go through this update process. If you do not update and the \"provisioning profile\" on your phone expires, you will see the \"Loop\" is No Longer Available message. You will be given multiple Loop App Expiration Notifications on the Loop phone, but might miss them if you are a caregiver. When you see \"Loop\" is No Longer Available on your phone, the only solution is to rebuild the app. All of your settings are still present on your phone, but your \"provisioning profile\" expired and you need to generate a new one. Once you build Loop on your phone, following the instructions on this page, all your settings will be maintained - assuming you build with the same Apple Developers ID that was used initially. Provisioning Profiles Be aware that if you build an app using Xcode without first deleting provisioning profiles, you might not have one year on that app. It is the expiration date of the provisioning profile on your computer that determines when the app expires. Build Video \u00b6 The Loop and Learn team prepared this YouTube video showing how to prepare for an update and build Loop Master. We recommend reading the written directions below before (and while) watching the video. macOS and Xcode Versions \u00b6 Determine Required Xcode and macOS Versions \u00b6 Between Loop app builds, there's a high likelihood that Apple has updated one or more of the systems involved in your Loop app. If you don't have the minimum Xcode version required for your phone iOS , you cannot build on that phone. Sometimes you must also update the macOS version to allow you to use the required Xcode version. Based on the iOS on your phone, or the iOS you plan to install on your phone, determine the required macOS and Xcode versions. Click on this link versions for iOS , macOS and Xcode to determine the versions needed and then hit the back button in your browser to finish the steps on this updating page. First macOS and Then Xcode Your macOS must meet the minimum requirement for the Xcode version you need to support your current iOS as detailed in that link above. If the macOS is too old, the Xcode version will not appear in the App Store You might think you don't need to update Xcode (but you do) Your build will fail and mentors might need to help you Don't be that person. Follow the directions. Minimum means you need to have at least that version - newer versions build just fine. Verify / Update macOS \u00b6 Click on this link Check your macOS Version and follow the instructions on that page if an update is required. After you've reviewed that section, hit the back button on your browser to return here Verify / Update Xcode \u00b6 Click on this link Check your Xcode Version to find your Xcode version number. If you need to update your Xcode , follow the instructions at this link Install Xcode and continue through Xcode Preferences . Advanced users: If you are finding installation of Xcode from the App Store incredibly slow, try the alternate method of Direct Download of Xcode . Direct Download If you previously did a direct download of Xcode , it might not show up in the App Store. Either do another direct download or follow these directions in the Direct Download section to reconfigure so it will show up in the App Store. Direct Download of Xcode What about a New Computer? \u00b6 Make sure your new computer has the macOS and Xcode required by your phone iOS . Be sure Xcode Command Line Tools are installed and that you Add Apple ID to Xcode . Missing Xcode or Command Line Tools \u00b6 WARNING If you fail to have Xcode or Xcode Command Line Tools installed, you will get one of these errors (or something similar) when you attempt to run the Build Select Script : xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun xcrun: error: active developer path (\"/Applications/ Xcode .app/Contents/Developer\") does not exist xcode-select: Failed to locate ' git ', requesting installation of command line developer tools xcode-select: error: tool 'xed' requires Xcode Scripting Bridge could not launch application . . . Follow Xcode Preferences page after updating Xcode Make sure to restart your computer after updating Xcode and follow the instructions on the Xcode Preferences page. There's a known issue that happens often enough to be frustrating if you skip those steps. It's not always required...but this is a good easy ounce of prevention step. Check your Developer Account \u00b6 Apple updates its License Agreement for the Developer Program frequently. You need to login to your developer account to manually check if there is a new agreeement to accept. If you see a big red or orange banner across the top of your Developer Account announcing a new license agreement like shown below...please read and accept it before building Loop. Delete Provisioning Profiles \u00b6 In order to ensure a full year of use for your Loop app, you need to delete any existing provisioning profile(s) from your computer. It is the expiration date of the provisioning profile on your computer that determines when the app expires. Manual Delete of Provisioning Profiles If you are comfortable pasting commands into the terminal, you can delete the provisioning profiles by copying and pasting this command into a terminal window. Copy and Paste to remove Provisioning Profiles rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision If you did the manual delete, skip ahead to Ready To Build Loop . Build Select Utilities \u00b6 You can delete the old provisioning profiles with the same Build Select Script you will use to download and build new code. Open Terminal \u00b6 Go to the Finder app, click on Applications, then open the Utilities folder. Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal. Load the Paste Buffer \u00b6 Copy the line below that starts with /bin/bash by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say Copy to Clipboard when you hover over it). When you click the icon, a message that says \u201cCopied to Clipboard\u201d will appear on your screen. Run the Build Select script to Clean Profiles & Derived Data /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/loopnlearn/LoopBuildScripts/main/BuildLoop.sh)\" Paste the line of text into Terminal . Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: CMD-V; or CNTL-click and select from menu or Edit-Paste at top of Mac screen.) Once the line is pasted, hit return to execute the script. Utilities \u00b6 Each graphic below shows the number you are instructed to type to proceed through the script and reach the utility menu. The words on this page also tell you what to type. Note there are several options in Utilities, you only need to use one to delete provisioning profiles. See the Loop and Learn: Build Select Script webpage for additional information. When running this script: If you do not have Xcode and Xcode command line tools installed - you will get errors. If you have Xcode open, you may get errors. Read the screen (shown below). Type 1 and return if you understand the warning and agree. Please read what is on the screen as you progress. Adjust font size as directed if you have difficulty seeing the directions. Next you will see an introduction to the Build Select script. Please read this. To run the Utilities, you will type 3 (as shown in the graphic below) and return. Next you are asked which Utility option you want to run. You may need to scroll up to see the entire message shown in the graphic below. Type 3 to select Clean Profiles. Once this completes, you should see this in your terminal. Ready to Build Loop \u00b6 As long as there are no errors, you are now ready to proceed to one of these pages: Released Loop Code: Build the Loop App: Developer Mode Development Loop Code: Loop-dev After building the new app, you may choose to return to this page and follow the instructions to Delete Old Copies . This is optional, but cleans up space on your computer. Delete Old Copies \u00b6 This step is optional, but if your computer is low on space, it helps to clean up old downloads your are no longer using. When you update, you no longer need to keep old copies of the code on your computer. If you want to clean up space, you can delete those old folder(s) now if you want. Where is the old folder? Assuming you used the Build Select Script , your downloads are in the ~/Downloads/BuildLoop folder as shown in the graphic below. If you are tight on space, the older folders can be deleted. Best practice, download fresh and build Loop; and then go back and delete all but the most recent copy. The nice thing about the Build Select script is it automatically generates the folder name with the date and time of the download. Delete each unwanted folder, one at a time. If you see a file (not a folder) in ~/Downloads/BuildLoop called LoopConfigOverride.xcconfig, keep that around. If you delete it, you'll need to recover it from the trash, regenerate it (if you know how) or sign your targets manually for your current download. The Scripts folder can also be left alone, but if you delete it, it is regenerated with the next use of the Build Select Script . Background Information \u00b6 New Loopers do not need to read the rest of this page. Experienced Loopers may wonder what happened to deleting derived data. Each workspace folder has a unique folder for storing derived data Deleting derived data across all Xcode workspaces and projects for a brand new download is not required to ensure a year for a given build The Clean Derived Data option in the Utilities menu can be required for some special cases, but you probably won't need it Infrequent Builder, App Expires soon \u00b6 If your app will expire soon or you build infrequently, then delete provisioning profiles every time you build. Not sure when your app expires? Here are instructions to check your Loop Expiration Date . Frequent Builder \u00b6 If you build frequently, you do not need to delete the profiles every time. One user reported deleting profiles gave a Revoke Certificate message - follow the link to see other reasons why that might happen. Revoke Certificate Issue \u00b6 What does it look like if you run into the Revoke Certificate message? When you prepare to Sign the Targets with Xcode , you'll see the message highlighted in the figure below. More information is shown in the orange box below. Revoke certificate The important part of this message is: \". . . signing certificate . . . private key is not installed in your keychain . . .\" WAIT - You might not need to revoke your certificate You might get this if you logged in as a different user, have a new computer or if your computer had to undergo a factory reset You can transfer your keychain to your new computer (or just revoke and keep going) To transfer your keychain, check this Apple Documentation Link Your version of Xcode is way out-of-date Mentors have seen this with people trying to build with Xcode 11.4 or earlier Update Xcode to the most recent version If you revoke and keep going: If you do hit Revoke Certificate , you'll be given a new one Even with the new certificate, your Apple Developer ID is not affected You can re-build on the existing Loop app on your device(s) and maintain all your settings with the new certificate. Be aware that you will have to rebuild to every device that used the certificate you just revoked and if you have other apps built with this certificate, they will stop working too. Direct Download of Xcode \u00b6 Many people find updating Xcode from the App Store to be incredibly slow - especially when a new version has just been released. This method still takes time and enough space on your disk, but is faster than going through the App Store. Depending on your internet speed, this download can be done in about an hour. Then once it is downloaded, expect another fifteen minutes to several hours (depending on the speed of your computer) for the \"xip\" file to \"expand\". The instructions do not hold your hand. Your macOS must be at the minimum verion (or newer) to support the version of Xcode you're about the download You need to know how to log into your Apple Developer account and navigate those menus You need to know how to use Finder to navigate to Downloads You need to know how to drag the Xcode icon into your Applications folder (after download and expand completes) After you have done a direct download, the App Store will not show you updates Either repeat the Direct Download or Delete Xcode from Applications folder Open the App Store and search for Xcode Install fresh After you use the App Store for a download, then Updates will show in the future Here are the different steps you need to follow doing the Direct Download instead of the App Store method: Login to your Apple developer account Examine the menus (on my computer there are buttons on the left hand side) Click on Downloads (under Additional Resources) Look at menu items (on my computer there are buttons at the top) that say Beta, Release, Profiles and Logs, and More Click on More Scroll down until you find the item you want (for example, Xcode 13) Click on View Details and click on the Download button for the \"xip\" file Wait for Download to complete Expand the file by clicking on it in Finder Move the Xcode icon to Applications after the expansion completes Check the Command Line Tools setting under Xcode ->Preferences The selection cannot be blank or Build-Script will fail to open Xcode automatically It should be the same version as your Xcode Reboot the computer","title":"Updating/Rebuilding"},{"location":"build/updating/#updating-loop","text":"Time Estimate 25 minutes, if Xcode and macOS are already updated to support the current or desired iOS up to 2 days, if need to install macOS and / or Xcode update(s) Summary Summary of tasks to prepare for and update your app: Determine required macOS and Xcode version based on your phone iOS If necessary, update first macOS and then Xcode Check your Developer Account Delete provisioning profiles (ensure a year) Download Updated Loop code and Build Loop In each of the sections below, follow links to sections of other build pages then hit the back button on your browser to return to this page. FAQs \"What is an update?\" Anytime you want to change versions or if the app is about to expire, follow the instructions on this page. \"Do I delete my old Loop app first?\" Definitely not ! If you keep your Loop app on your phone, your Loop settings (and existing pod) will continue to work the same after the update. Seamless. \"Do I need to start a new pod when I update?\" No. Your existing pod session will continue seamlessly if you are using the same Developer Account to sign the Loop app targets as you did the last time you built. \"What if I'm using a new/different developer account?\" If you aren't building with the same developer account used when your existing app was built (this includes going from free to paid), then you will be installing a brand new (second) Loop app on your phone. Your existing pod won't work with the new app, so you might want to time this transition when you are due to change pods. Delete the old app once you get the new one all set up. \"What if it is a new computer but the same developer account?\" No big deal...use the Updating Steps to check that your new computer has the required compatible versions and then build your app. This will include installing Xcode , configuring Xcode preferences, and adding your Developer ID to Xcode : refer to What about a New Computer? . There is no need to delete provisioning profiles on a brand new computer, but no harm comes from following the instruction.","title":"Updating Loop"},{"location":"build/updating/#when-to-update-loop","text":"Under ordinary circumstances, you do not have to update your Loop app until it expires (1 year for a paid account). However, we encourage regular updates when a new version of iOS , or of Loop, is released because they often contain bug fixes or improvements which may increase operational stability.","title":"When to Update Loop"},{"location":"build/updating/#ios-updates","text":"Under ordinary circumstance, updating the iOS on your phone does not require a rebuild of the app on your phone. However, it's important to be prepared in case of an emergency, such as a lost phone. Best Practice It is good practice to first check if your computer ( macOS or Xcode ) will require an update to support building Loop to your phone BEFORE applying an iOS update to your Looping phone. Follow these \"safe Looping\" steps for updating your iOS : Check which version of macOS and Xcode is required for the phone iOS you intend to install. Update macOS / Xcode if needed Check Loop: Current Release status - if there is new code, you should download it Build app to your iPhone Then update your iPhone iOS Loop Releases provides information about current and previous Loop versions. Updating to iOS 16 ( watchOS 9) requires enabling Developer Mode . Your existing app will not open until you take this step. Once enabled, the app opens again. A rebuild is not required. iOS 15 Warning - Check Before You Update DO NOT INSTALL iOS 15 on your phone without first updating Loop if the Xcode version used to build your Loop app is 12D or earlier - the Loop app will stop working and you will have to rebuild Loop. Follow this link, Xcode version , for instructions to determine what version was used when building the Loop app currently on your phone.","title":"iOS Updates"},{"location":"build/updating/#loop-is-no-longer-available","text":"The apps built and signed by you in Xcode with a paid developer account will last for 12 months; then they expire and must be rebuilt. At least once per year you will have to rebuild your app and go through this update process. If you do not update and the \"provisioning profile\" on your phone expires, you will see the \"Loop\" is No Longer Available message. You will be given multiple Loop App Expiration Notifications on the Loop phone, but might miss them if you are a caregiver. When you see \"Loop\" is No Longer Available on your phone, the only solution is to rebuild the app. All of your settings are still present on your phone, but your \"provisioning profile\" expired and you need to generate a new one. Once you build Loop on your phone, following the instructions on this page, all your settings will be maintained - assuming you build with the same Apple Developers ID that was used initially. Provisioning Profiles Be aware that if you build an app using Xcode without first deleting provisioning profiles, you might not have one year on that app. It is the expiration date of the provisioning profile on your computer that determines when the app expires.","title":"\"Loop\" is No Longer Available"},{"location":"build/updating/#build-video","text":"The Loop and Learn team prepared this YouTube video showing how to prepare for an update and build Loop Master. We recommend reading the written directions below before (and while) watching the video.","title":"Build Video"},{"location":"build/updating/#macos-and-xcode-versions","text":"","title":"macOS and Xcode Versions"},{"location":"build/updating/#determine-required-xcode-and-macos-versions","text":"Between Loop app builds, there's a high likelihood that Apple has updated one or more of the systems involved in your Loop app. If you don't have the minimum Xcode version required for your phone iOS , you cannot build on that phone. Sometimes you must also update the macOS version to allow you to use the required Xcode version. Based on the iOS on your phone, or the iOS you plan to install on your phone, determine the required macOS and Xcode versions. Click on this link versions for iOS , macOS and Xcode to determine the versions needed and then hit the back button in your browser to finish the steps on this updating page. First macOS and Then Xcode Your macOS must meet the minimum requirement for the Xcode version you need to support your current iOS as detailed in that link above. If the macOS is too old, the Xcode version will not appear in the App Store You might think you don't need to update Xcode (but you do) Your build will fail and mentors might need to help you Don't be that person. Follow the directions. Minimum means you need to have at least that version - newer versions build just fine.","title":"Determine Required Xcode and macOS Versions"},{"location":"build/updating/#verify-update-macos","text":"Click on this link Check your macOS Version and follow the instructions on that page if an update is required. After you've reviewed that section, hit the back button on your browser to return here","title":"Verify / Update macOS"},{"location":"build/updating/#verify-update-xcode","text":"Click on this link Check your Xcode Version to find your Xcode version number. If you need to update your Xcode , follow the instructions at this link Install Xcode and continue through Xcode Preferences . Advanced users: If you are finding installation of Xcode from the App Store incredibly slow, try the alternate method of Direct Download of Xcode . Direct Download If you previously did a direct download of Xcode , it might not show up in the App Store. Either do another direct download or follow these directions in the Direct Download section to reconfigure so it will show up in the App Store. Direct Download of Xcode","title":"Verify / Update Xcode"},{"location":"build/updating/#check-your-developer-account","text":"Apple updates its License Agreement for the Developer Program frequently. You need to login to your developer account to manually check if there is a new agreeement to accept. If you see a big red or orange banner across the top of your Developer Account announcing a new license agreement like shown below...please read and accept it before building Loop.","title":"Check your Developer Account"},{"location":"build/updating/#delete-provisioning-profiles","text":"In order to ensure a full year of use for your Loop app, you need to delete any existing provisioning profile(s) from your computer. It is the expiration date of the provisioning profile on your computer that determines when the app expires. Manual Delete of Provisioning Profiles If you are comfortable pasting commands into the terminal, you can delete the provisioning profiles by copying and pasting this command into a terminal window. Copy and Paste to remove Provisioning Profiles rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision If you did the manual delete, skip ahead to Ready To Build Loop .","title":"Delete Provisioning Profiles"},{"location":"build/updating/#build-select-utilities","text":"You can delete the old provisioning profiles with the same Build Select Script you will use to download and build new code.","title":"Build Select Utilities"},{"location":"build/updating/#ready-to-build-loop","text":"As long as there are no errors, you are now ready to proceed to one of these pages: Released Loop Code: Build the Loop App: Developer Mode Development Loop Code: Loop-dev After building the new app, you may choose to return to this page and follow the instructions to Delete Old Copies . This is optional, but cleans up space on your computer.","title":"Ready to Build Loop"},{"location":"build/updating/#delete-old-copies","text":"This step is optional, but if your computer is low on space, it helps to clean up old downloads your are no longer using. When you update, you no longer need to keep old copies of the code on your computer. If you want to clean up space, you can delete those old folder(s) now if you want. Where is the old folder? Assuming you used the Build Select Script , your downloads are in the ~/Downloads/BuildLoop folder as shown in the graphic below. If you are tight on space, the older folders can be deleted. Best practice, download fresh and build Loop; and then go back and delete all but the most recent copy. The nice thing about the Build Select script is it automatically generates the folder name with the date and time of the download. Delete each unwanted folder, one at a time. If you see a file (not a folder) in ~/Downloads/BuildLoop called LoopConfigOverride.xcconfig, keep that around. If you delete it, you'll need to recover it from the trash, regenerate it (if you know how) or sign your targets manually for your current download. The Scripts folder can also be left alone, but if you delete it, it is regenerated with the next use of the Build Select Script .","title":"Delete Old Copies"},{"location":"build/updating/#background-information","text":"New Loopers do not need to read the rest of this page. Experienced Loopers may wonder what happened to deleting derived data. Each workspace folder has a unique folder for storing derived data Deleting derived data across all Xcode workspaces and projects for a brand new download is not required to ensure a year for a given build The Clean Derived Data option in the Utilities menu can be required for some special cases, but you probably won't need it","title":"Background Information"},{"location":"build/updating/#direct-download-of-xcode","text":"Many people find updating Xcode from the App Store to be incredibly slow - especially when a new version has just been released. This method still takes time and enough space on your disk, but is faster than going through the App Store. Depending on your internet speed, this download can be done in about an hour. Then once it is downloaded, expect another fifteen minutes to several hours (depending on the speed of your computer) for the \"xip\" file to \"expand\". The instructions do not hold your hand. Your macOS must be at the minimum verion (or newer) to support the version of Xcode you're about the download You need to know how to log into your Apple Developer account and navigate those menus You need to know how to use Finder to navigate to Downloads You need to know how to drag the Xcode icon into your Applications folder (after download and expand completes) After you have done a direct download, the App Store will not show you updates Either repeat the Direct Download or Delete Xcode from Applications folder Open the App Store and search for Xcode Install fresh After you use the App Store for a download, then Updates will show in the future Here are the different steps you need to follow doing the Direct Download instead of the App Store method: Login to your Apple developer account Examine the menus (on my computer there are buttons on the left hand side) Click on Downloads (under Additional Resources) Look at menu items (on my computer there are buttons at the top) that say Beta, Release, Profiles and Logs, and More Click on More Scroll down until you find the item you want (for example, Xcode 13) Click on View Details and click on the Download button for the \"xip\" file Wait for Download to complete Expand the file by clicking on it in Finder Move the Xcode icon to Applications after the expansion completes Check the Command Line Tools setting under Xcode ->Preferences The selection cannot be blank or Build-Script will fail to open Xcode automatically It should be the same version as your Xcode Reboot the computer","title":"Direct Download of Xcode"},{"location":"faqs/FAQs/","text":"Loop FAQs \u00b6 What do I need to Loop? \u00b6 To build and use Loop you need: Apple computer Compatible iPhone/iPod Touch Compatible insulin pump : [Medtronic or Omnipod ] Compatible CGM RileyLink Compatible Device (unless using Omnipod DASH) Apple Developer Membership Xcode (a free Apple application) Can I download Loop from the App store? \u00b6 No. Loop is not available for download. You must build your own Loop app. Loop app will not be available in the Apple App store because that would be distribution of a medical device, and we are not in that \"business\". You can build yourself, but we are not distributors. Each step needed to successfully build your Loop app is found in these docs. The harder part will be having the patience to read all the documents before you start. New Loop users are so excited to get started that they often skip reading all the great info that these docs contain. As you begin the build...please include time to read the documents that follow what happens after you successfully build your Loop app. If you have any questions, use the Search feature to find topics in LoopDocs. Can I use an android phone or iPad for Loop? \u00b6 No, this is purely iPhone or iPod touch. The iPad does not support Apple Health which is required for Loop. There is open source software that runs on Android phones. Check out AndroidAPS Documention . Do I have to be \"tech-smart\" to build Loop? \u00b6 No. You do not need any experience in code or computers to build Loop. If you have already owned an Apple computer and iPhone, you already have the required level of experience. Beyond that, simply read the directions slowly and diligently...all the information you will need are in these documents. Often times the non-tech people do better than the tech people in building Loop. Why? Because the non-tech people take the time to read slowly and look at the screenshots in the directions. The tech people often skim read and miss sentences...which then leads to build errors that have to be retraced and fixed. Is there a cheat sheet for a school nurse to use? \u00b6 Sure, you can give this one a try. School nurse's cheat sheet download How long does it take to build Loop? \u00b6 The answer is varied, but a few hours from start to finish, depending on where you are starting and how comfortable you are with your computer. If you'd rather break it up into several shorter bits of effort, the Build App section is divided into convenient stopping points with Time Estimates for each page. You can do one or more pages at a time, depending on what kind of time you have available. Does Loop cost money? \u00b6 Yes, there are some costs, beyond the obvious costs of owning a pump and CGM . There are several options for the RileyLink Compatible Devices at this time. They typically cost around $150. This is a one-time cost and the devices should last for years (unless it goes swimming, goes through the wash, gets run over by a car, etc.). It's fine to buy one device and make sure you want to Loop, but if you can afford it, go on and get two or get two different kinds. Once you Loop, you'll want a backup. Because some of the newer versions have features some people prefer, you may find posts on The Looped Facebook Group offering to sell their RileyLink for a reduced cost. The Apple Developer License can be done for free, however, you will have to rebuild your Loop app every 7 days. That could get very tedious. The $99 annual Apple Developer program enrollment is an excellent investment. There are no other costs, ongoing or initial, to use Loop beyond what you already pay for your CGM , pump supplies and insulin. Do I need to own my own Apple computer? \u00b6 You don't have to own your own Apple computer, but you do need to at least borrow one. It would be really good to have longer term ability to borrow that computer again for updating Loop later, when needed. If you are borrowing an Apple computer, look at the required minimum settings associated with your iPhone Compatible Computer and Xcode Version Can I use a PC or Windows computer to build? \u00b6 Yes, you can...sort of. There is a hacked way of installing macOS on a Windows computer called a Virtual Machine . This link provides some helpful information. This Virtual Machine method will not work on PCs that have AMD processors, only Intel. Double check that your computer uses an Intel processor before attempting the virtual machine method. If you want to try this, there are mentors on The Looped Facebook Group who can assist. How often do I need to get on the computer for Loop? \u00b6 The short answer is (1) when you first build and (2) once per year minimum after that. (If you decide to use a free Apple Developer Account, you will need to get on the computer every 7 days.) The longer answer is that Loop code is updated periodically to include new features and bug fixes. When those updates are released, you'll need access to an Apple computer again to update your Loop app. Loop updates are not available through the iPhone's app store...instead you do the app update yourself with update instructions here . In general, probably a few times a year there are updates to Loop released that you'd want to take the time to install. Will I need to build a new Loop if I switch between Medtronic and Omnipod ? \u00b6 No. Loop lets you move between different pump types from within the same Loop app. Can I use my Apple Developer account to build for others? \u00b6 If there is more than one Looper in the family, you only need to have one Apple Developer ID and only one annual payment. The adult who builds can use their Apple Dev ID to put the app on the Looper's phone. The limit is 99 devices (phone and watch both count). Unless it's a very large family, you should have no problem supporting everyone in your family. Building Loop on the second phone is much faster than the first one. It's a good idea to let someone else in the family know how to build and have access to your Apple password in case you're out of town. It's also a good idea to build Loop on a backup phone especially for travel. The Apple Developer ID and the Apple ID are two different things. PLEASE read this: Loopers Need Their Own Apple ID . What happens when I switch Apple Developer ID? \u00b6 The Loop app on the phone is different if the build uses a different Apple Developer ID from the one currently on the phone. So if the Apple Developer ID used for a new Loop build is different from the one used for the existing Loop app, there will be two Loop apps on the phone. The Looper will have to on-board the new app, enter all the settings again and delete the old app. Can I use someone else's Apple Developer account? \u00b6 It's best that you build your own Loop app using your own Apple Developer ID. One developer account can only be \"linked\" to a limited number of devices. So one person \"loaning out\" their developer license to a lot of people will quickly exceed the number of allowed devices. In those cases, that person will be told they need to revoke the certificates on some devices (essentially dropping old ones to make room for new ones). If they revoke your device certificate (and they can do that without you knowing through their developer portal), your Loop app will immediately stop working and not even open. Your Loop app will also die immediately if their developer account is not renewed or expires. Moral of the story, out of all the ways to save money...borrowing someone's developer account is not a good place to save money. You don't want your Loop app to suddenly stop working. How can I find a compatible pump? supplies? \u00b6 There is a whole page with detailed information about Medtronic pumps ; how to find them, how to find supplies, and assessing whether your Medtronic pump is compatible. Please check out that page for more info. You can also use some Omnipod pumps with Loop. You do not need the Omnipod Personal Diabetes Manager (PDM), just the pod supplies. Your insurance or pharmacy coverage may cover some of the cost. Loop 2.2.x (the released code) supports Eros Refer to Build Released Code The development version of Loop (soon to be released) supports both Eros and DASH This is not for beginners - please read the information (including links) on this page before building Refer to Build Development Code Omnipod 5 is not supported by any version of Loop Can I pay someone else to do this? \u00b6 We do not know whether someone who builds the app for you incurs legal responsibility if something goes wrong while you are using a version they built for you. There are a few companies that provide Loop as a service. Best Practice: Learn to Build You are strongly encouraged to build Loop for yourself. No links to providers who build Loop as a service are found in LoopDocs If you choose to use such a service, before you begin, you should: Read all of LoopDocs Know how to Set up, Operate and Troubleshoot Loop These steps are important for your safety What if I lose my RileyLink Compatible Device? \u00b6 For Medtronic users, you simply go back to old school pump use until you get a new RileyLink compatible device. You can either let your temp basal finish by itself (30 minutes or less) or cancel the temp basal on the pump's menu. For bolusing, you'd go back to using the pump's bolus commands. When you get a device (either finding your old one or getting your backup device out) and Loop running again, you'll want to do one thing. Enter in any carbs to Loop that you may have eaten in the recent past that could still be affecting blood glucose. While Loop will read whatever insulin deliveries had happened while the RileyLink compatible device was missing, it will not read any carbs you entered into the pump...so make sure to add those to Loop and backdate them to the time they were eaten. That will help make the transition back to closed loop smoother. For Pod users, your Pod will finish any currently running temporary basal rate (maximum of 30 minutes) and then revert back to your scheduled basal rate. Without a RileyLink compatible device, you will be receiving normal basals, but will need to pull out pens/syringe for boluses. If you have a backup device, you can simply connect to the new device on the same Loop app and it will work with the existing pod session. If you don't have a backup device, you'll have to remove the pod and start a new pod paired with your PDM until you get a new device. What if I lose or get a new iPhone? \u00b6 If you lose your phone - follow the same dosing protocol as if you lost your rileylink . When you get a new iPhone, you can plan ahead. The information found in the Update FAQs page, What if I'm Changing Phones section has more information. What about other pumps? When will they Loop? \u00b6 Hey now...let's be grateful for what we have first. The ability to use Loop is the result of tremendous amounts of effort, time, and sacrifice by volunteers. Cracking the pumps for Loop use is a large undertaking. If and when another set of people spend a large amount of time figuring out other pumps, then they could conceivably be added to Loop. But you don't need to let us know that you'd love to see more pumps compatible with Loop. There is just an awful lot of work that needs to happen and it is neither quick nor easy. Tandem pumps are not Loop compatible. Omnipod DASH pods will be Loop compatible (when Loop 3 is released). Omnipod 5 pods are not Loop compatible. Newer Medtronic pumps are not Loop compatible. Can I have more than one Loop app on a phone? \u00b6 Yes, this is technically possible. You can have multiple Loop apps built onto the same iPhone. However, having multiple Loop apps on a single phone may lead to unexpected conflicts that can negatively affect your Loop's ability to stay green (keep looping). Additionally, your Pod will only work on one Loop app at a time anyways. So for smooth looping, just keep one Loop app on any phone for looping use. Will I be able to Loop on a plane? Or in the mountains? \u00b6 Yes. Loop does not require internet or cell coverage to work. So long as the Loop user has Bluetooth turned on on the iPhone (or iPod touch), then the Dexcom and RileyLink will still be able to do their work with Loop and your pump/Pod. One exception - if you've chosen to use a CGM source that does require the internet, you will need to have cell or internet coverage. This ability is provided as a service to folks who cannot get their CGM data any other way. It is also a convenience for people testing the code.","title":"Loop FAQs"},{"location":"faqs/FAQs/#loop-faqs","text":"","title":"Loop FAQs"},{"location":"faqs/FAQs/#what-do-i-need-to-loop","text":"To build and use Loop you need: Apple computer Compatible iPhone/iPod Touch Compatible insulin pump : [Medtronic or Omnipod ] Compatible CGM RileyLink Compatible Device (unless using Omnipod DASH) Apple Developer Membership Xcode (a free Apple application)","title":"What do I need to Loop?"},{"location":"faqs/FAQs/#can-i-download-loop-from-the-app-store","text":"No. Loop is not available for download. You must build your own Loop app. Loop app will not be available in the Apple App store because that would be distribution of a medical device, and we are not in that \"business\". You can build yourself, but we are not distributors. Each step needed to successfully build your Loop app is found in these docs. The harder part will be having the patience to read all the documents before you start. New Loop users are so excited to get started that they often skip reading all the great info that these docs contain. As you begin the build...please include time to read the documents that follow what happens after you successfully build your Loop app. If you have any questions, use the Search feature to find topics in LoopDocs.","title":"Can I download Loop from the App store?"},{"location":"faqs/FAQs/#can-i-use-an-android-phone-or-ipad-for-loop","text":"No, this is purely iPhone or iPod touch. The iPad does not support Apple Health which is required for Loop. There is open source software that runs on Android phones. Check out AndroidAPS Documention .","title":"Can I use an android phone or iPad for Loop?"},{"location":"faqs/FAQs/#do-i-have-to-be-tech-smart-to-build-loop","text":"No. You do not need any experience in code or computers to build Loop. If you have already owned an Apple computer and iPhone, you already have the required level of experience. Beyond that, simply read the directions slowly and diligently...all the information you will need are in these documents. Often times the non-tech people do better than the tech people in building Loop. Why? Because the non-tech people take the time to read slowly and look at the screenshots in the directions. The tech people often skim read and miss sentences...which then leads to build errors that have to be retraced and fixed.","title":"Do I have to be \"tech-smart\" to build Loop?"},{"location":"faqs/FAQs/#is-there-a-cheat-sheet-for-a-school-nurse-to-use","text":"Sure, you can give this one a try. School nurse's cheat sheet download","title":"Is there a cheat sheet for a school nurse to use?"},{"location":"faqs/FAQs/#how-long-does-it-take-to-build-loop","text":"The answer is varied, but a few hours from start to finish, depending on where you are starting and how comfortable you are with your computer. If you'd rather break it up into several shorter bits of effort, the Build App section is divided into convenient stopping points with Time Estimates for each page. You can do one or more pages at a time, depending on what kind of time you have available.","title":"How long does it take to build Loop?"},{"location":"faqs/FAQs/#does-loop-cost-money","text":"Yes, there are some costs, beyond the obvious costs of owning a pump and CGM . There are several options for the RileyLink Compatible Devices at this time. They typically cost around $150. This is a one-time cost and the devices should last for years (unless it goes swimming, goes through the wash, gets run over by a car, etc.). It's fine to buy one device and make sure you want to Loop, but if you can afford it, go on and get two or get two different kinds. Once you Loop, you'll want a backup. Because some of the newer versions have features some people prefer, you may find posts on The Looped Facebook Group offering to sell their RileyLink for a reduced cost. The Apple Developer License can be done for free, however, you will have to rebuild your Loop app every 7 days. That could get very tedious. The $99 annual Apple Developer program enrollment is an excellent investment. There are no other costs, ongoing or initial, to use Loop beyond what you already pay for your CGM , pump supplies and insulin.","title":"Does Loop cost money?"},{"location":"faqs/FAQs/#do-i-need-to-own-my-own-apple-computer","text":"You don't have to own your own Apple computer, but you do need to at least borrow one. It would be really good to have longer term ability to borrow that computer again for updating Loop later, when needed. If you are borrowing an Apple computer, look at the required minimum settings associated with your iPhone Compatible Computer and Xcode Version","title":"Do I need to own my own Apple computer?"},{"location":"faqs/FAQs/#can-i-use-a-pc-or-windows-computer-to-build","text":"Yes, you can...sort of. There is a hacked way of installing macOS on a Windows computer called a Virtual Machine . This link provides some helpful information. This Virtual Machine method will not work on PCs that have AMD processors, only Intel. Double check that your computer uses an Intel processor before attempting the virtual machine method. If you want to try this, there are mentors on The Looped Facebook Group who can assist.","title":"Can I use a PC or Windows computer to build?"},{"location":"faqs/FAQs/#how-often-do-i-need-to-get-on-the-computer-for-loop","text":"The short answer is (1) when you first build and (2) once per year minimum after that. (If you decide to use a free Apple Developer Account, you will need to get on the computer every 7 days.) The longer answer is that Loop code is updated periodically to include new features and bug fixes. When those updates are released, you'll need access to an Apple computer again to update your Loop app. Loop updates are not available through the iPhone's app store...instead you do the app update yourself with update instructions here . In general, probably a few times a year there are updates to Loop released that you'd want to take the time to install.","title":"How often do I need to get on the computer for Loop?"},{"location":"faqs/FAQs/#will-i-need-to-build-a-new-loop-if-i-switch-between-medtronic-and-omnipod","text":"No. Loop lets you move between different pump types from within the same Loop app.","title":"Will I need to build a new Loop if I switch between Medtronic and Omnipod?"},{"location":"faqs/FAQs/#can-i-use-my-apple-developer-account-to-build-for-others","text":"If there is more than one Looper in the family, you only need to have one Apple Developer ID and only one annual payment. The adult who builds can use their Apple Dev ID to put the app on the Looper's phone. The limit is 99 devices (phone and watch both count). Unless it's a very large family, you should have no problem supporting everyone in your family. Building Loop on the second phone is much faster than the first one. It's a good idea to let someone else in the family know how to build and have access to your Apple password in case you're out of town. It's also a good idea to build Loop on a backup phone especially for travel. The Apple Developer ID and the Apple ID are two different things. PLEASE read this: Loopers Need Their Own Apple ID .","title":"Can I use my Apple Developer account to build for others?"},{"location":"faqs/FAQs/#what-happens-when-i-switch-apple-developer-id","text":"The Loop app on the phone is different if the build uses a different Apple Developer ID from the one currently on the phone. So if the Apple Developer ID used for a new Loop build is different from the one used for the existing Loop app, there will be two Loop apps on the phone. The Looper will have to on-board the new app, enter all the settings again and delete the old app.","title":"What happens when I switch Apple Developer ID?"},{"location":"faqs/FAQs/#can-i-use-someone-elses-apple-developer-account","text":"It's best that you build your own Loop app using your own Apple Developer ID. One developer account can only be \"linked\" to a limited number of devices. So one person \"loaning out\" their developer license to a lot of people will quickly exceed the number of allowed devices. In those cases, that person will be told they need to revoke the certificates on some devices (essentially dropping old ones to make room for new ones). If they revoke your device certificate (and they can do that without you knowing through their developer portal), your Loop app will immediately stop working and not even open. Your Loop app will also die immediately if their developer account is not renewed or expires. Moral of the story, out of all the ways to save money...borrowing someone's developer account is not a good place to save money. You don't want your Loop app to suddenly stop working.","title":"Can I use someone else's Apple Developer account?"},{"location":"faqs/FAQs/#how-can-i-find-a-compatible-pump-supplies","text":"There is a whole page with detailed information about Medtronic pumps ; how to find them, how to find supplies, and assessing whether your Medtronic pump is compatible. Please check out that page for more info. You can also use some Omnipod pumps with Loop. You do not need the Omnipod Personal Diabetes Manager (PDM), just the pod supplies. Your insurance or pharmacy coverage may cover some of the cost. Loop 2.2.x (the released code) supports Eros Refer to Build Released Code The development version of Loop (soon to be released) supports both Eros and DASH This is not for beginners - please read the information (including links) on this page before building Refer to Build Development Code Omnipod 5 is not supported by any version of Loop","title":"How can I find a compatible pump? supplies?"},{"location":"faqs/FAQs/#can-i-pay-someone-else-to-do-this","text":"We do not know whether someone who builds the app for you incurs legal responsibility if something goes wrong while you are using a version they built for you. There are a few companies that provide Loop as a service. Best Practice: Learn to Build You are strongly encouraged to build Loop for yourself. No links to providers who build Loop as a service are found in LoopDocs If you choose to use such a service, before you begin, you should: Read all of LoopDocs Know how to Set up, Operate and Troubleshoot Loop These steps are important for your safety","title":"Can I pay someone else to do this?"},{"location":"faqs/FAQs/#what-if-i-lose-my-rileylink-compatible-device","text":"For Medtronic users, you simply go back to old school pump use until you get a new RileyLink compatible device. You can either let your temp basal finish by itself (30 minutes or less) or cancel the temp basal on the pump's menu. For bolusing, you'd go back to using the pump's bolus commands. When you get a device (either finding your old one or getting your backup device out) and Loop running again, you'll want to do one thing. Enter in any carbs to Loop that you may have eaten in the recent past that could still be affecting blood glucose. While Loop will read whatever insulin deliveries had happened while the RileyLink compatible device was missing, it will not read any carbs you entered into the pump...so make sure to add those to Loop and backdate them to the time they were eaten. That will help make the transition back to closed loop smoother. For Pod users, your Pod will finish any currently running temporary basal rate (maximum of 30 minutes) and then revert back to your scheduled basal rate. Without a RileyLink compatible device, you will be receiving normal basals, but will need to pull out pens/syringe for boluses. If you have a backup device, you can simply connect to the new device on the same Loop app and it will work with the existing pod session. If you don't have a backup device, you'll have to remove the pod and start a new pod paired with your PDM until you get a new device.","title":"What if I lose my RileyLink Compatible Device?"},{"location":"faqs/FAQs/#what-if-i-lose-or-get-a-new-iphone","text":"If you lose your phone - follow the same dosing protocol as if you lost your rileylink . When you get a new iPhone, you can plan ahead. The information found in the Update FAQs page, What if I'm Changing Phones section has more information.","title":"What if I lose or get a new iPhone?"},{"location":"faqs/FAQs/#what-about-other-pumps-when-will-they-loop","text":"Hey now...let's be grateful for what we have first. The ability to use Loop is the result of tremendous amounts of effort, time, and sacrifice by volunteers. Cracking the pumps for Loop use is a large undertaking. If and when another set of people spend a large amount of time figuring out other pumps, then they could conceivably be added to Loop. But you don't need to let us know that you'd love to see more pumps compatible with Loop. There is just an awful lot of work that needs to happen and it is neither quick nor easy. Tandem pumps are not Loop compatible. Omnipod DASH pods will be Loop compatible (when Loop 3 is released). Omnipod 5 pods are not Loop compatible. Newer Medtronic pumps are not Loop compatible.","title":"What about other pumps? When will they Loop?"},{"location":"faqs/FAQs/#can-i-have-more-than-one-loop-app-on-a-phone","text":"Yes, this is technically possible. You can have multiple Loop apps built onto the same iPhone. However, having multiple Loop apps on a single phone may lead to unexpected conflicts that can negatively affect your Loop's ability to stay green (keep looping). Additionally, your Pod will only work on one Loop app at a time anyways. So for smooth looping, just keep one Loop app on any phone for looping use.","title":"Can I have more than one Loop app on a phone?"},{"location":"faqs/FAQs/#will-i-be-able-to-loop-on-a-plane-or-in-the-mountains","text":"Yes. Loop does not require internet or cell coverage to work. So long as the Loop user has Bluetooth turned on on the iPhone (or iPod touch), then the Dexcom and RileyLink will still be able to do their work with Loop and your pump/Pod. One exception - if you've chosen to use a CGM source that does require the internet, you will need to have cell or internet coverage. This ability is provided as a service to folks who cannot get their CGM data any other way. It is also a convenience for people testing the code.","title":"Will I be able to Loop on a plane? Or in the mountains?"},{"location":"faqs/algorithm-faqs/","text":"Algorithm FAQs \u00b6 Does Loop \"learn\" or detect changes in your insulin needs? \u00b6 The answer is both Yes and No. Yes in that: There is a short-term retrospective analysis built into Loop which will apply a weighted-correction based on the past 60 minutes of blood glucose changes. Loop works best if you enter an estimate of carbs and absorption time for meals, but it also is fairly forgiving There are discussions on Insulin Counteraction Effect ( ICE ) on a number of pages within LoopDocs: Dynamic Carb Absorption Carbohydrate Effect Insulin Counteraction Effect No in that: Loop assumes the settings you've provided are correct. Loop does not adjust or \"learn\" the Therapy Settings portion of Loop parameters directly It keeps those fixed and user controlled, separate from the dynamic part of the Loop algorithm, which does learn based on short-term patterns If outside factors (such as hormones, illness, exercise, medications, etc) affect your underlying Therapy Settings you may need to manually adjust those settings. This LoopTips 3-page section on Settings is recommended. Perhaps in subsequent versions of Loop, auto-adjustment of settings or machine learning could be incorporated. Until then, you will need to tell Loop if your underlying settings change or make temporary adjustments for short term issues. The use of Overrides can be quite helpful for short-term changes. What does negative Active Insulin mean? \u00b6 When Loop withholds or suspends some of your scheduled basal insulin, that starts an accumulation of insulin deficit. If you have a kinked cannula and insulin is not delivered, you'd call yourself \"lacking insulin\" (negative IOB ). When Loop reports negative IOB , it is a sign that Loop has been actively helping you prevent a low blood sugar. If you find significant negative IOB regularly, you probably need to adjust/test your settings . Glucose that continues to decrease (away from a meal) when IOB goes negative is typically a sign that the scheduled basal rate is too high. Developer Notes Scheduled basal rates are meant to counteract your endogenous glucose production. Another way of saying this is that Loop expects your body to be producing an amount of glucose at a rate that is handled by your basal insulin settings. Your body doesn't really produce glucose at a fixed rate, but that's how it's modeled in Loop. \"All models are wrong, but some are useful.\" (Quote attributed to British statistician George E. P. Box.) How is IOB calculated? \u00b6 Insulin on board ( IOB ) is calculated from the amount of insulin delivered above or below the scheduled basal rate. For each dose of insulin, the insulin model is used to determine how much of that insulin is active over time. Loop is adding up all the amounts over the full Duration of Insulin Action ( DIA ). The DIA is 6 hours for most rapid insulin in the models used by Loop. IOB is plotted on the Active Insulin Chart in the main Loop display. More Algorithm Information \u00b6 There is more detail about the Loop Algorithm at the bottom of the Operate tab. Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Algorithm FAQs"},{"location":"faqs/algorithm-faqs/#algorithm-faqs","text":"","title":"Algorithm FAQs"},{"location":"faqs/algorithm-faqs/#does-loop-learn-or-detect-changes-in-your-insulin-needs","text":"The answer is both Yes and No. Yes in that: There is a short-term retrospective analysis built into Loop which will apply a weighted-correction based on the past 60 minutes of blood glucose changes. Loop works best if you enter an estimate of carbs and absorption time for meals, but it also is fairly forgiving There are discussions on Insulin Counteraction Effect ( ICE ) on a number of pages within LoopDocs: Dynamic Carb Absorption Carbohydrate Effect Insulin Counteraction Effect No in that: Loop assumes the settings you've provided are correct. Loop does not adjust or \"learn\" the Therapy Settings portion of Loop parameters directly It keeps those fixed and user controlled, separate from the dynamic part of the Loop algorithm, which does learn based on short-term patterns If outside factors (such as hormones, illness, exercise, medications, etc) affect your underlying Therapy Settings you may need to manually adjust those settings. This LoopTips 3-page section on Settings is recommended. Perhaps in subsequent versions of Loop, auto-adjustment of settings or machine learning could be incorporated. Until then, you will need to tell Loop if your underlying settings change or make temporary adjustments for short term issues. The use of Overrides can be quite helpful for short-term changes.","title":"Does Loop \"learn\" or detect changes in your insulin needs?"},{"location":"faqs/algorithm-faqs/#what-does-negative-active-insulin-mean","text":"When Loop withholds or suspends some of your scheduled basal insulin, that starts an accumulation of insulin deficit. If you have a kinked cannula and insulin is not delivered, you'd call yourself \"lacking insulin\" (negative IOB ). When Loop reports negative IOB , it is a sign that Loop has been actively helping you prevent a low blood sugar. If you find significant negative IOB regularly, you probably need to adjust/test your settings . Glucose that continues to decrease (away from a meal) when IOB goes negative is typically a sign that the scheduled basal rate is too high. Developer Notes Scheduled basal rates are meant to counteract your endogenous glucose production. Another way of saying this is that Loop expects your body to be producing an amount of glucose at a rate that is handled by your basal insulin settings. Your body doesn't really produce glucose at a fixed rate, but that's how it's modeled in Loop. \"All models are wrong, but some are useful.\" (Quote attributed to British statistician George E. P. Box.)","title":"What does negative Active Insulin mean?"},{"location":"faqs/algorithm-faqs/#how-is-iob-calculated","text":"Insulin on board ( IOB ) is calculated from the amount of insulin delivered above or below the scheduled basal rate. For each dose of insulin, the insulin model is used to determine how much of that insulin is active over time. Loop is adding up all the amounts over the full Duration of Insulin Action ( DIA ). The DIA is 6 hours for most rapid insulin in the models used by Loop. IOB is plotted on the Active Insulin Chart in the main Loop display.","title":"How is IOB calculated?"},{"location":"faqs/algorithm-faqs/#more-algorithm-information","text":"There is more detail about the Loop Algorithm at the bottom of the Operate tab. Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"More Algorithm Information"},{"location":"faqs/apple-health-faqs/","text":"Apple HealthKit FAQs \u00b6 How does Loop use Apple HealthKit? \u00b6 Loop uses Apple HealthKit as long term storage for glucose, insulin and carbohydrates. But there is more going on than simple storage. It is important that permissions for Loop be properly configured for the Health app. Loop 2.2.x: See Health Permissions Loop 3: See Apple Health Permissions To view the list of data stored in Health Tap on the Health icon (red heart) to open the app Tap on Blood Glucose, Carbohydrates or Insulin Scroll all the way to the bottom Tap on Show All Data To Set Blood Glucose, Carbohydrates and Insulin as Favorites Tap on the Health icon (red heart) to open the app There's a toolbar at the bottom of the screen (always visible in the app) Tap on the Browse icon (bottom right of toolbar) Tap on Other Data for Blood Glucose and Insulin Nutrition for Carbohydrates Tap each item, scroll down to Options section and tap on Add to Favorite Repeat until all three are added Tap on the Summary (bottom left icon of toolbar); Favorites show up first HealthKit Plots \u00b6 The health app on the Loop phone provides useful plots of data since you started to Loop with that Apple ID. Examples for insulin delivery and carbohydrates are shown in the graphic below. New versions of iOS modified details of the display with the same or improved capabilities. HealthKit Details \u00b6 Glucose and Apple HealthKit \u00b6 For Dexcom users with the Dexcom app on the Loop phone, the Dexcom app writes the value to Health with a 3-hour delay. Loop reads the Dexcom information at the same time the Dexcom app gets the reading from the transmitter. It uses the glucose value to update predictions and stores it in Health. If you look at your Health glucose readings, you'll notice the Loop icon for the last 3 hours and the Dexcom icon for times earlier than that. All other CGM readings are reported with the Loop icon and there is no transition after 3 hours. You may also notice that the Dexcom numbers get smoothed out. For example, the Dexcom readings, when they first are read from the transmitter may bounce up and down a bit. The Dexcom app will retrospectively smooth the numbers, changing what is displayed in their app compared to the original reading. The last 3 hours of data from Loop does not show that smoothing - it reports the value sent by the transmitter. If you suspect a sensor is not behaving well, check the Loop glucose plots compared to the Dexcom plots to assist in your evaluation. It might be time to confirm glucose with a fingerstick meter as well. Carbohydrates and Apple HealthKit \u00b6 In Loop 2.2.x, if you set Apple Health app permissions to allow it, Loop will read carbohydrates from the Health app. If you give a third-party app permission to store carbohydrate data in Health, and do not realize that Loop reads that information, you might get unexpected insulin delivery based off those carbs. To avoid that unanticipated behavior, the directions tell you to set permissions to allow Loop to write to carbohydrate storage but not read. In Loop 3, the option to read from Health carbohydrates is explicitly disabled and can only be enabled by setting up special parameters when you build the app. The insructions for the code customization are not in LoopDocs yet. If it is important to you to use a third-party app to record carbohydrates and have Loop read the information and automatically dose with insulin, ask for help in zulipchat . Insulin and Apple HealthKit \u00b6 The relationship between Loop and Apple HealthKit is very important to understand if you ever need to do one of these actions: Dose insulin from another source (injection, smart pen) Remove insulin that wasn't really given (failed site or forgot to reattach a tubed pump) Be Cautious Allowing users to delete events is fairly risky. If a user deletes a dose accidentally, or does not understand the IOB impact while in Closed Loop , then Loop may start giving insulin that is not needed. One method to deal with insulin that wasn't given is to go Open Loop for 3 to 6 hours. However, if you take care, you can remove insulin from Loop. Developer Notes: Pump Events and Insulin Delivery Loop stores Pump Events separately from Insulin Delivery. With permissions set to allow Loop to read insulin from Health (recommended), the Insulin Delivery store contains doses entered from Health as well as the subset of pump events that represent doses. Pump Events are displayed by tapping an insulin chart on the main screen and viewing the Event History tab. When you delete a pump event using the Event History interface in Loop, the associated entry in Insulin Delivery is not deleted. Bolus \u00b6 When Loop commands the pump to provide a bolus, either manual or automatic, it is shown in the Loop Event History and in the Health app insulin data list It may take a Loop Cycle or two to show up in Health, but it will appear When you add insulin, such as from an injection, to the Health app, Loop reads it and adds it to IOB It will not be added to the Event History because this is not a pump event Loop 3 adds a new feature that allows you to add non-pump insulin from within the app instead of requiring you to add it inside the Health app If you delete an entry from the Loop Event History list, but leave that same entry in Health, Loop reads it back from Health It will not show up in the Event History , but it will still contribute to IOB You must delete a pump event from both Loop Event History and Health data; it is best if you do this within one Loop Cycle If that dose showed up in Event History but you could not find it in Health, look again after the next Loop cycle If you delete an entry from Health, but leave that same entry in Loop Event History , Loop reports it to Health again You must delete a pump event from both the Loop Event History list and Health data; it is best if you do this within one Loop Cycle Pro Tip Write on a piece of paper the times and values you think you should delete. Look at those values in both Loop Event History and Health Insulin data list. Record what Loop is reporting as IOB . Review the values one more time, and then delete those entries in both places. Review IOB again. If you made a mistake, you can refer to that written list and adjust appropriately. Basal \u00b6 Loop keeps track of how much basal is delivered so the IOB is properly reported. In older versions of Loop, there may be occasional display glitches, but the internal accounting is correct and updates every Loop Cycle . Developer Notes: Scheduled Basal is Not a Pump Event Scheduled basal is not a pump event so you will not see it listed in the Event History tab. Scheduled basal does not affect IOB when delivered as scheduled. The Insulin Delivery store keeps track of the insulin delivered via scheduled basal. Loop updates the amount of insulin delivered through basal (both scheduled and temporary) to Health at regular intervals - this does not happen every Loop Cycle when basal rates are not changing. The updates to Health happen: At midnight When the scheduled basal rate changes When a temporary basal rate changes A simple example to illustrate this - for a pump with smallest insulin delivery of 0.05 U: Schedule Temp Basal (TB) Health Explanation 12:00 AM 0.4 U/hr --- --- Start of Day / Start of Example 06:00 AM 0.5 U/hr --- 06:00 AM Basal 2.4 U Loop reports insulin delivered by basal for the last 6 hours when the scheduled basal rate has a new entry --- 07:15 AM 0.0 U/hr 07:15 AM Basal 0.6 U Loop reports insulin delivered by basal since last report up to time TB starts --- 07:45 AM TB expires 07:45 AM Basal 0 U No insulin was delivered during TB 08:00 AM 0.4 U/hr --- 08:00 AM Basal 0.1 U Loop reports insulin delivered by basal since last report; the scheduled basal rate has a new entry Tidepool and Apple HealthKit \u00b6 If you have a Tidepool account and use the Tidepool uploader on your Loop phone, the data in Health is uploaded to your Tidepool database where you can view displays with the Tidepool web browser tool . How Do I Modify Apple HealthKit Permissions \u00b6 You can review the Apple HealthKit permissions screen at any time. Simply open the Apple Health app (the red heart) Find the toolbar at the bottom that says Sharing Scroll to the bottom of Sharing Select Apps Select Loop At this point, you can review and modify the settings. How Do I Change Glucose Units? \u00b6 The glucose units (mg/dL or mmol/L) Loop uses match what is in Apple Health. Once you connect a device that reports glucose to the phone, make sure the units match the device. Note - you can change units for Dexcom Share and it translates units for you - not sure about other devices. These instructions to change Blood Glucose units are for iOS 15 Select the Health app (Heart icon) There's a toolbar at the bottom - select Browse Scroll to find Vitals Select Blood Glucose Scroll to the bottom and select Unit Tap on Unit, if it isn't right, and select the correct units While you are there - go on and select Blood Glucose as a Favorite - it will be easier to find next time","title":"Apple Health FAQs"},{"location":"faqs/apple-health-faqs/#apple-healthkit-faqs","text":"","title":"Apple HealthKit FAQs"},{"location":"faqs/apple-health-faqs/#how-does-loop-use-apple-healthkit","text":"Loop uses Apple HealthKit as long term storage for glucose, insulin and carbohydrates. But there is more going on than simple storage. It is important that permissions for Loop be properly configured for the Health app. Loop 2.2.x: See Health Permissions Loop 3: See Apple Health Permissions To view the list of data stored in Health Tap on the Health icon (red heart) to open the app Tap on Blood Glucose, Carbohydrates or Insulin Scroll all the way to the bottom Tap on Show All Data To Set Blood Glucose, Carbohydrates and Insulin as Favorites Tap on the Health icon (red heart) to open the app There's a toolbar at the bottom of the screen (always visible in the app) Tap on the Browse icon (bottom right of toolbar) Tap on Other Data for Blood Glucose and Insulin Nutrition for Carbohydrates Tap each item, scroll down to Options section and tap on Add to Favorite Repeat until all three are added Tap on the Summary (bottom left icon of toolbar); Favorites show up first","title":"How does Loop use Apple HealthKit?"},{"location":"faqs/apple-health-faqs/#healthkit-plots","text":"The health app on the Loop phone provides useful plots of data since you started to Loop with that Apple ID. Examples for insulin delivery and carbohydrates are shown in the graphic below. New versions of iOS modified details of the display with the same or improved capabilities.","title":"HealthKit Plots"},{"location":"faqs/apple-health-faqs/#healthkit-details","text":"","title":"HealthKit Details"},{"location":"faqs/apple-health-faqs/#glucose-and-apple-healthkit","text":"For Dexcom users with the Dexcom app on the Loop phone, the Dexcom app writes the value to Health with a 3-hour delay. Loop reads the Dexcom information at the same time the Dexcom app gets the reading from the transmitter. It uses the glucose value to update predictions and stores it in Health. If you look at your Health glucose readings, you'll notice the Loop icon for the last 3 hours and the Dexcom icon for times earlier than that. All other CGM readings are reported with the Loop icon and there is no transition after 3 hours. You may also notice that the Dexcom numbers get smoothed out. For example, the Dexcom readings, when they first are read from the transmitter may bounce up and down a bit. The Dexcom app will retrospectively smooth the numbers, changing what is displayed in their app compared to the original reading. The last 3 hours of data from Loop does not show that smoothing - it reports the value sent by the transmitter. If you suspect a sensor is not behaving well, check the Loop glucose plots compared to the Dexcom plots to assist in your evaluation. It might be time to confirm glucose with a fingerstick meter as well.","title":"Glucose and Apple HealthKit"},{"location":"faqs/apple-health-faqs/#carbohydrates-and-apple-healthkit","text":"In Loop 2.2.x, if you set Apple Health app permissions to allow it, Loop will read carbohydrates from the Health app. If you give a third-party app permission to store carbohydrate data in Health, and do not realize that Loop reads that information, you might get unexpected insulin delivery based off those carbs. To avoid that unanticipated behavior, the directions tell you to set permissions to allow Loop to write to carbohydrate storage but not read. In Loop 3, the option to read from Health carbohydrates is explicitly disabled and can only be enabled by setting up special parameters when you build the app. The insructions for the code customization are not in LoopDocs yet. If it is important to you to use a third-party app to record carbohydrates and have Loop read the information and automatically dose with insulin, ask for help in zulipchat .","title":"Carbohydrates and Apple HealthKit"},{"location":"faqs/apple-health-faqs/#insulin-and-apple-healthkit","text":"The relationship between Loop and Apple HealthKit is very important to understand if you ever need to do one of these actions: Dose insulin from another source (injection, smart pen) Remove insulin that wasn't really given (failed site or forgot to reattach a tubed pump) Be Cautious Allowing users to delete events is fairly risky. If a user deletes a dose accidentally, or does not understand the IOB impact while in Closed Loop , then Loop may start giving insulin that is not needed. One method to deal with insulin that wasn't given is to go Open Loop for 3 to 6 hours. However, if you take care, you can remove insulin from Loop. Developer Notes: Pump Events and Insulin Delivery Loop stores Pump Events separately from Insulin Delivery. With permissions set to allow Loop to read insulin from Health (recommended), the Insulin Delivery store contains doses entered from Health as well as the subset of pump events that represent doses. Pump Events are displayed by tapping an insulin chart on the main screen and viewing the Event History tab. When you delete a pump event using the Event History interface in Loop, the associated entry in Insulin Delivery is not deleted.","title":"Insulin and Apple HealthKit"},{"location":"faqs/apple-health-faqs/#tidepool-and-apple-healthkit","text":"If you have a Tidepool account and use the Tidepool uploader on your Loop phone, the data in Health is uploaded to your Tidepool database where you can view displays with the Tidepool web browser tool .","title":"Tidepool and Apple HealthKit"},{"location":"faqs/apple-health-faqs/#how-do-i-modify-apple-healthkit-permissions","text":"You can review the Apple HealthKit permissions screen at any time. Simply open the Apple Health app (the red heart) Find the toolbar at the bottom that says Sharing Scroll to the bottom of Sharing Select Apps Select Loop At this point, you can review and modify the settings.","title":"How Do I Modify Apple HealthKit Permissions"},{"location":"faqs/apple-health-faqs/#how-do-i-change-glucose-units","text":"The glucose units (mg/dL or mmol/L) Loop uses match what is in Apple Health. Once you connect a device that reports glucose to the phone, make sure the units match the device. Note - you can change units for Dexcom Share and it translates units for you - not sure about other devices. These instructions to change Blood Glucose units are for iOS 15 Select the Health app (Heart icon) There's a toolbar at the bottom - select Browse Scroll to find Vitals Select Blood Glucose Scroll to the bottom and select Unit Tap on Unit, if it isn't right, and select the correct units While you are there - go on and select Blood Glucose as a Favorite - it will be easier to find next time","title":"How Do I Change Glucose Units?"},{"location":"faqs/branch-faqs/","text":"Loop Development \u00b6 The next version of Loop is developed under a separate branch , independent of the released Loop version. Typically, the dev branch is used by the developers to push out changes for experienced users to test. It is not for new loopers. You should only test a development branch if you are willing to be an active participation with the developers to provide feedback and build frequently to obtain the latest feature or bug-fix that is being tested. If you are an experienced looper and willing to help out - this is the way the next release of Loop is improved. Because the Omnipod DASH is actively being testing in the dev branch , there is probably a lot more interest in being a \"tester\" now than if it was just a minor tweak. In addition to the DASH work, however, Loop itself has undergone a major architecture upgrade. There is a formal onboarding process, more safety features and a different menu layout. Updated interface documentation is a work-in-progress located under the Loop 3 tab of LoopDocs. Please read this entire page before using any version of Loop other than the released code. Repositories and Code \u00b6 If you're a developer looking for direct links to the code and documentation in Github: Loop LoopDocs For more information on how to contribute code to the project, please review: How to Contribute to Open Source Review the Loop LICENSE Review the Loop CODE_OF_CONDUCT If you want to contribute code improvements, please join Loop Zulipchat and be sure to subscribe to all the channels. Meet the developers and testers who make this app, and learn about what is coming next. What are branches? \u00b6 There is a lot of discussion about \"branches\" with Loop but the concept is simple. Basically, they are all slightly different versions of Loop...kind of like different edits of the same book. To really understand what branches are, we should probably explain a little more about Loop's code and how development works. You can watch a 30-minute long, classic Katie DiSimone video explanation about branches created when Loop Version 2.0 was newly released. The information in this video is still generally useful with the last-half focused on automatic-bolus - the automatic-bolus dosing strategy has now been incorporated into Loop master branch . Loop has moved on to using only one stable branch (master), with dev recommended for developer/testers. Loop GitHub Information \u00b6 Loop developers own an account in GitHub called LoopKit . Within that account, the developers have several \"repositories\" that support Loop in particular. A repository is like a book...let's think of it like a cookbook for now. Within the LoopKit account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of the info about the app itself; the outward facing things that you interact with. How information is put to you and taken in from you...that's in Loop repository code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. CGMBLEkit for some of the transmitter parts of Loop, RileyLink_ios for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc. When you build Loop, in the background, Loop pulls those other frameworks (7 in total) into the build process using \"Carthage\". Carthage is like a personal shopper. You give it a shopping list (the cartfile in Loop code is that shopping list) and it goes and fetches that for you during the build process. Sometimes your computer has an old shopping list...and that can cause build errors. Hence the \" carthage update\" fix in the Build Errors page...that command updates the shopping list to get the right versions of those frameworks. Anyways...so now you know about the general structure of Loop and LoopKit in Github. Now we can discuss Loop itself a little deeper. So let's imagine Loop as a cookbook. The developers are the authors/chefs of the recipes (code) in the cookbook. The authors spend countless hours testing new recipes, taste testing, documenting improvements. They send the drafts to the editor, who makes suggestions and eventually the cookbook is finalized. There are no grammar issues, no typos, the photos are beautiful and the recipes are yummy. They publish the book and you see a gorgeous final product on the shelves. That is called a \"release\" and it is the master branch . This book has been well-tested and is super stable. Every time you cook with those recipes, you know exactly what you're getting and lots of people have had a chance before you to make sure that it all tastes good. Master branch is stable and tested. But then...the chefs/developers go on a trip. They are inspired by new cuisine and want to add new recipes to the old cookbook. (Things like omnipod support and overrides are new \"recipes\" that were developed since the last master release, for example.) But, the process for developing a recipe is arduous. Lots of trial and error involved. Lots of tweaking ingredients (code). The editors try out the new recipes and offer feedback (similar to the Issues List in GitHub ). While the recipes are being developed, they have a version of the old cookbook that gets marked up...edited in pencil a lot. Scribbles and notes in the side. Revisions happen frequently, because that's what testing new recipes is all about. These marked-up versions of the cookbook are called \"dev\" branch . Short for \"development\" branch . Like the name sounds...this is where new developments are happening, new recipes and tweaks. After much testing and tweaking, eventually the recipes get the flavors right (bugs in code are squashed) and enough people have provided feedback and careful observations of results...that the book goes to the publishing house for the next printing. The cookbook is republished with an updated edition number and new recipes are highlighted. When this happens in Loop, Loop's master branch is updated with the new features coming from dev (aka, \"dev branch is merged into master branch \"). When that happens, master branch gets another \"release\" version. For that moment, dev and master are exactly the same. They stay the same until the Loop developers start working on the next batch of improvements, could be the next hour even or days later, but the process begins again. The developers will start editing the code again and dropping those edits in dev branch for further development. What's going on in the dev branch ? \u00b6 The dev branch , currently v2.3.0, is where the next version of Loop is being developed and tested. If you choose to come into a dev branch build, you need to be aware that dev may update code frequently and unannounced in the traditional sense that most users in Looped group or Instagram would see. Developers are not helped by people being in a dev branch if those users are mistakenly thinking of it as a stable master branch with lots of detailed docs to go with it. People should only use a dev branch build if they EDUCATE themselves on the expectations and how to properly manage dev information and updates. People using dev branch should also have regular access to a computer to be able to rebuild quickly if a new bug/fix is identified. If you choose to use a dev build, you can stay abreast of developments in a number of ways...but they will all require you to do some legwork and keep yourself informed. This is not a situation where you should expect a fancy Loopdocs page updated regularly with current \"dev updates\"...that's just not the way dev branch works. Subscribe to the Zulipchat channels \u00b6 Use Zulipchat forums for Loop. This forum has several \"streams\" of conversations depending on interest. I highly recommend following all the streams so you do not miss conversations. You can select by stream and by topic within a stream to focus on a given conversation. If you are using dev branch , you must be in the #development stream. If you want to know when LoopDocs gets updated, follow the #documentation stream. Code changes are called \"commits\" in GitHub. The #github stream will have an automated post whenever a new commit is made and it will give a brief line description of the commit . You can also go directly to the commit history for each of the branches if you'd like. Loop master branch commit history Loop dev branch commit history If you click on the commit , you can see exactly what changes to the code were made. It's an interesting learning experience. In red are the code that is old, in green is the updated code. The line numbers and file names of the edited code are also there to help. I don't expect many of you would understand exactly what the edits mean, or how the new code might function...but I bring up the topic of commit history so that you can use that to realize just how often dev is updated. Go ahead and look at the number and frequency of commits in that dev branch ...that is why there is no way someone is going to keep a \"loopdocs\" of dev changes. It's just too much a moving target. Watch the Loop Repo and Issues list \u00b6 Subscribe to the Loop repo's Issues list by \"watching\" the Loop repo . You can choose to watch the repo so that you get emails when new Issues are reported. This is a good way to find out if there's other people reporting odd behavior that you are wondering about. If you use dev and wonder about something you are seeing in Loop, you can check Issues list to see if others are noticing the same. If so, you can help by capturing information and reporting it. Not super helpful to just say \"yeah, me too...\" but better if you can attach screenshots, Issue Reports from Loop settings, and a thorough description of the problem you are seeing. Be a part of the solution by thoughtfully providing information to help debug. Keep checking Looped group \u00b6 Keep watching The Looped Facebook Group . Major concerns/issues are brought up there...so no harm in scrolling through and seeing what's going on there. Become familiar with your data sources \u00b6 Another useful thing if you'll be on dev branches undergoing a lot of active change...know how Loop works and where to look for additional information about what you are seeing. For example, if you see an IOB value that looks odd, you should know to look at the insulin deliveries are stored in Health app. Generate an Issue Report \u00b6 Know how to generate an Issue Report when you see a problem so you can provide that if asked. An Issue Report is a log file generated by the Loop app that has a lot of information the developers can parse to figure out what Loop was doing when you were having a problem. Loop v2.2.8 and earlier: Loop Settings -> Issue Report Loop dev: Loop Settings -> Support -> Issue Report Do not confuse this with reporting an issue with Loop. That is done by logging into GitHub and going to the Issue page to report a new issue. You can read about existing issues without logging in, but to report a new one, you must log in to GitHub. Create a Debug Report \u00b6 This 6-minute long, classic Katie DiSimone video shows how to capture debugging logs . If you are testing a new branch , this is a valuable skill to assist developers in identifying problems. In addition to showing you how to generate and save the debug text information, the video explains a method in which you create a gist of the debug information using your GitHub account and file an official Issue on the Loop GitHub repository . This may be required in some cases. But start by chatting directly on zulipchat with the developer. What you are experiencing may already be known. If the developers need a new Issue opened, they will say so on zulipchat. LoopDashboard.org \u00b6 You can always check out the LoopDashboard which summarize all the GitHub activities in Loops 7 different repositories for dev and master branches. Here you can always see the latest \"news\" and the history of Loop. On the first page of loopdashboard you can see all the activities in one list, but you can also go to other pages (click on the < or > at bottom of the page) to see more details about commits, issues and pull requests. There are also stats about who is doing the pull requests and commits. The dashboard is automatically updated every 12 hours. What is expected in the future? \u00b6 The dev branch is where a lot of user interface and setting safety work has been developed with some cross-talk with the open source modifications available from Tidepool Loop . There has been some reorganization of code to make it easier to drop in new pump and CGM modules. These may not be obvious to the user, but are important for moving forward. And, of course, the integration of Omnipod DASH. The RileyLink Compatible devices are no longer required with DASH.","title":"Loop Development"},{"location":"faqs/branch-faqs/#loop-development","text":"The next version of Loop is developed under a separate branch , independent of the released Loop version. Typically, the dev branch is used by the developers to push out changes for experienced users to test. It is not for new loopers. You should only test a development branch if you are willing to be an active participation with the developers to provide feedback and build frequently to obtain the latest feature or bug-fix that is being tested. If you are an experienced looper and willing to help out - this is the way the next release of Loop is improved. Because the Omnipod DASH is actively being testing in the dev branch , there is probably a lot more interest in being a \"tester\" now than if it was just a minor tweak. In addition to the DASH work, however, Loop itself has undergone a major architecture upgrade. There is a formal onboarding process, more safety features and a different menu layout. Updated interface documentation is a work-in-progress located under the Loop 3 tab of LoopDocs. Please read this entire page before using any version of Loop other than the released code.","title":"Loop Development"},{"location":"faqs/branch-faqs/#repositories-and-code","text":"If you're a developer looking for direct links to the code and documentation in Github: Loop LoopDocs For more information on how to contribute code to the project, please review: How to Contribute to Open Source Review the Loop LICENSE Review the Loop CODE_OF_CONDUCT If you want to contribute code improvements, please join Loop Zulipchat and be sure to subscribe to all the channels. Meet the developers and testers who make this app, and learn about what is coming next.","title":"Repositories and Code"},{"location":"faqs/branch-faqs/#what-are-branches","text":"There is a lot of discussion about \"branches\" with Loop but the concept is simple. Basically, they are all slightly different versions of Loop...kind of like different edits of the same book. To really understand what branches are, we should probably explain a little more about Loop's code and how development works. You can watch a 30-minute long, classic Katie DiSimone video explanation about branches created when Loop Version 2.0 was newly released. The information in this video is still generally useful with the last-half focused on automatic-bolus - the automatic-bolus dosing strategy has now been incorporated into Loop master branch . Loop has moved on to using only one stable branch (master), with dev recommended for developer/testers.","title":"What are branches?"},{"location":"faqs/branch-faqs/#loop-github-information","text":"Loop developers own an account in GitHub called LoopKit . Within that account, the developers have several \"repositories\" that support Loop in particular. A repository is like a book...let's think of it like a cookbook for now. Within the LoopKit account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of the info about the app itself; the outward facing things that you interact with. How information is put to you and taken in from you...that's in Loop repository code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. CGMBLEkit for some of the transmitter parts of Loop, RileyLink_ios for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc. When you build Loop, in the background, Loop pulls those other frameworks (7 in total) into the build process using \"Carthage\". Carthage is like a personal shopper. You give it a shopping list (the cartfile in Loop code is that shopping list) and it goes and fetches that for you during the build process. Sometimes your computer has an old shopping list...and that can cause build errors. Hence the \" carthage update\" fix in the Build Errors page...that command updates the shopping list to get the right versions of those frameworks. Anyways...so now you know about the general structure of Loop and LoopKit in Github. Now we can discuss Loop itself a little deeper. So let's imagine Loop as a cookbook. The developers are the authors/chefs of the recipes (code) in the cookbook. The authors spend countless hours testing new recipes, taste testing, documenting improvements. They send the drafts to the editor, who makes suggestions and eventually the cookbook is finalized. There are no grammar issues, no typos, the photos are beautiful and the recipes are yummy. They publish the book and you see a gorgeous final product on the shelves. That is called a \"release\" and it is the master branch . This book has been well-tested and is super stable. Every time you cook with those recipes, you know exactly what you're getting and lots of people have had a chance before you to make sure that it all tastes good. Master branch is stable and tested. But then...the chefs/developers go on a trip. They are inspired by new cuisine and want to add new recipes to the old cookbook. (Things like omnipod support and overrides are new \"recipes\" that were developed since the last master release, for example.) But, the process for developing a recipe is arduous. Lots of trial and error involved. Lots of tweaking ingredients (code). The editors try out the new recipes and offer feedback (similar to the Issues List in GitHub ). While the recipes are being developed, they have a version of the old cookbook that gets marked up...edited in pencil a lot. Scribbles and notes in the side. Revisions happen frequently, because that's what testing new recipes is all about. These marked-up versions of the cookbook are called \"dev\" branch . Short for \"development\" branch . Like the name sounds...this is where new developments are happening, new recipes and tweaks. After much testing and tweaking, eventually the recipes get the flavors right (bugs in code are squashed) and enough people have provided feedback and careful observations of results...that the book goes to the publishing house for the next printing. The cookbook is republished with an updated edition number and new recipes are highlighted. When this happens in Loop, Loop's master branch is updated with the new features coming from dev (aka, \"dev branch is merged into master branch \"). When that happens, master branch gets another \"release\" version. For that moment, dev and master are exactly the same. They stay the same until the Loop developers start working on the next batch of improvements, could be the next hour even or days later, but the process begins again. The developers will start editing the code again and dropping those edits in dev branch for further development.","title":"Loop GitHub Information"},{"location":"faqs/branch-faqs/#whats-going-on-in-the-dev-branch","text":"The dev branch , currently v2.3.0, is where the next version of Loop is being developed and tested. If you choose to come into a dev branch build, you need to be aware that dev may update code frequently and unannounced in the traditional sense that most users in Looped group or Instagram would see. Developers are not helped by people being in a dev branch if those users are mistakenly thinking of it as a stable master branch with lots of detailed docs to go with it. People should only use a dev branch build if they EDUCATE themselves on the expectations and how to properly manage dev information and updates. People using dev branch should also have regular access to a computer to be able to rebuild quickly if a new bug/fix is identified. If you choose to use a dev build, you can stay abreast of developments in a number of ways...but they will all require you to do some legwork and keep yourself informed. This is not a situation where you should expect a fancy Loopdocs page updated regularly with current \"dev updates\"...that's just not the way dev branch works.","title":"What's going on in the dev branch?"},{"location":"faqs/branch-faqs/#subscribe-to-the-zulipchat-channels","text":"Use Zulipchat forums for Loop. This forum has several \"streams\" of conversations depending on interest. I highly recommend following all the streams so you do not miss conversations. You can select by stream and by topic within a stream to focus on a given conversation. If you are using dev branch , you must be in the #development stream. If you want to know when LoopDocs gets updated, follow the #documentation stream. Code changes are called \"commits\" in GitHub. The #github stream will have an automated post whenever a new commit is made and it will give a brief line description of the commit . You can also go directly to the commit history for each of the branches if you'd like. Loop master branch commit history Loop dev branch commit history If you click on the commit , you can see exactly what changes to the code were made. It's an interesting learning experience. In red are the code that is old, in green is the updated code. The line numbers and file names of the edited code are also there to help. I don't expect many of you would understand exactly what the edits mean, or how the new code might function...but I bring up the topic of commit history so that you can use that to realize just how often dev is updated. Go ahead and look at the number and frequency of commits in that dev branch ...that is why there is no way someone is going to keep a \"loopdocs\" of dev changes. It's just too much a moving target.","title":"Subscribe to the Zulipchat channels"},{"location":"faqs/branch-faqs/#watch-the-loop-repo-and-issues-list","text":"Subscribe to the Loop repo's Issues list by \"watching\" the Loop repo . You can choose to watch the repo so that you get emails when new Issues are reported. This is a good way to find out if there's other people reporting odd behavior that you are wondering about. If you use dev and wonder about something you are seeing in Loop, you can check Issues list to see if others are noticing the same. If so, you can help by capturing information and reporting it. Not super helpful to just say \"yeah, me too...\" but better if you can attach screenshots, Issue Reports from Loop settings, and a thorough description of the problem you are seeing. Be a part of the solution by thoughtfully providing information to help debug.","title":"Watch the Loop Repo and Issues list"},{"location":"faqs/branch-faqs/#keep-checking-looped-group","text":"Keep watching The Looped Facebook Group . Major concerns/issues are brought up there...so no harm in scrolling through and seeing what's going on there.","title":"Keep checking Looped group"},{"location":"faqs/branch-faqs/#become-familiar-with-your-data-sources","text":"Another useful thing if you'll be on dev branches undergoing a lot of active change...know how Loop works and where to look for additional information about what you are seeing. For example, if you see an IOB value that looks odd, you should know to look at the insulin deliveries are stored in Health app.","title":"Become familiar with your data sources"},{"location":"faqs/branch-faqs/#generate-an-issue-report","text":"Know how to generate an Issue Report when you see a problem so you can provide that if asked. An Issue Report is a log file generated by the Loop app that has a lot of information the developers can parse to figure out what Loop was doing when you were having a problem. Loop v2.2.8 and earlier: Loop Settings -> Issue Report Loop dev: Loop Settings -> Support -> Issue Report Do not confuse this with reporting an issue with Loop. That is done by logging into GitHub and going to the Issue page to report a new issue. You can read about existing issues without logging in, but to report a new one, you must log in to GitHub.","title":"Generate an Issue Report"},{"location":"faqs/branch-faqs/#create-a-debug-report","text":"This 6-minute long, classic Katie DiSimone video shows how to capture debugging logs . If you are testing a new branch , this is a valuable skill to assist developers in identifying problems. In addition to showing you how to generate and save the debug text information, the video explains a method in which you create a gist of the debug information using your GitHub account and file an official Issue on the Loop GitHub repository . This may be required in some cases. But start by chatting directly on zulipchat with the developer. What you are experiencing may already be known. If the developers need a new Issue opened, they will say so on zulipchat.","title":"Create a Debug Report"},{"location":"faqs/branch-faqs/#loopdashboardorg","text":"You can always check out the LoopDashboard which summarize all the GitHub activities in Loops 7 different repositories for dev and master branches. Here you can always see the latest \"news\" and the history of Loop. On the first page of loopdashboard you can see all the activities in one list, but you can also go to other pages (click on the < or > at bottom of the page) to see more details about commits, issues and pull requests. There are also stats about who is doing the pull requests and commits. The dashboard is automatically updated every 12 hours.","title":"LoopDashboard.org"},{"location":"faqs/branch-faqs/#what-is-expected-in-the-future","text":"The dev branch is where a lot of user interface and setting safety work has been developed with some cross-talk with the open source modifications available from Tidepool Loop . There has been some reorganization of code to make it easier to drop in new pump and CGM modules. These may not be obvious to the user, but are important for moving forward. And, of course, the integration of Omnipod DASH. The RileyLink Compatible devices are no longer required with DASH.","title":"What is expected in the future?"},{"location":"faqs/cgm-faqs/","text":"CGM FAQs \u00b6 What CGMs does Loop work with? \u00b6 Loop 2.2.x works Dexcom G4 with share, G5, G6, Share and the Medtronic CGM systems compatible with Looping pumps. Loop dev works with G5, G6, Share, Nightscout and the Medtronic CGM systems compatible with Looping pumps. A customization can be applied to work with some Libre sensors. Read the details here . Do I need wait for a new sensor session to start Loop? \u00b6 No, you can start Looping mid-sensor session. There's no need to do anything special with regards to your CGM session when starting or ending Loop use. What do I do when sensor is in warm-up? \u00b6 Loop will stop automatically adjusting insulin when the most recent glucose value is older than 15 minutes. This is indicated by seeing three dashes in place of the glucose reading on the HUD . With Loop 2.2.x or Loop dev, enter a fingerstick glucose value in Apple Health to enable Loop to provide updated projections and loop briefly With Loop dev, a HUD status row message of No Recent Glucose is displayed, making it easier to add the fingerstick value directly in Loop, which also saves it in Apple Health With no recent glucose readings, your pump resturns to the scheduled basal delivery (within 30 min or less). Loop continues to accept manual bolus commands. With Loop dev only, Manual Temp Basal can also be commanded. What do I do when I switch transmitters? \u00b6 When you change transmitters, you will need to update the transmitter ID in your Loop settings. The instructions for Dexcom are provided below: In Loop, select the Delete CGM button at the very bottom of the CGM info page You cannot just edit the line with your old transmitter ID Follow the Dexcom instructions for pairing the new transmitter In Loop, add CGM and select the Dexcom system again Enter the new transmitter ID If you don't update your transmitter ID when you change active transmitters, and you included your Dexcom share credentials, then Loop uses your Dexcom Share server to get your CGM data and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the BG reading in Loop and should tip you off that maybe you forgot to update your transmitter ID. It's best not to enter Share Credentials. This makes it really obvious that you need to update the CGM settings in Loop at transmitter change time. Can I use Libre sensors with a reader like Miao Miao? \u00b6 If you want to use a Libre sensor you will need to modify Loop to accomplish that use. Loop code does not natively support that sensor, nor readers. With Loop dev, a customization can be used to support some Libre sensor CGM . Can I use Eversense? \u00b6 Eversense does not write to Apple Health. The BT communications protocol been not been reverse engineered as was done with Dexcom. There is a method to upload Eversense to Nightscout using an Android phone. With Loop dev, you can use Nightscout as a CGM to Loop with Eversense, but that requires internet access. Can Loop read CGM data from Nightscout? \u00b6 Some versions of Loop can read CGM data from Nightscout. FreeAPS fork of Loop 2.2.x Loop dev Loop 2.2.x does not read CGM data from Nightscout. What other CGM apps can be used to Loop? \u00b6 Please read the docs for xDrip4iOS and Glucose Direct . You must build these apps yourself to Loop; you cannot use the TestFlight pre-built versions. These can be used with the FreeAPS fork of Loop 2.2.x and, after applying a code customization, with Loop dev.","title":"CGM FAQs"},{"location":"faqs/cgm-faqs/#cgm-faqs","text":"","title":"CGM FAQs"},{"location":"faqs/cgm-faqs/#what-cgms-does-loop-work-with","text":"Loop 2.2.x works Dexcom G4 with share, G5, G6, Share and the Medtronic CGM systems compatible with Looping pumps. Loop dev works with G5, G6, Share, Nightscout and the Medtronic CGM systems compatible with Looping pumps. A customization can be applied to work with some Libre sensors. Read the details here .","title":"What CGMs does Loop work with?"},{"location":"faqs/cgm-faqs/#do-i-need-wait-for-a-new-sensor-session-to-start-loop","text":"No, you can start Looping mid-sensor session. There's no need to do anything special with regards to your CGM session when starting or ending Loop use.","title":"Do I need wait for a new sensor session to start Loop?"},{"location":"faqs/cgm-faqs/#what-do-i-do-when-sensor-is-in-warm-up","text":"Loop will stop automatically adjusting insulin when the most recent glucose value is older than 15 minutes. This is indicated by seeing three dashes in place of the glucose reading on the HUD . With Loop 2.2.x or Loop dev, enter a fingerstick glucose value in Apple Health to enable Loop to provide updated projections and loop briefly With Loop dev, a HUD status row message of No Recent Glucose is displayed, making it easier to add the fingerstick value directly in Loop, which also saves it in Apple Health With no recent glucose readings, your pump resturns to the scheduled basal delivery (within 30 min or less). Loop continues to accept manual bolus commands. With Loop dev only, Manual Temp Basal can also be commanded.","title":"What do I do when sensor is in warm-up?"},{"location":"faqs/cgm-faqs/#what-do-i-do-when-i-switch-transmitters","text":"When you change transmitters, you will need to update the transmitter ID in your Loop settings. The instructions for Dexcom are provided below: In Loop, select the Delete CGM button at the very bottom of the CGM info page You cannot just edit the line with your old transmitter ID Follow the Dexcom instructions for pairing the new transmitter In Loop, add CGM and select the Dexcom system again Enter the new transmitter ID If you don't update your transmitter ID when you change active transmitters, and you included your Dexcom share credentials, then Loop uses your Dexcom Share server to get your CGM data and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the BG reading in Loop and should tip you off that maybe you forgot to update your transmitter ID. It's best not to enter Share Credentials. This makes it really obvious that you need to update the CGM settings in Loop at transmitter change time.","title":"What do I do when I switch transmitters?"},{"location":"faqs/cgm-faqs/#can-i-use-libre-sensors-with-a-reader-like-miao-miao","text":"If you want to use a Libre sensor you will need to modify Loop to accomplish that use. Loop code does not natively support that sensor, nor readers. With Loop dev, a customization can be used to support some Libre sensor CGM .","title":"Can I use Libre sensors with a reader like Miao Miao?"},{"location":"faqs/cgm-faqs/#can-i-use-eversense","text":"Eversense does not write to Apple Health. The BT communications protocol been not been reverse engineered as was done with Dexcom. There is a method to upload Eversense to Nightscout using an Android phone. With Loop dev, you can use Nightscout as a CGM to Loop with Eversense, but that requires internet access.","title":"Can I use Eversense?"},{"location":"faqs/cgm-faqs/#can-loop-read-cgm-data-from-nightscout","text":"Some versions of Loop can read CGM data from Nightscout. FreeAPS fork of Loop 2.2.x Loop dev Loop 2.2.x does not read CGM data from Nightscout.","title":"Can Loop read CGM data from Nightscout?"},{"location":"faqs/cgm-faqs/#what-other-cgm-apps-can-be-used-to-loop","text":"Please read the docs for xDrip4iOS and Glucose Direct . You must build these apps yourself to Loop; you cannot use the TestFlight pre-built versions. These can be used with the FreeAPS fork of Loop 2.2.x and, after applying a code customization, with Loop dev.","title":"What other CGM apps can be used to Loop?"},{"location":"faqs/glossary/","text":"Glossary \u00b6 Each item in the glossary is also a Tooltip . A Tooltip is visible as a dashed underline word or phrase. If you hover your mouse or tap on a mobile device, the phrase associated with each word is displayed. Activated : for Omnipod : time at which insulin was injected into pod and 2 beeps were heard Anchor Links : any header on a LoopDocs page can be used as a link, tap on the paragraph symbol at the end of the header to view the link in the URL API_SECRET : password (min 12 characters) needed to access Nightscout Site Automatic Bolus : provide a fraction of the recommended insulin automatically with each updated CGM reading (default 40%) BAGE : pump battery age on Nightscout site Big Sur : older version for operating system for Mac, macOS 11.x BLE : Bluetooth low energy, used for communication by phones, CGM and some pumps Build Select Script : by running a command in your terminal, this menu-driven tool assists in building Loop branch : version of code within a single repository or workspace repository CAGE : cannula (or pump site) age on Nightscout site carthage : a program that used to be required to build Loop - no longer needed Catalina : older version for operating system for Mac, macOS 10.x Certificate : Apple certificate is used to sign your iOS or Mac apps - tied to but different from your permanent Developer ID CGM : continuous glucose monitor, wearable medical device that measures and reports glucose in interstitial fluid Closed Loop : Loop will make automated adjustments of insulin delivery using predictions based off user entries, settings, IOB and COB clone : create a copy of a repository on your computer including revision history and ability to update using git commands COB : Carbs on Board, affects automated insulin delivery: the g of carbohydrates that Loop expects to be absorbed and uses for glucose prediction commit : a formal change to files in a repository ; each commit has an alphanumeric identifier ( SHA-1 ) Config Vars : configuration parameters for a Nightscout Site Correction Range : Loop recommends changes to basal and / or bolus to bring glucose predictions into this range CR : Carb Ratio; how many grams of carbs are covered by one unit of rapid-acting insulin Delivery Limits : max bolus and max basal rates allowed by your therapy settings DIA : Duration of Insulin Action, the full time insulin is active including a long, low-level tail Dosing Strategy : chosen method for increased insulin dosing: (1) High Temp Basal or (2) Automatic Bolus with scheduled basal dynos : used to reboot a Nightscout Site EmaLink : radio-frequency device Loop uses to control Eros pods and older Medtronic pumps Event History : record of pump events (bolus or temp basal) reported and used by Loop Expiration Date : your Loop app has a finite life, the app warns you starting 3 weeks before the expiration date Finder : graphical folder and file display on Mac fork : a copy of Loop in a different github repository that is then customized to add other features GIF : Graphics Interchange Format ( GIF ) can be used for small animations and low-resolution video clips git : a tool for version control Glucose Chart : Display of measured and predicted glucose values Glucose Safety Limit : Loop will not suggest insulin delivery when glucose prediction (in next 3 hours) goes below this limit; in Loop 2 this was called Suspend Threshold Guardrails : limits in the code for user selected settings, recommended and absolute limits are provided Hamburger Menu : three parallel lines that, when tapped, open a new menu HUD : Heads-Up Display at top of Loop main screen, phone in portrait mode ICE : Insulin Counteraction Effect - Loop models the expected glucose change based on carbs entered, absorption time and your settings; and adjusts based on measured glucose IOB : Insulin on Board, affects automated insulin delivery: the current active insulin (above or below the basal rate) that Loop calculates and uses for glucose prediction iOS : operating system used by Apple Mobile devices (iPhone, iPod) ISF : Insulin Sensitivity Factor; how many points your blood sugar will drop for each unit of insulin; sometimes called correction factor Issue : On github - a formal method to report a problem, either code behavior or documentation macOS : operating system for Mac computer Lock your Phone : click the button on the side of the phone to lock it - prevent accidental touch, i.e., accidental Loop command Loop Cycle : typically 5 minutes: new CGM reading, prediction update, pump update and, if in Closed Loop , dosing update if needed MTB : Manual Temp Basal: user initiated temporary basal, Omnipod Common feature MDT : common abbreviation for Medtronic pumps modal : message or alert appearing in front of app that must be acknowledged to return to app Monterey : operating system for Mac, macOS 12.x Omnipod : Insulet tubeless insulin pump; Loop supports Eros (with RileyLink ) and DASH Open Loop : Loop will not make automated adjustments of insulin delivery but all prediction and recommendation features are available OrangeLink : radio-frequency device Loop uses to control Eros pods and older Medtronic pumps OTP : one-time password, this is used to enable caregivers to securely execute remote commands to a Looper's phone Override : a modification to Loop settings that can change the correction range, the sensitivity (basal, ISF and CR ) or both Package Dependencies : packages that must be downloaded by Xcode (once) to build the app after downloading the LoopWorkspace to your computer pill : on Nightscout, small boxes with information, tap for extra details PR : Pull Request - a formal method to request changes to a repository Pre-Meal Range : modify the correction range for up to one hour by tapping on an icon in the toolbar Provisioning Profile : associates your app with your Developer ID and limits app lifetime to 1 year (paid) or 1 week (free) Pull Request : formal method to request changes to a repository Quit the Loop App : quit out of the app - different from closing the app - typically you swipe up in the app switcher repository : contains project files and each file's revision history RileyLink : radio-frequency device Loop uses to control Eros pods and older Medtronic pumps Rosetta : allows apps built for older Macs (Intel chips) to run on newer Macs (M1 and M2 chips) SAGE : sensor age on Nightscout site SHA-1 : Secure Hash Algorithm 1; used to generate an alphanumeric code for commits in git (github) Sign Targets : associate a Developer ID with an app; must sign all targets for a given app submodules : for Loop, submodules are repositories defined in the Workspace repository that are required to build the app Table of Contents : (TOC) is the list of level 2 and 3 headers on a given page; the title at the top of the page is a level 1 header Temp Basal Only : provide the recommended insulin automatically using an increase in temp basal over half an hour (limited by max temp basal) Terminal : interface for entering commands to the computer Therapy Settings : Basal Rates, ISF , CR , correction and safety ranges and delivery limits Tokens : on Nightscout, configure access permissions using tokens Tooltip : brief definitions provided for important terms and abbreviations on the website URL : website address (Uniform Resource Locator) watchOS : Apple watch operating system; must be compatible with phone iOS Workspace : a grouping of several repositories into a complete package Xcode : program used to build an app","title":"Glossary"},{"location":"faqs/glossary/#glossary","text":"Each item in the glossary is also a Tooltip . A Tooltip is visible as a dashed underline word or phrase. If you hover your mouse or tap on a mobile device, the phrase associated with each word is displayed. Activated : for Omnipod : time at which insulin was injected into pod and 2 beeps were heard Anchor Links : any header on a LoopDocs page can be used as a link, tap on the paragraph symbol at the end of the header to view the link in the URL API_SECRET : password (min 12 characters) needed to access Nightscout Site Automatic Bolus : provide a fraction of the recommended insulin automatically with each updated CGM reading (default 40%) BAGE : pump battery age on Nightscout site Big Sur : older version for operating system for Mac, macOS 11.x BLE : Bluetooth low energy, used for communication by phones, CGM and some pumps Build Select Script : by running a command in your terminal, this menu-driven tool assists in building Loop branch : version of code within a single repository or workspace repository CAGE : cannula (or pump site) age on Nightscout site carthage : a program that used to be required to build Loop - no longer needed Catalina : older version for operating system for Mac, macOS 10.x Certificate : Apple certificate is used to sign your iOS or Mac apps - tied to but different from your permanent Developer ID CGM : continuous glucose monitor, wearable medical device that measures and reports glucose in interstitial fluid Closed Loop : Loop will make automated adjustments of insulin delivery using predictions based off user entries, settings, IOB and COB clone : create a copy of a repository on your computer including revision history and ability to update using git commands COB : Carbs on Board, affects automated insulin delivery: the g of carbohydrates that Loop expects to be absorbed and uses for glucose prediction commit : a formal change to files in a repository ; each commit has an alphanumeric identifier ( SHA-1 ) Config Vars : configuration parameters for a Nightscout Site Correction Range : Loop recommends changes to basal and / or bolus to bring glucose predictions into this range CR : Carb Ratio; how many grams of carbs are covered by one unit of rapid-acting insulin Delivery Limits : max bolus and max basal rates allowed by your therapy settings DIA : Duration of Insulin Action, the full time insulin is active including a long, low-level tail Dosing Strategy : chosen method for increased insulin dosing: (1) High Temp Basal or (2) Automatic Bolus with scheduled basal dynos : used to reboot a Nightscout Site EmaLink : radio-frequency device Loop uses to control Eros pods and older Medtronic pumps Event History : record of pump events (bolus or temp basal) reported and used by Loop Expiration Date : your Loop app has a finite life, the app warns you starting 3 weeks before the expiration date Finder : graphical folder and file display on Mac fork : a copy of Loop in a different github repository that is then customized to add other features GIF : Graphics Interchange Format ( GIF ) can be used for small animations and low-resolution video clips git : a tool for version control Glucose Chart : Display of measured and predicted glucose values Glucose Safety Limit : Loop will not suggest insulin delivery when glucose prediction (in next 3 hours) goes below this limit; in Loop 2 this was called Suspend Threshold Guardrails : limits in the code for user selected settings, recommended and absolute limits are provided Hamburger Menu : three parallel lines that, when tapped, open a new menu HUD : Heads-Up Display at top of Loop main screen, phone in portrait mode ICE : Insulin Counteraction Effect - Loop models the expected glucose change based on carbs entered, absorption time and your settings; and adjusts based on measured glucose IOB : Insulin on Board, affects automated insulin delivery: the current active insulin (above or below the basal rate) that Loop calculates and uses for glucose prediction iOS : operating system used by Apple Mobile devices (iPhone, iPod) ISF : Insulin Sensitivity Factor; how many points your blood sugar will drop for each unit of insulin; sometimes called correction factor Issue : On github - a formal method to report a problem, either code behavior or documentation macOS : operating system for Mac computer Lock your Phone : click the button on the side of the phone to lock it - prevent accidental touch, i.e., accidental Loop command Loop Cycle : typically 5 minutes: new CGM reading, prediction update, pump update and, if in Closed Loop , dosing update if needed MTB : Manual Temp Basal: user initiated temporary basal, Omnipod Common feature MDT : common abbreviation for Medtronic pumps modal : message or alert appearing in front of app that must be acknowledged to return to app Monterey : operating system for Mac, macOS 12.x Omnipod : Insulet tubeless insulin pump; Loop supports Eros (with RileyLink ) and DASH Open Loop : Loop will not make automated adjustments of insulin delivery but all prediction and recommendation features are available OrangeLink : radio-frequency device Loop uses to control Eros pods and older Medtronic pumps OTP : one-time password, this is used to enable caregivers to securely execute remote commands to a Looper's phone Override : a modification to Loop settings that can change the correction range, the sensitivity (basal, ISF and CR ) or both Package Dependencies : packages that must be downloaded by Xcode (once) to build the app after downloading the LoopWorkspace to your computer pill : on Nightscout, small boxes with information, tap for extra details PR : Pull Request - a formal method to request changes to a repository Pre-Meal Range : modify the correction range for up to one hour by tapping on an icon in the toolbar Provisioning Profile : associates your app with your Developer ID and limits app lifetime to 1 year (paid) or 1 week (free) Pull Request : formal method to request changes to a repository Quit the Loop App : quit out of the app - different from closing the app - typically you swipe up in the app switcher repository : contains project files and each file's revision history RileyLink : radio-frequency device Loop uses to control Eros pods and older Medtronic pumps Rosetta : allows apps built for older Macs (Intel chips) to run on newer Macs (M1 and M2 chips) SAGE : sensor age on Nightscout site SHA-1 : Secure Hash Algorithm 1; used to generate an alphanumeric code for commits in git (github) Sign Targets : associate a Developer ID with an app; must sign all targets for a given app submodules : for Loop, submodules are repositories defined in the Workspace repository that are required to build the app Table of Contents : (TOC) is the list of level 2 and 3 headers on a given page; the title at the top of the page is a level 1 header Temp Basal Only : provide the recommended insulin automatically using an increase in temp basal over half an hour (limited by max temp basal) Terminal : interface for entering commands to the computer Therapy Settings : Basal Rates, ISF , CR , correction and safety ranges and delivery limits Tokens : on Nightscout, configure access permissions using tokens Tooltip : brief definitions provided for important terms and abbreviations on the website URL : website address (Uniform Resource Locator) watchOS : Apple watch operating system; must be compatible with phone iOS Workspace : a grouping of several repositories into a complete package Xcode : program used to build an app","title":"Glossary"},{"location":"faqs/omnipod-faqs/","text":"Omnipod FAQs \u00b6 Is Omnipod supported on Loop? \u00b6 Yes. Which pods will work with Loop? \u00b6 Omnipod Eros pods are supported with DIY Loop Omnipod DASH pods are supported in the dev branch of DIY Loop Omnipod 5 pods are not supported with DIY Loop What about Tidepool Loop? \u00b6 Tidepool is working to bring DIY Loop through the FDA regulatory process and Insulet has been announced as the first pump partner for that project . Tidepool Loop is being developed to work with a future version of the Omnipod system, no RileyLink required. Tidepool Loop was first submitted to the FDA in December 2020 . If you would like to stay informed about Tidepool Loop progress, you can fill out an interest form here . Do I still need a PDM with Omnipod Loop? \u00b6 No, pods are monogamous little creatures. They will pair with only one device at a time for safety reasons...so a pod is either paired with a PDM or your Loop app on your iPhone. In other words, your PDM can stay in the diabetes closet while you are Looping. You cannot use the PDM for a pod that has been activated with Loop. That doesn't mean you should get rid of your PDM. Instead, keep it for backup situations if you lose your phone. See below for what to do if you lose your phone or RileyLink . Can I cancel a bolus? \u00b6 Yes, you can cancel a bolus in progress. In fact, because it is very easy to cancel, make sure your phone is locked prior to being put away to avoid inadvertently cancelling a bolus. (This behavior is very similar to the Insulet PDM - which also needs to be locked once a bolus has started.) As soon as a bolus is initiated, look at your phone in portrait orientation. You will see a bolus message indicating the progress of the bolus. This message is highlighted with a red rectangle in the graphic below. If you tap on this part of the display, the bolus is immediately cancelled. (This graphic of the Loop display is from Loop-dev. If you are on Loop v2.2.x, the bolus in progress message looks and behaves the same.) The displayed amount Bolused is based on the time since the bolus was started Loop will present that graphic for the entire time the bolus is in progress with the delivery amount updated based on time Once the bolus completes, Loop updates the actual delivery amount based on communication with the pod (taking into account any interruption of that bolus from the user or a pod error) Can I cancel a temp basal? \u00b6 Cancel Temp Basal with Loop v2.2.x \u00b6 If you are running Loop v2.2.x, the method for canceling a temp basal is to suspend the pump and then resume delivery . Be sure to follow the suspend with the resume command. Otherwise, all insulin delivery is stopped and remains stopped until the user either clicks on the \"Tap to Resume\" command from the main screen or the \"resume delivery\" command accessed in the pump settings display. The resume insulin delivery command returns insulin delivery to your scheduled basal rate. If a bolus was interrupted, the bolus will not resume. As long as you are in closed loop mode, Loop will resume automatic insulin delivery adjustments within 5 minutes. Cancel Temp Basal with Loop-dev \u00b6 With Loop-dev, disabling the setting for Closed Loop also changes the basal rate on the pump to the scheduled basal rate, which effectively cancels the temp basal. Bolus in progress If a bolus is in progress when switching to Open Loop , any active Temp Basal continues until it would expire naturally, unless the user takes further action. Can I prime or set my own temp basal on Loop? \u00b6 Loop 2.2.x does not allow you to pick your own temp basal rate or prime insulin (a Medtronic pump trick for adding extra insulin that Loop does not add to IOB ). If you find yourself in a situation where you would like to specify an exact temp basal rate of your own, you would need to (1) change your scheduled basal rate for the time(s) that you'd like that basal rate, (2) cancel any currently running temp basal that Loop has running) and (3) disable Closed Loop in Loop Settings so that you are running in \"open loop\" mode for the duration of the time you want to use that specific basal rate. A manual temp basal feature will be available when the development branch is released as Loop 3. What if I lose my phone or RileyLink ? \u00b6 For pod users, your pod will finish any currently running temporary basal rate and then revert back to your scheduled basal rate. Without a phone or RileyLink , however, you will not be able to affect any pod use; no basal change, suspend, cancel, or bolus. To do anything other than let basals continue, you will need to take action depending on the situation. Lost RileyLink only: You can replace your missing RileyLink with one from your backup supplies. No problem to switch out to a different Rileylink mid-pod session . If you don't have a backup RileyLink to use, then you will need to remove the pod and put on a new pod paired with your PDM until you can get a new RileyLink . In the interim, you are still getting basal from the pod. If you are taking bolus insulin via injection, just add it to Apple Health under insulin. Loop will read it and keep making predictions for you. Once you inject, then add the carbs that go with that injection into Loop. Lost iPhone only: You will need to remove the pod and put on a new pod paired with your PDM until you can get a new phone and Loop app built onto it. In the interim, the pod will continue to deliver your scheduled basal until the pod reaches 80 hours. See Updating FAQs for New Phone for more information. Lost both RileyLink and phone: You're having a really bad day. You'll need a hug and to follow the same directions as if you lost the phone as shown in the bullet above. Is there an increase in pod failures on Loop? \u00b6 There is more communication between the pod and the controller (your Loop phone) than is typical with the PDM (Insulet provided controller), which increases the load on the pod battery. Most people have no increase in pod failures, but there are steps to take to limit \"extra pod battery use\". Every time the Loop app requests an update of the pod state or modifies the temp basal rate, messages are exchanged with the pod. Set your correction range to be 10 to 20 mg/dL (0.5 to 1.1 mmol/L) instead of a single number The temp basal rate is less likely to be modified for a given CGM update Keep your Loop app in the background or your phone locked when possible Loop 2.2.x updates the pod state only when CGM updates Loop dev updates the pod state every 30 sec when the app is in the foreground Use an alternate display method such as Nightscout or Loop Follow instead of keeping the Loopers phone unlocked with Loop app open What do I do if a pod fails to pair? \u00b6 If you get a pod that is failing to pair, please see this page for steps on how to fix the problem. Follow these steps before filling and trying another pod. If the pod is not screaming, you can probably recover it. What do you do to stop a screaming pod? \u00b6 Screaming pods indicate the pod is out of insulin or out of time (80 hours) or there has been a critical pod fault. In all these cases, there is no more delivery of insulin. The first step is to use your phone to Deactivate the pod. You may need to go to the pod settings and tap on the Replace Pod row or the app may take you to the screen with a Deactivate button directly. This only works if the app is able to communicate with the pod. Sometimes this is not possible. After you attempt to deactivate two times, the app will \"discard\" the pod as active if communication fails and enable you to pair a new pod. But you still need to make that noise go away. If you are not successful at deactivating a pod and you've tried everything for resetting the RileyLink or resetting Bluetooth on your phone, make sure the old pod is removed from the area before trying to connect a new pod. (Placing it in a microwave temporarily prevents the phone for detecting that pod.) The paperclip trick (next paragraph) only breaks the sound connection, the pod electronics is still active. Once you have removed the screaming pod, it can be silenced using a paperclip. Simply put the paperclip in the small hole that is on the bottom (the side opposite where the cannula is) of the pod as shown. Push the paperclip in until you hear a little click, that click is breaking the circuit that connects the speaker to the electronics.","title":"Omnipod FAQs"},{"location":"faqs/omnipod-faqs/#omnipod-faqs","text":"","title":"Omnipod FAQs"},{"location":"faqs/omnipod-faqs/#is-omnipod-supported-on-loop","text":"Yes.","title":"Is Omnipod supported on Loop?"},{"location":"faqs/omnipod-faqs/#which-pods-will-work-with-loop","text":"Omnipod Eros pods are supported with DIY Loop Omnipod DASH pods are supported in the dev branch of DIY Loop Omnipod 5 pods are not supported with DIY Loop","title":"Which pods will work with Loop?"},{"location":"faqs/omnipod-faqs/#what-about-tidepool-loop","text":"Tidepool is working to bring DIY Loop through the FDA regulatory process and Insulet has been announced as the first pump partner for that project . Tidepool Loop is being developed to work with a future version of the Omnipod system, no RileyLink required. Tidepool Loop was first submitted to the FDA in December 2020 . If you would like to stay informed about Tidepool Loop progress, you can fill out an interest form here .","title":"What about Tidepool Loop?"},{"location":"faqs/omnipod-faqs/#do-i-still-need-a-pdm-with-omnipod-loop","text":"No, pods are monogamous little creatures. They will pair with only one device at a time for safety reasons...so a pod is either paired with a PDM or your Loop app on your iPhone. In other words, your PDM can stay in the diabetes closet while you are Looping. You cannot use the PDM for a pod that has been activated with Loop. That doesn't mean you should get rid of your PDM. Instead, keep it for backup situations if you lose your phone. See below for what to do if you lose your phone or RileyLink .","title":"Do I still need a PDM with Omnipod Loop?"},{"location":"faqs/omnipod-faqs/#can-i-cancel-a-bolus","text":"Yes, you can cancel a bolus in progress. In fact, because it is very easy to cancel, make sure your phone is locked prior to being put away to avoid inadvertently cancelling a bolus. (This behavior is very similar to the Insulet PDM - which also needs to be locked once a bolus has started.) As soon as a bolus is initiated, look at your phone in portrait orientation. You will see a bolus message indicating the progress of the bolus. This message is highlighted with a red rectangle in the graphic below. If you tap on this part of the display, the bolus is immediately cancelled. (This graphic of the Loop display is from Loop-dev. If you are on Loop v2.2.x, the bolus in progress message looks and behaves the same.) The displayed amount Bolused is based on the time since the bolus was started Loop will present that graphic for the entire time the bolus is in progress with the delivery amount updated based on time Once the bolus completes, Loop updates the actual delivery amount based on communication with the pod (taking into account any interruption of that bolus from the user or a pod error)","title":"Can I cancel a bolus?"},{"location":"faqs/omnipod-faqs/#can-i-cancel-a-temp-basal","text":"","title":"Can I cancel a temp basal?"},{"location":"faqs/omnipod-faqs/#cancel-temp-basal-with-loop-v22x","text":"If you are running Loop v2.2.x, the method for canceling a temp basal is to suspend the pump and then resume delivery . Be sure to follow the suspend with the resume command. Otherwise, all insulin delivery is stopped and remains stopped until the user either clicks on the \"Tap to Resume\" command from the main screen or the \"resume delivery\" command accessed in the pump settings display. The resume insulin delivery command returns insulin delivery to your scheduled basal rate. If a bolus was interrupted, the bolus will not resume. As long as you are in closed loop mode, Loop will resume automatic insulin delivery adjustments within 5 minutes.","title":"Cancel Temp Basal with Loop v2.2.x"},{"location":"faqs/omnipod-faqs/#cancel-temp-basal-with-loop-dev","text":"With Loop-dev, disabling the setting for Closed Loop also changes the basal rate on the pump to the scheduled basal rate, which effectively cancels the temp basal. Bolus in progress If a bolus is in progress when switching to Open Loop , any active Temp Basal continues until it would expire naturally, unless the user takes further action.","title":"Cancel Temp Basal with Loop-dev"},{"location":"faqs/omnipod-faqs/#can-i-prime-or-set-my-own-temp-basal-on-loop","text":"Loop 2.2.x does not allow you to pick your own temp basal rate or prime insulin (a Medtronic pump trick for adding extra insulin that Loop does not add to IOB ). If you find yourself in a situation where you would like to specify an exact temp basal rate of your own, you would need to (1) change your scheduled basal rate for the time(s) that you'd like that basal rate, (2) cancel any currently running temp basal that Loop has running) and (3) disable Closed Loop in Loop Settings so that you are running in \"open loop\" mode for the duration of the time you want to use that specific basal rate. A manual temp basal feature will be available when the development branch is released as Loop 3.","title":"Can I prime or set my own temp basal on Loop?"},{"location":"faqs/omnipod-faqs/#what-if-i-lose-my-phone-or-rileylink","text":"For pod users, your pod will finish any currently running temporary basal rate and then revert back to your scheduled basal rate. Without a phone or RileyLink , however, you will not be able to affect any pod use; no basal change, suspend, cancel, or bolus. To do anything other than let basals continue, you will need to take action depending on the situation. Lost RileyLink only: You can replace your missing RileyLink with one from your backup supplies. No problem to switch out to a different Rileylink mid-pod session . If you don't have a backup RileyLink to use, then you will need to remove the pod and put on a new pod paired with your PDM until you can get a new RileyLink . In the interim, you are still getting basal from the pod. If you are taking bolus insulin via injection, just add it to Apple Health under insulin. Loop will read it and keep making predictions for you. Once you inject, then add the carbs that go with that injection into Loop. Lost iPhone only: You will need to remove the pod and put on a new pod paired with your PDM until you can get a new phone and Loop app built onto it. In the interim, the pod will continue to deliver your scheduled basal until the pod reaches 80 hours. See Updating FAQs for New Phone for more information. Lost both RileyLink and phone: You're having a really bad day. You'll need a hug and to follow the same directions as if you lost the phone as shown in the bullet above.","title":"What if I lose my phone or RileyLink?"},{"location":"faqs/omnipod-faqs/#is-there-an-increase-in-pod-failures-on-loop","text":"There is more communication between the pod and the controller (your Loop phone) than is typical with the PDM (Insulet provided controller), which increases the load on the pod battery. Most people have no increase in pod failures, but there are steps to take to limit \"extra pod battery use\". Every time the Loop app requests an update of the pod state or modifies the temp basal rate, messages are exchanged with the pod. Set your correction range to be 10 to 20 mg/dL (0.5 to 1.1 mmol/L) instead of a single number The temp basal rate is less likely to be modified for a given CGM update Keep your Loop app in the background or your phone locked when possible Loop 2.2.x updates the pod state only when CGM updates Loop dev updates the pod state every 30 sec when the app is in the foreground Use an alternate display method such as Nightscout or Loop Follow instead of keeping the Loopers phone unlocked with Loop app open","title":"Is there an increase in pod failures on Loop?"},{"location":"faqs/omnipod-faqs/#what-do-i-do-if-a-pod-fails-to-pair","text":"If you get a pod that is failing to pair, please see this page for steps on how to fix the problem. Follow these steps before filling and trying another pod. If the pod is not screaming, you can probably recover it.","title":"What do I do if a pod fails to pair?"},{"location":"faqs/omnipod-faqs/#what-do-you-do-to-stop-a-screaming-pod","text":"Screaming pods indicate the pod is out of insulin or out of time (80 hours) or there has been a critical pod fault. In all these cases, there is no more delivery of insulin. The first step is to use your phone to Deactivate the pod. You may need to go to the pod settings and tap on the Replace Pod row or the app may take you to the screen with a Deactivate button directly. This only works if the app is able to communicate with the pod. Sometimes this is not possible. After you attempt to deactivate two times, the app will \"discard\" the pod as active if communication fails and enable you to pair a new pod. But you still need to make that noise go away. If you are not successful at deactivating a pod and you've tried everything for resetting the RileyLink or resetting Bluetooth on your phone, make sure the old pod is removed from the area before trying to connect a new pod. (Placing it in a microwave temporarily prevents the phone for detecting that pod.) The paperclip trick (next paragraph) only breaks the sound connection, the pod electronics is still active. Once you have removed the screaming pod, it can be silenced using a paperclip. Simply put the paperclip in the small hole that is on the bottom (the side opposite where the cannula is) of the pod as shown. Push the paperclip in until you hear a little click, that click is breaking the circuit that connects the speaker to the electronics.","title":"What do you do to stop a screaming pod?"},{"location":"faqs/overview-faqs/","text":"Frequently Asked Questions (FAQs) Overview \u00b6 The FAQs tab of LoopDocs contains pages with safety tips, frequently asked questions and the Glossary. Map to this section: Safety Tips Loop FAQs Omnipod FAQs CGM FAQs Update/Rebuild Loop FAQs RileyLink FAQs Algorithm FAQs Apple Health FAQs Glossary","title":"FAQs Overview"},{"location":"faqs/overview-faqs/#frequently-asked-questions-faqs-overview","text":"The FAQs tab of LoopDocs contains pages with safety tips, frequently asked questions and the Glossary. Map to this section: Safety Tips Loop FAQs Omnipod FAQs CGM FAQs Update/Rebuild Loop FAQs RileyLink FAQs Algorithm FAQs Apple Health FAQs Glossary","title":"Frequently Asked Questions (FAQs) Overview"},{"location":"faqs/release-faqs/","text":"Loop Releases \u00b6 The new features added with each Loop release (starting with Loop version 2.0) are provided for reference. Loop 3 Compatibility \u00b6 Be aware that Loop 3 is forward compatible: You can build Loop 3 over older versions of Loop and maintain therapy settings as well as your configuration for CGM and pump (including a pod) Loop 3 is NOT backwards compatible. Once you build Loop 3 or later on your phone, you cannot return to Loop 2.2.x or FreeAPS without some additional work. Be prepared to enter all your settings again and start a new pod If you use Loop Follow, you do not need to delete Loop Follow The list of apps you need to delete are on the specific phone where you are trying to downgrade to an older version of Loop from Loop 3 You need to delete all apps that you built with Xcode that share an app group id The list of apps that share an app group includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app For more information, click on Remove Apps with Shared App Group Current Release \u00b6 The current released version for Loop master is v2.2.9. The dates and contents for Loop releases from v2.0 through v2.2.9 are summarized below in reverse chronological order (so newest release information comes first). Check Current Release Status Release information is always found on the GitHub LoopKit/Loop release page . The information on this LoopDocs page is a summary of that information with a little extra explanation. Be aware that updates to LoopDocs may take some time after a new release comes out. How do I Know What Version I Have? Tap on the Settings icon at the bottom of the Loop app main screen and look at the version information at upper left. This graphic was generated with an older version, Loop 2.2.8. Loop v2.2.9 \u00b6 This release updates Loop to handle Dexcom Share server changes for how glucose trend is parsed. Dexcom used to provide integers that mapped to the meaning for the arrows. They changed that to strings, like \"Flat\" or \"FortyFiveUp\". This is now the new master, so you build it using the standard updating procedure Build Updating . Loop v2.2.9 was released on April 4, 2022. Loop v2.2.8 \u00b6 This is a hotfix (no features were modified in the Loop app) to enable the app to be built with Xcode 13.3. Loop v2.2.8 was released on March 16, 2022. Loop v2.2.7 \u00b6 This is a fix (no features were modified in the Loop app) to enable the app to be distributed via TestFlight. Loop v2.2.7 was released on Jan 11, 2022. Loop v2.2.6 \u00b6 Several users reported issues with IOB accounting in Loop v2.2.5, where IOB was being under-reported, which could cause Loop to continue recommending increases in insulin delivery. A fix was made and provided as Loop v2.2.6. This is a serious issue, so updating to this release is strongly recommended for anyone currently running v2.2.5. If you tap on Loop Settings and look at the top, and see LOOP V2.2.5, then rebuild ASAP. The time window when you would have built v2.2.5 is from Aug 22 through Sep 6, 2021. The issue appears to be the result of a failure to write to Apple HealthKit, which may occur if the Health app on your phone is having problems, or if you have turned off Loop's ability to write Insulin data to HealthKit. The fix involves reverting a change made in v2.2.5. This change was an attempt to reduce overlaps of Reservoir and Pump Event reconciliation which intermittently over estimate insulin delivery. Instead, that issue will be fixed in the next major release of Loop. Thanks to all who helped with reporting, digging, and testing this quickly. It's great to have such a strong community of people eager to help. Loop v2.2.6 was released on September 6, 2021. Loop v2.2.5 \u00b6 This is an interim release as we prepare for the major changes currently in development. If you are running an older version of Loop, such as v2.2.4 (master or automatic-bolus branch ) or an older version, it is recommended that you update to v2.2.6 to get all these new features. A summary of modifications with respect to Loop v2.2.4 is listed below. Loop v2.2.5 was released on August 22, 2021. New Features: \u00b6 Automatic Bolus (Experimental) Dosing Strategy Users may select Dosing Strategy Default Dosing Strategy continues to be Temp Basal Only Automatic Bolus Dosing Strategy is marked experimental If you used Loop v2.2.4 automatic-bolus branch , this release will behave the same If you used Loop v2.2.4 master branch , approach this feature with caution; it may require changes to settings Tracking automatic vs manual boluses is not yet implemented in the code and databases Provisioning Profile Expiration Notifications: User gets notified when Loop app expiration date nears Expiration date is included in the issue report RileyLink Compatible Devices: The RileyLink compatible device displays are pump independent OrangeLink Support added for connection monitoring, battery level alerting, find device, and light/vibration controls Medtronic Pump Settings screen updated with option to disable MySentry use; user can trade Medtronic pump battery for longer RileyLink compatible device battery life Omnipod Features: Pod Settings layout: improved layout and functionality Fault Codes: PDM style Ref code displayed for pod faults Confirmation beeps : improved and more uniform implementation Pod Suspended: pod beeps once every 5 minutes until delivery is resumed or alarm cleared Code Fixes: \u00b6 Omnipod Code Fixes: Make insertion more robust (LoopKit issue #1369) Fix \u201cPod already primed\u201d errors when priming cancelled (rileylink_ios issue #661) Prevent 049 pod faults during setup (rileylink_ios issue #627) See RileyLink Pull Request 676 for additional details. (REMOVED) Insulin Accounting: Reduced occurrences of overlaps in accounting for insulin via reservoir and dose history, which causes temporary overestimation of IOB See Loop Pull Request 344 for details This modification (in v2.2.5) was removed for v2.2.6 It worked as advertised during testing, but . . . If the user's phone had trouble communicating with the Apple HealthKit app, this could cause IOB to be under-reported and cause Loop to provide more insulin than needed Dexcom Non-US Share: Dexcom Share URL for non-US users has been fixed. For community support, please use one of the Loop Social Media help sites. Loop v2.2.4 \u00b6 Released October 3, 2020 with \"fixes\" introduced without renumbering the version number. Last change was on January 19, 2021. Revert to previous date pickers (Thanks @novalegra!) Pod fault handling improvements (Thanks @itsmojo!) Fix issue with pod status screen not allowing new pod pairing or continuing of interrupted pairing. October 22, 2020, update travis to make it work with Xcode 12 January 19, 2021, pin the carthage to 0.36.0. Users no longer required to install homebrew or carthage Older Loop Releases \u00b6 Loop v2.2.3 \u00b6 Released September 25, 2020 Warning - Rebuild ASAP for Pods A bug was introduced in this version, quickly fixed in v2.2.4. If you use pods, please rebuild using v2.2.6. Fetch pump and cgm data on manual loop retry (when Loop icon is red or yellow) Re-arranged pod status screen to prioritize needed information and actions. Pod pairing fixes for more edge cases. Translation updates. Fix share server integration, pointing to share2. Report RSSI and low gain in Read Pod Status command. Report failure properly when Play Test Beeps command fails. Carthage build fix for Xcode 12.0.1 Loop v2.2.1 \u00b6 Released August 9, 2020 Include pending insulin in: forecast uploaded to Nightscout status extension forecast Updated translations, fixes for temp override translations, new Arabic translations. Omnipod integration fixes: Avoid suspending during deactivation if pod has a fault, is in setup, or already suspended. Show the correct expected address in invalid address error Reuse same address during attempts to pair with same pod Fix for Medtronic only: when a bolus issued via the Loop interface was canceled by issuing a suspend on the pump itself, Loop will incorrectly track the bolus as if the full amount were delivered Updates for omnipod packet parser Suggest moving RileyLink to new area on multiple pairing failures Minimed updates: Detect temp basal cancellation performed on pump Loop v2.2 \u00b6 Released April 17, 2020 Updated carb/bolus screens. Thanks @mpangburn! Carbs and boluses are now entered together, which is a more familiar model to many caregivers. Forecast preview while entering bolus allows you to see potential impact of your bolus before delivering. Improvements in Watch updates; sleep data being used to update complications when you are awake. Thanks @novalegra! Omnipod pairing improvements. Bug fixes, and better error messaging. Thanks @itsmojo! Many performance improvements, especially effecting long time Loop users. Delays in rendering graphs during app launch should be fixed. New device communication logging facility- Additional logging across pod swaps, and logging of CGM communication. Rendering fixes to prevent insulin graph from drawing outside of bounds. Bug fix to align use of 10m insulin delay in dose computation and forecast. Include current bg in suspend threshold evaluation. Loop v2.0 \u00b6 Released December 31, 2019. For Reference Only Enough time has passed that this version should no longer be on anyone's phones (the one-year expiration time should take care of that). There is a lot more detail provided in the Loop v2.0 section because it constituted a significant change to parts of Loop from prior releases. This section and the Omnipod -Testing branch sections are left here for historical interest. What was new in Loop v2.0? \u00b6 This is a highlights reel comparing Loop v2.0 to v1.9.6. Uploading of BGs to Nightscout \u00b6 Loop v2.0 has an option to upload your BG data to Nightscout directly. It is a new slider under the CGM configuration section for Dexcom users. After you add your CGM transmitter ID, go back into the CGM info and you'll see a new slider called \"Upload Readings.\" Technically, Loop's dev branch had that feature for a hot minute before Loop v2.0 was released...but for almost everyone this will be a brand new feature they haven't had before. This feature can help if/when Dexcom's Share servers ever go through another large outage like we had before. If that happens, you can turn on the \"Upload Readings\" switch and your CGM data will now be in Nightscout even without Share servers working properly. Good practice would be to temporarily disable your Share bridge in Nightscout while Loop is responsible for CGM uploading so that you don't get duplicate data. You can disable Share bridge by logging into your Heroku account, going to the Settings tab, clicking on \"reveal config vars\" and then deleting the word \"bridge\" from the ENABLE line. A fix for settings loss \u00b6 iOS 13 brought about a quirky little bug where you could suddenly lose settings in Loop. But, it wasn't just limited to Loop, sometimes people lost Dexcom app settings too. The issue is most common when the phone goes through a power cycle, but it has happened at other times, too. There's a fix for that new bug in Loop now...so that's a good reason to update. (If you encounter that bug before you have a chance to update your Loop app, simply restart the Loop app and your settings should reappear.) Spin for Watch Bolus \u00b6 To prevent an accidental bolus from your Watch app, don't let your kids hold your watch. Just kidding, we've added an even better option. There is a new \"spin\" to confirm the bolus after you press the bolus button. You'll see a graphic like below on the watch face. As you spin the digital crown, the two triangles will begin to merge. Once they merge, the bolus is confirmed through a little haptic and a white checkmark will appear on the watch screen. Watch recommended bolus \u00b6 A common code customization is also now no longer needed. Many people used to edit Loop code to have the Watch app provide 100% of the recommended bolus as the auto-filled quantity in the bolus field (default used to be 75%). Loop now offers the 100% auto-filled recommendation, no code customization needed now. Recent carbs list on Watch \u00b6 You can review the recent carb entries on your Apple Watch now. Simply swipe left to see the blood glucose graph screen on your watch. Scroll down with the digital crown to the \"active carbs\" row beneath the graph, and tap that row. You can see the list of recent carb entries. Fix for Medtronic x15 \"bolus may have failed\" message \u00b6 A lot of Medtronic x15 users received \"bolus may have failed\" messages after each bolus. That issue has been fixed and a patched version of Loop is no longer needed. All good! Confirmation beeps expanded \u00b6 Confirmation beeps have been expanded based on user feedback...we heard parents and school nurses really appreciate hearing a beep for not just boluses, but also for suspend/resume commands and editing basal schedule (so you are sure it saved properly). So, confirmation beeps are now for boluses, suspend/resume, and basal schedule edit saves. Read Pod Status added \u00b6 There's a new command in the RileyLink menu for \"Read Pod Status\" that is analogous to the existing command for Medtronic users. You can query your Pod for its current status info using that command. Bug fixes generally \u00b6 There are a lot of niggly little bug fixes too which were merged in the last couple weeks. The temp basal timestamp for Medtronic Loop (and for older Omnipod Loops, too) had a bug that when Loop reverted to scheduled basals, the timestamp on the HUD 's temp basal icon would switch back to the time the Loop was launched (instead of the time the scheduled basal was started again). There are also some new code improvements for handling uncerain boluses for Pod Also, there are improvements to handle how Loop marks Pod suspend commands that are initiated by users while an active temp basal is in progress. User interface improvements \u00b6 You'll notice dashed lines in the HUD for the CGM value if the CGM data goes older than 15 min (that way you don't accidentally miss the fact that your CGM has failed). The API Secret is hidden after it is saved in Loop Settings now, and if you accidentally leave a trailing slash on the Nightscout URL ...Loop will ignore it. The bolus progress row is new to master branch now, although many of you have been accustomed to that visual in dev branch for awhile now. The \"Scenarios\" screen that would sometimes appear when a phone was shaken is also disabled by default now. The Issue Report has more information about your Loop app's build date and version so that you can more easily track its build history. Common build error squashed \u00b6 One common build error was caused if there was a space in the Loop folder name after downloading. This problem has been fixed and you will no longer get build errors if you have a space in your Loop folder name. (Unless you are building dev branch , currently v2.3.0, - then no spaces allowed.) Nightscout profile uploading \u00b6 Loop will upload your basal schedule, ISFs, carb ratios, and override presets from Loop settings to your Nightscout profile. If you ever lose your phone and need to setup Loop brand new...your settings will be easy to find in Nightscout now. New languages \u00b6 Japanese, Danish, Swedish, Vietnamese, Finnish, Portuguese (Brazilian), Polish, and Romanian languages were added to the regional translations for Loop. There are definitely some missing strings that will still need touchups...we will get those fixed up in Loop v2.1 if you all help report those when you see them . Thanks!! Non-linear carb model \u00b6 All branches (master and dev) now use a \"non-linear\" carb model, so let's give some info about the change. Previously, the carb model Loop used had a linear absorption predicted with dynamic carbs adjustments. What this means is that food absorption was modeled as a flat, even effect (like the straight grey graph that you'll see in the Insulin Counteraction Effects chart after you added a carb entry. But looking at large groups of meals' datasets (and supported by personal, anecdotal experiences), food really has a bit more of a non-linear absorption. Meaning, we usually see more of a food impact up-front than the old carb model in Loop predicted. What did that mismatch mean for us if the model predicts a linear absorption, but the meal actually behaves differently? Bolusing: You've probably seen smaller upfront boluses for meals than you would have preferred. This is because the insulin was predicted to over-power the linear (slower) carb model soon after a bolus is given. Early low temp basals: You've also probably seen a tendency to have early zero basal or low basals set by Loop for the first 30-60 minutes after a meal bolus if you don't have a significant blood glucose spike immediately after the carb entry. This might have been even more obvious for those of you who are regularly waiting to eat after a bolus, too. With a non-linear absorption model, the carb absorption will more closely match observed blood glucose impacts we've seen after meals. And when the model is more closely matching actual experience, that means the predicted blood glucose curves will do a better job at providing more upfront bolus and not having the tendency to have overly conservative temp basals soon after a meal. What should you expect? Like the description above, you'll likely see more complete bolus recommendations and less low temping after a bolus. With that in mind, if you've made adjustments to your Loop habits or settings to overcome those issues previously, you may want to undo those habits. Like if you shortened carb absorption times to help get larger boluses upfront, you may want to go back to standard times. Keep an eye on things and you should adjust as needed. What if you want to go back to the old model? You will have to edit a line in LoopKit's LoopKit code here to use .linear if you wanted to go back to the old carb model. If you want to read more about the model, please check out the Zulipchat thread here . But realize that the code edit for changing models would be easiest done using a LoopWorkspace because the edit is in one of the frameworks that Loop uses (rather than Loop code itself), so this is one of those instances where you will have to do some work to learn how to use a LoopWorkspace properly. Overrides \u00b6 Loop v2.0 marks the first time Loop master branch has overrides included. Additionally, this release moves overrides setup from the configurations area of Loop settings to the workout icon in the Loop toolbar. There has also been bug squashing in dev branch for overrides over the recent past, so updating is a good idea even if you already have overrides on your current build. Want to learn more about overrides? Read about them here . Retrospective Correction always on \u00b6 Retrospective correction used to be an optional toggle in the algorithm. It is now on by default all the time. It is an important part of the algorithm (helps Loop look at how good/bad its recent prediction curve has been vs reality), and leaving it on made sense anyways. Omnipod support \u00b6 Yes, most of you are already using Omnipod with your Loop...but this is the first time that Loop master branch supports Omnipod users. Please update if you have been using Omnipod -testing branch especially...it's time to get all the bug fixes that we've done in Loop. Dark mode support \u00b6 iOS 13 brought dark mode for application developers, and Loop's developer was all over that. We now have a wickedly cool dark mode Loop for those who prefer the dark side. ISF and correction range guardrails and UI change \u00b6 Loop v2.0 also brings about the first time master branch has the useful scroll wheel to set values of ISF and correction range. This helps mitigate an old bug where backwards entered correction range values would crash Loop app. Also less prone to fat-finger mistakes on entry. Simulator pump and CGM \u00b6 If you don't have compatible gear yet and just want to test Loop app, the new ability to add a simulated pump and/or CGM is a great new feature. New style of Dexcom transmitters supported \u00b6 Dexcom launched a new style of transmitters this summer. The new transmitters took some work by Loop developer (PETE! YEAH!) to get them working in offline Looping, but the fix was pushed into all branches shortly thereafter in August 2019. If you haven't updated your Loop since August 2019 and use a Dexcom G6, you should update now. Remove Apps with Shared App Group \u00b6 The storage of data with Loop-dev is not backward compatible. In other words, if you attempt to build Loop 2.2.x (or FreeAPS) on a phone which has been upgraded to Loop-dev, you will not be able to run that app. You can successfully build the app, which will overwrite Loop-dev on the phone, but the app will crash and you will not be able to Loop. At this point, you can restore your Loop-dev build on your phone and continue using Loop-dev or you delete all apps on your phone with a shared app group. This list includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app. If you tried to delete \"all\" the apps and still have something causing an issue; you can follow the directions to Review Provisioning Profiles and then delete the profiles for all the apps by using the - sign. You do not need to delete Loop Follow, so if you use Loop Follow - do not delete that provisioning profile.","title":"Loop Releases"},{"location":"faqs/release-faqs/#loop-releases","text":"The new features added with each Loop release (starting with Loop version 2.0) are provided for reference.","title":"Loop Releases"},{"location":"faqs/release-faqs/#loop-3-compatibility","text":"Be aware that Loop 3 is forward compatible: You can build Loop 3 over older versions of Loop and maintain therapy settings as well as your configuration for CGM and pump (including a pod) Loop 3 is NOT backwards compatible. Once you build Loop 3 or later on your phone, you cannot return to Loop 2.2.x or FreeAPS without some additional work. Be prepared to enter all your settings again and start a new pod If you use Loop Follow, you do not need to delete Loop Follow The list of apps you need to delete are on the specific phone where you are trying to downgrade to an older version of Loop from Loop 3 You need to delete all apps that you built with Xcode that share an app group id The list of apps that share an app group includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app For more information, click on Remove Apps with Shared App Group","title":"Loop 3 Compatibility"},{"location":"faqs/release-faqs/#current-release","text":"The current released version for Loop master is v2.2.9. The dates and contents for Loop releases from v2.0 through v2.2.9 are summarized below in reverse chronological order (so newest release information comes first). Check Current Release Status Release information is always found on the GitHub LoopKit/Loop release page . The information on this LoopDocs page is a summary of that information with a little extra explanation. Be aware that updates to LoopDocs may take some time after a new release comes out. How do I Know What Version I Have? Tap on the Settings icon at the bottom of the Loop app main screen and look at the version information at upper left. This graphic was generated with an older version, Loop 2.2.8.","title":"Current Release"},{"location":"faqs/release-faqs/#loop-v229","text":"This release updates Loop to handle Dexcom Share server changes for how glucose trend is parsed. Dexcom used to provide integers that mapped to the meaning for the arrows. They changed that to strings, like \"Flat\" or \"FortyFiveUp\". This is now the new master, so you build it using the standard updating procedure Build Updating . Loop v2.2.9 was released on April 4, 2022.","title":"Loop v2.2.9"},{"location":"faqs/release-faqs/#loop-v228","text":"This is a hotfix (no features were modified in the Loop app) to enable the app to be built with Xcode 13.3. Loop v2.2.8 was released on March 16, 2022.","title":"Loop v2.2.8"},{"location":"faqs/release-faqs/#loop-v227","text":"This is a fix (no features were modified in the Loop app) to enable the app to be distributed via TestFlight. Loop v2.2.7 was released on Jan 11, 2022.","title":"Loop v2.2.7"},{"location":"faqs/release-faqs/#loop-v226","text":"Several users reported issues with IOB accounting in Loop v2.2.5, where IOB was being under-reported, which could cause Loop to continue recommending increases in insulin delivery. A fix was made and provided as Loop v2.2.6. This is a serious issue, so updating to this release is strongly recommended for anyone currently running v2.2.5. If you tap on Loop Settings and look at the top, and see LOOP V2.2.5, then rebuild ASAP. The time window when you would have built v2.2.5 is from Aug 22 through Sep 6, 2021. The issue appears to be the result of a failure to write to Apple HealthKit, which may occur if the Health app on your phone is having problems, or if you have turned off Loop's ability to write Insulin data to HealthKit. The fix involves reverting a change made in v2.2.5. This change was an attempt to reduce overlaps of Reservoir and Pump Event reconciliation which intermittently over estimate insulin delivery. Instead, that issue will be fixed in the next major release of Loop. Thanks to all who helped with reporting, digging, and testing this quickly. It's great to have such a strong community of people eager to help. Loop v2.2.6 was released on September 6, 2021.","title":"Loop v2.2.6"},{"location":"faqs/release-faqs/#loop-v225","text":"This is an interim release as we prepare for the major changes currently in development. If you are running an older version of Loop, such as v2.2.4 (master or automatic-bolus branch ) or an older version, it is recommended that you update to v2.2.6 to get all these new features. A summary of modifications with respect to Loop v2.2.4 is listed below. Loop v2.2.5 was released on August 22, 2021.","title":"Loop v2.2.5"},{"location":"faqs/release-faqs/#new-features","text":"Automatic Bolus (Experimental) Dosing Strategy Users may select Dosing Strategy Default Dosing Strategy continues to be Temp Basal Only Automatic Bolus Dosing Strategy is marked experimental If you used Loop v2.2.4 automatic-bolus branch , this release will behave the same If you used Loop v2.2.4 master branch , approach this feature with caution; it may require changes to settings Tracking automatic vs manual boluses is not yet implemented in the code and databases Provisioning Profile Expiration Notifications: User gets notified when Loop app expiration date nears Expiration date is included in the issue report RileyLink Compatible Devices: The RileyLink compatible device displays are pump independent OrangeLink Support added for connection monitoring, battery level alerting, find device, and light/vibration controls Medtronic Pump Settings screen updated with option to disable MySentry use; user can trade Medtronic pump battery for longer RileyLink compatible device battery life Omnipod Features: Pod Settings layout: improved layout and functionality Fault Codes: PDM style Ref code displayed for pod faults Confirmation beeps : improved and more uniform implementation Pod Suspended: pod beeps once every 5 minutes until delivery is resumed or alarm cleared","title":"New Features:"},{"location":"faqs/release-faqs/#code-fixes","text":"Omnipod Code Fixes: Make insertion more robust (LoopKit issue #1369) Fix \u201cPod already primed\u201d errors when priming cancelled (rileylink_ios issue #661) Prevent 049 pod faults during setup (rileylink_ios issue #627) See RileyLink Pull Request 676 for additional details. (REMOVED) Insulin Accounting: Reduced occurrences of overlaps in accounting for insulin via reservoir and dose history, which causes temporary overestimation of IOB See Loop Pull Request 344 for details This modification (in v2.2.5) was removed for v2.2.6 It worked as advertised during testing, but . . . If the user's phone had trouble communicating with the Apple HealthKit app, this could cause IOB to be under-reported and cause Loop to provide more insulin than needed Dexcom Non-US Share: Dexcom Share URL for non-US users has been fixed. For community support, please use one of the Loop Social Media help sites.","title":"Code Fixes:"},{"location":"faqs/release-faqs/#loop-v224","text":"Released October 3, 2020 with \"fixes\" introduced without renumbering the version number. Last change was on January 19, 2021. Revert to previous date pickers (Thanks @novalegra!) Pod fault handling improvements (Thanks @itsmojo!) Fix issue with pod status screen not allowing new pod pairing or continuing of interrupted pairing. October 22, 2020, update travis to make it work with Xcode 12 January 19, 2021, pin the carthage to 0.36.0. Users no longer required to install homebrew or carthage","title":"Loop v2.2.4"},{"location":"faqs/release-faqs/#older-loop-releases","text":"","title":"Older Loop Releases"},{"location":"faqs/release-faqs/#loop-v223","text":"Released September 25, 2020 Warning - Rebuild ASAP for Pods A bug was introduced in this version, quickly fixed in v2.2.4. If you use pods, please rebuild using v2.2.6. Fetch pump and cgm data on manual loop retry (when Loop icon is red or yellow) Re-arranged pod status screen to prioritize needed information and actions. Pod pairing fixes for more edge cases. Translation updates. Fix share server integration, pointing to share2. Report RSSI and low gain in Read Pod Status command. Report failure properly when Play Test Beeps command fails. Carthage build fix for Xcode 12.0.1","title":"Loop v2.2.3"},{"location":"faqs/release-faqs/#loop-v221","text":"Released August 9, 2020 Include pending insulin in: forecast uploaded to Nightscout status extension forecast Updated translations, fixes for temp override translations, new Arabic translations. Omnipod integration fixes: Avoid suspending during deactivation if pod has a fault, is in setup, or already suspended. Show the correct expected address in invalid address error Reuse same address during attempts to pair with same pod Fix for Medtronic only: when a bolus issued via the Loop interface was canceled by issuing a suspend on the pump itself, Loop will incorrectly track the bolus as if the full amount were delivered Updates for omnipod packet parser Suggest moving RileyLink to new area on multiple pairing failures Minimed updates: Detect temp basal cancellation performed on pump","title":"Loop v2.2.1"},{"location":"faqs/release-faqs/#loop-v22","text":"Released April 17, 2020 Updated carb/bolus screens. Thanks @mpangburn! Carbs and boluses are now entered together, which is a more familiar model to many caregivers. Forecast preview while entering bolus allows you to see potential impact of your bolus before delivering. Improvements in Watch updates; sleep data being used to update complications when you are awake. Thanks @novalegra! Omnipod pairing improvements. Bug fixes, and better error messaging. Thanks @itsmojo! Many performance improvements, especially effecting long time Loop users. Delays in rendering graphs during app launch should be fixed. New device communication logging facility- Additional logging across pod swaps, and logging of CGM communication. Rendering fixes to prevent insulin graph from drawing outside of bounds. Bug fix to align use of 10m insulin delay in dose computation and forecast. Include current bg in suspend threshold evaluation.","title":"Loop v2.2"},{"location":"faqs/release-faqs/#loop-v20","text":"Released December 31, 2019. For Reference Only Enough time has passed that this version should no longer be on anyone's phones (the one-year expiration time should take care of that). There is a lot more detail provided in the Loop v2.0 section because it constituted a significant change to parts of Loop from prior releases. This section and the Omnipod -Testing branch sections are left here for historical interest.","title":"Loop v2.0"},{"location":"faqs/release-faqs/#what-was-new-in-loop-v20","text":"This is a highlights reel comparing Loop v2.0 to v1.9.6.","title":"What was new in Loop v2.0?"},{"location":"faqs/release-faqs/#uploading-of-bgs-to-nightscout","text":"Loop v2.0 has an option to upload your BG data to Nightscout directly. It is a new slider under the CGM configuration section for Dexcom users. After you add your CGM transmitter ID, go back into the CGM info and you'll see a new slider called \"Upload Readings.\" Technically, Loop's dev branch had that feature for a hot minute before Loop v2.0 was released...but for almost everyone this will be a brand new feature they haven't had before. This feature can help if/when Dexcom's Share servers ever go through another large outage like we had before. If that happens, you can turn on the \"Upload Readings\" switch and your CGM data will now be in Nightscout even without Share servers working properly. Good practice would be to temporarily disable your Share bridge in Nightscout while Loop is responsible for CGM uploading so that you don't get duplicate data. You can disable Share bridge by logging into your Heroku account, going to the Settings tab, clicking on \"reveal config vars\" and then deleting the word \"bridge\" from the ENABLE line.","title":"Uploading of BGs to Nightscout"},{"location":"faqs/release-faqs/#a-fix-for-settings-loss","text":"iOS 13 brought about a quirky little bug where you could suddenly lose settings in Loop. But, it wasn't just limited to Loop, sometimes people lost Dexcom app settings too. The issue is most common when the phone goes through a power cycle, but it has happened at other times, too. There's a fix for that new bug in Loop now...so that's a good reason to update. (If you encounter that bug before you have a chance to update your Loop app, simply restart the Loop app and your settings should reappear.)","title":"A fix for settings loss"},{"location":"faqs/release-faqs/#spin-for-watch-bolus","text":"To prevent an accidental bolus from your Watch app, don't let your kids hold your watch. Just kidding, we've added an even better option. There is a new \"spin\" to confirm the bolus after you press the bolus button. You'll see a graphic like below on the watch face. As you spin the digital crown, the two triangles will begin to merge. Once they merge, the bolus is confirmed through a little haptic and a white checkmark will appear on the watch screen.","title":"Spin for Watch Bolus"},{"location":"faqs/release-faqs/#watch-recommended-bolus","text":"A common code customization is also now no longer needed. Many people used to edit Loop code to have the Watch app provide 100% of the recommended bolus as the auto-filled quantity in the bolus field (default used to be 75%). Loop now offers the 100% auto-filled recommendation, no code customization needed now.","title":"Watch recommended bolus"},{"location":"faqs/release-faqs/#recent-carbs-list-on-watch","text":"You can review the recent carb entries on your Apple Watch now. Simply swipe left to see the blood glucose graph screen on your watch. Scroll down with the digital crown to the \"active carbs\" row beneath the graph, and tap that row. You can see the list of recent carb entries.","title":"Recent carbs list on Watch"},{"location":"faqs/release-faqs/#fix-for-medtronic-x15-bolus-may-have-failed-message","text":"A lot of Medtronic x15 users received \"bolus may have failed\" messages after each bolus. That issue has been fixed and a patched version of Loop is no longer needed. All good!","title":"Fix for Medtronic x15 \"bolus may have failed\" message"},{"location":"faqs/release-faqs/#confirmation-beeps-expanded","text":"Confirmation beeps have been expanded based on user feedback...we heard parents and school nurses really appreciate hearing a beep for not just boluses, but also for suspend/resume commands and editing basal schedule (so you are sure it saved properly). So, confirmation beeps are now for boluses, suspend/resume, and basal schedule edit saves.","title":"Confirmation beeps expanded"},{"location":"faqs/release-faqs/#read-pod-status-added","text":"There's a new command in the RileyLink menu for \"Read Pod Status\" that is analogous to the existing command for Medtronic users. You can query your Pod for its current status info using that command.","title":"Read Pod Status added"},{"location":"faqs/release-faqs/#bug-fixes-generally","text":"There are a lot of niggly little bug fixes too which were merged in the last couple weeks. The temp basal timestamp for Medtronic Loop (and for older Omnipod Loops, too) had a bug that when Loop reverted to scheduled basals, the timestamp on the HUD 's temp basal icon would switch back to the time the Loop was launched (instead of the time the scheduled basal was started again). There are also some new code improvements for handling uncerain boluses for Pod Also, there are improvements to handle how Loop marks Pod suspend commands that are initiated by users while an active temp basal is in progress.","title":"Bug fixes generally"},{"location":"faqs/release-faqs/#user-interface-improvements","text":"You'll notice dashed lines in the HUD for the CGM value if the CGM data goes older than 15 min (that way you don't accidentally miss the fact that your CGM has failed). The API Secret is hidden after it is saved in Loop Settings now, and if you accidentally leave a trailing slash on the Nightscout URL ...Loop will ignore it. The bolus progress row is new to master branch now, although many of you have been accustomed to that visual in dev branch for awhile now. The \"Scenarios\" screen that would sometimes appear when a phone was shaken is also disabled by default now. The Issue Report has more information about your Loop app's build date and version so that you can more easily track its build history.","title":"User interface improvements"},{"location":"faqs/release-faqs/#common-build-error-squashed","text":"One common build error was caused if there was a space in the Loop folder name after downloading. This problem has been fixed and you will no longer get build errors if you have a space in your Loop folder name. (Unless you are building dev branch , currently v2.3.0, - then no spaces allowed.)","title":"Common build error squashed"},{"location":"faqs/release-faqs/#nightscout-profile-uploading","text":"Loop will upload your basal schedule, ISFs, carb ratios, and override presets from Loop settings to your Nightscout profile. If you ever lose your phone and need to setup Loop brand new...your settings will be easy to find in Nightscout now.","title":"Nightscout profile uploading"},{"location":"faqs/release-faqs/#new-languages","text":"Japanese, Danish, Swedish, Vietnamese, Finnish, Portuguese (Brazilian), Polish, and Romanian languages were added to the regional translations for Loop. There are definitely some missing strings that will still need touchups...we will get those fixed up in Loop v2.1 if you all help report those when you see them . Thanks!!","title":"New languages"},{"location":"faqs/release-faqs/#non-linear-carb-model","text":"All branches (master and dev) now use a \"non-linear\" carb model, so let's give some info about the change. Previously, the carb model Loop used had a linear absorption predicted with dynamic carbs adjustments. What this means is that food absorption was modeled as a flat, even effect (like the straight grey graph that you'll see in the Insulin Counteraction Effects chart after you added a carb entry. But looking at large groups of meals' datasets (and supported by personal, anecdotal experiences), food really has a bit more of a non-linear absorption. Meaning, we usually see more of a food impact up-front than the old carb model in Loop predicted. What did that mismatch mean for us if the model predicts a linear absorption, but the meal actually behaves differently? Bolusing: You've probably seen smaller upfront boluses for meals than you would have preferred. This is because the insulin was predicted to over-power the linear (slower) carb model soon after a bolus is given. Early low temp basals: You've also probably seen a tendency to have early zero basal or low basals set by Loop for the first 30-60 minutes after a meal bolus if you don't have a significant blood glucose spike immediately after the carb entry. This might have been even more obvious for those of you who are regularly waiting to eat after a bolus, too. With a non-linear absorption model, the carb absorption will more closely match observed blood glucose impacts we've seen after meals. And when the model is more closely matching actual experience, that means the predicted blood glucose curves will do a better job at providing more upfront bolus and not having the tendency to have overly conservative temp basals soon after a meal. What should you expect? Like the description above, you'll likely see more complete bolus recommendations and less low temping after a bolus. With that in mind, if you've made adjustments to your Loop habits or settings to overcome those issues previously, you may want to undo those habits. Like if you shortened carb absorption times to help get larger boluses upfront, you may want to go back to standard times. Keep an eye on things and you should adjust as needed. What if you want to go back to the old model? You will have to edit a line in LoopKit's LoopKit code here to use .linear if you wanted to go back to the old carb model. If you want to read more about the model, please check out the Zulipchat thread here . But realize that the code edit for changing models would be easiest done using a LoopWorkspace because the edit is in one of the frameworks that Loop uses (rather than Loop code itself), so this is one of those instances where you will have to do some work to learn how to use a LoopWorkspace properly.","title":"Non-linear carb model"},{"location":"faqs/release-faqs/#overrides","text":"Loop v2.0 marks the first time Loop master branch has overrides included. Additionally, this release moves overrides setup from the configurations area of Loop settings to the workout icon in the Loop toolbar. There has also been bug squashing in dev branch for overrides over the recent past, so updating is a good idea even if you already have overrides on your current build. Want to learn more about overrides? Read about them here .","title":"Overrides"},{"location":"faqs/release-faqs/#retrospective-correction-always-on","text":"Retrospective correction used to be an optional toggle in the algorithm. It is now on by default all the time. It is an important part of the algorithm (helps Loop look at how good/bad its recent prediction curve has been vs reality), and leaving it on made sense anyways.","title":"Retrospective Correction always on"},{"location":"faqs/release-faqs/#omnipod-support","text":"Yes, most of you are already using Omnipod with your Loop...but this is the first time that Loop master branch supports Omnipod users. Please update if you have been using Omnipod -testing branch especially...it's time to get all the bug fixes that we've done in Loop.","title":"Omnipod support"},{"location":"faqs/release-faqs/#dark-mode-support","text":"iOS 13 brought dark mode for application developers, and Loop's developer was all over that. We now have a wickedly cool dark mode Loop for those who prefer the dark side.","title":"Dark mode support"},{"location":"faqs/release-faqs/#isf-and-correction-range-guardrails-and-ui-change","text":"Loop v2.0 also brings about the first time master branch has the useful scroll wheel to set values of ISF and correction range. This helps mitigate an old bug where backwards entered correction range values would crash Loop app. Also less prone to fat-finger mistakes on entry.","title":"ISF and correction range guardrails and UI change"},{"location":"faqs/release-faqs/#simulator-pump-and-cgm","text":"If you don't have compatible gear yet and just want to test Loop app, the new ability to add a simulated pump and/or CGM is a great new feature.","title":"Simulator pump and CGM"},{"location":"faqs/release-faqs/#new-style-of-dexcom-transmitters-supported","text":"Dexcom launched a new style of transmitters this summer. The new transmitters took some work by Loop developer (PETE! YEAH!) to get them working in offline Looping, but the fix was pushed into all branches shortly thereafter in August 2019. If you haven't updated your Loop since August 2019 and use a Dexcom G6, you should update now.","title":"New style of Dexcom transmitters supported"},{"location":"faqs/release-faqs/#remove-apps-with-shared-app-group","text":"The storage of data with Loop-dev is not backward compatible. In other words, if you attempt to build Loop 2.2.x (or FreeAPS) on a phone which has been upgraded to Loop-dev, you will not be able to run that app. You can successfully build the app, which will overwrite Loop-dev on the phone, but the app will crash and you will not be able to Loop. At this point, you can restore your Loop-dev build on your phone and continue using Loop-dev or you delete all apps on your phone with a shared app group. This list includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app. If you tried to delete \"all\" the apps and still have something causing an issue; you can follow the directions to Review Provisioning Profiles and then delete the profiles for all the apps by using the - sign. You do not need to delete Loop Follow, so if you use Loop Follow - do not delete that provisioning profile.","title":"Remove Apps with Shared App Group"},{"location":"faqs/rileylink-faqs/","text":"RileyLink Compatible Device FAQs \u00b6 A RileyLink compatible device is a required part of Loop for Medtronic and Omnipod (Eros not DASH) pumps. The device uses the RileyLink protocol to communicate information to/from your pump by radio communications and to/from your iPhone using Bluetooth. You will need the device within range of your phone and pump so that these communications can happen. Put it in a purse, pocket, SPIbelt. Clip it to a backpack, belt, or bra...but please do bring it with you.. Purchase information for these devices is found in RileyLink Compatible Devices Adding or Changing RileyLink \u00b6 You can add or change the RileyLink compatible device in use without affecting the pump that is connected to the Loop app. You can even have more than one connected , although only one will be used at a time. If you are connecting to a new Medtronic pump or switching between Medtronic and Omnipod , please follow the Add Pump instructions under Set up App. Change Connected Devices: Open the Pump Menu for your connected pump Scroll down to the DEVICES section There should already be at least one device listed Power on your new device and look for a new device to appear in the list If this device has never been connected before, it might appear as a blank line with a slider beside it - if so, slide the slider to turn it green and then the device name should appear You can now turn sliders on or off to select which device you want to use with your connected pump Refer to the RileyLink Menu for instructions on personalizing your device name Using More Than One Device \u00b6 You can have more than one RileyLink compatible device turned on and connected. Loop only uses one device at a time. Remember - if you do have two devices in use, make sure they are both charged (or have batteries). Example of using more than one device: One device is kept in the bedroom and another in the kitchen Loop will automatically switch to the device that is within Bluetooth range at the next cycle (Loop stays green) Caveats: The phone needs to be close enough to get the CGM update Do NOT forget to pick up one RileyLink device and take it with you when you leave the house Communications \u00b6 All the RileyLink compatible devices communicate with the pump through radio frequency communications and with the phone through Bluetooth. Bluetooth (BT) Troubleshooting If your iPhone has BT issues, your Loop will have failures. There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interfering with the Loop. If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area. Your BT signal strength can be seen in the Loop settings, Pump settings, Device menu, on the Signal Strength line. As you move closer and further away from your phone, you can watch that number dynamically change. This line is not displaying the signal strength of your pump RF communications, just BT between the RileyLink compatible device and the phone. You will notice the Signal Strength is a negative number and in units of dB. Remember that number line from elementary school? A signal strength of -50 dB is a stronger signal than -80 dB. Range \u00b6 The range at which RileyLink compatible devices will function is dependent on the environment that you are in and the specific device design. Both the OrangeLink and some sizes of the EmaLink have reported longer ranges than RileyLink (typically 10 to 20 ft) - but they still need to be \"near enough\". What influences this distance for a given device? The biggest external influences are (1) body-blocking and (2) \"noisy\" environments. The human body is a lot of water, and water is an excellent blocker of wireless communication. So, sleeping on a pod and smothering it entirely with your body can decrease the ability of the device to communicate with the pod. Environments with a high concentration of wireless signals can also interfere with device communications and make closer proximity a benefit. Where might those kinds of situations happen? Concerts, conferences, and sporting arenas are pretty prone to interference. Many people keep their device on the same side of their body as their pump during the day. They use a pocket, carabiner, lanyard, SPIbelt - the options are endless. What you don't want to do is put it in a blocking bag that has RFID blocking (some travel fanny packs have that). What happens if Loop loses communication? \u00b6 While you are out of the communication range for your RileyLink compatible device(s), any running temp basal will keep going until it finishes (the longest temp basal that Loop sets are for 30 minutes duration...so within 30 minutes or less your pump would go back to your regularly scheduled basal). When you come back into range of your device, Loop will pick back up within 5-10 minutes without you needing to do anything. Are these devices waterproof? \u00b6 The electronics are not waterproof but there waterproof cases available and some have wireless charging available. Check with the manufacturer. RileyLink Compatible Device Information Firmware version \u00b6 In Loop settings, tap on your pump, find your device ( RileyLink or other) and tap on that menu. The figure below shows firmware specific to the RileyLink . If you have another type of device, the firmware value reported will be different. (Note - the displays for Ema, Orange and Riley have been updated to include device-specific features as shown in the RileyLink Display page. The graphic below shows the original RileyLink display.) With RileyLink , the firmware displayed should match or be a higher version number than what is shown in the figure above, e.g., subg_rfspy 2.2/ble_rfspy 2.0 . (If you are running with a very old RileyLink from pre-Aug 2018, it might be a lower number.) Check it when the device is working well and make a note of what it says. If you're having Red Loops, you might want to check firmware and connected state. Make sure, after power cycling your device, that the correct firmware is displayed AND that there are two items shown. In the example above: subg_rfspy 2.2 is the sub-gigahertz radio frequency firmware that talks to the insulin pump (if this does not show up, the device will talk to the phone but not the pump) ble_rfspy 2.0 is the Bluetooth firmware that talks to the phone (if this is not working, you will not even see the device in the list) HINT: You might need to quit the Loop app. (Don't just close it, actually quit.) Then do the power cycle on the RileyLink compatible device to attempt to have both sets of firmware boot up. When you restart the Loop app, it may show the correct firmware. Don't give up after one failure, try several times. If several power cycles do not make the correct firmware show up, contact the manufacturer for assistance. OrangeLink Firmware \u00b6 The OrangeLink devices allow the user to update the firmware on the device using an app on the phone itself (available for iPhone 7 and later devices). OrangeLink Firmware Update A number of OrangeLink Pro devices were shipped with FW2.6 and for people who already had OrangeLink devices, a version of FW2.6 was offered for download. However, this firmware did not work well with Loop (or AndroidAPS). If you are having communication issues, update to the latest firmware FW3.2 using the link above If you are not having communication issues, the update is optional For OrangeLink (not Pro, HW version 1.0), FW2.5 or FW3.2 are OK For OrangeLink Pro (HW version 1.1), FW1.0 or FW3.2 are OK See link above to check if versions newer than FW3.2 have been released, LoopDocs might not have the latest information Firmware/Hardware Labeling Earlier versions of the OrangeLink firmware did not put the hardware (HW) version and the firmware version (FW) in the \"correct\" location to hand off to Loop for interpretation. Do not worry if you are running on any FW version 1.x or 2.x and your HW version number doesn't say 1.0 or 1.1. This has been fixed for FW versions 3.x. EmaLink and OrangeLink Features \u00b6 Some of the features of the OrangeLink were added to the RileyLink Display with Loop 2.2.x. However, as mentioned above, the FW and HW information in some OrangeLink firmware was inconsistent in earlier versions. The consequence is that the OrangeLink Pro screen does not show the Find Device feature that many people want to use with the versions of firmware that provide good communication with Loop. The patch listed below fixes this issue. The EmaLink features were not added with Loop 2.2.x. The patch listed below adds some EmaLink features. EmaLink and OrangeLink Patch \u00b6 A patch was developed to update the RileyLink screen of the Loop app that detects the OrangeLink hardware for all versions of the OrangeLink firmware and adds the battery level reporting and notification to the EmaLink screen. Click on the link below. There are detailed instructions on how to use this patch for Loop 2.2.x. EmaLink and OrangeLink Patch RileyLink Information \u00b6 Since the RileyLink version of the communication link device has been around the longest, some additional information about that device has been added to LoopDocs throughout the years. The rest of this page is specific just to the RileyLink device. RileyLink Assembly \u00b6 Your RileyLink will come with the Lithium-ion Polymer (LiPo) battery disconnected and the parts not already inside the case. It will be up to you to put the RileyLink in the case and attach the battery. Make sure the LiPo battery is well-plugged into the connection. Line up the little ridge appropriately, and push fairly firmly to get the connection tight. Poor battery cable connection can make the Loop communications fail. See photos below, for example. Common new user errors The most common two errors for new RileyLink owners are (1) not fully pushing in the LiPo battery cable connection and (2) failing to charge the RileyLink . Compare your LiPo battery cable with the photos; it takes a bit of oomph to push that plug fully in like the photos shown below. Remember to charge your RileyLink each night. Loose battery cable on left. Proper battery cable on right Finally, the board and the battery fit into the slim case fairly tightly as well. Click on the image below to watch a helpful assembly video . RileyLink Lights \u00b6 The RileyLink has several lights that you may notice from time to time. There is no 'power' light. If you suspect that your RileyLink is not being powered, try turning it off and on using the small sliding switch. You should see lights in the middle of the board flash when you do this. If they flash, that means the board has power. Red light: Charging light. The red light will remain on while RileyLink is charging, and it will turn off when charging is complete. You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\". Green light: Bluetooth connection light. The green light will remain on while you have a BT connection with your iPhone. If that green light fails to stay on, you should troubleshoot your BT connections. Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch. Blue light: Pump communications. If you have an older firmware on your RileyLink , some of the blue lights will flash periodically as it communicates with the pump. It's just letting you know that it is busy talking and collecting info. You will also see increased blue flashes if you have \"Enabled Diagnostic LEDs\" for Medtronic users that have the RileyLinks with updated firmware (shipping since late August 2018). A solid blue light that consistently remains lit on the board could mean one of two things: A temporary issue that can be resolved by rebooting the RileyLink physically (turning the switch off/on), or An electrical short or damage to the board. Sweat and moisture are most likely culprits, so try to keep case free from those environments. Don't keep RileyLink in sports bras or waistband next to skin, for example, while exercising. If your blue light remains on despite trying a restart, it is time to pull out your backup RileyLink . RileyLink Charging \u00b6 The battery that comes with RileyLink is not charged completely when it is shipped, so be sure to charge it up before initial use. RileyLink takes about 2 hours to fully charge (the red light will turn off when fully charged, read note above about red light patterns) and should easily last at least a full day of constant Loop use. Typically, it can go into the 30-hour range without any problems. Most people charge their RileyLink each night when they are sleeping. You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging. It will automatically stop charging the battery when it is fully charged. Since the best practice is to charge your RileyLink overnight while you sleep, and the battery lasts safely over 24 hours, there is no battery level indicator for the RileyLink . The RileyLink 's charge level is not viewable on Nightscout, nor within the Loop app. If you forget to charge your RileyLink overnight, you can recharge it with a portable USB battery in a pinch. A short mini-USB cable could be a good addition to a small gear bag. What are the differences between the RileyLink Medtronic and Omnipod Antennas? \u00b6 There are two types of antennas for RileyLinks; each antenna is optimized for the pump you are using. Otherwise they are identical. See RileyLink Compatible Devices for other devices. The OrangeLink has both antennas included in its design and can talk to either Medtronic or Omnipod . The EmaLink requires selection for type of pump. The color of the RileyLink circuit board in the photos below is irrelevant. What will happen if your RileyLink has the wrong antenna? \u00b6 You can technically use that RileyLink with either pump on Loop. But, you will have significant frustrations and probably a lot of red loops. With mismatched antenna/pump, the device needs to be very close (think inches) and in clear line-of-sight to pump/pod. This makes everyday living (and sleeping) a bit hard. If you use the appropriate-antenna-for-your-pump device, the distances the pump/pod and RileyLink can tolerate from each other is much more \"real world\" friendly and stable. The OrangeLink contains both antennas so will work with either pump. This may be a good choice if you like to switch between Medtronic and Omnipod . In a pinch, if you have a RileyLink that you used with a Medtronic pump and have switched to Omnipod , it might work as a backup, but you won't love it. How long will my RileyLink go between charging? \u00b6 RileyLinks can go about 30-36 hours on a single charge. There is no way to see the remaining charge level, so most people just get into the habit of charging overnight while they sleep. The actual time to fully recharge is about 1 or 2 hours; you'll know it is fully charged when the red light turns off. After a full charge, the red light will turn off and then periodically turn on for short times while it \"tops off\" while still on a charger. How can I tell how much charge my RileyLink has? \u00b6 You can't. There is no charge level indicator. Just charge it nightly, and you won't have a problem. Full battery charge should last about 30-36 hours depending on battery health. Charging takes less than 2 hours. How long will my RileyLink battery last? \u00b6 Eventually, Lithium-ion Polymer (LiPo) batteries will lose charging capacity. You would want to replace if you notice the battery not lasting the full day. Many people report using their battery for more than 2 years without issue. Be aware that if a battery is failing, it may swell. If you notice that the RileyLink battery is swollen, remove the swollen battery from your home and place in a fire-safe area and recycle it properly. Either order a new battery or pull out your spare. After a year of use (and a year of being dropped), the antenna may no longer be securely soldered. If you are getting a lot of red loops, it might be a poor antenna connection instead of a failing battery. Check the solder joint at the antenna. The solder should be shiny and the antenna base should be firmly attached to the board. RileyLink Battery \u00b6 Keep your RileyLink and its Lithium-ion Polymer (LiPo) battery protected from damage. LiPo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping. If your battery is damaged in some way, please disconnect it immediately, and dispose of it (they should be recycled). You can order new RileyLink batteries on the GetRileyLink website RileyLink Battery Removal \u00b6 To remove the LiPo battery from the RileyLink , please do so slowly and patiently. Work the battery connection side to side slowly to loosen it from the plug. Some people have reported success using small, curved needle-nose pliers such as hemostats. Others have used small flathead screwdrivers as shown in this video .","title":"RileyLink FAQs"},{"location":"faqs/rileylink-faqs/#rileylink-compatible-device-faqs","text":"A RileyLink compatible device is a required part of Loop for Medtronic and Omnipod (Eros not DASH) pumps. The device uses the RileyLink protocol to communicate information to/from your pump by radio communications and to/from your iPhone using Bluetooth. You will need the device within range of your phone and pump so that these communications can happen. Put it in a purse, pocket, SPIbelt. Clip it to a backpack, belt, or bra...but please do bring it with you.. Purchase information for these devices is found in RileyLink Compatible Devices","title":"RileyLink Compatible Device FAQs"},{"location":"faqs/rileylink-faqs/#adding-or-changing-rileylink","text":"You can add or change the RileyLink compatible device in use without affecting the pump that is connected to the Loop app. You can even have more than one connected , although only one will be used at a time. If you are connecting to a new Medtronic pump or switching between Medtronic and Omnipod , please follow the Add Pump instructions under Set up App. Change Connected Devices: Open the Pump Menu for your connected pump Scroll down to the DEVICES section There should already be at least one device listed Power on your new device and look for a new device to appear in the list If this device has never been connected before, it might appear as a blank line with a slider beside it - if so, slide the slider to turn it green and then the device name should appear You can now turn sliders on or off to select which device you want to use with your connected pump Refer to the RileyLink Menu for instructions on personalizing your device name","title":"Adding or Changing RileyLink"},{"location":"faqs/rileylink-faqs/#using-more-than-one-device","text":"You can have more than one RileyLink compatible device turned on and connected. Loop only uses one device at a time. Remember - if you do have two devices in use, make sure they are both charged (or have batteries). Example of using more than one device: One device is kept in the bedroom and another in the kitchen Loop will automatically switch to the device that is within Bluetooth range at the next cycle (Loop stays green) Caveats: The phone needs to be close enough to get the CGM update Do NOT forget to pick up one RileyLink device and take it with you when you leave the house","title":"Using More Than One Device"},{"location":"faqs/rileylink-faqs/#communications","text":"All the RileyLink compatible devices communicate with the pump through radio frequency communications and with the phone through Bluetooth. Bluetooth (BT) Troubleshooting If your iPhone has BT issues, your Loop will have failures. There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interfering with the Loop. If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area. Your BT signal strength can be seen in the Loop settings, Pump settings, Device menu, on the Signal Strength line. As you move closer and further away from your phone, you can watch that number dynamically change. This line is not displaying the signal strength of your pump RF communications, just BT between the RileyLink compatible device and the phone. You will notice the Signal Strength is a negative number and in units of dB. Remember that number line from elementary school? A signal strength of -50 dB is a stronger signal than -80 dB.","title":"Communications"},{"location":"faqs/rileylink-faqs/#range","text":"The range at which RileyLink compatible devices will function is dependent on the environment that you are in and the specific device design. Both the OrangeLink and some sizes of the EmaLink have reported longer ranges than RileyLink (typically 10 to 20 ft) - but they still need to be \"near enough\". What influences this distance for a given device? The biggest external influences are (1) body-blocking and (2) \"noisy\" environments. The human body is a lot of water, and water is an excellent blocker of wireless communication. So, sleeping on a pod and smothering it entirely with your body can decrease the ability of the device to communicate with the pod. Environments with a high concentration of wireless signals can also interfere with device communications and make closer proximity a benefit. Where might those kinds of situations happen? Concerts, conferences, and sporting arenas are pretty prone to interference. Many people keep their device on the same side of their body as their pump during the day. They use a pocket, carabiner, lanyard, SPIbelt - the options are endless. What you don't want to do is put it in a blocking bag that has RFID blocking (some travel fanny packs have that).","title":"Range"},{"location":"faqs/rileylink-faqs/#what-happens-if-loop-loses-communication","text":"While you are out of the communication range for your RileyLink compatible device(s), any running temp basal will keep going until it finishes (the longest temp basal that Loop sets are for 30 minutes duration...so within 30 minutes or less your pump would go back to your regularly scheduled basal). When you come back into range of your device, Loop will pick back up within 5-10 minutes without you needing to do anything.","title":"What happens if Loop loses communication?"},{"location":"faqs/rileylink-faqs/#are-these-devices-waterproof","text":"The electronics are not waterproof but there waterproof cases available and some have wireless charging available. Check with the manufacturer. RileyLink Compatible Device Information","title":"Are these devices waterproof?"},{"location":"faqs/rileylink-faqs/#firmware-version","text":"In Loop settings, tap on your pump, find your device ( RileyLink or other) and tap on that menu. The figure below shows firmware specific to the RileyLink . If you have another type of device, the firmware value reported will be different. (Note - the displays for Ema, Orange and Riley have been updated to include device-specific features as shown in the RileyLink Display page. The graphic below shows the original RileyLink display.) With RileyLink , the firmware displayed should match or be a higher version number than what is shown in the figure above, e.g., subg_rfspy 2.2/ble_rfspy 2.0 . (If you are running with a very old RileyLink from pre-Aug 2018, it might be a lower number.) Check it when the device is working well and make a note of what it says. If you're having Red Loops, you might want to check firmware and connected state. Make sure, after power cycling your device, that the correct firmware is displayed AND that there are two items shown. In the example above: subg_rfspy 2.2 is the sub-gigahertz radio frequency firmware that talks to the insulin pump (if this does not show up, the device will talk to the phone but not the pump) ble_rfspy 2.0 is the Bluetooth firmware that talks to the phone (if this is not working, you will not even see the device in the list) HINT: You might need to quit the Loop app. (Don't just close it, actually quit.) Then do the power cycle on the RileyLink compatible device to attempt to have both sets of firmware boot up. When you restart the Loop app, it may show the correct firmware. Don't give up after one failure, try several times. If several power cycles do not make the correct firmware show up, contact the manufacturer for assistance.","title":"Firmware version"},{"location":"faqs/rileylink-faqs/#orangelink-firmware","text":"The OrangeLink devices allow the user to update the firmware on the device using an app on the phone itself (available for iPhone 7 and later devices). OrangeLink Firmware Update A number of OrangeLink Pro devices were shipped with FW2.6 and for people who already had OrangeLink devices, a version of FW2.6 was offered for download. However, this firmware did not work well with Loop (or AndroidAPS). If you are having communication issues, update to the latest firmware FW3.2 using the link above If you are not having communication issues, the update is optional For OrangeLink (not Pro, HW version 1.0), FW2.5 or FW3.2 are OK For OrangeLink Pro (HW version 1.1), FW1.0 or FW3.2 are OK See link above to check if versions newer than FW3.2 have been released, LoopDocs might not have the latest information Firmware/Hardware Labeling Earlier versions of the OrangeLink firmware did not put the hardware (HW) version and the firmware version (FW) in the \"correct\" location to hand off to Loop for interpretation. Do not worry if you are running on any FW version 1.x or 2.x and your HW version number doesn't say 1.0 or 1.1. This has been fixed for FW versions 3.x.","title":"OrangeLink Firmware"},{"location":"faqs/rileylink-faqs/#emalink-and-orangelink-features","text":"Some of the features of the OrangeLink were added to the RileyLink Display with Loop 2.2.x. However, as mentioned above, the FW and HW information in some OrangeLink firmware was inconsistent in earlier versions. The consequence is that the OrangeLink Pro screen does not show the Find Device feature that many people want to use with the versions of firmware that provide good communication with Loop. The patch listed below fixes this issue. The EmaLink features were not added with Loop 2.2.x. The patch listed below adds some EmaLink features.","title":"EmaLink and OrangeLink Features"},{"location":"faqs/rileylink-faqs/#emalink-and-orangelink-patch","text":"A patch was developed to update the RileyLink screen of the Loop app that detects the OrangeLink hardware for all versions of the OrangeLink firmware and adds the battery level reporting and notification to the EmaLink screen. Click on the link below. There are detailed instructions on how to use this patch for Loop 2.2.x. EmaLink and OrangeLink Patch","title":"EmaLink and OrangeLink Patch"},{"location":"faqs/rileylink-faqs/#rileylink-information","text":"Since the RileyLink version of the communication link device has been around the longest, some additional information about that device has been added to LoopDocs throughout the years. The rest of this page is specific just to the RileyLink device.","title":"RileyLink Information"},{"location":"faqs/rileylink-faqs/#rileylink-assembly","text":"Your RileyLink will come with the Lithium-ion Polymer (LiPo) battery disconnected and the parts not already inside the case. It will be up to you to put the RileyLink in the case and attach the battery. Make sure the LiPo battery is well-plugged into the connection. Line up the little ridge appropriately, and push fairly firmly to get the connection tight. Poor battery cable connection can make the Loop communications fail. See photos below, for example. Common new user errors The most common two errors for new RileyLink owners are (1) not fully pushing in the LiPo battery cable connection and (2) failing to charge the RileyLink . Compare your LiPo battery cable with the photos; it takes a bit of oomph to push that plug fully in like the photos shown below. Remember to charge your RileyLink each night. Loose battery cable on left. Proper battery cable on right Finally, the board and the battery fit into the slim case fairly tightly as well. Click on the image below to watch a helpful assembly video .","title":"RileyLink Assembly"},{"location":"faqs/rileylink-faqs/#rileylink-lights","text":"The RileyLink has several lights that you may notice from time to time. There is no 'power' light. If you suspect that your RileyLink is not being powered, try turning it off and on using the small sliding switch. You should see lights in the middle of the board flash when you do this. If they flash, that means the board has power. Red light: Charging light. The red light will remain on while RileyLink is charging, and it will turn off when charging is complete. You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\". Green light: Bluetooth connection light. The green light will remain on while you have a BT connection with your iPhone. If that green light fails to stay on, you should troubleshoot your BT connections. Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch. Blue light: Pump communications. If you have an older firmware on your RileyLink , some of the blue lights will flash periodically as it communicates with the pump. It's just letting you know that it is busy talking and collecting info. You will also see increased blue flashes if you have \"Enabled Diagnostic LEDs\" for Medtronic users that have the RileyLinks with updated firmware (shipping since late August 2018). A solid blue light that consistently remains lit on the board could mean one of two things: A temporary issue that can be resolved by rebooting the RileyLink physically (turning the switch off/on), or An electrical short or damage to the board. Sweat and moisture are most likely culprits, so try to keep case free from those environments. Don't keep RileyLink in sports bras or waistband next to skin, for example, while exercising. If your blue light remains on despite trying a restart, it is time to pull out your backup RileyLink .","title":"RileyLink Lights"},{"location":"faqs/rileylink-faqs/#rileylink-charging","text":"The battery that comes with RileyLink is not charged completely when it is shipped, so be sure to charge it up before initial use. RileyLink takes about 2 hours to fully charge (the red light will turn off when fully charged, read note above about red light patterns) and should easily last at least a full day of constant Loop use. Typically, it can go into the 30-hour range without any problems. Most people charge their RileyLink each night when they are sleeping. You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging. It will automatically stop charging the battery when it is fully charged. Since the best practice is to charge your RileyLink overnight while you sleep, and the battery lasts safely over 24 hours, there is no battery level indicator for the RileyLink . The RileyLink 's charge level is not viewable on Nightscout, nor within the Loop app. If you forget to charge your RileyLink overnight, you can recharge it with a portable USB battery in a pinch. A short mini-USB cable could be a good addition to a small gear bag.","title":"RileyLink Charging"},{"location":"faqs/rileylink-faqs/#what-are-the-differences-between-the-rileylink-medtronic-and-omnipod-antennas","text":"There are two types of antennas for RileyLinks; each antenna is optimized for the pump you are using. Otherwise they are identical. See RileyLink Compatible Devices for other devices. The OrangeLink has both antennas included in its design and can talk to either Medtronic or Omnipod . The EmaLink requires selection for type of pump. The color of the RileyLink circuit board in the photos below is irrelevant.","title":"What are the differences between the RileyLink Medtronic and Omnipod Antennas?"},{"location":"faqs/rileylink-faqs/#what-will-happen-if-your-rileylink-has-the-wrong-antenna","text":"You can technically use that RileyLink with either pump on Loop. But, you will have significant frustrations and probably a lot of red loops. With mismatched antenna/pump, the device needs to be very close (think inches) and in clear line-of-sight to pump/pod. This makes everyday living (and sleeping) a bit hard. If you use the appropriate-antenna-for-your-pump device, the distances the pump/pod and RileyLink can tolerate from each other is much more \"real world\" friendly and stable. The OrangeLink contains both antennas so will work with either pump. This may be a good choice if you like to switch between Medtronic and Omnipod . In a pinch, if you have a RileyLink that you used with a Medtronic pump and have switched to Omnipod , it might work as a backup, but you won't love it.","title":"What will happen if your RileyLink has the wrong antenna?"},{"location":"faqs/rileylink-faqs/#how-long-will-my-rileylink-go-between-charging","text":"RileyLinks can go about 30-36 hours on a single charge. There is no way to see the remaining charge level, so most people just get into the habit of charging overnight while they sleep. The actual time to fully recharge is about 1 or 2 hours; you'll know it is fully charged when the red light turns off. After a full charge, the red light will turn off and then periodically turn on for short times while it \"tops off\" while still on a charger.","title":"How long will my RileyLink go between charging?"},{"location":"faqs/rileylink-faqs/#how-can-i-tell-how-much-charge-my-rileylink-has","text":"You can't. There is no charge level indicator. Just charge it nightly, and you won't have a problem. Full battery charge should last about 30-36 hours depending on battery health. Charging takes less than 2 hours.","title":"How can I tell how much charge my RileyLink has?"},{"location":"faqs/rileylink-faqs/#how-long-will-my-rileylink-battery-last","text":"Eventually, Lithium-ion Polymer (LiPo) batteries will lose charging capacity. You would want to replace if you notice the battery not lasting the full day. Many people report using their battery for more than 2 years without issue. Be aware that if a battery is failing, it may swell. If you notice that the RileyLink battery is swollen, remove the swollen battery from your home and place in a fire-safe area and recycle it properly. Either order a new battery or pull out your spare. After a year of use (and a year of being dropped), the antenna may no longer be securely soldered. If you are getting a lot of red loops, it might be a poor antenna connection instead of a failing battery. Check the solder joint at the antenna. The solder should be shiny and the antenna base should be firmly attached to the board.","title":"How long will my RileyLink battery last?"},{"location":"faqs/rileylink-faqs/#rileylink-battery","text":"Keep your RileyLink and its Lithium-ion Polymer (LiPo) battery protected from damage. LiPo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping. If your battery is damaged in some way, please disconnect it immediately, and dispose of it (they should be recycled). You can order new RileyLink batteries on the GetRileyLink website","title":"RileyLink Battery"},{"location":"faqs/rileylink-faqs/#rileylink-battery-removal","text":"To remove the LiPo battery from the RileyLink , please do so slowly and patiently. Work the battery connection side to side slowly to loosen it from the plug. Some people have reported success using small, curved needle-nose pliers such as hemostats. Others have used small flathead screwdrivers as shown in this video .","title":"RileyLink Battery Removal"},{"location":"faqs/safety-faqs/","text":"Safety Tips \u00b6 Beware the Medtronic Easy Bolus button \u00b6 Medtronic's easy bolus button has been the cause of several accidental boluses when the pump has been carried in a pocket. Best practice would be to disable the Easy Bolus button since you will be doing boluses from the phone anyways. Health app permissions \u00b6 Do not let other apps, such as Spike App or MyFitnessPal, on your iPhone write carbohydrates to Health app. Loop could read those carbohydrates and you could be dosed for those carbohydrates. Check your Health permissions. Finish your Medtronic priming \u00b6 After a site change and reservoir rewind, Medtronic's pump will have a menu on the pump screen related to finishing your prime. Make sure you complete that screen and always return to the main menu. Medtronic's pump won't resume basal insulin delivery until that priming screen is completed. Know your settings \u00b6 Do not enter in settings that you are unsure of. For example, if you haven't any idea what your carb ratio is, please don't enter a zero or a wild guess. Instead, test your settings and talk to your health care provider about what your appropriate settings should be. How to Cancel Carbs \u00b6 Once carbohydrates are entered into Loop, the algorithm will begin to dose insulin to anticipate those carbs. If you entered carbs and then changed your mind on the amount or the time at which they were eaten, use these instructions to delete or edit them. This will make Loop better able to predict blood glucose and adjust insulin delivery appropriately. Make sure Health permissions are set for Loop to Write but not Read carbs. This avoids a scenario where Loops reads entries from a third-party app. These carbs cannot be edited within Loop.","title":"Safety Tips"},{"location":"faqs/safety-faqs/#safety-tips","text":"","title":"Safety Tips"},{"location":"faqs/safety-faqs/#beware-the-medtronic-easy-bolus-button","text":"Medtronic's easy bolus button has been the cause of several accidental boluses when the pump has been carried in a pocket. Best practice would be to disable the Easy Bolus button since you will be doing boluses from the phone anyways.","title":"Beware the Medtronic Easy Bolus button"},{"location":"faqs/safety-faqs/#health-app-permissions","text":"Do not let other apps, such as Spike App or MyFitnessPal, on your iPhone write carbohydrates to Health app. Loop could read those carbohydrates and you could be dosed for those carbohydrates. Check your Health permissions.","title":"Health app permissions"},{"location":"faqs/safety-faqs/#finish-your-medtronic-priming","text":"After a site change and reservoir rewind, Medtronic's pump will have a menu on the pump screen related to finishing your prime. Make sure you complete that screen and always return to the main menu. Medtronic's pump won't resume basal insulin delivery until that priming screen is completed.","title":"Finish your Medtronic priming"},{"location":"faqs/safety-faqs/#know-your-settings","text":"Do not enter in settings that you are unsure of. For example, if you haven't any idea what your carb ratio is, please don't enter a zero or a wild guess. Instead, test your settings and talk to your health care provider about what your appropriate settings should be.","title":"Know your settings"},{"location":"faqs/safety-faqs/#how-to-cancel-carbs","text":"Once carbohydrates are entered into Loop, the algorithm will begin to dose insulin to anticipate those carbs. If you entered carbs and then changed your mind on the amount or the time at which they were eaten, use these instructions to delete or edit them. This will make Loop better able to predict blood glucose and adjust insulin delivery appropriately. Make sure Health permissions are set for Loop to Write but not Read carbs. This avoids a scenario where Loops reads entries from a third-party app. These carbs cannot be edited within Loop.","title":"How to Cancel Carbs"},{"location":"faqs/update-faqs/","text":"Updating/Rebuilding Loop FAQs \u00b6 First, please take a minute to understand what the words mean. \"Updating Loop\" is the process downloading a new version of Loop code \"Rebuilding Loop\" is the process of using your existing download of Loop code In both cases, you build the code with Xcode to install over an existing app on your phone or onto a new device. For the rest of this page, the word Update is used. For most people, it is simplest just the use the build select script which automatically downloads fresh code every time. If you have a very slow download speed or if you do a lot of customizations, it may be worth your time to decide if you need a new download. Use Finder to check the date of your last download by looking in the Downloads/BuildLoop folder Check the date of the last Loop release at GitHub LoopKit/Loop release page If the date in Finder is after the release date, double click on the Loop.xcworkspace file using these instructions When Should I Update? \u00b6 Best Practice Build if a serious bug-fix is reported Build, using the Updating Instructons , two to four times a year so that it becomes easier and you are ready in case of an emergency Each time you build, the app expiration date is bumped out a full year from your build date Required When your one-year expiration date forces you Do not wait until the app expires - it will stop working; see Loop is No Longer Available Hint - start a few weeks early and take your time Optional A new version of Loop is released and you want to install it You want to try a different branch or fork of Loop Steps to Update \u00b6 Updating Loop is the same idea as what happens to your other apps on your iPhone when you update them from the App Store on the phone. A refreshed version of the same app appears on the phone, simply updating-in-place the same Loop you were using with an updated version. Do NOT delete your current app from your phone - even if it says \"Loop is No Longer Available\" There are files stored on your phone that will be read in as soon as the new Loop app is installed If you deleted your app, then you have to enter all your settings again This is a good time to configure your phone to avoid accidental deletion Do an internet search like this: \" iOS 15.4 prevent app deletion\" where you use your current phone iOS version number and follow the instructions Typical Apple Update Schedule: \u00b6 Each September, Apple releases a major iOS version which typically works with the current macOS but requires a new Xcode version Each September, Apple releases a major macOS version (but doesn't require you to update your Mac, yet) Each March, you must update to the current macOS (major version) to continue building applications Where should I start when I want to update my Loop? \u00b6 ALWAYS start with the Update Loop page before any new build that you'd be doing. That page is important because it will offer information on the updates you need to do before building, as well as information that might need to be considered. Do not simply build with your old downloaded folder from months ago. There is a high likelihood that your original code from awhile ago is outdated and might not build with the current phone iOS . Grab new code and you will get the compatible version that has all the latest and greatest features and bug fixes. Will I have to delete my old Loop app? \u00b6 No. Do not delete your old Loop. In fact, that is a bad idea as you will lose your currently paired pod and/or settings if you do that. So, don't delete. The exception to the rule is if you build Loop dev on your phone and want to return to Loop 2.2.x or any FreeAPS fork . Refer to What if I change the branch or fork ? Does updating make a separate, second Loop app? \u00b6 No. Loop is simply updated in-place, written right over the old version. The only exception to this is if you update/build using a different developer signing team than your current Loop app. The app's identity on your phone is defined by the developer ID. If you change that unique ID, your phone interprets that as a unique app as well...giving you two Loop apps on the phone. Therefore, if changing developer accounts...you will get a new Loop app, and you would need a new Pod. You'll need to transfer your settings manually to the new app and delete your old app. Will my settings be saved when I update? \u00b6 Yes. That's why we don't delete the app. Your settings will be saved so long as you use the same developer ID. Will my pod still work when I update? \u00b6 Yes. So long as you use the same developer ID as you originally built the app with before. How can I confirm what version was installed? \u00b6 The Loop version is given at the top of the Loop settings page. There is more detailed information about how the Loop app was built at the top of the Issue Report (Loop -> Settings -> Issue Report) as shown in the graphic in the next section. How can I confirm Xcode version I used? \u00b6 The information in the graphic below includes the Xcode version number used for the build. In this case, the major version for Xcode is 12 and the minor version is 5 (E is the 5th letter of the English alphabet). The main thing to notice for this example is the Loop app was built with Xcode version 12.5. If this phone was subsequently upgraded to iOS 15, the Loop app would continue to work. DO NOT INSTALL iOS 15 if the Xcode version on your Loop build is 12D or earlier - the Loop app will immediately stop working and you will have to rebuild Loop. Profile Expiration The profile expiration will not be shown for Loop v2.2.4 or earlier. For this example, the profile expires much sooner than 12 months after the Loop app was built Updating: Delete Provisioning Profiles provides instructions to delete your old provisioning profile when building your Loop app - this gives you a full year after you build What if I change the branch or fork ? \u00b6 Does not matter. Changing the branch and even the fork is an \"updating Loop\" action. Nothing about the information above changes with the following exception. The exception to the rule is if you build Loop dev on your phone and want to return to Loop 2.2.x or any FreeAPS fork . In this case, the database storage is different between Loop 3 and Loop 2.2.x Loop dev can read the data stored by Loop 2.2.x, but the reverse is not true If you are downgrading from Loop dev to Loop 2.2.x or FreeAPS, you need to first record settings, delete the old app and then build the desired app, enter your settings and add your pump (new pod required for Omnipod ) What if I'm changing phones? \u00b6 Changing phones is a little different than just updating . New Phone Checklist When you change phones, Apple will force you to the latest iOS version Make sure you can build to that iOS version before trying to transfer Loop to the new phone You can use the old phone as your looping phone until you get the new one ready When turning the old phone in for a rebate, you typically have a week or two before you have to turn it in When you transfer information from your old phone to your new phone, all the Loop settings files get copied to the new device including information about the pod (if one is running) You then need to build Loop on the new phone and it remembers those settings It's a good idea to do this at pod change time, just in case, and to record (or screenshot) all your settings Once the transfer is completed check all your settings and all your permissions on the new phone You can find the instructions written up in this article . How long does it take? \u00b6 Assuming your macOS and Xcode updates are done, then plan on about 30 minutes.","title":"Update/Rebuild Loop FAQs"},{"location":"faqs/update-faqs/#updatingrebuilding-loop-faqs","text":"First, please take a minute to understand what the words mean. \"Updating Loop\" is the process downloading a new version of Loop code \"Rebuilding Loop\" is the process of using your existing download of Loop code In both cases, you build the code with Xcode to install over an existing app on your phone or onto a new device. For the rest of this page, the word Update is used. For most people, it is simplest just the use the build select script which automatically downloads fresh code every time. If you have a very slow download speed or if you do a lot of customizations, it may be worth your time to decide if you need a new download. Use Finder to check the date of your last download by looking in the Downloads/BuildLoop folder Check the date of the last Loop release at GitHub LoopKit/Loop release page If the date in Finder is after the release date, double click on the Loop.xcworkspace file using these instructions","title":"Updating/Rebuilding Loop FAQs"},{"location":"faqs/update-faqs/#when-should-i-update","text":"Best Practice Build if a serious bug-fix is reported Build, using the Updating Instructons , two to four times a year so that it becomes easier and you are ready in case of an emergency Each time you build, the app expiration date is bumped out a full year from your build date Required When your one-year expiration date forces you Do not wait until the app expires - it will stop working; see Loop is No Longer Available Hint - start a few weeks early and take your time Optional A new version of Loop is released and you want to install it You want to try a different branch or fork of Loop","title":"When Should I Update?"},{"location":"faqs/update-faqs/#steps-to-update","text":"Updating Loop is the same idea as what happens to your other apps on your iPhone when you update them from the App Store on the phone. A refreshed version of the same app appears on the phone, simply updating-in-place the same Loop you were using with an updated version. Do NOT delete your current app from your phone - even if it says \"Loop is No Longer Available\" There are files stored on your phone that will be read in as soon as the new Loop app is installed If you deleted your app, then you have to enter all your settings again This is a good time to configure your phone to avoid accidental deletion Do an internet search like this: \" iOS 15.4 prevent app deletion\" where you use your current phone iOS version number and follow the instructions","title":"Steps to Update"},{"location":"faqs/update-faqs/#where-should-i-start-when-i-want-to-update-my-loop","text":"ALWAYS start with the Update Loop page before any new build that you'd be doing. That page is important because it will offer information on the updates you need to do before building, as well as information that might need to be considered. Do not simply build with your old downloaded folder from months ago. There is a high likelihood that your original code from awhile ago is outdated and might not build with the current phone iOS . Grab new code and you will get the compatible version that has all the latest and greatest features and bug fixes.","title":"Where should I start when I want to update my Loop?"},{"location":"faqs/update-faqs/#will-i-have-to-delete-my-old-loop-app","text":"No. Do not delete your old Loop. In fact, that is a bad idea as you will lose your currently paired pod and/or settings if you do that. So, don't delete. The exception to the rule is if you build Loop dev on your phone and want to return to Loop 2.2.x or any FreeAPS fork . Refer to What if I change the branch or fork ?","title":"Will I have to delete my old Loop app?"},{"location":"faqs/update-faqs/#does-updating-make-a-separate-second-loop-app","text":"No. Loop is simply updated in-place, written right over the old version. The only exception to this is if you update/build using a different developer signing team than your current Loop app. The app's identity on your phone is defined by the developer ID. If you change that unique ID, your phone interprets that as a unique app as well...giving you two Loop apps on the phone. Therefore, if changing developer accounts...you will get a new Loop app, and you would need a new Pod. You'll need to transfer your settings manually to the new app and delete your old app.","title":"Does updating make a separate, second Loop app?"},{"location":"faqs/update-faqs/#will-my-settings-be-saved-when-i-update","text":"Yes. That's why we don't delete the app. Your settings will be saved so long as you use the same developer ID.","title":"Will my settings be saved when I update?"},{"location":"faqs/update-faqs/#will-my-pod-still-work-when-i-update","text":"Yes. So long as you use the same developer ID as you originally built the app with before.","title":"Will my pod still work when I update?"},{"location":"faqs/update-faqs/#how-can-i-confirm-what-version-was-installed","text":"The Loop version is given at the top of the Loop settings page. There is more detailed information about how the Loop app was built at the top of the Issue Report (Loop -> Settings -> Issue Report) as shown in the graphic in the next section.","title":"How can I confirm what version was installed?"},{"location":"faqs/update-faqs/#how-can-i-confirm-xcode-version-i-used","text":"The information in the graphic below includes the Xcode version number used for the build. In this case, the major version for Xcode is 12 and the minor version is 5 (E is the 5th letter of the English alphabet). The main thing to notice for this example is the Loop app was built with Xcode version 12.5. If this phone was subsequently upgraded to iOS 15, the Loop app would continue to work. DO NOT INSTALL iOS 15 if the Xcode version on your Loop build is 12D or earlier - the Loop app will immediately stop working and you will have to rebuild Loop. Profile Expiration The profile expiration will not be shown for Loop v2.2.4 or earlier. For this example, the profile expires much sooner than 12 months after the Loop app was built Updating: Delete Provisioning Profiles provides instructions to delete your old provisioning profile when building your Loop app - this gives you a full year after you build","title":"How can I confirm Xcode version I used?"},{"location":"faqs/update-faqs/#what-if-i-change-the-branch-or-fork","text":"Does not matter. Changing the branch and even the fork is an \"updating Loop\" action. Nothing about the information above changes with the following exception. The exception to the rule is if you build Loop dev on your phone and want to return to Loop 2.2.x or any FreeAPS fork . In this case, the database storage is different between Loop 3 and Loop 2.2.x Loop dev can read the data stored by Loop 2.2.x, but the reverse is not true If you are downgrading from Loop dev to Loop 2.2.x or FreeAPS, you need to first record settings, delete the old app and then build the desired app, enter your settings and add your pump (new pod required for Omnipod )","title":"What if I change the branch or fork?"},{"location":"faqs/update-faqs/#what-if-im-changing-phones","text":"Changing phones is a little different than just updating . New Phone Checklist When you change phones, Apple will force you to the latest iOS version Make sure you can build to that iOS version before trying to transfer Loop to the new phone You can use the old phone as your looping phone until you get the new one ready When turning the old phone in for a rebate, you typically have a week or two before you have to turn it in When you transfer information from your old phone to your new phone, all the Loop settings files get copied to the new device including information about the pod (if one is running) You then need to build Loop on the new phone and it remembers those settings It's a good idea to do this at pod change time, just in case, and to record (or screenshot) all your settings Once the transfer is completed check all your settings and all your permissions on the new phone You can find the instructions written up in this article .","title":"What if I'm changing phones?"},{"location":"faqs/update-faqs/#how-long-does-it-take","text":"Assuming your macOS and Xcode updates are done, then plan on about 30 minutes.","title":"How long does it take?"},{"location":"intro/loopdocs-how-to/","text":"LoopDocs How-to \u00b6 Tooltips \u00b6 LoopDocs has words that may be unfamiliar. For a definition of any word with a dashed underline, simply hover your mouse over the word, or tap on the word on a mobile device, to view the definition. Every tootip definition is also found in the Glossary - so head over there if you have trouble reading the tooltips. How to Find Help \u00b6 Volunteers generously provide support for Loop via online platforms. You have a number of options for joining conversations on loop and asking for help. Links to the main platforms are listed below. Non-US Loop users in Italy, Australia, and several other countries have also formed Facebook (FB) groups. The Looped Group on Facebook. Looped Group is the original FB group for DIY looping systems. There are lot of active members there with an excellent history of helping people. Loop and Learn is a community that provides Loop-centric information, a T1D Speaker Series covering many topics of general diabetes interest as well as Loop-specific chats, alerts whenever there is an update to iOS and Xcode , Quick Tips and articles written by mentors providing their Loop experience. LoopandLearn Facebook Group LoopandLearn Website LoopandLearn YouTube Channel The LoopTips website provides non-build information that is helpful once you are looping, e.g., how to print endo reports, find Loop data, deal with therapy settings changes, etc. Many Loopers use a companion app called Nightscout. Nightscout help can be found in the CGM in the Cloud Facebook group. For those interested in what is coming next for Loop and those who prefer not to use Facebook, join Loop Zulipchat and be sure to subscribe to all the streams or you'll miss some interesting conversations. Loop has an instagram account @diy.loop where some updates are shared. How to Ask for Help \u00b6 If you are having trouble building or using your Loop app, there are some important steps to get responses to your question, while also being considerate of our volunteers' time. Always search in both LoopDocs and your favorite support group . Confused on how to search in a Facebook group? Here is a video to help. If you use Facebook, click on the Featured posts (at top of page); many posts asking for help are already answered there. Don't post a duplicate question in multiple groups (mentors monitor many groups). Only post to a different group if you have had no responses for several hours. If a LoopDocs search, FB or zulipchat search, and a check of Looped Group featured posts pinned to top of the page haven't answered your question, then post for help. Review the tips for how to post for help so that our volunteers get all the information they'll need to help you, without needing to ask 40 questions first. Leave your question posted even after you've gotten an answer, but edit the original post to add the word RESOLVED at the beginning of the original post. This helps other Loopers who have the same question This helps mentors know they don't need to respond to help you How to use LoopDocs \u00b6 Website Short Cuts \u00b6 One of our awesome Loop volunteers captured the domain names loopdocs.org and looptips.org . So you can find these valuable websites by simply typing loopdocs or looptips followed by .org in your browser. In other words, you don't need to remember or type https://loopkit.github.io/loopdocs/ . Website Navigation \u00b6 There are a lot of links you can click on this website. Some links take you to a different section of the same page Some links take you to a different page in LoopDocs Some links take you to a different website If you click on the link, you are moved to the new location and must hit the back button on your browser to return. You can choose to open that link in a new window or new tab. If your mouse has a right button, then right click the link On a Mac with no right button, hold down the Control key and click On a mobile device, click and hold the link and choose where to open the link Keyboard Navigation When viewing the site at a computer, you can use keys as shortcuts: n for next page p for previous page s for search The website navigation depends on whether you are on a mobile device or a computer (with browser width > 1220 pixels). For the wide-view: The tabs for the different sections of LoopDocs are visible across the top of the browser Once a tab is selected: That tab is highlighted The list of pages in that tab is displayed on the left side The Table of Contents for the current page is displayed on the right side For the mobile (or narrow) display: From the Home page, tap the Hamburger Menu to display the tabs for the different sections of LoopDocs Once a tab is selected: The list of pages in that tab is displayed in the Hamburger Menu To return to the main tab list, tap the back arrow To see the Table of Contents , use the Hamburger Menu and scroll to the highlighted page (current page) and tap again Website Search \u00b6 It is not uncommon to have a question about Loop. But, it is exceptionally rare to have the question not already answered in LoopDocs, so please search for answers by selecting the Search tool (upper right) or typing s then a search term at a computer. As you begin to type, suggested completions and links to pages are displayed. Click on the item you think answers your question. How to Improve LoopDocs \u00b6 Please submit suggestions for updates and improvements to this documentation. There are many pages of content and we welcome reviewers to help find typos and outdated info/links. If you notice a typo, poor word choice or some explanation that could be improved or clarified, there are a few options. The first two options use github, a website where open-source code and documentation is often shared. You can only use github if you have an account (it's free). You can issue a Pull Request (best option if it is a simple typo or wording update) You can open an Issue (best option if a major rewrite is needed or you think a conversation would help), or You can post on Facebook or Zulipchat Pull Requests and Issues \u00b6 If you decide to do a Github Pull Request ( PR ) or create an Issue , first look to see if someone has already opened a PR or Issue on the topic so you don't create a duplicate. If a PR or Issue on the topic is open, feel free to add your comments (don't be shy), but please don't create a duplicate If a PR doesn't exist, watch this LoopDocs Pull Request video on how to create one (it's easy, video is less than 5 minutes) If your Issue is new, please add it by clicking on the New Issue button Give the Issue a descriptive title Indicate which page or pages need updating , along with a brief description of the problem(s) Facebook or Zulipchat \u00b6 Helpful tips for providing LoopDocs feedback through Facebook and/or Zulipchat: In Looped Group - make sure your post is clear that you have a comment about LoopDocs in particular. In Loop Zulipchat, please use the documentation stream, Loopdocs Issue channel.","title":"LoopDocs How-to"},{"location":"intro/loopdocs-how-to/#loopdocs-how-to","text":"","title":"LoopDocs How-to"},{"location":"intro/loopdocs-how-to/#tooltips","text":"LoopDocs has words that may be unfamiliar. For a definition of any word with a dashed underline, simply hover your mouse over the word, or tap on the word on a mobile device, to view the definition. Every tootip definition is also found in the Glossary - so head over there if you have trouble reading the tooltips.","title":"Tooltips"},{"location":"intro/loopdocs-how-to/#how-to-find-help","text":"Volunteers generously provide support for Loop via online platforms. You have a number of options for joining conversations on loop and asking for help. Links to the main platforms are listed below. Non-US Loop users in Italy, Australia, and several other countries have also formed Facebook (FB) groups. The Looped Group on Facebook. Looped Group is the original FB group for DIY looping systems. There are lot of active members there with an excellent history of helping people. Loop and Learn is a community that provides Loop-centric information, a T1D Speaker Series covering many topics of general diabetes interest as well as Loop-specific chats, alerts whenever there is an update to iOS and Xcode , Quick Tips and articles written by mentors providing their Loop experience. LoopandLearn Facebook Group LoopandLearn Website LoopandLearn YouTube Channel The LoopTips website provides non-build information that is helpful once you are looping, e.g., how to print endo reports, find Loop data, deal with therapy settings changes, etc. Many Loopers use a companion app called Nightscout. Nightscout help can be found in the CGM in the Cloud Facebook group. For those interested in what is coming next for Loop and those who prefer not to use Facebook, join Loop Zulipchat and be sure to subscribe to all the streams or you'll miss some interesting conversations. Loop has an instagram account @diy.loop where some updates are shared.","title":"How to Find Help"},{"location":"intro/loopdocs-how-to/#how-to-ask-for-help","text":"If you are having trouble building or using your Loop app, there are some important steps to get responses to your question, while also being considerate of our volunteers' time. Always search in both LoopDocs and your favorite support group . Confused on how to search in a Facebook group? Here is a video to help. If you use Facebook, click on the Featured posts (at top of page); many posts asking for help are already answered there. Don't post a duplicate question in multiple groups (mentors monitor many groups). Only post to a different group if you have had no responses for several hours. If a LoopDocs search, FB or zulipchat search, and a check of Looped Group featured posts pinned to top of the page haven't answered your question, then post for help. Review the tips for how to post for help so that our volunteers get all the information they'll need to help you, without needing to ask 40 questions first. Leave your question posted even after you've gotten an answer, but edit the original post to add the word RESOLVED at the beginning of the original post. This helps other Loopers who have the same question This helps mentors know they don't need to respond to help you","title":"How to Ask for Help"},{"location":"intro/loopdocs-how-to/#how-to-use-loopdocs","text":"","title":"How to use LoopDocs"},{"location":"intro/loopdocs-how-to/#website-short-cuts","text":"One of our awesome Loop volunteers captured the domain names loopdocs.org and looptips.org . So you can find these valuable websites by simply typing loopdocs or looptips followed by .org in your browser. In other words, you don't need to remember or type https://loopkit.github.io/loopdocs/ .","title":"Website Short Cuts"},{"location":"intro/loopdocs-how-to/#website-navigation","text":"There are a lot of links you can click on this website. Some links take you to a different section of the same page Some links take you to a different page in LoopDocs Some links take you to a different website If you click on the link, you are moved to the new location and must hit the back button on your browser to return. You can choose to open that link in a new window or new tab. If your mouse has a right button, then right click the link On a Mac with no right button, hold down the Control key and click On a mobile device, click and hold the link and choose where to open the link Keyboard Navigation When viewing the site at a computer, you can use keys as shortcuts: n for next page p for previous page s for search The website navigation depends on whether you are on a mobile device or a computer (with browser width > 1220 pixels). For the wide-view: The tabs for the different sections of LoopDocs are visible across the top of the browser Once a tab is selected: That tab is highlighted The list of pages in that tab is displayed on the left side The Table of Contents for the current page is displayed on the right side For the mobile (or narrow) display: From the Home page, tap the Hamburger Menu to display the tabs for the different sections of LoopDocs Once a tab is selected: The list of pages in that tab is displayed in the Hamburger Menu To return to the main tab list, tap the back arrow To see the Table of Contents , use the Hamburger Menu and scroll to the highlighted page (current page) and tap again","title":"Website Navigation"},{"location":"intro/loopdocs-how-to/#website-search","text":"It is not uncommon to have a question about Loop. But, it is exceptionally rare to have the question not already answered in LoopDocs, so please search for answers by selecting the Search tool (upper right) or typing s then a search term at a computer. As you begin to type, suggested completions and links to pages are displayed. Click on the item you think answers your question.","title":"Website Search"},{"location":"intro/loopdocs-how-to/#how-to-improve-loopdocs","text":"Please submit suggestions for updates and improvements to this documentation. There are many pages of content and we welcome reviewers to help find typos and outdated info/links. If you notice a typo, poor word choice or some explanation that could be improved or clarified, there are a few options. The first two options use github, a website where open-source code and documentation is often shared. You can only use github if you have an account (it's free). You can issue a Pull Request (best option if it is a simple typo or wording update) You can open an Issue (best option if a major rewrite is needed or you think a conversation would help), or You can post on Facebook or Zulipchat","title":"How to Improve LoopDocs"},{"location":"intro/loopdocs-how-to/#pull-requests-and-issues","text":"If you decide to do a Github Pull Request ( PR ) or create an Issue , first look to see if someone has already opened a PR or Issue on the topic so you don't create a duplicate. If a PR or Issue on the topic is open, feel free to add your comments (don't be shy), but please don't create a duplicate If a PR doesn't exist, watch this LoopDocs Pull Request video on how to create one (it's easy, video is less than 5 minutes) If your Issue is new, please add it by clicking on the New Issue button Give the Issue a descriptive title Indicate which page or pages need updating , along with a brief description of the problem(s)","title":"Pull Requests and Issues"},{"location":"intro/loopdocs-how-to/#facebook-or-zulipchat","text":"Helpful tips for providing LoopDocs feedback through Facebook and/or Zulipchat: In Looped Group - make sure your post is clear that you have a comment about LoopDocs in particular. In Loop Zulipchat, please use the documentation stream, Loopdocs Issue channel.","title":"Facebook or Zulipchat"},{"location":"intro/overview-intro/","text":"LoopDocs Overview \u00b6 LoopDocs Contents \u00b6 The LoopDocs website is organized as follows Home : What is Loop? Intro : Introduction to Loop and LoopDocs Build : How to build your Loop app the first time, or Update next time Set Up : How to set up your Loop app Operate : How to use the Loop app Troubleshoot : What to do if you're having trouble with the Loop app Loop 3 : Temporary section. It will move to Set Up when Loop 3 is released. (A development version is close to but not quite ready for release as Loop 3.) Version : Information about Loop versions, code customization and development Nightscout : Loop-specific Nightscout details; Nightscout is a companion application that many Loopers use FAQs : Pages with safety tips, frequently asked questions and the Glossary It is totally understandable if the thought of building and operating your own Loop app feels intimidating. As you learn the information explained in LoopDocs, this will start feeling more comfortable. Building Loop \u00b6 The process for building the Loop app is divided into short segments (pages) in the Build tab of LoopDocs. Best Practice: Learn to Build You are strongly encouraged to build Loop for yourself. No links to providers who build Loop as a service are found in LoopDocs If you choose to use such a service, before you begin, you should: Read all of LoopDocs Know how to Set up and Operate Loop These steps are important for your safety Using a Simulator \u00b6 You can build Loop and practice with a simulated phone, CGM and pump. You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions. Starting with a simulator can help you decide if you want to move forward with purchasing the hardware and Apple Developers license each year for Loop. Note - you will need to have access to a computer. Please review Simulator Build for more information. Operating Loop \u00b6 A significant amount of content is provided on this website and via link to other sources. Please review these pages when initially setting up and learning to use Loop. Some techniques are specific to Loop, but the general concepts of how man-made insulin works and strategies to test basal, carb ratios and insulin sensitivity apply to all the hybrid closed-loop systems, commercial and open source.","title":"LoopDocs Overview"},{"location":"intro/overview-intro/#loopdocs-overview","text":"","title":"LoopDocs Overview"},{"location":"intro/overview-intro/#loopdocs-contents","text":"The LoopDocs website is organized as follows Home : What is Loop? Intro : Introduction to Loop and LoopDocs Build : How to build your Loop app the first time, or Update next time Set Up : How to set up your Loop app Operate : How to use the Loop app Troubleshoot : What to do if you're having trouble with the Loop app Loop 3 : Temporary section. It will move to Set Up when Loop 3 is released. (A development version is close to but not quite ready for release as Loop 3.) Version : Information about Loop versions, code customization and development Nightscout : Loop-specific Nightscout details; Nightscout is a companion application that many Loopers use FAQs : Pages with safety tips, frequently asked questions and the Glossary It is totally understandable if the thought of building and operating your own Loop app feels intimidating. As you learn the information explained in LoopDocs, this will start feeling more comfortable.","title":"LoopDocs Contents"},{"location":"intro/overview-intro/#building-loop","text":"The process for building the Loop app is divided into short segments (pages) in the Build tab of LoopDocs. Best Practice: Learn to Build You are strongly encouraged to build Loop for yourself. No links to providers who build Loop as a service are found in LoopDocs If you choose to use such a service, before you begin, you should: Read all of LoopDocs Know how to Set up and Operate Loop These steps are important for your safety","title":"Building Loop"},{"location":"intro/overview-intro/#using-a-simulator","text":"You can build Loop and practice with a simulated phone, CGM and pump. You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions. Starting with a simulator can help you decide if you want to move forward with purchasing the hardware and Apple Developers license each year for Loop. Note - you will need to have access to a computer. Please review Simulator Build for more information.","title":"Using a Simulator"},{"location":"intro/overview-intro/#operating-loop","text":"A significant amount of content is provided on this website and via link to other sources. Please review these pages when initially setting up and learning to use Loop. Some techniques are specific to Loop, but the general concepts of how man-made insulin works and strategies to test basal, carb ratios and insulin sensitivity apply to all the hybrid closed-loop systems, commercial and open source.","title":"Operating Loop"},{"location":"loop-3/add-cgm/","text":"CGM Configuration \u00b6 CGM Choices \u00b6 A CGM can be added from the Heads-Up-Display ( HUD ) or from the Loop Settings screen. The HUD will look like the graphic below if no CGM or Pump is connected with Loop: Loop can be connected to the following CGMs: CGMs that reside on the same phone (internet not required) Dexcom G5 Dexcom G6 Minimed Enlite CGM Medtronic Pump only You must add pump first If Enlite is connected to Medtronic pump and that pump is connected to Loop, then an option for Enlite shows up when choosing a CGM , not visible in graphic below CGMs that require active internet (WiFi or Cell) Dexcom Share Nightscout Remote CGM CGM Simulator - useful to learn the app interface Add CGM \u00b6 To add a CGM , go to the Settings screen, tap on add CGM and tap on your CGM . Dexcom G5 and G6 CGM \u00b6 To use the Dexcom G5 and G6: Dexcom app must be running on the Loop iPhone and paired to an active transmitter User must enter that active transmitter ID in the location indicated by the red rectangle in the graphic below Do not enter your Share Credentials The graphic below shows Tap to set Do not tap, leave it alone Only add the transmitter ID to Loop after it is paired with the Dexcom app on your phone FYI: When You Change Transmitters Before you change Dexcom transmitters, select the Delete CGM button at the very bottom of the CGM info page in Loop. Then, follow Dexcom Instructions for changing transmitters. Once the new transmitter is paired with the Dexcom app, go to the CGM page in Loop, tap Add CGM and enter the new transmitter ID. You cannot just tap on your old transmitter ID to update it. If you don't update your transmitter ID in Loop after you change the transmitter in Dexcom app, Loop will not get CGM data from the Dexcom app on your phone. About Dexcom Share credentials \u00b6 You do NOT need your Share account info listed in Loop settings if you are using a G5 or G6 system. The transmitter ID is sufficient. In fact, you should leave your Share credentials blank so that you don't accidentally become internet-dependent for CGM data if you forget to update your transmitter ID when you start a new transmitter. Medtronic Enlite CGM \u00b6 The Medtronic Enlite CGM is only available if you have connected it to your compatible Medtronic Pump. Make sure your pump reports the Enlite CGM results Go through the Add Pump to Loop steps with that Medtronic pump Then do the Add CGM steps and the sensor should be presented as an option Dexcom Share as a CGM \u00b6 If you need to use Dexcom Share If the dexcom is on another phone, you can use Share if internet / cell coverage is good. The Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress. If you do not enter your Share credentials correctly into Loop, you will get an error when Loop tries to access your Share account to backfill CGM data. An example of the error message is shown in the graphic below. If you see that message, delete your Share account from Loop settings and try again. Nightscout Remote CGM \u00b6 If the user has CGM data available at their Nightscout URL , they can select that as a source for CGM data for Loop. The user must acknowledge they understand the risks of using a remote source that requires internet, as shown in the graphic below. The user must enter both the URL and API_SECRET for their site to ensure the security of the data. The URL must start with https:// and cannot have any extra spaces in the line. When using Nightscout Remote CGM , if the user needs to change credentials or switch to a different CGM , the user must go through the Loop->Settings-> CGM menu. Change CGM \u00b6 To change CGMs, delete your existing CGM and then add a new CGM . For Dexcom G5/G6 and Share, access Delete CGM by tapping on the CGM Icon in the HUD or by tapping on Loop Settings and selecting CGM and scrolling down. For Nightscout Remote CGM , the Nightscout URL is opened when tapping on the CGM icon in the HUD , while the credential sections with the Delete CGM row is shown when tapping on Loop Settings and selecting CGM . After deleting a CGM , the Head-Up-Display at the top of the Loop main screen will show the add CGM icon.","title":"Loop 3 Add CGM"},{"location":"loop-3/add-cgm/#cgm-configuration","text":"","title":"CGM Configuration"},{"location":"loop-3/add-cgm/#cgm-choices","text":"A CGM can be added from the Heads-Up-Display ( HUD ) or from the Loop Settings screen. The HUD will look like the graphic below if no CGM or Pump is connected with Loop: Loop can be connected to the following CGMs: CGMs that reside on the same phone (internet not required) Dexcom G5 Dexcom G6 Minimed Enlite CGM Medtronic Pump only You must add pump first If Enlite is connected to Medtronic pump and that pump is connected to Loop, then an option for Enlite shows up when choosing a CGM , not visible in graphic below CGMs that require active internet (WiFi or Cell) Dexcom Share Nightscout Remote CGM CGM Simulator - useful to learn the app interface","title":"CGM Choices"},{"location":"loop-3/add-cgm/#add-cgm","text":"To add a CGM , go to the Settings screen, tap on add CGM and tap on your CGM .","title":"Add CGM"},{"location":"loop-3/add-cgm/#dexcom-g5-and-g6-cgm","text":"To use the Dexcom G5 and G6: Dexcom app must be running on the Loop iPhone and paired to an active transmitter User must enter that active transmitter ID in the location indicated by the red rectangle in the graphic below Do not enter your Share Credentials The graphic below shows Tap to set Do not tap, leave it alone Only add the transmitter ID to Loop after it is paired with the Dexcom app on your phone FYI: When You Change Transmitters Before you change Dexcom transmitters, select the Delete CGM button at the very bottom of the CGM info page in Loop. Then, follow Dexcom Instructions for changing transmitters. Once the new transmitter is paired with the Dexcom app, go to the CGM page in Loop, tap Add CGM and enter the new transmitter ID. You cannot just tap on your old transmitter ID to update it. If you don't update your transmitter ID in Loop after you change the transmitter in Dexcom app, Loop will not get CGM data from the Dexcom app on your phone.","title":"Dexcom G5 and G6 CGM"},{"location":"loop-3/add-cgm/#medtronic-enlite-cgm","text":"The Medtronic Enlite CGM is only available if you have connected it to your compatible Medtronic Pump. Make sure your pump reports the Enlite CGM results Go through the Add Pump to Loop steps with that Medtronic pump Then do the Add CGM steps and the sensor should be presented as an option","title":"Medtronic Enlite CGM"},{"location":"loop-3/add-cgm/#dexcom-share-as-a-cgm","text":"If you need to use Dexcom Share If the dexcom is on another phone, you can use Share if internet / cell coverage is good. The Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress. If you do not enter your Share credentials correctly into Loop, you will get an error when Loop tries to access your Share account to backfill CGM data. An example of the error message is shown in the graphic below. If you see that message, delete your Share account from Loop settings and try again.","title":"Dexcom Share as a CGM"},{"location":"loop-3/add-cgm/#nightscout-remote-cgm","text":"If the user has CGM data available at their Nightscout URL , they can select that as a source for CGM data for Loop. The user must acknowledge they understand the risks of using a remote source that requires internet, as shown in the graphic below. The user must enter both the URL and API_SECRET for their site to ensure the security of the data. The URL must start with https:// and cannot have any extra spaces in the line. When using Nightscout Remote CGM , if the user needs to change credentials or switch to a different CGM , the user must go through the Loop->Settings-> CGM menu.","title":"Nightscout Remote CGM"},{"location":"loop-3/add-cgm/#change-cgm","text":"To change CGMs, delete your existing CGM and then add a new CGM . For Dexcom G5/G6 and Share, access Delete CGM by tapping on the CGM Icon in the HUD or by tapping on Loop Settings and selecting CGM and scrolling down. For Nightscout Remote CGM , the Nightscout URL is opened when tapping on the CGM icon in the HUD , while the credential sections with the Delete CGM row is shown when tapping on Loop Settings and selecting CGM . After deleting a CGM , the Head-Up-Display at the top of the Loop main screen will show the add CGM icon.","title":"Change CGM"},{"location":"loop-3/add-pump/","text":"Pump Configuration \u00b6 Pump Choices \u00b6 You can choose a pump from the Heads-Up-Display ( HUD ) or from the Loop Settings screen. The HUD looks like the graphic below if no CGM or Pump is chosen: Switching Pumps? To change the pump connected to Loop go to Change Pump Type . Loopers can choose from 3 pumps and a simulator: Minimed 500/700 Series Omnipod Omnipod DASH Insulin Pump Simulator Omnipod Terms The Loop app and LoopDocs use these terms: Omnipod is the older (Eros) pods (requires RileyLink compatible device to Loop) Omnipod DASH is the newer BLE pods (phone talks directly to pod - no extra device needed to Loop) Omnipod Common means information common to Omnipod and Omnipod DASH Summary of Steps to Add a Pump \u00b6 Here is an overview of the different steps for adding each pump. Before changing pumps, you need to delete the old pump first. See Change Pump Type section below. Steps for Omnipod \u00b6 Omnipod Common 1 (choose default notifications) Insulin Type Select RileyLink Omnipod Common 2 (Pair Pod) Steps for Omnipod DASH \u00b6 Omnipod Common 1 (choose default notifications) Insulin Type Omnipod Common 2 (Pair Pod) Steps for Medtronic \u00b6 Insulin Type Select RileyLink Medtronic Add Pump \u00b6 Tap on Add Pump in the Settings screen to see pump options (shown in the graphic below). Tap on your Pump. Medtronic pump users - skip ahead to Insulin Type . Omnipod Common 1 \u00b6 Pod Nofication Defaults \u00b6 Here are the common screens for adding Omnipod or Omnipod DASH showing the default settings. You can change the default settings later. After you complete these screens, you select the insulin type. Insulin Type \u00b6 For all pumps, you can choose from the insulin types below. Insulin Type Rapid Acting (Novolog, Humalog, Apidra) or Ultra Rapid (Fiasp, Lyumjev) Inhaled insulin (Afrezza) is not offered because it is not used in pumps. Non-Pump Insulin To add a Omnipod DASH pump, skip ahead to Omnipod Commom 2 . Omnipod and Medtronic users should continue to select a RileyLink compatible device. Omnipod or Medtronic \u00b6 Select RileyLink \u00b6 For Omnipod and Medtronic pumps, you need a RileyLink compatible device to Loop. The Device and your phone must be kept close to your pump for Loop to work. A new RileyLink compatible device is not listed next to its slider until after you connect the device to Loop. Find the little toggle in the device list, switch on that toggle, and the RileyLink will appear after the toggle is green. You can personalize the name once it is connected to Loop. All RileyLink compatible devices in the nearby area, not already connected to a Loop app, will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue Continue button at the bottom of the screen. If your device does not appear: Make sure it is charged and turned on Make sure it is not connected to a different phone or app If you are adding a Medtronic pump, skip ahead to Medtronic . Omnipod Common 2 \u00b6 After selecting a RileyLink for Omnipod , all other actions for Omnipod and Omnipod DASH are the same. Once a pod is paired, the Pump display is the same, except the Omnipod screen has a RileyLink Devices section. For Omnipod (left) and Omnipod DASH (right), you should see the Pair Pod screen. At this point - you should hit Cancel (upper right of screen) and review the Omnipod Common page before pairing a pod. New Looper / New Podder Carefully review the Pair Pod instructions and the rest of the Omnipod Common page before continuing. Then, when you are ready, pair a pod. If you are not ready to fill and attach a pod with insulin, try filling a pod with water and let it drip into a ziplock bag to test running Loop on the pod. (Be sure the pod is not near anything when you hit \"Insert Cannula\".) You may enjoy reading Rufus the Bear . Medtronic \u00b6 If you followed this page to add your Medtronic pump, you have completed the first three steps. If not, you can prepare your pump now, then do those first three steps using Loop (follow the links). All other steps be completed before you Connect the Pump. Select Minimed 500/700 Series as your pump Select Insulin Type Select RileyLink Prepare Medtronic Pump Connect Pump to Loop Prepare Medtronic Pump \u00b6 Loop requires these settings on your Medtronic pump. Check with your users guide (can be found online if you don't have one) for more detailed instructions on your model of pump if you're not sure how to accomplish these steps. If you have basal rates, insulin to sensitivity factor and carb ratios in your pump - these will be overwritten (using the Therapy Setting values) when you connect your pump to Loop. If those rates are important to you, record them prior to continuing. Turn off Patterns under the basal menu settings. Set the Max Basal and Max Bolus values in the Medtronic pump to be greater than or equal to the values you enter in the Loop Therapy Settings . Otherwise, Loop will not connect to your pump with the error message: Pump Error. Max setting exceeded . Set your pump's Temp Basal Type to Insulin Rate (U/hr) . Set Remote Devices to ON and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn ON the Remote Options. Cancel any currently running extended or dual wave boluses. Loop cannot loop with those running. If you are using an Enlite CGM through your Medtronic pump, make sure that is configured properly before adding your pump to Loop Connect Pump to Loop \u00b6 The final step is to connect your Medtronic pump to Loop. Make sure your RileyLink is turned on and nearby Add your pump's region, color as shown in the graphic below Note that some Canadian pumps use CM instead of CA for the region code. Select CA/CM in the dropdown menu. Add your pump's 6-digit serial number as shown in the graphic below Click the Connect button to connect the pump to Loop. The spinning icon continues until you see the blue check mark and Continue button If Loop is not successful at connecting, you will get an error message and stay on this screen If the Delivery Limits (max basal and max bolus) in the pump are lower than values you entered in Loop you will see an error message: Pump Error. Max setting exceeded . (See note below for other reasons you might see this message.) In this case, edit the values in the pump and then click Connect to retry. Max setting exceeded It turns out the \"Max setting exceeded\" error might be displayed even when Max Bolus and Max Basal Rate are already set appropriately on the pump. If you had previously used a pump that allows multiples of 0.025 U/hr basal rate and you have one of those rates in the basal rate schedule in Loop, you will not be able to connect to a different Medtronic pump that does not support those rates. If this happens to you, cancel out of connecting to that pump Refer to Prep for Medtronic on the Settings page Add a simulator so you can Change the scheduled basal rates Delete the simulator Try again Once you have successfully connected to the Medtronic pump, click on Continue : You will then be presented with two more screens, click Continue for each Pump Clock message Pump is ready for use screen If you have an x23 or x54 pump, there is one more step - highlighted below For x23 and x54 Medtronic pump users only For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process. Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app. Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the Continue button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app. This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. Now that your pump is paired with Loop, you should select the type of battery you are using and decide whether to use My Sentry: Select your pump's battery type (lithium or alakine) There is a whole page about Medtronic pump batteries Leave the Preferred Data Source on Event History If you have a x23 or x54 pump, choose whether to use My Sentry (saves phone battery) or not (saves OrangeLink battery) For other Medtronic pumps, adjusting this setting does not do anything The Medtronic status and commands available are shown in the Pump Setting page. Change Pump Type \u00b6 Before changing from one pump type to another pump type, you must delete the old pump type. If you are using Medtronic, scroll to the bottom of the pump screen and select Delete Pump Before switching between Omnipod and Omnipod DASH or any kind of Omnipod to Medtronic, you must deactivate your current pod This does not include changing a pod, so long as the pods are of the same type The Switch to other insulin delivery device button will not be available with an active pod Follow along in the GIF below - it cycles though these steps. Go to the Omnipod screen and tap on Replace Pod Deactivate the pod When deactivation completes, tap on Cancel in upper right If you hit continue instead, tap cancel when Pair Pod screen appears On the main Loop screen, tap on the ! No Pod icon Scroll to the bottom of the screen Tap on Switch to other insulin delivery device and follow the directions to complete the task Now the new pump type can be selected from settings or tapping on the add pump icon on the HUD The Head-Up-Display at the top of the Loop main screen will now show the add pump icon.","title":"Loop 3 Add Pump"},{"location":"loop-3/add-pump/#pump-configuration","text":"","title":"Pump Configuration"},{"location":"loop-3/add-pump/#pump-choices","text":"You can choose a pump from the Heads-Up-Display ( HUD ) or from the Loop Settings screen. The HUD looks like the graphic below if no CGM or Pump is chosen: Switching Pumps? To change the pump connected to Loop go to Change Pump Type . Loopers can choose from 3 pumps and a simulator: Minimed 500/700 Series Omnipod Omnipod DASH Insulin Pump Simulator Omnipod Terms The Loop app and LoopDocs use these terms: Omnipod is the older (Eros) pods (requires RileyLink compatible device to Loop) Omnipod DASH is the newer BLE pods (phone talks directly to pod - no extra device needed to Loop) Omnipod Common means information common to Omnipod and Omnipod DASH","title":"Pump Choices"},{"location":"loop-3/add-pump/#summary-of-steps-to-add-a-pump","text":"Here is an overview of the different steps for adding each pump. Before changing pumps, you need to delete the old pump first. See Change Pump Type section below.","title":"Summary of Steps to Add a Pump"},{"location":"loop-3/add-pump/#add-pump","text":"Tap on Add Pump in the Settings screen to see pump options (shown in the graphic below). Tap on your Pump. Medtronic pump users - skip ahead to Insulin Type .","title":"Add Pump"},{"location":"loop-3/add-pump/#omnipod-common-1","text":"","title":"Omnipod Common 1"},{"location":"loop-3/add-pump/#pod-nofication-defaults","text":"Here are the common screens for adding Omnipod or Omnipod DASH showing the default settings. You can change the default settings later. After you complete these screens, you select the insulin type.","title":"Pod Nofication Defaults"},{"location":"loop-3/add-pump/#insulin-type","text":"For all pumps, you can choose from the insulin types below. Insulin Type Rapid Acting (Novolog, Humalog, Apidra) or Ultra Rapid (Fiasp, Lyumjev) Inhaled insulin (Afrezza) is not offered because it is not used in pumps. Non-Pump Insulin To add a Omnipod DASH pump, skip ahead to Omnipod Commom 2 . Omnipod and Medtronic users should continue to select a RileyLink compatible device.","title":"Insulin Type"},{"location":"loop-3/add-pump/#omnipod-or-medtronic","text":"","title":"Omnipod or Medtronic"},{"location":"loop-3/add-pump/#select-rileylink","text":"For Omnipod and Medtronic pumps, you need a RileyLink compatible device to Loop. The Device and your phone must be kept close to your pump for Loop to work. A new RileyLink compatible device is not listed next to its slider until after you connect the device to Loop. Find the little toggle in the device list, switch on that toggle, and the RileyLink will appear after the toggle is green. You can personalize the name once it is connected to Loop. All RileyLink compatible devices in the nearby area, not already connected to a Loop app, will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue Continue button at the bottom of the screen. If your device does not appear: Make sure it is charged and turned on Make sure it is not connected to a different phone or app If you are adding a Medtronic pump, skip ahead to Medtronic .","title":"Select RileyLink"},{"location":"loop-3/add-pump/#omnipod-common-2","text":"After selecting a RileyLink for Omnipod , all other actions for Omnipod and Omnipod DASH are the same. Once a pod is paired, the Pump display is the same, except the Omnipod screen has a RileyLink Devices section. For Omnipod (left) and Omnipod DASH (right), you should see the Pair Pod screen. At this point - you should hit Cancel (upper right of screen) and review the Omnipod Common page before pairing a pod. New Looper / New Podder Carefully review the Pair Pod instructions and the rest of the Omnipod Common page before continuing. Then, when you are ready, pair a pod. If you are not ready to fill and attach a pod with insulin, try filling a pod with water and let it drip into a ziplock bag to test running Loop on the pod. (Be sure the pod is not near anything when you hit \"Insert Cannula\".) You may enjoy reading Rufus the Bear .","title":"Omnipod Common 2"},{"location":"loop-3/add-pump/#medtronic","text":"If you followed this page to add your Medtronic pump, you have completed the first three steps. If not, you can prepare your pump now, then do those first three steps using Loop (follow the links). All other steps be completed before you Connect the Pump. Select Minimed 500/700 Series as your pump Select Insulin Type Select RileyLink Prepare Medtronic Pump Connect Pump to Loop","title":"Medtronic"},{"location":"loop-3/add-pump/#prepare-medtronic-pump","text":"Loop requires these settings on your Medtronic pump. Check with your users guide (can be found online if you don't have one) for more detailed instructions on your model of pump if you're not sure how to accomplish these steps. If you have basal rates, insulin to sensitivity factor and carb ratios in your pump - these will be overwritten (using the Therapy Setting values) when you connect your pump to Loop. If those rates are important to you, record them prior to continuing. Turn off Patterns under the basal menu settings. Set the Max Basal and Max Bolus values in the Medtronic pump to be greater than or equal to the values you enter in the Loop Therapy Settings . Otherwise, Loop will not connect to your pump with the error message: Pump Error. Max setting exceeded . Set your pump's Temp Basal Type to Insulin Rate (U/hr) . Set Remote Devices to ON and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn ON the Remote Options. Cancel any currently running extended or dual wave boluses. Loop cannot loop with those running. If you are using an Enlite CGM through your Medtronic pump, make sure that is configured properly before adding your pump to Loop","title":"Prepare Medtronic Pump"},{"location":"loop-3/add-pump/#connect-pump-to-loop","text":"The final step is to connect your Medtronic pump to Loop. Make sure your RileyLink is turned on and nearby Add your pump's region, color as shown in the graphic below Note that some Canadian pumps use CM instead of CA for the region code. Select CA/CM in the dropdown menu. Add your pump's 6-digit serial number as shown in the graphic below Click the Connect button to connect the pump to Loop. The spinning icon continues until you see the blue check mark and Continue button If Loop is not successful at connecting, you will get an error message and stay on this screen If the Delivery Limits (max basal and max bolus) in the pump are lower than values you entered in Loop you will see an error message: Pump Error. Max setting exceeded . (See note below for other reasons you might see this message.) In this case, edit the values in the pump and then click Connect to retry. Max setting exceeded It turns out the \"Max setting exceeded\" error might be displayed even when Max Bolus and Max Basal Rate are already set appropriately on the pump. If you had previously used a pump that allows multiples of 0.025 U/hr basal rate and you have one of those rates in the basal rate schedule in Loop, you will not be able to connect to a different Medtronic pump that does not support those rates. If this happens to you, cancel out of connecting to that pump Refer to Prep for Medtronic on the Settings page Add a simulator so you can Change the scheduled basal rates Delete the simulator Try again Once you have successfully connected to the Medtronic pump, click on Continue : You will then be presented with two more screens, click Continue for each Pump Clock message Pump is ready for use screen If you have an x23 or x54 pump, there is one more step - highlighted below For x23 and x54 Medtronic pump users only For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process. Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app. Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the Continue button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app. This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. Now that your pump is paired with Loop, you should select the type of battery you are using and decide whether to use My Sentry: Select your pump's battery type (lithium or alakine) There is a whole page about Medtronic pump batteries Leave the Preferred Data Source on Event History If you have a x23 or x54 pump, choose whether to use My Sentry (saves phone battery) or not (saves OrangeLink battery) For other Medtronic pumps, adjusting this setting does not do anything The Medtronic status and commands available are shown in the Pump Setting page.","title":"Connect Pump to Loop"},{"location":"loop-3/add-pump/#change-pump-type","text":"Before changing from one pump type to another pump type, you must delete the old pump type. If you are using Medtronic, scroll to the bottom of the pump screen and select Delete Pump Before switching between Omnipod and Omnipod DASH or any kind of Omnipod to Medtronic, you must deactivate your current pod This does not include changing a pod, so long as the pods are of the same type The Switch to other insulin delivery device button will not be available with an active pod Follow along in the GIF below - it cycles though these steps. Go to the Omnipod screen and tap on Replace Pod Deactivate the pod When deactivation completes, tap on Cancel in upper right If you hit continue instead, tap cancel when Pair Pod screen appears On the main Loop screen, tap on the ! No Pod icon Scroll to the bottom of the screen Tap on Switch to other insulin delivery device and follow the directions to complete the task Now the new pump type can be selected from settings or tapping on the add pump icon on the HUD The Head-Up-Display at the top of the Loop main screen will now show the add pump icon.","title":"Change Pump Type"},{"location":"loop-3/alert-notify/","text":"Loop 3 Alerts and Notifications \u00b6 Work in Progress This page was proposed as a good place to collect Loop 3 alerts and notifications. Design and links to it may under go rapid change. Alert Screens \u00b6 This section is a placeholder for alert messages you may see with Loop. Notifications \u00b6 This section is a placeholder for notification messages you may see with Loop. Some of these are generic to any pump and some are specific to the pump type. Suspend Timer Reminder \u00b6 Omnipod Common Suspend \u00b6 If you use Loop to suspend insulin delivery on your pod, at the end of the time interval you selected, you will see this modal alert. Once you acknowledge the alert, it will halt the reminder beeps on your pod. The modal alert on your phone repeats at 15 minute intervals. Error Messages \u00b6 This section is a placeholder for error messages you may see with Loop.","title":"Loop 3 Alerts & Notifications"},{"location":"loop-3/alert-notify/#loop-3-alerts-and-notifications","text":"Work in Progress This page was proposed as a good place to collect Loop 3 alerts and notifications. Design and links to it may under go rapid change.","title":"Loop 3 Alerts and Notifications"},{"location":"loop-3/alert-notify/#alert-screens","text":"This section is a placeholder for alert messages you may see with Loop.","title":"Alert Screens"},{"location":"loop-3/alert-notify/#notifications","text":"This section is a placeholder for notification messages you may see with Loop. Some of these are generic to any pump and some are specific to the pump type.","title":"Notifications"},{"location":"loop-3/alert-notify/#suspend-timer-reminder","text":"","title":"Suspend Timer Reminder"},{"location":"loop-3/alert-notify/#error-messages","text":"This section is a placeholder for error messages you may see with Loop.","title":"Error Messages"},{"location":"loop-3/displays_v3/","text":"Loop 3 Displays \u00b6 This page has detailed information about Loop 3 Displays. If you are running Loop v2.2.x, follow this link: Loop v2.2.x Displays . Main Loop Screen \u00b6 The main Loop screen contains a Heads-Up Display ( HUD ) at the top (when in portrait mode) with various charts in the middle and a toolbar at the bottom. Landscape \u00b6 When the device is in landscape mode, the HUD is no longer visible, but the chart history is increased. In landscape, each chart displays the last 8 hours of history along with the next 6 hours of glucose prediction. The toolbar is always visible while the chart display can be scrolled up and down to view charts of interest. Heads-Up Display \u00b6 The Heads-Up Display ( HUD ) shows 3 icons: Left: Glucose status Middle: Loop status Right: Pump status There is a Status Row underneath those three icons that is used to display bolus progress, some alerts and important messages. The Status Row is also a button that performs an action depending on the message. These are described in the table in the HUD Status Row section. The Status Row is only visible in portrait mode, so make sure to orient your device to look for these messages. Charts \u00b6 There are several charts on the main screen to help you navigate and understand Loop. Tapping on a chart on your phone opens up additional information. Glucose Chart \u00b6 The Glucose Chart displays glucose values in your preferred units. mg/dL or mmol/L If your preferred glucose unit is not selected, follow these instructions to change Glucose Units . The vertical scale is automatically adjusted by Loop to be as useful as possible while including the highest and lowest readings in the chart. The horizontal axis is set to go forward from the current time through your DIA (insulin duration), so you can see what Loop thinks glucose will be eventually. It then goes back in time as far as there is room, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. The glucose Correction Range is shown as a blue bar on the glucose chart. Single-value ranges (such as 100-100 mg/dL), will have a narrower blue bar. When a temporary override range is enabled, a darker blue bar indicates the correction range during that override. Negative Glucose Predition If you have a crazy negative glucose prediction - it is likely that you set an Override with a tiny sensitivity. Do not panic - this is a prediction only; not reality. Best approach: Open the loop until the prediction settles down. In future, do not choose a tiny sensitivity to force less insulin Increase the correction range in your override with a moderate change in sensitivity (50% to 90%) Loop will reduce your basal rate at the next cycle (within 5 minutes) Be cautious adding carbs during an override - make sure you understand the effects first If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below. Predicted Glucose Chart \u00b6 The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual glucose. The graph at the top of this view will match your Glucose Chart . Below this chart you will see an explanation of the variables Loop takes into account in predicting your future glucose value: Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction. You can tap on any of the entries to see the effects of that component by looking at the dashed lines. Display Only These elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects. Active Insulin Chart \u00b6 The Active Insulin chart displays the total insulin contribution from both temp basals and boluses. Active IOB can be either positive or negative. Negative IOB results from the suspension of normally scheduled basals. The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the (for Medtronic) pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered). The opposite is true for Omnipods. If a message is sent from Loop, it assumes the pod got the message and enacted it - even if the acknowledgement is not received. Later, when communication is restored, if a command was not enacted by the pod, the Event History is updated. Medtronic Only : So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB . Insulin Delivery Chart \u00b6 The Insulin Delivery chart displays a history of the temp basals enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. So, a rate displayed in this chart as +0 units would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate. Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time). The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin , is given in the upper right corner of the graph. Please note that for safety reasons, Loop will assume a bolus was successful, even if it is not sure that the pump responded as expected. Once the communications with the pump settle down, Loop will (almost always) be able to reconcile whether a dose went through as expected. Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event. This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart as the equivalent of a high temp basal rate. Event History , Reservoir and Non-Pump Insulin \u00b6 Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history. The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are three tabs that can be viewed, with Event History shown by default: Event History : Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability. Reservoir : Omnipod users should not worry if the reservoir display is blank. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. When a pod is deactivated, the reservoir history for that pod is no longer displayed. Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues. Non-Pump Insulin : The user can enter insulin taken by another method such as inhaled or by injection. The user can choose a different insulin type than used by the pump. This is explained further at this link . Previous Pod Insulin History For those who want to delete some recorded insulin near the end of a pod because the site was not absorbing properly, this can be done in Apple Health. Before attempting that modification, please read this entire section on How does Loop use Apple HealthKit in detail. Pay special attention to Insulin and Apple HealthKit section. Active Carbohydrates Chart \u00b6 The Carbohydrate chart displays the carbs used by Loop to predict glucose changes. The active COB is displayed in the upper right corner of the chart. Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen. Please read the Meal Entry page for more information about entering and editing carb entries. ICE Chart \u00b6 Click this link for even more details about Insulin Counteraction Effects . It's a good idea to read both the Meal Entry and ICE pages - this is an important concept. Toolbar \u00b6 The toolbar is always found at the bottom of the main Loop screen in both portrait and landscape orientation. By tapping on one of these icons, you can begin a Meal Entry, start a Pre-Meal Range , initiate a Manual Bolus, select an Override or go to the Loop Settings screen. From left to right, the icons are: Meal Entry - click on this icon to enter meals. Detailed info regarding how to enter, save, and edit meal entries can be found in the Meal Entry page. For those used to entering carbs on a Medtronic pump or coming from non-Loop DIY systems, Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the meal entry tool. Pre-Meal Range - click on this icon to start the Pre-Meal Range for one hour or until carbs are entered. (plate symbol turns dark green when active) Bolus - click on this icon to open the Bolus tool. Overrides - click on this icon to select a saved or custom Override or to cancel an override if one is active (heart symbol turns dark blue when active) Loop Settings - click on this icon to make changes to any of your Loop settings . HUD Details \u00b6 Very Detailed Section This section is packed with an incredible amount of detail. Remember it exists and come back when you need a reference to Loop 3 icons and messages. If you are a new looper your eyes may glaze over the first time through. Don't worry. But do come back and read this section again after you've used the system in Open Loop mode (before you enable Closed Loop mode). And then come back again after a day or so of closed loop testing. Experienced loopers need to read the detail on this page. There are important changes from Loop 2.2.x. The Heads-Up-Display, visible in portrait mode, shows the Glucose Status on the left, the Loop Status in the middle and the Pump Status on the right. Once a CGM and pump have been added to Loop, the Loop Status icon will update and ideally be similar to the graphic below. The Glucose is displayed in the same units as the selected CGM If units are incorrect, quit Loop, allow your CGM app to update and then restart Loop The green Loop icon indicates that within the last 5 minutes Loop completed a cycle The Pump Status indicates the scheduled basal rate is running The 0.0 U display means the basal currently running is 0 U/hr different from the scheduled basal Loop Status Icon \u00b6 The Loop Status Icon is the colored circle in the center of the main Loop display. The three colors displayed are Green, Yellow or Red. In all cases, more information is displayed by tapping on the Loop Status Icon, which brings up a modal message indicating the last time a loop cycle completed and other descriptive text. Loop Cycle \u00b6 A complete Loop cycle, at high level, includes these steps: Current Glucose is updated Glucose prediction is calculated along with any recommended change to insulin delivery to maintain future glucose above safety threshold and within correction range Messages are sent to the pump to modify insulin delivery if required and request current pump status Pump acknowledges the loop messages This table shows examples of Loop Status Icons and what each icon means. Icon Meaning A green circle indicates the app is in Closed Loop mode and it completed a cycle within the last 5 minutes. A yellow circle indicates the app is in Closed Loop mode and it has completed a cycle in the last 5-15 minutes. It is not unusual to have a few instances of yellow loops per day. They can be caused by being out of range (physically), Bluetooth or RileyLink \u201cnoise\u201d interference, or even that the pump was giving a bolus. Most yellow loops will self-resolve without needing any special troubleshooting. A red circle indicates the Loop has not completed in over 15 minutes. This is not a typical state, and you should troubleshoot the problem. In this case, either the Glucose Icon or the Pump Icon or both will display an alert graphic. When the circle is open at the top, Loop is operating in \u201copen-loop\u201d mode. The color code is the same as for closed loop except the cycle involves updating predictions from available blood glucose values and obtaining pump status; but the app will not make any automated changes in insulin delivery. While Manual Temp Basal ( MTB ) is active, the Open Loop icon will be displayed until MTB expires or is cancelled. Note that MTB is only implemented in Loop 3 for Omnipod and Omnipod DASH, at the current time. Fun Fact The loop status icon will pulse slightly when Loop is communicating with the pump. The pulsing will stop when the communication has completed (green loop) or given up (yellow or red loop). Glucose Status Icon \u00b6 The table below shows examples of the Glucose Status Icon and what each icon means. The Glucose Color Code is provided below the table. Icon Meaning The current glucose reading is displayed. It can be from the CGM or from a finger stick. The value must have been updated within the last 15 minutes to be displayed. For the example shown, a valid trend arrow is available and is blue. Color codes are explained at this link . The last glucose reading from the CGM or from a finger stick is stale, i.e., it was acquired more than 15 minutes ago. In this case, the glucose prediction will stop updating. The HUD Status Row message enables user to enter fingerstick glucose value if desired. If in closed-loop mode, no changes will be made to insulin delivery. If a temporary basal is running, it continues running for the scheduled duration. Once the temporary basal expires, the pump resumes the scheduled basal rate. When the app issues a temporary basal, the duration is always 30 minutes. The user can enter a manual temporary basal duration up to the limits of their pump. If no CGM is currently selected, the Add CGM icon is displayed. The user can add a CGM following these instructions . If no CGM is currently selected, but a glucose value was acquired within the last 15 minutes (from fingerstick or a different CGM ), that value is displayed along with a plus sign. By tapping on the icon, the user can add a CGM following these instructions . Glucose Color Code \u00b6 Glucose Range Glucose Value Color Trend Arrow Color 55 mg/dL (3.0 mmol/L) or below red regardless of background color red 56 to 79 mg/dL (3.1 and 4.4 mmol/L) black (light mode) / white (dark mode) yellow 80 to 199 mg/dL (4.4 to 11.0 mmol/L) black (light mode) / white (dark mode) blue 200 mg/dL (11.1 mmol/L) or above black (light mode) / white (dark mode) yellow CGM Display \u00b6 Tapping on the CGM icon in the HUD shows more information about the last CGM reading. For Dexcom G5/G6 and Share, the same screen is obtained by tapping on Loop Settings-> CGM . For Nightscout Remote CGM , the Nightscout URL is opened when tapping on the CGM icon in the HUD , while the credential sections is shown when tapping on Loop Settings-> CGM . The graphic below shows the result of tapping on the CGM icon when using a Dexcom G6. It includes the time of the last reading to the nearest second, along with other information about that sensor and transmitter. It also has an option to go to the Dexcom app on the same device. Pump Status Icon \u00b6 The nominal pump icon displays high-level status information for the pump with two main components: left side is the basal delivery status and right side is the reservoir status. For Pods, a lifecycle line is displayed underneath the pump icon during the last 24 hours of nominal pod life. The basal delivery status displays the enacted temp basal change relative to the scheduled basal. For example, for a scheduled basal of 0.45 U/hr If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.25 U If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.05 U When scheduled basal is running, the icon displays 0.0 U But what about Overrides ? Using scheduled basal of 0.45 U/hr with override set to 70%, the \"override basal rate\" is 0.315 U/hr That is a value that cannot be set in the pump, but Loop uses it for IOB calculations If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.115 U If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.185 U The reservoir status indicates insulin remaining graphically and displays a value when less than 50 U remain. For Medtronic Pumps, the reservoir display indicates the level graphically. For Pods, the reservoir graphic is constant until the pod begins to report reservoir level when less than 50 U remain. The table below shows examples for a few nominal Pump Status Icons and Alert messages that might be shown. In all cases, tapping on the Pump Status Icon opens the Pump Settings screen with more information. Icon Meaning This nominal pump status graphic is for a Pod with temp basal less than scheduled basal rate and no reported reservoir level. This nominal pump status graphic is for a Medtronic pump running scheduled basal rate and with a half-full reservoir. This nominal pump status graphic is for a pump running a high temp basal rate with the reservoir level reported. When the reservoir level is above the notification level, the reservoir graphic is orange. This pump status graphic indicates 2 alerts: (1) the 15 U reservoir level is less than the notification level of 20 U selected by this user and (2) a small clock icon is added to the display to indicate the phone time zone and pump time zone do not match. When the reservoir level is below the notification level, the reservoir graphic is yellow. Follow the link for time zone information. This alert message indicates the reservoir reports 0 U. Although pumps will continue to deliver some insulin after this point (max of 4 U for pods, or until all insulin is gone for both pods and Medtronic), the user should be aware that insulin delivery could stop at any moment. Note that if you see a display of 0 U in yellow, that means there is 0.5 U or less reported by the pump. This alert message indicates no pod is currently paired so no insulin is being delivered. Tap on the icon to reach the pod setting screen and pair a new pod, or switch to a different source for providing insulin. This alert message indicates all insulin delivery has been suspended. A Status Row message appears to enable the user to resume delivery with one tap. Alternatively, insulin can be resumed by tapping on the Pump Icon to enter the Pump Setting display and resume from that screen. This alert message indicates the user has initiated a manual temp basal ( MTB ). While the MTB is active, the Loop Icon Status will also display an Open Loop symbol to indicate no automatic adjustments are made until MTB expires or is canceled. The lifecycle indicator across the bottom of the pod status indicates a pod within the final 24 hours of nominal life. Tapping on the icon takes the user to the pump settings display where the rate and duration of the MTB are displayed. This alert message indicates it has been more than 15 minutes since the app was able to communicate with the pump. Follow these troubleshooting steps. This alert message indicates no pump has been added. Follow the instruction for adding a pump . Time Zone \u00b6 Loop allows your pump to have a different time zone from your phone. For Medtronic - the pump time shows on the pump display Always use Loop to set your pump time For Omnipod Common - there isn't a clock on pods, but Loop has a concept of \"pump\" time for that pod Your daily schedule for basal rates, correction ranges, insulin sensitivity factors and carb ratios is displayed with respect to midnight on the \"pump\" time zone. When you first Add Pump to Loop, the pump and phone are in the same time zone, but it's important to understand what happens when the time zone changes on the phone. The scheduled rates for basal, correction range, ISF and CR follow the pump time, even if you and your phone change time zones or daylight savings time occurs. To change the pump time to match your phone, select the Pump Settings display and scroll down to Change Time Zone Make sure your gear is close together (phone, pump and RileyLink , if needed) Touch the time zone offset to change to the current time zone Medtronic: Loop sets the pump time to the current phone time Omnipod Common: Loop sends your scheduled basal rates to your pod based on phone time Graphic below is from Loop 2.2.x You can choose to leave the pump and phone time zones different; the pump icon on the HUD will show the clock icon to remind you. Many people do this for short trips. HUD Status Row \u00b6 The Status Row is located immediately below the CGM , Loop and Pump Icons and is used to provide status, action buttons and information. The messages in the table are in order of priority. For example, a No Recent Glucose message is displayed even when an Override is active. Bolus In Progress The bolus messages are displayed with the highest priority: If another message is shown when a bolus starts, the bolus message is displayed instead To return to the other message, such as Override or No Recent Glucose , you must either wait for the bolus to complete or cancel the bolus by tapping on the Status Row To ensure you do not accidentally cancel a bolus, keep the phone locked when not in use Status Row / Meaning When the user issues a manual bolus through the app, a Starting Bolus information message is displayed. Tapping on this message has no action. As soon as the app issues a command to the pump (or sends it to the RileyLink to be delivered to the pump), the bolus in progress message appears. As soon as a bolus is started, from either a manual command or an automatic bolus, the bolus in progress message is displayed. Tapping on the Status Row causes the app to attempt to cancel the bolus. The app can only cancel a bolus if communication is active between the app and the pump. The message says Bolused value of total U . The value is based on a timer, so it is possible for an occlusion or other fault to occur while the app indicates bolus is in progress. In case of a fault, the user can tap on the pump icon to force a new pump status reading. For the case of pods, this allows you to silence a screaming pod quickly. Once the app communicates with the pump, the actual delivery status will be updated. If the user taps on the bolus in progress message in the Status Row , the message changes to Canceling Bolus. Tapping on this message has no action. As soon the app determines that the pump is suspended, the Insulin Suspended, Tap to Resume message is displayed. Tapping on the Status Row resumes scheduled basal delivery if communication is active between the app and the pump. Medtronic pump users who suspend directly on the pump will notice a delay before this message is displayed. It is best to use the app Pump Settings screen to suspend the pump. If a higher priority message is not displayed in the Status Row and the glucose value is stale (more than 15 minutes old), the No Recent Glucose, Tap to Add message is displayed. Tapping on the Status Row opens the Manual Bolus screen for entry of a Fingerstick Glucose. Note that if you choose not to accept a recommended bolus on this screen but you want to save the Fingerstick value, you need to tap the Bolus line to force it to 0 U and then tap Save Without Bolusing . However, be aware that, in Closed Loop mode, the app will use that glucose value for the next 15 minutes and may adjust insulin delivery accordingly. If a higher priority message is not displayed in the Status Row and an override is active, the override symbol and name, along with the time at which the override expires, is displayed. Tapping on the Status Row opens the screen for that particular override to enable the user to edit the override. Note that any changes made to that override are applied just to the current session. If you want the override permanently modified, refer to the Overrides instructions. If a higher priority message is not displayed in the Status Row and the Pre-Meal Range is active in the toolbar, the Pre-meal Preset, until time stamp is displayed. Tapping on the status row has no effect for this message. New with Loop 3: The Pre-Meal Preset can be engaged with an Override . When both are active, the Pre-Meal Range supersedes the range of the active Override , but the other settings for that Override still apply. When both are active, the Status Row message reflects the Override with both the PreMeal and Override icons in the toolbar highlighted.","title":"Loop 3 Displays"},{"location":"loop-3/displays_v3/#loop-3-displays","text":"This page has detailed information about Loop 3 Displays. If you are running Loop v2.2.x, follow this link: Loop v2.2.x Displays .","title":"Loop 3 Displays"},{"location":"loop-3/displays_v3/#main-loop-screen","text":"The main Loop screen contains a Heads-Up Display ( HUD ) at the top (when in portrait mode) with various charts in the middle and a toolbar at the bottom.","title":"Main Loop Screen"},{"location":"loop-3/displays_v3/#heads-up-display","text":"The Heads-Up Display ( HUD ) shows 3 icons: Left: Glucose status Middle: Loop status Right: Pump status There is a Status Row underneath those three icons that is used to display bolus progress, some alerts and important messages. The Status Row is also a button that performs an action depending on the message. These are described in the table in the HUD Status Row section. The Status Row is only visible in portrait mode, so make sure to orient your device to look for these messages.","title":"Heads-Up Display"},{"location":"loop-3/displays_v3/#charts","text":"There are several charts on the main screen to help you navigate and understand Loop. Tapping on a chart on your phone opens up additional information.","title":"Charts"},{"location":"loop-3/displays_v3/#glucose-chart","text":"The Glucose Chart displays glucose values in your preferred units. mg/dL or mmol/L If your preferred glucose unit is not selected, follow these instructions to change Glucose Units . The vertical scale is automatically adjusted by Loop to be as useful as possible while including the highest and lowest readings in the chart. The horizontal axis is set to go forward from the current time through your DIA (insulin duration), so you can see what Loop thinks glucose will be eventually. It then goes back in time as far as there is room, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. The glucose Correction Range is shown as a blue bar on the glucose chart. Single-value ranges (such as 100-100 mg/dL), will have a narrower blue bar. When a temporary override range is enabled, a darker blue bar indicates the correction range during that override. Negative Glucose Predition If you have a crazy negative glucose prediction - it is likely that you set an Override with a tiny sensitivity. Do not panic - this is a prediction only; not reality. Best approach: Open the loop until the prediction settles down. In future, do not choose a tiny sensitivity to force less insulin Increase the correction range in your override with a moderate change in sensitivity (50% to 90%) Loop will reduce your basal rate at the next cycle (within 5 minutes) Be cautious adding carbs during an override - make sure you understand the effects first If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below.","title":"Glucose Chart"},{"location":"loop-3/displays_v3/#active-insulin-chart","text":"The Active Insulin chart displays the total insulin contribution from both temp basals and boluses. Active IOB can be either positive or negative. Negative IOB results from the suspension of normally scheduled basals. The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the (for Medtronic) pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered). The opposite is true for Omnipods. If a message is sent from Loop, it assumes the pod got the message and enacted it - even if the acknowledgement is not received. Later, when communication is restored, if a command was not enacted by the pod, the Event History is updated. Medtronic Only : So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB .","title":"Active Insulin Chart"},{"location":"loop-3/displays_v3/#insulin-delivery-chart","text":"The Insulin Delivery chart displays a history of the temp basals enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. So, a rate displayed in this chart as +0 units would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate. Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time). The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin , is given in the upper right corner of the graph. Please note that for safety reasons, Loop will assume a bolus was successful, even if it is not sure that the pump responded as expected. Once the communications with the pump settle down, Loop will (almost always) be able to reconcile whether a dose went through as expected. Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event. This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart as the equivalent of a high temp basal rate.","title":"Insulin Delivery Chart"},{"location":"loop-3/displays_v3/#event-history-reservoir-and-non-pump-insulin","text":"Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history. The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are three tabs that can be viewed, with Event History shown by default: Event History : Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability. Reservoir : Omnipod users should not worry if the reservoir display is blank. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. When a pod is deactivated, the reservoir history for that pod is no longer displayed. Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues. Non-Pump Insulin : The user can enter insulin taken by another method such as inhaled or by injection. The user can choose a different insulin type than used by the pump. This is explained further at this link . Previous Pod Insulin History For those who want to delete some recorded insulin near the end of a pod because the site was not absorbing properly, this can be done in Apple Health. Before attempting that modification, please read this entire section on How does Loop use Apple HealthKit in detail. Pay special attention to Insulin and Apple HealthKit section.","title":"Event History, Reservoir and Non-Pump Insulin"},{"location":"loop-3/displays_v3/#active-carbohydrates-chart","text":"The Carbohydrate chart displays the carbs used by Loop to predict glucose changes. The active COB is displayed in the upper right corner of the chart. Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen. Please read the Meal Entry page for more information about entering and editing carb entries.","title":"Active Carbohydrates Chart"},{"location":"loop-3/displays_v3/#toolbar","text":"The toolbar is always found at the bottom of the main Loop screen in both portrait and landscape orientation. By tapping on one of these icons, you can begin a Meal Entry, start a Pre-Meal Range , initiate a Manual Bolus, select an Override or go to the Loop Settings screen. From left to right, the icons are: Meal Entry - click on this icon to enter meals. Detailed info regarding how to enter, save, and edit meal entries can be found in the Meal Entry page. For those used to entering carbs on a Medtronic pump or coming from non-Loop DIY systems, Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the meal entry tool. Pre-Meal Range - click on this icon to start the Pre-Meal Range for one hour or until carbs are entered. (plate symbol turns dark green when active) Bolus - click on this icon to open the Bolus tool. Overrides - click on this icon to select a saved or custom Override or to cancel an override if one is active (heart symbol turns dark blue when active) Loop Settings - click on this icon to make changes to any of your Loop settings .","title":"Toolbar"},{"location":"loop-3/displays_v3/#hud-details","text":"Very Detailed Section This section is packed with an incredible amount of detail. Remember it exists and come back when you need a reference to Loop 3 icons and messages. If you are a new looper your eyes may glaze over the first time through. Don't worry. But do come back and read this section again after you've used the system in Open Loop mode (before you enable Closed Loop mode). And then come back again after a day or so of closed loop testing. Experienced loopers need to read the detail on this page. There are important changes from Loop 2.2.x. The Heads-Up-Display, visible in portrait mode, shows the Glucose Status on the left, the Loop Status in the middle and the Pump Status on the right. Once a CGM and pump have been added to Loop, the Loop Status icon will update and ideally be similar to the graphic below. The Glucose is displayed in the same units as the selected CGM If units are incorrect, quit Loop, allow your CGM app to update and then restart Loop The green Loop icon indicates that within the last 5 minutes Loop completed a cycle The Pump Status indicates the scheduled basal rate is running The 0.0 U display means the basal currently running is 0 U/hr different from the scheduled basal","title":"HUD Details"},{"location":"loop-3/displays_v3/#loop-status-icon","text":"The Loop Status Icon is the colored circle in the center of the main Loop display. The three colors displayed are Green, Yellow or Red. In all cases, more information is displayed by tapping on the Loop Status Icon, which brings up a modal message indicating the last time a loop cycle completed and other descriptive text.","title":"Loop Status Icon"},{"location":"loop-3/displays_v3/#glucose-status-icon","text":"The table below shows examples of the Glucose Status Icon and what each icon means. The Glucose Color Code is provided below the table. Icon Meaning The current glucose reading is displayed. It can be from the CGM or from a finger stick. The value must have been updated within the last 15 minutes to be displayed. For the example shown, a valid trend arrow is available and is blue. Color codes are explained at this link . The last glucose reading from the CGM or from a finger stick is stale, i.e., it was acquired more than 15 minutes ago. In this case, the glucose prediction will stop updating. The HUD Status Row message enables user to enter fingerstick glucose value if desired. If in closed-loop mode, no changes will be made to insulin delivery. If a temporary basal is running, it continues running for the scheduled duration. Once the temporary basal expires, the pump resumes the scheduled basal rate. When the app issues a temporary basal, the duration is always 30 minutes. The user can enter a manual temporary basal duration up to the limits of their pump. If no CGM is currently selected, the Add CGM icon is displayed. The user can add a CGM following these instructions . If no CGM is currently selected, but a glucose value was acquired within the last 15 minutes (from fingerstick or a different CGM ), that value is displayed along with a plus sign. By tapping on the icon, the user can add a CGM following these instructions .","title":"Glucose Status Icon"},{"location":"loop-3/displays_v3/#pump-status-icon","text":"The nominal pump icon displays high-level status information for the pump with two main components: left side is the basal delivery status and right side is the reservoir status. For Pods, a lifecycle line is displayed underneath the pump icon during the last 24 hours of nominal pod life. The basal delivery status displays the enacted temp basal change relative to the scheduled basal. For example, for a scheduled basal of 0.45 U/hr If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.25 U If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.05 U When scheduled basal is running, the icon displays 0.0 U But what about Overrides ? Using scheduled basal of 0.45 U/hr with override set to 70%, the \"override basal rate\" is 0.315 U/hr That is a value that cannot be set in the pump, but Loop uses it for IOB calculations If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.115 U If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.185 U The reservoir status indicates insulin remaining graphically and displays a value when less than 50 U remain. For Medtronic Pumps, the reservoir display indicates the level graphically. For Pods, the reservoir graphic is constant until the pod begins to report reservoir level when less than 50 U remain. The table below shows examples for a few nominal Pump Status Icons and Alert messages that might be shown. In all cases, tapping on the Pump Status Icon opens the Pump Settings screen with more information. Icon Meaning This nominal pump status graphic is for a Pod with temp basal less than scheduled basal rate and no reported reservoir level. This nominal pump status graphic is for a Medtronic pump running scheduled basal rate and with a half-full reservoir. This nominal pump status graphic is for a pump running a high temp basal rate with the reservoir level reported. When the reservoir level is above the notification level, the reservoir graphic is orange. This pump status graphic indicates 2 alerts: (1) the 15 U reservoir level is less than the notification level of 20 U selected by this user and (2) a small clock icon is added to the display to indicate the phone time zone and pump time zone do not match. When the reservoir level is below the notification level, the reservoir graphic is yellow. Follow the link for time zone information. This alert message indicates the reservoir reports 0 U. Although pumps will continue to deliver some insulin after this point (max of 4 U for pods, or until all insulin is gone for both pods and Medtronic), the user should be aware that insulin delivery could stop at any moment. Note that if you see a display of 0 U in yellow, that means there is 0.5 U or less reported by the pump. This alert message indicates no pod is currently paired so no insulin is being delivered. Tap on the icon to reach the pod setting screen and pair a new pod, or switch to a different source for providing insulin. This alert message indicates all insulin delivery has been suspended. A Status Row message appears to enable the user to resume delivery with one tap. Alternatively, insulin can be resumed by tapping on the Pump Icon to enter the Pump Setting display and resume from that screen. This alert message indicates the user has initiated a manual temp basal ( MTB ). While the MTB is active, the Loop Icon Status will also display an Open Loop symbol to indicate no automatic adjustments are made until MTB expires or is canceled. The lifecycle indicator across the bottom of the pod status indicates a pod within the final 24 hours of nominal life. Tapping on the icon takes the user to the pump settings display where the rate and duration of the MTB are displayed. This alert message indicates it has been more than 15 minutes since the app was able to communicate with the pump. Follow these troubleshooting steps. This alert message indicates no pump has been added. Follow the instruction for adding a pump .","title":"Pump Status Icon"},{"location":"loop-3/displays_v3/#time-zone","text":"Loop allows your pump to have a different time zone from your phone. For Medtronic - the pump time shows on the pump display Always use Loop to set your pump time For Omnipod Common - there isn't a clock on pods, but Loop has a concept of \"pump\" time for that pod Your daily schedule for basal rates, correction ranges, insulin sensitivity factors and carb ratios is displayed with respect to midnight on the \"pump\" time zone. When you first Add Pump to Loop, the pump and phone are in the same time zone, but it's important to understand what happens when the time zone changes on the phone. The scheduled rates for basal, correction range, ISF and CR follow the pump time, even if you and your phone change time zones or daylight savings time occurs. To change the pump time to match your phone, select the Pump Settings display and scroll down to Change Time Zone Make sure your gear is close together (phone, pump and RileyLink , if needed) Touch the time zone offset to change to the current time zone Medtronic: Loop sets the pump time to the current phone time Omnipod Common: Loop sends your scheduled basal rates to your pod based on phone time Graphic below is from Loop 2.2.x You can choose to leave the pump and phone time zones different; the pump icon on the HUD will show the clock icon to remind you. Many people do this for short trips.","title":"Time Zone"},{"location":"loop-3/displays_v3/#hud-status-row","text":"The Status Row is located immediately below the CGM , Loop and Pump Icons and is used to provide status, action buttons and information. The messages in the table are in order of priority. For example, a No Recent Glucose message is displayed even when an Override is active. Bolus In Progress The bolus messages are displayed with the highest priority: If another message is shown when a bolus starts, the bolus message is displayed instead To return to the other message, such as Override or No Recent Glucose , you must either wait for the bolus to complete or cancel the bolus by tapping on the Status Row To ensure you do not accidentally cancel a bolus, keep the phone locked when not in use Status Row / Meaning When the user issues a manual bolus through the app, a Starting Bolus information message is displayed. Tapping on this message has no action. As soon as the app issues a command to the pump (or sends it to the RileyLink to be delivered to the pump), the bolus in progress message appears. As soon as a bolus is started, from either a manual command or an automatic bolus, the bolus in progress message is displayed. Tapping on the Status Row causes the app to attempt to cancel the bolus. The app can only cancel a bolus if communication is active between the app and the pump. The message says Bolused value of total U . The value is based on a timer, so it is possible for an occlusion or other fault to occur while the app indicates bolus is in progress. In case of a fault, the user can tap on the pump icon to force a new pump status reading. For the case of pods, this allows you to silence a screaming pod quickly. Once the app communicates with the pump, the actual delivery status will be updated. If the user taps on the bolus in progress message in the Status Row , the message changes to Canceling Bolus. Tapping on this message has no action. As soon the app determines that the pump is suspended, the Insulin Suspended, Tap to Resume message is displayed. Tapping on the Status Row resumes scheduled basal delivery if communication is active between the app and the pump. Medtronic pump users who suspend directly on the pump will notice a delay before this message is displayed. It is best to use the app Pump Settings screen to suspend the pump. If a higher priority message is not displayed in the Status Row and the glucose value is stale (more than 15 minutes old), the No Recent Glucose, Tap to Add message is displayed. Tapping on the Status Row opens the Manual Bolus screen for entry of a Fingerstick Glucose. Note that if you choose not to accept a recommended bolus on this screen but you want to save the Fingerstick value, you need to tap the Bolus line to force it to 0 U and then tap Save Without Bolusing . However, be aware that, in Closed Loop mode, the app will use that glucose value for the next 15 minutes and may adjust insulin delivery accordingly. If a higher priority message is not displayed in the Status Row and an override is active, the override symbol and name, along with the time at which the override expires, is displayed. Tapping on the Status Row opens the screen for that particular override to enable the user to edit the override. Note that any changes made to that override are applied just to the current session. If you want the override permanently modified, refer to the Overrides instructions. If a higher priority message is not displayed in the Status Row and the Pre-Meal Range is active in the toolbar, the Pre-meal Preset, until time stamp is displayed. Tapping on the status row has no effect for this message. New with Loop 3: The Pre-Meal Preset can be engaged with an Override . When both are active, the Pre-Meal Range supersedes the range of the active Override , but the other settings for that Override still apply. When both are active, the Status Row message reflects the Override with both the PreMeal and Override icons in the toolbar highlighted.","title":"HUD Status Row"},{"location":"loop-3/features/","text":"Features \u00b6 work in progress This page will be deleted after all the relevant information is incorporated into the appropriate locations. This may not happen until after the release of Loop-dev as Loop 3 documentation. It is intended to assist folks testing Loop-dev. This page discusses updated versions of Loop features as well as new capabilities provided with Loop-dev. Loop-dev Displays One thing you may notice on some screens is the primary button, with associated information message, is always visible at the bottom of even small screens. You may need to scroll to see intermediate rows. For example, if the default action on a bolus screen is to deliver the recommended bolus, that button is visible and active. The button remains fixed as other portions of the screen are scrolled up and down. When you make changes to selections, then the information displayed and the button label updates to reflect the action taken if you tap on the button. There are other screens, like the Onboarding and Therapy Settings screens, where you should read all the provided information. Those screens require you to scroll to the bottom before being able to hit Continue or Save . Non-Pump Insulin \u00b6 If insulin is taken from a different source and the user wants to let Loop know, there is a new method in Loop-dev. With Loop 2.2.x, the user manually entered the Insulin dose into the Apple Health app. Loop then imported that value. With Loop-dev, the \"old\" method still works, but there is a new method for entering this information. This method enables the user to indicate the type of insulin so that the appropriate model is used by Loop. An updated Glucose prediction chart is displayed prior to saving the dose. Enter non-pump insulin before carbs \u00b6 WARNING If you are planning to enter non-pump insulin to cover carbs and you do NOT want Loop to automatically start increasing insulin based on the carb entry, enter the non-pump insulin first and then add the carbs. To find out what Loop recommends, without actually dosing with Loop: Wait for a CGM entry (or fingerstick) to appear in the HUD Enter the carbs and continue to the bolus screen, i.e., do not save carbs Note the recommended bolus, but do not actually bolus Back up to the carb entry screen and Cancel Go to the non-pump insulin screen and enter the bolus amount you've decided to take and select the model if a different from your pump Don't forget to actually take the insulin Add the carb entry and save carbs without bolusing Tap on either of the insulin charts (Active Insulin or Insulin Delivery) on the home screen to display the Insulin Delivery Screen . This screen has 3 tabs. Event History (default) is similar to Loop 2.2.x; however, the event history from a prior pod is not displayed once it is deactivated Reservoir is similar to Loop 2.2.x; however, the reservoir value from a prior pod is not displayed once it is deactivated Non-Pump Insulin is a new feature with Loop-dev Select the Non-Pump Insulin tab to bring up the graphic shown below Tap on the + sign (green solid lines) Log Dose screen is displayed showing the current Glucose prediction The default insulin type is that used by the pump To modify Insulin Type, tap on that row (red dashed lines) Picker wheel allows other insulin types to be selected Note that some insulin types, such as Afrezza are only available for non-pump insulin selection Tap on the Bolus row (blue dash-dot lines) to bring up a keyboard The Glucose prediction chart updates automatically based on the value entered in the Bolus row Tip, add 0.001 to the actual dose to make it easier to see if reviewing in Apple Health Once the user selects Done on the keyboard display, the entered value is displayed on the Bolus row and the Log Dose button changes from gray to blue Tap on Log Dose to record or Cancel to quit Bolus Entry \u00b6 The bolus following carbs ( Meal Bolus ) and manual bolus ( Bolus ) screens are updated from Loop 2.2.x version. There is still a predicted Glucose chart that actively updates as the bolus value is updated and various buttons. With Loop 2.2.x The Recommended Bolus is provided but the default for the Bolus value is 0 If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row With Loop-dev The Recommended Bolus is provided AND the default for the Bolus is the recommended value If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry Blue Means Active The blue color indicates an active button, whereas a grey button is inactive. The value displayed on the Bolus row is blue to indicate if you tap on that, you can edit the value Meal Bolus \u00b6 When the Meal Bolus screen is entered following a carb entry or edit action, the active button might be Save and Bolus or, if no bolus was recommended, Save without Bolusing . The Save refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen. Accept Recommendation \u00b6 In the graphic below, the user enters carbs and taps continue to display the Meal Bolus screen. The left graphic shows a case where a bolus is recommended - tapping on the Save and Deliver button saves the carbs and delivers the bolus The right graphic shows a case where no bolus is recommended - tapping on the Save without Bolusing saves the carbs Note that these graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the Recommended Bolus and Bolus rows For both graphics Active Carbs and Active Insulin are displayed above the Glucose prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved) The Bolus Summary is presented below the Glucose prediction graph with three rows: Carb Entry , the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the < Carb Entry button at upper left Recommended Bolus displays what Loop recommends for that proposed Carb Entry Bolus default display is what Loop recommends, but user can edit that value If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged. Modify Bolus \u00b6 This section is a continuation of the information presented in the Accept Recommendation portion of the Meal Bolus section. In the graphic below, the user overrides the recommended bolus. The left side shows a modified bolus less than the recommended bolus The right side shows a modified bolus greater than the recommended bolus Note that the Glucose prediction graph updates based off the Bolus value, giving the user the opportunity to accept or change their proposed value before tapping Save and Deliver At the next Loop cycle, the app modifies insulin delivery based on the saved information For the example with bolus less than recommended amount: Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the Correction range The recommendation to add insulin when the current glucose is below the Correction Range is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the Safety Threshold For the example with bolus greater than recommended amount: Loop will probably issue an automatic temp basal of 0 U/hr This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post meal spikes Remember - the Glucose prediction is what happens if you Save and Deliver and then no further adjustments are made to insulin delivery by Loop Manual Bolus \u00b6 When the Bolus screen is entered directly from the toolbar, the button choices are Enter Bolus if none is recommended, Deliver if a value is on the Bolus row or Cancel using the button on the upper left. The user can also tap on the value on the Bolus row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero. There are other alert messages that might be displayed if the pump or CGM is not active. Those are found on the Loop 3 Displays page. The two graphics below are examples of manual bolus screens. In the first graphic, no bolus was recommended If you tap on the Enter Bolus button at the bottom, it brings up a screen to enable you to type in an amount and then Deliver it. Alternatively, you can tap the 0 amount in the Bolus row and perform the same action as the Enter Bolus button If you do not want to override the recommendation, hit the Cancel button at upper left. In the second graphic, a recommended amount is shown If you tap on Deliver that recommended dose is delivered If you tap on the value on the Bolus row, you can override the amount The amount displayed on the Bolus row is modified to 0 U with the first tap - at that point, you may enter a new value or tap Cancel using the button at upper left of the screen Remote Carb / Bolus \u00b6 Loop-dev has a Remote Carb and Remote Bolus feature to enable remote caregivers to better assist the person who needs support managing with Loop. The author of this feature wrote this Remote Carb/Bolus Guide documentation. Please read carefully and use with the appropriate level of caution. WARNING You will be using this feature at your own risk, like any other Loop code you build. It is very important you completely read and re-read the Remote Carb/Bolus Guide before getting started. There are validation and troubleshooting steps for each section of the guide. Please make sure not to skip sections as this makes it difficult to troubleshoot. Be aware: Apple limits how many push notifications (used by this feature) can be received on an iOS device If the system feels too many are being sent, it may begin to throttle notifications There is not a published limit, but consider limiting it to 1 per hour When on cellular data, there may be further limitations to protect your data usage","title":"Loop 3 Features"},{"location":"loop-3/features/#features","text":"work in progress This page will be deleted after all the relevant information is incorporated into the appropriate locations. This may not happen until after the release of Loop-dev as Loop 3 documentation. It is intended to assist folks testing Loop-dev. This page discusses updated versions of Loop features as well as new capabilities provided with Loop-dev. Loop-dev Displays One thing you may notice on some screens is the primary button, with associated information message, is always visible at the bottom of even small screens. You may need to scroll to see intermediate rows. For example, if the default action on a bolus screen is to deliver the recommended bolus, that button is visible and active. The button remains fixed as other portions of the screen are scrolled up and down. When you make changes to selections, then the information displayed and the button label updates to reflect the action taken if you tap on the button. There are other screens, like the Onboarding and Therapy Settings screens, where you should read all the provided information. Those screens require you to scroll to the bottom before being able to hit Continue or Save .","title":"Features"},{"location":"loop-3/features/#non-pump-insulin","text":"If insulin is taken from a different source and the user wants to let Loop know, there is a new method in Loop-dev. With Loop 2.2.x, the user manually entered the Insulin dose into the Apple Health app. Loop then imported that value. With Loop-dev, the \"old\" method still works, but there is a new method for entering this information. This method enables the user to indicate the type of insulin so that the appropriate model is used by Loop. An updated Glucose prediction chart is displayed prior to saving the dose.","title":"Non-Pump Insulin"},{"location":"loop-3/features/#bolus-entry","text":"The bolus following carbs ( Meal Bolus ) and manual bolus ( Bolus ) screens are updated from Loop 2.2.x version. There is still a predicted Glucose chart that actively updates as the bolus value is updated and various buttons. With Loop 2.2.x The Recommended Bolus is provided but the default for the Bolus value is 0 If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row With Loop-dev The Recommended Bolus is provided AND the default for the Bolus is the recommended value If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry Blue Means Active The blue color indicates an active button, whereas a grey button is inactive. The value displayed on the Bolus row is blue to indicate if you tap on that, you can edit the value","title":"Bolus Entry"},{"location":"loop-3/features/#meal-bolus","text":"When the Meal Bolus screen is entered following a carb entry or edit action, the active button might be Save and Bolus or, if no bolus was recommended, Save without Bolusing . The Save refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen.","title":"Meal Bolus"},{"location":"loop-3/features/#manual-bolus","text":"When the Bolus screen is entered directly from the toolbar, the button choices are Enter Bolus if none is recommended, Deliver if a value is on the Bolus row or Cancel using the button on the upper left. The user can also tap on the value on the Bolus row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero. There are other alert messages that might be displayed if the pump or CGM is not active. Those are found on the Loop 3 Displays page. The two graphics below are examples of manual bolus screens. In the first graphic, no bolus was recommended If you tap on the Enter Bolus button at the bottom, it brings up a screen to enable you to type in an amount and then Deliver it. Alternatively, you can tap the 0 amount in the Bolus row and perform the same action as the Enter Bolus button If you do not want to override the recommendation, hit the Cancel button at upper left. In the second graphic, a recommended amount is shown If you tap on Deliver that recommended dose is delivered If you tap on the value on the Bolus row, you can override the amount The amount displayed on the Bolus row is modified to 0 U with the first tap - at that point, you may enter a new value or tap Cancel using the button at upper left of the screen","title":"Manual Bolus"},{"location":"loop-3/features/#remote-carb-bolus","text":"Loop-dev has a Remote Carb and Remote Bolus feature to enable remote caregivers to better assist the person who needs support managing with Loop. The author of this feature wrote this Remote Carb/Bolus Guide documentation. Please read carefully and use with the appropriate level of caution. WARNING You will be using this feature at your own risk, like any other Loop code you build. It is very important you completely read and re-read the Remote Carb/Bolus Guide before getting started. There are validation and troubleshooting steps for each section of the guide. Please make sure not to skip sections as this makes it difficult to troubleshoot. Be aware: Apple limits how many push notifications (used by this feature) can be received on an iOS device If the system feels too many are being sent, it may begin to throttle notifications There is not a published limit, but consider limiting it to 1 per hour When on cellular data, there may be further limitations to protect your data usage","title":"Remote Carb / Bolus"},{"location":"loop-3/loop-3-overview/","text":"Loop 3 Overview \u00b6 Loop 3.0 is the next big release. It is being developed and tested under the dev branch (Loop-dev). Loop-dev has significant improvements and looks different (in some ways) from the Loop 2.2.x versions. Loop-dev The dev branch of Loop is currently under test by experienced loopers. If you are testing Loop-dev, the version number reported on your settings screen is Loop v2.3.0 (57). To report to developers about which particular version of Loop-dev you are running, look at the top of the Loop Report under Build Details . The 7-digit alphanumeric indication to the right of workspaceGitRevision is sufficient. When this version is released, it will be Loop 3.0 and the interface for Loop 3.x versions will use this updated documentation. To make life easier for those of us preparing the new documentation, the wording on many pages in the Loop 3 section is set in the future - after the release This page will be updated and it and the rest of the Loop 3 section will be moved to Set Up App with the Loop 2.2.x version maintained under a sub-menu New with Loop 3 \u00b6 Loop 3 redesigns the app, building off work by Tidepool and DIY contributors. Some changes might not be obvious, but make the app more robust. Here are some highlights: Onboarding protocol with guardrails to help configure settings Streamlined main screen display and user experience Better alerts and notifications Omnipod Dash compatibility Fingerstick blood glucose prompts when data is stale Non-pump insulin entry within the app Remote Carb/Bolus capability Building Loop 3 \u00b6 When Loop 3 is released, the build instructions will be updated (please allow a few days for documentation to catch up. Experienced users are testing Loop-dev using the Loop-dev download and build instructions. Do not build Loop-dev unless you are willing to pay attention to announcements on zulipchat and build frequently (plan on once a week.) Users of dev Branch It is up to you to review these new pages for the information you need. Please subscribe to the Documentation Stream on zulipchat. You will see a post there every time LoopDocs is updated. Those of us who have been testing Loop-dev are very excited for this major update. Set Up Loop 3 Overview \u00b6 Congratulations on Building Loop! The first time you build Loop 3, the app takes you through the Onboarding process. Review the Onboarding material before continuing. First a suggestion and some orientation: Suggestion Start by reading each page without clicking on any links Return later to the page and click the links for more detail on a particular topic. Use the back button on your browser to go back to your starting point. Brand New Loopers \u00b6 Review these 3 pages in detail before you touch any buttons on your app Onboarding Add CGM Add Pump Read the rest of the pages listed under All Loopers , below. The information on the pages will become clearer as you learn to use the app. You can find a page later using the search function Complete the Onboarding steps to set up Loop Learn to use Loop starting with the Open Loop page Once you are comfortable with manually controlling Loop and have settings that work with the algorithm, move on to the Closed Loop page Make suggestions if you think parts of LoopDocs could be clarified, especially from the viewpoint of a brand-new Looper Experienced Loopers \u00b6 Review the 3 pages mentioned above for new Loopers and the section for experienced Loopers on the Onboarding page. Read the rest of the pages listed under All Loopers , below Some of the screens and user interface changed with Loop 3 Many of the new Loop 3 features are described Reach out if information is missing or needs to be clarified, suggestions are always welcome LoopDocs design Sections specific to experienced Loopers are after the sections for new Loopers The goal is to make LoopDocs easier for new Loopers to navigate Experienced Loopers can scroll ahead, check the page table of contents or use the search feature All Loopers \u00b6 These pages have a lot of detailed Loop information. Displays Settings Therapy Settings Optional Services And a lot of detailed information about Status and Commands for: RileyLink Omnipod Common Medtronic Safety \u00b6 Please be informed so you can Loop safely. Consult with your health care professional regarding your diabetes management. Open Source The Loop app is an open source project used by many, but it is not approved for therapy by any government organization. You take full responsibility for building and running this system and do so at your own risk.","title":"Loop 3 Overview"},{"location":"loop-3/loop-3-overview/#loop-3-overview","text":"Loop 3.0 is the next big release. It is being developed and tested under the dev branch (Loop-dev). Loop-dev has significant improvements and looks different (in some ways) from the Loop 2.2.x versions. Loop-dev The dev branch of Loop is currently under test by experienced loopers. If you are testing Loop-dev, the version number reported on your settings screen is Loop v2.3.0 (57). To report to developers about which particular version of Loop-dev you are running, look at the top of the Loop Report under Build Details . The 7-digit alphanumeric indication to the right of workspaceGitRevision is sufficient. When this version is released, it will be Loop 3.0 and the interface for Loop 3.x versions will use this updated documentation. To make life easier for those of us preparing the new documentation, the wording on many pages in the Loop 3 section is set in the future - after the release This page will be updated and it and the rest of the Loop 3 section will be moved to Set Up App with the Loop 2.2.x version maintained under a sub-menu","title":"Loop 3 Overview"},{"location":"loop-3/loop-3-overview/#new-with-loop-3","text":"Loop 3 redesigns the app, building off work by Tidepool and DIY contributors. Some changes might not be obvious, but make the app more robust. Here are some highlights: Onboarding protocol with guardrails to help configure settings Streamlined main screen display and user experience Better alerts and notifications Omnipod Dash compatibility Fingerstick blood glucose prompts when data is stale Non-pump insulin entry within the app Remote Carb/Bolus capability","title":"New with Loop 3"},{"location":"loop-3/loop-3-overview/#building-loop-3","text":"When Loop 3 is released, the build instructions will be updated (please allow a few days for documentation to catch up. Experienced users are testing Loop-dev using the Loop-dev download and build instructions. Do not build Loop-dev unless you are willing to pay attention to announcements on zulipchat and build frequently (plan on once a week.) Users of dev Branch It is up to you to review these new pages for the information you need. Please subscribe to the Documentation Stream on zulipchat. You will see a post there every time LoopDocs is updated. Those of us who have been testing Loop-dev are very excited for this major update.","title":"Building Loop 3"},{"location":"loop-3/loop-3-overview/#set-up-loop-3-overview","text":"Congratulations on Building Loop! The first time you build Loop 3, the app takes you through the Onboarding process. Review the Onboarding material before continuing. First a suggestion and some orientation: Suggestion Start by reading each page without clicking on any links Return later to the page and click the links for more detail on a particular topic. Use the back button on your browser to go back to your starting point.","title":"Set Up Loop 3 Overview"},{"location":"loop-3/loop-3-overview/#brand-new-loopers","text":"Review these 3 pages in detail before you touch any buttons on your app Onboarding Add CGM Add Pump Read the rest of the pages listed under All Loopers , below. The information on the pages will become clearer as you learn to use the app. You can find a page later using the search function Complete the Onboarding steps to set up Loop Learn to use Loop starting with the Open Loop page Once you are comfortable with manually controlling Loop and have settings that work with the algorithm, move on to the Closed Loop page Make suggestions if you think parts of LoopDocs could be clarified, especially from the viewpoint of a brand-new Looper","title":"Brand New Loopers"},{"location":"loop-3/loop-3-overview/#experienced-loopers","text":"Review the 3 pages mentioned above for new Loopers and the section for experienced Loopers on the Onboarding page. Read the rest of the pages listed under All Loopers , below Some of the screens and user interface changed with Loop 3 Many of the new Loop 3 features are described Reach out if information is missing or needs to be clarified, suggestions are always welcome LoopDocs design Sections specific to experienced Loopers are after the sections for new Loopers The goal is to make LoopDocs easier for new Loopers to navigate Experienced Loopers can scroll ahead, check the page table of contents or use the search feature","title":"Experienced Loopers"},{"location":"loop-3/loop-3-overview/#all-loopers","text":"These pages have a lot of detailed Loop information. Displays Settings Therapy Settings Optional Services And a lot of detailed information about Status and Commands for: RileyLink Omnipod Common Medtronic","title":"All Loopers"},{"location":"loop-3/loop-3-overview/#safety","text":"Please be informed so you can Loop safely. Consult with your health care professional regarding your diabetes management. Open Source The Loop app is an open source project used by many, but it is not approved for therapy by any government organization. You take full responsibility for building and running this system and do so at your own risk.","title":"Safety"},{"location":"loop-3/medtronic/","text":"Medtronic Pump \u00b6 Pump Settings \u00b6 To bring up the Pump Settings display, tap on the pump icon in the Heads Up Display ( HUD ) or your connected pump in the Loop Settings screen. Medtronic Status and Commands \u00b6 Medtronic status and commands are found in the Pump Settings screen shown in the graphic below. The top section is configured at the time the pump is connected to Loop. You cannot edit those lines. Suspend Delivery \u00b6 Tapping on the Suspend Delivery row will suspend all insulin delivery: basals, temp basals, and boluses in progress. When you press Suspend Delivery , the label changes to Suspending while Loop is communicating with the pump. When the label changes to Resume Delivery , all insulin delivery is stopped until the user resumes using the HUD Status Row, the Pump Settings screen or on the pump itself. As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. Make sure your RileyLink device is powered on and close to the phone and pump. When the phone is in portrait mode, so the HUD is visible: The user is alerted that pump is suspended by the HUD Pump Status Icon . The HUD Status Row message can be tapped to resume delivery. You can still suspend and resume insulin on the pump itself. It may take until the next Loop cycle (typically less than 5 minutes), but Loop will detect that the pump is suspended or basal is resumed and the HUD Status Row will update. If you request a manual bolus with Loop while the pump is suspended, Loop resumes basal delivery as well. No automated boluses are initiated while suspended, only manual ones. Change Time Zone \u00b6 During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to Change Time Zone . Please review Time Zone for more details. If you notice a small clock symbol in upper right of the pump status icon, that indicates the time zone for the pump and phone are not the same. Pump Battery Type \u00b6 The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump . Preferred Data Source \u00b6 Leave the Preferred Data Source set to on Event History . Insulin Type \u00b6 You selected insulin type when connecting to this pump. Use this row if you switch to a different type of insulin. The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model Use MySentry \u00b6 Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly. This option allows you to turn off MySentry within the Loop app. Devices \u00b6 This allows access to the RileyLink screen for each connected RileyLink compatible device. Delete Pump \u00b6 If you want to switch to a different pump you must first delete this one: Deselect your RileyLink compatible device Move the slider(s) so it is no longer green Tap on Delete Pump Acknowledge you really mean it when asked by tapping Delete Pump again Add a new pump For more information, follow this link: Modify Pump .","title":"Loop 3 Medtronic"},{"location":"loop-3/medtronic/#medtronic-pump","text":"","title":"Medtronic Pump"},{"location":"loop-3/medtronic/#pump-settings","text":"To bring up the Pump Settings display, tap on the pump icon in the Heads Up Display ( HUD ) or your connected pump in the Loop Settings screen.","title":"Pump Settings"},{"location":"loop-3/medtronic/#medtronic-status-and-commands","text":"Medtronic status and commands are found in the Pump Settings screen shown in the graphic below. The top section is configured at the time the pump is connected to Loop. You cannot edit those lines.","title":"Medtronic Status and Commands"},{"location":"loop-3/medtronic/#suspend-delivery","text":"Tapping on the Suspend Delivery row will suspend all insulin delivery: basals, temp basals, and boluses in progress. When you press Suspend Delivery , the label changes to Suspending while Loop is communicating with the pump. When the label changes to Resume Delivery , all insulin delivery is stopped until the user resumes using the HUD Status Row, the Pump Settings screen or on the pump itself. As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. Make sure your RileyLink device is powered on and close to the phone and pump. When the phone is in portrait mode, so the HUD is visible: The user is alerted that pump is suspended by the HUD Pump Status Icon . The HUD Status Row message can be tapped to resume delivery. You can still suspend and resume insulin on the pump itself. It may take until the next Loop cycle (typically less than 5 minutes), but Loop will detect that the pump is suspended or basal is resumed and the HUD Status Row will update. If you request a manual bolus with Loop while the pump is suspended, Loop resumes basal delivery as well. No automated boluses are initiated while suspended, only manual ones.","title":"Suspend Delivery"},{"location":"loop-3/medtronic/#change-time-zone","text":"During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to Change Time Zone . Please review Time Zone for more details. If you notice a small clock symbol in upper right of the pump status icon, that indicates the time zone for the pump and phone are not the same.","title":"Change Time Zone"},{"location":"loop-3/medtronic/#pump-battery-type","text":"The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump .","title":"Pump Battery Type"},{"location":"loop-3/medtronic/#preferred-data-source","text":"Leave the Preferred Data Source set to on Event History .","title":"Preferred Data Source"},{"location":"loop-3/medtronic/#insulin-type","text":"You selected insulin type when connecting to this pump. Use this row if you switch to a different type of insulin. The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model","title":"Insulin Type"},{"location":"loop-3/medtronic/#use-mysentry","text":"Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly. This option allows you to turn off MySentry within the Loop app.","title":"Use MySentry"},{"location":"loop-3/medtronic/#devices","text":"This allows access to the RileyLink screen for each connected RileyLink compatible device.","title":"Devices"},{"location":"loop-3/medtronic/#delete-pump","text":"If you want to switch to a different pump you must first delete this one: Deselect your RileyLink compatible device Move the slider(s) so it is no longer green Tap on Delete Pump Acknowledge you really mean it when asked by tapping Delete Pump again Add a new pump For more information, follow this link: Modify Pump .","title":"Delete Pump"},{"location":"loop-3/omnipod/","text":"Omnipod and Omnipod DASH Pump \u00b6 Pair Pod \u00b6 You'll be pairing a pod every 2 or 3 days (max pod life is 80 hours). You'll see this screen every time you ask Loop to Pair New Pod . The Omnipod Common pairing protocol is the same for all pods. The difference is that Omnipod requires a RileyLink compatible device and Omnipod DASH does not. There are also slight differences in some of the text and graphics, e.g., Omnipod DASH uses a blue needle cap and Omnipod has a clear needle cap. Graphic below shows the Pair Pod screen for Omnipod (left) and Omnipod DASH (right). Loop walks you through each step of the filling, pairing, priming, attaching and insertion process. It makes sure you are really ready to do the insertion. Please watch the video to see the full process before pairing your first pod. A video is found here for pairing a DASH pod . Once the pod starts priming in the video, you may want to skip forward (it takes about a minute to prime). Keep Gear Close Make sure phone (and RileyLink if using one) are close to the pod before you tap Pair Pod Do NOT move devices away from the pod until you see the blue check mark and the Continue button on the phone screen You can then move away to attach the pod to your body Make sure phone (and RileyLink if using one) are close to the pod before you tap Insert Cannula Do NOT move devices away from the pod until you see the blue check mark and the Continue button on the phone screen The Screen that says Setup Complete allows you to change the Scheduled Reminder for this pod if you want a different reminder time (including none) from your usual setting. This only changes the reminder for this one pod If you want to change all future reminders, tap on Notifications to modify the Reminder Default In that same location, you can also change notification for the current pod Pod Status \u00b6 The Pod Status screen is shown in the graphic below. The dashed green outline indicates the Device portion that is found only for the Omnipod . All other features of the screen are common for Omnipod and Omnipod DASH. Play Beeps \u00b6 If you want to make sure Loop can talk to your pod, click on the sound icon (highlighted by the red box) in the graphic above. If the icon is greyed out - that means Loop is having a communication issue reaching your pod. (More on this in the Alert Screens section.) Other Uses Find (or startle) your child Find the pod that fell off overnight and is mixed with the laundry Pod Expires \u00b6 This line provides a count-down until expiration along with a graphical representation of pod life Once you are on the final day, the time remaining until expiration starts to report in Hours and Minutes The solid bar is proportional to pod hours since activation It is blue for the first 48 hours It is orange for the last 24 hours and also appears in the HUD Pump Status icon After expiration, a full-width red bar is shown here and in the HUD Pump Status icon Once the pod officially expires, at 72 hours, there is an 8 hour grace period Insulet does not guarantee the pod will keep working that long, but it often does A note will appear on the Pod Status screen with count-down text: Change pod now. Insulin delivery will stop in HH hours, MM minutes or when no more insulin remains Basal Report \u00b6 The next row changes the label depending on the situation. In all cases, the current basal rate is reported. Label Description Scheduled Basal Pod is running the scheduled basal rate Insulin Delivery Pod is running an automated or manual temporary basal rate Insulin Remaining \u00b6 Pods start reporting reservoir values when 50 U are left. Value Meaning 50+ U Pod reservoir is greater than 50 U Value U Pod reservoir is estimated to be at least as great as the indicated value. 0 U Pod will attempt to deliver up to 4 U after it reports 0 U. This is not guaranteed. The pod senses when it is not successful delivering pulses and that can happen before 4 U have been delivered. Activity \u00b6 Suspend Delivery \u00b6 You may want to consider using a Manual Temp Basal of 0 U/hr instead of suspend. Tapping on Suspend Delivery brings up a timed reminder screen. You can choose to be reminded (via a beep on the pod itself) with 4 choices (or you can cancel the request): 30 minutes 1 hour 1 hour 30 minutes 2 hours After you select the reminder time, Loop issues a command to the pod to halt all insulin delivery: basals, temp basals, and boluses in progress. The label on the Suspend Delivery row changes to Suspending while Loop is communicating with the pump. When the label changes to Resume Delivery , all insulin delivery is stopped until the user resumes using the HUD Status Row or the Pod Status screen. As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. For Omnipod , make sure your RileyLink device is powered on and close to the phone and pod. When the phone is in portrait mode, so the HUD is visible: The user is alerted that pump is suspended by the HUD Pump Status Icon . The HUD Status Row message can be tapped to resume delivery. If you request a manual bolus with Loop while a pod is suspended, Loop will send a notification that Bolus Failed with instructions that Pump is Suspended, Resume Delivery. In other words, you must resume delivery before you will be allowed to bolus with pods. At the end of the reminder time, an alert beep is issued by the pod and a modal alert will be provided on the Loop app. You must acknowledge the modal alert on the phone to silence future pod alerts. Manually Resume Insulin Delivery The halt of all insulin delivery continues until you manually resume. There is no automatic resumption of basal insulin from a suspend command. If you select a Manual Temp Basal command of 0 U/hr instead of Suspend: Basal Delivery automatically resumes at the end of the selected duration without need for Loop to command it At the end of the duration, Loop will restore Closed Loop , if you were in closed loop when you issued the Manual Temp Basal command There are no beeps on the pod to remind you to resume insulin delivery Manual Temp Basal \u00b6 Tap on the Set Temporary Basal Rate to select a Manual Temp Basal. This brings up the Temporary Basal screen shown on the left of the graphic below. You can select any basal rate from 0 U/hr to your maximum basal rate set in Delivery Limits You can choose any duration up to 12 hours in half-hour increments Once you select rate and duration and tap Set Temporary Basal , Loop goes into Open Loop mode and the pod is commanded to that rate and duration. In other words, you can leave your phone behind and the selected basal rate continues for the selected basal duration. There will be no automated adjustments of delivery for the temp basal duration. Once the manual temp basal command is sent to the pod, Loop changes to Open Loop mode and updates displays as shown in the graphic above Pod Status screen: The Basal Report updates with the new rate and label indicates Insulin Delivery The row label changes to Cancel Manual Basal and reports the time remaining until the temp basal expires Main screen (refer to red rectangle highlights): The HUD Loop Status Icon changes to an Open Loop icon and the HUD Pump Status Icon indicates Manual Basal The Insulin Delivery plot indicates the planned duration of the manual temp basal The Glucose Prediction updates using that assumed change in insulin delivery So long as you were in Closed Loop before requesting the Temp Basal, Loop returns to Closed Loop automatically when the duration ends or you cancel the temporary basal. Automatic Resumption of Scheduled Basal The phone does not need to be in contact with the pod for insulin delivery to return to scheduled basal at the end of the selected duration. That duration is commanded along with the temporary rate. Once the pod accepts that command, and you'll get an error message if it does not, the pod will resume scheduled basal rate without further commanding if there is insulin in the reservoir and a pod fault does not occur. Devices \u00b6 For Omnipod , there is a Devices section used to access the RileyLink status and commands screen. Pod Details \u00b6 The Pod Details table, shown in the graphic below, reports: Time at which pod was Activated Time at which pod will Expire Access to Device Details Time Drift The pod will expire when it thinks it has been 80 hours. The pod clock may drift a few seconds with respect to phone time during the pod life. The Expiration time gets updated when the pod reports how long it thinks it has been since it was activated. Device Details \u00b6 Some additional details from the most recent pod status response message are displayed if you tap the Device Details row, as shown in the graphic below. Most people will not need to view this. The graphic shows an example for Omnipod on the left, Omnipod DASH (TWI BOARD) in the middle and Omnipod DASH (NXP BLE ) on the right. Do not worry about the different board styles (Device Name) for DASH. The developers did that for you. If you are asking for help from a mentor - they may request this information. Replace Pod \u00b6 When you tap on the Replace Pod row, the Deactivate Pod screen, shown below, is displayed. If you tap Deactivate Pod on this screen, insulin delivery stops for this pod and cannot be resumed If you have changed your mind, tap Back or Cancel to continue using the pod Configuration \u00b6 Notification Settings \u00b6 When you tap on the Notifcation Settings row, the graphic below is displayed. The notifications are a combination of beeps on the pod with associated modal alerts on the phone app that must be acknowledged to prevent future beeps. Expiration Reminder Default: changes the reminder time for any future pod (not the current one) Scheduled Reminder: affects the reminder for the current pod (not future pods) If no pod is connected, you will not see the Scheduled Reminder section Low Reservoir Reminder: changes the reminder level for the current pod and all future pods If no pod is connected, the app will not allow you to modify this setting Change it after the next pod is paired Critical Alerts: Information row about which alerts can be silenced by phone settings Confidence Reminders \u00b6 When you tap on the Confidence Reminder row, the graphic below is displayed. You can choose from three levels of audible responses that Loop requests from the pod: Disabled: no audible pod alerts to acknowledge commands Enabled: each manual command provides an audible sound to acknowledge it: For manual dosage change, the pod beeps at both the beginning and end of the manual command. For automated dosage change, the pod does not beep. Extended: Automated dosage change beeps, similar to the manual commands when set to Enabled Insulin Type \u00b6 You selected insulin type when connecting to this pump. Tap on this row if you switch to a different type of insulin. The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model Pump Time \u00b6 Click on Time Zone to understand how Loop treats \"pump\" time for pods. Previous Pod Information \u00b6 When you tap on the Previous Pod Information row, a graphic similar to those shown below is displayed. This provides summary information about the pod before the one currently in use. If the previous pod had a fault and you choose to report it to Insulet, this screen reports the PDM reference code that Insulet uses in their tracking system. Do Not Call Insulet about 0x31 Faults If you should happen to get an 0x31 (last 3 digits of the PDM ref code of \"-049\") fault, do not report this to Insulet and do not ask for a replacement. This means Loop did not ensure the pod was in the correct state to accept a command. In other words, it was a bug in the Loop code. We believe the code has been updated to prevent these faults. There was a brief period during development in which at least one of these happened - this was fixed on July 3, 2022. If this happens to you, report it on zulipchat for the developers, save a Loop Report and rebuild if you have an older version of the development code. Pod Error Messages \u00b6 This section presents some of the error message screens you may see specific to pods. Pod Faults \u00b6 You are likely to hear a pod fault before Loop notices. If your phone is locked, Loop only checks status every 5 minutes for Omnipod or 3 minutes for Omnipod DASH. Unlock your phone, open Loop, navigate to the Pod Status screen and tap on Deactivate Pod to stop the noise. The pod fault - even if it does not show up in the HUD or the Pod Status screen, will be picked up by the process of hitting Deactivate Pod. You can then view the Fault information in the Previous Pod Information screen.","title":"Loop 3 Omnipod"},{"location":"loop-3/omnipod/#omnipod-and-omnipod-dash-pump","text":"","title":"Omnipod and Omnipod DASH Pump"},{"location":"loop-3/omnipod/#pair-pod","text":"You'll be pairing a pod every 2 or 3 days (max pod life is 80 hours). You'll see this screen every time you ask Loop to Pair New Pod . The Omnipod Common pairing protocol is the same for all pods. The difference is that Omnipod requires a RileyLink compatible device and Omnipod DASH does not. There are also slight differences in some of the text and graphics, e.g., Omnipod DASH uses a blue needle cap and Omnipod has a clear needle cap. Graphic below shows the Pair Pod screen for Omnipod (left) and Omnipod DASH (right). Loop walks you through each step of the filling, pairing, priming, attaching and insertion process. It makes sure you are really ready to do the insertion. Please watch the video to see the full process before pairing your first pod. A video is found here for pairing a DASH pod . Once the pod starts priming in the video, you may want to skip forward (it takes about a minute to prime). Keep Gear Close Make sure phone (and RileyLink if using one) are close to the pod before you tap Pair Pod Do NOT move devices away from the pod until you see the blue check mark and the Continue button on the phone screen You can then move away to attach the pod to your body Make sure phone (and RileyLink if using one) are close to the pod before you tap Insert Cannula Do NOT move devices away from the pod until you see the blue check mark and the Continue button on the phone screen The Screen that says Setup Complete allows you to change the Scheduled Reminder for this pod if you want a different reminder time (including none) from your usual setting. This only changes the reminder for this one pod If you want to change all future reminders, tap on Notifications to modify the Reminder Default In that same location, you can also change notification for the current pod","title":"Pair Pod"},{"location":"loop-3/omnipod/#pod-status","text":"The Pod Status screen is shown in the graphic below. The dashed green outline indicates the Device portion that is found only for the Omnipod . All other features of the screen are common for Omnipod and Omnipod DASH.","title":"Pod Status"},{"location":"loop-3/omnipod/#play-beeps","text":"If you want to make sure Loop can talk to your pod, click on the sound icon (highlighted by the red box) in the graphic above. If the icon is greyed out - that means Loop is having a communication issue reaching your pod. (More on this in the Alert Screens section.) Other Uses Find (or startle) your child Find the pod that fell off overnight and is mixed with the laundry","title":"Play Beeps"},{"location":"loop-3/omnipod/#pod-expires","text":"This line provides a count-down until expiration along with a graphical representation of pod life Once you are on the final day, the time remaining until expiration starts to report in Hours and Minutes The solid bar is proportional to pod hours since activation It is blue for the first 48 hours It is orange for the last 24 hours and also appears in the HUD Pump Status icon After expiration, a full-width red bar is shown here and in the HUD Pump Status icon Once the pod officially expires, at 72 hours, there is an 8 hour grace period Insulet does not guarantee the pod will keep working that long, but it often does A note will appear on the Pod Status screen with count-down text: Change pod now. Insulin delivery will stop in HH hours, MM minutes or when no more insulin remains","title":"Pod Expires"},{"location":"loop-3/omnipod/#basal-report","text":"The next row changes the label depending on the situation. In all cases, the current basal rate is reported. Label Description Scheduled Basal Pod is running the scheduled basal rate Insulin Delivery Pod is running an automated or manual temporary basal rate","title":"Basal Report"},{"location":"loop-3/omnipod/#insulin-remaining","text":"Pods start reporting reservoir values when 50 U are left. Value Meaning 50+ U Pod reservoir is greater than 50 U Value U Pod reservoir is estimated to be at least as great as the indicated value. 0 U Pod will attempt to deliver up to 4 U after it reports 0 U. This is not guaranteed. The pod senses when it is not successful delivering pulses and that can happen before 4 U have been delivered.","title":"Insulin Remaining"},{"location":"loop-3/omnipod/#activity","text":"","title":"Activity"},{"location":"loop-3/omnipod/#suspend-delivery","text":"You may want to consider using a Manual Temp Basal of 0 U/hr instead of suspend. Tapping on Suspend Delivery brings up a timed reminder screen. You can choose to be reminded (via a beep on the pod itself) with 4 choices (or you can cancel the request): 30 minutes 1 hour 1 hour 30 minutes 2 hours After you select the reminder time, Loop issues a command to the pod to halt all insulin delivery: basals, temp basals, and boluses in progress. The label on the Suspend Delivery row changes to Suspending while Loop is communicating with the pump. When the label changes to Resume Delivery , all insulin delivery is stopped until the user resumes using the HUD Status Row or the Pod Status screen. As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. For Omnipod , make sure your RileyLink device is powered on and close to the phone and pod. When the phone is in portrait mode, so the HUD is visible: The user is alerted that pump is suspended by the HUD Pump Status Icon . The HUD Status Row message can be tapped to resume delivery. If you request a manual bolus with Loop while a pod is suspended, Loop will send a notification that Bolus Failed with instructions that Pump is Suspended, Resume Delivery. In other words, you must resume delivery before you will be allowed to bolus with pods. At the end of the reminder time, an alert beep is issued by the pod and a modal alert will be provided on the Loop app. You must acknowledge the modal alert on the phone to silence future pod alerts. Manually Resume Insulin Delivery The halt of all insulin delivery continues until you manually resume. There is no automatic resumption of basal insulin from a suspend command. If you select a Manual Temp Basal command of 0 U/hr instead of Suspend: Basal Delivery automatically resumes at the end of the selected duration without need for Loop to command it At the end of the duration, Loop will restore Closed Loop , if you were in closed loop when you issued the Manual Temp Basal command There are no beeps on the pod to remind you to resume insulin delivery","title":"Suspend Delivery"},{"location":"loop-3/omnipod/#manual-temp-basal","text":"Tap on the Set Temporary Basal Rate to select a Manual Temp Basal. This brings up the Temporary Basal screen shown on the left of the graphic below. You can select any basal rate from 0 U/hr to your maximum basal rate set in Delivery Limits You can choose any duration up to 12 hours in half-hour increments Once you select rate and duration and tap Set Temporary Basal , Loop goes into Open Loop mode and the pod is commanded to that rate and duration. In other words, you can leave your phone behind and the selected basal rate continues for the selected basal duration. There will be no automated adjustments of delivery for the temp basal duration. Once the manual temp basal command is sent to the pod, Loop changes to Open Loop mode and updates displays as shown in the graphic above Pod Status screen: The Basal Report updates with the new rate and label indicates Insulin Delivery The row label changes to Cancel Manual Basal and reports the time remaining until the temp basal expires Main screen (refer to red rectangle highlights): The HUD Loop Status Icon changes to an Open Loop icon and the HUD Pump Status Icon indicates Manual Basal The Insulin Delivery plot indicates the planned duration of the manual temp basal The Glucose Prediction updates using that assumed change in insulin delivery So long as you were in Closed Loop before requesting the Temp Basal, Loop returns to Closed Loop automatically when the duration ends or you cancel the temporary basal. Automatic Resumption of Scheduled Basal The phone does not need to be in contact with the pod for insulin delivery to return to scheduled basal at the end of the selected duration. That duration is commanded along with the temporary rate. Once the pod accepts that command, and you'll get an error message if it does not, the pod will resume scheduled basal rate without further commanding if there is insulin in the reservoir and a pod fault does not occur.","title":"Manual Temp Basal"},{"location":"loop-3/omnipod/#devices","text":"For Omnipod , there is a Devices section used to access the RileyLink status and commands screen.","title":"Devices"},{"location":"loop-3/omnipod/#pod-details","text":"The Pod Details table, shown in the graphic below, reports: Time at which pod was Activated Time at which pod will Expire Access to Device Details Time Drift The pod will expire when it thinks it has been 80 hours. The pod clock may drift a few seconds with respect to phone time during the pod life. The Expiration time gets updated when the pod reports how long it thinks it has been since it was activated.","title":"Pod Details"},{"location":"loop-3/omnipod/#replace-pod","text":"When you tap on the Replace Pod row, the Deactivate Pod screen, shown below, is displayed. If you tap Deactivate Pod on this screen, insulin delivery stops for this pod and cannot be resumed If you have changed your mind, tap Back or Cancel to continue using the pod","title":"Replace Pod"},{"location":"loop-3/omnipod/#configuration","text":"","title":"Configuration"},{"location":"loop-3/omnipod/#notification-settings","text":"When you tap on the Notifcation Settings row, the graphic below is displayed. The notifications are a combination of beeps on the pod with associated modal alerts on the phone app that must be acknowledged to prevent future beeps. Expiration Reminder Default: changes the reminder time for any future pod (not the current one) Scheduled Reminder: affects the reminder for the current pod (not future pods) If no pod is connected, you will not see the Scheduled Reminder section Low Reservoir Reminder: changes the reminder level for the current pod and all future pods If no pod is connected, the app will not allow you to modify this setting Change it after the next pod is paired Critical Alerts: Information row about which alerts can be silenced by phone settings","title":"Notification Settings"},{"location":"loop-3/omnipod/#confidence-reminders","text":"When you tap on the Confidence Reminder row, the graphic below is displayed. You can choose from three levels of audible responses that Loop requests from the pod: Disabled: no audible pod alerts to acknowledge commands Enabled: each manual command provides an audible sound to acknowledge it: For manual dosage change, the pod beeps at both the beginning and end of the manual command. For automated dosage change, the pod does not beep. Extended: Automated dosage change beeps, similar to the manual commands when set to Enabled","title":"Confidence Reminders"},{"location":"loop-3/omnipod/#insulin-type","text":"You selected insulin type when connecting to this pump. Tap on this row if you switch to a different type of insulin. The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model","title":"Insulin Type"},{"location":"loop-3/omnipod/#pump-time","text":"Click on Time Zone to understand how Loop treats \"pump\" time for pods.","title":"Pump Time"},{"location":"loop-3/omnipod/#previous-pod-information","text":"When you tap on the Previous Pod Information row, a graphic similar to those shown below is displayed. This provides summary information about the pod before the one currently in use. If the previous pod had a fault and you choose to report it to Insulet, this screen reports the PDM reference code that Insulet uses in their tracking system. Do Not Call Insulet about 0x31 Faults If you should happen to get an 0x31 (last 3 digits of the PDM ref code of \"-049\") fault, do not report this to Insulet and do not ask for a replacement. This means Loop did not ensure the pod was in the correct state to accept a command. In other words, it was a bug in the Loop code. We believe the code has been updated to prevent these faults. There was a brief period during development in which at least one of these happened - this was fixed on July 3, 2022. If this happens to you, report it on zulipchat for the developers, save a Loop Report and rebuild if you have an older version of the development code.","title":"Previous Pod Information"},{"location":"loop-3/omnipod/#pod-error-messages","text":"This section presents some of the error message screens you may see specific to pods.","title":"Pod Error Messages"},{"location":"loop-3/onboarding/","text":"Onboarding \u00b6 New Looper \u00b6 New Loopers Should NOT Use Loop-dev Before it is Released Once Loop-dev is released, these Loop 3 pages will be moved to the Set Up section of LoopDocs. To make life easier for those of us preparing the new documentation, the wording on many pages in the Loop 3 section is set in the future - after the release. This is not an invitation for brand-new loopers to build Loop-dev as their first looping adventure. Please review this page, and the rest of the Loop 3 Section (which will become the Set Up section once Loop-dev is released), before pressing any buttons on your phone with your new Loop 3 app. As soon as your app builds on your phone, you are guided through the onboarding (set up) process. You will see information screens for each Therapy Setting and must acknowledge each screen. You can review those informational screens later by clicking the Therapy Settings screen after a pump has been added. Click on this Video of Onboarding link to watch the onboarding process for a pre-release version tested in March 2022. Entering and Editing Values \u00b6 This section explains how to enter and edit values with Loop 3. For more information on a specific therapy setting, tap on the information icon on the screen or review the detailed Therapy Settings page in LoopDocs Some screens only have one value for a given quantity In that case, you can tap on and edit that value If you tap on the value and the Confirm Setting or Save button is inactive, move the picker value to make the button active, Some screens allow different values for different times of day Scheduled entries must start at midnight and at least one entry is required During onboarding, new loopers must tap the + sign to get the initial midnight time slot When one or more entries are present, tap the + sign to add an entry Choose any time-slot without an entry Enter desired value Tap Add to include this entry in your schedule Tap on a time-slot with an entry to edit it You can change the time within the range of half hour after the slot immediately before and half hour before the slot after the slot under edit You can edit the value to any allowed value To delete one or more entries, tap on Edit Then tap the red icon to the left of the time-slot you want to delete and select delete Continue until done, then tap Done Glucose Units \u00b6 First time connecting a glucose monitoring device to your phone's Apple Health app? If so, the units on the phone might not be in the units you want, i.e., mg/dL or mmol/L. Loop uses the units in Apple Health. If the Apple Health units are mg/dL and you try to enter therapy settings suitable for mmol/L, or vice versa, the guardrails in Loop will prevent your entries If this happens: Quit onboarding Click on the link FAQs: How Do I Change Glucose Units? Start the Loop app again and Onboarding will restart Onboarding Steps \u00b6 Each onboarding step is presented in order on this page. Please follow this document while entering values into your app for the first time. Settings Help Please stay in Open Loop until you verify that your settings (basal rates, insulin sensitivity, carb ratio, etc) are properly adjusted to work with the Loop algorithm. You may need time to evaluate and perhaps identify settings to adjust. If you need help with your settings adjustment, you may find useful tips in the companion website, LoopTips at this link: LoopTips: Settings tab. Welcome to Loop \u00b6 The first screen you will see is the Welcome to Loop screen shown in the graphic below. Tap on Let's Go to continue. Apple Health Permissions \u00b6 Next, you need to give Loop permission to read and write to Apple Health. In the graphic below, from left to right, tap on the buttons highlighted with red boxes to configure permissions: Tap on the Share with Apple Heath button Tap on the Turn On All button in the middle Tap on the Allow button at upper right You need to enable Health Permissions for Loop to work. You can review the permissions screen later. FAQS: How Do I Modify Apple HealthKit Permissions . Connect Loop to Nightscout \u00b6 The next screen, shown on the left of the graphic below, enables the user to both connect Loop to Nightscout and to download existing Loop settings from Nightscout. Nightscout Nightscout is not required for Loop It can be added later If you have do not have a Nightscout site, or choose not to use it, select Setup Loop without Nightscout and skip ahead to Therapy Settings (Onboarding) If you have a Nightscout site, select Use Nightscout with Loop to connect Loop to your site and download your profile ( Therapy Settings ) from Nightscout for review. If you select Use Nightscout with Loop : The right side of the graphic above shows the screen used to enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET . Once those credentials are accepted, choose whether you want to import your settings from your Nightscout profile (including any overrides previously saved). Every Therapy Setting downloaded from Nightscout is presented for review. Therapy Settings (Onboarding) \u00b6 The next onboarding screens take you through the therapy settings one at a time. The therapy settings are the heart of how Loop makes predictions. If your settings are not correct, the predictions will not be correct. Therapy Settings An informational graphic is shown before you are asked to enter or confirm each therapy setting This Onboarding Page provides a brief summary of each therapy setting. Each setting section on this page has a link to a more detailed description of that setting on the Therapy Settings page. If you follow a link, click on your browser back button to return to your place on this Onboarding page While onboarding, you will see, in order: Glucose Safety Limit Correction Range Pre-Meal Range Basal Rates Delivery Limits Maximum Basal Rate Maximum Bolus Carb Ratios Insulin Sensitivites Guardrails While Onboarding \u00b6 Warning - Outside Typical? The Therapy Settings have \"guardrails\" to warn you if your settings are unusual. Some indications are based on surveys of experienced Loopers Some indications are for safety It's fine to put Glucose Safety or Correction Ranges higher than \"is typical\" It's fine to put Delivery Limits lower than \"is typical\" Take the yellow (and red) indications with a grain of salt. You will get an extra modal screen that you must acknowledge. Simply confirm your choice and keep going. It's OK to ignore warnings when being conservative Experienced loopers may choose to ignore warnings to be more aggressive A red limit cannot be exceeded without modifying the code itself. But values that show up as red can be saved - they are valid therapy selections. The Guardrails for Settings are summarized on the Therapy Settings page. Glucose Safety Limit \u00b6 If Loop predicts that your glucose will go below the Glucose Safety Limit at any time in the next 3 hours and Loop is in Closed Loop , it will set a temporary basal rate of 0 U/hr in an attempt to prevent that future low. If you ask Loop for a bolus recommendation, and loop predicts your glucose will go below the Glucose Safety Limit at any time in the next 3 hours, no bolus will be recommended. The Glucose Safety Limit can never be higher than the lowest of these related settings: Correction Range and Pre-Meal Range . Correction Range \u00b6 Loop uses the Correction Range as the goal when it recommends a bolus and makes automated adjustments to insulin dosing. Correction Range vs Time in Range For example, you may choose a correction range of 100-110 mg/dL (5.6-6.1 mmol/L) for Loop, but you may monitor your \"success\" or Time in Range using 70-180 mg/dL (3.9-10 mmol/L). Manual vs Automated Dosing \u00b6 Loop estimates future glucose over the next 6 hours ( DIA ) and, when in closed loop, adjusts insulin dosing. Loop uses or recommends the smallest amount of insulin that will bring you to your target ( Correction Range midpoint) over the whole forecast. If you ask Loop for a manual Bolus recommendation while your current glucose is below the bottom of the correction range and above the glucose safety limit, Loop will recommend a value that should keep your glucose above the safety limit. This is only if you manually request a bolus recommendation. Loop will not automatically provide extra insulin, via high temp basal or automatic bolus, until your current glucose is higher than the bottom of your correction range. Pre-Meal Range \u00b6 The Pre-Meal Range , which is optional, gives you a small amount of insulin before a meal to help control post-meal glucose spikes. The pre-meal icon is inactive if you choose not to enter a range. Example If your normal range is 100-110 mg/dL (5.6-6.1 mmol/L) and pre-meal range is 80-80 mg/d L (4.4 mmol/L), Loop will give you extra insulin to move you towards the lower range number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the pre-meal icon in the toolbar, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first. Basal Rates \u00b6 Only one Basal Rate schedule may be configured in the Loop app and the schedule must start at midnight. If you onboard basal rates before a pump is added, you are limited to increments of 0.05 U/hr for basal rates and 0.00 U/hr is not allowed. Enter values close to what you actually use because the values determine your maximum basal rate in the Delivery Limits . Once a pump is added, the basal increments will match those on your pump. The onboarding basal rates will be saved to your added pump. Return to Therapy Settings to adjust the Basal rates to your pump increments. Medtronic Pump Users \u00b6 If you will be connecting a Medtronic pump after onboarding: The values entered here will overwrite whatever is in your Medtronic pump when you first connect it For those who build Loop 3 over an existing Loop app with a Medtronic pump attached - you will just be confirming values you used previously If you have values in a Loopable Medtronic pump that you plan to attach after onboarding - please record those values if they are important to you Delivery Limits \u00b6 The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits . The Maximum Basal Rate the app allows you to choose will be limited based on the basal rate schedule you just entered as well as pump limits, so make sure you put in sensible values. (There is a back button if you need it.) Medtronic Pump Users \u00b6 If you will be connecting a Medtronic pump after onboarding: The values entered here will overwrite whatever is in your Medtronic pump when you first connect it Make sure that the Delivery Limit values in the Medtronic pump are equal to or greater than the values you enter while onboarding or you will not be allowed to connect to the pump. Maximum Basal Rate \u00b6 Maximum Basal Rate will cap the the maximum temporary basal rate that Loop issues to meet your correction range when you are in Closed Loop with a Dosing Strategy of Temp Basal Only . For safety, new loopers should start with max basal set 2-3 times their highest scheduled basal rate. If you choose 2 times your highest scheduled basal, you may get a message informing you this is \"lower than typical.\" Ignore this to put safety first as a new looper. Experienced loopers typically set their maximum basal rate around 3-4 times their highest scheduled basal rate. Loop 3 app will not allow you to exceed 6.4 times your highest scheduled rate. Maximum Bolus \u00b6 Maximum Bolus is the highest bolus amount Loop can recommend at one time to cover carbs or bring down high glucose. For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U. Carb Ratios \u00b6 Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin. At least one carb ratio ( CR ) must be entered A daily schedule with varying CR can be entered Insulin Sensitivities \u00b6 Your Insulin Sensitivity Factor is the drop in glucose expected from one unit of insulin over the entire duration of insulin activity. It may be different than the correction factor used with shots or manual pumping. Loop uses your ISF every 5 minutes when calculating predicted glucose levels. At least one insulin sensitivity factor ( ISF ) must be entered A daily schedule with varying ISF can be entered Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF . Incorrectly set ISF is the most common cause of roller coaster glucoses for new Loop users. You may need to raise (increase) your ISF value/number to help smooth a roller coaster glucose trend. You can read about that topic more over in LoopTips here . Therapy Settings Review \u00b6 Once these are all entered, the Therapy Settings screen is shown for your review. You must scroll down to see all settings and reveal the Save Settings button. Only the top and bottom portions are shown, the other settings were not captured for this graphic. Notifications and Bluetooth \u00b6 Once you save settings, Loop asks to send notifications and use Bluetooth. You must allow both for Loop to work properly. Notifications are necessary for safety reasons while Looping. Bluetooth lets Loop get data from your CGM and talk to your Pump. CGM and Pump \u00b6 For new Loopers, it is now time to add a CGM and a pump. Follow these links for instructions. Add a CGM Add a Pump Medtronic CGM If you plan to use a Medtronic Enlite sensor for your CGM , you must first add that pump to Loop before the sensor will be shown as an option. If you built Loop 3 over an existing app, your CGM and pump selections should have carried over. Experienced Loopers \u00b6 The first time you build Loop 3 on a device, you will need to go through the onboarding process too. If you build Loop 3 over Loop 2.2.x, the onboarding remembers the settings, previously saved overrides and your current pod or pump information is maintained. (Yes, you can build Loop 3 and keep using the same pod.) If you build Loop 3 onto a device without an existing Loop app and you have a Nightscout site, you can enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET and it will ask if you want to import your settings from your Nightscout profile. This includes all the overrides you have previously saved. If you are building on a device that does not have an existing Loop app and you choose not to use Nightscout, then follow the new Looper Onboarding Steps . You will be presented with an information screen describing the setting (with a continue button) followed by your current settings (if available), which you must confirm to keep - or can modify and then confirm to change. Depending on the device you are using, you may need to scroll down to see the Continue or Save buttons for each setting. What is in my Nightscout Profile To check what is in your Nightscout profile that Loop would use as part of onboarding, follow these instructions. Note: you will get a json file - look that up using your favorite internet search method. Open your Nightscout URL Click in the URL address and append this text \"/api/v1/profile.json\" You can download the file and examine it if you are interested Check Imported Settings \u00b6 WARNING The new onboarding forces you to check all your imported Therapy Settings (Onboarding Summary) but there may be other settings you need to check as well. Dosing Strategy : may be at the default value of Temp Basal Only , even if you were using Automatic Bolus with Loop 2.x.x Overrides: verify these are populated as expected Pumps that use a RileyLink : confirm the device is selected and active in the Pump settings screen Insulin Type : ensure the correct insulin type is selected Carb Absorption Time Update \u00b6 If you used earlier versions of Loop, please be aware that absorption times have changed. Loop-dev Carb Absorption Times Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details. Loop-dev uses absorption times of 30 minute, 3 hours and 5 hours for the Candy, Taco, Pizza icons Loop 2.2.x used 2 hours, 3 hours and 4 hours The 30 minute (candy) time is for rapid acting carbs only If you selected the candy icon for a complex meal, you told Loop to expect your glucose to rise rapidly. When that rapid rise does not materialize, you may find Loop predicts an unexpectedly low glucose because the algorithm assumes something must be affecting your glucose downward in a strong way. If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction. Carb Data Source \u00b6 Loop 3 does not read non-Loop carbohydrate entries from Apple Health, as previous versions did. It still writes to Apple Health. Some experienced loopers want to modify the code to enable Loop to read carbohydrate records from Apple Health with the full understanding of how that works. The instructions for this code customization option, using a flag set in the LoopConfigOverride.xcconfig file, will be added to the documentation later. For now search in zulipchat. Users who build Loop 3 over Loop 2.2.x, may find a permission switch to give Loop permission to read carb data from health, but without making the customization mentioned above, changing permission does not change the behavior of Loop.","title":"Loop 3 Onboarding"},{"location":"loop-3/onboarding/#onboarding","text":"","title":"Onboarding"},{"location":"loop-3/onboarding/#new-looper","text":"New Loopers Should NOT Use Loop-dev Before it is Released Once Loop-dev is released, these Loop 3 pages will be moved to the Set Up section of LoopDocs. To make life easier for those of us preparing the new documentation, the wording on many pages in the Loop 3 section is set in the future - after the release. This is not an invitation for brand-new loopers to build Loop-dev as their first looping adventure. Please review this page, and the rest of the Loop 3 Section (which will become the Set Up section once Loop-dev is released), before pressing any buttons on your phone with your new Loop 3 app. As soon as your app builds on your phone, you are guided through the onboarding (set up) process. You will see information screens for each Therapy Setting and must acknowledge each screen. You can review those informational screens later by clicking the Therapy Settings screen after a pump has been added. Click on this Video of Onboarding link to watch the onboarding process for a pre-release version tested in March 2022.","title":"New Looper"},{"location":"loop-3/onboarding/#entering-and-editing-values","text":"This section explains how to enter and edit values with Loop 3. For more information on a specific therapy setting, tap on the information icon on the screen or review the detailed Therapy Settings page in LoopDocs Some screens only have one value for a given quantity In that case, you can tap on and edit that value If you tap on the value and the Confirm Setting or Save button is inactive, move the picker value to make the button active, Some screens allow different values for different times of day Scheduled entries must start at midnight and at least one entry is required During onboarding, new loopers must tap the + sign to get the initial midnight time slot When one or more entries are present, tap the + sign to add an entry Choose any time-slot without an entry Enter desired value Tap Add to include this entry in your schedule Tap on a time-slot with an entry to edit it You can change the time within the range of half hour after the slot immediately before and half hour before the slot after the slot under edit You can edit the value to any allowed value To delete one or more entries, tap on Edit Then tap the red icon to the left of the time-slot you want to delete and select delete Continue until done, then tap Done","title":"Entering and Editing Values"},{"location":"loop-3/onboarding/#glucose-units","text":"First time connecting a glucose monitoring device to your phone's Apple Health app? If so, the units on the phone might not be in the units you want, i.e., mg/dL or mmol/L. Loop uses the units in Apple Health. If the Apple Health units are mg/dL and you try to enter therapy settings suitable for mmol/L, or vice versa, the guardrails in Loop will prevent your entries If this happens: Quit onboarding Click on the link FAQs: How Do I Change Glucose Units? Start the Loop app again and Onboarding will restart","title":"Glucose Units"},{"location":"loop-3/onboarding/#onboarding-steps","text":"Each onboarding step is presented in order on this page. Please follow this document while entering values into your app for the first time. Settings Help Please stay in Open Loop until you verify that your settings (basal rates, insulin sensitivity, carb ratio, etc) are properly adjusted to work with the Loop algorithm. You may need time to evaluate and perhaps identify settings to adjust. If you need help with your settings adjustment, you may find useful tips in the companion website, LoopTips at this link: LoopTips: Settings tab.","title":"Onboarding Steps"},{"location":"loop-3/onboarding/#welcome-to-loop","text":"The first screen you will see is the Welcome to Loop screen shown in the graphic below. Tap on Let's Go to continue.","title":"Welcome to Loop"},{"location":"loop-3/onboarding/#apple-health-permissions","text":"Next, you need to give Loop permission to read and write to Apple Health. In the graphic below, from left to right, tap on the buttons highlighted with red boxes to configure permissions: Tap on the Share with Apple Heath button Tap on the Turn On All button in the middle Tap on the Allow button at upper right You need to enable Health Permissions for Loop to work. You can review the permissions screen later. FAQS: How Do I Modify Apple HealthKit Permissions .","title":"Apple Health Permissions"},{"location":"loop-3/onboarding/#connect-loop-to-nightscout","text":"The next screen, shown on the left of the graphic below, enables the user to both connect Loop to Nightscout and to download existing Loop settings from Nightscout. Nightscout Nightscout is not required for Loop It can be added later If you have do not have a Nightscout site, or choose not to use it, select Setup Loop without Nightscout and skip ahead to Therapy Settings (Onboarding) If you have a Nightscout site, select Use Nightscout with Loop to connect Loop to your site and download your profile ( Therapy Settings ) from Nightscout for review. If you select Use Nightscout with Loop : The right side of the graphic above shows the screen used to enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET . Once those credentials are accepted, choose whether you want to import your settings from your Nightscout profile (including any overrides previously saved). Every Therapy Setting downloaded from Nightscout is presented for review.","title":"Connect Loop to Nightscout"},{"location":"loop-3/onboarding/#therapy-settings-onboarding","text":"The next onboarding screens take you through the therapy settings one at a time. The therapy settings are the heart of how Loop makes predictions. If your settings are not correct, the predictions will not be correct. Therapy Settings An informational graphic is shown before you are asked to enter or confirm each therapy setting This Onboarding Page provides a brief summary of each therapy setting. Each setting section on this page has a link to a more detailed description of that setting on the Therapy Settings page. If you follow a link, click on your browser back button to return to your place on this Onboarding page While onboarding, you will see, in order: Glucose Safety Limit Correction Range Pre-Meal Range Basal Rates Delivery Limits Maximum Basal Rate Maximum Bolus Carb Ratios Insulin Sensitivites","title":"Therapy Settings (Onboarding)"},{"location":"loop-3/onboarding/#glucose-safety-limit","text":"If Loop predicts that your glucose will go below the Glucose Safety Limit at any time in the next 3 hours and Loop is in Closed Loop , it will set a temporary basal rate of 0 U/hr in an attempt to prevent that future low. If you ask Loop for a bolus recommendation, and loop predicts your glucose will go below the Glucose Safety Limit at any time in the next 3 hours, no bolus will be recommended. The Glucose Safety Limit can never be higher than the lowest of these related settings: Correction Range and Pre-Meal Range .","title":"Glucose Safety Limit"},{"location":"loop-3/onboarding/#correction-range","text":"Loop uses the Correction Range as the goal when it recommends a bolus and makes automated adjustments to insulin dosing. Correction Range vs Time in Range For example, you may choose a correction range of 100-110 mg/dL (5.6-6.1 mmol/L) for Loop, but you may monitor your \"success\" or Time in Range using 70-180 mg/dL (3.9-10 mmol/L).","title":"Correction Range"},{"location":"loop-3/onboarding/#pre-meal-range","text":"The Pre-Meal Range , which is optional, gives you a small amount of insulin before a meal to help control post-meal glucose spikes. The pre-meal icon is inactive if you choose not to enter a range. Example If your normal range is 100-110 mg/dL (5.6-6.1 mmol/L) and pre-meal range is 80-80 mg/d L (4.4 mmol/L), Loop will give you extra insulin to move you towards the lower range number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the pre-meal icon in the toolbar, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first.","title":"Pre-Meal Range"},{"location":"loop-3/onboarding/#basal-rates","text":"Only one Basal Rate schedule may be configured in the Loop app and the schedule must start at midnight. If you onboard basal rates before a pump is added, you are limited to increments of 0.05 U/hr for basal rates and 0.00 U/hr is not allowed. Enter values close to what you actually use because the values determine your maximum basal rate in the Delivery Limits . Once a pump is added, the basal increments will match those on your pump. The onboarding basal rates will be saved to your added pump. Return to Therapy Settings to adjust the Basal rates to your pump increments.","title":"Basal Rates"},{"location":"loop-3/onboarding/#delivery-limits","text":"The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits . The Maximum Basal Rate the app allows you to choose will be limited based on the basal rate schedule you just entered as well as pump limits, so make sure you put in sensible values. (There is a back button if you need it.)","title":"Delivery Limits"},{"location":"loop-3/onboarding/#carb-ratios","text":"Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin. At least one carb ratio ( CR ) must be entered A daily schedule with varying CR can be entered","title":"Carb Ratios"},{"location":"loop-3/onboarding/#insulin-sensitivities","text":"Your Insulin Sensitivity Factor is the drop in glucose expected from one unit of insulin over the entire duration of insulin activity. It may be different than the correction factor used with shots or manual pumping. Loop uses your ISF every 5 minutes when calculating predicted glucose levels. At least one insulin sensitivity factor ( ISF ) must be entered A daily schedule with varying ISF can be entered Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF . Incorrectly set ISF is the most common cause of roller coaster glucoses for new Loop users. You may need to raise (increase) your ISF value/number to help smooth a roller coaster glucose trend. You can read about that topic more over in LoopTips here .","title":"Insulin Sensitivities"},{"location":"loop-3/onboarding/#therapy-settings-review","text":"Once these are all entered, the Therapy Settings screen is shown for your review. You must scroll down to see all settings and reveal the Save Settings button. Only the top and bottom portions are shown, the other settings were not captured for this graphic.","title":"Therapy Settings Review"},{"location":"loop-3/onboarding/#notifications-and-bluetooth","text":"Once you save settings, Loop asks to send notifications and use Bluetooth. You must allow both for Loop to work properly. Notifications are necessary for safety reasons while Looping. Bluetooth lets Loop get data from your CGM and talk to your Pump.","title":"Notifications and Bluetooth"},{"location":"loop-3/onboarding/#cgm-and-pump","text":"For new Loopers, it is now time to add a CGM and a pump. Follow these links for instructions. Add a CGM Add a Pump Medtronic CGM If you plan to use a Medtronic Enlite sensor for your CGM , you must first add that pump to Loop before the sensor will be shown as an option. If you built Loop 3 over an existing app, your CGM and pump selections should have carried over.","title":"CGM and Pump"},{"location":"loop-3/onboarding/#experienced-loopers","text":"The first time you build Loop 3 on a device, you will need to go through the onboarding process too. If you build Loop 3 over Loop 2.2.x, the onboarding remembers the settings, previously saved overrides and your current pod or pump information is maintained. (Yes, you can build Loop 3 and keep using the same pod.) If you build Loop 3 onto a device without an existing Loop app and you have a Nightscout site, you can enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET and it will ask if you want to import your settings from your Nightscout profile. This includes all the overrides you have previously saved. If you are building on a device that does not have an existing Loop app and you choose not to use Nightscout, then follow the new Looper Onboarding Steps . You will be presented with an information screen describing the setting (with a continue button) followed by your current settings (if available), which you must confirm to keep - or can modify and then confirm to change. Depending on the device you are using, you may need to scroll down to see the Continue or Save buttons for each setting. What is in my Nightscout Profile To check what is in your Nightscout profile that Loop would use as part of onboarding, follow these instructions. Note: you will get a json file - look that up using your favorite internet search method. Open your Nightscout URL Click in the URL address and append this text \"/api/v1/profile.json\" You can download the file and examine it if you are interested","title":"Experienced Loopers"},{"location":"loop-3/onboarding/#check-imported-settings","text":"WARNING The new onboarding forces you to check all your imported Therapy Settings (Onboarding Summary) but there may be other settings you need to check as well. Dosing Strategy : may be at the default value of Temp Basal Only , even if you were using Automatic Bolus with Loop 2.x.x Overrides: verify these are populated as expected Pumps that use a RileyLink : confirm the device is selected and active in the Pump settings screen Insulin Type : ensure the correct insulin type is selected","title":"Check Imported Settings"},{"location":"loop-3/onboarding/#carb-absorption-time-update","text":"If you used earlier versions of Loop, please be aware that absorption times have changed. Loop-dev Carb Absorption Times Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details. Loop-dev uses absorption times of 30 minute, 3 hours and 5 hours for the Candy, Taco, Pizza icons Loop 2.2.x used 2 hours, 3 hours and 4 hours The 30 minute (candy) time is for rapid acting carbs only If you selected the candy icon for a complex meal, you told Loop to expect your glucose to rise rapidly. When that rapid rise does not materialize, you may find Loop predicts an unexpectedly low glucose because the algorithm assumes something must be affecting your glucose downward in a strong way. If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction.","title":"Carb Absorption Time Update"},{"location":"loop-3/onboarding/#carb-data-source","text":"Loop 3 does not read non-Loop carbohydrate entries from Apple Health, as previous versions did. It still writes to Apple Health. Some experienced loopers want to modify the code to enable Loop to read carbohydrate records from Apple Health with the full understanding of how that works. The instructions for this code customization option, using a flag set in the LoopConfigOverride.xcconfig file, will be added to the documentation later. For now search in zulipchat. Users who build Loop 3 over Loop 2.2.x, may find a permission switch to give Loop permission to read carb data from health, but without making the customization mentioned above, changing permission does not change the behavior of Loop.","title":"Carb Data Source"},{"location":"loop-3/settings/","text":"Settings \u00b6 The Settings screen, shown in the graphic below, is reached by tapping the gear icon in the Toolbar on the app home screen . Each section and row on the Settings screen is described below. Closed Loop \u00b6 The user can select closed loop or open loop using this slider. When you first start Loop, we encourage you to leave this slider disabled and become familiar with the app using Open Loop mode. No automatic (closed loop) adjustment of insulin will occur and the slider will be disabled under the following conditions. No Pump added No CGM added User set a Manual Temp Basal User suspended insulin delivery (planned - might not be in effect yet) Recommended Insulin \u00b6 With every loop cycle - typically every 5 minutes - Loop updates the glucose prediction using CGM or Fingerstick glucose value (no older than 15 minutes) COB from meal entries IOB from previous insulin delivery Your Therapy Settings Based on this prediction, Loop calculates a modification to insulin dosing to bring the user into the desired correction range. This can be a reduction in basal to raise the glucose prediction or a recommended bolus, subject to Delivery Limits , to lower the prediction. The glucose prediction is shown in the Glucose Chart along with the measured glucose values. When in Open Loop , no automated action is taken. When in Closed Loop , automated action is taken based on the selected Dosing Strategy . If you find this confusing, read how to Think Like a Loop on the LoopTips website. Dosing Strategy \u00b6 This row gives you the ability to select Dosing Strategy . The Dosing Strategy only affects the method by which the recommended bolus - if any - is delivered. The current selection is noted underneath the Dosing Strategy label. The default (initial) value for this setting is Temp Basal Only . Tap on the arrow to the right to modify your selection. Words in Graphic Temp Basal Only : Loop will set temporary basal rates to increase and decrease insulin delivery. Automatic Bolus : Loop will automatically bolus when insulin needs are above scheduled basal, and will use temporary basal rates when needed to reduce insulin delivery below scheduled basal. Regardless of the Dosing Strategy selected, when glucose is below target or predicted to go below target, Loop decreases basal insulin using Temporary Basal. Temp Basal Only : Subject to your Delivery Limits , Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB . Automatic Bolus : Subject to your Delivery Limits , you receive 40% of the Recommended Bolus at every loop cycle. Automatic Bolus \u00b6 When you first start Loop, we encourage you to leave Dosing Strategy set to Temp Basal Only until you are sure your settings are dialed in. The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged. As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen. Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus. Configuration \u00b6 The Configuration section allows entry to the following screens: Therapy Settings \u00b6 There's a LoopDocs page devoted to therapy settings. Click on the link to get to that page: Therapy Settings . Add Pump for Therapy Settings \u00b6 But I don't see Therapy Settings ! Therapy Settings is only accessible in the Settings screen when you have a pump connected to Loop. Loop needs to know the parameters for the pump There are several options presented below Option 1: Prep for Pods \u00b6 If you add an Omnipod (requires RileyLink ) or Omnipod DASH up to the Pair Pod screen and then cancel, Loop will use the common Omnipod details to allow you to modify your Therapy Settings . Option 2: Prep for Medtronic \u00b6 If you need to modify Therapy Settings before connecting to a Medtronic pump: Add the Insulin Pump Simulator Tap on the Pump in settings or the HUD to bring up the control screen Select the type of Medtronic Adjust the Therapy Settings as required Delete the Insulin Pump Simulator Option 3: Simulate Loop \u00b6 If you want to use Loop in parallel with your current method of dosing insulin. Add the Insulin Pump Simulator Tap on the Pump in settings or the HUD to bring up the control screen Choose the type of pump you wish to simulate (notice each pump has specific basal rates and ranges available) For best fidelity, use a real CGM (if available on the same phone) or set up the CGM to be from Dexcom Share or Nightscout For every meal or correction, you can echo that meal or correction with Loop using the simulated pump - watch and learn from recommendations and predictions Pump \u00b6 The information about the pump section is detailed on several different pages. Follow the links below: Add or Modify Pump Omnipod or Omnipod DASH Status and Commands Medtronic Status and Commands CGM Settings \u00b6 The information about the CGM is found on the Add or Modify CGM page. Services \u00b6 The Services section allows additions of other services such Nightscout, Loggly and Amplitude. Please refer to the Optional: Service page. Support \u00b6 The Support section enables the user to provide output data about the app. This information can be very helpful to folks trying to assist with problem reports. The graphic below shows the screen provided when you tap on the Support row at the bottom of the Settings screen. Issue Report \u00b6 Tap on the Issue Report row, on the graphic above, to create a Loop Report text file with a lot of useful information for the mentors or developers if they need to assist you in solving a problem. This covers 84-hours (to enable a full pod history for users of Omnipod or Omnipod DASH). When you tap that row, you'll see a message that the file is loading. That message never goes away but the rest of the page fills in fairly quickly. After that happens, use the up arrow to see various options to send it to yourself. Issue vs Issue Report Be aware: Issue (on github) is used to report code problems Issue Report is an action in Loop app to provide information you may need when you ask for help: refer to How to Find Help It's a good idea to use the Issue Report button and save it along with a screen shot if you think you will ask for help. You can always discard these if you resolve the problem on your own. Submit Bug Report \u00b6 Tap on the Submit Bug Report row to bring up one of the two views shown in the graphic below. The left view is if you do not have a github account (or the phone is not signed in to your account). The right view is if your github credentials are available. In either case, the first action should be to add a term or phrase to the search box (red rectangle) to see if your issue has already been reported and to read the status if it has been reported. Please refer to the GitHub Issues section for more information. Not for Build or Settings Help Submit Bug Report should be used when you believe there is an error in the code. Use How to Find Help instead for these cases: Trouble building Trouble pairing a pod Trouble with red loops RileyLink is not working Trouble adjusting your settings Export Critical Event Logs \u00b6 The last row creates a zip (compressed file) with detailed app information over a 7-day period. It is stored in a different format from the Loop Report and provides critical information to the developers when troubleshooting. Once the compressed file is created, you can then send it to yourself and later share it with the developers if they request it. You can always discard these if you resolve the problem on your own.","title":"Loop 3 Settings"},{"location":"loop-3/settings/#settings","text":"The Settings screen, shown in the graphic below, is reached by tapping the gear icon in the Toolbar on the app home screen . Each section and row on the Settings screen is described below.","title":"Settings"},{"location":"loop-3/settings/#closed-loop","text":"The user can select closed loop or open loop using this slider. When you first start Loop, we encourage you to leave this slider disabled and become familiar with the app using Open Loop mode. No automatic (closed loop) adjustment of insulin will occur and the slider will be disabled under the following conditions. No Pump added No CGM added User set a Manual Temp Basal User suspended insulin delivery (planned - might not be in effect yet)","title":"Closed Loop"},{"location":"loop-3/settings/#recommended-insulin","text":"With every loop cycle - typically every 5 minutes - Loop updates the glucose prediction using CGM or Fingerstick glucose value (no older than 15 minutes) COB from meal entries IOB from previous insulin delivery Your Therapy Settings Based on this prediction, Loop calculates a modification to insulin dosing to bring the user into the desired correction range. This can be a reduction in basal to raise the glucose prediction or a recommended bolus, subject to Delivery Limits , to lower the prediction. The glucose prediction is shown in the Glucose Chart along with the measured glucose values. When in Open Loop , no automated action is taken. When in Closed Loop , automated action is taken based on the selected Dosing Strategy . If you find this confusing, read how to Think Like a Loop on the LoopTips website.","title":"Recommended Insulin"},{"location":"loop-3/settings/#dosing-strategy","text":"This row gives you the ability to select Dosing Strategy . The Dosing Strategy only affects the method by which the recommended bolus - if any - is delivered. The current selection is noted underneath the Dosing Strategy label. The default (initial) value for this setting is Temp Basal Only . Tap on the arrow to the right to modify your selection. Words in Graphic Temp Basal Only : Loop will set temporary basal rates to increase and decrease insulin delivery. Automatic Bolus : Loop will automatically bolus when insulin needs are above scheduled basal, and will use temporary basal rates when needed to reduce insulin delivery below scheduled basal. Regardless of the Dosing Strategy selected, when glucose is below target or predicted to go below target, Loop decreases basal insulin using Temporary Basal. Temp Basal Only : Subject to your Delivery Limits , Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB . Automatic Bolus : Subject to your Delivery Limits , you receive 40% of the Recommended Bolus at every loop cycle.","title":"Dosing Strategy"},{"location":"loop-3/settings/#automatic-bolus","text":"When you first start Loop, we encourage you to leave Dosing Strategy set to Temp Basal Only until you are sure your settings are dialed in. The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged. As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen. Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus.","title":"Automatic Bolus"},{"location":"loop-3/settings/#configuration","text":"The Configuration section allows entry to the following screens:","title":"Configuration"},{"location":"loop-3/settings/#therapy-settings","text":"There's a LoopDocs page devoted to therapy settings. Click on the link to get to that page: Therapy Settings .","title":"Therapy Settings"},{"location":"loop-3/settings/#pump","text":"The information about the pump section is detailed on several different pages. Follow the links below: Add or Modify Pump Omnipod or Omnipod DASH Status and Commands Medtronic Status and Commands","title":"Pump"},{"location":"loop-3/settings/#cgm-settings","text":"The information about the CGM is found on the Add or Modify CGM page.","title":"CGM Settings"},{"location":"loop-3/settings/#services","text":"The Services section allows additions of other services such Nightscout, Loggly and Amplitude. Please refer to the Optional: Service page.","title":"Services"},{"location":"loop-3/settings/#support","text":"The Support section enables the user to provide output data about the app. This information can be very helpful to folks trying to assist with problem reports. The graphic below shows the screen provided when you tap on the Support row at the bottom of the Settings screen.","title":"Support"},{"location":"loop-3/settings/#issue-report","text":"Tap on the Issue Report row, on the graphic above, to create a Loop Report text file with a lot of useful information for the mentors or developers if they need to assist you in solving a problem. This covers 84-hours (to enable a full pod history for users of Omnipod or Omnipod DASH). When you tap that row, you'll see a message that the file is loading. That message never goes away but the rest of the page fills in fairly quickly. After that happens, use the up arrow to see various options to send it to yourself. Issue vs Issue Report Be aware: Issue (on github) is used to report code problems Issue Report is an action in Loop app to provide information you may need when you ask for help: refer to How to Find Help It's a good idea to use the Issue Report button and save it along with a screen shot if you think you will ask for help. You can always discard these if you resolve the problem on your own.","title":"Issue Report"},{"location":"loop-3/settings/#submit-bug-report","text":"Tap on the Submit Bug Report row to bring up one of the two views shown in the graphic below. The left view is if you do not have a github account (or the phone is not signed in to your account). The right view is if your github credentials are available. In either case, the first action should be to add a term or phrase to the search box (red rectangle) to see if your issue has already been reported and to read the status if it has been reported. Please refer to the GitHub Issues section for more information. Not for Build or Settings Help Submit Bug Report should be used when you believe there is an error in the code. Use How to Find Help instead for these cases: Trouble building Trouble pairing a pod Trouble with red loops RileyLink is not working Trouble adjusting your settings","title":"Submit Bug Report"},{"location":"loop-3/settings/#export-critical-event-logs","text":"The last row creates a zip (compressed file) with detailed app information over a 7-day period. It is stored in a different format from the Loop Report and provides critical information to the developers when troubleshooting. Once the compressed file is created, you can then send it to yourself and later share it with the developers if they request it. You can always discard these if you resolve the problem on your own.","title":"Export Critical Event Logs"},{"location":"loop-3/therapy-settings/","text":"Therapy Settings \u00b6 During Onboarding , all of your therapy settings were entered. After onboarding, the Therapy Settings screen is reached by going through the Loop Settings screen after a pump has been added. When building Loop 3 over Loop 2.2.x, the existing values from Loop 2.2.x are kept where possible and presented to the user as the \"default\" value when moving through each screen. This page provides more details about each of your Therapy Settings . Authorization Required \u00b6 All the settings configured under Therapy Settings are protected by the same authorization method (FaceID, Fingerprint or Passcode) used to enable the app to issue a manual bolus. Details for Therapy Settings \u00b6 Loop 3 has Guardrails for some Therapy Settings . These are grouped in the Guardrails for Settings section of this page. New Loopers New Loopers may prefer settings that show up outside the \"typical\" range. These show yellow font on the picker dial and you must acknowledge a warning message that the selected value is lower, higher or outside \"typical\" It is always fine to pick a yellow or even red value when being cautious For example, choosing a Correction Range that is higher than \"typical\" when starting to learn Loop is fine. Once you are comfortable with how the system works, the range can be adjusted if desired - entirely up to you in consulatation with your health care professional. Therapy Settings are used for automated insulin delivery when Loop is in Closed-Loop mode. If your Therapy Settings are not \"dialed-in\" before you enable closed loop, you may experience too much or too little automated insulin delivery Please spend the time to thoroughly understand the effect of each therapy setting Screens Displayed \u00b6 Some screens displayed on this page were acquired during Onboarding . When saving a Therapy Setting During Onboarding, the button is labeled \"Confirm Setting\" Otherwise, the button is labeled \"Save\" Glucose Safety Limit \u00b6 Loop will deliver basal and recommend bolus insulin only if your glucose is predicted to be above the Glucose Safety Limit for the next three hours. The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8. The GIF below shows two screens for Glucose Safety Limit . Frame 1: During onboarding, user can accept the default limit by tapping \"Confirm Setting\" or tap the row to configure the range (see Frame 2) Frame 2: The user adjusts the picker wheel to select desired value and then taps on the \"Confirm Setting\" or \"Save\" button If you feel more comfortable with a higher limit, do not let the yellow font influence you. Once you've used Loop for a while, you can revisit this setting. Note The value you select for Glucose Safety Limit will dictate the lowest value on the glucose picker that is available for Correction Range and Pre-Meal Range . Those cannot be lower than the Glucose Safety Limit . Guardrails for Glucose Safety Limit Correction Range \u00b6 Your Correction Range is the glucose value (or range of values) that you want Loop to aim for in adjusting your basal insulin and helping you calculate your boluses. The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8. The GIF below shows four screens when first adding and selecting a correction range. The red box indicates where the user taps. Frame 1: Tap the + sign Frame 2: Use the picker wheels to select desired values This is the first entry so must start at midnight - additional rows can be added for other times When happy with the picker values, user must tap add Frame 3: This screen is shown only if a value is outside \"typical\" Frame 4: Tap on the \"Confirm Setting\" or \"Save\" button to accept the values Do not let the yellow font discourage you if you want to have a \"higher than typical\" range to start with. Once you've used Loop for a while, you can revisit this setting. Guardrails for Correction Range Manual vs Automated Dosing \u00b6 Loop estimates future glucose over the next 6 hours ( DIA ) and, when in closed loop, adjusts insulin dosing. Loop uses or recommends the smallest amount of insulin that will bring you to your target ( Correction Range midpoint) over the whole forecast. If you ask Loop for a manual Bolus recommendation while your current glucose is below the bottom of the correction range and above the glucose safety limit, Loop will recommend a value that should keep your glucose above the safety limit. This is only if you manually request a bolus recommendation. Loop will not automatically provide extra insulin, via high temp basal or automatic bolus, until your current glucose is higher than the bottom of your correction range. Pre-Meal Range \u00b6 Your Pre-Meal Range is used to temporarily lower your glucose target before a meal to impact post-meal glucose spikes. The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8. The GIF below shows three screens from various scenarios. The red box indicates where the user taps. If the user chooses to leave Pre-Meal not set, the Pre-Meal icon in the tool bar is disabled. Some users prefer this. Frame 1: During onboarding, user can choose not to add a pre-meal range by tapping \"Confirm Setting\" or tap the Pre-Meal row to configure the range (see Frame 2) Frame 2: User adjusts the Pre-Meal range using the picker and then \"Save\" Frame 3: If a pre-meal range was added, user can remove it by tapping \"Delete\" and then \"Save\" Note If you do not add an entry, the pre-meal icon on the toolbar is disabled If you add an entry, the pre-meal icon is activated for 1 hour or until carbs are entered or until the user cancels it Guardrails for Pre-Meal Range Basal Rates \u00b6 Your Basal Rate of insulin is the number of units per hour that you want to use to cover your background insulin needs. Loop supports 1 to 48 rates per day The schedule starts at midnight and cannot contain a rate of 0 U/hr (as the only entry) Guardrails for Basal Rates Delivery Limits \u00b6 Delivery Limits are safety guardrails for your insulin delivery. Click on one of the limits on this screen, Maximum Basal Rate or Maximum Bolus, to display the picker wheel for that limit You must first move the picker off the current value before saving When onboarding, you can restore the picker to the original level once it has been moved When adjusting settings later, one of the two limits must be changed to make the Save button active You may need to put your finger on part of the screen away from the picker wheel and scroll up and down to see the other setting Make sure both Maximum Basal Rate and Maximum Bolus have the desired value before hitting Save Maximum Basal Rate \u00b6 Maximum Basal Rate is the maximum automatically adjusted basal rate that Loop is allowed to enact to help reach your correction range. Some users choose a value 2, 3, or 4 times their highest scheduled basal rate. Work with your healthcare provider to choose a value that is higher than your highest scheduled basal rate, but as conservative or aggressive as is comfortable. If the Dosing Strategy is configured to Temp Basal Only , then the maximum basal rate can be used to limit how much extra insulin can be supplied automatically. Guardrails for Maximum Basal Rate Maximum Bolus \u00b6 Maximum Bolus is the highest bolus amount that you will allow Loop to recommend at one time to cover carbs or bring down high glucose. If you manually enter a value in the Bolus screen that is greater than the Maximum Bolus setting, Loop will show a warning message and refuse to bolus that amount. For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U. If the Dosing Strategy is configured to Automatic Bolus , then the maximum bolus that is automatically supplied is 40% of the maximum bolus, but this can be applied at 5-minute intervals. Guardrails for Maximum Bolus Carb Ratios \u00b6 Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin. At least one carb ratio must be entered Use the + sign, picker wheels and then tap \"Add\" The method was described in the Correction Range section Loop supports 1 to 48 carb ratios per day Guardrails for Carb Ratios Insulin Sensitivities \u00b6 Your Insulin Sensitivities refer to the drop in glucose expected from one unit of insulin over the full duration of the insulin action time. At least one insulin sensitivity must be entered Use the + sign, picker wheels and then tap \"Add\" The method was described in the Correction Range section Loop supports 1 to 48 insulin sensitivities per day Guardrails for Insulin Sensitivities Guardrails for Settings \u00b6 Loop has guardrails for Therapy Settings . The limits in the code are provided for reference below The tables list from left to right: the lower limit, min recommended, max recommended and upper limit values for that guardrail The limits for some settings can be altered by other therapy settings you have selected Experienced Loopers The guardrails for each therapy setting used by Loop can be modified with Code Customization . The font color in the value picker has the following meaning: black : value is within the range \"recommended by Loop\" yellow : value is outside the range \"typical\" for Loopers It is fine to choose yellow values - sometimes that's a good choice for a new Looper red : value is minimum or maximum limit of the range \"allowed by Loop\" Mobile Device On a mobile device, you may need to scroll the table left to right to see all four values Try landscape mode to see the entire table width without scrolling Guardrails for Glucose Safety Limit \u00b6 Units limit min max limit mg/dL 67 74 80 110 mmol/L 3.7 4.2 4.4 6.0 Glucose Safety Limit Info Top value available on the picker limited by lowest of: code constraint your Correction Range your Pre-Meal Range Guardrails for Correction Range \u00b6 Units limit min max limit mg/dL 87 100 115 180 mmol/L 4.8 5.6 6.3 10.0 Correction Range Info Bottom value available on the picker limited by highest of: code constraint your Glucose Safety Limit Guardrails for Pre-Meal Range \u00b6 Units limit min max limit mg/dL n/a safety 106 130 mmol/L n/a safety 5.9 7.2 Pre-Meal Range Info Bottom value available on the picker limited by highest of: code constraint your Glucose Safety Limit Guardrails for Basal Rates \u00b6 Limited by your selected pump (or if no pump selected, then generic pump limits apply) Generic Pump rates from 0.05 U/hr to 30 U/hr in steps of 0.05 Top value available on the picker is your Maximum Basal Rate (once that is set) Guardrails for Maximum Basal Rate \u00b6 Top value available on the picker is 6.4 times the highest basal rate in your scheduled basal rates Guardrails for Maximum Bolus \u00b6 The maximum bolus is limited by your pump, but it is a good idea to limit it to the maximum you use for a common \"big\" meal. This only limits the bolus for a single dose. Guardrails for Carb Ratios \u00b6 Remember, CR goes in the denominator when calculating insulin dose for carbs. So the min - max values in the table below correspond to stronger - weaker values for CR . Units limit min max limit g/U 2.0 4.0 28.0 150.0 Guardrails for Insulin Sensitivities \u00b6 Remember, ISF goes in the denominator when calculating insulin dose for a correction. So the min - max values in the table below correspond to stronger - weaker values for ISF . Units limit min max limit mg/dL/U 10 16 399 500 mmol/L/U 0.6 0.9 22.1 27.8","title":"Loop 3 Therapy Settings"},{"location":"loop-3/therapy-settings/#therapy-settings","text":"During Onboarding , all of your therapy settings were entered. After onboarding, the Therapy Settings screen is reached by going through the Loop Settings screen after a pump has been added. When building Loop 3 over Loop 2.2.x, the existing values from Loop 2.2.x are kept where possible and presented to the user as the \"default\" value when moving through each screen. This page provides more details about each of your Therapy Settings .","title":"Therapy Settings"},{"location":"loop-3/therapy-settings/#authorization-required","text":"All the settings configured under Therapy Settings are protected by the same authorization method (FaceID, Fingerprint or Passcode) used to enable the app to issue a manual bolus.","title":"Authorization Required"},{"location":"loop-3/therapy-settings/#details-for-therapy-settings","text":"Loop 3 has Guardrails for some Therapy Settings . These are grouped in the Guardrails for Settings section of this page. New Loopers New Loopers may prefer settings that show up outside the \"typical\" range. These show yellow font on the picker dial and you must acknowledge a warning message that the selected value is lower, higher or outside \"typical\" It is always fine to pick a yellow or even red value when being cautious For example, choosing a Correction Range that is higher than \"typical\" when starting to learn Loop is fine. Once you are comfortable with how the system works, the range can be adjusted if desired - entirely up to you in consulatation with your health care professional. Therapy Settings are used for automated insulin delivery when Loop is in Closed-Loop mode. If your Therapy Settings are not \"dialed-in\" before you enable closed loop, you may experience too much or too little automated insulin delivery Please spend the time to thoroughly understand the effect of each therapy setting","title":"Details for Therapy Settings"},{"location":"loop-3/therapy-settings/#glucose-safety-limit","text":"Loop will deliver basal and recommend bolus insulin only if your glucose is predicted to be above the Glucose Safety Limit for the next three hours. The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8. The GIF below shows two screens for Glucose Safety Limit . Frame 1: During onboarding, user can accept the default limit by tapping \"Confirm Setting\" or tap the row to configure the range (see Frame 2) Frame 2: The user adjusts the picker wheel to select desired value and then taps on the \"Confirm Setting\" or \"Save\" button If you feel more comfortable with a higher limit, do not let the yellow font influence you. Once you've used Loop for a while, you can revisit this setting. Note The value you select for Glucose Safety Limit will dictate the lowest value on the glucose picker that is available for Correction Range and Pre-Meal Range . Those cannot be lower than the Glucose Safety Limit . Guardrails for Glucose Safety Limit","title":"Glucose Safety Limit"},{"location":"loop-3/therapy-settings/#correction-range","text":"Your Correction Range is the glucose value (or range of values) that you want Loop to aim for in adjusting your basal insulin and helping you calculate your boluses. The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8. The GIF below shows four screens when first adding and selecting a correction range. The red box indicates where the user taps. Frame 1: Tap the + sign Frame 2: Use the picker wheels to select desired values This is the first entry so must start at midnight - additional rows can be added for other times When happy with the picker values, user must tap add Frame 3: This screen is shown only if a value is outside \"typical\" Frame 4: Tap on the \"Confirm Setting\" or \"Save\" button to accept the values Do not let the yellow font discourage you if you want to have a \"higher than typical\" range to start with. Once you've used Loop for a while, you can revisit this setting. Guardrails for Correction Range","title":"Correction Range"},{"location":"loop-3/therapy-settings/#pre-meal-range","text":"Your Pre-Meal Range is used to temporarily lower your glucose target before a meal to impact post-meal glucose spikes. The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8. The GIF below shows three screens from various scenarios. The red box indicates where the user taps. If the user chooses to leave Pre-Meal not set, the Pre-Meal icon in the tool bar is disabled. Some users prefer this. Frame 1: During onboarding, user can choose not to add a pre-meal range by tapping \"Confirm Setting\" or tap the Pre-Meal row to configure the range (see Frame 2) Frame 2: User adjusts the Pre-Meal range using the picker and then \"Save\" Frame 3: If a pre-meal range was added, user can remove it by tapping \"Delete\" and then \"Save\" Note If you do not add an entry, the pre-meal icon on the toolbar is disabled If you add an entry, the pre-meal icon is activated for 1 hour or until carbs are entered or until the user cancels it Guardrails for Pre-Meal Range","title":"Pre-Meal Range"},{"location":"loop-3/therapy-settings/#basal-rates","text":"Your Basal Rate of insulin is the number of units per hour that you want to use to cover your background insulin needs. Loop supports 1 to 48 rates per day The schedule starts at midnight and cannot contain a rate of 0 U/hr (as the only entry) Guardrails for Basal Rates","title":"Basal Rates"},{"location":"loop-3/therapy-settings/#delivery-limits","text":"Delivery Limits are safety guardrails for your insulin delivery. Click on one of the limits on this screen, Maximum Basal Rate or Maximum Bolus, to display the picker wheel for that limit You must first move the picker off the current value before saving When onboarding, you can restore the picker to the original level once it has been moved When adjusting settings later, one of the two limits must be changed to make the Save button active You may need to put your finger on part of the screen away from the picker wheel and scroll up and down to see the other setting Make sure both Maximum Basal Rate and Maximum Bolus have the desired value before hitting Save","title":"Delivery Limits"},{"location":"loop-3/therapy-settings/#maximum-basal-rate","text":"Maximum Basal Rate is the maximum automatically adjusted basal rate that Loop is allowed to enact to help reach your correction range. Some users choose a value 2, 3, or 4 times their highest scheduled basal rate. Work with your healthcare provider to choose a value that is higher than your highest scheduled basal rate, but as conservative or aggressive as is comfortable. If the Dosing Strategy is configured to Temp Basal Only , then the maximum basal rate can be used to limit how much extra insulin can be supplied automatically. Guardrails for Maximum Basal Rate","title":"Maximum Basal Rate"},{"location":"loop-3/therapy-settings/#maximum-bolus","text":"Maximum Bolus is the highest bolus amount that you will allow Loop to recommend at one time to cover carbs or bring down high glucose. If you manually enter a value in the Bolus screen that is greater than the Maximum Bolus setting, Loop will show a warning message and refuse to bolus that amount. For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U. If the Dosing Strategy is configured to Automatic Bolus , then the maximum bolus that is automatically supplied is 40% of the maximum bolus, but this can be applied at 5-minute intervals. Guardrails for Maximum Bolus","title":"Maximum Bolus"},{"location":"loop-3/therapy-settings/#carb-ratios","text":"Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin. At least one carb ratio must be entered Use the + sign, picker wheels and then tap \"Add\" The method was described in the Correction Range section Loop supports 1 to 48 carb ratios per day Guardrails for Carb Ratios","title":"Carb Ratios"},{"location":"loop-3/therapy-settings/#insulin-sensitivities","text":"Your Insulin Sensitivities refer to the drop in glucose expected from one unit of insulin over the full duration of the insulin action time. At least one insulin sensitivity must be entered Use the + sign, picker wheels and then tap \"Add\" The method was described in the Correction Range section Loop supports 1 to 48 insulin sensitivities per day Guardrails for Insulin Sensitivities","title":"Insulin Sensitivities"},{"location":"loop-3/therapy-settings/#guardrails-for-settings","text":"Loop has guardrails for Therapy Settings . The limits in the code are provided for reference below The tables list from left to right: the lower limit, min recommended, max recommended and upper limit values for that guardrail The limits for some settings can be altered by other therapy settings you have selected Experienced Loopers The guardrails for each therapy setting used by Loop can be modified with Code Customization . The font color in the value picker has the following meaning: black : value is within the range \"recommended by Loop\" yellow : value is outside the range \"typical\" for Loopers It is fine to choose yellow values - sometimes that's a good choice for a new Looper red : value is minimum or maximum limit of the range \"allowed by Loop\" Mobile Device On a mobile device, you may need to scroll the table left to right to see all four values Try landscape mode to see the entire table width without scrolling","title":"Guardrails for Settings"},{"location":"nightscout/new_user/","text":"New Nightscout Users \u00b6 Nightscout is not required, but is recommended for Loop A Nightscout site provides a dashboard for remote viewing of Loop actions including the temporary basal rates Loop is setting, the current insulin on board, or a recent bolus and carb entry A Nightscout site provides reports for retrospective review of your settings You will want a Nightscout site: If you are a parent of a little Loop user If you want to see Loop's actions anywhere other than the Looper's iPhone If you want to ask a mentor for help adjusting your settings If you want to prepare reports to evaluate your own settings If you want to prepare reports to hand to your doctor Setup Nightscout \u00b6 Please visit the Nightscout documentation to read about Nightscout. There are several options, mentioned in that documentation, for setting up your Nightscout site. You can choose the free (except for your time) DIY method You can choose the DIY method where you pay a monthly fee for data storage You can choose a managed site (for a monthly fee) that creates your site, keeps the software up to date and provides data storage Once your Nightscout site is operational and you've read the information about using your site, return to LoopDocs to update your configuration to Add Loop Variables to Nightscout. The free DIY method provides sufficient storage for a single Loop user, but will require you to delete older data after a year or two of use. If there are multiple Loopers in your family and you want to stay in the \"free\" tier, each will need their own site to stay under the monthly usage limitations. Add Loop Variables to Nightscout \u00b6 There are a few Loop-specific variables you should configure to get the most out of your Nightscout site. Follow the instructions to retrofit an existing Nightscout site . Add Nightscout to Loop \u00b6 Once you finish setting up your new Nightscout site, don't forget to enter your website URL and API_SECRET into your Loop settings ! This way Loop will have access to your Nightscout site to upload all the wonderful data. Troubleshooting \u00b6 If your Nightscout site is not showing CGM (and Loop, if you are Looping) data within about 10 minutes of finishing your setup, then please follow these steps here to troubleshoot.","title":"Brand New NS"},{"location":"nightscout/new_user/#new-nightscout-users","text":"Nightscout is not required, but is recommended for Loop A Nightscout site provides a dashboard for remote viewing of Loop actions including the temporary basal rates Loop is setting, the current insulin on board, or a recent bolus and carb entry A Nightscout site provides reports for retrospective review of your settings You will want a Nightscout site: If you are a parent of a little Loop user If you want to see Loop's actions anywhere other than the Looper's iPhone If you want to ask a mentor for help adjusting your settings If you want to prepare reports to evaluate your own settings If you want to prepare reports to hand to your doctor","title":"New Nightscout Users"},{"location":"nightscout/new_user/#setup-nightscout","text":"Please visit the Nightscout documentation to read about Nightscout. There are several options, mentioned in that documentation, for setting up your Nightscout site. You can choose the free (except for your time) DIY method You can choose the DIY method where you pay a monthly fee for data storage You can choose a managed site (for a monthly fee) that creates your site, keeps the software up to date and provides data storage Once your Nightscout site is operational and you've read the information about using your site, return to LoopDocs to update your configuration to Add Loop Variables to Nightscout. The free DIY method provides sufficient storage for a single Loop user, but will require you to delete older data after a year or two of use. If there are multiple Loopers in your family and you want to stay in the \"free\" tier, each will need their own site to stay under the monthly usage limitations.","title":"Setup Nightscout"},{"location":"nightscout/new_user/#add-loop-variables-to-nightscout","text":"There are a few Loop-specific variables you should configure to get the most out of your Nightscout site. Follow the instructions to retrofit an existing Nightscout site .","title":"Add Loop Variables to Nightscout"},{"location":"nightscout/new_user/#add-nightscout-to-loop","text":"Once you finish setting up your new Nightscout site, don't forget to enter your website URL and API_SECRET into your Loop settings ! This way Loop will have access to your Nightscout site to upload all the wonderful data.","title":"Add Nightscout to Loop"},{"location":"nightscout/new_user/#troubleshooting","text":"If your Nightscout site is not showing CGM (and Loop, if you are Looping) data within about 10 minutes of finishing your setup, then please follow these steps here to troubleshoot.","title":"Troubleshooting"},{"location":"nightscout/ns_crossref/","text":"Nightscout Documentation \u00b6 A number of pages that used to be in LoopDocs have been moved to the Nightscout documentation and are in the process of being integrated into their menu structure. To prevent duplication and inconsistency, those pages have been removed from LoopDocs. A cross-reference to the Nightscout pages is provided below. Warning: As of Sep 2021, some of the pages moved from LoopDocs to Nightscout documentation are not yet in the Nightscout menu structure You can always use the search function of the Nightscout Documentation site to find any topic IFTTT Integration \u00b6 If This, Then That (IFTTT) integration is a useful Nightscout capability. By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more. Please see Nightscout: Configurations: IFTTT Maker Nightscout: IFTTT Remote Notifications \u00b6 While the Loop app sends notifications locally on the Loop user's iPhone, parents and caregivers may want those messages on their phones, too. We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover. Please see Nightscout: Configurations: Pushover Nightscout: Remote Notifications Loop Follow \u00b6 Loop Follow was created by Jon Fawcett who took ideas from multiple other apps to create a single app to assist in his caregiving role. It is popular with Loopers who like the display and notifications as well as Loop caregivers. It can work with just the Dexcom Share credentials and/or the Nightscout URL and allows for easy customization of alerts and alarms. Please see Loop Follow github README Loop Follow Facebook group Pebble Watch \u00b6 LoopDocs had a page specifically about the Pebble Watchface called SkyLoop Predict , which is no longer being supported. The Nightscout Documentation provides information about many methods for displaying your Nightscout data on a variety of wearable devices. Please see Nightscout: On Your Watch Reports \u00b6 Nightscout offers some fantastic data-crunching report tools. Please see Nightscout: Reports","title":"Nightscout Cross Ref"},{"location":"nightscout/ns_crossref/#nightscout-documentation","text":"A number of pages that used to be in LoopDocs have been moved to the Nightscout documentation and are in the process of being integrated into their menu structure. To prevent duplication and inconsistency, those pages have been removed from LoopDocs. A cross-reference to the Nightscout pages is provided below. Warning: As of Sep 2021, some of the pages moved from LoopDocs to Nightscout documentation are not yet in the Nightscout menu structure You can always use the search function of the Nightscout Documentation site to find any topic","title":"Nightscout Documentation"},{"location":"nightscout/ns_crossref/#ifttt-integration","text":"If This, Then That (IFTTT) integration is a useful Nightscout capability. By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more. Please see Nightscout: Configurations: IFTTT Maker Nightscout: IFTTT","title":"IFTTT Integration"},{"location":"nightscout/ns_crossref/#remote-notifications","text":"While the Loop app sends notifications locally on the Loop user's iPhone, parents and caregivers may want those messages on their phones, too. We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover. Please see Nightscout: Configurations: Pushover Nightscout: Remote Notifications","title":"Remote Notifications"},{"location":"nightscout/ns_crossref/#loop-follow","text":"Loop Follow was created by Jon Fawcett who took ideas from multiple other apps to create a single app to assist in his caregiving role. It is popular with Loopers who like the display and notifications as well as Loop caregivers. It can work with just the Dexcom Share credentials and/or the Nightscout URL and allows for easy customization of alerts and alarms. Please see Loop Follow github README Loop Follow Facebook group","title":"Loop Follow"},{"location":"nightscout/ns_crossref/#pebble-watch","text":"LoopDocs had a page specifically about the Pebble Watchface called SkyLoop Predict , which is no longer being supported. The Nightscout Documentation provides information about many methods for displaying your Nightscout data on a variety of wearable devices. Please see Nightscout: On Your Watch","title":"Pebble Watch"},{"location":"nightscout/ns_crossref/#reports","text":"Nightscout offers some fantastic data-crunching report tools. Please see Nightscout: Reports","title":"Reports"},{"location":"nightscout/overview/","text":"Overview \u00b6 Nightscout is an excellent tool for remotely viewing Loop's actions. It allows for easy remote monitoring of Loop activities, troubleshooting of Loop errors, history of CGM , carbs, boluses, & temp basals, reports analyzing data trends and patterns. Setting up a Nightscout site is fairly quick. Once set up, the site can be accessed by anyone that you share your unique Nightscout URL with. There is a Nightscout app in your iPhone App Store that allows you to view the Nightscout site after you've configured it, or you can use a web browser to view the data. Nightscout is highly recommended for Loop users, especially those using Loop as caregivers Nightscout displays are often the easiest way to troubleshoot Loop settings if you are having problems and seeking input from others Nightscout provides reporting features for longer-term review and preparing information for your physician Nightscout Documentation \u00b6 There used to be a lot of Nightscout information found only in LoopDocs, but has now been transferred to updated Nightscout Documentation. The information that remains in LoopDocs is Loop specific. So you may be jumping back and forth between the two sets of documents. If it says Nightscout in upper left you are in the Nightscout Site If it says LoopDocs in upper left you are in the LoopDocs site On your computer, open the Nightscout Documentation in a separate tab or window of your browser Below is some general discussion about the Nightscout display, as well as some Loop-specific display information. Blood Glucose \u00b6 Your blood glucose (BG) readings from your CGM are shown in green, yellow, or red in the main graph area of NS. You can adjust your high and low BG targets in NS (when NS alerts will start for high/low BGs), but those will not affect your Loop performance. Loop only uses the BG targets given in the Loop app settings. The main screen of BGs is displaying the time duration you have selected (in the example above, 12 hours of BG history). The bottom of the screen shows the last 48-hours of BG trends. You can scan backward by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days. SAGE , CAGE , BAGE pills \u00b6 The SAGE , CAGE , and BAGE pills are for Sensor Age, Cannula Age, and (pump) Battery Age. These optional pills track the time since your CGM sensor, Pump site, and Pump battery were last changed. You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes. These fields will not auto-update from pump or CGM devices, instead you will have to update them using Nightscout Careportal so that the pill information is accurate. Carbs \u00b6 Carbs are automatically uploaded to NS by the Loop app. The amount of carbs on board (active carbs or COB ) can be seen by clicking the Loop pill . The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from NS for use in looping calculations, it only uploads carbs to NS that have been entered in the Loop app. Boluses \u00b6 Insulin boluses are also automatically uploaded to NS by the Loop app. The bolus is shown as a filled-in blue lower-half of the dot, and the specific amount of the bolus is also shown. There may be a slight delay between when the carbs for a meal are uploaded to NS to when the meal bolus appears. This is because depending on the pump model and size of bolus, the bolus may take a few minutes to actually be administered then Loop has to perform a pump read to verify the reservoir volume has decreased (i.e., the bolus was given). As shown in the example above, the meal carbs have been uploaded, but the bolus delivery is still in progress. Insulin on board (active insulin or IOB ) is also shown in the Loop pill . Temp Basals \u00b6 Your current basal profile is automatically updated to NS whenever it is changed by Loop on your pump. The dashed blue line represents the scheduled basal profile (as entered in your NS profile). The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate, the solid blue line will jump above or below your dashed blue line. There is a slight delay (up to 2-5 minutes) in the rendering of basal changes on the blue lines, so if you want the accurate current basal rate, you can check the Loop pill . Predicted BG \u00b6 The purple line to the right of the BG is Loop's predicted BG. Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps. You can read more on that topic in the Algorithm section of these docs. If you don't see the prediction (and all other NS and Loop settings are configured), tap on the 3 dots to the right of the 24 to reveal the choice to display AR2 prediction or Loop prediction. Adjust the check boxes to show just the Loop prediction. Loop pill \u00b6 The Loop pill is the little display box which, when hovered over or clicked, will provide additional information about recent Loop activities and status. Information included is the last time Loop ran, the temp basal set, IOB , and COB . Looking at the Loop pill is a quick method for assessing if you loop is currently active, as well. Loop Pill status indicator symbols X Error in Loop \u03d5 Recommending basal, but not enacting (open loop or pump suspended) \u2301 Enacted a new temp basal \u21bb Loop is continuing with last temp basal, no change \u26a0 Warning indicating Loop is either red or has failed to upload to Nightscout for a longer period of time. Mouse over or Touch the Loop pill to view a tool tip containing one or more of the latest status messages. The most up-to-date NS also includes information in the Loop pill for the minimum and maximum predicted BG, eventual and predicted BG.","title":"Nightscout Overview"},{"location":"nightscout/overview/#overview","text":"Nightscout is an excellent tool for remotely viewing Loop's actions. It allows for easy remote monitoring of Loop activities, troubleshooting of Loop errors, history of CGM , carbs, boluses, & temp basals, reports analyzing data trends and patterns. Setting up a Nightscout site is fairly quick. Once set up, the site can be accessed by anyone that you share your unique Nightscout URL with. There is a Nightscout app in your iPhone App Store that allows you to view the Nightscout site after you've configured it, or you can use a web browser to view the data. Nightscout is highly recommended for Loop users, especially those using Loop as caregivers Nightscout displays are often the easiest way to troubleshoot Loop settings if you are having problems and seeking input from others Nightscout provides reporting features for longer-term review and preparing information for your physician","title":"Overview"},{"location":"nightscout/overview/#nightscout-documentation","text":"There used to be a lot of Nightscout information found only in LoopDocs, but has now been transferred to updated Nightscout Documentation. The information that remains in LoopDocs is Loop specific. So you may be jumping back and forth between the two sets of documents. If it says Nightscout in upper left you are in the Nightscout Site If it says LoopDocs in upper left you are in the LoopDocs site On your computer, open the Nightscout Documentation in a separate tab or window of your browser Below is some general discussion about the Nightscout display, as well as some Loop-specific display information.","title":"Nightscout Documentation"},{"location":"nightscout/overview/#blood-glucose","text":"Your blood glucose (BG) readings from your CGM are shown in green, yellow, or red in the main graph area of NS. You can adjust your high and low BG targets in NS (when NS alerts will start for high/low BGs), but those will not affect your Loop performance. Loop only uses the BG targets given in the Loop app settings. The main screen of BGs is displaying the time duration you have selected (in the example above, 12 hours of BG history). The bottom of the screen shows the last 48-hours of BG trends. You can scan backward by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days.","title":"Blood Glucose"},{"location":"nightscout/overview/#sage-cage-bage-pills","text":"The SAGE , CAGE , and BAGE pills are for Sensor Age, Cannula Age, and (pump) Battery Age. These optional pills track the time since your CGM sensor, Pump site, and Pump battery were last changed. You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes. These fields will not auto-update from pump or CGM devices, instead you will have to update them using Nightscout Careportal so that the pill information is accurate.","title":"SAGE, CAGE, BAGE pills"},{"location":"nightscout/overview/#carbs","text":"Carbs are automatically uploaded to NS by the Loop app. The amount of carbs on board (active carbs or COB ) can be seen by clicking the Loop pill . The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from NS for use in looping calculations, it only uploads carbs to NS that have been entered in the Loop app.","title":"Carbs"},{"location":"nightscout/overview/#boluses","text":"Insulin boluses are also automatically uploaded to NS by the Loop app. The bolus is shown as a filled-in blue lower-half of the dot, and the specific amount of the bolus is also shown. There may be a slight delay between when the carbs for a meal are uploaded to NS to when the meal bolus appears. This is because depending on the pump model and size of bolus, the bolus may take a few minutes to actually be administered then Loop has to perform a pump read to verify the reservoir volume has decreased (i.e., the bolus was given). As shown in the example above, the meal carbs have been uploaded, but the bolus delivery is still in progress. Insulin on board (active insulin or IOB ) is also shown in the Loop pill .","title":"Boluses"},{"location":"nightscout/overview/#temp-basals","text":"Your current basal profile is automatically updated to NS whenever it is changed by Loop on your pump. The dashed blue line represents the scheduled basal profile (as entered in your NS profile). The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate, the solid blue line will jump above or below your dashed blue line. There is a slight delay (up to 2-5 minutes) in the rendering of basal changes on the blue lines, so if you want the accurate current basal rate, you can check the Loop pill .","title":"Temp Basals"},{"location":"nightscout/overview/#predicted-bg","text":"The purple line to the right of the BG is Loop's predicted BG. Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps. You can read more on that topic in the Algorithm section of these docs. If you don't see the prediction (and all other NS and Loop settings are configured), tap on the 3 dots to the right of the 24 to reveal the choice to display AR2 prediction or Loop prediction. Adjust the check boxes to show just the Loop prediction.","title":"Predicted BG"},{"location":"nightscout/overview/#loop-pill","text":"The Loop pill is the little display box which, when hovered over or clicked, will provide additional information about recent Loop activities and status. Information included is the last time Loop ran, the temp basal set, IOB , and COB . Looking at the Loop pill is a quick method for assessing if you loop is currently active, as well. Loop Pill status indicator symbols X Error in Loop \u03d5 Recommending basal, but not enacting (open loop or pump suspended) \u2301 Enacted a new temp basal \u21bb Loop is continuing with last temp basal, no change \u26a0 Warning indicating Loop is either red or has failed to upload to Nightscout for a longer period of time. Mouse over or Touch the Loop pill to view a tool tip containing one or more of the latest status messages. The most up-to-date NS also includes information in the Loop pill for the minimum and maximum predicted BG, eventual and predicted BG.","title":"Loop pill"},{"location":"nightscout/remote-overrides/","text":"Set Up Remote Overrides \u00b6 You can now use your Nightscout site to remotely set and cancel your override presets in your Loop app. What?! Yes, really...you can set/cancel an override remotely for your child's Loop. Remote Overrides Caveats Requires push notification - only available if you built your Loop app using a paid Apple developer account If you use T1Pal Nightscout account service ( T1Pal ) Check with the vendor to see which remote features are supported What you will need to do.. Update the Looper's iPhone Settings Create a Key for an Apple Push Notifications service (APNs) Update your Nightscout site and add some \"config vars\" lines in your Heroku settings. New Feature in Loop 3 Remote bolus and remote carb capability is added with Loop 3, currently under test as Loop dev. In order to support this capability, there are new minimum versions: Loop 3 (Loop dev) or newer iOS 14 or newer Nightscout version 14.0 or newer Step 1: Update the Looper's iPhone settings \u00b6 For remote overrides to successfully deploy on a Looper's iPhone, they will need to have two settings on the iPhone enabled. The slider in iPhone -> Settings -> Loop -> Notifications needs to be turned to Allow Notifications The slider in iPhone -> Settings -> General -> Background App Refresh -> Loop must be enabled Error messages if Looper's phone is not configured correctly: Without notifications, the person trying to set a remote override will see a message about \"no deviceToken\" and no remote override will actually enact If Background app refresh is not enabled, the remote overrides will only enact if the Loop app is open and the phone is unlocked. Step 2: Apple Push Notifications \u00b6 The next part of this will help your Loop app give permissions to your Nightscout site to remotely interact with it. (Reminder - this only works with the paid Apple Developer ID.) Login to your Apple developer account with the Apple ID associated with your developer team that you used to sign your Loop app. Click on \"Certificates, Indentifiers & Profiles\" and then, on the next page, click on \"Keys\" (located on the left-hand column). Click on the blue \"Create a new key\" OR the + icon to add a new key. In the form that appears, click the checkbox for enabling \"Apple Push Notifications service (APNs)\" and enter a name for the key such as \"Nightscout\". Then click the \"Continue\" button in the upper right of the screen. In the screen that follows, click the blue \"Register\" button. In the screen that follows, click the blue \"Download\" button. This step will download a file with a name that starts with \"AuthKey\" and ends with \".p8\". Find your AuthKey download in your downloads folder. Double-click to open it and you will be presented a message asking how you'd like to open it. Click on \"Choose Application...\" and then select \"TextEdit\" as your application to open it with. When the file opens, it will look similar to the screenshot below. In a few minutes, after we do a few other steps first, we will need to highlight ALL OF THE CONTENTS of that file and copy it because we will be pasting it in Heroku. Yes, allllll of the contents. So, easiest way is to click inside that file and then press command-a to highlight all the text and then command-c to copy it all to the clipboard. You don't have to do it right now...just keep that window open in the background for now until we need it a little further down. Then we will copy all that text. Step 3: Update Nightscout site \u00b6 You'll need to make sure your Nightscout site version is at version 13.0.1 or newer. (It's a good idea to keep Nightscout updated to the latest version; but that version is sufficient for remote overrides). You can check your version number by looking at the bottom of your NS site's settings (tap on the hamburger menu - three horizontal lines at the upper right), near where the authentication button is located. This link should be used if you want to update your Nightscout site. In order to use remote overrides, you must add a couple of new variables. If you don't know how to update your Nightscout Configuration, review this link and then come back. The instructions be Go to the Settings tab near the top of the screen on your Heroku app and then click on Reveal Config Vars . Scroll down the bottom of the Config Vars lines until you find the last blank one. You are going to add three new rows of config vars for remote overrides as shown below: KEY VALUE LOOP_APNS_KEY enter ENTIRE contents of the downloaded .p8 file including the BEGIN and END lines. Here's where you can use the command-a and command-c to hightlight and copy all the text in that file so you can paste it into Heroku here for this new variable you are creating. LOOP_APNS_KEY_ID string of characters on the .p8 download file immediately following the underscore ( _ ) and not including the file extension ( .p8 ), or you can get it from your saved key in your developer account as shown next step, too LOOP_DEVELOPER_TEAM_ID get this value from Loop app signing or in your developer account's top right corner under your name LOOP_PUSH_SERVER_ENVIRONMENT (optional) Set this to production if you installed Loop remotely such as with TestFlight, Diawi, AppCenter, or an IPA. If you built directly to your phone in XCode with your phone plugged into to your computer, do not include this variable. When executed properly, you should have something that looks like this for your three new variables that you added: Step 4: FAQs on Remote Overrides \u00b6 Don't forget to read Loopdocs page about how regular overrides work . For remote overrides in particular: Can I set different override in Nighscout than I have programmed into Loop app? Answer: No. You will only be able to enact override presets already programmed into the Loop app. If I didn't start the override in Nightscout (it was started in Loop itself), can I still use Nightscout to cancel it? Answer: Yes. You can cancel a Loop-set override with a Nightscout-set cancel \"temporary override\" command in careportal. Can I override a Loop-set override with a Nightscout-set override? Answer: Yes. If I have multiple Nightscout sites because I have multiple kiddos with T1D looping, do I need multiple APNs Keys? Answer: No. If you have multiple kids looping, you can use the one APNs key in each of their Nightscout sites. How can I tell if it worked? Answer: You should see your override pill in Nightscout, with the NEXT Loop cycle, reflecting that the desired override action took place. If you are near the Loop app, you should see the new override within less than 30 seconds or so. Can I see on Nightscout when a temporary override has been set using the looper\u2019s phone? Yes. There will be a grey bar with the name of the override noted and the Loop Pill will display the targets and duration. Remember, there is a KNOWN issue with the grey bars, so use the pill as your best guide. Can a looper cancel a remote override ? Yes. They can tap the heart icon in Loop so that it is no longer highlighted. This turns off the override, regardless of where it was initiated. I set a remote override in Nightscout but the looper tapped the heart symbol in the Loop app, so the override turned off. Will the override get reinstated next time Loop completes with internet access? No. The APN is only sent once. You can set the remote override again if need be. Can I schedule a remote override ahead of time using Nightscout? No. When you set a remote override in Nightscout, it will begin immediately and last for whatever duration is programmed for that override in the Loop app. You can set an override for ahead of time using the Looping App only. Step 5: Using Remote Overrides \u00b6 There are three ways you can trigger your override presets remotely; careportal, Shortcuts, and IFTTT. Careportal \u00b6 To use remote overrides, I'm assuming you've setup your Nightscout site according to the directions here in Loopdocs. Especially the part about your ENABLE line including each of the words: \"override careportal loop\" (in addition to other variables you'd be interested in - order of the words in the ENABLE line is not important). You'll also need to have your site authenticated so that your careportal is active to send remote overrides. Once authenticated by entering your API_SECRET , then there will be a + in the upper right corner of your site. That is your careportal. Tap the careportal + and then scroll down in the \"event type\" menu to find \"Temporary Override \". Within there, you will find all your Loop override presets already loaded for you. The Looper will see a banner notification that an override has been set (or canceled, as the case may be). Canceling an override through Nightscout careportal is as simple as selecting the event type \"Temporary Override Cancel\" and submitting. Shortcuts \u00b6 If you want to make your life SUPER AMAZING, check out using the iPhone's Shortcuts app. The Shortcuts app is for making little automations (like mini apps) that can integrate parts of your life. In this case, we've written a couple shortcuts for you that integrate Loop overrides with Nightscout. Important note Before you click that download below...save some trouble. Download the Shortcuts app if you don't have it yet and choose to run any shortcut from the Gallery. It can be the laundry timer...I don't care, just pick one and run it. THEN go to download the shortcut of your choice below. The shortcuts that aren't run through the Gallery option are called \"untrusted\". And you need a slider in your iPhone to trust the \"untrusted\" shortcuts you would be downloading here. But...in lovely iOS glitch...that slider doesn't appear unless you've run a trusted shortcut first. So, run one now. Then you'll have the slider in iPhone Settings, Shortcuts app to turn \"Allow Untrusted Shortcuts\" on when you will see a message \"This shortcut cannot be opened because your Shortcuts security system settings don't allow untrusted shortcuts.\" Click these links on your iPhone and you'll be prompted to download the premade shortcuts (assuming you open the links in Safari browser in iPhone): Comprehensive Loop Shortcut includes Set Remote Override , Cancel Override , Loop Troubleshooting Tips, Quick Text options, Manual BG entry, Bookmarks to websites, etc. And if you want to save one click to get to these one functions more directly: these shortcuts are simplified to offer only one function: Set Remote Override only shortcut Cancel Override only shortcut A couple notes about these shortcuts: You will need iOS 13 at a minimum on the phone you'd like to trigger these shortcuts from. Looper's phone can still be lower than iOS 13, but your phone as the shortcut user would need iOS 13. You need to open those links in the Safari browser on your iPhone. A confirmation will show to initiate the download. After the download finishes, tap the button marked \"AA\" near your Safari address bar and tap \"Downloads\" to find and open the downloaded Shortcut. Then wait a bit, and the shortcut's inner guts will be there...scroll ALL the way down to the bottom to click the button to save the untrusted shortcut. When you enter your Nightscout URL in the \" URL \" field of the Loop shortcut setup, make sure you don't include a trailing \"/\" or the API calls to Heroku will error out. When a remote override is set properly, you'll see an \"ok\" message displayed. If there is an error, you'll see an error message. Most errors will be that you have an API_SECRET wrong (make sure there isn't a space at the end of you API_SECRET that you don't see) or you failed to do the steps to setup NS and update your Loop app as described in steps 1-3 above. You can absolutely customize these bits and pieces within the shortcut. Change the text messages, change the links...totally up to you. IFTTT \u00b6 If you want to walk uphill both ways in the snow carrying bags of uneven groceries, you can also set overrides remotely by setting up IFTTT , too. Step 6: Known Issues \u00b6 Just a brief mention so you are aware: The override pill will display information about what override is currently active in the Looper's phone. BUT, there can be a slight delay as that information is only transmitted every 5 minutes at best (it is tied to Loop runs and Nightscout upload events in Loop). So, wait 5 minutes to see that the information has gone through a refresh cycle before assuming the override message failed to enact. When you add a new override preset in Loop, that preset has to be uploaded to Nightscout before it will be available as a remote override. To trigger that upload, you can simply enact that new override for a few seconds and turn it off again. that will get the Nightscout upload going. Step 7: Common Errors \u00b6 Once you've set up remote overrides, you may encounter errors when trying to run them via Nightscout or iOS Shortcuts. Below are the most common and the typical solutions. Error: Loop notification failed: Could not find deviceToken in loopSettings You might see this in either Nightscout or Shortcuts. The error is most commonly caused by Loop not pointing to the right Nightscout instance or you haven't yet run an override locally (with the Loop app) before trying to run one remotely. Solution: confirm the Loop app is pointing to the right Nightscout site (and there are not extra spaces or a slash (/) at the end, and always run an override for a few seconds in the Loop app before you try to run one remotely. Error: cannot POST/api/v2/notifications/loop You might see this in iOS Shortcuts. This means Nightscout is not updated correctly and you are running a version of Nightscout that doesn't yet support remote overrides. Solution: Follow the steps above again on how to update to the version of Nightscout that supports remote overrides. Error: {\u201cstatus\u201d:401,\u201dmessage\u201d:\u201dUnauthorized\u201d,\u201ddescription\u201d:Invalid\\/Missing\u201d} You might see this in iOS Shortcuts. This is caused by having the incorrect API_SECRET in the Shortcut. Solution: Double check the API_SECRET is correct and that there are no spaces at the end. Error: APNs delivery failed: InvalidProviderToken You might see this in either Nightscout or Shortcuts. This is caused because your LOOP_APNS_KEY_ID and LOOP_DEVELOPER_TEAM_ID are swapped in Heroku. Solution: Double check what's listed in your Apple Developer Account and compare to the config variables in Heroku. Your Team_ID is next to your name in the top right corner. The other code is your Key_ID. Get the IDs in the correct location in Heroku to resolve the error.","title":"Remote Overrides"},{"location":"nightscout/remote-overrides/#set-up-remote-overrides","text":"You can now use your Nightscout site to remotely set and cancel your override presets in your Loop app. What?! Yes, really...you can set/cancel an override remotely for your child's Loop. Remote Overrides Caveats Requires push notification - only available if you built your Loop app using a paid Apple developer account If you use T1Pal Nightscout account service ( T1Pal ) Check with the vendor to see which remote features are supported What you will need to do.. Update the Looper's iPhone Settings Create a Key for an Apple Push Notifications service (APNs) Update your Nightscout site and add some \"config vars\" lines in your Heroku settings. New Feature in Loop 3 Remote bolus and remote carb capability is added with Loop 3, currently under test as Loop dev. In order to support this capability, there are new minimum versions: Loop 3 (Loop dev) or newer iOS 14 or newer Nightscout version 14.0 or newer","title":"Set Up Remote Overrides"},{"location":"nightscout/remote-overrides/#step-1-update-the-loopers-iphone-settings","text":"For remote overrides to successfully deploy on a Looper's iPhone, they will need to have two settings on the iPhone enabled. The slider in iPhone -> Settings -> Loop -> Notifications needs to be turned to Allow Notifications The slider in iPhone -> Settings -> General -> Background App Refresh -> Loop must be enabled Error messages if Looper's phone is not configured correctly: Without notifications, the person trying to set a remote override will see a message about \"no deviceToken\" and no remote override will actually enact If Background app refresh is not enabled, the remote overrides will only enact if the Loop app is open and the phone is unlocked.","title":"Step 1: Update the Looper's iPhone settings"},{"location":"nightscout/remote-overrides/#step-2-apple-push-notifications","text":"The next part of this will help your Loop app give permissions to your Nightscout site to remotely interact with it. (Reminder - this only works with the paid Apple Developer ID.) Login to your Apple developer account with the Apple ID associated with your developer team that you used to sign your Loop app. Click on \"Certificates, Indentifiers & Profiles\" and then, on the next page, click on \"Keys\" (located on the left-hand column). Click on the blue \"Create a new key\" OR the + icon to add a new key. In the form that appears, click the checkbox for enabling \"Apple Push Notifications service (APNs)\" and enter a name for the key such as \"Nightscout\". Then click the \"Continue\" button in the upper right of the screen. In the screen that follows, click the blue \"Register\" button. In the screen that follows, click the blue \"Download\" button. This step will download a file with a name that starts with \"AuthKey\" and ends with \".p8\". Find your AuthKey download in your downloads folder. Double-click to open it and you will be presented a message asking how you'd like to open it. Click on \"Choose Application...\" and then select \"TextEdit\" as your application to open it with. When the file opens, it will look similar to the screenshot below. In a few minutes, after we do a few other steps first, we will need to highlight ALL OF THE CONTENTS of that file and copy it because we will be pasting it in Heroku. Yes, allllll of the contents. So, easiest way is to click inside that file and then press command-a to highlight all the text and then command-c to copy it all to the clipboard. You don't have to do it right now...just keep that window open in the background for now until we need it a little further down. Then we will copy all that text.","title":"Step 2: Apple Push Notifications"},{"location":"nightscout/remote-overrides/#step-3-update-nightscout-site","text":"You'll need to make sure your Nightscout site version is at version 13.0.1 or newer. (It's a good idea to keep Nightscout updated to the latest version; but that version is sufficient for remote overrides). You can check your version number by looking at the bottom of your NS site's settings (tap on the hamburger menu - three horizontal lines at the upper right), near where the authentication button is located. This link should be used if you want to update your Nightscout site. In order to use remote overrides, you must add a couple of new variables. If you don't know how to update your Nightscout Configuration, review this link and then come back. The instructions be Go to the Settings tab near the top of the screen on your Heroku app and then click on Reveal Config Vars . Scroll down the bottom of the Config Vars lines until you find the last blank one. You are going to add three new rows of config vars for remote overrides as shown below: KEY VALUE LOOP_APNS_KEY enter ENTIRE contents of the downloaded .p8 file including the BEGIN and END lines. Here's where you can use the command-a and command-c to hightlight and copy all the text in that file so you can paste it into Heroku here for this new variable you are creating. LOOP_APNS_KEY_ID string of characters on the .p8 download file immediately following the underscore ( _ ) and not including the file extension ( .p8 ), or you can get it from your saved key in your developer account as shown next step, too LOOP_DEVELOPER_TEAM_ID get this value from Loop app signing or in your developer account's top right corner under your name LOOP_PUSH_SERVER_ENVIRONMENT (optional) Set this to production if you installed Loop remotely such as with TestFlight, Diawi, AppCenter, or an IPA. If you built directly to your phone in XCode with your phone plugged into to your computer, do not include this variable. When executed properly, you should have something that looks like this for your three new variables that you added:","title":"Step 3: Update Nightscout site"},{"location":"nightscout/remote-overrides/#step-4-faqs-on-remote-overrides","text":"Don't forget to read Loopdocs page about how regular overrides work . For remote overrides in particular: Can I set different override in Nighscout than I have programmed into Loop app? Answer: No. You will only be able to enact override presets already programmed into the Loop app. If I didn't start the override in Nightscout (it was started in Loop itself), can I still use Nightscout to cancel it? Answer: Yes. You can cancel a Loop-set override with a Nightscout-set cancel \"temporary override\" command in careportal. Can I override a Loop-set override with a Nightscout-set override? Answer: Yes. If I have multiple Nightscout sites because I have multiple kiddos with T1D looping, do I need multiple APNs Keys? Answer: No. If you have multiple kids looping, you can use the one APNs key in each of their Nightscout sites. How can I tell if it worked? Answer: You should see your override pill in Nightscout, with the NEXT Loop cycle, reflecting that the desired override action took place. If you are near the Loop app, you should see the new override within less than 30 seconds or so. Can I see on Nightscout when a temporary override has been set using the looper\u2019s phone? Yes. There will be a grey bar with the name of the override noted and the Loop Pill will display the targets and duration. Remember, there is a KNOWN issue with the grey bars, so use the pill as your best guide. Can a looper cancel a remote override ? Yes. They can tap the heart icon in Loop so that it is no longer highlighted. This turns off the override, regardless of where it was initiated. I set a remote override in Nightscout but the looper tapped the heart symbol in the Loop app, so the override turned off. Will the override get reinstated next time Loop completes with internet access? No. The APN is only sent once. You can set the remote override again if need be. Can I schedule a remote override ahead of time using Nightscout? No. When you set a remote override in Nightscout, it will begin immediately and last for whatever duration is programmed for that override in the Loop app. You can set an override for ahead of time using the Looping App only.","title":"Step 4: FAQs on Remote Overrides"},{"location":"nightscout/remote-overrides/#step-5-using-remote-overrides","text":"There are three ways you can trigger your override presets remotely; careportal, Shortcuts, and IFTTT.","title":"Step 5: Using Remote Overrides"},{"location":"nightscout/remote-overrides/#careportal","text":"To use remote overrides, I'm assuming you've setup your Nightscout site according to the directions here in Loopdocs. Especially the part about your ENABLE line including each of the words: \"override careportal loop\" (in addition to other variables you'd be interested in - order of the words in the ENABLE line is not important). You'll also need to have your site authenticated so that your careportal is active to send remote overrides. Once authenticated by entering your API_SECRET , then there will be a + in the upper right corner of your site. That is your careportal. Tap the careportal + and then scroll down in the \"event type\" menu to find \"Temporary Override \". Within there, you will find all your Loop override presets already loaded for you. The Looper will see a banner notification that an override has been set (or canceled, as the case may be). Canceling an override through Nightscout careportal is as simple as selecting the event type \"Temporary Override Cancel\" and submitting.","title":"Careportal"},{"location":"nightscout/remote-overrides/#shortcuts","text":"If you want to make your life SUPER AMAZING, check out using the iPhone's Shortcuts app. The Shortcuts app is for making little automations (like mini apps) that can integrate parts of your life. In this case, we've written a couple shortcuts for you that integrate Loop overrides with Nightscout. Important note Before you click that download below...save some trouble. Download the Shortcuts app if you don't have it yet and choose to run any shortcut from the Gallery. It can be the laundry timer...I don't care, just pick one and run it. THEN go to download the shortcut of your choice below. The shortcuts that aren't run through the Gallery option are called \"untrusted\". And you need a slider in your iPhone to trust the \"untrusted\" shortcuts you would be downloading here. But...in lovely iOS glitch...that slider doesn't appear unless you've run a trusted shortcut first. So, run one now. Then you'll have the slider in iPhone Settings, Shortcuts app to turn \"Allow Untrusted Shortcuts\" on when you will see a message \"This shortcut cannot be opened because your Shortcuts security system settings don't allow untrusted shortcuts.\" Click these links on your iPhone and you'll be prompted to download the premade shortcuts (assuming you open the links in Safari browser in iPhone): Comprehensive Loop Shortcut includes Set Remote Override , Cancel Override , Loop Troubleshooting Tips, Quick Text options, Manual BG entry, Bookmarks to websites, etc. And if you want to save one click to get to these one functions more directly: these shortcuts are simplified to offer only one function: Set Remote Override only shortcut Cancel Override only shortcut A couple notes about these shortcuts: You will need iOS 13 at a minimum on the phone you'd like to trigger these shortcuts from. Looper's phone can still be lower than iOS 13, but your phone as the shortcut user would need iOS 13. You need to open those links in the Safari browser on your iPhone. A confirmation will show to initiate the download. After the download finishes, tap the button marked \"AA\" near your Safari address bar and tap \"Downloads\" to find and open the downloaded Shortcut. Then wait a bit, and the shortcut's inner guts will be there...scroll ALL the way down to the bottom to click the button to save the untrusted shortcut. When you enter your Nightscout URL in the \" URL \" field of the Loop shortcut setup, make sure you don't include a trailing \"/\" or the API calls to Heroku will error out. When a remote override is set properly, you'll see an \"ok\" message displayed. If there is an error, you'll see an error message. Most errors will be that you have an API_SECRET wrong (make sure there isn't a space at the end of you API_SECRET that you don't see) or you failed to do the steps to setup NS and update your Loop app as described in steps 1-3 above. You can absolutely customize these bits and pieces within the shortcut. Change the text messages, change the links...totally up to you.","title":"Shortcuts"},{"location":"nightscout/remote-overrides/#ifttt","text":"If you want to walk uphill both ways in the snow carrying bags of uneven groceries, you can also set overrides remotely by setting up IFTTT , too.","title":"IFTTT"},{"location":"nightscout/remote-overrides/#step-6-known-issues","text":"Just a brief mention so you are aware: The override pill will display information about what override is currently active in the Looper's phone. BUT, there can be a slight delay as that information is only transmitted every 5 minutes at best (it is tied to Loop runs and Nightscout upload events in Loop). So, wait 5 minutes to see that the information has gone through a refresh cycle before assuming the override message failed to enact. When you add a new override preset in Loop, that preset has to be uploaded to Nightscout before it will be available as a remote override. To trigger that upload, you can simply enact that new override for a few seconds and turn it off again. that will get the Nightscout upload going.","title":"Step 6: Known Issues"},{"location":"nightscout/remote-overrides/#step-7-common-errors","text":"Once you've set up remote overrides, you may encounter errors when trying to run them via Nightscout or iOS Shortcuts. Below are the most common and the typical solutions. Error: Loop notification failed: Could not find deviceToken in loopSettings You might see this in either Nightscout or Shortcuts. The error is most commonly caused by Loop not pointing to the right Nightscout instance or you haven't yet run an override locally (with the Loop app) before trying to run one remotely. Solution: confirm the Loop app is pointing to the right Nightscout site (and there are not extra spaces or a slash (/) at the end, and always run an override for a few seconds in the Loop app before you try to run one remotely. Error: cannot POST/api/v2/notifications/loop You might see this in iOS Shortcuts. This means Nightscout is not updated correctly and you are running a version of Nightscout that doesn't yet support remote overrides. Solution: Follow the steps above again on how to update to the version of Nightscout that supports remote overrides. Error: {\u201cstatus\u201d:401,\u201dmessage\u201d:\u201dUnauthorized\u201d,\u201ddescription\u201d:Invalid\\/Missing\u201d} You might see this in iOS Shortcuts. This is caused by having the incorrect API_SECRET in the Shortcut. Solution: Double check the API_SECRET is correct and that there are no spaces at the end. Error: APNs delivery failed: InvalidProviderToken You might see this in either Nightscout or Shortcuts. This is caused because your LOOP_APNS_KEY_ID and LOOP_DEVELOPER_TEAM_ID are swapped in Heroku. Solution: Double check what's listed in your Apple Developer Account and compare to the config variables in Heroku. Your Team_ID is next to your name in the top right corner. The other code is your Key_ID. Get the IDs in the correct location in Heroku to resolve the error.","title":"Step 7: Common Errors"},{"location":"nightscout/troublehoot/","text":"Setup Troubleshooting \u00b6 If you have just tried to set up your Nightscout site and have problems with seeing all your data, please check out the Nightscout General Troubleshooting pages . Dexcom data not showing \u00b6 If you use a Dexcom and everything was working but the Dexcom data stops showing, please review the Nightscout: No Data in NS Troubleshooting section . As part of that troubleshooting, you may need to remove the Nightscout service credentials from Loop. You may need to remove Dexcom credential from all third-party apps that get data from Dexcom Share. Be sure to add them back after the CGM data to Nightscout is restored. Loop data not showing \u00b6 If your BG data is showing, but Loop data is not (like Loop pill is empty and carbs and boluses are not showing), please delete your Nightscout account in Loop settings area. Enter the information in Loop again. Make sure to use https:// to start the site URL . Make sure there is no trailing slash at the end of the URL . Enter your API_SECRET correctly. Make sure you have loop on the ENABLE line in Heroku settings.","title":"Setup Troubleshooting"},{"location":"nightscout/troublehoot/#setup-troubleshooting","text":"If you have just tried to set up your Nightscout site and have problems with seeing all your data, please check out the Nightscout General Troubleshooting pages .","title":"Setup Troubleshooting"},{"location":"nightscout/troublehoot/#dexcom-data-not-showing","text":"If you use a Dexcom and everything was working but the Dexcom data stops showing, please review the Nightscout: No Data in NS Troubleshooting section . As part of that troubleshooting, you may need to remove the Nightscout service credentials from Loop. You may need to remove Dexcom credential from all third-party apps that get data from Dexcom Share. Be sure to add them back after the CGM data to Nightscout is restored.","title":"Dexcom data not showing"},{"location":"nightscout/troublehoot/#loop-data-not-showing","text":"If your BG data is showing, but Loop data is not (like Loop pill is empty and carbs and boluses are not showing), please delete your Nightscout account in Loop settings area. Enter the information in Loop again. Make sure to use https:// to start the site URL . Make sure there is no trailing slash at the end of the URL . Enter your API_SECRET correctly. Make sure you have loop on the ENABLE line in Heroku settings.","title":"Loop data not showing"},{"location":"nightscout/update_user/","text":"Adding Loop to Existing NS \u00b6 Many people may already have an existing Nightscout site setup from before adding Loop to their management strategies. In order to make the most of your Looping setup, you will need to modify your existing Nightscout site a bit specifically for Loop. The process is pretty easy and should not take long. Variables for Loopers \u00b6 Once you have created a Nightscout site, there are some Nightscout Config Vars specific to Loop. First the Config Vars need to be added to the Nightscout site. For each instance of viewing the Nightscout site (i.e., on broswer or phone app), you can individually select which of those configured items are displayed. This is on a per-view basis. However, Config Vars like the SHOW_PLUGINS line allow you to preconfigure what will be shown by default. Edit/Add Config Vars \u00b6 These instructions are for people using Heroku, because that is the most common choice. If your Nightscout site is not on Heroku, this page provides a guide for the Config Vars used by Loop. Login to your Heroku account , select the Settings tab near the top of the screen on your Heroku app. Click on Reveal Config Vars . Scroll down the bottom of the Config Vars lines until you find the last blank one. You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping. ENABLE bridge loop pump iob cob basal careportal sage cage bage override dbsize (Note: If you are an existing NS user, you likely already have an ENABLE line in this section of Heroku. Don't add a new one. Simply find the existing ENABLE line, click on the little pencil icon to the right of it, and add the words shown on the ENABLE line above to the existing words already on the enable line. Avoid duplicates. The remainder of the lines are likely going to be brand new additions to your Heroku settings.) DEVICESTATUS_ADVANCED true PUMP_FIELDS battery reservoir clock status PUMP_RETRO_FIELDS battery reservoir clock status SHOW_FORECAST loop SHOW_PLUGINS loop pump cob iob sage cage careportal basal override dbsize PUMP_ENABLE_ALERTS true PUMP_URGENT_BATT_U 30 (This is the pump battery percentage that will trigger a red, urgent alert in NS.) PUMP_URGENT_BATT_V 1.25 (This is the pump battery voltage that will trigger a red, urgent alert in NS.) PUMP_URGENT_RES 10 (This is the reservoir volume that will trigger a red, urgent alert in NS.) PUMP_URGENT_CLOCK 30 LOOP_ENABLE_ALERTS true LOOP_WARN 20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app. This will be a yellow alert in NS.) LOOP_URGENT 60 (Same as the alert above, but will be red in color and have a shorter snooze option.) BASAL_RENDER default Click on Open App in the top right corner of your Heroku site. Plugins Selection \u00b6 Once you are viewing an instance of your Nightscout site (browser or app), you can adjust what this instance of the display will show. Click on the \"hamburger\" menu - those three horizontal lines in the upper right corner of the main NS display. Different sets of documentation call the three horizontal lines in the upper right of the Nightscout display different things such as: Settings Hamburger Menu Drawer Menu The graphic below shows some of the check boxes you can select. Make sure your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), adjust alarms (on or off), check the boxes that you\u2019d like display as pills in the SHOW PLUGINS section (usually all of them), and then click save. (You are saving your display preferences, not modifying anything in the NS database.) Note - Nightscout has been updated since this figure was generated. Authenticate Site \u00b6 If the current display of your NS site has been not authenticated, you will not be able to access certain portions of Nightscout such as the careportal, administration tools and remote overrides. There are two ways to authenticate. Use API_SECRET to access all features of Nightscout Use Tokens to generate a URL that opens with predefined role(s) The use of tokens is documented at this link to the security page in the Nightscout documentation. Please see Nightscout: Tokens You can authenticate with your API_SECRET using either of these methods: Click on the hamburger menu and scroll all the way to the bottom, click on authenticate and add your API_SECRET Click on the Lock symbol on upper right on main display (requires careportal plugin to be enabled) and add your API_SECRET An authenticated site, with careportal plugin enabled, will show a + at upper right of the main display instead of a lock symbol. Tapping on the + gives you access to the careportal. Nightscout Version Update \u00b6 If you are new to Loop and haven\u2019t updated your Nightscout site for a while, check to see if there's an available update. Visit The Nightscout Update Instructions for directions on updating.","title":"Retrofit Existing NS"},{"location":"nightscout/update_user/#adding-loop-to-existing-ns","text":"Many people may already have an existing Nightscout site setup from before adding Loop to their management strategies. In order to make the most of your Looping setup, you will need to modify your existing Nightscout site a bit specifically for Loop. The process is pretty easy and should not take long.","title":"Adding Loop to Existing NS"},{"location":"nightscout/update_user/#variables-for-loopers","text":"Once you have created a Nightscout site, there are some Nightscout Config Vars specific to Loop. First the Config Vars need to be added to the Nightscout site. For each instance of viewing the Nightscout site (i.e., on broswer or phone app), you can individually select which of those configured items are displayed. This is on a per-view basis. However, Config Vars like the SHOW_PLUGINS line allow you to preconfigure what will be shown by default.","title":"Variables for Loopers"},{"location":"nightscout/update_user/#editadd-config-vars","text":"These instructions are for people using Heroku, because that is the most common choice. If your Nightscout site is not on Heroku, this page provides a guide for the Config Vars used by Loop. Login to your Heroku account , select the Settings tab near the top of the screen on your Heroku app. Click on Reveal Config Vars . Scroll down the bottom of the Config Vars lines until you find the last blank one. You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping. ENABLE bridge loop pump iob cob basal careportal sage cage bage override dbsize (Note: If you are an existing NS user, you likely already have an ENABLE line in this section of Heroku. Don't add a new one. Simply find the existing ENABLE line, click on the little pencil icon to the right of it, and add the words shown on the ENABLE line above to the existing words already on the enable line. Avoid duplicates. The remainder of the lines are likely going to be brand new additions to your Heroku settings.) DEVICESTATUS_ADVANCED true PUMP_FIELDS battery reservoir clock status PUMP_RETRO_FIELDS battery reservoir clock status SHOW_FORECAST loop SHOW_PLUGINS loop pump cob iob sage cage careportal basal override dbsize PUMP_ENABLE_ALERTS true PUMP_URGENT_BATT_U 30 (This is the pump battery percentage that will trigger a red, urgent alert in NS.) PUMP_URGENT_BATT_V 1.25 (This is the pump battery voltage that will trigger a red, urgent alert in NS.) PUMP_URGENT_RES 10 (This is the reservoir volume that will trigger a red, urgent alert in NS.) PUMP_URGENT_CLOCK 30 LOOP_ENABLE_ALERTS true LOOP_WARN 20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app. This will be a yellow alert in NS.) LOOP_URGENT 60 (Same as the alert above, but will be red in color and have a shorter snooze option.) BASAL_RENDER default Click on Open App in the top right corner of your Heroku site.","title":"Edit/Add Config Vars"},{"location":"nightscout/update_user/#plugins-selection","text":"Once you are viewing an instance of your Nightscout site (browser or app), you can adjust what this instance of the display will show. Click on the \"hamburger\" menu - those three horizontal lines in the upper right corner of the main NS display. Different sets of documentation call the three horizontal lines in the upper right of the Nightscout display different things such as: Settings Hamburger Menu Drawer Menu The graphic below shows some of the check boxes you can select. Make sure your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), adjust alarms (on or off), check the boxes that you\u2019d like display as pills in the SHOW PLUGINS section (usually all of them), and then click save. (You are saving your display preferences, not modifying anything in the NS database.) Note - Nightscout has been updated since this figure was generated.","title":"Plugins Selection"},{"location":"nightscout/update_user/#authenticate-site","text":"If the current display of your NS site has been not authenticated, you will not be able to access certain portions of Nightscout such as the careportal, administration tools and remote overrides. There are two ways to authenticate. Use API_SECRET to access all features of Nightscout Use Tokens to generate a URL that opens with predefined role(s) The use of tokens is documented at this link to the security page in the Nightscout documentation. Please see Nightscout: Tokens You can authenticate with your API_SECRET using either of these methods: Click on the hamburger menu and scroll all the way to the bottom, click on authenticate and add your API_SECRET Click on the Lock symbol on upper right on main display (requires careportal plugin to be enabled) and add your API_SECRET An authenticated site, with careportal plugin enabled, will show a + at upper right of the main display instead of a lock symbol. Tapping on the + gives you access to the careportal.","title":"Authenticate Site"},{"location":"nightscout/update_user/#nightscout-version-update","text":"If you are new to Loop and haven\u2019t updated your Nightscout site for a while, check to see if there's an available update. Visit The Nightscout Update Instructions for directions on updating.","title":"Nightscout Version Update"},{"location":"operation/overview/","text":"How to Set Up Your Loop App \u00b6 This section of LoopDocs, under the general menu tab \"Set up App\", goes through all the important information about the process to properly set up all your needed information. You will need to work through the steps listed in the headings under this page one by one. Please follow along with each page's information to make sure that you don't miss any valuable information about your Loop's settings and function. Permissions \u00b6 Make sure that Loop has permission to send you notifications. For example, you will want to know if Loop has stopped working for more than 20 minutes. Make sure Loop has permission to access Bluetooth devices. You'll need that for your CGM and to connect a pump to Loop. Health Permissions \u00b6 Set up App: Step 1 should have been completed when Loop built on your phone. Confirm that the Health Permission settings are correct. Note that the Carbohydrate read permission should be turned off; this is new information. Add Pump \u00b6 Set up App: Step 2 is to select and configure your insulin pump. There are separate pages for setting up a Medtronic ( MDT ) pump or an Omnipod Eros pump (aka \"pods\"). Click on one of the pages to go straight to that page's guide. Add Medtronic Pump Add Omnipod Pump Add CGM \u00b6 Set up App: Step 3 is to add a CGM source for your Loop app. If you are wondering which CGMs are supported natively by Loop, check Compatible CGM . Configurations \u00b6 Set up App: Step 4 is to configure Loop's settings. Within this section, you will be entering many settings that you are already familiar with such as basal rates, carb ratios, and insulin sensitivity factor (aka correction factor). There are also several new terms that you may be unfamiliar with like insulin model selection, suspend threshold, and override ranges. Make sure to refer to the Configurations Setup Guide while entering values - DO NOT GUESS. Services (Optional) \u00b6 Set up App: Step 5 enables the optional selection of Services . The most popular of those services is Nightscout; but the other logging sites listed also can store information about your Loop errors and messages. All of these services are optional; not using these services will not affect your ability to Loop. Loop Displays \u00b6 After you are done entering your settings, you will need to familiarize yourself with Loop's various information displays. The Displays page will help you recognize what all the icons, graphs, and data mean. RileyLink menu \u00b6 Tapping on a connected RileyLink name brings up another menu showing displays and commands which provide useful information for your Loop. Check out the RileyLink Menu for information.","title":"Set Up Overview"},{"location":"operation/overview/#how-to-set-up-your-loop-app","text":"This section of LoopDocs, under the general menu tab \"Set up App\", goes through all the important information about the process to properly set up all your needed information. You will need to work through the steps listed in the headings under this page one by one. Please follow along with each page's information to make sure that you don't miss any valuable information about your Loop's settings and function.","title":"How to Set Up Your Loop App"},{"location":"operation/overview/#permissions","text":"Make sure that Loop has permission to send you notifications. For example, you will want to know if Loop has stopped working for more than 20 minutes. Make sure Loop has permission to access Bluetooth devices. You'll need that for your CGM and to connect a pump to Loop.","title":"Permissions"},{"location":"operation/overview/#health-permissions","text":"Set up App: Step 1 should have been completed when Loop built on your phone. Confirm that the Health Permission settings are correct. Note that the Carbohydrate read permission should be turned off; this is new information.","title":"Health Permissions"},{"location":"operation/overview/#add-pump","text":"Set up App: Step 2 is to select and configure your insulin pump. There are separate pages for setting up a Medtronic ( MDT ) pump or an Omnipod Eros pump (aka \"pods\"). Click on one of the pages to go straight to that page's guide. Add Medtronic Pump Add Omnipod Pump","title":"Add Pump"},{"location":"operation/overview/#add-cgm","text":"Set up App: Step 3 is to add a CGM source for your Loop app. If you are wondering which CGMs are supported natively by Loop, check Compatible CGM .","title":"Add CGM"},{"location":"operation/overview/#configurations","text":"Set up App: Step 4 is to configure Loop's settings. Within this section, you will be entering many settings that you are already familiar with such as basal rates, carb ratios, and insulin sensitivity factor (aka correction factor). There are also several new terms that you may be unfamiliar with like insulin model selection, suspend threshold, and override ranges. Make sure to refer to the Configurations Setup Guide while entering values - DO NOT GUESS.","title":"Configurations"},{"location":"operation/overview/#services-optional","text":"Set up App: Step 5 enables the optional selection of Services . The most popular of those services is Nightscout; but the other logging sites listed also can store information about your Loop errors and messages. All of these services are optional; not using these services will not affect your ability to Loop.","title":"Services (Optional)"},{"location":"operation/overview/#loop-displays","text":"After you are done entering your settings, you will need to familiarize yourself with Loop's various information displays. The Displays page will help you recognize what all the icons, graphs, and data mean.","title":"Loop Displays"},{"location":"operation/overview/#rileylink-menu","text":"Tapping on a connected RileyLink name brings up another menu showing displays and commands which provide useful information for your Loop. Check out the RileyLink Menu for information.","title":"RileyLink menu"},{"location":"operation/algorithm/bolus/","text":"Bolus Recommendations \u00b6 Loop will recommend bolus insulin corrections when the eventual blood glucose is greater than the correction target and the active insulin plus any active 30-minute temporary basal will not be sufficient to cover the predicted excursion above correction target. These recommendations are not proactively sent to the Loop user through any notification or banner alert; the recommendation is only viewable when the user clicks on the bolus tool. Note that Loop never issues a bolus command automatically while using the default Temp Basal dosing strategy ; all boluses are initiated by the user unless the automatic bolus dosing strategy is enabled. The bolus dose calculation is identical to the dose equation given in the basal recommendations section, with the exception that: the insulin contribution from the currently running temporary basal set by Loop is removed or subtracted from the recommended bolus amount, and the delta is calculated for the top of the correction range, rather than the average of the correction range. For recently saved carbohydrates where the projected carbohydrate absorption will outlast the insulin activity duration (e.g., very slow-digesting meals like pizza or pasta), Loop\u2019s algorithm will inherently decrease the initial meal bolus \u2014 to prevent hypoglycemia events that often occur after these meals \u2014 by only recommending enough bolus to prevent minimum predicted glucose from going below the suspend threshold. As described above, the Loop algorithm computes the recommended bolus such that predicted glucose will not dip below the suspend threshold. This may result in future blood glucose levels predicted above correction range, but will prevent a hypoglycemia event shortly after the meal (as is sometimes occurs for people giving a \"pizza bolus\" in traditional pump therapy). Loop will then later make corrections by issuing higher temporary basals or automatic boluses. In effect, this algorithm behavior mimics traditional pump therapy of \u201cextended\u201d or \u201cdual wave\u201d bolusing, but with the benefit of added information about actual carbohydrate absorption effects as time goes by. Finally, Loop checks that the result of the calculations is below the maximum single bolus the Loop user specified in their settings. If the calculated bolus is less than the maximum single bolus setting, then the recommended bolus will be displayed in Loop\u2019s bolus tool. Bolusing safety feature If the current blood glucose, or any predicted blood glucose, falls below the suspend threshold, Loop will not return a recommended bolus. When the minimum blood glucose rises above the suspend threshold, the bolus tool will provide a recommended bolus. Algorithm Section Menu \u00b6 Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Bolus Recommendations"},{"location":"operation/algorithm/bolus/#bolus-recommendations","text":"Loop will recommend bolus insulin corrections when the eventual blood glucose is greater than the correction target and the active insulin plus any active 30-minute temporary basal will not be sufficient to cover the predicted excursion above correction target. These recommendations are not proactively sent to the Loop user through any notification or banner alert; the recommendation is only viewable when the user clicks on the bolus tool. Note that Loop never issues a bolus command automatically while using the default Temp Basal dosing strategy ; all boluses are initiated by the user unless the automatic bolus dosing strategy is enabled. The bolus dose calculation is identical to the dose equation given in the basal recommendations section, with the exception that: the insulin contribution from the currently running temporary basal set by Loop is removed or subtracted from the recommended bolus amount, and the delta is calculated for the top of the correction range, rather than the average of the correction range. For recently saved carbohydrates where the projected carbohydrate absorption will outlast the insulin activity duration (e.g., very slow-digesting meals like pizza or pasta), Loop\u2019s algorithm will inherently decrease the initial meal bolus \u2014 to prevent hypoglycemia events that often occur after these meals \u2014 by only recommending enough bolus to prevent minimum predicted glucose from going below the suspend threshold. As described above, the Loop algorithm computes the recommended bolus such that predicted glucose will not dip below the suspend threshold. This may result in future blood glucose levels predicted above correction range, but will prevent a hypoglycemia event shortly after the meal (as is sometimes occurs for people giving a \"pizza bolus\" in traditional pump therapy). Loop will then later make corrections by issuing higher temporary basals or automatic boluses. In effect, this algorithm behavior mimics traditional pump therapy of \u201cextended\u201d or \u201cdual wave\u201d bolusing, but with the benefit of added information about actual carbohydrate absorption effects as time goes by. Finally, Loop checks that the result of the calculations is below the maximum single bolus the Loop user specified in their settings. If the calculated bolus is less than the maximum single bolus setting, then the recommended bolus will be displayed in Loop\u2019s bolus tool. Bolusing safety feature If the current blood glucose, or any predicted blood glucose, falls below the suspend threshold, Loop will not return a recommended bolus. When the minimum blood glucose rises above the suspend threshold, the bolus tool will provide a recommended bolus.","title":"Bolus Recommendations"},{"location":"operation/algorithm/bolus/#algorithm-section-menu","text":"Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Algorithm Section Menu"},{"location":"operation/algorithm/overview/","text":"Algorithm Overview \u00b6 Loop\u2019s algorithm for adjusting insulin delivery is oriented around making a blood glucose prediction. Every five minutes, triggered by new blood glucose data, it generates a new prediction. Both bolus recommendations and temporary basal rate adjustments are set based on this prediction . Algorithm Terminology \u00b6 This graph and legend illustrates terms commonly used in discussing Loop's algorithm, and shows them in the context of historical and forecasted blood glucose in style similar to the status screen of Loop. Insulin activity duration The insulin activity duration is the duration of the insulin activity curve, and describes the point at which the delivered insulin dose no longer affects blood glucose. The insulin activity duration is 6 hours for Loop's rapid-acting and ultra-rapid insulin models. Correction range The correction range is the blood glucose range Loop uses to determine corrective actions (e.g., between 90 and 120 mg/dL in the figure). NOTE: Loop\u2019s correction range is a user setting and should not be confused with the target range, typically 70-180 mg/dL, used for the purpose of calculating the percent time in range. Correction minimum The lower or minimum value of the user\u2019s correction range, which is 90 mg/dL in the figure. Correction maximum The upper or maximum value of the user\u2019s correction range, which is 120 mg/dL in the figure. Correction target The correction target is the average value of the correction range. In the overview figure, this is 105 mg/dL given that the correction minimum is 90 mg/dL and the correction maximum is 120 mg/dL. Predicted blood glucose Loop makes a prediction of blood glucose values out for a length of time equal to your insulin action duration. The predicted blood glucose is the basis for how Loop makes its insulin delivery recommendations and actions. Eventual blood glucose The last value of the predicted glucose curve, in other words the very last blood glucose predicted at the end of your insulin action duration. In the figure above, this is 85 mg/dL. Minimum predicted blood glucose The lowest blood glucose value at any point in time within the prediction. In the figure above, this is 77 mg/dL. Delta The delta is the difference between the eventual blood glucose and the correction target. In the overview figure, the eventual blood glucose is 85 mg/dL and the correction target is 105 mg/dL, which means that the delta is -20 mg/dL. Suspend Threshold The suspend threshold is a safety feature of the Loop algorithm. If any predicted blood glucose is below this threshold, the Loop algorithm will issue a temporary basal rate of 0 CGM data Blood glucose readings made by a continuous glucose monitor. Insulin sensitivity factor A configuration value that provides an estimate of how much blood glucose will drop given a unit of insulin. Active insulin Active insulin, often referred to as Insulin-on-Board ( IOB ), is the remaining amount of insulin activity from boluses and temporary basal rates relative to a user\u2019s scheduled basal rates. More specifically, it is the total amount of insulin activity due to all bolus and basal insulin delivered within the last N hours, where N is determined by the insulin activity duration. The amount of \u201cactive\u201d insulin depends upon the insulin activity curve, and also accounts for the insulin withheld via basal suspensions. As such, it is possible that the active insulin can be negative. Negative active insulin will result in an increase in predicted blood glucose. The active insulin displayed in Loop's main display does not reflect the currently enacted temporary basal rate, as that basal rate may be canceled or modified before completion over the next 30 minutes. In others words, Loop doesn't count chickens before the eggs hatch...insulin delivery must be confirmed before being added to the active insulin reporting. Algorithm Section Menu \u00b6 Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Algorithm Overview"},{"location":"operation/algorithm/overview/#algorithm-overview","text":"Loop\u2019s algorithm for adjusting insulin delivery is oriented around making a blood glucose prediction. Every five minutes, triggered by new blood glucose data, it generates a new prediction. Both bolus recommendations and temporary basal rate adjustments are set based on this prediction .","title":"Algorithm Overview"},{"location":"operation/algorithm/overview/#algorithm-terminology","text":"This graph and legend illustrates terms commonly used in discussing Loop's algorithm, and shows them in the context of historical and forecasted blood glucose in style similar to the status screen of Loop. Insulin activity duration The insulin activity duration is the duration of the insulin activity curve, and describes the point at which the delivered insulin dose no longer affects blood glucose. The insulin activity duration is 6 hours for Loop's rapid-acting and ultra-rapid insulin models. Correction range The correction range is the blood glucose range Loop uses to determine corrective actions (e.g., between 90 and 120 mg/dL in the figure). NOTE: Loop\u2019s correction range is a user setting and should not be confused with the target range, typically 70-180 mg/dL, used for the purpose of calculating the percent time in range. Correction minimum The lower or minimum value of the user\u2019s correction range, which is 90 mg/dL in the figure. Correction maximum The upper or maximum value of the user\u2019s correction range, which is 120 mg/dL in the figure. Correction target The correction target is the average value of the correction range. In the overview figure, this is 105 mg/dL given that the correction minimum is 90 mg/dL and the correction maximum is 120 mg/dL. Predicted blood glucose Loop makes a prediction of blood glucose values out for a length of time equal to your insulin action duration. The predicted blood glucose is the basis for how Loop makes its insulin delivery recommendations and actions. Eventual blood glucose The last value of the predicted glucose curve, in other words the very last blood glucose predicted at the end of your insulin action duration. In the figure above, this is 85 mg/dL. Minimum predicted blood glucose The lowest blood glucose value at any point in time within the prediction. In the figure above, this is 77 mg/dL. Delta The delta is the difference between the eventual blood glucose and the correction target. In the overview figure, the eventual blood glucose is 85 mg/dL and the correction target is 105 mg/dL, which means that the delta is -20 mg/dL. Suspend Threshold The suspend threshold is a safety feature of the Loop algorithm. If any predicted blood glucose is below this threshold, the Loop algorithm will issue a temporary basal rate of 0 CGM data Blood glucose readings made by a continuous glucose monitor. Insulin sensitivity factor A configuration value that provides an estimate of how much blood glucose will drop given a unit of insulin. Active insulin Active insulin, often referred to as Insulin-on-Board ( IOB ), is the remaining amount of insulin activity from boluses and temporary basal rates relative to a user\u2019s scheduled basal rates. More specifically, it is the total amount of insulin activity due to all bolus and basal insulin delivered within the last N hours, where N is determined by the insulin activity duration. The amount of \u201cactive\u201d insulin depends upon the insulin activity curve, and also accounts for the insulin withheld via basal suspensions. As such, it is possible that the active insulin can be negative. Negative active insulin will result in an increase in predicted blood glucose. The active insulin displayed in Loop's main display does not reflect the currently enacted temporary basal rate, as that basal rate may be canceled or modified before completion over the next 30 minutes. In others words, Loop doesn't count chickens before the eggs hatch...insulin delivery must be confirmed before being added to the active insulin reporting.","title":"Algorithm Terminology"},{"location":"operation/algorithm/overview/#algorithm-section-menu","text":"Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Algorithm Section Menu"},{"location":"operation/algorithm/prediction/","text":"Blood Glucose Prediction \u00b6 Loop uses an algorithm to maintain blood glucose in a correction range by predicting the contributions from four individual effects (insulin, carbohydrates, retrospective correction, and blood glucose momentum) at any time t to recommend temporary basal rate corrections and boluses. \\[ BG[t] = Insulin[t] + Carb[t] + RetrospectiveCorrection[t] + Momentum[t] \\] You can see the individual contributions of these effects by tapping on the predicted blood glucose chart on Loop's status screen. Loop updates this blood glucose prediction every five minutes when a new CGM value has been received and the pump's status has been updated. Just a note, this whole section is fairly technical. While perhaps not the most interesting topic for many readers, if you are seeking the detailed view of the Loop algorithm this discussion is quite useful. If you want a more surface understanding, the overview and temporary basal recommendations sections alone are probably sufficient. Overview \u00b6 Before we delve into each of the four individual effects, a general overview figure may be a helpful start. There are four effects summed together to produce Loop's final predicted blood glucose curve. Each individual effect, along with their combined effect, is illustrated in the figure below. Insulin, from boluses and temporary basals, will have a decreasing effect on the prediction. Carbohydrates will have an increasing effect on the prediction. Blood glucose momentum effect can have a positive or negative effect, depending on how blood glucose is trending in the most recent CGM values. As shown in the example below, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is having a decreasing effect on the prediction, indicating that the recent rise in blood glucose was not as large as had been previously predicted by Loop in the recent past. The sections below provide detailed information on each of the four contributions. Insulin Effect \u00b6 Most traditional pump users and caregivers are already familiar with the concept of an insulin activity curve, where the insulin\u2019s effect is time-dependent. Insulin takes a little while to affect blood glucose. The insulin effect typically peaks around one hour after giving insulin and then gradually decays. Loop 2.x provides users with two different classes of insulin models (i.e., an exponential model and the Walsh model). All of the exponential models have an insulin activity duration of 6 hours, whereas the insulin activity duration is customizable for the Walsh model. The rapid-acting and Fiasp insulin activity curves are modeled as exponential curves that match the shape of the insulin activity curves from insulin labeling, and as observed in both adults and children. The amount of insulin effect remaining, or percent of remaining active insulin after an insulin bolus is delivered, is modeled mathematically in Loop with an exponential decay curve. Insulin Effect Remaining \u00b6 If a user\u2019s insulin sensitivity factor ( ISF ) is 50 mg/dL per 1 unit of insulin and the user gives 2 units of insulin, then the user\u2019s blood glucose would be expected to drop 100 mg/dL within the 6 hours following the insulin delivery. This insulin effect can be visualized in several different ways: the expected active insulin, expected drop in blood glucose every 5 minutes after delivery, and the expected cumulative drop in blood glucose. The figures below use the Rapid Acting - Adult insulin model in Loop. Active Insulin \u00b6 This figure shows that 2 units of insulin are given initially, and the corresponding active insulin (i.e., insulin on board IOB ) decays according to the curve below. The active insulin at any time is the product of original insulin delivered and the percent of insulin activity remaining. Knowing the expected active insulin over the next 6 hours, and the insulin sensitivity factor (50 mg/dL, in this case), Loop can calculate the expected drop in blood glucose from that dose of insulin as shown in the figure below. NOTE: ISF is also a function of time, which means if the user\u2019s scheduled ISF changes during the insulin activity time, it will change the expected drop in blood glucose due to the insulin effect. Expected Change in Blood Glucose \u00b6 Lastly, taking the first derivative (i.e., the rate of change) of the cumulative drop in the blood glucose curve yields the expected change in blood glucose over the insulin activity duration. For each dose of insulin given, Loop calculates the expected discrete drop in blood glucose at each 5-minute period for the insulin activity duration, as shown below. Insulin Effect on Blood Glucose \u00b6 For this example, assuming a user\u2019s blood glucose was 205 mg/dL at the time of insulin delivery, Loop would predict a drop in blood glucose due to the two units delivered at 12 pm as shown in the figure below. Scheduled Basal Rates \u00b6 In traditional basal/bolus pump therapy, basal rates are set to accommodate the user's endogenous glucose production (EGP) that causes blood glucose to rise. If a user's basal settings were exactly right in traditional pump therapy, the user would have perfectly flat blood glucose all day, all other factors being equal. In reality, people with type 1 diabetes, and their caregivers, know that basal settings are never exactly right. Every day is a little different, and a myriad of factors that affect blood glucose (e.g., including stress, hormones, sleep, etc.) may affect insulin needs. Some people have different basal profiles to accommodate these variations. Some people regularly tune and adjust their basal rates, and/or do so at their endocrinology clinic visits. Since the Loop algorithm assumes that the user-set basal rates are correct, it calculates the effect of insulin relative to scheduled basal rates. If basal rates are not entirely correct, Loop can compensate a bit through the retrospective correction and blood glucose momentum effects, discussed later in this page. The insulin delivery chart below displays a bar-graph history of the temporary basal rates enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. A rate displayed in this chart as +0 would indicate that no temporary basal rate was set and that the basal rate being delivered was the scheduled basal rate. Positive values indicate a temporary basal rate was set above the scheduled basal rate (i.e., more insulin delivered), and negative values indicate that a temporary basal rate was set below the scheduled basal rate (i.e., less insulin delivered). For example, if the user\u2019s scheduled basal rate is 1 U/hr, and Loop gives a temporary basal rate of 3 U/hr, then it will calculate the expected drop in blood glucose due to +2 U/hr of insulin. Similarly if Loop sets a temporary basal rate of 0 U/hr for 1 hour, then the insulin effect will also be relative to the current scheduled basal rate of 1 U/hr, and Loop would predict the user\u2019s blood glucose to increase by the amount of change from -1 U/hr of insulin. If the user\u2019s ISF is 50 mg/dL, then Loop would predict blood glucose to rise 50 mg/dL over the insulin activity duration (6 hours). Here is a real-world example where Loop is setting many temporary basal rates over the course of the day. The light orange bars are the temporary basal rates delivered and the solid orange line is the active insulin at any given time during the day. Total Insulin Effect (combining boluses and temporary basal rates) \u00b6 Loop will combine or stack the active insulin of all the discrete (individual) boluses and temporary basal rates over the past insulin activity duration (6 hours), to predict the active insulin for the next 6 hours. As demonstrated above, using the predicted active insulin Loop can predict the blood glucose drop over the next 6 hours. Lastly, the combined effect of bolus and basal insulin are visually represented for the user by Loop\u2019s insulin charts: The insulin effect can be expressed mathematically: \\[ \\Delta BG_{I}[t] = ISF[t] \\times IA[t] \\] where BG is the expected change in blood glucose with the units (mg/dL/5min), ISF is the insulin sensitivity factor (mg/dL/U) at time t, and IA is the insulin activity (U/5min) at time t . Insulin activity can also be thought of as a velocity or rate of change in blood glucose due to insulin. The insulin activity accounts for the EGP and any active insulin from basals and boluses. Carbohydrate Effect \u00b6 Carbohydrates will raise blood glucose, but the speed and degree to which they impact blood glucose are dependent on the type of carbohydrates. High glycemic index (GI) carbohydrates will raise blood glucose quickly over a shorter time, whereas low GI foods will raise blood glucose more slowly over a longer period. Foods like candy, juice, and fruits tend to be high GI foods, while pizza, burritos, and quesadillas are usually lower GI foods. Digestion issues like gastroparesis may also contribute to variations in carbohydrate absorption. Because carbohydrate absorption can be quite variable, Loop has a model that dynamically adjusts the expected remaining time of carbohydrate absorption. To start with, Loop allows the user to input a rough guess of how long they think the food or drink will take to absorb. The user\u2019s guess is used as a middle of the road estimate, and Loop\u2019s algorithm will shorten or lengthen it based on observed blood glucose change. For all carbohydrate entries, Loop assumes carbohydrates will not start absorbing for 10 minutes, so there is a 10-minute period of no absorption that is modeled prior to the absorption modeled in the next sections. Linear Carbohydrate Absorption \u00b6 Loop takes a conservative view of how fast the remaining carbohydrates will absorb. Because it is safer to under-deliver insulin for long-duration meals, Loop starts out at a minimum rate of absorption based on extending the entered carbohydrate duration by 50%. Said another way, the minimum carbohydrate absorption rate is the total number of grams of carbohydrates over 150% of the entered duration. Using this initial minimum absorption rate, the remaining carbohydrates are modeled to absorb linearly. For example, if the user enters a 72g carbohydrate meal, and selects an estimated absorption time of 4 hours, then Loop will forecast a 12g/hr absorption rate for the next 6 hours. This rate can be termed the minimum absorption rate, which can be represented mathematically as: \\[ MAR[t] = \\frac{CA[t]}{1.5 \\times d} \\] where MAR is the minimum absorption rate (g/hr), CA is the number of carbohydrates (g) and d is the expected duration (hr) it will take the carbohydrates to absorb. Dynamic Carbohydrate Absorption \u00b6 The linear model above is modulated by an additional calculation that uses recently observed blood glucose data to estimate how fast carbohydrates have been absorbing. The expected change in blood glucose due to insulin effects alone is compared to the actual observed changes in blood glucose. This difference is termed the insulin counteraction effect ( ICE ): \\[ ICE[t] = OA[t] + IA[t] \\] where, ICE (mg/dL/5 min) is the insulin counteraction effect, OA is the observed activity (mg/dL/5min) or observed change in blood glucose at time t , and IA is the insulin activity (mg/dL/5min). Insulin counteraction effects are caused by more than just carbohydrates, and can include exercise, sensitivity changes, or incorrectly configured insulin delivery settings (e.g., basal rate, ISF , etc.). However, since the effect of carbohydrates is often dominant (after insulin), Loop can still make useful ongoing adjustments to its carbohydrate model by assuming that the increase in blood glucose is mainly carbohydrate absorption in the period following recorded meal entries. The insulin counteraction effect is converted into an estimated carbohydrate absorption amount by using the current carbohydrate-to-insulin ratio and the insulin sensitivity factor at the time of the recorded meal entry. \\[ AC[t] = ICE[t] \\times \\frac{CIR[t]}{ISF[t]} \\] where AC is the number of carbohydrates absorbed (g/5min), ICE is the insulin counteraction effect, CIR is the carbohydrate-to-insulin ratio (g/U), and ISF is the insulin sensitivity factor (mg/dL/U) at time t . If multiple meal entries are active (i.e., still absorbing), the estimated absorption is split between each carbohydrate entry in proportion to each carbohydrate entry\u2019s minimum absorption rate. For example, if 72g carbohydrates with an expected absorption time of 4 hours was consumed at 12 pm, and another 72g of carbohydrates with an expected absorption time of 2 hours was consumed at 3 pm, then the minimum absorption rate (see MAR equation above) would be 12 g/hr and 6 g/hr respectively, or 1 g/5min and 0.5 g/5min. \\[ MAR[t = 12pm] = \\frac{ 72g }{ 1.5 \\times 4hr } = 12 \\frac{ g }{ hr } = 1 \\frac{ g }{ 5min } \\] \\[ MAR[t = 3pm] = \\frac{ 72g }{ 1.5 \\times 2hr } = 6 \\frac{ g }{ hr } = 0.5 \\frac{ g }{ 5min } \\] Examining just the simple linear carbohydrate effect of these two meals: If we further expand this example, by assuming the following at 4pm: that there are still carbohydrates left to be absorbed from both meals, that the estimated insulin counteraction effect ( ICE ) is \\(+15 \\frac{mg/dL}{5min}\\) , and the user\u2019s CIR is \\(10 \\frac{g}{U}\\) and the ISF is \\(50 \\frac{mg/dL}{U}\\) , then the estimated amount of carbohydrates absorbed at 4pm would be 3g: \\[ AC[t = 4pm] = 15 \\frac{mg/dL}{5min} \\times \\frac{10 \\frac{g}{U}}{50 \\frac{mg/dL}{U}} = 3 \\frac{g}{5min} \\] Those 3g of carbohydrates would then be split amongst the meals proportional to their minimum absorption rates: \\[ \\text{Proportion to Meal1} = \\frac{MAR_{meal1}}{MAR_{meal1} + MAR_{meal2}} = \\frac{12}{12+6}=\\frac{2}{3} = 66.6\\% \\] \\[ \\text{Proportion to Meal2} = \\frac{MAR_{meal2}}{MAR_{meal1} + MAR_{meal2}} = \\frac{6}{12+6}=\\frac{1}{3} = 33.3\\% \\] resulting in 2g of absorption being attributed to Meal 1 and 1g attributed to Meal 2. Minimum Carbohydrate Absorption Rate \u00b6 If the estimated carbohydrate absorption of a meal entry is less than what would have been absorbed using the minimum absorption rate, then the minimum absorption rate is used instead. This is to ensure that meal entries expire in a reasonable amount of time. Modeling Remaining Active Carbohydrates \u00b6 After the estimated absorbed carbohydrates have been subtracted from each meal entry, the remaining carbohydrates (for each entry) are then forecasted to decay or absorb using the minimum absorption rate. Loop uses this forecast to estimate the effect (active carbohydrates, or carbohydrate activity) of the remaining carbohydrates. The carbohydrate effect can be expressed mathematically using the terms described above: \\[ \\Delta BG_{C}[t] = MAR[t] \\times \\frac{ISF[t]}{CIR[t]} \\] Retrospective Correction Effect \u00b6 The retrospective correction effect allows the Loop algorithm to account for effects that are not modeled with the insulin and carbohydrate effects, by comparing historical predictions to the actual blood glucose. In addition to the modeled effects of insulin and carbohydrates, there are many other factors that affect blood glucose (e.g., exercise, stress, hormones, etc.). Many of these effects are active for a period of time. By observing its own forecast error, Loop can estimate the magnitude of these effects and, by assuming that they will continue for some short period of time, incorporate them into the forecast to improve forecast accuracy. To do this, Loop calculates a retrospective forecast with a start time of 30 minutes in the past, ending at the current time. Loop compares the retrospective forecast to the actual observed change in blood glucose, and the difference is summed into a blood glucose velocity or rate of difference: \\[ BG_{vel}=\\frac{1}{6} \\sum_{t=-30}^{0} RF[t] - BG[t] \\] where BG vel is a velocity term (mg/dL per 5min) that represents the average blood glucose difference between the retrospective forecast (RF) and the actual blood glucose (BG) over the last 30 minutes. This term is applied to the current forecast from the insulin and carb effects with a linear decay over the next hour. For example, the first forecast point (t=5) is approximately 100% of this velocity, the forecast point one-half hour from now is adjusted by 50% of the velocity, and points from one hour or more in the future are not affected by this term. The retrospective correction effect can be expressed mathematically: \\[ \\Delta BG_{RC}[t] = BG_{vel} \\times \\left(1-\\frac{t-5}{55}\\right) \\] where BG is the predicted change in blood glucose with the units (mg/dL/5min) at time t over the time range of 5 to 60 minutes, and the other term gives the percentage of BG vel that is applied to this effect. The retrospective correction effect can be illustrated with an example: if the BG vel over the past 30 minutes was -10 mg/dL per 5min, then the retrospective correction effect over the next 60 minutes would be as follows: Minutes relative to now ( t=0 ) Percent of \\(BG_{vel}\\) Applied to RC Effect \\(\\Delta BG_{RC}[t]\\) 5 100% -10 10 91% -9.1 15 82% -8.2 20 73% -7.3 25 64% -6.4 30 55% -5.5 35 45% -4.5 40 36% -3.6 45 27% -2.7 50 18% -1.8 55 9% -0.9 60 0% 0 Here\u2019s an example below that shows the retrospective correction effect when the BG vel over the past 30 minutes was -10mg/dL/5min. Blood Glucose Momentum Effect \u00b6 The blood glucose momentum effect incorporates a prediction component based on the assumption that recent blood glucose trends tend to persist for a short period of time. In other words, the best predictor of the future is the recent past. The blood glucose momentum portion of the algorithm gives weight or importance to recent blood glucose to improve the near-future forecast. Loop calculates the slope of the last 3 continuous CGM readings (i.e., the last 15 minutes) using linear regression. Using multiple points helps filter out noise in the CGM data while still responding fast to changing situations. That momentum slope (Mslope) is the approximate or average rate of change over the last 15 minutes, though it is normalized to 5 minutes so that the units are (mg/dL/5min). The momentum slope is then blended into the next 20 minutes of predicted blood glucose from the other effects (i.e., insulin, carbohydrates, and retrospective correction effects). This, in essence, makes the next 20 minutes of blood glucose prediction more sensitive to recent blood glucose trends. The blending of the recent trend slope into the next 20 minutes is weighted so that the first prediction point (5 minutes into the future) is highly influenced by the slope, and the influence of the slope gradually decays over the 20 minute time period. The momentum effect can be expressed mathematically as: \\[ \\Delta BG_{M}[t] = M_{slope} \\times \\left( 1 - \\frac{t-5}{15} \\right) \\] NOTE: The term \\(\\left(\\frac{t-5}{15}\\right)\\) is also applied to the combined insulin, carbohydrates, and retrospective correction effects to get the delta blood glucose prediction. The momentum effect can be illustrated with an example: if the last 3 blood glucose readings were 100, 103, and 106 mg/dL, then the slope would be 3 mg/dL per 5 minutes (0.6 mg/dL per minute). The amount of that recent trend or slope applied to the next 20 minutes of predictions (i.e., the next 4 predictions from the other effects) is roughly 100% (3 mg/dL per 5 min) at 5 minutes, 66% (2 mg/dL per 5 min) at 10 minutes, 33% (1 mg/dL per 5 min) at 15 minutes, and 0% (0 mg/dL per 5 min) at 20 minutes. Also, if the combined effect from the insulin, carbohydrates, and retrospective correction is assumed to be a constant 6 mg/dL/5min over the next 20 minutes, then the expected overall effect and the predicted blood glucose can be calculated as follows. Minutes relative to now ( t=0 ) Percent of Slope Applied to Momentum Effect Momentum Effect (3mg/dL/5min) Percent of Other Effects Applied Overall Effect Other Effects (Insulin, Carbohydrate, and Retrospective Correction) Overall Effect (mg/dL/5min) Predicted BG (mg/dL) 5 100% 3 0 6 3 109 10 66.6% 2 33.3%< 6 4 113 15 33.3% 1 66.6% 6 5 118 20 0% 0 100% 6 6 124 This example is illustrated in the figure below. It is also worth noting that Loop will not calculate blood glucose momentum in instances where CGM data is not continuous (i.e., must have at least three continuous CGM readings to draw the best-fit straight line trend). It also will not calculate blood glucose momentum when the last three CGM readings contain any calibration points, as those may not be representative of true blood glucose momentum trends. Predicting Glucose \u00b6 As described in the momentum effect section, the momentum effect is blended with the insulin, carbohydrate, and retrospective correction effects to predict the change in blood glucose: \\[ \\Delta BG[t] = \\Delta BG_{M}[t] + \\left(\\Delta BG_{I}[t] + \\Delta BG_{C}[t]+ \\Delta BG_{RC}[t] \\right) \\times min\\left(\\frac{t-5}{15}, 1\\right) \\] Lastly, the forecast or predicted blood glucose BG at time t is the current blood glucose BG plus the sum of all blood glucose effects BG over the time interval [t5, t]: \\[ \\widehat{BG}[t] = BG[t_{o}] + \\sum_{i=5}^{t} \\Delta BG[t_{o+i}] \\] Each individual effect along with the combined effects are illustrated in the figure below. As shown, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is having a dampening effect on the prediction, indicating that the recent rise in blood glucose was not as great as had been previously predicted in the recent past. Algorithm Section Menu \u00b6 Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Glucose Prediction"},{"location":"operation/algorithm/prediction/#blood-glucose-prediction","text":"Loop uses an algorithm to maintain blood glucose in a correction range by predicting the contributions from four individual effects (insulin, carbohydrates, retrospective correction, and blood glucose momentum) at any time t to recommend temporary basal rate corrections and boluses. \\[ BG[t] = Insulin[t] + Carb[t] + RetrospectiveCorrection[t] + Momentum[t] \\] You can see the individual contributions of these effects by tapping on the predicted blood glucose chart on Loop's status screen. Loop updates this blood glucose prediction every five minutes when a new CGM value has been received and the pump's status has been updated. Just a note, this whole section is fairly technical. While perhaps not the most interesting topic for many readers, if you are seeking the detailed view of the Loop algorithm this discussion is quite useful. If you want a more surface understanding, the overview and temporary basal recommendations sections alone are probably sufficient.","title":"Blood Glucose Prediction"},{"location":"operation/algorithm/prediction/#overview","text":"Before we delve into each of the four individual effects, a general overview figure may be a helpful start. There are four effects summed together to produce Loop's final predicted blood glucose curve. Each individual effect, along with their combined effect, is illustrated in the figure below. Insulin, from boluses and temporary basals, will have a decreasing effect on the prediction. Carbohydrates will have an increasing effect on the prediction. Blood glucose momentum effect can have a positive or negative effect, depending on how blood glucose is trending in the most recent CGM values. As shown in the example below, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is having a decreasing effect on the prediction, indicating that the recent rise in blood glucose was not as large as had been previously predicted by Loop in the recent past. The sections below provide detailed information on each of the four contributions.","title":"Overview"},{"location":"operation/algorithm/prediction/#insulin-effect","text":"Most traditional pump users and caregivers are already familiar with the concept of an insulin activity curve, where the insulin\u2019s effect is time-dependent. Insulin takes a little while to affect blood glucose. The insulin effect typically peaks around one hour after giving insulin and then gradually decays. Loop 2.x provides users with two different classes of insulin models (i.e., an exponential model and the Walsh model). All of the exponential models have an insulin activity duration of 6 hours, whereas the insulin activity duration is customizable for the Walsh model. The rapid-acting and Fiasp insulin activity curves are modeled as exponential curves that match the shape of the insulin activity curves from insulin labeling, and as observed in both adults and children. The amount of insulin effect remaining, or percent of remaining active insulin after an insulin bolus is delivered, is modeled mathematically in Loop with an exponential decay curve.","title":"Insulin Effect"},{"location":"operation/algorithm/prediction/#insulin-effect-remaining","text":"If a user\u2019s insulin sensitivity factor ( ISF ) is 50 mg/dL per 1 unit of insulin and the user gives 2 units of insulin, then the user\u2019s blood glucose would be expected to drop 100 mg/dL within the 6 hours following the insulin delivery. This insulin effect can be visualized in several different ways: the expected active insulin, expected drop in blood glucose every 5 minutes after delivery, and the expected cumulative drop in blood glucose. The figures below use the Rapid Acting - Adult insulin model in Loop.","title":"Insulin Effect Remaining"},{"location":"operation/algorithm/prediction/#active-insulin","text":"This figure shows that 2 units of insulin are given initially, and the corresponding active insulin (i.e., insulin on board IOB ) decays according to the curve below. The active insulin at any time is the product of original insulin delivered and the percent of insulin activity remaining. Knowing the expected active insulin over the next 6 hours, and the insulin sensitivity factor (50 mg/dL, in this case), Loop can calculate the expected drop in blood glucose from that dose of insulin as shown in the figure below. NOTE: ISF is also a function of time, which means if the user\u2019s scheduled ISF changes during the insulin activity time, it will change the expected drop in blood glucose due to the insulin effect.","title":"Active Insulin"},{"location":"operation/algorithm/prediction/#expected-change-in-blood-glucose","text":"Lastly, taking the first derivative (i.e., the rate of change) of the cumulative drop in the blood glucose curve yields the expected change in blood glucose over the insulin activity duration. For each dose of insulin given, Loop calculates the expected discrete drop in blood glucose at each 5-minute period for the insulin activity duration, as shown below.","title":"Expected Change in Blood Glucose"},{"location":"operation/algorithm/prediction/#insulin-effect-on-blood-glucose","text":"For this example, assuming a user\u2019s blood glucose was 205 mg/dL at the time of insulin delivery, Loop would predict a drop in blood glucose due to the two units delivered at 12 pm as shown in the figure below.","title":"Insulin Effect on Blood Glucose"},{"location":"operation/algorithm/prediction/#scheduled-basal-rates","text":"In traditional basal/bolus pump therapy, basal rates are set to accommodate the user's endogenous glucose production (EGP) that causes blood glucose to rise. If a user's basal settings were exactly right in traditional pump therapy, the user would have perfectly flat blood glucose all day, all other factors being equal. In reality, people with type 1 diabetes, and their caregivers, know that basal settings are never exactly right. Every day is a little different, and a myriad of factors that affect blood glucose (e.g., including stress, hormones, sleep, etc.) may affect insulin needs. Some people have different basal profiles to accommodate these variations. Some people regularly tune and adjust their basal rates, and/or do so at their endocrinology clinic visits. Since the Loop algorithm assumes that the user-set basal rates are correct, it calculates the effect of insulin relative to scheduled basal rates. If basal rates are not entirely correct, Loop can compensate a bit through the retrospective correction and blood glucose momentum effects, discussed later in this page. The insulin delivery chart below displays a bar-graph history of the temporary basal rates enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. A rate displayed in this chart as +0 would indicate that no temporary basal rate was set and that the basal rate being delivered was the scheduled basal rate. Positive values indicate a temporary basal rate was set above the scheduled basal rate (i.e., more insulin delivered), and negative values indicate that a temporary basal rate was set below the scheduled basal rate (i.e., less insulin delivered). For example, if the user\u2019s scheduled basal rate is 1 U/hr, and Loop gives a temporary basal rate of 3 U/hr, then it will calculate the expected drop in blood glucose due to +2 U/hr of insulin. Similarly if Loop sets a temporary basal rate of 0 U/hr for 1 hour, then the insulin effect will also be relative to the current scheduled basal rate of 1 U/hr, and Loop would predict the user\u2019s blood glucose to increase by the amount of change from -1 U/hr of insulin. If the user\u2019s ISF is 50 mg/dL, then Loop would predict blood glucose to rise 50 mg/dL over the insulin activity duration (6 hours). Here is a real-world example where Loop is setting many temporary basal rates over the course of the day. The light orange bars are the temporary basal rates delivered and the solid orange line is the active insulin at any given time during the day.","title":"Scheduled Basal Rates"},{"location":"operation/algorithm/prediction/#total-insulin-effect-combining-boluses-and-temporary-basal-rates","text":"Loop will combine or stack the active insulin of all the discrete (individual) boluses and temporary basal rates over the past insulin activity duration (6 hours), to predict the active insulin for the next 6 hours. As demonstrated above, using the predicted active insulin Loop can predict the blood glucose drop over the next 6 hours. Lastly, the combined effect of bolus and basal insulin are visually represented for the user by Loop\u2019s insulin charts: The insulin effect can be expressed mathematically: \\[ \\Delta BG_{I}[t] = ISF[t] \\times IA[t] \\] where BG is the expected change in blood glucose with the units (mg/dL/5min), ISF is the insulin sensitivity factor (mg/dL/U) at time t, and IA is the insulin activity (U/5min) at time t . Insulin activity can also be thought of as a velocity or rate of change in blood glucose due to insulin. The insulin activity accounts for the EGP and any active insulin from basals and boluses.","title":"Total Insulin Effect (combining boluses and temporary basal rates)"},{"location":"operation/algorithm/prediction/#carbohydrate-effect","text":"Carbohydrates will raise blood glucose, but the speed and degree to which they impact blood glucose are dependent on the type of carbohydrates. High glycemic index (GI) carbohydrates will raise blood glucose quickly over a shorter time, whereas low GI foods will raise blood glucose more slowly over a longer period. Foods like candy, juice, and fruits tend to be high GI foods, while pizza, burritos, and quesadillas are usually lower GI foods. Digestion issues like gastroparesis may also contribute to variations in carbohydrate absorption. Because carbohydrate absorption can be quite variable, Loop has a model that dynamically adjusts the expected remaining time of carbohydrate absorption. To start with, Loop allows the user to input a rough guess of how long they think the food or drink will take to absorb. The user\u2019s guess is used as a middle of the road estimate, and Loop\u2019s algorithm will shorten or lengthen it based on observed blood glucose change. For all carbohydrate entries, Loop assumes carbohydrates will not start absorbing for 10 minutes, so there is a 10-minute period of no absorption that is modeled prior to the absorption modeled in the next sections.","title":"Carbohydrate Effect"},{"location":"operation/algorithm/prediction/#linear-carbohydrate-absorption","text":"Loop takes a conservative view of how fast the remaining carbohydrates will absorb. Because it is safer to under-deliver insulin for long-duration meals, Loop starts out at a minimum rate of absorption based on extending the entered carbohydrate duration by 50%. Said another way, the minimum carbohydrate absorption rate is the total number of grams of carbohydrates over 150% of the entered duration. Using this initial minimum absorption rate, the remaining carbohydrates are modeled to absorb linearly. For example, if the user enters a 72g carbohydrate meal, and selects an estimated absorption time of 4 hours, then Loop will forecast a 12g/hr absorption rate for the next 6 hours. This rate can be termed the minimum absorption rate, which can be represented mathematically as: \\[ MAR[t] = \\frac{CA[t]}{1.5 \\times d} \\] where MAR is the minimum absorption rate (g/hr), CA is the number of carbohydrates (g) and d is the expected duration (hr) it will take the carbohydrates to absorb.","title":"Linear Carbohydrate Absorption"},{"location":"operation/algorithm/prediction/#dynamic-carbohydrate-absorption","text":"The linear model above is modulated by an additional calculation that uses recently observed blood glucose data to estimate how fast carbohydrates have been absorbing. The expected change in blood glucose due to insulin effects alone is compared to the actual observed changes in blood glucose. This difference is termed the insulin counteraction effect ( ICE ): \\[ ICE[t] = OA[t] + IA[t] \\] where, ICE (mg/dL/5 min) is the insulin counteraction effect, OA is the observed activity (mg/dL/5min) or observed change in blood glucose at time t , and IA is the insulin activity (mg/dL/5min). Insulin counteraction effects are caused by more than just carbohydrates, and can include exercise, sensitivity changes, or incorrectly configured insulin delivery settings (e.g., basal rate, ISF , etc.). However, since the effect of carbohydrates is often dominant (after insulin), Loop can still make useful ongoing adjustments to its carbohydrate model by assuming that the increase in blood glucose is mainly carbohydrate absorption in the period following recorded meal entries. The insulin counteraction effect is converted into an estimated carbohydrate absorption amount by using the current carbohydrate-to-insulin ratio and the insulin sensitivity factor at the time of the recorded meal entry. \\[ AC[t] = ICE[t] \\times \\frac{CIR[t]}{ISF[t]} \\] where AC is the number of carbohydrates absorbed (g/5min), ICE is the insulin counteraction effect, CIR is the carbohydrate-to-insulin ratio (g/U), and ISF is the insulin sensitivity factor (mg/dL/U) at time t . If multiple meal entries are active (i.e., still absorbing), the estimated absorption is split between each carbohydrate entry in proportion to each carbohydrate entry\u2019s minimum absorption rate. For example, if 72g carbohydrates with an expected absorption time of 4 hours was consumed at 12 pm, and another 72g of carbohydrates with an expected absorption time of 2 hours was consumed at 3 pm, then the minimum absorption rate (see MAR equation above) would be 12 g/hr and 6 g/hr respectively, or 1 g/5min and 0.5 g/5min. \\[ MAR[t = 12pm] = \\frac{ 72g }{ 1.5 \\times 4hr } = 12 \\frac{ g }{ hr } = 1 \\frac{ g }{ 5min } \\] \\[ MAR[t = 3pm] = \\frac{ 72g }{ 1.5 \\times 2hr } = 6 \\frac{ g }{ hr } = 0.5 \\frac{ g }{ 5min } \\] Examining just the simple linear carbohydrate effect of these two meals: If we further expand this example, by assuming the following at 4pm: that there are still carbohydrates left to be absorbed from both meals, that the estimated insulin counteraction effect ( ICE ) is \\(+15 \\frac{mg/dL}{5min}\\) , and the user\u2019s CIR is \\(10 \\frac{g}{U}\\) and the ISF is \\(50 \\frac{mg/dL}{U}\\) , then the estimated amount of carbohydrates absorbed at 4pm would be 3g: \\[ AC[t = 4pm] = 15 \\frac{mg/dL}{5min} \\times \\frac{10 \\frac{g}{U}}{50 \\frac{mg/dL}{U}} = 3 \\frac{g}{5min} \\] Those 3g of carbohydrates would then be split amongst the meals proportional to their minimum absorption rates: \\[ \\text{Proportion to Meal1} = \\frac{MAR_{meal1}}{MAR_{meal1} + MAR_{meal2}} = \\frac{12}{12+6}=\\frac{2}{3} = 66.6\\% \\] \\[ \\text{Proportion to Meal2} = \\frac{MAR_{meal2}}{MAR_{meal1} + MAR_{meal2}} = \\frac{6}{12+6}=\\frac{1}{3} = 33.3\\% \\] resulting in 2g of absorption being attributed to Meal 1 and 1g attributed to Meal 2.","title":"Dynamic Carbohydrate Absorption"},{"location":"operation/algorithm/prediction/#minimum-carbohydrate-absorption-rate","text":"If the estimated carbohydrate absorption of a meal entry is less than what would have been absorbed using the minimum absorption rate, then the minimum absorption rate is used instead. This is to ensure that meal entries expire in a reasonable amount of time.","title":"Minimum Carbohydrate Absorption Rate"},{"location":"operation/algorithm/prediction/#modeling-remaining-active-carbohydrates","text":"After the estimated absorbed carbohydrates have been subtracted from each meal entry, the remaining carbohydrates (for each entry) are then forecasted to decay or absorb using the minimum absorption rate. Loop uses this forecast to estimate the effect (active carbohydrates, or carbohydrate activity) of the remaining carbohydrates. The carbohydrate effect can be expressed mathematically using the terms described above: \\[ \\Delta BG_{C}[t] = MAR[t] \\times \\frac{ISF[t]}{CIR[t]} \\]","title":"Modeling Remaining Active Carbohydrates"},{"location":"operation/algorithm/prediction/#retrospective-correction-effect","text":"The retrospective correction effect allows the Loop algorithm to account for effects that are not modeled with the insulin and carbohydrate effects, by comparing historical predictions to the actual blood glucose. In addition to the modeled effects of insulin and carbohydrates, there are many other factors that affect blood glucose (e.g., exercise, stress, hormones, etc.). Many of these effects are active for a period of time. By observing its own forecast error, Loop can estimate the magnitude of these effects and, by assuming that they will continue for some short period of time, incorporate them into the forecast to improve forecast accuracy. To do this, Loop calculates a retrospective forecast with a start time of 30 minutes in the past, ending at the current time. Loop compares the retrospective forecast to the actual observed change in blood glucose, and the difference is summed into a blood glucose velocity or rate of difference: \\[ BG_{vel}=\\frac{1}{6} \\sum_{t=-30}^{0} RF[t] - BG[t] \\] where BG vel is a velocity term (mg/dL per 5min) that represents the average blood glucose difference between the retrospective forecast (RF) and the actual blood glucose (BG) over the last 30 minutes. This term is applied to the current forecast from the insulin and carb effects with a linear decay over the next hour. For example, the first forecast point (t=5) is approximately 100% of this velocity, the forecast point one-half hour from now is adjusted by 50% of the velocity, and points from one hour or more in the future are not affected by this term. The retrospective correction effect can be expressed mathematically: \\[ \\Delta BG_{RC}[t] = BG_{vel} \\times \\left(1-\\frac{t-5}{55}\\right) \\] where BG is the predicted change in blood glucose with the units (mg/dL/5min) at time t over the time range of 5 to 60 minutes, and the other term gives the percentage of BG vel that is applied to this effect. The retrospective correction effect can be illustrated with an example: if the BG vel over the past 30 minutes was -10 mg/dL per 5min, then the retrospective correction effect over the next 60 minutes would be as follows: Minutes relative to now ( t=0 ) Percent of \\(BG_{vel}\\) Applied to RC Effect \\(\\Delta BG_{RC}[t]\\) 5 100% -10 10 91% -9.1 15 82% -8.2 20 73% -7.3 25 64% -6.4 30 55% -5.5 35 45% -4.5 40 36% -3.6 45 27% -2.7 50 18% -1.8 55 9% -0.9 60 0% 0 Here\u2019s an example below that shows the retrospective correction effect when the BG vel over the past 30 minutes was -10mg/dL/5min.","title":"Retrospective Correction Effect"},{"location":"operation/algorithm/prediction/#blood-glucose-momentum-effect","text":"The blood glucose momentum effect incorporates a prediction component based on the assumption that recent blood glucose trends tend to persist for a short period of time. In other words, the best predictor of the future is the recent past. The blood glucose momentum portion of the algorithm gives weight or importance to recent blood glucose to improve the near-future forecast. Loop calculates the slope of the last 3 continuous CGM readings (i.e., the last 15 minutes) using linear regression. Using multiple points helps filter out noise in the CGM data while still responding fast to changing situations. That momentum slope (Mslope) is the approximate or average rate of change over the last 15 minutes, though it is normalized to 5 minutes so that the units are (mg/dL/5min). The momentum slope is then blended into the next 20 minutes of predicted blood glucose from the other effects (i.e., insulin, carbohydrates, and retrospective correction effects). This, in essence, makes the next 20 minutes of blood glucose prediction more sensitive to recent blood glucose trends. The blending of the recent trend slope into the next 20 minutes is weighted so that the first prediction point (5 minutes into the future) is highly influenced by the slope, and the influence of the slope gradually decays over the 20 minute time period. The momentum effect can be expressed mathematically as: \\[ \\Delta BG_{M}[t] = M_{slope} \\times \\left( 1 - \\frac{t-5}{15} \\right) \\] NOTE: The term \\(\\left(\\frac{t-5}{15}\\right)\\) is also applied to the combined insulin, carbohydrates, and retrospective correction effects to get the delta blood glucose prediction. The momentum effect can be illustrated with an example: if the last 3 blood glucose readings were 100, 103, and 106 mg/dL, then the slope would be 3 mg/dL per 5 minutes (0.6 mg/dL per minute). The amount of that recent trend or slope applied to the next 20 minutes of predictions (i.e., the next 4 predictions from the other effects) is roughly 100% (3 mg/dL per 5 min) at 5 minutes, 66% (2 mg/dL per 5 min) at 10 minutes, 33% (1 mg/dL per 5 min) at 15 minutes, and 0% (0 mg/dL per 5 min) at 20 minutes. Also, if the combined effect from the insulin, carbohydrates, and retrospective correction is assumed to be a constant 6 mg/dL/5min over the next 20 minutes, then the expected overall effect and the predicted blood glucose can be calculated as follows. Minutes relative to now ( t=0 ) Percent of Slope Applied to Momentum Effect Momentum Effect (3mg/dL/5min) Percent of Other Effects Applied Overall Effect Other Effects (Insulin, Carbohydrate, and Retrospective Correction) Overall Effect (mg/dL/5min) Predicted BG (mg/dL) 5 100% 3 0 6 3 109 10 66.6% 2 33.3%< 6 4 113 15 33.3% 1 66.6% 6 5 118 20 0% 0 100% 6 6 124 This example is illustrated in the figure below. It is also worth noting that Loop will not calculate blood glucose momentum in instances where CGM data is not continuous (i.e., must have at least three continuous CGM readings to draw the best-fit straight line trend). It also will not calculate blood glucose momentum when the last three CGM readings contain any calibration points, as those may not be representative of true blood glucose momentum trends.","title":"Blood Glucose Momentum Effect"},{"location":"operation/algorithm/prediction/#predicting-glucose","text":"As described in the momentum effect section, the momentum effect is blended with the insulin, carbohydrate, and retrospective correction effects to predict the change in blood glucose: \\[ \\Delta BG[t] = \\Delta BG_{M}[t] + \\left(\\Delta BG_{I}[t] + \\Delta BG_{C}[t]+ \\Delta BG_{RC}[t] \\right) \\times min\\left(\\frac{t-5}{15}, 1\\right) \\] Lastly, the forecast or predicted blood glucose BG at time t is the current blood glucose BG plus the sum of all blood glucose effects BG over the time interval [t5, t]: \\[ \\widehat{BG}[t] = BG[t_{o}] + \\sum_{i=5}^{t} \\Delta BG[t_{o+i}] \\] Each individual effect along with the combined effects are illustrated in the figure below. As shown, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is having a dampening effect on the prediction, indicating that the recent rise in blood glucose was not as great as had been previously predicted in the recent past.","title":"Predicting Glucose"},{"location":"operation/algorithm/prediction/#algorithm-section-menu","text":"Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Algorithm Section Menu"},{"location":"operation/algorithm/temp-basal/","text":"Temp Basal Adjustments \u00b6 The Loop algorithm takes one of four actions depending upon the eventual blood glucose, predicted glucose, and suspend threshold. Note that all temporary basal rate commands are issued for 30 minutes, however they may be updated (re-issued) every 5 minutes. Said another way, Loop may enact a new temporary basal rate every 5 minutes. But, if communication with the pump is lost, the last issued temporary basal rate will last for at most 30 minutes before the pump reverts to the user\u2019s scheduled basal rates. Note: If a user is operating Loop in open-loop mode, the Loop will only recommend basal dosing actions and will not automatically enact those recommendations. Four Possible Actions \u00b6 Loop implements one of four possible temporary basal actions: decrease , increase , suspend , or resume a scheduled basal rate. Automatic Bolus If you are using an Automatic-Bolus Dosing Strategy in closed Loop mode and Loop predicts you need an increase in insulin; this increase is provided as a percentage of the recommended bolus instead of an increased temporary basal. The default percentage is 40%. Decrease Basal Rate \u00b6 If the eventual blood glucose is less than the correction range and all of the predicted glucose values are above the suspend threshold, then Loop will issue a temporary basal rate that is lower than the current scheduled basal rate to bring the eventual blood glucose up to the correction target. Increase Basal Rate \u00b6 If the eventual blood glucose is greater than the correction range and all of the predicted glucose values are both above the suspend threshold and equal to or above the correction range, then Loop will issue a temporary basal rate that is higher than the current basal rate to bring the eventual blood glucose down to the correction target. Suspend Basal Rate \u00b6 If the minimum predicted blood glucose goes below the suspend threshold, then Loop will issue a temporary basal rate of zero units per hour, regardless of the eventual blood glucose. Resume Basal Rate \u00b6 There are three situations where the Loop algorithm will resume the current scheduled basal rate. If the eventual blood glucose is within the correction range, and all of the predicted glucose values are above the suspend threshold, then Loop will resume the current scheduled basal rate. If the eventual blood glucose is above the correction range, and the predicted glucose values have a temporary excursion below the correction range but still above the suspend threshold, then Loop will resume the current scheduled basal rate. If the Loop algorithm does not have ALL of the data it needs to make a prediction, it will let the remaining temporary basal rate run its duration (maximum of 30 minutes), and then the basal rate will default back to the current scheduled basal rate, thus returning to the same therapy pattern that they would receive using a traditional insulin pump. Determining the Temporary Basal Rate \u00b6 To determine the corrective temporary basal rate to implement, Loop calculates a \u201cdose\u201d in the same way doses are calculated in both open-loop and traditional insulin pump therapy. It's also the same math many people on multiple-daily injection therapy use. The benefit of Loop (and all other close-loop algorithms) is that it does this math every 5 minutes, and is far less prone to error than humans doing the math. Loop also does its math based on predicting into the future, which traditional pumps and humans, do not always have the time or inclination to do. The amount of insulin needed, or dose, is calculated using the desired reduction in blood glucose and the user\u2019s ISF . For the Loop algorithm, the desired reduction in blood glucose is the delta between the eventual blood glucose and the correction target: \\[ \\mathit{dose} = \\frac{\\mathit{BG_{eventual}} - \\mathit{BG_{target}}}{\\mathit{ISF}} \\] Loop Dose Calculation A major difference between traditional pump therapy and how the Loop calculates dose is that in pump therapy the current blood glucose is used to estimate the dose, whereas in the Loop algorithm the eventual and minimum blood glucose predictions are also used in determining dosing decisions. Loop then converts the dose into a basal rate using the Loop\u2019s temporary basal rate duration of 30 minutes: \\[ \\mathit{BR_correction} = \\frac{\\mathit{dose}}{30 \\mathrm{min}} = \\frac{\\mathit{dose}}{\\frac{1}{2} \\mathrm{hr}} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} \\] where \\(\\mathit{BR_correction}\\) is the basal rate ( \\(\\mathrm{\\frac{U}{hr}}\\) ), which is the amount of insulin needed over the next 30 minutes to bring the eventual blood glucose to the correction target. The basal rate, however, is the amount of basal rate needed beyond the user\u2019s scheduled basal rate. As such, the required basal rate can be determined by: \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} \\] Finally, Loop compares the \\(BR_{required}\\) with the user-specified maximum temporary basal rate \\(BR_{max}\\) setting to determine the temporary basal to issue: \\[ \\mathit{BR_temp} = \\max(\\min( \\mathit{BR_required}, \\mathit{BR_max} ), 0) \\] After running the temporary basal calculation described above, Loop checks whether there is already an appropriate basal running with at least 10 minutes remaining. If so, Loop will not reissue the temporary basal. However, if the recommended temporary basal differs from the currently running temporary basal \u2014 or the current scheduled basal if no temporary is running \u2014 then Loop will replace the current basal rate with the recommended temporary basal rate. As mentioned at the beginning of this section, the process of determining whether a temporary basal should be issued is repeated every 5 minutes. Temporary Basal Rate Calculation Example \u00b6 To illustrate how the Loop calculates the temporary basal rate to issue, consider the calculation for the following scenario: \\(\\mathit{BG_eventual} = 200 \\mathrm{\\frac{mg}{dL}}\\) \\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\) \\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\) \\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\) \\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\) (set by user in Loop) First, calculate the dose: \\[ dose = \\frac{\\mathit{BG_eventual} - \\mathit{BG_target}}{\\mathit{ISF}} = \\frac{200 \\mathrm{\\frac{mg}{dL}} - 100 \\mathrm{\\frac{mg}{dL}}}{50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}} = 2 \\mathrm{U} \\] Then, convert the dose into a basal rate to be issued for the next 30 minutes: \\[ \\mathit{BR_correction} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} = \\frac{2 \\times 2 \\mathrm{U}}{\\mathrm{hr}} = 4 \\mathrm{\\frac{U}{hr}} \\] Next, calculate the required basal rate: \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} = 1 \\mathrm{\\frac{U}{hr}} + 4 \\mathrm{\\frac{U}{hr}} = 5 \\mathrm{\\frac{U}{hr}} \\] Lastly, compare the required basal rate to the maximum temporary basal rate, and find that Loop will enact a temporary basal rate of \\(5 \\mathrm{\\frac{U}{hr}}\\) for 30 minutes since this temporary basal rate is below the maximum temporary basal rate of \\(6 \\mathrm{\\frac{U}{hr}}\\) , which was set by the user in Loop app settings. \\[ \\mathit{BR_{temp}} = \\max(\\min( \\mathit{BR_{required}}, \\mathit{BR_max}), 0) = \\max(\\min( 5 \\mathrm{\\frac{U}{hr}}, 6 \\mathrm{\\frac{U}{hr}} ), 0) = 5 \\mathrm{\\frac{U}{hr}}\\] More Examples \u00b6 Consider the following values as fixed values for our calculation: \\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\) \\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\) \\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\) \\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\) The table below shows the \\(\\mathit{BR_temp}\\) for different \\(\\mathit{BG_eventual}\\) . \\(\\mathit{BR_temp}\\) should never turn negative and should never be greater than \\(\\mathit{BR_max}\\) . \\(\\mathit{BG_eventual}\\) \\(\\mathrm{(\\frac{mg}{dL}})\\) \\(\\mathit{dose}\\) \\(\\mathrm{(U)}\\) \\(\\mathit{BR_correction}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_required}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_temp}\\) \\(\\mathrm{(\\frac{U}{hr})}\\) 300 4.0 8.0 9.0 6.0 200 2.0 4.0 5.0 5.0 100 0.0 0.0 1.0 1.0 90 -0.2 -0.4 0.6 0.6 75 -0.5 -1.0 0.0 0.0 50 -1.0 -2.0 -1.0 0.0 Algorithm Section Menu \u00b6 Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Temp Basal Adjustments"},{"location":"operation/algorithm/temp-basal/#temp-basal-adjustments","text":"The Loop algorithm takes one of four actions depending upon the eventual blood glucose, predicted glucose, and suspend threshold. Note that all temporary basal rate commands are issued for 30 minutes, however they may be updated (re-issued) every 5 minutes. Said another way, Loop may enact a new temporary basal rate every 5 minutes. But, if communication with the pump is lost, the last issued temporary basal rate will last for at most 30 minutes before the pump reverts to the user\u2019s scheduled basal rates. Note: If a user is operating Loop in open-loop mode, the Loop will only recommend basal dosing actions and will not automatically enact those recommendations.","title":"Temp Basal Adjustments"},{"location":"operation/algorithm/temp-basal/#four-possible-actions","text":"Loop implements one of four possible temporary basal actions: decrease , increase , suspend , or resume a scheduled basal rate. Automatic Bolus If you are using an Automatic-Bolus Dosing Strategy in closed Loop mode and Loop predicts you need an increase in insulin; this increase is provided as a percentage of the recommended bolus instead of an increased temporary basal. The default percentage is 40%.","title":"Four Possible Actions"},{"location":"operation/algorithm/temp-basal/#decrease-basal-rate","text":"If the eventual blood glucose is less than the correction range and all of the predicted glucose values are above the suspend threshold, then Loop will issue a temporary basal rate that is lower than the current scheduled basal rate to bring the eventual blood glucose up to the correction target.","title":"Decrease Basal Rate"},{"location":"operation/algorithm/temp-basal/#increase-basal-rate","text":"If the eventual blood glucose is greater than the correction range and all of the predicted glucose values are both above the suspend threshold and equal to or above the correction range, then Loop will issue a temporary basal rate that is higher than the current basal rate to bring the eventual blood glucose down to the correction target.","title":"Increase Basal Rate"},{"location":"operation/algorithm/temp-basal/#suspend-basal-rate","text":"If the minimum predicted blood glucose goes below the suspend threshold, then Loop will issue a temporary basal rate of zero units per hour, regardless of the eventual blood glucose.","title":"Suspend Basal Rate"},{"location":"operation/algorithm/temp-basal/#resume-basal-rate","text":"There are three situations where the Loop algorithm will resume the current scheduled basal rate. If the eventual blood glucose is within the correction range, and all of the predicted glucose values are above the suspend threshold, then Loop will resume the current scheduled basal rate. If the eventual blood glucose is above the correction range, and the predicted glucose values have a temporary excursion below the correction range but still above the suspend threshold, then Loop will resume the current scheduled basal rate. If the Loop algorithm does not have ALL of the data it needs to make a prediction, it will let the remaining temporary basal rate run its duration (maximum of 30 minutes), and then the basal rate will default back to the current scheduled basal rate, thus returning to the same therapy pattern that they would receive using a traditional insulin pump.","title":"Resume Basal Rate"},{"location":"operation/algorithm/temp-basal/#determining-the-temporary-basal-rate","text":"To determine the corrective temporary basal rate to implement, Loop calculates a \u201cdose\u201d in the same way doses are calculated in both open-loop and traditional insulin pump therapy. It's also the same math many people on multiple-daily injection therapy use. The benefit of Loop (and all other close-loop algorithms) is that it does this math every 5 minutes, and is far less prone to error than humans doing the math. Loop also does its math based on predicting into the future, which traditional pumps and humans, do not always have the time or inclination to do. The amount of insulin needed, or dose, is calculated using the desired reduction in blood glucose and the user\u2019s ISF . For the Loop algorithm, the desired reduction in blood glucose is the delta between the eventual blood glucose and the correction target: \\[ \\mathit{dose} = \\frac{\\mathit{BG_{eventual}} - \\mathit{BG_{target}}}{\\mathit{ISF}} \\] Loop Dose Calculation A major difference between traditional pump therapy and how the Loop calculates dose is that in pump therapy the current blood glucose is used to estimate the dose, whereas in the Loop algorithm the eventual and minimum blood glucose predictions are also used in determining dosing decisions. Loop then converts the dose into a basal rate using the Loop\u2019s temporary basal rate duration of 30 minutes: \\[ \\mathit{BR_correction} = \\frac{\\mathit{dose}}{30 \\mathrm{min}} = \\frac{\\mathit{dose}}{\\frac{1}{2} \\mathrm{hr}} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} \\] where \\(\\mathit{BR_correction}\\) is the basal rate ( \\(\\mathrm{\\frac{U}{hr}}\\) ), which is the amount of insulin needed over the next 30 minutes to bring the eventual blood glucose to the correction target. The basal rate, however, is the amount of basal rate needed beyond the user\u2019s scheduled basal rate. As such, the required basal rate can be determined by: \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} \\] Finally, Loop compares the \\(BR_{required}\\) with the user-specified maximum temporary basal rate \\(BR_{max}\\) setting to determine the temporary basal to issue: \\[ \\mathit{BR_temp} = \\max(\\min( \\mathit{BR_required}, \\mathit{BR_max} ), 0) \\] After running the temporary basal calculation described above, Loop checks whether there is already an appropriate basal running with at least 10 minutes remaining. If so, Loop will not reissue the temporary basal. However, if the recommended temporary basal differs from the currently running temporary basal \u2014 or the current scheduled basal if no temporary is running \u2014 then Loop will replace the current basal rate with the recommended temporary basal rate. As mentioned at the beginning of this section, the process of determining whether a temporary basal should be issued is repeated every 5 minutes.","title":"Determining the Temporary Basal Rate"},{"location":"operation/algorithm/temp-basal/#temporary-basal-rate-calculation-example","text":"To illustrate how the Loop calculates the temporary basal rate to issue, consider the calculation for the following scenario: \\(\\mathit{BG_eventual} = 200 \\mathrm{\\frac{mg}{dL}}\\) \\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\) \\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\) \\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\) \\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\) (set by user in Loop) First, calculate the dose: \\[ dose = \\frac{\\mathit{BG_eventual} - \\mathit{BG_target}}{\\mathit{ISF}} = \\frac{200 \\mathrm{\\frac{mg}{dL}} - 100 \\mathrm{\\frac{mg}{dL}}}{50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}} = 2 \\mathrm{U} \\] Then, convert the dose into a basal rate to be issued for the next 30 minutes: \\[ \\mathit{BR_correction} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} = \\frac{2 \\times 2 \\mathrm{U}}{\\mathrm{hr}} = 4 \\mathrm{\\frac{U}{hr}} \\] Next, calculate the required basal rate: \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} = 1 \\mathrm{\\frac{U}{hr}} + 4 \\mathrm{\\frac{U}{hr}} = 5 \\mathrm{\\frac{U}{hr}} \\] Lastly, compare the required basal rate to the maximum temporary basal rate, and find that Loop will enact a temporary basal rate of \\(5 \\mathrm{\\frac{U}{hr}}\\) for 30 minutes since this temporary basal rate is below the maximum temporary basal rate of \\(6 \\mathrm{\\frac{U}{hr}}\\) , which was set by the user in Loop app settings. \\[ \\mathit{BR_{temp}} = \\max(\\min( \\mathit{BR_{required}}, \\mathit{BR_max}), 0) = \\max(\\min( 5 \\mathrm{\\frac{U}{hr}}, 6 \\mathrm{\\frac{U}{hr}} ), 0) = 5 \\mathrm{\\frac{U}{hr}}\\]","title":"Temporary Basal Rate Calculation Example"},{"location":"operation/algorithm/temp-basal/#more-examples","text":"Consider the following values as fixed values for our calculation: \\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\) \\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\) \\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\) \\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\) The table below shows the \\(\\mathit{BR_temp}\\) for different \\(\\mathit{BG_eventual}\\) . \\(\\mathit{BR_temp}\\) should never turn negative and should never be greater than \\(\\mathit{BR_max}\\) . \\(\\mathit{BG_eventual}\\) \\(\\mathrm{(\\frac{mg}{dL}})\\) \\(\\mathit{dose}\\) \\(\\mathrm{(U)}\\) \\(\\mathit{BR_correction}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_required}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_temp}\\) \\(\\mathrm{(\\frac{U}{hr})}\\) 300 4.0 8.0 9.0 6.0 200 2.0 4.0 5.0 5.0 100 0.0 0.0 1.0 1.0 90 -0.2 -0.4 0.6 0.6 75 -0.5 -1.0 0.0 0.0 50 -1.0 -2.0 -1.0 0.0","title":"More Examples"},{"location":"operation/algorithm/temp-basal/#algorithm-section-menu","text":"Algorithm Overview Bolus Recommendations Blood Glucose Prediction Temp Basal Adjustments","title":"Algorithm Section Menu"},{"location":"operation/features/battery/","text":"Medtronic Pump Battery \u00b6 One common confusion point for new Loop users is how to interpret their pump's battery levels and whether they need to change their pump batteries based on which pieces of information. Discharge Curves \u00b6 There are generally two different types of AAA batteries that we use in these Medtronic pumps; alkaline or lithium. To understand pump battery levels, you first need to know a little about battery discharge curves . It's not a hard concept...basically how a battery dies over time as it is used or sits in a drawer. More technically said, a battery discharge curve is the measure of volts that a battery puts out over time. Batteries start at a higher voltage output and slowly that voltage output degrades over time (or use) until the battery no longer provides enough \"ummph\" to keep the electronic gadget going. BUT, alkaline batteries and lithium batteries have different discharge curves due to the chemistry inside them, and the curves can be slightly different depending on the environment (temperature) and battery manufacturer. Alkaline batteries have a relatively steady voltage drop over time, as shown below. Notice the shape of the curve has a significant amount of time in the 1.3 to 1.2 volts range, and a relatively smooth decline to about 1.2 volts. Lithium batteries have a much steadier voltage output over time, as shown below. Notice how the shape of the curve is relatively flat for a large portion of the battery life before suddenly off around 1.3 volts. What does the above information mean in terms of Looping? A lithium battery at 1.3v is going to have a much quicker time to death than an alkaline battery sitting at 1.3v. You might only get a couple of hours of looping left when a lithium battery is at 1.3v, but an alkaline battery at 1.3v might go for several more days. So when we talk about setting alarm levels in either system, your battery type is an important consideration. Medtronic Pump Battery Level Indicator \u00b6 If you read Medtronic's literature, it will tell you to use Energizer alkaline batteries in their pumps. Why would that be? Hint: the answer doesn't mean that Duracell batteries are inherently worse than Energizer or that lithium batteries won't work in Medtronic pumps. The answer is all about the accuracy of their little pump battery level indicator on their pump's screen. Medtronic calibrated their pump battery level indicator to: Energizer alkaline batteries Normal (non-Loop) uses Temperatures between 37\u00b0F (3\u00b0C) to 104\u00b0F (40\u00b0C). In other words, Medtronic ran experiments to see exactly how long an Energizer alkaline battery will last in normal pump use and made their own discharge curve. They programmed their pump battery level indicator to change from 4 bars to 3 bars to 2 bars to 1 bar based on that particular discharge curve. However, Loop users are slightly more demanding on the pump's battery/voltage than simply delivering insulin. We are also asking for the pump to perform radio communications, in addition to delivering insulin. Those radio communications needs a slightly higher voltage than the typical \"normal\" pump use. So while a non-Looper might be ok running their pump until a voltage of about 1.12 for insulin delivery, radio communications might stop at a voltage output of about 1.17. If you experiment with your Looping pump, you'll find Loop will turn red from failed pump comms before the pump actually fails at insulin delivery. This difference between \"failure\" voltages needs to be considered when determining how much useful battery life is left for a pump battery. In summary, that little pump battery indicator on the Medtronic pump screen is ONLY useful if you are: not using the pump for Looping, using Energizer alkaline batteries, and in the temperature environment similar to their testing. Loop users should not rely on their Medtronic pump screen's pump battery indicator, and instead use the Loop's pump battery level indicator. Loop's Pump Battery Level Indicator \u00b6 Keeping the information about battery discharge curves in mind, Loop developers tested various battery brands and types to develop discharge curves for Loop users. These discharge curves form the basis of the pump battery level indicator found in the top right of the Loop's main display screen and the pump battery notifications provided by the Loop app. The pump battery level indicator will also report in %. For x23 and x54 model users, the Loop's pump battery level will move in 25% increments. For x15 and x22 model users, the Loop's pump battery level will move in discrete % increments. Based on the battery type selected and the pump model being used, the Loop's pump battery level notifications are designed to give the user about 8 hours of notice before pump communications are likely to fail. The Loop user should have some additional time after pump comms fail before actual insulin delivery would stop. Nightscout Pump Battery Display \u00b6 The Nightscout information regarding pump battery levels will depend on pump model being used. If you use an x23 or x54 pump and MySentry, the pump levels are reported as a percent to NS, because that's how MySentry reports the data to Loop. The packets use 100%, 75%, 50%, and 25% increments, and the Loop's main display matches the NS pump display. If you use an x22 or x15 pump, the pump levels are reported as voltage readings to NS because Loop has to specifically request the voltage reading from the pump. The Loop's main display will show pump battery level as discrete %, not the individual voltage measurement. No matter what pump you are using, you can always get the current pump battery's voltage by using the RileyLink 's Read Pump Status command. The extra communications effort for non-MySentry model pumps will mean slightly shorter battery life vs. MySentry model pumps. Nightscout Pump Battery Alarms \u00b6 The Nightscout alarms are based on the Heroku settings that you have input specifically. If you don't specifically set them, Nightscout will use the default settings for pump battery alerts as shown below: Nightscout pump battery levels, if you leave things at default installation, will not trigger alarms. If however you add a setting of PUMP_ENABLE_ALERTS to true , you will receive pump battery notifications according to the levels shown in the parenthesis above. For example, your x23 pump is reporting its levels in percent, therefore you'd receive a yellow warning alarm at 30% and an urgent red alarm at 20%. Your x22 pump however is reporting its levels at voltage readings, therefore you'd receive a warning yellow alarm at 1.35v and an urgent red alarm at 1.30v. Are the default NS alarm levels going to work for you? The answer depends on what type of battery level you are using, what model pump you are using, and how much advance notification you want to receive before needing to change a pump battery. There is a bit of personal preference and experimentation to finding what works for you. For x22 or x15 pump users, the NS alert settings that may need to be adjusted are the ones based on voltage. Generally speaking, for a x22 or x15 pump using alkaline batteries, the default NS alarm levels will be too early to be useful and lead you to change out your battery too frequently. Alkaline batteries can go to low 1.2s or high 1.1s before Looping starts to have communication problems. How much lower than the default voltage 1.35/1.30 alarm levels you want to go will depend on how far in advance you want to be warned about an upcoming battery change. If however, you are using a x22 or x15 pump with lithium batteries, the default 1.35v/1.30v alarm levels may be completely appropriate. Remember how the lithium battery curves at the start of this discussion died off quickly around 1.3v? You won't get hardly any heads-up notice for a lithium battery if you set the alarm below 1.3v. For x23 or x54 pump users, the NS alert settings that may need to be adjusted are the ones based on percentage settings. Alkaline and lithium batteries should have automatically had their percentage-remaining based on the correct battery type in your Loop settings. So, generally speaking the default NS alert levels don't generally need adjusting. However, if you are using lithium batteries, the drop off between 75% to 25% can be quite dramatic and not be easy to anticipate (especially if the drop happens overnight). As an alternative method of tracking pump battery changes, you could use the insulin age (IAGE) plug-in to anticipate your pump battery changes as well. For example, after tracking pump battery life on my 723 using energizer batteries lithium batteries for the last several months, I know that we get about 15 days plus a handful of hours. The amount of hours more beyond 15 days varies depending on how much we've interacted with the pump buttons directly, whether we've looped the full 15-days solid, and if the pump has been in extreme weather (cold weather can sap pump battery life). By tracking the pump battery changes with NS's careportal \"insulin cartridge change\", I can see in advance if we are nearing an overnight on a 15 day battery and decide to change batteries before overnight to prevent any middle-of-night battery issues. Lithium batteries will get a significantly longer life than an alkaline battery. Experiment and track your particular pump model and battery type to understand what NS settings will work best for you. Do not rely on the pump's on-screen pump battery indicator, especially when using lithium batteries.","title":"MDT Pump Battery"},{"location":"operation/features/battery/#medtronic-pump-battery","text":"One common confusion point for new Loop users is how to interpret their pump's battery levels and whether they need to change their pump batteries based on which pieces of information.","title":"Medtronic Pump Battery"},{"location":"operation/features/battery/#discharge-curves","text":"There are generally two different types of AAA batteries that we use in these Medtronic pumps; alkaline or lithium. To understand pump battery levels, you first need to know a little about battery discharge curves . It's not a hard concept...basically how a battery dies over time as it is used or sits in a drawer. More technically said, a battery discharge curve is the measure of volts that a battery puts out over time. Batteries start at a higher voltage output and slowly that voltage output degrades over time (or use) until the battery no longer provides enough \"ummph\" to keep the electronic gadget going. BUT, alkaline batteries and lithium batteries have different discharge curves due to the chemistry inside them, and the curves can be slightly different depending on the environment (temperature) and battery manufacturer. Alkaline batteries have a relatively steady voltage drop over time, as shown below. Notice the shape of the curve has a significant amount of time in the 1.3 to 1.2 volts range, and a relatively smooth decline to about 1.2 volts. Lithium batteries have a much steadier voltage output over time, as shown below. Notice how the shape of the curve is relatively flat for a large portion of the battery life before suddenly off around 1.3 volts. What does the above information mean in terms of Looping? A lithium battery at 1.3v is going to have a much quicker time to death than an alkaline battery sitting at 1.3v. You might only get a couple of hours of looping left when a lithium battery is at 1.3v, but an alkaline battery at 1.3v might go for several more days. So when we talk about setting alarm levels in either system, your battery type is an important consideration.","title":"Discharge Curves"},{"location":"operation/features/battery/#medtronic-pump-battery-level-indicator","text":"If you read Medtronic's literature, it will tell you to use Energizer alkaline batteries in their pumps. Why would that be? Hint: the answer doesn't mean that Duracell batteries are inherently worse than Energizer or that lithium batteries won't work in Medtronic pumps. The answer is all about the accuracy of their little pump battery level indicator on their pump's screen. Medtronic calibrated their pump battery level indicator to: Energizer alkaline batteries Normal (non-Loop) uses Temperatures between 37\u00b0F (3\u00b0C) to 104\u00b0F (40\u00b0C). In other words, Medtronic ran experiments to see exactly how long an Energizer alkaline battery will last in normal pump use and made their own discharge curve. They programmed their pump battery level indicator to change from 4 bars to 3 bars to 2 bars to 1 bar based on that particular discharge curve. However, Loop users are slightly more demanding on the pump's battery/voltage than simply delivering insulin. We are also asking for the pump to perform radio communications, in addition to delivering insulin. Those radio communications needs a slightly higher voltage than the typical \"normal\" pump use. So while a non-Looper might be ok running their pump until a voltage of about 1.12 for insulin delivery, radio communications might stop at a voltage output of about 1.17. If you experiment with your Looping pump, you'll find Loop will turn red from failed pump comms before the pump actually fails at insulin delivery. This difference between \"failure\" voltages needs to be considered when determining how much useful battery life is left for a pump battery. In summary, that little pump battery indicator on the Medtronic pump screen is ONLY useful if you are: not using the pump for Looping, using Energizer alkaline batteries, and in the temperature environment similar to their testing. Loop users should not rely on their Medtronic pump screen's pump battery indicator, and instead use the Loop's pump battery level indicator.","title":"Medtronic Pump Battery Level Indicator"},{"location":"operation/features/battery/#loops-pump-battery-level-indicator","text":"Keeping the information about battery discharge curves in mind, Loop developers tested various battery brands and types to develop discharge curves for Loop users. These discharge curves form the basis of the pump battery level indicator found in the top right of the Loop's main display screen and the pump battery notifications provided by the Loop app. The pump battery level indicator will also report in %. For x23 and x54 model users, the Loop's pump battery level will move in 25% increments. For x15 and x22 model users, the Loop's pump battery level will move in discrete % increments. Based on the battery type selected and the pump model being used, the Loop's pump battery level notifications are designed to give the user about 8 hours of notice before pump communications are likely to fail. The Loop user should have some additional time after pump comms fail before actual insulin delivery would stop.","title":"Loop's Pump Battery Level Indicator"},{"location":"operation/features/battery/#nightscout-pump-battery-display","text":"The Nightscout information regarding pump battery levels will depend on pump model being used. If you use an x23 or x54 pump and MySentry, the pump levels are reported as a percent to NS, because that's how MySentry reports the data to Loop. The packets use 100%, 75%, 50%, and 25% increments, and the Loop's main display matches the NS pump display. If you use an x22 or x15 pump, the pump levels are reported as voltage readings to NS because Loop has to specifically request the voltage reading from the pump. The Loop's main display will show pump battery level as discrete %, not the individual voltage measurement. No matter what pump you are using, you can always get the current pump battery's voltage by using the RileyLink 's Read Pump Status command. The extra communications effort for non-MySentry model pumps will mean slightly shorter battery life vs. MySentry model pumps.","title":"Nightscout Pump Battery Display"},{"location":"operation/features/battery/#nightscout-pump-battery-alarms","text":"The Nightscout alarms are based on the Heroku settings that you have input specifically. If you don't specifically set them, Nightscout will use the default settings for pump battery alerts as shown below: Nightscout pump battery levels, if you leave things at default installation, will not trigger alarms. If however you add a setting of PUMP_ENABLE_ALERTS to true , you will receive pump battery notifications according to the levels shown in the parenthesis above. For example, your x23 pump is reporting its levels in percent, therefore you'd receive a yellow warning alarm at 30% and an urgent red alarm at 20%. Your x22 pump however is reporting its levels at voltage readings, therefore you'd receive a warning yellow alarm at 1.35v and an urgent red alarm at 1.30v. Are the default NS alarm levels going to work for you? The answer depends on what type of battery level you are using, what model pump you are using, and how much advance notification you want to receive before needing to change a pump battery. There is a bit of personal preference and experimentation to finding what works for you. For x22 or x15 pump users, the NS alert settings that may need to be adjusted are the ones based on voltage. Generally speaking, for a x22 or x15 pump using alkaline batteries, the default NS alarm levels will be too early to be useful and lead you to change out your battery too frequently. Alkaline batteries can go to low 1.2s or high 1.1s before Looping starts to have communication problems. How much lower than the default voltage 1.35/1.30 alarm levels you want to go will depend on how far in advance you want to be warned about an upcoming battery change. If however, you are using a x22 or x15 pump with lithium batteries, the default 1.35v/1.30v alarm levels may be completely appropriate. Remember how the lithium battery curves at the start of this discussion died off quickly around 1.3v? You won't get hardly any heads-up notice for a lithium battery if you set the alarm below 1.3v. For x23 or x54 pump users, the NS alert settings that may need to be adjusted are the ones based on percentage settings. Alkaline and lithium batteries should have automatically had their percentage-remaining based on the correct battery type in your Loop settings. So, generally speaking the default NS alert levels don't generally need adjusting. However, if you are using lithium batteries, the drop off between 75% to 25% can be quite dramatic and not be easy to anticipate (especially if the drop happens overnight). As an alternative method of tracking pump battery changes, you could use the insulin age (IAGE) plug-in to anticipate your pump battery changes as well. For example, after tracking pump battery life on my 723 using energizer batteries lithium batteries for the last several months, I know that we get about 15 days plus a handful of hours. The amount of hours more beyond 15 days varies depending on how much we've interacted with the pump buttons directly, whether we've looped the full 15-days solid, and if the pump has been in extreme weather (cold weather can sap pump battery life). By tracking the pump battery changes with NS's careportal \"insulin cartridge change\", I can see in advance if we are nearing an overnight on a 15 day battery and decide to change batteries before overnight to prevent any middle-of-night battery issues. Lithium batteries will get a significantly longer life than an alkaline battery. Experiment and track your particular pump model and battery type to understand what NS settings will work best for you. Do not rely on the pump's on-screen pump battery indicator, especially when using lithium batteries.","title":"Nightscout Pump Battery Alarms"},{"location":"operation/features/bolus/","text":"Bolus \u00b6 This page was updated with information for Loop-dev which will soon be released as Loop 3. Loop 2 and 3 Differences \u00b6 Most of the information is the same for Loop 2.2.x (or FreeAPS) and Loop 3. Loop 2 and 3 differences: Bolus Row: With Loop 3 The Recommended Bolus is provided AND the default for the Bolus is the recommended value If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry With Loop 2.2.x The Recommended Bolus is provided but the default for the Bolus value is 0 If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row Loop 3 uses the setting name of Glucose Safety Limit , which has the same meaning as Suspend Threshold in Loop 2 Meal Bolus \u00b6 The Meal Bolus screen is entered following a carb entry or edit action, the active button might be Save and Bolus or, if no bolus was recommended, Save without Bolusing . The Save refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen (Loop 3 only). You can review the carb information at the Meal Entry link. Accept Recommendation \u00b6 The graphic below shows the Meal Bolus screen after the user entered carbs and tapped continue: The left graphic shows a case where a bolus is recommended - tapping on the Save and Deliver button saves the carbs and delivers the bolus The right graphic shows a case where no bolus is recommended - tapping on the Save without Bolusing saves the carbs These graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the Recommended Bolus and Bolus rows For both graphics Active Carbs and Active Insulin are displayed above the Glucose prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved) The Bolus Summary is presented below the Glucose prediction graph with three rows: Carb Entry , the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the < Carb Entry button at upper left Recommended Bolus displays what Loop recommends for that proposed Carb Entry Bolus default display is what Loop recommends, but user can edit that value If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged. Modify Bolus \u00b6 This section is a continuation of the information presented in the Accept Recommendation section above. In the graphic below, the user overrides the recommended bolus. The left side shows a modified bolus less than the recommended bolus The right side shows a modified bolus greater than the recommended bolus The Glucose prediction graph updates with changes to the Bolus value, giving the user the opportunity to accept or change their proposed value before tapping Save and Deliver At the next Loop cycle, the app modifies insulin delivery based on the saved information For the example with bolus less than recommended amount: Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the Correction range The recommendation to add insulin when the current glucose is below the Correction Range is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the Safety Threshold For the example with bolus greater than recommended amount: Loop will probably issue an automatic temp basal of 0 U/hr This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post meal spikes Remember - the Glucose prediction is what happens if you Save and Deliver and then no further adjustments are made to insulin delivery by Loop Manual (or Correction) Bolus \u00b6 To start a bolus entry, tap on the double orange triangles (circled below) in the toolbar at the bottom of the Loop status screen. The Loop app will open to the Bolus screen. This looks similar to the Meal Bolus screen without the Carb Entry row. Loop considers the Glucose Safety Limit and Predicted Glucose when determining the recommended bolus. In the graphic below, the current glucose is under the Correction Range . Loop allows you to dip below the correction range but its recommended bolus will be limited by the glucose prediction and the Glucose Safety Limit . Check back once your glucose starts to rise and there will probably be a bigger recommendation. This screen behaves differently for Loop 2.2.x and Loop 3. The graphics and instruction on this page are for Loop 3 version. Click on the Loop 2.2.x link above to view the Loop 2 version. When the Bolus screen is entered directly from the toolbar, the button choices are Enter Bolus if none is recommended, Deliver if a value is on the Bolus row or Cancel using the button on the upper left. The user can also tap on the value on the Bolus row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero. The two graphics below are examples of manual bolus screens. In the first graphic, no bolus was recommended If you tap on the Enter Bolus button at the bottom, it brings up a screen to enable you to type in an amount and then Deliver it. Alternatively, you can tap the 0 amount in the Bolus row and perform the same action as the Enter Bolus button If you do not want to override the recommendation, hit the Cancel button at upper left. In the second graphic, a recommended amount is shown If you tap on Deliver that recommended dose is delivered If you tap on the value on the Bolus row, you can override the amount The amount displayed on the Bolus row is modified to 0 U with the first tap - at that point, you may enter a new value or tap Cancel using the button at upper left of the screen Recommended Bolus \u00b6 Loop updates the glucose prediction every time a new glucose reading is detected, typically every 5 minutes. If Loop predicts your glucose will be above the high end of your Correction Range at the end of the Duration of Insulin Activity ( DIA ) and the predicted glucose is above the Glucose Safety Threshold, it will provide a Recommended Bolus. Loop will not give an alert when a bolus is being recommended, the bolus entry tool must be clicked to check for one. The Loop pill in Nightscout will display when Loop is recommending a bolus. If your Dosing Strategy is set to Temp Basal (default) Loop will provide increased temporary basal rates until it has delivered enough insulin to bring predicted glucose into range The increased temporary basal rates are subject to your Delivery Limits . If your Dosing Strategy is set to Automatic Bolus Loop will recalculate the correction bolus at each successive loop interval, i.e., every 5 minutes Loop will then automatically deliver 40% of that new correction value Each automatic bolus is subject to your Delivery Limits Bolus Status Line \u00b6 Lock Phone During Bolus Once the bolus has started, you should lock your phone to avoid inadvertently cancelling a bolus. When the phone is in portrait mode, a bolus status line will appear below the Heads Up Display when Loop has a bolus in progress. The \"starting bolus\" indicator is shown in the left screenshot above - this is when Loop is communicating with the RileyLink . Once the message has been sent to the RilyLink, even if a response from the pump did not make it back to Loop, the bolused xx of yy with the circle display begins, as shown in the right screenshot above. If you change your mind, just click on the bolus status line while the bolus is in progress to cancel your bolus, as shown in the screenshot below. (Newer versions of Loop explicitly state: Tap to Stop on this line.) The amount bolused shown in this display is based on time. Loop reconciles the bolus amount with messages received from the pump once the bolus completes. If you see a 'pump is suspended notice' in the bolus status line after cancelling your bolus, just tap on it to resume pump operations. Bolus Failure Notifications \u00b6 On occasion, you will receive a notification that a bolus may have failed. If your Dosing Strategy is set to Automatic Bolus , this can happen when an automatic bolus is in progress. In some of these cases, the bolus was delivered. On a Medtronic pump, you should check the pump screen to verify the bolus status before attempting to redeliver a failed bolus. Omnipod users can hear the clicks if the room is quiet enough. If you get an uncertain delivery message, you may still see the \"bolused xx of yy\" display continue for as long as it would have taken to actually deliver the bolus. This display is driven by a timer and logic on the phone. (Loop is not asking the pump repeatedly - \"are you done yet?\"). You may want to interrupt an uncertain bolus if it is large, evaluate status and then resume with a fresh bolus. Loop should update the status the next time it contacts the pump. It can determine whether that bolus actually went through or not and will update the screen. Look at the Event History screen (accessed by tapping the Active Insulin or Insulin Delivery plots). Turn your phone to landscape orientation and you should see either \"Certain\" or \"Uncertain\" at the end of each Bolus record. (If you tap on the specific record, even more detail is displayed.) If an \"uncertain\" delivery is not resolved: Make sure the RileyLink compatible device is communicating properly You can try to turn off Bluetooth and the turn it back on again Quit the Loop app and restart it. (Note - this is different from a power cycle of the phone which remembers settings within an app which was running before the power cycle.) If that does not resolve the issue, please tap on Loop Settings, Issue Report and email it to yourself. Then post on Facebook or Zulipchat, explain what happened and say you have an Issue Report. Someone should reach out to you. There are other alert messages that might be displayed if the pump or CGM is not active. Those are found on the Loop 3 Displays page. Loop 2 Bolus Screen \u00b6 Loop 2.2.x shows the recommded bolus but the bolus row is intially set to 0 You can tap on the Recommended line and that value will be transferred to the Bolus line OR You can tap on 0.0u on the Bolus row and type in your desired bolus amount As soon as a value is entered on the Bolus row, the Deliver button turns blue and can be tapped to deliver that amount via your pump.","title":"Bolus"},{"location":"operation/features/bolus/#bolus","text":"This page was updated with information for Loop-dev which will soon be released as Loop 3.","title":"Bolus"},{"location":"operation/features/bolus/#loop-2-and-3-differences","text":"Most of the information is the same for Loop 2.2.x (or FreeAPS) and Loop 3. Loop 2 and 3 differences: Bolus Row: With Loop 3 The Recommended Bolus is provided AND the default for the Bolus is the recommended value If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry With Loop 2.2.x The Recommended Bolus is provided but the default for the Bolus value is 0 If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row Loop 3 uses the setting name of Glucose Safety Limit , which has the same meaning as Suspend Threshold in Loop 2","title":"Loop 2 and 3 Differences"},{"location":"operation/features/bolus/#meal-bolus","text":"The Meal Bolus screen is entered following a carb entry or edit action, the active button might be Save and Bolus or, if no bolus was recommended, Save without Bolusing . The Save refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen (Loop 3 only). You can review the carb information at the Meal Entry link.","title":"Meal Bolus"},{"location":"operation/features/bolus/#accept-recommendation","text":"The graphic below shows the Meal Bolus screen after the user entered carbs and tapped continue: The left graphic shows a case where a bolus is recommended - tapping on the Save and Deliver button saves the carbs and delivers the bolus The right graphic shows a case where no bolus is recommended - tapping on the Save without Bolusing saves the carbs These graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the Recommended Bolus and Bolus rows For both graphics Active Carbs and Active Insulin are displayed above the Glucose prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved) The Bolus Summary is presented below the Glucose prediction graph with three rows: Carb Entry , the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the < Carb Entry button at upper left Recommended Bolus displays what Loop recommends for that proposed Carb Entry Bolus default display is what Loop recommends, but user can edit that value If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged.","title":"Accept Recommendation"},{"location":"operation/features/bolus/#modify-bolus","text":"This section is a continuation of the information presented in the Accept Recommendation section above. In the graphic below, the user overrides the recommended bolus. The left side shows a modified bolus less than the recommended bolus The right side shows a modified bolus greater than the recommended bolus The Glucose prediction graph updates with changes to the Bolus value, giving the user the opportunity to accept or change their proposed value before tapping Save and Deliver At the next Loop cycle, the app modifies insulin delivery based on the saved information For the example with bolus less than recommended amount: Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the Correction range The recommendation to add insulin when the current glucose is below the Correction Range is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the Safety Threshold For the example with bolus greater than recommended amount: Loop will probably issue an automatic temp basal of 0 U/hr This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post meal spikes Remember - the Glucose prediction is what happens if you Save and Deliver and then no further adjustments are made to insulin delivery by Loop","title":"Modify Bolus"},{"location":"operation/features/bolus/#manual-or-correction-bolus","text":"To start a bolus entry, tap on the double orange triangles (circled below) in the toolbar at the bottom of the Loop status screen. The Loop app will open to the Bolus screen. This looks similar to the Meal Bolus screen without the Carb Entry row. Loop considers the Glucose Safety Limit and Predicted Glucose when determining the recommended bolus. In the graphic below, the current glucose is under the Correction Range . Loop allows you to dip below the correction range but its recommended bolus will be limited by the glucose prediction and the Glucose Safety Limit . Check back once your glucose starts to rise and there will probably be a bigger recommendation. This screen behaves differently for Loop 2.2.x and Loop 3. The graphics and instruction on this page are for Loop 3 version. Click on the Loop 2.2.x link above to view the Loop 2 version. When the Bolus screen is entered directly from the toolbar, the button choices are Enter Bolus if none is recommended, Deliver if a value is on the Bolus row or Cancel using the button on the upper left. The user can also tap on the value on the Bolus row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero. The two graphics below are examples of manual bolus screens. In the first graphic, no bolus was recommended If you tap on the Enter Bolus button at the bottom, it brings up a screen to enable you to type in an amount and then Deliver it. Alternatively, you can tap the 0 amount in the Bolus row and perform the same action as the Enter Bolus button If you do not want to override the recommendation, hit the Cancel button at upper left. In the second graphic, a recommended amount is shown If you tap on Deliver that recommended dose is delivered If you tap on the value on the Bolus row, you can override the amount The amount displayed on the Bolus row is modified to 0 U with the first tap - at that point, you may enter a new value or tap Cancel using the button at upper left of the screen","title":"Manual (or Correction) Bolus"},{"location":"operation/features/bolus/#recommended-bolus","text":"Loop updates the glucose prediction every time a new glucose reading is detected, typically every 5 minutes. If Loop predicts your glucose will be above the high end of your Correction Range at the end of the Duration of Insulin Activity ( DIA ) and the predicted glucose is above the Glucose Safety Threshold, it will provide a Recommended Bolus. Loop will not give an alert when a bolus is being recommended, the bolus entry tool must be clicked to check for one. The Loop pill in Nightscout will display when Loop is recommending a bolus. If your Dosing Strategy is set to Temp Basal (default) Loop will provide increased temporary basal rates until it has delivered enough insulin to bring predicted glucose into range The increased temporary basal rates are subject to your Delivery Limits . If your Dosing Strategy is set to Automatic Bolus Loop will recalculate the correction bolus at each successive loop interval, i.e., every 5 minutes Loop will then automatically deliver 40% of that new correction value Each automatic bolus is subject to your Delivery Limits","title":"Recommended Bolus"},{"location":"operation/features/bolus/#bolus-status-line","text":"Lock Phone During Bolus Once the bolus has started, you should lock your phone to avoid inadvertently cancelling a bolus. When the phone is in portrait mode, a bolus status line will appear below the Heads Up Display when Loop has a bolus in progress. The \"starting bolus\" indicator is shown in the left screenshot above - this is when Loop is communicating with the RileyLink . Once the message has been sent to the RilyLink, even if a response from the pump did not make it back to Loop, the bolused xx of yy with the circle display begins, as shown in the right screenshot above. If you change your mind, just click on the bolus status line while the bolus is in progress to cancel your bolus, as shown in the screenshot below. (Newer versions of Loop explicitly state: Tap to Stop on this line.) The amount bolused shown in this display is based on time. Loop reconciles the bolus amount with messages received from the pump once the bolus completes. If you see a 'pump is suspended notice' in the bolus status line after cancelling your bolus, just tap on it to resume pump operations.","title":"Bolus Status Line"},{"location":"operation/features/bolus/#bolus-failure-notifications","text":"On occasion, you will receive a notification that a bolus may have failed. If your Dosing Strategy is set to Automatic Bolus , this can happen when an automatic bolus is in progress. In some of these cases, the bolus was delivered. On a Medtronic pump, you should check the pump screen to verify the bolus status before attempting to redeliver a failed bolus. Omnipod users can hear the clicks if the room is quiet enough. If you get an uncertain delivery message, you may still see the \"bolused xx of yy\" display continue for as long as it would have taken to actually deliver the bolus. This display is driven by a timer and logic on the phone. (Loop is not asking the pump repeatedly - \"are you done yet?\"). You may want to interrupt an uncertain bolus if it is large, evaluate status and then resume with a fresh bolus. Loop should update the status the next time it contacts the pump. It can determine whether that bolus actually went through or not and will update the screen. Look at the Event History screen (accessed by tapping the Active Insulin or Insulin Delivery plots). Turn your phone to landscape orientation and you should see either \"Certain\" or \"Uncertain\" at the end of each Bolus record. (If you tap on the specific record, even more detail is displayed.) If an \"uncertain\" delivery is not resolved: Make sure the RileyLink compatible device is communicating properly You can try to turn off Bluetooth and the turn it back on again Quit the Loop app and restart it. (Note - this is different from a power cycle of the phone which remembers settings within an app which was running before the power cycle.) If that does not resolve the issue, please tap on Loop Settings, Issue Report and email it to yourself. Then post on Facebook or Zulipchat, explain what happened and say you have an Issue Report. Someone should reach out to you. There are other alert messages that might be displayed if the pump or CGM is not active. Those are found on the Loop 3 Displays page.","title":"Bolus Failure Notifications"},{"location":"operation/features/bolus/#loop-2-bolus-screen","text":"Loop 2.2.x shows the recommded bolus but the bolus row is intially set to 0 You can tap on the Recommended line and that value will be transferred to the Bolus line OR You can tap on 0.0u on the Bolus row and type in your desired bolus amount As soon as a value is entered on the Bolus row, the Deliver button turns blue and can be tapped to deliver that amount via your pump.","title":"Loop 2 Bolus Screen"},{"location":"operation/features/carbs/","text":"Meal Entry \u00b6 This page was updated with information for Loop-dev which will soon be released as Loop 3. Loop 2 and 3 Differences \u00b6 Most of the information is the same for Loop 2.2.x (or FreeAPS) and Loop 3. Loop 2 and 3 differences: Time : Loop 3 adds the +/- 15 minute buttons to adjust time for entry Food Type : emoji keyboard Loop 3 initially displays Medium emojis and the association of some emojis with absorption time has been improved Loop 2.2.x initially displays Fast emojis Absorption Time : values for fast, medium and slow Loop 3 uses 30 minutes, 3 hr, 5 hr Loop 2.2.x uses 2 hr, 3 hr, 4 hr Meal Bolus : Loop 3 fills in the Bolus row with Recommended Bolus Meal Entry - Fast Version \u00b6 To start a new meal entry, tap on the green plate icon (circled below) in the toolbar at the bottom of the Loop status screen. Your Loop app will open to the Add Carb Entry screen. Loop assumes carbs saved will be absorbed and Loop will adjust recommended insulin, and, when Closed Loop is enabled, Loop will adjust automated dosing based on those carbs. Loop updates the carb estimate dynamically based on your glucose while meal is active Approximate entry is \"good enough\"; better to underestimate carbs than to overestimate The Loop recommended bolus can be modified by editing the Bolus amount after tapping the Continue button on the Add or Edit Carb Entry screen. Beginner's Tip Add some amount of carbs when you normally would dose before or at a meal Make sure the amount of insulin recommended is not more than you expect If the amount seems too large, you might need to reduce Amount Consumed entry or adjust settings Accept the defaults as directed below Meal Entry \u00b6 The steps and graphics in this section are for users of Loop-dev (soon to be released as Loop 3). To view the version used by Loop 2.2.x, click on this link . Tap the meal entry icon on the toolbar to open the Add Carb Entry screen: Enter number of grams of carbs in the Amount Consumed row (keyboard appears automatically) Tap continue to advance to the Meal Bolus screen (as shown in graphic below) Tap Save and Deliver to Save the carbs and Deliver the recommended bolus The carbs are not saved until the Meal Bolus screen is completed. If no bolus is recommended in the Meal Bolus screen: A No Bolus Recommended warning appears with the reason why The blue button on the Meal Bolus screen says Save without Bolusing In this case, carbs are saved when the Save without Bolusing button is tapped By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals . Meal Entry Row by Row \u00b6 Do you want to know more? This section discusses each row in turn. Amount Consumed \u00b6 When entering the Add Carb Entry screen, the number keypad is deployed and when you start typing, that value is entered into the Amount Consumed row. Tapping on any other row dismisses the number keypad. It can be restored by tapping on the Amount Consumed row. Some value must be entered into the Amount Consumed row to continue. Many Loopers increase the carbohydrate amount to cover the expected effect of protein and fat in their meal entry. For simplicity, the rest of this page only refers to carbs because all the figures show carbs or carbohydrates in the menus. You should consider the whole meal, including fat and protein, especially if you eat lower carb. Loopers who consume mostly carbs in a given meal, might do better entering just the carbs. Time \u00b6 Modifying the Time for a new meal entry from the default value of \"now\" is optional. Each tap on the \u2212 icon changes the time earlier in 15 minute increments Each tap on the + icon changes the time later in 15 minute increments Tap on the time to bring up a picker wheel for desired time The 15 minute increments, which are also available on the watch interface, can be handy if the Looper chooses to prebolus. Reasons to modify the time when entering a meal: Meal is planned for the future, e.g., prebolus now (optional) If meal is planned more than 15 minutes from \"now\", it's a good idea to modify the time to the planned start time In Closed Loop , insulin dosing adjusts for planned carbs while maintaining the Glucose Safety Limit Meal was eaten in the past but carbs were not entered Loop does a better job with predictions if you enter the meal at the time it was eaten Entering a previous meal (now) makes Loop think the carbs will all be in the future (not some of them in the past) and can cause too much insulin to be recommended / delivered Some foods, like pizza, may need entries to start later with a longer absorption time Limits for time entry of when meal was consumed: The carbs can be entered up to 12 hours earlier or 1 hour later When editing, this limit applies to the time when the carb entry was previously saved Food Type \u00b6 Food Type entries are optional. The information about the next row: Absorption Time is also important when discussing Food Type entries. The first touch of any icon sets the absorption time to the value associated with that icon This includes the 3 icons (Lollipop, Taco, Pizza) on the Food Type row If you touch the plate icon (or the words Food Type), a new set of icons (food emoji) appear as show in the graphic below Each emoji is associated with Fast, Medium or Slow absorption time The first emojis presented are medium - scroll in either direction to view the fast and slow emojis or tap on the short-cut tabs at the bottom of the screen The emojis under Other have no effect on absorption time and they do not \"count\" as a first tap; e.g., wine followed by bacon updates absorption time to Slow. Any additional icon touches have no effect on selected absorption time At any time, the Absorption Time picker can be used to adjust the absorption time Pro Tip If you want to enter food emojis Verify food absorption time when you are done If you know you want to keep the 3 hour absorption time, tap the taco icon on the main screen before entering food emojis Loop 3 Absorption Times If you switched to Loop 3 from Loop 2.2.x, please be aware that absorption times for the Lollipop, Taco, Pizza icons have been updated. Loop 3 uses 30 minute, 3 hours and 5 hours Loop 2.2.x used 2 hours, 3 hours and 4 hours Beware using Lollipop for Complex meals If you select the Lollipop icon for a large complex meal with Loop 3, you tell Loop to expect glucose to rise rapidly (30 min absorption). When that rapid rise does not materialize, Loop may predict an unexpectedly low glucose because the algorithm assumes something must be affecting glucose downward in a strong way. If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction. \ud83c\udf6d (Fast) is for simple foods often used for low treatments. Some Loopers use it for coffee. Absorption Time \u00b6 Modifying the Absorption Time from the default value of 3 hours is optional. If you touch any icon on the main entry or Food Type row, the absorption time associated with that icon becomes the new absorption time Any additional icon touches have no effect on selected absorption time At any time, the Absorption Time picker can be used to adjust the absorption time Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and to estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details. Loop assumes a specific model for how those carbs will be aborbed that is spread out over an interval that is 150% of the selected time. This allows for variations in actual absorption. More information about this model is found in the prediction link above. Many meals can be entered with the medium (3 hour) default absorption time. Learn by experimenting and modify going forward. Evaluate the CR setting, as well as the entries for Amount Consumed and Absorption Time for adjusting meal entries. The amount of up-front insulin recommended is typically similar up through 3 hours absorption and then begins to decrease as absorption time is increased. Experiment for yourself - how much does Loop recommend compared to a straight Carbs/ CR value? Try this at different times; especially when glucose is nominal and flat compared to low and dropping or high and rising. Enter an absorption time and hit continue Examine recommended bolus Tap the < Carb Entry button at upper left Modify the aborption time and hit continue Repeat to get a feel for the up front bolus under different scenarios Continue \u00b6 Carbs are not saved in the Add Carb Entry screen until the Continue button is pressed and the user saves those carbs in the Meal Bolus screen, follow the link for details. Automatic Bolus \u00b6 Loopers who are using the Automatic Bolus Dosing Strategy should still prebolus and/or bolus for meals. The amount of Recommended insulin that will appear in the Meal Bolus screen will be the full amount of the bolus Loop recommends (not the 40% partial bolus delivered automatically). As discussed above, you can accept this recommendation or enter a different amount, however, and this is very important , if your Dosing Strategy is set to Automatic Bolus , by entering less than the recommended amount and tapping Deliver or tapping Save Without Bolusing , you are telling Loop to deliver the remaining recommended insulin in the future using 40% of the recommended bolus at each successive Loop interval. Carb Entry Leads to Insulin Delivery Note that this same automatic delivery of insulin in response to entered carbs occurs when Dosing Strategy is set to Temp Basal, but the delivery via temporary basal rates is slower, providing more time for an error to be noticed. By the same token, the Automatic Bolus Dosing Strategy responds more quickly to increases in blood glucose, helping to minimize food spikes. Edit Meals \u00b6 Adjusting a meal entry can be a particularly useful tool when: You did not finish an entire meal that you bolused for, You did not get to eat the meal at the time you originally expected, You ate more servings than originally entered, or You suspect your carb count was in error because BGs are rising more/less than expected. From the main Loop screen, tap on the Active Carbohydrates chart to view the Carbohydrates screen (see graphic below). To adjust an entry, simply tap on it (do not tap the Edit button at the top of the screen). You can change the time, modify carb amounts, or adjust absorption times (even mid-meal). To delete an entry, you first tap Edit and tap on the red circle to the left of the entry that you would like to delete. It is a little counterintuitive, but the Edit button lets you delete, but not edit an entry. For more information on some of the details reported on this screen, review Dynamic Carb Absorption Review Carb Absorption \u00b6 New Loopers, and even experienced Loopers with an unfamiliar meal or activity, should review how Loop reports absorption for the carbs you entered for a meal. If you have perfect dosing for your meal (the mythical flat line), then the carb absorption will match the model perfectly. But sometimes, there might be COB on the Active Carbohydrates Chart Loop 3 / Loop 2 that doesn't reflect your current situation, and you might need to make an adjustment. Note that while Loop is pretty forgiving on exact values and absorption time, you need to learn what works for you. Some common things to consider are listed below. Need to adjust value for carbs or account for fat/protein Need to adjust aborption time Need to review settings Settings, carbs and absorption time are good for this meal but there was more or less activity than normal Stress / Hormones / Exercise Other effects You can Edit previously saved carbs so Loop has a better idea of how to adjust predicted glucose moving forward. This can head off a low or a high. Check COB Before Adding More \u00b6 Loop works better when informed that carbs are coming, but if you have a lot of left-over carbs from an earlier entry - wait before adding more carbs for that next snack. If Loop thinks more carbs are expected, it will dose extra insulin to accommodate. Maybe set a timer and check back in half-an-hour or an hour to see if you really need to add more carbs. Dosing at a Party Example - at a party where Looper is eating small amounts at a time, get some carbs entered to get some insulin up front, but pay attention when clicking add carbs (especially when using the watch and accepting recommended dosing). Avoid Double Meal Entries \u00b6 Be Aware If you have accidentally made duplicate entries for the same meal, click on the Active Carbohydrates chart in the main Loop screen and tap Edit to delete the redundant entries. Deleting the meal entry will not impact the insulin that has already been delivered, but it will alert Loop to adjust your BG projection for purposes of calculating future insulin delivery. Dynamic Carb Absorption \u00b6 Loop observes the blood glucose impact of the meal within the 150% absorption time window. Loop calculates how many carbs have been absorbed (regardless of how many you entered) based on your BG pattern and your settings. You can watch the progression of Loop's observations of your meal by tapping on the Active Carbohydrates chart at the bottom of Loop's main screen and watching the insulin counteraction effects ( ICE ) on the Carbohydrates screen. An example of the screen is on the left side of the figure below. An explanation of the dual lines for each entry and the color coding scheme is explained below the figure. Click on the ICE link for more details and an in-real-life example. Top line of each entry for the graphic on the left (above) Amount you entered, time of entry, absorption time entered Bottom line of each entry (changes with each CGM reading) Amount absorbed, estimated time when amount you entered will be absorbed Color codes while within the 150% absorption time window Green: amount absorbed is less than 10% above the entered amount Yellow: amount absorbed exceeds 10% above the entered amount Color codes after 150% absorption time window expires Grey: amount absorbed is within 10% of the entered amount Yellow: amount absorbed is exceeds 10% above or below the entered amount The information available on the Carbohydrates screen disappears for any meals older than 12 hours, so if you're looking for details as to how a particular meal absorbed, you may need to screenshot or otherwise capture this information within that window. Previous entries can be modified or deleted through this screen. Medtronic Warning \u00b6 Do not enter carbs into your Medtronic pump If you use your Medtronic pump bolus wizard or carb entry screen, the pump will give you insulin but Loop will not know about the carbs The Loop predictions will be off and next time Loop reads the reservoir history on the pump, it will probably command a temporary basal rate of 0.0 U/hr Nightscout Entries \u00b6 With Loop 3, a caregiver can add remote carbs and perform remote bolus through Nightscout, but that requires set-up between the caregiver and Loopers phone and use of the Remote Carb and Remote Bolus entries in the Careportal. If you enter carbs (not remote carbs) into the Careportal, they are not read by Loop and will not be reflected in COB . There may be times you want to do this, e.g., you want to indicate a low treatment you don't want Loop to know about Third Party Apps \u00b6 This is relevant for Loop 2.2.x versions. Loop 3 does not read carbs from Apple Health unless you modified the code. Please see Loop 2 Permissions . Carb Absorption Model \u00b6 For more information about the way Loop models the effects of carbs, insulin, etc., see the algorithm page . Loop 2 - Fast Meal Entry \u00b6 This section is for users of Loop 2.2.x (or FreeAPS). Tap meal entry icon on toolbar Enter number of grams of carbs in the Amount Consumed row Tap continue to advance to the Meal Bolus screen Tap Recommended line to transfer the value to the Bolus line (Loop 2.2.x) Tap Deliver The carbs are not saved until the Meal Bolus screen is completed. By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals .","title":"Meal Entries"},{"location":"operation/features/carbs/#meal-entry","text":"This page was updated with information for Loop-dev which will soon be released as Loop 3.","title":"Meal Entry"},{"location":"operation/features/carbs/#loop-2-and-3-differences","text":"Most of the information is the same for Loop 2.2.x (or FreeAPS) and Loop 3. Loop 2 and 3 differences: Time : Loop 3 adds the +/- 15 minute buttons to adjust time for entry Food Type : emoji keyboard Loop 3 initially displays Medium emojis and the association of some emojis with absorption time has been improved Loop 2.2.x initially displays Fast emojis Absorption Time : values for fast, medium and slow Loop 3 uses 30 minutes, 3 hr, 5 hr Loop 2.2.x uses 2 hr, 3 hr, 4 hr Meal Bolus : Loop 3 fills in the Bolus row with Recommended Bolus","title":"Loop 2 and 3 Differences"},{"location":"operation/features/carbs/#meal-entry-fast-version","text":"To start a new meal entry, tap on the green plate icon (circled below) in the toolbar at the bottom of the Loop status screen. Your Loop app will open to the Add Carb Entry screen. Loop assumes carbs saved will be absorbed and Loop will adjust recommended insulin, and, when Closed Loop is enabled, Loop will adjust automated dosing based on those carbs. Loop updates the carb estimate dynamically based on your glucose while meal is active Approximate entry is \"good enough\"; better to underestimate carbs than to overestimate The Loop recommended bolus can be modified by editing the Bolus amount after tapping the Continue button on the Add or Edit Carb Entry screen. Beginner's Tip Add some amount of carbs when you normally would dose before or at a meal Make sure the amount of insulin recommended is not more than you expect If the amount seems too large, you might need to reduce Amount Consumed entry or adjust settings Accept the defaults as directed below","title":"Meal Entry - Fast Version"},{"location":"operation/features/carbs/#meal-entry_1","text":"The steps and graphics in this section are for users of Loop-dev (soon to be released as Loop 3). To view the version used by Loop 2.2.x, click on this link . Tap the meal entry icon on the toolbar to open the Add Carb Entry screen: Enter number of grams of carbs in the Amount Consumed row (keyboard appears automatically) Tap continue to advance to the Meal Bolus screen (as shown in graphic below) Tap Save and Deliver to Save the carbs and Deliver the recommended bolus The carbs are not saved until the Meal Bolus screen is completed. If no bolus is recommended in the Meal Bolus screen: A No Bolus Recommended warning appears with the reason why The blue button on the Meal Bolus screen says Save without Bolusing In this case, carbs are saved when the Save without Bolusing button is tapped By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals .","title":"Meal Entry"},{"location":"operation/features/carbs/#meal-entry-row-by-row","text":"Do you want to know more? This section discusses each row in turn.","title":"Meal Entry Row by Row"},{"location":"operation/features/carbs/#amount-consumed","text":"When entering the Add Carb Entry screen, the number keypad is deployed and when you start typing, that value is entered into the Amount Consumed row. Tapping on any other row dismisses the number keypad. It can be restored by tapping on the Amount Consumed row. Some value must be entered into the Amount Consumed row to continue. Many Loopers increase the carbohydrate amount to cover the expected effect of protein and fat in their meal entry. For simplicity, the rest of this page only refers to carbs because all the figures show carbs or carbohydrates in the menus. You should consider the whole meal, including fat and protein, especially if you eat lower carb. Loopers who consume mostly carbs in a given meal, might do better entering just the carbs.","title":"Amount Consumed"},{"location":"operation/features/carbs/#time","text":"Modifying the Time for a new meal entry from the default value of \"now\" is optional. Each tap on the \u2212 icon changes the time earlier in 15 minute increments Each tap on the + icon changes the time later in 15 minute increments Tap on the time to bring up a picker wheel for desired time The 15 minute increments, which are also available on the watch interface, can be handy if the Looper chooses to prebolus. Reasons to modify the time when entering a meal: Meal is planned for the future, e.g., prebolus now (optional) If meal is planned more than 15 minutes from \"now\", it's a good idea to modify the time to the planned start time In Closed Loop , insulin dosing adjusts for planned carbs while maintaining the Glucose Safety Limit Meal was eaten in the past but carbs were not entered Loop does a better job with predictions if you enter the meal at the time it was eaten Entering a previous meal (now) makes Loop think the carbs will all be in the future (not some of them in the past) and can cause too much insulin to be recommended / delivered Some foods, like pizza, may need entries to start later with a longer absorption time Limits for time entry of when meal was consumed: The carbs can be entered up to 12 hours earlier or 1 hour later When editing, this limit applies to the time when the carb entry was previously saved","title":"Time"},{"location":"operation/features/carbs/#food-type","text":"Food Type entries are optional. The information about the next row: Absorption Time is also important when discussing Food Type entries. The first touch of any icon sets the absorption time to the value associated with that icon This includes the 3 icons (Lollipop, Taco, Pizza) on the Food Type row If you touch the plate icon (or the words Food Type), a new set of icons (food emoji) appear as show in the graphic below Each emoji is associated with Fast, Medium or Slow absorption time The first emojis presented are medium - scroll in either direction to view the fast and slow emojis or tap on the short-cut tabs at the bottom of the screen The emojis under Other have no effect on absorption time and they do not \"count\" as a first tap; e.g., wine followed by bacon updates absorption time to Slow. Any additional icon touches have no effect on selected absorption time At any time, the Absorption Time picker can be used to adjust the absorption time Pro Tip If you want to enter food emojis Verify food absorption time when you are done If you know you want to keep the 3 hour absorption time, tap the taco icon on the main screen before entering food emojis Loop 3 Absorption Times If you switched to Loop 3 from Loop 2.2.x, please be aware that absorption times for the Lollipop, Taco, Pizza icons have been updated. Loop 3 uses 30 minute, 3 hours and 5 hours Loop 2.2.x used 2 hours, 3 hours and 4 hours Beware using Lollipop for Complex meals If you select the Lollipop icon for a large complex meal with Loop 3, you tell Loop to expect glucose to rise rapidly (30 min absorption). When that rapid rise does not materialize, Loop may predict an unexpectedly low glucose because the algorithm assumes something must be affecting glucose downward in a strong way. If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction. \ud83c\udf6d (Fast) is for simple foods often used for low treatments. Some Loopers use it for coffee.","title":"Food Type"},{"location":"operation/features/carbs/#absorption-time","text":"Modifying the Absorption Time from the default value of 3 hours is optional. If you touch any icon on the main entry or Food Type row, the absorption time associated with that icon becomes the new absorption time Any additional icon touches have no effect on selected absorption time At any time, the Absorption Time picker can be used to adjust the absorption time Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and to estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details. Loop assumes a specific model for how those carbs will be aborbed that is spread out over an interval that is 150% of the selected time. This allows for variations in actual absorption. More information about this model is found in the prediction link above. Many meals can be entered with the medium (3 hour) default absorption time. Learn by experimenting and modify going forward. Evaluate the CR setting, as well as the entries for Amount Consumed and Absorption Time for adjusting meal entries. The amount of up-front insulin recommended is typically similar up through 3 hours absorption and then begins to decrease as absorption time is increased. Experiment for yourself - how much does Loop recommend compared to a straight Carbs/ CR value? Try this at different times; especially when glucose is nominal and flat compared to low and dropping or high and rising. Enter an absorption time and hit continue Examine recommended bolus Tap the < Carb Entry button at upper left Modify the aborption time and hit continue Repeat to get a feel for the up front bolus under different scenarios","title":"Absorption Time"},{"location":"operation/features/carbs/#continue","text":"Carbs are not saved in the Add Carb Entry screen until the Continue button is pressed and the user saves those carbs in the Meal Bolus screen, follow the link for details.","title":"Continue"},{"location":"operation/features/carbs/#automatic-bolus","text":"Loopers who are using the Automatic Bolus Dosing Strategy should still prebolus and/or bolus for meals. The amount of Recommended insulin that will appear in the Meal Bolus screen will be the full amount of the bolus Loop recommends (not the 40% partial bolus delivered automatically). As discussed above, you can accept this recommendation or enter a different amount, however, and this is very important , if your Dosing Strategy is set to Automatic Bolus , by entering less than the recommended amount and tapping Deliver or tapping Save Without Bolusing , you are telling Loop to deliver the remaining recommended insulin in the future using 40% of the recommended bolus at each successive Loop interval. Carb Entry Leads to Insulin Delivery Note that this same automatic delivery of insulin in response to entered carbs occurs when Dosing Strategy is set to Temp Basal, but the delivery via temporary basal rates is slower, providing more time for an error to be noticed. By the same token, the Automatic Bolus Dosing Strategy responds more quickly to increases in blood glucose, helping to minimize food spikes.","title":"Automatic Bolus"},{"location":"operation/features/carbs/#edit-meals","text":"Adjusting a meal entry can be a particularly useful tool when: You did not finish an entire meal that you bolused for, You did not get to eat the meal at the time you originally expected, You ate more servings than originally entered, or You suspect your carb count was in error because BGs are rising more/less than expected. From the main Loop screen, tap on the Active Carbohydrates chart to view the Carbohydrates screen (see graphic below). To adjust an entry, simply tap on it (do not tap the Edit button at the top of the screen). You can change the time, modify carb amounts, or adjust absorption times (even mid-meal). To delete an entry, you first tap Edit and tap on the red circle to the left of the entry that you would like to delete. It is a little counterintuitive, but the Edit button lets you delete, but not edit an entry. For more information on some of the details reported on this screen, review Dynamic Carb Absorption","title":"Edit Meals"},{"location":"operation/features/carbs/#review-carb-absorption","text":"New Loopers, and even experienced Loopers with an unfamiliar meal or activity, should review how Loop reports absorption for the carbs you entered for a meal. If you have perfect dosing for your meal (the mythical flat line), then the carb absorption will match the model perfectly. But sometimes, there might be COB on the Active Carbohydrates Chart Loop 3 / Loop 2 that doesn't reflect your current situation, and you might need to make an adjustment. Note that while Loop is pretty forgiving on exact values and absorption time, you need to learn what works for you. Some common things to consider are listed below. Need to adjust value for carbs or account for fat/protein Need to adjust aborption time Need to review settings Settings, carbs and absorption time are good for this meal but there was more or less activity than normal Stress / Hormones / Exercise Other effects You can Edit previously saved carbs so Loop has a better idea of how to adjust predicted glucose moving forward. This can head off a low or a high.","title":"Review Carb Absorption"},{"location":"operation/features/carbs/#check-cob-before-adding-more","text":"Loop works better when informed that carbs are coming, but if you have a lot of left-over carbs from an earlier entry - wait before adding more carbs for that next snack. If Loop thinks more carbs are expected, it will dose extra insulin to accommodate. Maybe set a timer and check back in half-an-hour or an hour to see if you really need to add more carbs. Dosing at a Party Example - at a party where Looper is eating small amounts at a time, get some carbs entered to get some insulin up front, but pay attention when clicking add carbs (especially when using the watch and accepting recommended dosing).","title":"Check COB Before Adding More"},{"location":"operation/features/carbs/#avoid-double-meal-entries","text":"Be Aware If you have accidentally made duplicate entries for the same meal, click on the Active Carbohydrates chart in the main Loop screen and tap Edit to delete the redundant entries. Deleting the meal entry will not impact the insulin that has already been delivered, but it will alert Loop to adjust your BG projection for purposes of calculating future insulin delivery.","title":"Avoid Double Meal Entries"},{"location":"operation/features/carbs/#dynamic-carb-absorption","text":"Loop observes the blood glucose impact of the meal within the 150% absorption time window. Loop calculates how many carbs have been absorbed (regardless of how many you entered) based on your BG pattern and your settings. You can watch the progression of Loop's observations of your meal by tapping on the Active Carbohydrates chart at the bottom of Loop's main screen and watching the insulin counteraction effects ( ICE ) on the Carbohydrates screen. An example of the screen is on the left side of the figure below. An explanation of the dual lines for each entry and the color coding scheme is explained below the figure. Click on the ICE link for more details and an in-real-life example. Top line of each entry for the graphic on the left (above) Amount you entered, time of entry, absorption time entered Bottom line of each entry (changes with each CGM reading) Amount absorbed, estimated time when amount you entered will be absorbed Color codes while within the 150% absorption time window Green: amount absorbed is less than 10% above the entered amount Yellow: amount absorbed exceeds 10% above the entered amount Color codes after 150% absorption time window expires Grey: amount absorbed is within 10% of the entered amount Yellow: amount absorbed is exceeds 10% above or below the entered amount The information available on the Carbohydrates screen disappears for any meals older than 12 hours, so if you're looking for details as to how a particular meal absorbed, you may need to screenshot or otherwise capture this information within that window. Previous entries can be modified or deleted through this screen.","title":"Dynamic Carb Absorption"},{"location":"operation/features/carbs/#medtronic-warning","text":"Do not enter carbs into your Medtronic pump If you use your Medtronic pump bolus wizard or carb entry screen, the pump will give you insulin but Loop will not know about the carbs The Loop predictions will be off and next time Loop reads the reservoir history on the pump, it will probably command a temporary basal rate of 0.0 U/hr","title":"Medtronic Warning"},{"location":"operation/features/carbs/#nightscout-entries","text":"With Loop 3, a caregiver can add remote carbs and perform remote bolus through Nightscout, but that requires set-up between the caregiver and Loopers phone and use of the Remote Carb and Remote Bolus entries in the Careportal. If you enter carbs (not remote carbs) into the Careportal, they are not read by Loop and will not be reflected in COB . There may be times you want to do this, e.g., you want to indicate a low treatment you don't want Loop to know about","title":"Nightscout Entries"},{"location":"operation/features/carbs/#third-party-apps","text":"This is relevant for Loop 2.2.x versions. Loop 3 does not read carbs from Apple Health unless you modified the code. Please see Loop 2 Permissions .","title":"Third Party Apps"},{"location":"operation/features/carbs/#carb-absorption-model","text":"For more information about the way Loop models the effects of carbs, insulin, etc., see the algorithm page .","title":"Carb Absorption Model"},{"location":"operation/features/carbs/#loop-2-fast-meal-entry","text":"This section is for users of Loop 2.2.x (or FreeAPS). Tap meal entry icon on toolbar Enter number of grams of carbs in the Amount Consumed row Tap continue to advance to the Meal Bolus screen Tap Recommended line to transfer the value to the Bolus line (Loop 2.2.x) Tap Deliver The carbs are not saved until the Meal Bolus screen is completed. By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals .","title":"Loop 2 - Fast Meal Entry"},{"location":"operation/features/ice/","text":"Insulin Counteraction Effects \u00b6 Tapping on your Carbohydrates graph will open up a page that tracks your carb entries for the day (since midnight). At the top of the page is a useful graphic called Insulin Counteraction Effects ( ICE for short). What is it? Basically, a graphical representation of predicted upward-BG effects vs. encountered upward-BG effects. Consider the possible sources of triggers that counteract insulin (in other words, make BGs go up) food stress illness someone sat too close to you As we all know, this list can be long but, on \"normal\" days FOOD will be the single strongest \"insulin counteracter\". Food will be the most influence on making BGs go up. There are also other reasons that BGs climb when we may have expected them to be steady; basals being set too low, failed infusion site, etc. If we assume that it's a \"normal\" day (basals are close to correct, illness is not an issue, the site is good), Loop will expect most of the UPWARD pressure on BGs are from food. Loop is calling that upward pressure Insulin Counteraction Effect ( ICE ). This is a pretty reasonable assumption so let's use that for the rest of this discussion. ICE display \u00b6 Let's take a look at an example day using the screenshot below. The graph at the top of your ICE page represents that upward pressure Loop expects from the food entries. The predicted ICE is shown as grey bars. As a meal is tracked by Loop, you'll see green bars of observed ICE . When you make a food entry originally, Loop will save your entry as you've made it. On the line below your original entry, Loop will also start tracking your food entry assuming a 1.5 times longer carb absorption time. This helps Loop track carbs that may actually be absorbing longer than you expected (part of that whole dynamic carb absorption modeling). Loop will be updating that value of \"observed\" carb absorption time as well as absorbed carbs as your meal goes on. Practical use \u00b6 So how can we use this information to make our Looping experience better? The answer is probably best illustrated using a real-world example. Chinese food...in fact, THIS Chinese dish. General Tso's chicken. As you can see in the recipe, loads of fast carbs with ingredients like hoisin sauce, brown sugar, and cornstarch. But also slower carbs like chicken. Rice can be a difficult one because for us, it acts fast but also seems to have a long tail. It was a busy day and I really didn't want to count carbs. Ok, even on the slow days I don't want to count carbs. I just eyeballed the bowl of food and guessed. As I entered the food in originally, I was still trying to come up with a good guess on the ratio of fast:slow carbs but kid was in a hurry to eat. My initial guess around 3:30pm was 70g of carbs at 5 hours absorption (note: it gets edited to 80g in a little bit), we bolused for that and she started to eat. About 10 minutes later, I decided to add 10g of fast-acting carbs at 1-hour absorption to help with the sauce's speedy carbs. Watching what was going on a little later...BGs were rising at a decent clip and I had a feeling I really didn't cover things super well...so I edited the original 70g entry, adding 10g and making it 80g instead. (That's why there is a 2U bolus around 4:20pm.) And of course around 5:40pm there was a little bit of nibbling on the leftovers as we put them into the fridge. We gave 10g for that. BGs climbed a bit more, not surprising given how we were underestimating fast carbs at this point...but still not so bad at 180 peak BG. (Anna gave 2 units correction at the peak because there was dessert coming later that night and she wanted to be ready for it without too much pre-bolus.) So, how can I use the ICE info to make this meal better? I can look at the observed ICE information and the observed carb entry Loop has recorded to adjust my insulin bolusing the next time we eat this meal. For example, the biggest weakness I had in this (and suspected it even as I did the initial bolus) was that I underestimated the sauce's fast carbs. I can see this in the observed ICE graph having the early green peaks after the meal, and in the way that the observed carb distribution was more like 7:2 vs my original guess of 8:1 (slow:fast carbs). Overall, it appears that I guess on overall carb content pretty closely (90g vs. 89g observed). Next time we have General Tso's chicken, I will likely bolus it as 70g at 5 hours and 20g at 2 hours. So remember to check your ICE page at the end of a meal's absorption. By checking in on the meal's observed behaviors, you'll have a good starting point to fine-tuning any new or unknown carb breakdown. Side note: remember this conversation is assuming you have basals fairly well set and are not sick. If other factors could be significantly causing your BGs to swing that Loop doesn't know about (bad sites, illness, or basal rates that need to be adjusted), they may be attributed to ICE when they really aren't food-related. In those cases, address the underlying cause and then use the ICE pages when you've come back to \"normal\".","title":"Using ICE info"},{"location":"operation/features/ice/#insulin-counteraction-effects","text":"Tapping on your Carbohydrates graph will open up a page that tracks your carb entries for the day (since midnight). At the top of the page is a useful graphic called Insulin Counteraction Effects ( ICE for short). What is it? Basically, a graphical representation of predicted upward-BG effects vs. encountered upward-BG effects. Consider the possible sources of triggers that counteract insulin (in other words, make BGs go up) food stress illness someone sat too close to you As we all know, this list can be long but, on \"normal\" days FOOD will be the single strongest \"insulin counteracter\". Food will be the most influence on making BGs go up. There are also other reasons that BGs climb when we may have expected them to be steady; basals being set too low, failed infusion site, etc. If we assume that it's a \"normal\" day (basals are close to correct, illness is not an issue, the site is good), Loop will expect most of the UPWARD pressure on BGs are from food. Loop is calling that upward pressure Insulin Counteraction Effect ( ICE ). This is a pretty reasonable assumption so let's use that for the rest of this discussion.","title":"Insulin Counteraction Effects"},{"location":"operation/features/ice/#ice-display","text":"Let's take a look at an example day using the screenshot below. The graph at the top of your ICE page represents that upward pressure Loop expects from the food entries. The predicted ICE is shown as grey bars. As a meal is tracked by Loop, you'll see green bars of observed ICE . When you make a food entry originally, Loop will save your entry as you've made it. On the line below your original entry, Loop will also start tracking your food entry assuming a 1.5 times longer carb absorption time. This helps Loop track carbs that may actually be absorbing longer than you expected (part of that whole dynamic carb absorption modeling). Loop will be updating that value of \"observed\" carb absorption time as well as absorbed carbs as your meal goes on.","title":"ICE display"},{"location":"operation/features/ice/#practical-use","text":"So how can we use this information to make our Looping experience better? The answer is probably best illustrated using a real-world example. Chinese food...in fact, THIS Chinese dish. General Tso's chicken. As you can see in the recipe, loads of fast carbs with ingredients like hoisin sauce, brown sugar, and cornstarch. But also slower carbs like chicken. Rice can be a difficult one because for us, it acts fast but also seems to have a long tail. It was a busy day and I really didn't want to count carbs. Ok, even on the slow days I don't want to count carbs. I just eyeballed the bowl of food and guessed. As I entered the food in originally, I was still trying to come up with a good guess on the ratio of fast:slow carbs but kid was in a hurry to eat. My initial guess around 3:30pm was 70g of carbs at 5 hours absorption (note: it gets edited to 80g in a little bit), we bolused for that and she started to eat. About 10 minutes later, I decided to add 10g of fast-acting carbs at 1-hour absorption to help with the sauce's speedy carbs. Watching what was going on a little later...BGs were rising at a decent clip and I had a feeling I really didn't cover things super well...so I edited the original 70g entry, adding 10g and making it 80g instead. (That's why there is a 2U bolus around 4:20pm.) And of course around 5:40pm there was a little bit of nibbling on the leftovers as we put them into the fridge. We gave 10g for that. BGs climbed a bit more, not surprising given how we were underestimating fast carbs at this point...but still not so bad at 180 peak BG. (Anna gave 2 units correction at the peak because there was dessert coming later that night and she wanted to be ready for it without too much pre-bolus.) So, how can I use the ICE info to make this meal better? I can look at the observed ICE information and the observed carb entry Loop has recorded to adjust my insulin bolusing the next time we eat this meal. For example, the biggest weakness I had in this (and suspected it even as I did the initial bolus) was that I underestimated the sauce's fast carbs. I can see this in the observed ICE graph having the early green peaks after the meal, and in the way that the observed carb distribution was more like 7:2 vs my original guess of 8:1 (slow:fast carbs). Overall, it appears that I guess on overall carb content pretty closely (90g vs. 89g observed). Next time we have General Tso's chicken, I will likely bolus it as 70g at 5 hours and 20g at 2 hours. So remember to check your ICE page at the end of a meal's absorption. By checking in on the meal's observed behaviors, you'll have a good starting point to fine-tuning any new or unknown carb breakdown. Side note: remember this conversation is assuming you have basals fairly well set and are not sick. If other factors could be significantly causing your BGs to swing that Loop doesn't know about (bad sites, illness, or basal rates that need to be adjusted), they may be attributed to ICE when they really aren't food-related. In those cases, address the underlying cause and then use the ICE pages when you've come back to \"normal\".","title":"Practical use"},{"location":"operation/features/notifications/","text":"Loop Notifications \u00b6 Loop provides discrete notifications on the iPhone and Watch which will appear on the (locked) screen and vibrate, depending on your notification settings of Loop. Loop App Expiration Notification \u00b6 Profile expiration notification is a new feature. When fewer than 20 days remain until profile expiration, you'll get a notification when you open the app but no more frequently than every 2 days When fewer than 24 hours remain, you'll get a notification when you open the app, once every hour at most Simply tap on the More Info button of the notification to go directly to the LoopDocs Updating page. Free (7-day) Loop App Expiration Notification \u00b6 The expiration notification pattern is the same as for the Paid Loop App. You may want to add an Expiration Notification Customization to modify the first appearance and frequency of the notification. Loop App Expiration Date \u00b6 If you want to see the expiration date at any time, tap on Settings, then tap on Issue Report. The expiration date is near the top of the report (to the right of profileExpiration ). If you don't see that, time to rebuild to get that feature. Once you've viewed the expiration date, tap Settings to back out of the Issue Report display. The time is in GMT, so adjust to your own timezone if you procrastinated until the last minute. If you are running Loop v2.2.4 or older, you might be surprised by a \"Loop\" is No Longer Available display when the app reaches its expiration date. Workaround is to add a notice to your calendar when you build the app initially so you know that the one year app lifetime is nearing the end This is still a good idea even with automated notifications to set your own desired alert window If you are running Loop v2.2.4 or older, you can use this method to determine Loop Expiration date . Omnipod \u00b6 Most beep alarms are disabled for a much more discrete use of the omnipod. Only the following audible acknowledgments or alarms are currently used: Pod activated acknowledgment when filling the pod with enough insulin when pairing a new Pod. Pod expiration advisory alarm at 72 hours/3 days (which you can silence in the pod status settings ) Pod empty reservoir (which you can silence in the pod status settings ) Pod deactivation acknowledgment Pod fault alarm (also called a screamer) when reaching the max life of the Pod: 80 hours (3 days + 8 hours) or a fault/occlusion happens. (which you can silence using the replace pod ) command in the pod settings page) Notification settings for Loop \u00b6 You can customize the way notifications of Loop are behaving in the Settings App of the iPhone: Settings of Loop: Loop Failure \u00b6 At 20, 40, 60, and 120 minutes, there is a Loop Failure notification. This mostly happens when the connection is lost for a longer period of time between the CGM or the Rileylink and Loop. Bolus Failure \u00b6 If Loop detects that a bolus was not able to be delivered, it will provide a notification. Bolus failures are usually due to stale pump data. Try fetching recent history from the RileyLink menu to update pump data. Loop will also notify of partial bolus deliveries. Low Reservoir \u00b6 Medtronic At 20% and 10% remaining reservoir volume, there is a Low Reservoir notification. Omnipod At <30U, <20U, <10U Empty Reservoir \u00b6 Loop will notify when the reservoir is empty. Loop will notify you every minute with this notification. Omnipod Normally you will have 5-30 minutes to replace the pod, but do know the pod can scream at any moment from this point on. Pod Expiration ( Omnipod ) \u00b6 You can customize the time of notification when to replace your pod any time from 1 hour up to 71 hours (3 days - 1 hour) after staring a new pod or you change the time later in the [pod configuration settings]../loop-settings/omnipod-pump.md#configuration). The expiry alarm will always sound when the pod reaches a running full 3 days (72 hours) which you can silence in the pod status settings . Low Battery (Medtronic) \u00b6 Loop will notify when battery levels have approximately 8-10 hours of battery life remaining. Remote Notifications \u00b6 Loop does not have a remote notification to other devices. If you are a remotely monitoring parent, you will want to read here about setting up pushover alerts using your Nightscout site if you want proactive notifications of looping related information. Loop Follow \u00b6 Many people use additional apps to assist in following a loved one or to support a loved one who needs help waking up to alarms. One of the more popular options is Loop Follow, written by a parent of a Looper. There are a number of features to assist in remote monitoring with a variety of options for the source of data. For more information, please read the Loop Follow documentation. You can build Loop Follow using the same Build Select Script you used to build the Loop app. (It's one of the options in the menu.) Please note that Jon Fawcett makes clear distinction between his DIY (free) support and his business, Custom Type One. However, both are supported with the same Facebook group, CustomTypeOne Support (Loop Follow, SugarPixel, Loop Patches) .","title":"Loop Notifications"},{"location":"operation/features/notifications/#loop-notifications","text":"Loop provides discrete notifications on the iPhone and Watch which will appear on the (locked) screen and vibrate, depending on your notification settings of Loop.","title":"Loop Notifications"},{"location":"operation/features/notifications/#loop-app-expiration-notification","text":"Profile expiration notification is a new feature. When fewer than 20 days remain until profile expiration, you'll get a notification when you open the app but no more frequently than every 2 days When fewer than 24 hours remain, you'll get a notification when you open the app, once every hour at most Simply tap on the More Info button of the notification to go directly to the LoopDocs Updating page.","title":"Loop App Expiration Notification"},{"location":"operation/features/notifications/#free-7-day-loop-app-expiration-notification","text":"The expiration notification pattern is the same as for the Paid Loop App. You may want to add an Expiration Notification Customization to modify the first appearance and frequency of the notification.","title":"Free (7-day) Loop App Expiration Notification"},{"location":"operation/features/notifications/#loop-app-expiration-date","text":"If you want to see the expiration date at any time, tap on Settings, then tap on Issue Report. The expiration date is near the top of the report (to the right of profileExpiration ). If you don't see that, time to rebuild to get that feature. Once you've viewed the expiration date, tap Settings to back out of the Issue Report display. The time is in GMT, so adjust to your own timezone if you procrastinated until the last minute. If you are running Loop v2.2.4 or older, you might be surprised by a \"Loop\" is No Longer Available display when the app reaches its expiration date. Workaround is to add a notice to your calendar when you build the app initially so you know that the one year app lifetime is nearing the end This is still a good idea even with automated notifications to set your own desired alert window If you are running Loop v2.2.4 or older, you can use this method to determine Loop Expiration date .","title":"Loop App Expiration Date"},{"location":"operation/features/notifications/#omnipod","text":"Most beep alarms are disabled for a much more discrete use of the omnipod. Only the following audible acknowledgments or alarms are currently used: Pod activated acknowledgment when filling the pod with enough insulin when pairing a new Pod. Pod expiration advisory alarm at 72 hours/3 days (which you can silence in the pod status settings ) Pod empty reservoir (which you can silence in the pod status settings ) Pod deactivation acknowledgment Pod fault alarm (also called a screamer) when reaching the max life of the Pod: 80 hours (3 days + 8 hours) or a fault/occlusion happens. (which you can silence using the replace pod ) command in the pod settings page)","title":"Omnipod"},{"location":"operation/features/notifications/#notification-settings-for-loop","text":"You can customize the way notifications of Loop are behaving in the Settings App of the iPhone: Settings of Loop:","title":"Notification settings for Loop"},{"location":"operation/features/notifications/#loop-failure","text":"At 20, 40, 60, and 120 minutes, there is a Loop Failure notification. This mostly happens when the connection is lost for a longer period of time between the CGM or the Rileylink and Loop.","title":"Loop Failure"},{"location":"operation/features/notifications/#bolus-failure","text":"If Loop detects that a bolus was not able to be delivered, it will provide a notification. Bolus failures are usually due to stale pump data. Try fetching recent history from the RileyLink menu to update pump data. Loop will also notify of partial bolus deliveries.","title":"Bolus Failure"},{"location":"operation/features/notifications/#low-reservoir","text":"Medtronic At 20% and 10% remaining reservoir volume, there is a Low Reservoir notification. Omnipod At <30U, <20U, <10U","title":"Low Reservoir"},{"location":"operation/features/notifications/#empty-reservoir","text":"Loop will notify when the reservoir is empty. Loop will notify you every minute with this notification. Omnipod Normally you will have 5-30 minutes to replace the pod, but do know the pod can scream at any moment from this point on.","title":"Empty Reservoir"},{"location":"operation/features/notifications/#pod-expiration-omnipod","text":"You can customize the time of notification when to replace your pod any time from 1 hour up to 71 hours (3 days - 1 hour) after staring a new pod or you change the time later in the [pod configuration settings]../loop-settings/omnipod-pump.md#configuration). The expiry alarm will always sound when the pod reaches a running full 3 days (72 hours) which you can silence in the pod status settings .","title":"Pod Expiration (Omnipod)"},{"location":"operation/features/notifications/#low-battery-medtronic","text":"Loop will notify when battery levels have approximately 8-10 hours of battery life remaining.","title":"Low Battery (Medtronic)"},{"location":"operation/features/notifications/#remote-notifications","text":"Loop does not have a remote notification to other devices. If you are a remotely monitoring parent, you will want to read here about setting up pushover alerts using your Nightscout site if you want proactive notifications of looping related information.","title":"Remote Notifications"},{"location":"operation/features/notifications/#loop-follow","text":"Many people use additional apps to assist in following a loved one or to support a loved one who needs help waking up to alarms. One of the more popular options is Loop Follow, written by a parent of a Looper. There are a number of features to assist in remote monitoring with a variety of options for the source of data. For more information, please read the Loop Follow documentation. You can build Loop Follow using the same Build Select Script you used to build the Loop app. (It's one of the options in the menu.) Please note that Jon Fawcett makes clear distinction between his DIY (free) support and his business, Custom Type One. However, both are supported with the same Facebook group, CustomTypeOne Support (Loop Follow, SugarPixel, Loop Patches) .","title":"Loop Follow"},{"location":"operation/features/premeal/","text":"Pre-Meal Range \u00b6 The Loop toolbar's second icon from the left is a small clock with a knife and fork on the sides. This is the pre-meal tool. The tool will be colored grey until you define a glucose range in Loop settings. Once a pre-meal range is available in Loop Settings, the icon will be colored green and available for use. The background coloring of the Pre-Meal Range icon will turn green when active and there will be a dark blue line on the glucose chart indicating the pre-meal range. The pre-meal range can be used to as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes. It's not designed to replace a traditional pre-bolus, but rather as a more gentle way to build up some pre-meal insulin activity. If your normal target is 100-110 mg/dL and pre-meal range is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually cancelled... whichever comes first. Setting an override will also cancel pre-meal range. Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time. Other Uses Some people prefer to use this as an easy way to raise the correction range for an hour. How to Adjust Pre-Meal Range \u00b6 Loop 3: In Loop Settings, select Therapy Settings and then tap on Pre-Meal Range to adjust If you prefer not to have that icon active on the Toolbar, you can tap Delete in the upper right corner of the adjustment screen Loop 2.2.x: In Loop settings, find the Correction Range section. The Correction Range sections stores all targets for Loop over the hours of the day, including Pre-Meal. Assessing the impact of pre-meal \u00b6 The intent of the pre-meal icon on the toolbar is to provide an eating-soon mode in Loop . Do not set pre-meal limits to any hypoglycemic ranges that may require treatment. To mitigate the impact of unintentional pre-meal activation: If you are running Loop 3, you can delete the setting to deactivate the icon If you are running Loop 2.2.x, you can set the pre-meal range to the same value as your usual correction range Custom Pre-Meal Overrides Some loopers set up a custom override to use instead of the pre-meal icon. This allows enabling the override remotely with Nightscout, permits specifying a custom duration, and will keep the override enabled after carbs are announced.","title":"Pre-meal target"},{"location":"operation/features/premeal/#pre-meal-range","text":"The Loop toolbar's second icon from the left is a small clock with a knife and fork on the sides. This is the pre-meal tool. The tool will be colored grey until you define a glucose range in Loop settings. Once a pre-meal range is available in Loop Settings, the icon will be colored green and available for use. The background coloring of the Pre-Meal Range icon will turn green when active and there will be a dark blue line on the glucose chart indicating the pre-meal range. The pre-meal range can be used to as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes. It's not designed to replace a traditional pre-bolus, but rather as a more gentle way to build up some pre-meal insulin activity. If your normal target is 100-110 mg/dL and pre-meal range is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually cancelled... whichever comes first. Setting an override will also cancel pre-meal range. Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time. Other Uses Some people prefer to use this as an easy way to raise the correction range for an hour.","title":"Pre-Meal Range"},{"location":"operation/features/premeal/#how-to-adjust-pre-meal-range","text":"Loop 3: In Loop Settings, select Therapy Settings and then tap on Pre-Meal Range to adjust If you prefer not to have that icon active on the Toolbar, you can tap Delete in the upper right corner of the adjustment screen Loop 2.2.x: In Loop settings, find the Correction Range section. The Correction Range sections stores all targets for Loop over the hours of the day, including Pre-Meal.","title":"How to Adjust Pre-Meal Range"},{"location":"operation/features/premeal/#assessing-the-impact-of-pre-meal","text":"The intent of the pre-meal icon on the toolbar is to provide an eating-soon mode in Loop . Do not set pre-meal limits to any hypoglycemic ranges that may require treatment. To mitigate the impact of unintentional pre-meal activation: If you are running Loop 3, you can delete the setting to deactivate the icon If you are running Loop 2.2.x, you can set the pre-meal range to the same value as your usual correction range Custom Pre-Meal Overrides Some loopers set up a custom override to use instead of the pre-meal icon. This allows enabling the override remotely with Nightscout, permits specifying a custom duration, and will keep the override enabled after carbs are announced.","title":"Assessing the impact of pre-meal"},{"location":"operation/features/watch/","text":"Apple Watch \u00b6 If you add an Apple Watch after building Loop, you will need to pair your watch to your iPhone and then rebuild Loop to enable the Loop watch app to show up as an available watch app. Loop is currently supported with all released versions of the Apple Watch and Apple watchOS 4.1 and newer. The cool factor is increased since the Loop user can directly enter carbs and boluses straight from the watch, without needing to access the iPhone. The Loop watch app shows the Loop status, current BG, eventual BG, carb tool, and bolus tool. By tapping on the carb or bolus tools, you can adjust the entries using the crown to dial in more/less. You can manually scroll to change the desired bolus amount, if you want to decrease/increase from recommended amount. If you swipe the Apple Watch Loop screen from right-to-left, a second screen is available. This second screen displays a graph of recent BG and predicted BG data. The crown can be turned to display IOB and COB as well. A loop complication exists to show BG on the watch face but the update rate is limited to ~30mins due to limitations imposed by Apple to increase battery life. If constant, real-time monitoring is desired, you should use the Loop app as the main screen. This can be achieved by setting the watch to always show the last opened app on wake. Loop will always have to be the last app opened for this to work. (Note: recent watchOS seems to be a bit flakey on actually bringing up the last app used, and instead often defaults to the user's watch face instead. If you have a Loop complication installed in the watch face, you can simply tap the complication to open Loop's watch app.)","title":"Apple Watch"},{"location":"operation/features/watch/#apple-watch","text":"If you add an Apple Watch after building Loop, you will need to pair your watch to your iPhone and then rebuild Loop to enable the Loop watch app to show up as an available watch app. Loop is currently supported with all released versions of the Apple Watch and Apple watchOS 4.1 and newer. The cool factor is increased since the Loop user can directly enter carbs and boluses straight from the watch, without needing to access the iPhone. The Loop watch app shows the Loop status, current BG, eventual BG, carb tool, and bolus tool. By tapping on the carb or bolus tools, you can adjust the entries using the crown to dial in more/less. You can manually scroll to change the desired bolus amount, if you want to decrease/increase from recommended amount. If you swipe the Apple Watch Loop screen from right-to-left, a second screen is available. This second screen displays a graph of recent BG and predicted BG data. The crown can be turned to display IOB and COB as well. A loop complication exists to show BG on the watch face but the update rate is limited to ~30mins due to limitations imposed by Apple to increase battery life. If constant, real-time monitoring is desired, you should use the Loop app as the main screen. This can be achieved by setting the watch to always show the last opened app on wake. Loop will always have to be the last app opened for this to work. (Note: recent watchOS seems to be a bit flakey on actually bringing up the last app used, and instead often defaults to the user's watch face instead. If you have a Loop complication installed in the watch face, you can simply tap the complication to open Loop's watch app.)","title":"Apple Watch"},{"location":"operation/features/widget/","text":"iPhone Widget \u00b6 Loop 3 \u00b6 An updated new-style Loop-dev widget is in process. There are a lot of updates with widgets. With the advent of iOS 16, you can add widgets that show up on the lock screen without need to swipe to view. There is work in progress on this - please be patient. Old-Style Loop Widget \u00b6 Loop 2.2.x and Loop-dev both include an old-style widget. With older versions of iOS , the widget is available in the Today view of your iPhone. Swipe right on your iPhone home screen and your widgets will be available. The Loop widget may be at the bottom of your widget list. Scroll down to the bottom of the screen and press the edit button. That opens an \"Add Widgets\" screen. If you hold and drag the three horizontal lines on the Loop widget row, you can drag it up to the order you'd like it to appear on your widget list. With newer version of iOS , the old-style widgets cannot be moved to the top of the screen. The example graphic below shows the new-style Dexcom G6 widget above the old-style Loop 3 widget. New to Loop or never added a widget before There is a difference in behavior between \"new-style\" Widgets and \"old-style\" Widgets New-Style Widgets: always appear at the top of your Today View, can be changed by long-pressing on one and then dragging around, or can be added with the + button in edit mode Old-Style Widgets, like that available with Loop: use a different method to install Make sure your phone is unlocked, then swipe from the Home Screen to get to Today View You can't edit the screen if you start from a locked phone Start the Edit mode (where all of the icons are shaking), either by long-pressing on one of the new-style widgets, or by scrolling all the way to the bottom of Today View and pressing Edit. Scroll all the way to the bottom again to find and select the button labeled \"Customize\" Now you can configure (add, remove, rearrange) the \"old-style\" widgets for your screen. The Loop widget should appear in the list available there. Experienced Looper who already had a widget should not need to modify anything to see it.","title":"iPhone widget"},{"location":"operation/features/widget/#iphone-widget","text":"","title":"iPhone Widget"},{"location":"operation/features/widget/#loop-3","text":"An updated new-style Loop-dev widget is in process. There are a lot of updates with widgets. With the advent of iOS 16, you can add widgets that show up on the lock screen without need to swipe to view. There is work in progress on this - please be patient.","title":"Loop 3"},{"location":"operation/features/widget/#old-style-loop-widget","text":"Loop 2.2.x and Loop-dev both include an old-style widget. With older versions of iOS , the widget is available in the Today view of your iPhone. Swipe right on your iPhone home screen and your widgets will be available. The Loop widget may be at the bottom of your widget list. Scroll down to the bottom of the screen and press the edit button. That opens an \"Add Widgets\" screen. If you hold and drag the three horizontal lines on the Loop widget row, you can drag it up to the order you'd like it to appear on your widget list. With newer version of iOS , the old-style widgets cannot be moved to the top of the screen. The example graphic below shows the new-style Dexcom G6 widget above the old-style Loop 3 widget. New to Loop or never added a widget before There is a difference in behavior between \"new-style\" Widgets and \"old-style\" Widgets New-Style Widgets: always appear at the top of your Today View, can be changed by long-pressing on one and then dragging around, or can be added with the + button in edit mode Old-Style Widgets, like that available with Loop: use a different method to install Make sure your phone is unlocked, then swipe from the Home Screen to get to Today View You can't edit the screen if you start from a locked phone Start the Edit mode (where all of the icons are shaking), either by long-pressing on one of the new-style widgets, or by scrolling all the way to the bottom of Today View and pressing Edit. Scroll all the way to the bottom again to find and select the button labeled \"Customize\" Now you can configure (add, remove, rearrange) the \"old-style\" widgets for your screen. The Loop widget should appear in the list available there. Experienced Looper who already had a widget should not need to modify anything to see it.","title":"Old-Style Loop Widget"},{"location":"operation/features/workout/","text":"Overrides \u00b6 Overrides let Loop know selected settings are modified for the duration of the override. The override can change either the correction range or the overall insulin needs or both. When you set an override on insulin needs, the override adjusts basal schedule, ISF , and CR together. Examples where this can be helpful include hormone cycles, steroid medications and/or exercise. Override presets are (1) optional and (2) can be configured within Loop's workout icon (the little blue heart icon in the Loop toolbar). Once override presets are created, they can be turned on/off by using the workout icon as well. How Overrides Work \u00b6 Overrides allow you to specify: an overall insulin needs adjustment a correction target range a duration in 15 minute increments (or indefinite) a start time The override requires your Loop gear be with you. For example, if Loop sets a zero temp basal rate based on an override and then you leave your gear behind; at the end of half an hour, your pump will resume scheduled insulin delivery. The overall insulin needs is applied to your basal rates, insulin sensitivities and carb ratios for the duration of the override. If the insulin needs is left at 100%, no change is made to basal rates, ISF or CR If you set an overall insulin needs adjustment below 100%, you are telling Loop you are more insulin sensitive and need a lighter touch. Loop uses basal rates decreased from scheduled rates Loop uses ISF and CR numbers increased from settings If you set an overall insulin needs adjustment above 100%, you are telling Loop you are less insulin sensitive and need a heavier touch. Loop uses basal rates increased from scheduled rates Loop uses ISF and CR numbers decreased from settings While the override is active, the modified basal rates, ISF and CR are applied for every correction and meal entry The target range replaces the correction range target for the duration of the override. If the target range is left blank, your scheduled correction range continues to be in effect If the target range is specified, that range is used instead of your scheduled correction range For an override to be accepted: You must change either insulin needs or target range A named override can be saved and used again To save the override, you must supply a name and an icon Named overrides can be set to occur at a scheduled time A Custom override is used only once Any override can be edited while it is active How Overrides Do NOT Work \u00b6 Overrides will work while you are Looping. Sounds obvious, right? But, the thing to remember is that the adjustments (multipliers) that overrides make are not saved back to your Medtronic pump or Omnipod . They only exist in the Loop app. If you walk away from iPhone and/or RileyLink ... If you stop Looping (i.e., walk away from your gear or glucose reading is stale), your existing temp basal will complete the remainder of whatever is left of its original 30 minutes and you will return to scheduled basal rates in your Therapy Settings . Your adjusted needs as set-up in any override will not continue if your Loop is not running properly. So you cannot set a 50% override and then hop in the ocean for a 2-mile swim without your iPhone and RileyLink and expect decreased basals of 50%. Just be aware that in situations where you need prolonged lower basals while away from Looping gear, you will need to edit your scheduled basals. Avoid Extreme Insulin Needs Setting \u00b6 There have been users who select a 10% overall insulin need. This is NOT the same as choosing a 10% temporary basal with the PDM. This changes your basal rates, ISF and CR by a factor of 10! Scenario for 10% Sensitivity User really wants insulin reduced and chooses 10% insulin need User doesn't think about the 10% and enters carbs while override is active Loop suggests a tiny bolus and user accepts User goes high because CR was 10 times higher than Therapy Setting Value User stays high because ISF is also 10 times higher than Therapy Setting Value Automated corrections are 10% of typical corrections Basal supplied is 10% of Therapy Setting value Loop suggests a tiny bolus and user manually boluses the amount they know the food needs User glucose may be normal BUT Loop predicts a negative eventual glucose (prediction only - this will never happen) Loop immediately withholds all basal until prediction normalizes Instead of selecting 10%, raise your correction range with a moderate needs adjustment. Loop tends to suspend insulin delivery via temp basals with the next CGM reading. If you feel the need to immediately halt insulin delivery, consider a Manual Temp Basal (Loop dev only) or suspend command to the pump and setting a reminder in your phone to resume insulin delivery later. Extreme Athletes Loopers should understand the extreme values and use them appropriately, typically for extreme or prolonged exercise. Create an Override Preset \u00b6 To create an override preset, tap on the workout icon. Then click the + sign in the upper right corner to start a new preset entry. You must select an emoji, name the preset and modify either the sensitivity or target range or both to save your new preset Pick an emoji Enter a name for the preset Optional: change insulin needs Default is 100% - no change to your settings You may use the picker wheel or Select 1% Sensitivity increments Optional: enter a target range If you do not enter a target range, Loop will use your existing scheduled target range Select whether you want the override to run indefinitely or for a finite time When you've made your selections, save the preset using the \"Save\" button in the upper right corner. Select 1% Sensitivity \u00b6 Not Available in 2.2.x This feature is only available in Loop 3 or later. Not available in Loop 2.2.x Not available in FreeAPS (based off Loop 2.2.x) The selectable Overall Insulin Needs values are not limited by the default picker values of 10%. When adjusting Needs, press and hold the \"orange\" bar, highlighted by the red rectangle in the graphic below Move your finger left and right to adjust by 1% Release to select desired level Activate an Override \u00b6 To enact your override preset, tap on the workout icon toolbar and select an override from your list of saved presets, create a new one or use the custom override for one-time use. The heart will be highlighted in a blue square while active and the HUD Status Row will indicate the active override name. The Glucose Chart will show a darker blue bar indicating the active target range and duration. Schedule an Override \u00b6 You can set up a future start time when selecting a saved override by tapping on the calendar icon to the right of the override. Adjust the \"Start time\" row. Tap the \"Enable\" button in the top right corner. A future override can be very helpful, for example, to set an exercise override the night before your workout. Set your exercise override to activate 2 hours before you wake up for your 5 am spin class. You'll wake up with less insulin on board and at your desired exercise targets, without needing to set an alarm even earlier. Deactivating an Override \u00b6 Tap the heart icon to turn off your override at any time. This happens without confirmation, so be sure to lock your phone when you have an override running to avoid accidentally turning it off. Override presets with a finite duration will automatically deactivate when the duration is over. Apple Watch \u00b6 Saved overrides can be turned on and off by tapping on the blue heart icon on your watch. Editing an Active Override \u00b6 Tap on the active override in the HUD Status Row with the phone in portrait orientation. This brings up a screen to edit the override currently running. This only affects this override during the current period. It is not saved to that named override. For example, you can extend the duration or modify the needs value or target value based on a temporary situation. Higher Priority Messages If the HUD Status Row is displaying a higher priority message, you must wait for that message to complete before you'll be able to edit an active override. If you want to edit an active override, you can choose to cancel an active bolus and edit the override immediately. The edited override will then be in effect for the next Loop cycle or manual recommendation. HUD Status Row messages with higher priority: Bolus starting, in-progress or canceling Pump suspended No recent glucose Remote Overrides \u00b6 You can also use your Nightscout site to activate/deactivate your Loop's override presets. To accomplish this, you will need to do some legwork as outlined on this page for how how to set up Remote Overrides in Nightscout and you will need to be using a paid Apple developer account. Remote overrides require Apple Push Notifications service, and that is only available on paid accounts.","title":"Overrides"},{"location":"operation/features/workout/#overrides","text":"Overrides let Loop know selected settings are modified for the duration of the override. The override can change either the correction range or the overall insulin needs or both. When you set an override on insulin needs, the override adjusts basal schedule, ISF , and CR together. Examples where this can be helpful include hormone cycles, steroid medications and/or exercise. Override presets are (1) optional and (2) can be configured within Loop's workout icon (the little blue heart icon in the Loop toolbar). Once override presets are created, they can be turned on/off by using the workout icon as well.","title":"Overrides"},{"location":"operation/features/workout/#how-overrides-work","text":"Overrides allow you to specify: an overall insulin needs adjustment a correction target range a duration in 15 minute increments (or indefinite) a start time The override requires your Loop gear be with you. For example, if Loop sets a zero temp basal rate based on an override and then you leave your gear behind; at the end of half an hour, your pump will resume scheduled insulin delivery. The overall insulin needs is applied to your basal rates, insulin sensitivities and carb ratios for the duration of the override. If the insulin needs is left at 100%, no change is made to basal rates, ISF or CR If you set an overall insulin needs adjustment below 100%, you are telling Loop you are more insulin sensitive and need a lighter touch. Loop uses basal rates decreased from scheduled rates Loop uses ISF and CR numbers increased from settings If you set an overall insulin needs adjustment above 100%, you are telling Loop you are less insulin sensitive and need a heavier touch. Loop uses basal rates increased from scheduled rates Loop uses ISF and CR numbers decreased from settings While the override is active, the modified basal rates, ISF and CR are applied for every correction and meal entry The target range replaces the correction range target for the duration of the override. If the target range is left blank, your scheduled correction range continues to be in effect If the target range is specified, that range is used instead of your scheduled correction range For an override to be accepted: You must change either insulin needs or target range A named override can be saved and used again To save the override, you must supply a name and an icon Named overrides can be set to occur at a scheduled time A Custom override is used only once Any override can be edited while it is active","title":"How Overrides Work"},{"location":"operation/features/workout/#how-overrides-do-not-work","text":"Overrides will work while you are Looping. Sounds obvious, right? But, the thing to remember is that the adjustments (multipliers) that overrides make are not saved back to your Medtronic pump or Omnipod . They only exist in the Loop app. If you walk away from iPhone and/or RileyLink ... If you stop Looping (i.e., walk away from your gear or glucose reading is stale), your existing temp basal will complete the remainder of whatever is left of its original 30 minutes and you will return to scheduled basal rates in your Therapy Settings . Your adjusted needs as set-up in any override will not continue if your Loop is not running properly. So you cannot set a 50% override and then hop in the ocean for a 2-mile swim without your iPhone and RileyLink and expect decreased basals of 50%. Just be aware that in situations where you need prolonged lower basals while away from Looping gear, you will need to edit your scheduled basals.","title":"How Overrides Do NOT Work"},{"location":"operation/features/workout/#avoid-extreme-insulin-needs-setting","text":"There have been users who select a 10% overall insulin need. This is NOT the same as choosing a 10% temporary basal with the PDM. This changes your basal rates, ISF and CR by a factor of 10! Scenario for 10% Sensitivity User really wants insulin reduced and chooses 10% insulin need User doesn't think about the 10% and enters carbs while override is active Loop suggests a tiny bolus and user accepts User goes high because CR was 10 times higher than Therapy Setting Value User stays high because ISF is also 10 times higher than Therapy Setting Value Automated corrections are 10% of typical corrections Basal supplied is 10% of Therapy Setting value Loop suggests a tiny bolus and user manually boluses the amount they know the food needs User glucose may be normal BUT Loop predicts a negative eventual glucose (prediction only - this will never happen) Loop immediately withholds all basal until prediction normalizes Instead of selecting 10%, raise your correction range with a moderate needs adjustment. Loop tends to suspend insulin delivery via temp basals with the next CGM reading. If you feel the need to immediately halt insulin delivery, consider a Manual Temp Basal (Loop dev only) or suspend command to the pump and setting a reminder in your phone to resume insulin delivery later. Extreme Athletes Loopers should understand the extreme values and use them appropriately, typically for extreme or prolonged exercise.","title":"Avoid Extreme Insulin Needs Setting"},{"location":"operation/features/workout/#create-an-override-preset","text":"To create an override preset, tap on the workout icon. Then click the + sign in the upper right corner to start a new preset entry. You must select an emoji, name the preset and modify either the sensitivity or target range or both to save your new preset Pick an emoji Enter a name for the preset Optional: change insulin needs Default is 100% - no change to your settings You may use the picker wheel or Select 1% Sensitivity increments Optional: enter a target range If you do not enter a target range, Loop will use your existing scheduled target range Select whether you want the override to run indefinitely or for a finite time When you've made your selections, save the preset using the \"Save\" button in the upper right corner.","title":"Create an Override Preset"},{"location":"operation/features/workout/#select-1-sensitivity","text":"Not Available in 2.2.x This feature is only available in Loop 3 or later. Not available in Loop 2.2.x Not available in FreeAPS (based off Loop 2.2.x) The selectable Overall Insulin Needs values are not limited by the default picker values of 10%. When adjusting Needs, press and hold the \"orange\" bar, highlighted by the red rectangle in the graphic below Move your finger left and right to adjust by 1% Release to select desired level","title":"Select 1% Sensitivity"},{"location":"operation/features/workout/#activate-an-override","text":"To enact your override preset, tap on the workout icon toolbar and select an override from your list of saved presets, create a new one or use the custom override for one-time use. The heart will be highlighted in a blue square while active and the HUD Status Row will indicate the active override name. The Glucose Chart will show a darker blue bar indicating the active target range and duration.","title":"Activate an Override"},{"location":"operation/features/workout/#schedule-an-override","text":"You can set up a future start time when selecting a saved override by tapping on the calendar icon to the right of the override. Adjust the \"Start time\" row. Tap the \"Enable\" button in the top right corner. A future override can be very helpful, for example, to set an exercise override the night before your workout. Set your exercise override to activate 2 hours before you wake up for your 5 am spin class. You'll wake up with less insulin on board and at your desired exercise targets, without needing to set an alarm even earlier.","title":"Schedule an Override"},{"location":"operation/features/workout/#deactivating-an-override","text":"Tap the heart icon to turn off your override at any time. This happens without confirmation, so be sure to lock your phone when you have an override running to avoid accidentally turning it off. Override presets with a finite duration will automatically deactivate when the duration is over.","title":"Deactivating an Override"},{"location":"operation/features/workout/#apple-watch","text":"Saved overrides can be turned on and off by tapping on the blue heart icon on your watch.","title":"Apple Watch"},{"location":"operation/features/workout/#editing-an-active-override","text":"Tap on the active override in the HUD Status Row with the phone in portrait orientation. This brings up a screen to edit the override currently running. This only affects this override during the current period. It is not saved to that named override. For example, you can extend the duration or modify the needs value or target value based on a temporary situation. Higher Priority Messages If the HUD Status Row is displaying a higher priority message, you must wait for that message to complete before you'll be able to edit an active override. If you want to edit an active override, you can choose to cancel an active bolus and edit the override immediately. The edited override will then be in effect for the next Loop cycle or manual recommendation. HUD Status Row messages with higher priority: Bolus starting, in-progress or canceling Pump suspended No recent glucose","title":"Editing an Active Override"},{"location":"operation/features/workout/#remote-overrides","text":"You can also use your Nightscout site to activate/deactivate your Loop's override presets. To accomplish this, you will need to do some legwork as outlined on this page for how how to set up Remote Overrides in Nightscout and you will need to be using a paid Apple developer account. Remote overrides require Apple Push Notifications service, and that is only available on paid accounts.","title":"Remote Overrides"},{"location":"operation/loop/close-loop/","text":"Closed-Loop \u00b6 After you learn what you need from open-loop, this page provides suggestions to smooth the transition to closed loop. Timing \u00b6 Consider transitioning in steps. Some loopers start closed-loop when there are fewer distractions, possibly on weekends. It can be easier to transition at a time that does not involve food, possibly overnight. Maximum Basal Rate \u00b6 When starting closed-loop, it is important to be conservative. Start with the \" Temp Basal Only \" dosing strategy and limit the maximum basal rate. If your Meal Entries or Therapy Settings (basal rates, CR , ISF ) are incorrect, this approach limits the risk of getting too much insulin. Typically, experienced loopers set their max closed-loop basal rate at no more than 3-4 times their average basal rate. Wait until you are comfortable with the slower corrections in \" Temp Basal Only \" before transitioning to \" Automatic Bolus \". Temp Basal Only vs Automatic Bolus Both Dosing Strategy methods update the prediction with each CGM or glucose reading, typically every 5 minutes, and uses the updated prediction to generate a recommended bolus or recommended dosing restriction. \" Temp Basal Only \" provides no more than 17% (per 5 minute interval) of that recommended bolus using temporary basal \" Automatic Bolus \" mode provides 40% of that recommended bolus as an immediate bolus When Loop recommends restricting insulin, both methods use temporary basals that are less than the scheduled basal, often commanding a temp basal of 0 U/hr Glucose Correction Range \u00b6 If your basal, ISF , or carb ratios are not correct, Loop may give you more insulin than you need to reach the correction you selected. Setting the correction range slightly higher at first helps prevent unexpected low glucose as you adjust your settings. Watch the IOB \u00b6 Watch whether Loop accumulates positive or negative IOB while holding your glucose steady when no food is present. If you consistently have positive or negative IOB , review whether to adjust your basal rate or ISF . Expert Tip In the absence of food, glucose trends should flatten out when positive or negative IOB trends to zero. If glucose drops below the correction range and continues to drop while IOB goes negative, basal rates may be too high If glucose remains above the correction range while IOB remains positive, basal rates may be too low The ISF is also important, but basal should be evaluated first. Meals \u00b6 Start with meals that you know well. If Loop suggests less or more insulin than expected as a bolus before the meal - consider why this may be true. If glucose is trending down, Loop may be trying to prevent a low glucose event If glucose is trending up, Loop may be trying to add a correction to the meal dose In any case: You can adjust the absorption time and carb amount to see if that modifies the suggested bolus You can override the Loop suggestion Do not be surprised if Loop immediately suspends basal Loop needs to see glucose start to rise before deciding you need more insulin after the initial meal bolus recommendation Loop will not automatically provide more insulin until your glucose is above the lower range of the correction range (but will recommend a manual bolus) This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you. Test, observe, and adjust as needed.","title":"Closed Loop"},{"location":"operation/loop/close-loop/#closed-loop","text":"After you learn what you need from open-loop, this page provides suggestions to smooth the transition to closed loop.","title":"Closed-Loop"},{"location":"operation/loop/close-loop/#timing","text":"Consider transitioning in steps. Some loopers start closed-loop when there are fewer distractions, possibly on weekends. It can be easier to transition at a time that does not involve food, possibly overnight.","title":"Timing"},{"location":"operation/loop/close-loop/#maximum-basal-rate","text":"When starting closed-loop, it is important to be conservative. Start with the \" Temp Basal Only \" dosing strategy and limit the maximum basal rate. If your Meal Entries or Therapy Settings (basal rates, CR , ISF ) are incorrect, this approach limits the risk of getting too much insulin. Typically, experienced loopers set their max closed-loop basal rate at no more than 3-4 times their average basal rate. Wait until you are comfortable with the slower corrections in \" Temp Basal Only \" before transitioning to \" Automatic Bolus \". Temp Basal Only vs Automatic Bolus Both Dosing Strategy methods update the prediction with each CGM or glucose reading, typically every 5 minutes, and uses the updated prediction to generate a recommended bolus or recommended dosing restriction. \" Temp Basal Only \" provides no more than 17% (per 5 minute interval) of that recommended bolus using temporary basal \" Automatic Bolus \" mode provides 40% of that recommended bolus as an immediate bolus When Loop recommends restricting insulin, both methods use temporary basals that are less than the scheduled basal, often commanding a temp basal of 0 U/hr","title":"Maximum Basal Rate"},{"location":"operation/loop/close-loop/#glucose-correction-range","text":"If your basal, ISF , or carb ratios are not correct, Loop may give you more insulin than you need to reach the correction you selected. Setting the correction range slightly higher at first helps prevent unexpected low glucose as you adjust your settings.","title":"Glucose Correction Range"},{"location":"operation/loop/close-loop/#watch-the-iob","text":"Watch whether Loop accumulates positive or negative IOB while holding your glucose steady when no food is present. If you consistently have positive or negative IOB , review whether to adjust your basal rate or ISF . Expert Tip In the absence of food, glucose trends should flatten out when positive or negative IOB trends to zero. If glucose drops below the correction range and continues to drop while IOB goes negative, basal rates may be too high If glucose remains above the correction range while IOB remains positive, basal rates may be too low The ISF is also important, but basal should be evaluated first.","title":"Watch the IOB"},{"location":"operation/loop/close-loop/#meals","text":"Start with meals that you know well. If Loop suggests less or more insulin than expected as a bolus before the meal - consider why this may be true. If glucose is trending down, Loop may be trying to prevent a low glucose event If glucose is trending up, Loop may be trying to add a correction to the meal dose In any case: You can adjust the absorption time and carb amount to see if that modifies the suggested bolus You can override the Loop suggestion Do not be surprised if Loop immediately suspends basal Loop needs to see glucose start to rise before deciding you need more insulin after the initial meal bolus recommendation Loop will not automatically provide more insulin until your glucose is above the lower range of the correction range (but will recommend a manual bolus) This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you. Test, observe, and adjust as needed.","title":"Meals"},{"location":"operation/loop/looptips/","text":"Loop Tips \u00b6 These docs are a great resource for the technical aspects of building your Loop app. However, they don't really cover in detail a lot of the frequently asked questions about USING Loop. Things such as: How to enter low treatments while using Loop? What to discuss with your Endo? What data reports might be useful? How to deal with failed sites? What about pizza boluses? What do I do when I shower or swim? All of those usability questions and more are addressed over in the companion site called LoopTips . Please head over to Looptips in order to read some really helpful tips to make your Looping easier.","title":"Loop Tips"},{"location":"operation/loop/looptips/#loop-tips","text":"These docs are a great resource for the technical aspects of building your Loop app. However, they don't really cover in detail a lot of the frequently asked questions about USING Loop. Things such as: How to enter low treatments while using Loop? What to discuss with your Endo? What data reports might be useful? How to deal with failed sites? What about pizza boluses? What do I do when I shower or swim? All of those usability questions and more are addressed over in the companion site called LoopTips . Please head over to Looptips in order to read some really helpful tips to make your Looping easier.","title":"Loop Tips"},{"location":"operation/loop/open-loop/","text":"Open Loop \u00b6 Open Loop Introduction \u00b6 Open Loop is the best place to start with Loop. Become familiar with Loop by watching it operate with Closed Loop disabled. Take it slow and safe to become a successful Looper. Practice with Simulators You can build Loop without connecting it to any hardware. You can use your phone, a partner's phone or a simulated phone on the computer You can practice with a simulated CGM and / or a simulated pump. You can use Dexcom Share or Nightscout as a CGM to follow your own glucose. You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions. Loop 2 - Open Loop \u00b6 Loop 2 SAFETY WARNING When you are operating in Open Loop mode, Loop 2.2.x (or FreeAPS) offers recommendations for insulin delivery adjustment and displays them on the HUD . If you tap on the recommendation line, Loop applies that recommendation without asking for confirmation This is true for temp basal and automatic bolus To protect against accidental command of increased or decreased insulin dosing, make sure your phone is locked when not in use Glucose Prediction \u00b6 Pay attention to the prediction in the Glucose Chart Loop 3 / Loop 2 . Practice with the user interface while you manually control your insulin delivery. Compare the recommended insulin after entering carbs for a familiar meal. If you do not understand the predictions or recommendations, do not enable Closed Loop . You may need to adjust settings or learn more about how the app works. Loop tries to keep predicted glucose in the Correction Range and, more importantly, above your Glucose Safety Limit (suspend threshold in Loop 2.2.x). There's a lot to learn and understand. New loopers may need to adjust the following Therapy Settings , typically in this order: Basal Rates Insulin Sensitivity Factor ( ISF ) Carb Ratios ( CR ) Using an algorithm that updates glucose predictions and adjusts insulin delivery every 5 minutes requires accurate settings. Entering carbs and absorption time is a new skill that takes time to master. Eventual Glucose \u00b6 Watch the eventual glucose, current glucose and prediction curve in the Glucose Chart Loop 3 / Loop 2 to understand Loop recommendations for insulin delivery adjustment. Loop is looking at current glucose, glucose momentum, carbs on board, insulin on board, and retrospective trends to predict an eventual glucose. Its current decisions are based on predicted, actual and eventual glucose. If there is a dip in the predicted glucose below the Glucose Safety Limit , Loop will not recommend insulin even if the eventual glucose is above your Correction Range . In Closed Loop mode, Loop automatically decreases insulin delivery using a temp basal of 0 U/hr until the predicted glucose exceeds the Glucose Safety Limit When you tap on the Bolus icon in the Toolbar, Loop recommends insulin delivery only after predicted glucose is above Glucose Safety Limit In Closed Loop mode, Loop automatically increases insulin delivery only after predicted glucose is above the bottom of the Correction Range If the Loop predictions don't match your experience, your settings may need to be adjusted. Testing \u00b6 Open Loop mode shows you glucose trends without the influence of temp-basal or automatic-bolus from Loop. This is particularly helpful if you haven't used Medtronic sites/pumps or Omnipod prior to Loop. You may find that your basal rates and carb ratios can change significantly coming from other brands of pumps or from multiple daily injections (MDI). Take the time to establish a good basal profile using the pump you plan to use for Loop while in Open Loop mode. Test your insulin sensitivity factor ( ISF ) during Open Loop after your basal rates are established. Loop uses your ISF every 5 minutes to update predictions, so it's worth testing before turning on automated insulin dosing with Closed Loop mode. Meal Entry \u00b6 Loop recommends increased insulin dosing as soon as you save carbs. Meal Entry is an important concept - there's a whole page devoted to it - but here's a quick summary. You tap on the plate icon in the Toolbar to start a meal entry. Meal Entry: In the Add Carb Entry screen, you must enter Amount Consumed, defaults are ok for other rows The meal entry is not saved when you tap continue - Loop takes you to the Meal Bolus screen In the Meal Bolus screen, you can save the carbs and accept or override the recommended bolus Review the recommended bolus for the carb entry Does the recommendation make sense based on your prior experience Pay attention to the glucose prediction chart embedded in the Meal Bolus tool Practice modifying when the carbs are expected and how long they are expected to last Practice modifying the bolus recommendation - note how the prediction changes When you are confident, you can save the carbs and deliver the bolus Carb Absorption \u00b6 Loop uses carb absorption as a component to every meal entry. Watch your meals and try to estimate how long they impact your glucose for various types of food. Notice when Loop would suspend basal or increase insulin delivery and ask yourself why it would be doing that. Ask if this is the same decision you would make. This effort will help smooth the transition to closed loop. Manual (or Correction) Bolus \u00b6 At any time, you can enter a bolus using the Bolus (double orange triangles) icon in the Toolbar. Loop offers a recommendation if the glucose prediction supports one. Review the Eventual Glucose section above to understand when Loop will recommend a bolus. The Loop recommendation can be modified by editing the Bolus amount. More detail is provided at this link . Troubleshooting \u00b6 If you use a RileyLink , determine how far the link can be from your phone and pump, and plan where to carry the link. DASH Omnipod users do not need the RileyLink but should determine how far their phone can be from the pod without communication problems. Learn to troubleshoot Red Loops and the cause of potential loop issues. You'll be less frustrated starting on closed loop if you know how to address these issues Familiarize yourself with the \"Bolus May Have Failed\" notifications and how to handle them. Double-check the displays to verify that the bolus didn't enact before trying to give the bolus again. Caregiver training \u00b6 Caregivers for Loopers should learn how to use Loop. Consider giving caregivers an individualized quick info sheet on Loop. School staff or your child need to know how to handle a site change at school. Try to watch Nightscout while you get to know Loop so that you can become better at remote troubleshooting problems you might encounter.","title":"Open Loop"},{"location":"operation/loop/open-loop/#open-loop","text":"","title":"Open Loop"},{"location":"operation/loop/open-loop/#open-loop-introduction","text":"Open Loop is the best place to start with Loop. Become familiar with Loop by watching it operate with Closed Loop disabled. Take it slow and safe to become a successful Looper. Practice with Simulators You can build Loop without connecting it to any hardware. You can use your phone, a partner's phone or a simulated phone on the computer You can practice with a simulated CGM and / or a simulated pump. You can use Dexcom Share or Nightscout as a CGM to follow your own glucose. You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions.","title":"Open Loop Introduction"},{"location":"operation/loop/open-loop/#glucose-prediction","text":"Pay attention to the prediction in the Glucose Chart Loop 3 / Loop 2 . Practice with the user interface while you manually control your insulin delivery. Compare the recommended insulin after entering carbs for a familiar meal. If you do not understand the predictions or recommendations, do not enable Closed Loop . You may need to adjust settings or learn more about how the app works. Loop tries to keep predicted glucose in the Correction Range and, more importantly, above your Glucose Safety Limit (suspend threshold in Loop 2.2.x). There's a lot to learn and understand. New loopers may need to adjust the following Therapy Settings , typically in this order: Basal Rates Insulin Sensitivity Factor ( ISF ) Carb Ratios ( CR ) Using an algorithm that updates glucose predictions and adjusts insulin delivery every 5 minutes requires accurate settings. Entering carbs and absorption time is a new skill that takes time to master.","title":"Glucose Prediction"},{"location":"operation/loop/open-loop/#eventual-glucose","text":"Watch the eventual glucose, current glucose and prediction curve in the Glucose Chart Loop 3 / Loop 2 to understand Loop recommendations for insulin delivery adjustment. Loop is looking at current glucose, glucose momentum, carbs on board, insulin on board, and retrospective trends to predict an eventual glucose. Its current decisions are based on predicted, actual and eventual glucose. If there is a dip in the predicted glucose below the Glucose Safety Limit , Loop will not recommend insulin even if the eventual glucose is above your Correction Range . In Closed Loop mode, Loop automatically decreases insulin delivery using a temp basal of 0 U/hr until the predicted glucose exceeds the Glucose Safety Limit When you tap on the Bolus icon in the Toolbar, Loop recommends insulin delivery only after predicted glucose is above Glucose Safety Limit In Closed Loop mode, Loop automatically increases insulin delivery only after predicted glucose is above the bottom of the Correction Range If the Loop predictions don't match your experience, your settings may need to be adjusted.","title":"Eventual Glucose"},{"location":"operation/loop/open-loop/#testing","text":"Open Loop mode shows you glucose trends without the influence of temp-basal or automatic-bolus from Loop. This is particularly helpful if you haven't used Medtronic sites/pumps or Omnipod prior to Loop. You may find that your basal rates and carb ratios can change significantly coming from other brands of pumps or from multiple daily injections (MDI). Take the time to establish a good basal profile using the pump you plan to use for Loop while in Open Loop mode. Test your insulin sensitivity factor ( ISF ) during Open Loop after your basal rates are established. Loop uses your ISF every 5 minutes to update predictions, so it's worth testing before turning on automated insulin dosing with Closed Loop mode.","title":"Testing"},{"location":"operation/loop/open-loop/#meal-entry","text":"Loop recommends increased insulin dosing as soon as you save carbs. Meal Entry is an important concept - there's a whole page devoted to it - but here's a quick summary. You tap on the plate icon in the Toolbar to start a meal entry. Meal Entry: In the Add Carb Entry screen, you must enter Amount Consumed, defaults are ok for other rows The meal entry is not saved when you tap continue - Loop takes you to the Meal Bolus screen In the Meal Bolus screen, you can save the carbs and accept or override the recommended bolus Review the recommended bolus for the carb entry Does the recommendation make sense based on your prior experience Pay attention to the glucose prediction chart embedded in the Meal Bolus tool Practice modifying when the carbs are expected and how long they are expected to last Practice modifying the bolus recommendation - note how the prediction changes When you are confident, you can save the carbs and deliver the bolus","title":"Meal Entry"},{"location":"operation/loop/open-loop/#carb-absorption","text":"Loop uses carb absorption as a component to every meal entry. Watch your meals and try to estimate how long they impact your glucose for various types of food. Notice when Loop would suspend basal or increase insulin delivery and ask yourself why it would be doing that. Ask if this is the same decision you would make. This effort will help smooth the transition to closed loop.","title":"Carb Absorption"},{"location":"operation/loop/open-loop/#manual-or-correction-bolus","text":"At any time, you can enter a bolus using the Bolus (double orange triangles) icon in the Toolbar. Loop offers a recommendation if the glucose prediction supports one. Review the Eventual Glucose section above to understand when Loop will recommend a bolus. The Loop recommendation can be modified by editing the Bolus amount. More detail is provided at this link .","title":"Manual (or Correction) Bolus"},{"location":"operation/loop/open-loop/#troubleshooting","text":"If you use a RileyLink , determine how far the link can be from your phone and pump, and plan where to carry the link. DASH Omnipod users do not need the RileyLink but should determine how far their phone can be from the pod without communication problems. Learn to troubleshoot Red Loops and the cause of potential loop issues. You'll be less frustrated starting on closed loop if you know how to address these issues Familiarize yourself with the \"Bolus May Have Failed\" notifications and how to handle them. Double-check the displays to verify that the bolus didn't enact before trying to give the bolus again.","title":"Troubleshooting"},{"location":"operation/loop/open-loop/#caregiver-training","text":"Caregivers for Loopers should learn how to use Loop. Consider giving caregivers an individualized quick info sheet on Loop. School staff or your child need to know how to handle a site change at school. Try to watch Nightscout while you get to know Loop so that you can become better at remote troubleshooting problems you might encounter.","title":"Caregiver training"},{"location":"operation/loop-settings/cgm/","text":"Add CGM \u00b6 Now we need to add a CGM source so that Loop has BG data. From the Loop settings screen, select Add CGM . The standard selections available will be: Dexcom G6 Dexcom G5 Dexcom G4 Dexcom Share If you added a compatible Medtronic pump earlier in the setup process, then you will also see an option for the compatible Medtronic sensor that works with that same pump. If you are using a compatible MDT sensor, select that option and the CGM data will be uploaded to Loop when pump status is updated. About Dexcom Share credentials \u00b6 You do NOT need your Share account info listed in Loop settings if you are using a G4, G5, or G6 system. The transmitter ID is sufficient. In fact, the recommendation is that you leave your Share account empty so that you don't accidentally become internet-dependent for CGM data when you forget to update your transmitter ID when you start a new transmitter. Just leave the Share credentials blank. If you need to use Dexcom Share If the dexcom is on another phone and you choose to use Share (not advised), here is some information. For all selections, the Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. For G4 users, the Share account is found in the account tab on the app. For G5/G6 users, unfortunately, there is no information in the app displaying what your account name is. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress. If you do not enter your Share credentials correctly, you will get an error when Loop tries to access your Share account to backfill CGM data. That error message will look like below. If you see that message, delete your Share account from Loop settings and try again...or just leave it out and depend on your transmitter ID. Dexcom G5 and G6 \u00b6 The Dexcom G5 and G6 options only require the addition of the active transmitter ID, and the matching Dexcom app to be running on the Loop iPhone. When you change transmitters, you will need to select the Delete CGM button at the very bottom of the CGM info page in Loop. Then you will select your Dexcom system again and add the new transmitter ID. You cannot just tap on your old transmitter ID to update it. If you don't update your transmitter ID when you change active transmitters, your Loop will not get CGM data from the Dexcom app. If you did add Share credential, Loop will get data from your Dexcom Share server and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the BG reading in Loop and should tip you off that maybe you forgot to update your transmitter ID. Dexcom G4 \u00b6 Dexcom G4 users will need the Dexcom G4 Share2 app active on their iPhone and paired to their Dexcom G4 Share receiver. Dexcom Share \u00b6 The Dexcom Share selection is primarily for people who wish to test Loop function without a local CGM source and who are not running the Dexcom app on their Loop iPhone. This selection will require login access to a Dexcom Share account with live data and active internet connection in order to work. Spike Users \u00b6 Users who are using Spike app to access other CGM types (or to avoid using the Dexcom app), you will need to follow the directions contained within the Spike app in order to build/modify Loop with Spike. Loop does not natively support Spike app and does not currently plan to. You are responsible for modifying or adapting Loop in order to use Spike so that it is an available option as a CGM source. Next Step: Configuration \u00b6 Now that you have added your CGM source, we need to complete the configuration and settings in your Loop. Please head over to the Configuration page for guidance with this important part of Loop's setup.","title":"Step 3: Add CGM"},{"location":"operation/loop-settings/cgm/#add-cgm","text":"Now we need to add a CGM source so that Loop has BG data. From the Loop settings screen, select Add CGM . The standard selections available will be: Dexcom G6 Dexcom G5 Dexcom G4 Dexcom Share If you added a compatible Medtronic pump earlier in the setup process, then you will also see an option for the compatible Medtronic sensor that works with that same pump. If you are using a compatible MDT sensor, select that option and the CGM data will be uploaded to Loop when pump status is updated.","title":"Add CGM"},{"location":"operation/loop-settings/cgm/#about-dexcom-share-credentials","text":"You do NOT need your Share account info listed in Loop settings if you are using a G4, G5, or G6 system. The transmitter ID is sufficient. In fact, the recommendation is that you leave your Share account empty so that you don't accidentally become internet-dependent for CGM data when you forget to update your transmitter ID when you start a new transmitter. Just leave the Share credentials blank. If you need to use Dexcom Share If the dexcom is on another phone and you choose to use Share (not advised), here is some information. For all selections, the Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. For G4 users, the Share account is found in the account tab on the app. For G5/G6 users, unfortunately, there is no information in the app displaying what your account name is. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress. If you do not enter your Share credentials correctly, you will get an error when Loop tries to access your Share account to backfill CGM data. That error message will look like below. If you see that message, delete your Share account from Loop settings and try again...or just leave it out and depend on your transmitter ID.","title":"About Dexcom Share credentials"},{"location":"operation/loop-settings/cgm/#dexcom-g5-and-g6","text":"The Dexcom G5 and G6 options only require the addition of the active transmitter ID, and the matching Dexcom app to be running on the Loop iPhone. When you change transmitters, you will need to select the Delete CGM button at the very bottom of the CGM info page in Loop. Then you will select your Dexcom system again and add the new transmitter ID. You cannot just tap on your old transmitter ID to update it. If you don't update your transmitter ID when you change active transmitters, your Loop will not get CGM data from the Dexcom app. If you did add Share credential, Loop will get data from your Dexcom Share server and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the BG reading in Loop and should tip you off that maybe you forgot to update your transmitter ID.","title":"Dexcom G5 and G6"},{"location":"operation/loop-settings/cgm/#dexcom-g4","text":"Dexcom G4 users will need the Dexcom G4 Share2 app active on their iPhone and paired to their Dexcom G4 Share receiver.","title":"Dexcom G4"},{"location":"operation/loop-settings/cgm/#dexcom-share","text":"The Dexcom Share selection is primarily for people who wish to test Loop function without a local CGM source and who are not running the Dexcom app on their Loop iPhone. This selection will require login access to a Dexcom Share account with live data and active internet connection in order to work.","title":"Dexcom Share"},{"location":"operation/loop-settings/cgm/#spike-users","text":"Users who are using Spike app to access other CGM types (or to avoid using the Dexcom app), you will need to follow the directions contained within the Spike app in order to build/modify Loop with Spike. Loop does not natively support Spike app and does not currently plan to. You are responsible for modifying or adapting Loop in order to use Spike so that it is an available option as a CGM source.","title":"Spike Users"},{"location":"operation/loop-settings/cgm/#next-step-configuration","text":"Now that you have added your CGM source, we need to complete the configuration and settings in your Loop. Please head over to the Configuration page for guidance with this important part of Loop's setup.","title":"Next Step: Configuration"},{"location":"operation/loop-settings/configurations/","text":"Configuration \u00b6 This page will cover two general parts of the Loop's settings, circled in red in the screenshot below. The headings will match the flow of the screen, top to bottom. The first circled section covers your Loop's closed/open loop status and Loop's Issue Report. The second circled section is the configuration section. This section contains a lot of really important settings that control how your Loop will calculate your predicted BG curve. Given the importance of your predicted BG curve to Loop's actions, please make sure you read over this page carefully to know how to navigate the selections and entries. Closed/ Open Loop \u00b6 The Closed Loop switch controls whether Loop automatically enacts its recommended temporary basal adjustments (closed loop mode) or whether you have to manually tap to enact the recommendations (open loop mode). In addition to the visual indicator on this switch discussed below, the Loop's status icon on the main screen will also appear differently depending on the mode selected. Open loop mode will have an incomplete circle for the Loop's status icon. Open Loop Mode \u00b6 When the Closed Loop switch is in the (Off ) position, Loop WILL NOT enact recommended temp basals automatically. Instead, Loop will display recommended temp basals on the main status display, just above the blood glucose graph. This is called open loop , and is a good way to understand how Loop will function, and what type of recommendations it would make. If you click on the recommended temp basal line while in open loop mode, Loop will implement the temp basal. Closed Loop Mode \u00b6 When the Closed Loop switch is in the ( On) position, Loop WILL automatically enact recommended temp basals on the configured insulin pump. This is known as closed loop . Typically, Loop will show the recommended temp basal just above the blood glucose graph prior to automatically enacting it. It may take a minute or so for the Loop to enact the recommended basal. Once the temp basal has been enacted successfully on the pump, the recommended temp basal will disappear from the screen and the new temp basal rate will be represented in the insulin delivery graphs. Issue Report \u00b6 If you run into problems or errors with your Loop, an Issue Report can be used to help identify where the problem is occurring. The Issue Report is automatically generated and you can share it via email. Frequently, if you seek help with a technical problem, an Issue Report will provide insight for the developers and troubleshooters. Please email yourself an Issue Report anytime you are questioning Loop actions or displays. You can then use that Issue Report later to help debug the problem. Select BG Units \u00b6 Before you continue further, a word about BG units Entries into the configuration section will be available in mg/dL or mmol/L automatically, based upon how your blood glucose values are received. By default they are set to mg/dL, however once CGM values arrive in mmol/L these Loop settings can be entered in mmol/L. If you are planning to use mmol/L, be sure to wait to set your entries until after you have started to receive CGM values in Loop. If you do these in the wrong order, then your charts and entries may have incorrect units. Correction Range \u00b6 The correction range is your blood glucose range that you would like Loop to correct to. Correction range is not necessarily the same target blood glucose range that you have discussed with your endocrinologist; generally the doctor's range may be much wider. For example, you may keep a correction target of 100-110 for Loop to aim to, but use a desired BG target range of 80-180 when discussing things with your endo about \"time in range\". Click the + in the upper right corner to add correction BG range(s). You can have multiple ranges based on time of day, but the first setting of the day needs to begin at midnight. Correction ranges can be a single number, such as 100-100 mg/dL, or a range such as 100-120 mg/dL. Generally speaking, if you choose to use a range, keeping the range between about 10-30 mg/dL between the lowest and highest value is a good starting place. Pre-Meal Range \u00b6 Below the Correction Range entry is a section called \"Overrides\" with a Pre-Meal setting. While active, the pre-meal targets will replace the usual correction range for Loop's temp basal recommendations. If a pre-meal range is not entered in this section, the icon will remain grey and unusable on the main screen's toolbar. The pre-meal override target can be used to as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes. If your normal target is 100-110 mg/dL and pre-meal target is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal target, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first. Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time. Suspend Threshold \u00b6 The suspend threshold must be set up for successful configuration of Loop. Your Loop will not turn green without setting this value. This value affects both bolus and basal recommendations by Loop. Bolus \u00b6 If you are trying to bolus a meal while any part of the predicted BG curve is below this suspend threshold value, Loop will not recommend a bolus. Instead, you will need to wait until your prediction curve is above the suspend threshold value in order to bolus. Basal \u00b6 If your current or any point on your predicted BG curve is below the suspend threshold, Loop will always recommend a temporary basal rate of 0 U/hr. Reasonable settings for suspend threshold will depend on user preference, but recommended not set lower than 65 mg/dL. Basal Rates \u00b6 Note: You cannot enter basal rates until you first add a pump in Loop settings. Your basal rates will be initially populated when you walk through the Add Pump part of the setup at the beginning of this setup guide. Only one basal schedule may be set in each Loop app. The basal increments are available according to the increments of the particular pump/pod you are using. Not all pumps provide the same increments for basal deliveries. Basal schedule must start at midnight and cannot contain rates of 0 U/hr. To edit a line in your basal schedule, tap the line and adjust the time and/or amount. To remove a line, select Edit in the top right and delete it. If tapping the line doesn't work, try closing and re-opening the app. When finished editing, click on the Save to Pump... or Sync With Pod button, depending on which pump you are using. If you make any basal edits and use the Cancel button to go back to the menu without successfully saving/syncing to pump/pod, the changes you made will not be saved. Loop makes saving/syncing to pump a mandatory step to successfully editing basal rates. If you get an error message while trying to save/sync the edited basal rates, please retry until successful. Delivery Limits \u00b6 The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits . This section will have been initially populated when you finished the Add Pump part of the setup previously. For safety, similar to basal schedule, you must keep these values the same on both the Loop app and within the pump/pod settings. If you edit these settings in Loop app, always use the Save to Pump... or Sync With Pod button, depending on which pump you are using. Maximum Basal Rate \u00b6 Maximum basal rate will cap the the maximum temporary basal rate that the Loop is allowed to enact to meet your correction range. Typically, Loop users set their maximum basal rate around 3-4 times their highest scheduled basal rate. When you are first beginning to use Loop, it is wise to start conservative (low) in setting your maximum basal rate. If your settings are incorrect in other areas (basal rates, insulin sensitivity, carb ratio, etc), you may need time to identify where settings need to be adjusted. This process is easier if Loop is given less latitude to set high basal rates. Gradually increase your maximum basal rate as your comfort and confidence in Loop increases. If you need help with your settings adjustment, head over to LoopTips for some initial settings help Maximum Bolus \u00b6 Enter your desired single bolus maximum here. For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Insulin Model \u00b6 There are four insulin models to choose from with Loop 2.x; Walsh, Rapid-Acting Adults, Rapid-Acting Children, and Fiasp. If you want to read the nitty-gritty discussion that went into the development of the Rapid-Acting and Fiasp curves (collectively called \"exponential insulin models\"), you can see that in GitHub here . We highly recommend selecting one of the exponential insulin models (in other words, not the Walsh model). A common new Loop user error is to select Walsh model in order to easily shorten their insulin duration ( DIA ) to one like they used prior to Looping. This almost invariably leads to insulin stacking. If you would like to read more about why the duration of insulin action is important in Loop vs how you've traditionally used it, please click here to read a blog post about the subject. In summary, choosing Walsh curve just to shorten your DIA will lead to insulin stacking and less than desired bolusing recommendations. You can click on each model and see what each model's insulin activity curve looks like, active one selected in blue. The differences between the three exponential models (two Rapid-Acting and Fiasp) models has to do with the timing of the peak insulin activity timing. Not surprising, since Fiasp is marketed as the \"faster acting\" insulin. Currently all the exponential models are defaulted to an insulin duration of 6 hours, but the peak activity of the curves differs: Rapid-acting adult curve peaks at 75 minutes Rapid-acting child curve peaks at 65 minutes Fiasp peaks curve peaks at 55 minutes Dosing Strategy \u00b6 This configuration setting gives you the ability to select the Dosing Strategy . (If you do not see this setting, then you are running Loop v2.2.4 or older.) If you tap on that Dosing Strategy , it reveals a selection screen, shown in the graphic below, with some explanation. Note that this Dosing Strategy feature was available for more than a year in the automatic-bolus branch . Users who have been using the automatic-bolus feature should update as soon as possible to get the other improvements recently added, Loop Releases . The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged. Both Temp Basal Only and Automatic Bolus strategies restrict basal rates to reduce the amount of insulin delivered when appropriate. Temp Basal Only \u00b6 When your blood glucose (BG) is at or above target, Loop determines the amount of Recommended Bolus based upon your settings. Subject to your Delivery Limits , Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB . This decision is re-evaluated during every Loop interval. When your blood glucose (BG) is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB . This decision is also re-evaluated during every Loop interval. You can manually bolus at any time by pressing the Bolus icon in the center of Loop\u2019s Main Screen. Automatic Bolus \u00b6 When you first starting Loop, we encourage you to leave automatic boluses disabled until you are sure your settings are dialed in. To enable automatic boluses, click on Settings \u2013 Dosing Strategy \u2013 Automatic Bolus . This Automatic Bolus checkbox turns-off positive temporary basal so that: When your blood glucose (BG) is at or above target, you receive 40% of the Recommended Bolus at every Loop interval. When your blood glucose (BG) is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB . This decision is re-evaluated during every Loop interval (same as with the Temp Basal Only dosing strategy). As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen. Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus. Carb Ratios \u00b6 Click the + in the upper right to add carb ratios for various times of day. Loop works best if you have tested and optimized your carb ratio settings for accuracy. Beware of other apps writing carbs to Health app If you are using a third-party app (such as Spike or MyFitness) that can write carbohydrates to the phone's Health app, you will need to double-check permissions to make sure Loop doesn't read those carb entries. Confirm Loop permissions in Health to only write and not read carbs. See see Loop Permissions . Insulin Sensitivities \u00b6 Insulin Sensitivity Factor ( ISF ) is the same term as Correction Factor used in some clinics and endocrinology offices. ISF represents the drop in blood glucose levels expected from one unit of insulin. Click the + in the upper right to add insulin sensitivities for various times of day. Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF . Incorrectly set ISF is the most common cause of roller coaster BGs for new Loop users. You will need to raise (increase) your ISF value/number to help smooth a roller coaster BG trend. You can read about that topic more over in LoopTips here . Next Step: Loop Services \u00b6 You have completed the required configurations and settings in your Loop app. If you have a Nightscout site you'd like to connect Loop to, please continue on to the Loop Services page . If you are not integrating with a Nightscout site and don't want any optional logging services connected, then please proceed to the Loop's displays page . Understanding the Loop displays can be a valuable tool to understanding your Loop's actions, and also for troubleshooting, if you are having issues.","title":"Step 4: Configurations"},{"location":"operation/loop-settings/configurations/#configuration","text":"This page will cover two general parts of the Loop's settings, circled in red in the screenshot below. The headings will match the flow of the screen, top to bottom. The first circled section covers your Loop's closed/open loop status and Loop's Issue Report. The second circled section is the configuration section. This section contains a lot of really important settings that control how your Loop will calculate your predicted BG curve. Given the importance of your predicted BG curve to Loop's actions, please make sure you read over this page carefully to know how to navigate the selections and entries.","title":"Configuration"},{"location":"operation/loop-settings/configurations/#closedopen-loop","text":"The Closed Loop switch controls whether Loop automatically enacts its recommended temporary basal adjustments (closed loop mode) or whether you have to manually tap to enact the recommendations (open loop mode). In addition to the visual indicator on this switch discussed below, the Loop's status icon on the main screen will also appear differently depending on the mode selected. Open loop mode will have an incomplete circle for the Loop's status icon.","title":"Closed/Open Loop"},{"location":"operation/loop-settings/configurations/#open-loop-mode","text":"When the Closed Loop switch is in the (Off ) position, Loop WILL NOT enact recommended temp basals automatically. Instead, Loop will display recommended temp basals on the main status display, just above the blood glucose graph. This is called open loop , and is a good way to understand how Loop will function, and what type of recommendations it would make. If you click on the recommended temp basal line while in open loop mode, Loop will implement the temp basal.","title":"Open Loop Mode"},{"location":"operation/loop-settings/configurations/#closed-loop-mode","text":"When the Closed Loop switch is in the ( On) position, Loop WILL automatically enact recommended temp basals on the configured insulin pump. This is known as closed loop . Typically, Loop will show the recommended temp basal just above the blood glucose graph prior to automatically enacting it. It may take a minute or so for the Loop to enact the recommended basal. Once the temp basal has been enacted successfully on the pump, the recommended temp basal will disappear from the screen and the new temp basal rate will be represented in the insulin delivery graphs.","title":"Closed Loop Mode"},{"location":"operation/loop-settings/configurations/#issue-report","text":"If you run into problems or errors with your Loop, an Issue Report can be used to help identify where the problem is occurring. The Issue Report is automatically generated and you can share it via email. Frequently, if you seek help with a technical problem, an Issue Report will provide insight for the developers and troubleshooters. Please email yourself an Issue Report anytime you are questioning Loop actions or displays. You can then use that Issue Report later to help debug the problem.","title":"Issue Report"},{"location":"operation/loop-settings/configurations/#select-bg-units","text":"Before you continue further, a word about BG units Entries into the configuration section will be available in mg/dL or mmol/L automatically, based upon how your blood glucose values are received. By default they are set to mg/dL, however once CGM values arrive in mmol/L these Loop settings can be entered in mmol/L. If you are planning to use mmol/L, be sure to wait to set your entries until after you have started to receive CGM values in Loop. If you do these in the wrong order, then your charts and entries may have incorrect units.","title":"Select BG Units"},{"location":"operation/loop-settings/configurations/#correction-range","text":"The correction range is your blood glucose range that you would like Loop to correct to. Correction range is not necessarily the same target blood glucose range that you have discussed with your endocrinologist; generally the doctor's range may be much wider. For example, you may keep a correction target of 100-110 for Loop to aim to, but use a desired BG target range of 80-180 when discussing things with your endo about \"time in range\". Click the + in the upper right corner to add correction BG range(s). You can have multiple ranges based on time of day, but the first setting of the day needs to begin at midnight. Correction ranges can be a single number, such as 100-100 mg/dL, or a range such as 100-120 mg/dL. Generally speaking, if you choose to use a range, keeping the range between about 10-30 mg/dL between the lowest and highest value is a good starting place.","title":"Correction Range"},{"location":"operation/loop-settings/configurations/#pre-meal-range","text":"Below the Correction Range entry is a section called \"Overrides\" with a Pre-Meal setting. While active, the pre-meal targets will replace the usual correction range for Loop's temp basal recommendations. If a pre-meal range is not entered in this section, the icon will remain grey and unusable on the main screen's toolbar. The pre-meal override target can be used to as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes. If your normal target is 100-110 mg/dL and pre-meal target is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal target, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first. Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time.","title":"Pre-Meal Range"},{"location":"operation/loop-settings/configurations/#suspend-threshold","text":"The suspend threshold must be set up for successful configuration of Loop. Your Loop will not turn green without setting this value. This value affects both bolus and basal recommendations by Loop.","title":"Suspend Threshold"},{"location":"operation/loop-settings/configurations/#bolus","text":"If you are trying to bolus a meal while any part of the predicted BG curve is below this suspend threshold value, Loop will not recommend a bolus. Instead, you will need to wait until your prediction curve is above the suspend threshold value in order to bolus.","title":"Bolus"},{"location":"operation/loop-settings/configurations/#basal","text":"If your current or any point on your predicted BG curve is below the suspend threshold, Loop will always recommend a temporary basal rate of 0 U/hr. Reasonable settings for suspend threshold will depend on user preference, but recommended not set lower than 65 mg/dL.","title":"Basal"},{"location":"operation/loop-settings/configurations/#basal-rates","text":"Note: You cannot enter basal rates until you first add a pump in Loop settings. Your basal rates will be initially populated when you walk through the Add Pump part of the setup at the beginning of this setup guide. Only one basal schedule may be set in each Loop app. The basal increments are available according to the increments of the particular pump/pod you are using. Not all pumps provide the same increments for basal deliveries. Basal schedule must start at midnight and cannot contain rates of 0 U/hr. To edit a line in your basal schedule, tap the line and adjust the time and/or amount. To remove a line, select Edit in the top right and delete it. If tapping the line doesn't work, try closing and re-opening the app. When finished editing, click on the Save to Pump... or Sync With Pod button, depending on which pump you are using. If you make any basal edits and use the Cancel button to go back to the menu without successfully saving/syncing to pump/pod, the changes you made will not be saved. Loop makes saving/syncing to pump a mandatory step to successfully editing basal rates. If you get an error message while trying to save/sync the edited basal rates, please retry until successful.","title":"Basal Rates"},{"location":"operation/loop-settings/configurations/#delivery-limits","text":"The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits . This section will have been initially populated when you finished the Add Pump part of the setup previously. For safety, similar to basal schedule, you must keep these values the same on both the Loop app and within the pump/pod settings. If you edit these settings in Loop app, always use the Save to Pump... or Sync With Pod button, depending on which pump you are using.","title":"Delivery Limits"},{"location":"operation/loop-settings/configurations/#maximum-basal-rate","text":"Maximum basal rate will cap the the maximum temporary basal rate that the Loop is allowed to enact to meet your correction range. Typically, Loop users set their maximum basal rate around 3-4 times their highest scheduled basal rate. When you are first beginning to use Loop, it is wise to start conservative (low) in setting your maximum basal rate. If your settings are incorrect in other areas (basal rates, insulin sensitivity, carb ratio, etc), you may need time to identify where settings need to be adjusted. This process is easier if Loop is given less latitude to set high basal rates. Gradually increase your maximum basal rate as your comfort and confidence in Loop increases. If you need help with your settings adjustment, head over to LoopTips for some initial settings help","title":"Maximum Basal Rate"},{"location":"operation/loop-settings/configurations/#insulin-model","text":"There are four insulin models to choose from with Loop 2.x; Walsh, Rapid-Acting Adults, Rapid-Acting Children, and Fiasp. If you want to read the nitty-gritty discussion that went into the development of the Rapid-Acting and Fiasp curves (collectively called \"exponential insulin models\"), you can see that in GitHub here . We highly recommend selecting one of the exponential insulin models (in other words, not the Walsh model). A common new Loop user error is to select Walsh model in order to easily shorten their insulin duration ( DIA ) to one like they used prior to Looping. This almost invariably leads to insulin stacking. If you would like to read more about why the duration of insulin action is important in Loop vs how you've traditionally used it, please click here to read a blog post about the subject. In summary, choosing Walsh curve just to shorten your DIA will lead to insulin stacking and less than desired bolusing recommendations. You can click on each model and see what each model's insulin activity curve looks like, active one selected in blue. The differences between the three exponential models (two Rapid-Acting and Fiasp) models has to do with the timing of the peak insulin activity timing. Not surprising, since Fiasp is marketed as the \"faster acting\" insulin. Currently all the exponential models are defaulted to an insulin duration of 6 hours, but the peak activity of the curves differs: Rapid-acting adult curve peaks at 75 minutes Rapid-acting child curve peaks at 65 minutes Fiasp peaks curve peaks at 55 minutes","title":"Insulin Model"},{"location":"operation/loop-settings/configurations/#dosing-strategy","text":"This configuration setting gives you the ability to select the Dosing Strategy . (If you do not see this setting, then you are running Loop v2.2.4 or older.) If you tap on that Dosing Strategy , it reveals a selection screen, shown in the graphic below, with some explanation. Note that this Dosing Strategy feature was available for more than a year in the automatic-bolus branch . Users who have been using the automatic-bolus feature should update as soon as possible to get the other improvements recently added, Loop Releases . The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged. Both Temp Basal Only and Automatic Bolus strategies restrict basal rates to reduce the amount of insulin delivered when appropriate.","title":"Dosing Strategy"},{"location":"operation/loop-settings/configurations/#temp-basal-only","text":"When your blood glucose (BG) is at or above target, Loop determines the amount of Recommended Bolus based upon your settings. Subject to your Delivery Limits , Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB . This decision is re-evaluated during every Loop interval. When your blood glucose (BG) is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB . This decision is also re-evaluated during every Loop interval. You can manually bolus at any time by pressing the Bolus icon in the center of Loop\u2019s Main Screen.","title":"Temp Basal Only"},{"location":"operation/loop-settings/configurations/#automatic-bolus","text":"When you first starting Loop, we encourage you to leave automatic boluses disabled until you are sure your settings are dialed in. To enable automatic boluses, click on Settings \u2013 Dosing Strategy \u2013 Automatic Bolus . This Automatic Bolus checkbox turns-off positive temporary basal so that: When your blood glucose (BG) is at or above target, you receive 40% of the Recommended Bolus at every Loop interval. When your blood glucose (BG) is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB . This decision is re-evaluated during every Loop interval (same as with the Temp Basal Only dosing strategy). As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen. Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus.","title":"Automatic Bolus"},{"location":"operation/loop-settings/configurations/#carb-ratios","text":"Click the + in the upper right to add carb ratios for various times of day. Loop works best if you have tested and optimized your carb ratio settings for accuracy. Beware of other apps writing carbs to Health app If you are using a third-party app (such as Spike or MyFitness) that can write carbohydrates to the phone's Health app, you will need to double-check permissions to make sure Loop doesn't read those carb entries. Confirm Loop permissions in Health to only write and not read carbs. See see Loop Permissions .","title":"Carb Ratios"},{"location":"operation/loop-settings/configurations/#insulin-sensitivities","text":"Insulin Sensitivity Factor ( ISF ) is the same term as Correction Factor used in some clinics and endocrinology offices. ISF represents the drop in blood glucose levels expected from one unit of insulin. Click the + in the upper right to add insulin sensitivities for various times of day. Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF . Incorrectly set ISF is the most common cause of roller coaster BGs for new Loop users. You will need to raise (increase) your ISF value/number to help smooth a roller coaster BG trend. You can read about that topic more over in LoopTips here .","title":"Insulin Sensitivities"},{"location":"operation/loop-settings/configurations/#next-step-loop-services","text":"You have completed the required configurations and settings in your Loop app. If you have a Nightscout site you'd like to connect Loop to, please continue on to the Loop Services page . If you are not integrating with a Nightscout site and don't want any optional logging services connected, then please proceed to the Loop's displays page . Understanding the Loop displays can be a valuable tool to understanding your Loop's actions, and also for troubleshooting, if you are having issues.","title":"Next Step: Loop Services"},{"location":"operation/loop-settings/displays/","text":"Loop Displays \u00b6 This section of the docs will go over the Loop displays available and what information they offer. Information about your Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app. (Page last updated for Loop v2.2.4.) Loop 3 Displays With Loop-dev (soon to be Loop 3), the displays can differ significantly from those in Loop v2.2.x. The charts and toolbar are similar, but even those have extra features. If you are using Loop-dev, please refer to Loop 3 Displays . Status Screen \u00b6 The Status Screen is the main root navigation screen in Loop. It is broken up into 3 main display areas; Heads Up Display ( HUD ), Charts, and Toolbar. The HUD is the top area of the screen. This shows the status of the last time loop ran, current BG Reading, current temp basal, and current pump information. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates. The final display area is the toolbar which has buttons for Carbs, Pre-Meal, Bolus, Overrides, and Settings. Heads Up Display \u00b6 The Heads Up Display ( HUD ) is a very useful quick reference guide to your Loop's status. Every 5 minutes, Loop updates CGM and pump/pod data. Loop timestamps the HUD data with the last data point that came in. If a timestamp goes older than 5 minutes old, that is a valuable indicator to where your Loop is failing to get the needed information. The HUD 's first three icons, from left to right, are the same no matter whether you are using a Medtronic pump or Omnipod ; status of the last time loop ran, current BG Reading, and current relative temp basal. The last two icons will change depending on what type of pump you are using. Medtronic users: The last two icons are the most recent (1) pump/reservoir status and (2) pump percentage battery remaining. Details below Omnipod users: The last two icons are the most recent (1) pod status and (2) hours of pod use. Details below Loop Status \u00b6 The Loop Status is the colored circle in the upper left corner of the main Loop display. There are four colors that are typically displayed. A grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop. When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed. It needs CGM data to be gathered, so be patient. When it finally completes its first loop, the circle will turn green. If you can't get your grey loop to turn green, please see the Yellow and Red Loop troubleshooting page for tips. A green circle indicates the Loop has been successfully completed within the last 5 minutes. The time since the loop last completed will be displayed under the circle. A yellow circle indicates the Loop has not completed in the last 5-15 minutes. It is not unusual to have a few instances of yellow circles throughout a day of looping. They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such. Generally, most yellow circles will self-resolve without needing any special troubleshooting. A red circle indicates the Loop has not completed in over 15 minutes. This is not a typical state, and you should troubleshoot why Loop is not completing. Please review the Yellow and Red Loop troubleshooting page for tips on how to get your green Loop back. Clicking on the red circle will also pop-up the last error message to help guide your troubleshooting. When the circle is notched and not complete, that means the Loop is operating in \u201copen-loop\u201d mode. When the \u201cclosed-loop\u201d setting is turned on, the loop status will show a completed circle. Fun Fact The loop status icon will pulse slightly when Loop is communicating with the pump. The pulsing will stop when the communication has completed (green loop) or given up (yellow or red loop). Glucose \u00b6 The current BG reading from the CGM will display, including trending arrow and time the reading was taken. If the BG is being read straight from the G5/G6 transmitter or G4 receiver, no special symbols will appear. If the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading. Internet access is required to run in this mode. When you first start Loop, there may be a small yellow alert next to the BG. This should go away within a short period of time (around 5 minutes or less). If the yellow alert remains, something may be wrong with fetching BG data. You can try restarting the Loop app (double tap home button, up-swipe on the app to close it) to see if BG data will resume. Special note for Dexcom G5/G6 users >, a yellow alert will appear when calibration is needed. The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5/G6 calibration. Temp Basal \u00b6 The temp basal will display the enacted temp basal change relative to the scheduled basal. So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U, as shown in the graphic to the left. Reservoir (Medtronic Users) \u00b6 The reservoir icon will remain grey and plain until insulin volume decreases. At 25% reservoir volume remaining, the reservoir icon will turn yellow. At 10% reservoir volume remaining, the reservoir icon will turn red. The remaining units will be displayed when it gets to these lower thresholds. Battery (Medtronic Users) \u00b6 For x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does. As the battery level decreases, the icon will turn from grey to yellow to red. For x22, x23 pumps, the battery icon will read discrete % values. The warning colors/levels on Loop's battery indicator work in conjunction with the type of battery selected. If you change battery types, please make sure to update your battery selection in the Loop app settings. The pump's on-screen battery indicator is not a good indicator of remaining battery life for the purposes of looping. Loop's pump communications will fail from low battery levels sooner than the insulin delivery will fail. The Loop's battery level warnings are designed to give you approximately 8 hours of notice before the pump battery will need changing. Reservoir ( Omnipod Users) \u00b6 The pod icon will remain grey and plain until insulin volume decreases. At 50 units or less insulin remaining, the reservoir icon will turn yellow. At 20 units or less remaining, the reservoir icon will turn red. The remaining units will be displayed when it gets to these lower thresholds. When the reading is 0 units, there may be up to 4 unit of insulin available but don't count on it. If the pod senses insulin can no longer be delivered, the pod will have a sustained audible alarm (the scream). Tapping Replace Pod in Loop->Pod->Settings should silence the alarm. Pod Age ( Omnipod Users) \u00b6 The pod's age, typically a 3-day lifespan, is represented by three equal segments of the pod age icon. As the pod ages, the segments are converted to a darker grey color. At 54 hours old, the pod age icon will turn yellow. At 72 hours old, the pod age icon will turn red, the pod will begin the periodic warning beep, and the pod age icon will show a \"replace pod\" message in the HUD . When you reach 80 hours of pod use, the pod will have a sustained audible alarm (the scream) and stops all insulin delivery. Tapping Replace Pod in Loop->Pod->Settings should silence the alarm. Charts \u00b6 There are several charts that help you navigate your Loop actions. Clicking on each of the charts will also open up additional information. Glucose Chart \u00b6 The glucose chart displays BG values in your preferred units. (If not, quit and restart Loop app on your phone.) The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart. The horizontal axis is set to go forward from the current time until your DIA (insulin duration) forward (so you can see what Loop thinks BG will be eventually). It then goes back in time as far as it can, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. The BG correction range is shown as a blue bar on the glucose chart. Single-value range BG range (such as 100-100 mg/dL), will have a narrower blue range. When a temporary override range is enabled, a darker blue bar where the overrides are set will be displayed, as well as the normal correction range in lighter blue. If you have a crazy negative prediction - it is likely that you set an override with a tiny sensitivity. Don't do that again. Best approach: Do not panic - this is a prediction only; not reality. Open the loop until the prediction settles down. In future, do not choose a tiny sensitivity to force less insulin, simply increase the correction range in your override - Loop will reduce your basal rate at the next cycle (within 5 minutes). The eventual BG displayed on the right side of the chart does NOT take into account a recently enacted temp basal. In other words, if you are above BG range and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal. Loop waits until the insulin has actually been delivered before it \"uses\" the insulin in its calculations for BG impacts. If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG. If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below. Predicted Glucose Chart \u00b6 The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG. The graph at the top of this view will match your Glucose Chart . Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation used. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines. Note - these elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects. Active Insulin Chart \u00b6 The Active Insulin chart displays the total insulin contribution from both temp basals and boluses. Active IOB can be either positive and negative IOB . Negative IOB results from the suspension of normally scheduled basals. The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the (for Medtronic) pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered). The opposite is true for Omnipods. If a message is sent from Loop, it assumes the pod got the message and enacted it - even if the acknowledgement is not received. Later, when communication is restored, if a command was not enacted by the pod, the Event History is updated. Medtronic Only : So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB . Insulin Delivery Chart \u00b6 The Insulin Delivery chart displays a history of the temp basals enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. So, a rate displayed in this chart as +0 units would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate. Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time). The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin , is given in the upper right corner of the graph. Please be patient for a bolus delivery to appear. There is a lag time from when you press the \u201cdeliver\u201d bolus button to when the orange triangle is drawn sometimes. The insulin has to be delivered and then the (Medtronic Only) pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added. Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event. This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart in the equivalent of a high temp basal rate. Reservoir and Event History \u00b6 Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history. The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are two viewing options; Reservoir or Event History . Reservoir: Omnipod users should not worry about the reservoir display. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. If your pod has more insulin than that - you'll see the reservoir history from the previous pod - ignore that. Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues. Event History : Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability. Active Carbohydrates Chart \u00b6 The Carbohydrate chart displays the carbs used by Loop to predict BG changes. The active COB is displayed in the upper right corner of the chart. Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen. Please read the Carb Entry page for more information about editing carb entries. For more information about the Insulin Counteraction Effects information found in the Carb History, please see here . Tool Bar \u00b6 The toolbar is where your inputs to the Loop behavior take place. The individual components of the toolbar are, left to right: Carb entry tool - click on this tool to enter carbs into the Loop app. Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the carb entry tool in Loop app in order to have carbs accounted for by the Loop. Detailed info regarding how to enter, save, and edit carb entries can be found in the Carb Entry page . Pre-meal range - click this tool to set the Pre-Meal temporary override range . (If you have not configured a pre-meal range under Loop Settings, this icon will be inactive - some people prefer this to avoid accidently tapping it.) This range will remain in effect (1) for 60 minutes, (2) until a carb entry is saved, or (3) until the range is toggled off manually or by tapping on the override icon, whichever comes first. The background coloring of the Pre-Meal range will turn green when active and there will be a dark blue line on the BG chart indicating where the override range is enabled. Bolus tool - click on this tool to bring up the bolus tool. Normally, this screen will automatically open on its own and function as a bolus wizard when a meal is saved on the carb entry tool screen. But you can click on this icon anytime to manually bolus. During rapidly rising BGs, where Loop doesn't have an adequate temp basal rate to cover the pace at which BGs are rising, you may try clicking on the bolus tool to see if Loop is recommending a correction bolus to help control the BG spike. Or if you want to trade bolus now for basal later (super bolus), you can enter a bolus greater than Loop recommends - Loop will set zero Temp Basal next cycle. For more information about the Bolus tool features and use, see the Bolus page . Overrides - click this tool to set an Override . Loop Settings - click on this tool to make changes to any of your Loop settings . Next Step: RileyLink Menu \u00b6 You are almost there! One more Loop menu that you need to know about is the RileyLink (or compatible device) Menu. You can access your this menu (one for each Bluetooth connected device) by tapping on the pump/pod image in Loop settings (or HUD ), look for the DEVICES section and tap on a \"My Device Name\" row that has a green slider. If you don't know what that means, check out the Pump Pairing section for Adding a Pump Medtronic or Omnipod . Click here to read more about what to expect to see when you tap on \"My Device Name\".","title":"Loop Displays"},{"location":"operation/loop-settings/displays/#loop-displays","text":"This section of the docs will go over the Loop displays available and what information they offer. Information about your Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app. (Page last updated for Loop v2.2.4.) Loop 3 Displays With Loop-dev (soon to be Loop 3), the displays can differ significantly from those in Loop v2.2.x. The charts and toolbar are similar, but even those have extra features. If you are using Loop-dev, please refer to Loop 3 Displays .","title":"Loop Displays"},{"location":"operation/loop-settings/displays/#status-screen","text":"The Status Screen is the main root navigation screen in Loop. It is broken up into 3 main display areas; Heads Up Display ( HUD ), Charts, and Toolbar. The HUD is the top area of the screen. This shows the status of the last time loop ran, current BG Reading, current temp basal, and current pump information. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates. The final display area is the toolbar which has buttons for Carbs, Pre-Meal, Bolus, Overrides, and Settings.","title":"Status Screen"},{"location":"operation/loop-settings/displays/#heads-up-display","text":"The Heads Up Display ( HUD ) is a very useful quick reference guide to your Loop's status. Every 5 minutes, Loop updates CGM and pump/pod data. Loop timestamps the HUD data with the last data point that came in. If a timestamp goes older than 5 minutes old, that is a valuable indicator to where your Loop is failing to get the needed information. The HUD 's first three icons, from left to right, are the same no matter whether you are using a Medtronic pump or Omnipod ; status of the last time loop ran, current BG Reading, and current relative temp basal. The last two icons will change depending on what type of pump you are using. Medtronic users: The last two icons are the most recent (1) pump/reservoir status and (2) pump percentage battery remaining. Details below Omnipod users: The last two icons are the most recent (1) pod status and (2) hours of pod use. Details below","title":"Heads Up Display"},{"location":"operation/loop-settings/displays/#charts","text":"There are several charts that help you navigate your Loop actions. Clicking on each of the charts will also open up additional information.","title":"Charts"},{"location":"operation/loop-settings/displays/#glucose-chart","text":"The glucose chart displays BG values in your preferred units. (If not, quit and restart Loop app on your phone.) The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart. The horizontal axis is set to go forward from the current time until your DIA (insulin duration) forward (so you can see what Loop thinks BG will be eventually). It then goes back in time as far as it can, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time. The BG correction range is shown as a blue bar on the glucose chart. Single-value range BG range (such as 100-100 mg/dL), will have a narrower blue range. When a temporary override range is enabled, a darker blue bar where the overrides are set will be displayed, as well as the normal correction range in lighter blue. If you have a crazy negative prediction - it is likely that you set an override with a tiny sensitivity. Don't do that again. Best approach: Do not panic - this is a prediction only; not reality. Open the loop until the prediction settles down. In future, do not choose a tiny sensitivity to force less insulin, simply increase the correction range in your override - Loop will reduce your basal rate at the next cycle (within 5 minutes). The eventual BG displayed on the right side of the chart does NOT take into account a recently enacted temp basal. In other words, if you are above BG range and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal. Loop waits until the insulin has actually been delivered before it \"uses\" the insulin in its calculations for BG impacts. If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG. If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below.","title":"Glucose Chart"},{"location":"operation/loop-settings/displays/#predicted-glucose-chart","text":"The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG. The graph at the top of this view will match your Glucose Chart . Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation used. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines. Note - these elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects.","title":"Predicted Glucose Chart"},{"location":"operation/loop-settings/displays/#active-insulin-chart","text":"The Active Insulin chart displays the total insulin contribution from both temp basals and boluses. Active IOB can be either positive and negative IOB . Negative IOB results from the suspension of normally scheduled basals. The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the (for Medtronic) pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered). The opposite is true for Omnipods. If a message is sent from Loop, it assumes the pod got the message and enacted it - even if the acknowledgement is not received. Later, when communication is restored, if a command was not enacted by the pod, the Event History is updated. Medtronic Only : So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB .","title":"Active Insulin Chart"},{"location":"operation/loop-settings/displays/#insulin-delivery-chart","text":"The Insulin Delivery chart displays a history of the temp basals enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. So, a rate displayed in this chart as +0 units would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate. Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time). The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin , is given in the upper right corner of the graph. Please be patient for a bolus delivery to appear. There is a lag time from when you press the \u201cdeliver\u201d bolus button to when the orange triangle is drawn sometimes. The insulin has to be delivered and then the (Medtronic Only) pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added. Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event. This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart in the equivalent of a high temp basal rate.","title":"Insulin Delivery Chart"},{"location":"operation/loop-settings/displays/#reservoir-and-event-history","text":"Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history. The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are two viewing options; Reservoir or Event History . Reservoir: Omnipod users should not worry about the reservoir display. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. If your pod has more insulin than that - you'll see the reservoir history from the previous pod - ignore that. Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues. Event History : Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability.","title":"Reservoir and Event History"},{"location":"operation/loop-settings/displays/#active-carbohydrates-chart","text":"The Carbohydrate chart displays the carbs used by Loop to predict BG changes. The active COB is displayed in the upper right corner of the chart. Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen. Please read the Carb Entry page for more information about editing carb entries. For more information about the Insulin Counteraction Effects information found in the Carb History, please see here .","title":"Active Carbohydrates Chart"},{"location":"operation/loop-settings/displays/#tool-bar","text":"The toolbar is where your inputs to the Loop behavior take place. The individual components of the toolbar are, left to right: Carb entry tool - click on this tool to enter carbs into the Loop app. Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the carb entry tool in Loop app in order to have carbs accounted for by the Loop. Detailed info regarding how to enter, save, and edit carb entries can be found in the Carb Entry page . Pre-meal range - click this tool to set the Pre-Meal temporary override range . (If you have not configured a pre-meal range under Loop Settings, this icon will be inactive - some people prefer this to avoid accidently tapping it.) This range will remain in effect (1) for 60 minutes, (2) until a carb entry is saved, or (3) until the range is toggled off manually or by tapping on the override icon, whichever comes first. The background coloring of the Pre-Meal range will turn green when active and there will be a dark blue line on the BG chart indicating where the override range is enabled. Bolus tool - click on this tool to bring up the bolus tool. Normally, this screen will automatically open on its own and function as a bolus wizard when a meal is saved on the carb entry tool screen. But you can click on this icon anytime to manually bolus. During rapidly rising BGs, where Loop doesn't have an adequate temp basal rate to cover the pace at which BGs are rising, you may try clicking on the bolus tool to see if Loop is recommending a correction bolus to help control the BG spike. Or if you want to trade bolus now for basal later (super bolus), you can enter a bolus greater than Loop recommends - Loop will set zero Temp Basal next cycle. For more information about the Bolus tool features and use, see the Bolus page . Overrides - click this tool to set an Override . Loop Settings - click on this tool to make changes to any of your Loop settings .","title":"Tool Bar"},{"location":"operation/loop-settings/displays/#next-step-rileylink-menu","text":"You are almost there! One more Loop menu that you need to know about is the RileyLink (or compatible device) Menu. You can access your this menu (one for each Bluetooth connected device) by tapping on the pump/pod image in Loop settings (or HUD ), look for the DEVICES section and tap on a \"My Device Name\" row that has a green slider. If you don't know what that means, check out the Pump Pairing section for Adding a Pump Medtronic or Omnipod . Click here to read more about what to expect to see when you tap on \"My Device Name\".","title":"Next Step: RileyLink Menu"},{"location":"operation/loop-settings/mdt-pump/","text":"Medtronic Pump Users \u00b6 Your Loop will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Medtronic pump, you can follow along for the rest of this page. If you are using a Medtronic pump, Omnipod pump, please head over to Add Omnipod instead. Prepare Medtronic Pump \u00b6 Before you begin the rest of the setup process, there are several steps on your Medtronic pump that you will need to complete prior to moving on with Loop setup. DO NOT SKIP THESE STEPS OR YOUR LOOP WILL NOT WORK. Turn off Patterns under the basal menu settings. This will force Loop to use your \"Standard\" basal rate schedule. Make sure your standard basal rate schedule is up-to-date and accurate. Loop will automatically import your pump's existing standard basal rate schedule when you add your pump in the subsequent parts of this page. If you change basal rates later...make sure to make those changes in the Loop app and use Loop to save the changes back to the pump. If you make changes directly in the pump, Loop will not automatically know about those changes and you will cause a mismatch. Set your pump's Temp Basal Type to Insulin Rate (U/hr) . Do NOT use percentage. Your Loop will not run unless your temp basal type is set to units/hour. Make sure your maximum basal rate and maximum bolus (those are particular settings in the pump) are reasonably set for your particular needs. For new Loop users, a maximum basal rate equal to approximately 2-4 times your highest scheduled basal rate is a good starting point as you learn Loop and dial in your other settings. You can adjust as your comfort and use of Loop develop. Set Remote Devices to ON and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn ON the Remote Options. Cancel any currently running extended or dual wave boluses. Loop cannot loop with those running. Make sure the other settings in your pump, such as bolus wizard settings, are up-to-date so that if you stop using Loop, those settings will be accurate for non-Loop traditional pump use. Select Pump Type \u00b6 Let\u2019s start by clicking on the Loop Settings button in the tool bar at the bottom of your Loop app. It looks like a little sprocket. On the settings screen that opens, click on Add Pump and select the Medtronic pump option that appears. Connect Pump to Loop \u00b6 New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \" RileyLink \" name...go ahead and switch that toggle. The default device name will appear after that toggle is green. You can later personalize the default device name once it is connected to Loop. Continue with these steps to connect your Medtronic pump to Loop. Make sure your RileyLink is turned on and nearby, then you will see a RileyLink listed in this area of the settings. Actually, you will see a list of any RileyLinks that are in the nearby area. Slide on the toggle for just one RileyLink . Add your pump's region, color, and serial number. Note that some Canadian pumps use CM instead of CA for the region code. Just select CA in the dropdown menu. Click the Continue button to finish the addition of your pump. For x23 and x54 Medtronic pump users only For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process. Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app. Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the Continue button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app. This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. Now that your pump is paired with Loop, you will be finishing these steps: Change your pump time using the Loop app (and read all the info on that screen) Import your pump's basal rate schedule, maximum basal rate, and maximum bolus (maximums are collectively called \"delivery limits\" in Loop) Select your pump's battery type (lithium or alakine) Leave the Preferred Data Source on Event History Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History . Change Time Zone \u00b6 Loop automatically prompts you to set your pump time using the Loop app as part of initial Loop setup. There will be other times you need to change the time - traveling or daylight savings time start and end. It is important that you use Loop to change time on your pump; do not adjust time on your pump directly once it is attached to Loop. If you are traveling through time zones, Loop continues to work - just be aware that your basal rate and other configuration settings will be in the original time zone. To change time zones, please follow the Change Time Zone instructions. Always use the Loop -> Pump -> Change Time command to change pump time. Do not use the Medtronic pump menus to change your pump's time when Looping. Next Step: Add CGM \u00b6 Congrats! You've added your Medtronic pump to your Loop app. Now, click on the settings button in the upper left corner to take you back to Loop's settings menu. Your next step is to Add CGM to your Loop app. After all, without CGM data, your Loop won't loop.","title":"Add Medtronic"},{"location":"operation/loop-settings/mdt-pump/#medtronic-pump-users","text":"Your Loop will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Medtronic pump, you can follow along for the rest of this page. If you are using a Medtronic pump, Omnipod pump, please head over to Add Omnipod instead.","title":"Medtronic Pump Users"},{"location":"operation/loop-settings/mdt-pump/#prepare-medtronic-pump","text":"Before you begin the rest of the setup process, there are several steps on your Medtronic pump that you will need to complete prior to moving on with Loop setup. DO NOT SKIP THESE STEPS OR YOUR LOOP WILL NOT WORK. Turn off Patterns under the basal menu settings. This will force Loop to use your \"Standard\" basal rate schedule. Make sure your standard basal rate schedule is up-to-date and accurate. Loop will automatically import your pump's existing standard basal rate schedule when you add your pump in the subsequent parts of this page. If you change basal rates later...make sure to make those changes in the Loop app and use Loop to save the changes back to the pump. If you make changes directly in the pump, Loop will not automatically know about those changes and you will cause a mismatch. Set your pump's Temp Basal Type to Insulin Rate (U/hr) . Do NOT use percentage. Your Loop will not run unless your temp basal type is set to units/hour. Make sure your maximum basal rate and maximum bolus (those are particular settings in the pump) are reasonably set for your particular needs. For new Loop users, a maximum basal rate equal to approximately 2-4 times your highest scheduled basal rate is a good starting point as you learn Loop and dial in your other settings. You can adjust as your comfort and use of Loop develop. Set Remote Devices to ON and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn ON the Remote Options. Cancel any currently running extended or dual wave boluses. Loop cannot loop with those running. Make sure the other settings in your pump, such as bolus wizard settings, are up-to-date so that if you stop using Loop, those settings will be accurate for non-Loop traditional pump use.","title":"Prepare Medtronic Pump"},{"location":"operation/loop-settings/mdt-pump/#select-pump-type","text":"Let\u2019s start by clicking on the Loop Settings button in the tool bar at the bottom of your Loop app. It looks like a little sprocket. On the settings screen that opens, click on Add Pump and select the Medtronic pump option that appears.","title":"Select Pump Type"},{"location":"operation/loop-settings/mdt-pump/#connect-pump-to-loop","text":"New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \" RileyLink \" name...go ahead and switch that toggle. The default device name will appear after that toggle is green. You can later personalize the default device name once it is connected to Loop. Continue with these steps to connect your Medtronic pump to Loop. Make sure your RileyLink is turned on and nearby, then you will see a RileyLink listed in this area of the settings. Actually, you will see a list of any RileyLinks that are in the nearby area. Slide on the toggle for just one RileyLink . Add your pump's region, color, and serial number. Note that some Canadian pumps use CM instead of CA for the region code. Just select CA in the dropdown menu. Click the Continue button to finish the addition of your pump. For x23 and x54 Medtronic pump users only For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process. Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app. Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the Continue button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app. This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. Now that your pump is paired with Loop, you will be finishing these steps: Change your pump time using the Loop app (and read all the info on that screen) Import your pump's basal rate schedule, maximum basal rate, and maximum bolus (maximums are collectively called \"delivery limits\" in Loop) Select your pump's battery type (lithium or alakine) Leave the Preferred Data Source on Event History Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History .","title":"Connect Pump to Loop"},{"location":"operation/loop-settings/mdt-pump/#change-time-zone","text":"Loop automatically prompts you to set your pump time using the Loop app as part of initial Loop setup. There will be other times you need to change the time - traveling or daylight savings time start and end. It is important that you use Loop to change time on your pump; do not adjust time on your pump directly once it is attached to Loop. If you are traveling through time zones, Loop continues to work - just be aware that your basal rate and other configuration settings will be in the original time zone. To change time zones, please follow the Change Time Zone instructions. Always use the Loop -> Pump -> Change Time command to change pump time. Do not use the Medtronic pump menus to change your pump's time when Looping.","title":"Change Time Zone"},{"location":"operation/loop-settings/mdt-pump/#next-step-add-cgm","text":"Congrats! You've added your Medtronic pump to your Loop app. Now, click on the settings button in the upper left corner to take you back to Loop's settings menu. Your next step is to Add CGM to your Loop app. After all, without CGM data, your Loop won't loop.","title":"Next Step: Add CGM"},{"location":"operation/loop-settings/omnipod-pump/","text":"Omnipod Users \u00b6 Your Loop will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Omnipod pump, you can follow along for the rest of this page. If you are using a Medtronic pump, please head over to Add Medtronic Pump page instead. Select Pump Type \u00b6 Let\u2019s start by clicking on the Loop Settings button in the toolbar at the bottom of your Loop app. It looks like a little gear. On the settings screen that opens, click on Add Pump and select the Omnipod option. Select RileyLink \u00b6 New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \" RileyLink \" name...go ahead and switch that toggle. The default device name will appear after that toggle is green. You can later personalize the default device name once it is connected to Loop. A list of all RileyLink compatible devices in the nearby area will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue Continue button at the bottom of the screen. If your RileyLink does not appear, make sure it is charged and turned on: slide the recessed switch toward the case's keyring. Delivery Limits and Basals \u00b6 The next screen will offer two areas where you will need to enter information: Delivery Limits : Tapping on Delivery Limits presents a screen where you enter your Maximum Basal Rate and your Maximum Bolus. Your Maximum Basal Rate limits how aggressive your Loop app can be in setting temporary basal rates to treat high blood glucose. The recommended value for new users is about 3 times their highest scheduled basal rate. Your Maximum Bolus entry limits the size of a single bolus. The recommended value for new users is the largest bolus typically used for meals. Basal Rates: Enter your scheduled basal rates, beginning at midnight. Consistent with Omnipod use, the scheduled basal rates have a maximum of 24 entries, no 0 u/hr entries are allowed, and the rate increments are 0.05 u/hr. Start by tapping the + at the top right of the Basal Rates screen to enter the first value. Tap + to add rows as needed. When you are done, hit the Back button at the upper left. Note - once a pod is paired to the Loop app, you will press Sync to Pod instead of Back to save your basal rates - you only see Back when no pod is paired. To delete a basal rate or rearrange the order, first tap Edit on upper right and then use standard Apple gestures (for your phone iOS ) to delete or move rows. You will not be able to move or delete the row for midnight. You will not be able to add another row if the last row is for 11:30 pm When you finish entering these values, press the blue Continue button on the bottom of the Pod Settings screen to continue with the next steps of Pod setup. Pod Filling and Insertion The Pod filling and insertion instructions are the same with the Loop app as they are for the PDM. These videos: Filling a Pod with Insulin and Inserting the Cannula , may be useful. You will use your phone and RileyLink compatible device instead of the PDM. Be sure to keep the phone and RileyLink close during pairing and insertion because the Pod uses a low-power mode during these activities. Pair Pod \u00b6 Fill the Pod with insulin until it beeps (minimum fill is 80 units) Place the Pod about 6 inches from the RileyLink compatible device with the phone within a few feet Click the Pair button Loop checks on the radio signal strength (RSSI) reported by the pod when it starts to pair and if it is not within the optimum range, it will ask you to move the RileyLink closer or further away and try again. Wait while the progress bar for priming completes Press the Continue button when the blue checkmark confirms priming is complete Insert Cannula \u00b6 Prepare your insertion site Remove the Pod's needle cap and adhesive backing If the cannula is safely tucked away, apply the Pod to your desired infusion site. If cannula is sticking out, press cancel in the upper right corner of the screen and try a new Pod. (Report this issue to Insulet; it is a Pod problem.) Press the Insert Cannula button. Listen to the clicks filling the cannula, wait for insertion and the progress bar to complete. The number of clicks to insertion is not consistent. The cannula will deploy before the progress bar is completed. Confirm cannula has deployed: you should feel it and there is a pink slide that can be seen on the outside of the pod as shown in this video: Inserting the Cannula . Proceed to the Expiration Reminder screen to accept or modify the default reminder. Expiration Reminder \u00b6 Finish the setup using the default expiration reminder time (2 hours before a full 3-days of usage). You can modify that expiration reminder at any time, see Expiration Reminder . The notification will come from Loop; your Pod will not beep at this time. Setup is complete and your Pod is ready for use when you press the Continue button. Range Now that the priming and insertion steps are complete, the Pod is in normal power mode, so the range between the Pod and RileyLink compatible device is increased. Pod Settings \u00b6 After the Pod setup is complete, you will be on the Pod Settings screen. The information on this screen is described in Omnipod Pump Commands . Next Step: Add CGM \u00b6 Congrats! You've added your Pod to your Loop app. Now, click on the Done button in the upper right corner of your Pump Settings screen to take you back to Loop Settings. Your next step is to Add CGM to your Loop app. After all, without CGM data, your Loop app won't loop.","title":"Add Omnipod"},{"location":"operation/loop-settings/omnipod-pump/#omnipod-users","text":"Your Loop will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Omnipod pump, you can follow along for the rest of this page. If you are using a Medtronic pump, please head over to Add Medtronic Pump page instead.","title":"Omnipod Users"},{"location":"operation/loop-settings/omnipod-pump/#select-pump-type","text":"Let\u2019s start by clicking on the Loop Settings button in the toolbar at the bottom of your Loop app. It looks like a little gear. On the settings screen that opens, click on Add Pump and select the Omnipod option.","title":"Select Pump Type"},{"location":"operation/loop-settings/omnipod-pump/#select-rileylink","text":"New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \" RileyLink \" name...go ahead and switch that toggle. The default device name will appear after that toggle is green. You can later personalize the default device name once it is connected to Loop. A list of all RileyLink compatible devices in the nearby area will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue Continue button at the bottom of the screen. If your RileyLink does not appear, make sure it is charged and turned on: slide the recessed switch toward the case's keyring.","title":"Select RileyLink"},{"location":"operation/loop-settings/omnipod-pump/#delivery-limits-and-basals","text":"The next screen will offer two areas where you will need to enter information: Delivery Limits : Tapping on Delivery Limits presents a screen where you enter your Maximum Basal Rate and your Maximum Bolus. Your Maximum Basal Rate limits how aggressive your Loop app can be in setting temporary basal rates to treat high blood glucose. The recommended value for new users is about 3 times their highest scheduled basal rate. Your Maximum Bolus entry limits the size of a single bolus. The recommended value for new users is the largest bolus typically used for meals. Basal Rates: Enter your scheduled basal rates, beginning at midnight. Consistent with Omnipod use, the scheduled basal rates have a maximum of 24 entries, no 0 u/hr entries are allowed, and the rate increments are 0.05 u/hr. Start by tapping the + at the top right of the Basal Rates screen to enter the first value. Tap + to add rows as needed. When you are done, hit the Back button at the upper left. Note - once a pod is paired to the Loop app, you will press Sync to Pod instead of Back to save your basal rates - you only see Back when no pod is paired. To delete a basal rate or rearrange the order, first tap Edit on upper right and then use standard Apple gestures (for your phone iOS ) to delete or move rows. You will not be able to move or delete the row for midnight. You will not be able to add another row if the last row is for 11:30 pm When you finish entering these values, press the blue Continue button on the bottom of the Pod Settings screen to continue with the next steps of Pod setup. Pod Filling and Insertion The Pod filling and insertion instructions are the same with the Loop app as they are for the PDM. These videos: Filling a Pod with Insulin and Inserting the Cannula , may be useful. You will use your phone and RileyLink compatible device instead of the PDM. Be sure to keep the phone and RileyLink close during pairing and insertion because the Pod uses a low-power mode during these activities.","title":"Delivery Limits and Basals"},{"location":"operation/loop-settings/omnipod-pump/#pair-pod","text":"Fill the Pod with insulin until it beeps (minimum fill is 80 units) Place the Pod about 6 inches from the RileyLink compatible device with the phone within a few feet Click the Pair button Loop checks on the radio signal strength (RSSI) reported by the pod when it starts to pair and if it is not within the optimum range, it will ask you to move the RileyLink closer or further away and try again. Wait while the progress bar for priming completes Press the Continue button when the blue checkmark confirms priming is complete","title":"Pair Pod"},{"location":"operation/loop-settings/omnipod-pump/#insert-cannula","text":"Prepare your insertion site Remove the Pod's needle cap and adhesive backing If the cannula is safely tucked away, apply the Pod to your desired infusion site. If cannula is sticking out, press cancel in the upper right corner of the screen and try a new Pod. (Report this issue to Insulet; it is a Pod problem.) Press the Insert Cannula button. Listen to the clicks filling the cannula, wait for insertion and the progress bar to complete. The number of clicks to insertion is not consistent. The cannula will deploy before the progress bar is completed. Confirm cannula has deployed: you should feel it and there is a pink slide that can be seen on the outside of the pod as shown in this video: Inserting the Cannula . Proceed to the Expiration Reminder screen to accept or modify the default reminder.","title":"Insert Cannula"},{"location":"operation/loop-settings/omnipod-pump/#expiration-reminder","text":"Finish the setup using the default expiration reminder time (2 hours before a full 3-days of usage). You can modify that expiration reminder at any time, see Expiration Reminder . The notification will come from Loop; your Pod will not beep at this time. Setup is complete and your Pod is ready for use when you press the Continue button. Range Now that the priming and insertion steps are complete, the Pod is in normal power mode, so the range between the Pod and RileyLink compatible device is increased.","title":"Expiration Reminder"},{"location":"operation/loop-settings/omnipod-pump/#pod-settings","text":"After the Pod setup is complete, you will be on the Pod Settings screen. The information on this screen is described in Omnipod Pump Commands .","title":"Pod Settings"},{"location":"operation/loop-settings/omnipod-pump/#next-step-add-cgm","text":"Congrats! You've added your Pod to your Loop app. Now, click on the Done button in the upper right corner of your Pump Settings screen to take you back to Loop Settings. Your next step is to Add CGM to your Loop app. After all, without CGM data, your Loop app won't loop.","title":"Next Step: Add CGM"},{"location":"operation/loop-settings/pump-commands/","text":"Pump Settings \u00b6 To bring up the Pod/Pump Settings display, tap on the reservoir icon in the Heads Up Display or the image of the pump in the Loop settings screen. Omnipod Eros vs DASH With the addition of DASH pods with Loop-dev, you will notice all reference to Eros pods continue to say Omnipod in both the documentation and the code. Documentation and screens in the app indicate DASH explicitly. Change Time Zone \u00b6 The schedules for the basal rates, correction ranges, insulin sensitivity factors and carb ratios stay at the pump time even if the user and their phone change time zones or when daylight savings time occurs. To bring the pump into the same time zone as the phone, use this command in Loop. (Medtronic users - do NOT adjust time on your pump - always go through Loop.) Select the Pod/Pump Settings display, scroll down to the Change Time Zone line, example shown in the graphic below. You can leave the time zone offset unchanged or touch it to change to the current time zone. Note that the 24 hour configuration pattern for basal rates, insulin sensitivity factor, carb ratio and correction range are aligned with the time zone shown on this line. Once the Change Time Zone command is tapped, Loop no longer shifts the 24 hour configuration pattern to the old time zone. Some behavior depends on whether the pump is an Omnipod or Medtronic . Omnipod Commands \u00b6 To bring up the Pod Settings display, tap on the Pod Age icon on the Heads Up Display or the image of the Omnipod in the Loop settings display to reach the Pod Settings display. This screen provides important information about your Pod and allows you to issue some commands to the Pod through Loop. There were some recent modifications made to the layout and underlying information for some of the rows. Enable/Disable Confirmation Beeps: moved up to the Configuration section; beeps for all manual pod operations; uses a more efficient implementation Suspend/Resume: Pod will beep every 5 minutes when suspended; the beeps can be silenced by tapping on the Alarms line Pod Information \u00b6 The first section has the (72 hour) Pod expiration date/time and how long the Pod has been active. These are determined when the Pod is activated by injecting insulin into the reservoir and uses pod active time. Bolus Delivery \u00b6 This line reports the % progress of any ongoing bolus. This line reports None unless a bolus is actively being delivered when you enter Pod Settings. This line may not update until you tap on the refresh symbol to the right of the Pod image, or exit and re-enter the Pod Settings screen. Basal Delivery \u00b6 This line reports schedule for scheduled basals U/hour for a 30 minute Temporary Basal suspended if the Pod is suspended Alarms \u00b6 This line displays Alerts or Alarms; tapping on it, or on the accompanying banner displayed in the HUD , acknowledges the alert If your Pod is beeping an alert, this line will display information about the alert. Tapping on the alert clears or \"snoozes\" the alert status. If your Pod is screaming, it's time to change it. Tapping on this line stimulates an immediate reading of the actual error (normally this happens at the next CGM reading). There was overwhelming preference during initial testing to minimize the \"beeping\" of Pods. You can turn on additional beeps by enabling Confirmation Beeps . These are the Loop Notifications and Pod beeps you should expect with the default (confirmation beeps disabled) setting: Expiration Reminder - Loop notification only, no Pod beeps 72 Hours Expiration - Loop notification and Pod beeps (Pod beeps continue once per hour until alert is acknowledged) 79 Hour Alert - Loop notification and Pod beeps (Pod beeps continue every 15 minutes until alert is acknowledged) Pod Suspended (v2.2.5 or later): Pod beeps once per 5 minute unless this alarm is cleared Reservoir \u00b6 Pods do not report the volume of insulin remaining in the reservoir until there are less than 50 units remaining. So, typically you will see \"50+ U\" in this line for quite a while with a new Pod. Insulin Delivered \u00b6 This line is the basal and bolus insulin delivered by the Pod since the cannula was inserted. It is obtained by taking the reported Pod insulin delivery and subtracting the amount used to prime the Pod and fill the cannula upon insertion (about 3 U). Pod Commands \u00b6 This section contains commands the typical user will use. Suspend Delivery \u00b6 This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say Resume Delivery . (If the display does not update, tap the refresh screen icon at the top of the screen to the right of the Pod image.) A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended. Unless you are running v2.2.4 or earlier, a pod beep is initiated with a frequency of every 5 minutes. This can be silenced by acknowledging the alarm. You will need to press Tap to Resume in the banner or the Resume Delivery button in the Pod Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed. When you resume delivery, the 24 hour Pod basal rate schedule is sent to the Pod. Be sure the Phone, RileyLink and Pod stay close until the message exchange is complete. Enable Confirmation Beeps \u00b6 This turns confirmation beeps on for the Pod. The Pod beeps when you enable this, but is silent when you disable it. Bolus Acknowledgement - the Pod beeps when it has received and accepted the bolus command from Loop (manual or automatic) and then beeps again when the bolus is completed. Other - all the manual commands you can issue to the Pod will have an associated confirmation beep when the message is received by the pod, such as updating the basal rate, requesting Pod status, canceling a bolus, suspending or resuming delivery. Expiration Reminder \u00b6 With the Expiration Reminder you can set a convenient time to get a notification to replace your Pod. Loop sets the default to 70 hours, i.e., two hours before the full 3 days that Insulet guarantees. The allowed range of values is between 1 hour and 24 hours prior to the Pod expiration at 72 hours of Pod life. If you select a date/time outside this range, Loop will modify your selection to the closest allowed value. As with the PDM, Loop allows the Pod to continue operating after expiration until it reaches the maximum allowed 80 hours of life, at which time, the Pod shuts down and alarms. Loop detects this message the next time it tries to communicate with the Pod. In the event your Pod runs out of insulin before that time, then you will get a \"Pod empty\" notification. The glitch in setting the Expiration Reminder in v2.2.4 is now fixed. Loop v2.2.4 has a \"glitch\" in setting the Expiration Reminder. Tap on the line (can't change time), scroll the entire display up or down until the line no longer is visible and then scroll it back. The Expiration Reminder display should now look like the graphic below. The expiration reminder time can now be selected. Change Time Zone \u00b6 Use the Change Time Zone command to align your configuration settings with the current time zone. Note that this updates your basal schedule on your Pod. If you start a new Pod session without modifying the time zone here, the original time zone will be used for the new Pod. Please wait until you see Succeeded appear on the page to ensure the command has successfully been received by the Pod. Make sure the phone, RileyLink compatible device and Pod are kept in close proximity until this command has completed. The time zone is updated by Loop issuing the 24-hour basal rate schedule to the Pod based on the current time. Replace Pod \u00b6 This command deactivates a Pod prior to replacing it. Once you tap Replace Pod , another screen appears for you to confirm that you mean it. Devices \u00b6 This allows access to the RileyLink screen for each connected RileyLink compatible device. Pod Diagnostics \u00b6 This section is labeled Diagnostics, but many Pod users make use of this section. Read Pod Status \u00b6 This command requests the status of the Pod and reports some of the returned information. The line labeled Pulses reports the total number of pulses of insulin delivered by that Pod since activation (adding insulin to the reservoir). To convert this to units of insulin, multiply by 0.05 units/pulse. If you compare this report (for your Pod) to the Insulin Delivered line in Pod settings, for your Pod at the same time, the difference is the insulin used to prime the Pod and fill the cannula at insertion. The line label RSSI reports the Received Signal Strength Indicator (RSSI) between the RileyLink compatible device and the Pod. The RSSI is a positive number with a larger number indicating a stronger signal strength detected by the Pod. Play Test Beeps \u00b6 This command requests the Pod emit a beep pattern. If you hear it, you know the commands are getting to the Pod. A message appears on your screen to indicate Loop got or did not get an acknowledgement from the Pod. Read Pulse Log \u00b6 This command reads the pulse log (diagnostic), displays it on the screen and saves the result in the log file. It takes some time, so keep your gear close until command completes. This can be extracted by sending the pulse log to yourself using the send-to icon at the top right of the screen. It is also included in the Issue Report. If you are having communication issues, you can provide this report to an expert who may be able to provide assistance. Post for help in either zulipchat or a Facebook group to request assistance and you'll get information about how to get that log file submitted. Test Command \u00b6 This verifies communication with the Pod. Loop reports success or failure. Use Get Pod Status if you want to see the some of the information returned from the Pod. Pod Details \u00b6 This section provides some Pod identifying information. The Lot number and TID number are the tiny number stamped on the Pod that Insulet might ask you to report if you happen to call in this Pod for an appropriate failure. Medtronic Commands \u00b6 Medtronic commands are found in the Pump Settings screen shown in the graphic below. The top sections is configured at the time the pump is connected to Loop and can only be modified by deleting the pump and adding a pump. This screen is the same as for earlier versions with the addition of the Use MySentry row. Suspend Delivery \u00b6 This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say Resume Delivery . A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended. You will need to press Tap to Resume in the banner or the Resume Delivery button in Pump Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed. Change Time Zone \u00b6 During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time-zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to Change Time Zone and accounts for time zones when performing insulin delivery accounting. Pump Battery Type \u00b6 The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump . Preferred Data Source \u00b6 Leave the Preferred Data Source set to on Event History for proper functioning of Loop. Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History . Use MySentry \u00b6 This is a new option. If you don't see this row, consider updating your Loop app. Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly. This option allows you to turn off MySentry within the Loop app. Devices \u00b6 This allows access to the RileyLink screen for each connected RileyLink compatible device.","title":"Pump Settings"},{"location":"operation/loop-settings/pump-commands/#pump-settings","text":"To bring up the Pod/Pump Settings display, tap on the reservoir icon in the Heads Up Display or the image of the pump in the Loop settings screen. Omnipod Eros vs DASH With the addition of DASH pods with Loop-dev, you will notice all reference to Eros pods continue to say Omnipod in both the documentation and the code. Documentation and screens in the app indicate DASH explicitly.","title":"Pump Settings"},{"location":"operation/loop-settings/pump-commands/#change-time-zone","text":"The schedules for the basal rates, correction ranges, insulin sensitivity factors and carb ratios stay at the pump time even if the user and their phone change time zones or when daylight savings time occurs. To bring the pump into the same time zone as the phone, use this command in Loop. (Medtronic users - do NOT adjust time on your pump - always go through Loop.) Select the Pod/Pump Settings display, scroll down to the Change Time Zone line, example shown in the graphic below. You can leave the time zone offset unchanged or touch it to change to the current time zone. Note that the 24 hour configuration pattern for basal rates, insulin sensitivity factor, carb ratio and correction range are aligned with the time zone shown on this line. Once the Change Time Zone command is tapped, Loop no longer shifts the 24 hour configuration pattern to the old time zone. Some behavior depends on whether the pump is an Omnipod or Medtronic .","title":"Change Time Zone"},{"location":"operation/loop-settings/pump-commands/#omnipod-commands","text":"To bring up the Pod Settings display, tap on the Pod Age icon on the Heads Up Display or the image of the Omnipod in the Loop settings display to reach the Pod Settings display. This screen provides important information about your Pod and allows you to issue some commands to the Pod through Loop. There were some recent modifications made to the layout and underlying information for some of the rows. Enable/Disable Confirmation Beeps: moved up to the Configuration section; beeps for all manual pod operations; uses a more efficient implementation Suspend/Resume: Pod will beep every 5 minutes when suspended; the beeps can be silenced by tapping on the Alarms line","title":"Omnipod Commands"},{"location":"operation/loop-settings/pump-commands/#pod-information","text":"The first section has the (72 hour) Pod expiration date/time and how long the Pod has been active. These are determined when the Pod is activated by injecting insulin into the reservoir and uses pod active time.","title":"Pod Information"},{"location":"operation/loop-settings/pump-commands/#pod-commands","text":"This section contains commands the typical user will use.","title":"Pod Commands"},{"location":"operation/loop-settings/pump-commands/#suspend-delivery","text":"This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say Resume Delivery . (If the display does not update, tap the refresh screen icon at the top of the screen to the right of the Pod image.) A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended. Unless you are running v2.2.4 or earlier, a pod beep is initiated with a frequency of every 5 minutes. This can be silenced by acknowledging the alarm. You will need to press Tap to Resume in the banner or the Resume Delivery button in the Pod Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed. When you resume delivery, the 24 hour Pod basal rate schedule is sent to the Pod. Be sure the Phone, RileyLink and Pod stay close until the message exchange is complete.","title":"Suspend Delivery"},{"location":"operation/loop-settings/pump-commands/#devices","text":"This allows access to the RileyLink screen for each connected RileyLink compatible device.","title":"Devices"},{"location":"operation/loop-settings/pump-commands/#pod-diagnostics","text":"This section is labeled Diagnostics, but many Pod users make use of this section.","title":"Pod Diagnostics"},{"location":"operation/loop-settings/pump-commands/#pod-details","text":"This section provides some Pod identifying information. The Lot number and TID number are the tiny number stamped on the Pod that Insulet might ask you to report if you happen to call in this Pod for an appropriate failure.","title":"Pod Details"},{"location":"operation/loop-settings/pump-commands/#medtronic-commands","text":"Medtronic commands are found in the Pump Settings screen shown in the graphic below. The top sections is configured at the time the pump is connected to Loop and can only be modified by deleting the pump and adding a pump. This screen is the same as for earlier versions with the addition of the Use MySentry row.","title":"Medtronic Commands"},{"location":"operation/loop-settings/pump-commands/#suspend-delivery_1","text":"This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say Resume Delivery . A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended. You will need to press Tap to Resume in the banner or the Resume Delivery button in Pump Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed.","title":"Suspend Delivery"},{"location":"operation/loop-settings/pump-commands/#change-time-zone_2","text":"During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time-zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to Change Time Zone and accounts for time zones when performing insulin delivery accounting.","title":"Change Time Zone"},{"location":"operation/loop-settings/pump-commands/#pump-battery-type","text":"The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump .","title":"Pump Battery Type"},{"location":"operation/loop-settings/pump-commands/#preferred-data-source","text":"Leave the Preferred Data Source set to on Event History for proper functioning of Loop. Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History .","title":"Preferred Data Source"},{"location":"operation/loop-settings/pump-commands/#use-mysentry","text":"This is a new option. If you don't see this row, consider updating your Loop app. Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly. This option allows you to turn off MySentry within the Loop app.","title":"Use MySentry"},{"location":"operation/loop-settings/pump-commands/#devices_1","text":"This allows access to the RileyLink screen for each connected RileyLink compatible device.","title":"Devices"},{"location":"operation/loop-settings/rileylink/","text":"RileyLink \u00b6 The RileyLink (or compatible device) screen is accessed by clicking on the image of your connected pump in Loop settings or the pump icon in the Heads Up Display to bring up the associated pump screen. From that screen, scroll down to the section labeled DEVICES to view the list of connected RileyLink compatible device(s) and tap on the name with a green slider that you want to display. An example is shown in the graphic below. Signal Loss \u00b6 If there is a problem communicating with that RileyLink compatible device, tapping on the line will show out-of-date or missing information. Go to Troubleshoot: Red Loop: RileyLink Section for suggestions. With Loop 3 The Pump Devices display will show the signal loss icon instead of reporting dB as shown in the graphic below. If the problem persists, you'll start to see some Error Messages as well. RileyLink Status and Commands \u00b6 Tapping on a name with a green slider takes you to the RileyLink Status and Commands screen for that device. The name at the top center is whatever you named your RileyLink compatible device . The RileyLink screen is the same regardless of the pump you are using. The three graphics below match the display for Loop 3. For Loop 2.2.x - the displays are almost identical when the patch mentioned below the graphic is applied. The firmware displayed is specific to each device. Patch Required for Loop 2.2.x Some devices have features not available with other devices. With Loop 2.2.6 some features were added to the OrangeLink , but there is a mismatch of reported hardware for some versions of OrangeLink firmware which prevents the Find Device row from showing up for OL Pro. The EmaLink extra features did not make it into the Loop v2.2.6 release. With Loop 2.2.x, to see the displays shown in the graphics below, please follow instructions in the EmaLink and OrangeLink Feature and Patch sections . Device \u00b6 The lines under the Device section provide information on the device. The two most important lines are the Connection Status and Signal Strength. The Connections Status should say connected if the device is connected to the iPhone's Bluetooth. If the status says connecting or disconnected then you should toggle the iPhone's BT and/or power cycle the device to help reconnect. The Signal Strength is the strength of the Bluetooth signal between the iPhone and the device. It is not the signal strength of the radio communications with the pump/pod. The phone to device Signal Strenth is reported as a negative number so a -50 dB signal is stronger than -80 dB. As you move the device and iPhone closer/farther apart, you will be able to see the signal strength change. In a pinch, this can be used to help locate a lost device in the house or at the park after dark. Personalize Device \u00b6 As soon as you connect the RileyLink compatible device initially - it is strongly encouraged that you rename it from the default name for that device, e.g., RileyLink or OrangeLink or EmaLink . Once you display the RileyLink Status and Commands screen: Tap on the Name line Enter your desired name Wait a few seconds before doing anything The new name needs to be transferred and saved in the device If you return to the Pump screen too soon, it might not happen - just repeat the process The device must be connected and on to change its name","title":"RileyLink Display"},{"location":"operation/loop-settings/rileylink/#rileylink","text":"The RileyLink (or compatible device) screen is accessed by clicking on the image of your connected pump in Loop settings or the pump icon in the Heads Up Display to bring up the associated pump screen. From that screen, scroll down to the section labeled DEVICES to view the list of connected RileyLink compatible device(s) and tap on the name with a green slider that you want to display. An example is shown in the graphic below.","title":"RileyLink"},{"location":"operation/loop-settings/rileylink/#signal-loss","text":"If there is a problem communicating with that RileyLink compatible device, tapping on the line will show out-of-date or missing information. Go to Troubleshoot: Red Loop: RileyLink Section for suggestions. With Loop 3 The Pump Devices display will show the signal loss icon instead of reporting dB as shown in the graphic below. If the problem persists, you'll start to see some Error Messages as well.","title":"Signal Loss"},{"location":"operation/loop-settings/rileylink/#rileylink-status-and-commands","text":"Tapping on a name with a green slider takes you to the RileyLink Status and Commands screen for that device. The name at the top center is whatever you named your RileyLink compatible device . The RileyLink screen is the same regardless of the pump you are using. The three graphics below match the display for Loop 3. For Loop 2.2.x - the displays are almost identical when the patch mentioned below the graphic is applied. The firmware displayed is specific to each device. Patch Required for Loop 2.2.x Some devices have features not available with other devices. With Loop 2.2.6 some features were added to the OrangeLink , but there is a mismatch of reported hardware for some versions of OrangeLink firmware which prevents the Find Device row from showing up for OL Pro. The EmaLink extra features did not make it into the Loop v2.2.6 release. With Loop 2.2.x, to see the displays shown in the graphics below, please follow instructions in the EmaLink and OrangeLink Feature and Patch sections .","title":"RileyLink Status and Commands"},{"location":"operation/loop-settings/rileylink/#device","text":"The lines under the Device section provide information on the device. The two most important lines are the Connection Status and Signal Strength. The Connections Status should say connected if the device is connected to the iPhone's Bluetooth. If the status says connecting or disconnected then you should toggle the iPhone's BT and/or power cycle the device to help reconnect. The Signal Strength is the strength of the Bluetooth signal between the iPhone and the device. It is not the signal strength of the radio communications with the pump/pod. The phone to device Signal Strenth is reported as a negative number so a -50 dB signal is stronger than -80 dB. As you move the device and iPhone closer/farther apart, you will be able to see the signal strength change. In a pinch, this can be used to help locate a lost device in the house or at the park after dark.","title":"Device"},{"location":"operation/loop-settings/rileylink/#personalize-device","text":"As soon as you connect the RileyLink compatible device initially - it is strongly encouraged that you rename it from the default name for that device, e.g., RileyLink or OrangeLink or EmaLink . Once you display the RileyLink Status and Commands screen: Tap on the Name line Enter your desired name Wait a few seconds before doing anything The new name needs to be transferred and saved in the device If you return to the Pump screen too soon, it might not happen - just repeat the process The device must be connected and on to change its name","title":"Personalize Device"},{"location":"operation/loop-settings/services/","text":"Loop Services \u00b6 Near the bottom of your Loop settings screen is a section called \"Services\". Sevices are Optional Loop will work whether you use these or not. Nightscout is highly recommended by experienced Loopers but can be added later - you don't need it to get started. For Loop 2.2.x, the services listed in the graphic below can be added by clicking on the Tap to set arrow. For Loop 3, the services are added by tapping on the + sign and choosing the service from the list. Nightscout \u00b6 There is a whole section in LoopDocs about Nightscout. Please follow this link to the Using Nightscout with Loop section of LoopDocs. That also has the links you might need to the official Nightscout Documentation (different website). If you have an existing Nightscout site, it's still a good idea to review that section, but here's the quick summary of how to add your Site URL and API_SECRET to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API_SECRET , it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites). The two most common errors in filling out this section are: Failure to use https:// in the site URL . If you use http:// (see how that doesn't have the \"s\" at the end?), you will get an error message about an App Transport Security policy. Having a trailing slash on the end of the URL (or an embedded space). If you copy and paste from a web browser, make sure to delete the trailing slash on the URL entry. More Tips about Nightscout One family had an app configured to block some websites for their child's phone and accidentally blocked their Nightscout URL - took them a while to figure out that mistake. If you use T1pal (paid Nightscout Service) Sign in to T1pal Select Configure my Nightscout Select Uploaders Use the copy button for URL and paste into Loop Repeat for API_SECRET Loggly \u00b6 Loggly is a free logging service. If you sign up for an account, you'll need to go under Source Setup and then Customer Tokens . Copy and paste your customer token into your Loop App settings for Loggly. Amplitude \u00b6 Amplitude is a remote event monitoring service and can be used to quickly identify errors and events with Loop. Amplitude stores the events and allows you to view those events as points in time. To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues. If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup. Next Step: Loop Displays \u00b6 Great job, almost finished! Now that you have completed your services, let's move onto understanding your Loop Displays. Loop 2.2.x - click on this link for Displays Loop 3 - click on this link for Displays . Loop displays is a valuable tool for understanding your Loop and a great page to review when troubleshooting.","title":"Step 5: Loop Services"},{"location":"operation/loop-settings/services/#loop-services","text":"Near the bottom of your Loop settings screen is a section called \"Services\". Sevices are Optional Loop will work whether you use these or not. Nightscout is highly recommended by experienced Loopers but can be added later - you don't need it to get started. For Loop 2.2.x, the services listed in the graphic below can be added by clicking on the Tap to set arrow. For Loop 3, the services are added by tapping on the + sign and choosing the service from the list.","title":"Loop Services"},{"location":"operation/loop-settings/services/#nightscout","text":"There is a whole section in LoopDocs about Nightscout. Please follow this link to the Using Nightscout with Loop section of LoopDocs. That also has the links you might need to the official Nightscout Documentation (different website). If you have an existing Nightscout site, it's still a good idea to review that section, but here's the quick summary of how to add your Site URL and API_SECRET to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API_SECRET , it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites). The two most common errors in filling out this section are: Failure to use https:// in the site URL . If you use http:// (see how that doesn't have the \"s\" at the end?), you will get an error message about an App Transport Security policy. Having a trailing slash on the end of the URL (or an embedded space). If you copy and paste from a web browser, make sure to delete the trailing slash on the URL entry. More Tips about Nightscout One family had an app configured to block some websites for their child's phone and accidentally blocked their Nightscout URL - took them a while to figure out that mistake. If you use T1pal (paid Nightscout Service) Sign in to T1pal Select Configure my Nightscout Select Uploaders Use the copy button for URL and paste into Loop Repeat for API_SECRET","title":"Nightscout"},{"location":"operation/loop-settings/services/#loggly","text":"Loggly is a free logging service. If you sign up for an account, you'll need to go under Source Setup and then Customer Tokens . Copy and paste your customer token into your Loop App settings for Loggly.","title":"Loggly"},{"location":"operation/loop-settings/services/#amplitude","text":"Amplitude is a remote event monitoring service and can be used to quickly identify errors and events with Loop. Amplitude stores the events and allows you to view those events as points in time. To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues. If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.","title":"Amplitude"},{"location":"operation/loop-settings/services/#next-step-loop-displays","text":"Great job, almost finished! Now that you have completed your services, let's move onto understanding your Loop Displays. Loop 2.2.x - click on this link for Displays Loop 3 - click on this link for Displays . Loop displays is a valuable tool for understanding your Loop and a great page to review when troubleshooting.","title":"Next Step: Loop Displays"},{"location":"troubleshooting/loop-crashing/","text":"Loop Crashes Upon Opening \u00b6 If your Loop app crashes immediately upon opening, you have a problem that needs to be fixed. What do I mean by \"crashes\"? Your Loop app immediately turns to a white screen and shuts itself down, landing you back at your iPhone's main screen. No amount of tapping will let you keep your Loop app open. The most likely cause of this is your Loop app expired. Expired app \u00b6 Your Loop app has an expiration date. The expiration date will depend on the type of developer account that signed the app. If you build with a paid account, your app will expire after 12 months. If you build with a free account, your app will expire after 7 days. Paid account (1 year) \u00b6 When your app expires after a year, you need to follow the steps on the Build Updating page. Your phone will probably have a new iOS that may require an updated version of Xcode that may require an updated Mac operating system. All this is explained in the link above. Give yourself time before expiration to prepare yourself. To make it easy to build when you have to, practice building every 3 to 6 months. This makes the process much lower stress. Also, each time you build, when you follow the link above, you give yourself another full year before rebuilding is required . Please review the Updating FAQS Personal Team (7 day) \u00b6 When your app expires, you simply need to open Xcode , reopen the project: File->Open Recent, plug your phone back into the computer and select it in Xcode and press the play button on your project again. This will rebuild. If you want to change to a paid signing team before rebuilding, please make sure to double-check which signing team is selected before building again. Switching From Free to Paid \u00b6 If you started with a free account and switched to a paid account: Many people accidentally build with their old free account How can you tell which you're signing with? The free signing team has the (Personal Team) listed after your name in the signing team Remember that switching from free to paid changes the developer name incorporated into your Loop App A separate Loop app is created - see Switching from Free to Paid Membership for more details Did you select the new app and enter all your settings into it and then delete the 7-day app? The new app issue only happens if you change developer name As long as you stick with the same developer ID, updated Loop apps are built over existing apps and all your settings should be maintained Other reasons \u00b6 If you experience a crash for any other reason, please gather all the information you can about what was happening before the crash and report it to your favorite Loop Social Media help site - you will need to get some personalized help. Please - choose one site for your post and wait for someone to get back to you. While you are waiting, search on any of the sites and, if on Facebook, read all the announcements.","title":"Loop App crashes"},{"location":"troubleshooting/loop-crashing/#loop-crashes-upon-opening","text":"If your Loop app crashes immediately upon opening, you have a problem that needs to be fixed. What do I mean by \"crashes\"? Your Loop app immediately turns to a white screen and shuts itself down, landing you back at your iPhone's main screen. No amount of tapping will let you keep your Loop app open. The most likely cause of this is your Loop app expired.","title":"Loop Crashes Upon Opening"},{"location":"troubleshooting/loop-crashing/#expired-app","text":"Your Loop app has an expiration date. The expiration date will depend on the type of developer account that signed the app. If you build with a paid account, your app will expire after 12 months. If you build with a free account, your app will expire after 7 days.","title":"Expired app"},{"location":"troubleshooting/loop-crashing/#paid-account-1-year","text":"When your app expires after a year, you need to follow the steps on the Build Updating page. Your phone will probably have a new iOS that may require an updated version of Xcode that may require an updated Mac operating system. All this is explained in the link above. Give yourself time before expiration to prepare yourself. To make it easy to build when you have to, practice building every 3 to 6 months. This makes the process much lower stress. Also, each time you build, when you follow the link above, you give yourself another full year before rebuilding is required . Please review the Updating FAQS","title":"Paid account (1 year)"},{"location":"troubleshooting/loop-crashing/#personal-team-7-day","text":"When your app expires, you simply need to open Xcode , reopen the project: File->Open Recent, plug your phone back into the computer and select it in Xcode and press the play button on your project again. This will rebuild. If you want to change to a paid signing team before rebuilding, please make sure to double-check which signing team is selected before building again.","title":"Personal Team (7 day)"},{"location":"troubleshooting/loop-crashing/#switching-from-free-to-paid","text":"If you started with a free account and switched to a paid account: Many people accidentally build with their old free account How can you tell which you're signing with? The free signing team has the (Personal Team) listed after your name in the signing team Remember that switching from free to paid changes the developer name incorporated into your Loop App A separate Loop app is created - see Switching from Free to Paid Membership for more details Did you select the new app and enter all your settings into it and then delete the 7-day app? The new app issue only happens if you change developer name As long as you stick with the same developer ID, updated Loop apps are built over existing apps and all your settings should be maintained","title":"Switching From Free to Paid"},{"location":"troubleshooting/loop-crashing/#other-reasons","text":"If you experience a crash for any other reason, please gather all the information you can about what was happening before the crash and report it to your favorite Loop Social Media help site - you will need to get some personalized help. Please - choose one site for your post and wait for someone to get back to you. While you are waiting, search on any of the sites and, if on Facebook, read all the announcements.","title":"Other reasons"},{"location":"troubleshooting/omnipod-faults/","text":"Omnipod Faults \u00b6 Pod faults are shown in the HUD : Loop will put a higher battery load on a pod than the PDM due to its regular and repeated communications. A pod with lower battery level appears to be more likely to fault for conditions like static electricity and occlusions/pump issues that Loop is not directly causing, like internal fault codes 052, 061, 064 and 066. Pods always perform safety checks and if a potential problem is found, the pod will end itself by screaming and stop with the insulin delivery. Note During extensive tests after getting all commands working properly, many failures due to one specific safety check were still encountered. This check needed to recover its counter within 30 minutes after a temp basal returning to a normal basal schedule, or else the pod would scream. Eventually, this was resolved by disabling only this particular check. Therefore the 096-106 faults are always ignored in the current configuration of Loop. Known internal pod fault codes \u00b6 The currently known pod faults are listed here on the openomni wiki page: Pod Fault codes Ways to reduce the possibility of a fault \u00b6 None of the ways listed here are guaranteed to reduce the possibility of a screaming pod, but they could be worth considering. Keep the Loop app up to date; newer versions might include improvements to reduce pod battery load Use a 433 Mhz RileyLink for Eros Pods Maintain a wider correction range (10 to 20 mg/dL; 0.5 to 1.1 mmol/L) instead of a single number Not \"replacement pod\" situations \u00b6 Normal pod use will still give these two reasons for a screaming pod. These are not eligible for a replacement: 028, Pod expired, (HEX code: 0x1C) 024, Empty reservoir, (HEX code: 0x18) In the unlikely event that Loop issues a command to the pod when the pod is not in the correct state to receive it, the pod will scream and the reported fault is: 049, Incorrect pod state for command, (HEX code: 0x31) This is not the type of fault to report to Insulet or ask for a replacement pod Instead, capture a Loop Report and report it to the developers as soon as possible Replacement pod situations \u00b6 You can always call Insulet tech support if a pod has a clear failure on the pod, such as: A cannula was sticking out when the end cap was removed. Visual inspection of the pod's cannula window indicating the cannula insertion was not successful. Leaking or kinked cannula was causing insulin delivery issues. The adhesive was not working properly when trying to place it on your body. The pod begins to scream during pairing or priming or insertion If the pod fails during use with Loop, a replacement might still be possible. The software which communicates with the pod isn't developed or supported by Insulet. Generally speaking, calling in failed pods for reasons not in the list above, on the third day of pod life, is a bit of a reach for the DIY community. There is a grey area here that we should be careful of and acknowledge that Looping may be a contributor in certain faults. Insulet is aware that pods are used by the DIY community. You can be honest about your use and might receive replacement pods. If your pod fails early, it is worth informing Insulet for their troubleshooting records even if you do not get a replacement.","title":"Omnipod Faults"},{"location":"troubleshooting/omnipod-faults/#omnipod-faults","text":"Pod faults are shown in the HUD : Loop will put a higher battery load on a pod than the PDM due to its regular and repeated communications. A pod with lower battery level appears to be more likely to fault for conditions like static electricity and occlusions/pump issues that Loop is not directly causing, like internal fault codes 052, 061, 064 and 066. Pods always perform safety checks and if a potential problem is found, the pod will end itself by screaming and stop with the insulin delivery. Note During extensive tests after getting all commands working properly, many failures due to one specific safety check were still encountered. This check needed to recover its counter within 30 minutes after a temp basal returning to a normal basal schedule, or else the pod would scream. Eventually, this was resolved by disabling only this particular check. Therefore the 096-106 faults are always ignored in the current configuration of Loop.","title":"Omnipod Faults"},{"location":"troubleshooting/omnipod-faults/#known-internal-pod-fault-codes","text":"The currently known pod faults are listed here on the openomni wiki page: Pod Fault codes","title":"Known internal pod fault codes"},{"location":"troubleshooting/omnipod-faults/#ways-to-reduce-the-possibility-of-a-fault","text":"None of the ways listed here are guaranteed to reduce the possibility of a screaming pod, but they could be worth considering. Keep the Loop app up to date; newer versions might include improvements to reduce pod battery load Use a 433 Mhz RileyLink for Eros Pods Maintain a wider correction range (10 to 20 mg/dL; 0.5 to 1.1 mmol/L) instead of a single number","title":"Ways to reduce the possibility of a fault"},{"location":"troubleshooting/omnipod-faults/#not-replacement-pod-situations","text":"Normal pod use will still give these two reasons for a screaming pod. These are not eligible for a replacement: 028, Pod expired, (HEX code: 0x1C) 024, Empty reservoir, (HEX code: 0x18) In the unlikely event that Loop issues a command to the pod when the pod is not in the correct state to receive it, the pod will scream and the reported fault is: 049, Incorrect pod state for command, (HEX code: 0x31) This is not the type of fault to report to Insulet or ask for a replacement pod Instead, capture a Loop Report and report it to the developers as soon as possible","title":"Not \"replacement pod\" situations"},{"location":"troubleshooting/omnipod-faults/#replacement-pod-situations","text":"You can always call Insulet tech support if a pod has a clear failure on the pod, such as: A cannula was sticking out when the end cap was removed. Visual inspection of the pod's cannula window indicating the cannula insertion was not successful. Leaking or kinked cannula was causing insulin delivery issues. The adhesive was not working properly when trying to place it on your body. The pod begins to scream during pairing or priming or insertion If the pod fails during use with Loop, a replacement might still be possible. The software which communicates with the pod isn't developed or supported by Insulet. Generally speaking, calling in failed pods for reasons not in the list above, on the third day of pod life, is a bit of a reach for the DIY community. There is a grey area here that we should be careful of and acknowledge that Looping may be a contributor in certain faults. Insulet is aware that pods are used by the DIY community. You can be honest about your use and might receive replacement pods. If your pod fails early, it is worth informing Insulet for their troubleshooting records even if you do not get a replacement.","title":"Replacement pod situations"},{"location":"troubleshooting/overview/","text":"Troubleshooting \u00b6 After you have been using Loop for a while, there's a potential that you will run across a behavior or issue that you wonder if it is normal or intended. When that happens, there are a few things that we'd recommend doing to resolve the issue. Gather information \u00b6 Screenshots \u00b6 Take a screenshot of your Loop main display screen , or other screens such as the display when you touch a red loop icon that may help you or troubleshooters better understand your issue. A lot of times a picture is worth a thousand words. Being able to see recent Loop basal adjustments, predicted BG curve, and carb entries really help fill in the full story of the current Loop status. If you didn't manage to get a screenshot when the issue was happening, you can also go to Nightscout and scroll back over the previous 48 hours to obtain much of the same information. Try to capture a Nightscout screen from the time period in question. Check the Docs \u00b6 Loop docs are updated regularly. If you built your Loop app awhile ago, chances are good that more information has been updated and changed since you last read them. Please use the search tool - if there's an error message - search for it. Scan the topics in the Troubleshoot tab of LoopDocs and look for a page that may be applicable. The FAQs pages are definitely worth reviewing too. Issue Report \u00b6 Use the Issue Report Loop 3 / Loop 2 command under Loop Settings to generate a Loop Report. This has a lot of detailed information that may help you or a mentor understand your problem. The Loop Report (a text file) contains important information about actions and status that can be very useful for troubleshooters...particularly with unexplained behaviors. The upper right corner of the Loop Report includes a button so that you can email the Loop Report to yourself (or others). Check Resources \u00b6 GitHub Issues \u00b6 Check the current list of GitHub Loop Issues for known issues. Many times other users have noticed the same issue previously and opened an Issue so that more information can be added to help develop a solution. If you see your same issue has already been reported, please add to the open issue instead of creating a new one. There is a nice search feature on github issues - type a keyword into the box next to Filters: where it says \"is:issue is:open\" in the graphic and the display will show just those open issues that contain the keyword in the title. Zulipchat and Facebook \u00b6 Search in Zulipchat , Looped Facebook Group or LoopandLearn Facebook Group . Quite possibly someone else has already posted about the same issue and perhaps a resolution has already been provided. Ask for Help \u00b6 If you can't find any information in LoopDocs, GitHub Issues, Zulipchat, or Facebook...PLEASE post and ask for help. GitHub Issues list is an EXCELLENT place to post issues of unexpected Loop behavior (that you believe are errant or need improvement). However, if you are just seeking clarifications on Loop, but don't necessarily expect that there's a problem with the underlying code, then Facebook and Zulipchat is a better place. For example, Zulipchat and Facebook are great for asking about bolus strategies or exercise target use...those aren't really code issues. When you post, provide a description along with any screenshots of the issue you are having and include the version of Loop you are running and the iOS on your device. (Tap on Loop-Settings and look at the top of the screen to get the Loop version number). You don't necessarily have to tag any particular person, the community is fairly active in replying to messages. Post in only one place - the same volunteers monitor various sites.","title":"Troubleshooting Overview"},{"location":"troubleshooting/overview/#troubleshooting","text":"After you have been using Loop for a while, there's a potential that you will run across a behavior or issue that you wonder if it is normal or intended. When that happens, there are a few things that we'd recommend doing to resolve the issue.","title":"Troubleshooting"},{"location":"troubleshooting/overview/#gather-information","text":"","title":"Gather information"},{"location":"troubleshooting/overview/#screenshots","text":"Take a screenshot of your Loop main display screen , or other screens such as the display when you touch a red loop icon that may help you or troubleshooters better understand your issue. A lot of times a picture is worth a thousand words. Being able to see recent Loop basal adjustments, predicted BG curve, and carb entries really help fill in the full story of the current Loop status. If you didn't manage to get a screenshot when the issue was happening, you can also go to Nightscout and scroll back over the previous 48 hours to obtain much of the same information. Try to capture a Nightscout screen from the time period in question.","title":"Screenshots"},{"location":"troubleshooting/overview/#check-the-docs","text":"Loop docs are updated regularly. If you built your Loop app awhile ago, chances are good that more information has been updated and changed since you last read them. Please use the search tool - if there's an error message - search for it. Scan the topics in the Troubleshoot tab of LoopDocs and look for a page that may be applicable. The FAQs pages are definitely worth reviewing too.","title":"Check the Docs"},{"location":"troubleshooting/overview/#issue-report","text":"Use the Issue Report Loop 3 / Loop 2 command under Loop Settings to generate a Loop Report. This has a lot of detailed information that may help you or a mentor understand your problem. The Loop Report (a text file) contains important information about actions and status that can be very useful for troubleshooters...particularly with unexplained behaviors. The upper right corner of the Loop Report includes a button so that you can email the Loop Report to yourself (or others).","title":"Issue Report"},{"location":"troubleshooting/overview/#check-resources","text":"","title":"Check Resources"},{"location":"troubleshooting/overview/#github-issues","text":"Check the current list of GitHub Loop Issues for known issues. Many times other users have noticed the same issue previously and opened an Issue so that more information can be added to help develop a solution. If you see your same issue has already been reported, please add to the open issue instead of creating a new one. There is a nice search feature on github issues - type a keyword into the box next to Filters: where it says \"is:issue is:open\" in the graphic and the display will show just those open issues that contain the keyword in the title.","title":"GitHub Issues"},{"location":"troubleshooting/overview/#zulipchat-and-facebook","text":"Search in Zulipchat , Looped Facebook Group or LoopandLearn Facebook Group . Quite possibly someone else has already posted about the same issue and perhaps a resolution has already been provided.","title":"Zulipchat and Facebook"},{"location":"troubleshooting/overview/#ask-for-help","text":"If you can't find any information in LoopDocs, GitHub Issues, Zulipchat, or Facebook...PLEASE post and ask for help. GitHub Issues list is an EXCELLENT place to post issues of unexpected Loop behavior (that you believe are errant or need improvement). However, if you are just seeking clarifications on Loop, but don't necessarily expect that there's a problem with the underlying code, then Facebook and Zulipchat is a better place. For example, Zulipchat and Facebook are great for asking about bolus strategies or exercise target use...those aren't really code issues. When you post, provide a description along with any screenshots of the issue you are having and include the version of Loop you are running and the iOS on your device. (Tap on Loop-Settings and look at the top of the screen to get the Loop version number). You don't necessarily have to tag any particular person, the community is fairly active in replying to messages. Post in only one place - the same volunteers monitor various sites.","title":"Ask for Help"},{"location":"troubleshooting/pod-pairing/","text":"Pod Pairing Failures \u00b6 Have you seen an error message during the pairing process for a new pod? The most common messages are \"No response from pod\" or \"Pod sent ack instead of response\", as shown below. There have been a large number of fixes and improvements to reduce various pairing problems and to automatically recover from them when they do occur. Make sure you stay on top of Loop updates to take advantage of these code improvements. It is strongly recommended to update to a modern stable version (i.e., the current Loop master release) when running any version of Loop prior to V2.2.4 with an Omnipod . In particular, you should never run Loop V2.2.3 with an Omnipod due to a severe UI bug that can result in a partially setup pod where the only possible recovery is an immediate Loop update to be able to complete the pod setup process. Why do pod pairings fail? \u00b6 Assuming the RileyLink is ok, the most common cause of a pod pairing failure is that Loop incorrectly partially pairs with the pod due to some problems during the fragile pairing process, perhaps aggravated by the placement of the RileyLink and the pod, wireless communications interference, and/or incorrect handling of some fault and retry conditions in versions of Loop prior to V2.2.4 that can leave the pod in an apparent non-responding state. This page will help you walk through some easy troubleshooting steps to recover that pod into good working order. Move Logically Let's walk through the pod pairing/replacement process from the very beginning to make sure that we have all the important steps clearly identified even before you attempt to press that Pair button. Step 0: Check your Loop version \u00b6 You can check which version of Loop you are running by pressing the gear in the bottom right hand corner of the Loop home screen and then looking at the line under the header. If you are running Loop V2.2.3, you should update immediately as this is the only way to recover from a number of pairing failure situations. If you are running a version of Loop prior to V2.2.4 (or its equivalent), it is recommended to update to the current Loop master release to prevent pairing difficulties. Step 1: Verify the RileyLink \u00b6 First, let's make sure everything is ok as far as the RileyLink goes: RileyLink is charged and nearby, and RileyLink has a green LED light lit (indicating a Bluetooth connection with your iPhone), and Try toggling the RileyLink off/on at its physical switch if the green light is not on. Step 2: Deactivate old Pod \u00b6 Make sure you've deactivated your old pod. If you had issues deactivating your pod, you likely may have some RileyLink issues going on...so make sure to see the steps above. If you have a problem with deactivating a pod, go ahead and skip to Step 5 to get a new pod going. You should also remove that old pod (that would not deactivate) from your vicinity. Put it in a microwave or throw it over the fence into the neighbor's backyard (kidding, obviously...but outside trashcan is a good idea). Step 3: Start new pairing process \u00b6 You've deactivated your old pod successfully...great! As the first part of pairing a new pod, Loop will prompt you to fill the new pod with insulin. Once a new pod is powered-up by the insertion of at least 85 units of insulin, the pod will emit reminder beeps every 5 or 10 minutes until the entire pod pairing process has completed. This pairing process must be completed within 60 minutes of beeps starting, or the pod will give up and never pair. These activation reminder beeps do not actually indicate that any pod communication is being attempted, just that the activation has not yet been completed and your 60 minute timer is counting down. Hopefully, your pod pairing continues uneventfully at this point. You'll press the Pair button and the pod pairs, primes, and the cannula insertion is successful. BUT, if not...you'll want to keep reading Steps 4-5 to find out how to recover. One beeping pod at a time, please It is very important to not have two pods giving reminder beeps at the same time as this can cause even more confusion for you and for Loop. Continue to work with a single pod at a time, retrying the Pair attempts multiple times if needed as described in Step 4. If you cannot get the pairing to complete with the single beeping pod (after trying the procedures described below a few times with multiple Pair attempts during each try), then you should completely abandon that pod before attempting to use another pod. \"Completely abandon\" means move that failed-to-pair-no-matter-what-you-tried pod far, far away from you or put it in a not-turned-on-but-door-is-closed microwave. You do not want that beeping-but-not-pairing pod to be able to plague your next pod's communications with Loop during the fresh pairing process. Step 4: Check the RileyLink and Pod's Placement \u00b6 Pod pairing failed? Ok, so you've pressed that Pair button and received an error message like shown at the top of screen? It's time to start the stepwise process of seeing if we can get it to recover successfully. The placement of the pod and the RileyLink relative to each other is critical variable because the pod operates in a low power radio mode during pairing which can lead to a number of potential faulty and half-paired pod situations, particularly with earlier versions of Loop. How close should they be? Most people assume \"the closer the better\", but it has been measured that if the RileyLink and pod are too close together , the RileyLink may not be able to pick up the pairing response. The current recommendation is for the RileyLink to be placed a few inches to the side of the pod being paired. If Pair fails, move a bit and RETRY If the Pair operation is not succeeding, try repositioning the relative placement of the RileyLink and the pod multiple times. A little closer together if you had them far apart? A bit farther apart if they were really close? RileyLink on its side? Try standing it up with the antenna pointed to the ceiling. If the pairing is still unsuccessful with multiple repositioning attempts, move yourself, the RileyLink , and the pod to another area/room (preferably away from other radio frequency signals that might be interfering), and try Pair again. Again don't be shy to try repositioning the RileyLink and pod's relative position, if needed, in this new area/room too. If you have another available RileyLink , you can also try pairing using that RileyLink instead. Step 5: Pod Pairing Recovery \u00b6 When you have a pod that continues to appear non-responsive or sending \"ack\" responses after several retried Pair attempts, it may be possible to recover by forcing Loop to start the pairing process from the beginning. To start we will have to press the Cancel button in the upper right corner of the pairing screen. Depending on which state the pod is stuck at in the pairing process...you'll see one of two screens after you select the Cancel button. Follow the directions (Step 5A vs Step 5B) for whichever screen corresponds to what you see after pressing Cancel . Step 5A \"Switch from Omnipod Pumps\": You press Cancel and Loop will send you back to the Pod Settings screen to do the \"Switch from Omnipod Pumps\" method Step 5B \"Deactivate\": You press Cancel and Loop will display a screen giving the option to \"Deactivate\" Step 5A \"Switch from Omnipod Pumps\" \u00b6 If you press the Cancel button and see a screen like below, you're going to select Switch from Omnipod Pumps in red. While this appears to confirm that you want to stop using the Omnipod , we will be adding pods back soon. Don't worry. Don't fret. None of your Loop settings including the basal schedule and delivery limits, will be lost deleting the Omnipod pump. Select Delete Omnipod to proceed which will take you back to the Loop home screen. From here, select the gear icon at the bottom right to go the Loop Settings page. Then select Add Pump in blue and then select Omnipod from the Add Pump list displayed. Verify that the green LED on the RileyLink goes on and off as you touch the switch for RileyLink you are using indicating a successful Bluetooth connection between the RileyLink and your iPhone. Leave the RileyLink enabled with its green LED and slider turned on, and then touch the Continue button on the bottom. The Pod Settings screen should have the previous Basal Rates and Delivery Limits in effect from your previous run which can be verified at this time. Once ready, select Continue on the bottom of the screen. Finally, you will be back to the Pod Pairing screen. Instead of filling a new pod with insulin, attempt to pair again using the original pod which was previously filled but unable to complete the pairing process successfully. That pod should still be occassionally giving reminder beeps. Place the RileyLink a few inches to the side of the pod and press the Pair button at the bottom of the screen and hopefully Loop will be able to successfully pair this time after starting from a fresh slate. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally. Step 5B \"Deactivate pod\" \u00b6 If you press the Cancel button and see an option for \"Deactivate pod\", we're going to do a little different than Step 5A. You might lose your pod by attempting this procedure This is a point of no return for certain pod pairing situations and it is possible that the pod will be lost by attempting this procedure depending on the pod state. Some will recover fine, others may not. Since you can't know in advance if you might lose the pod, it is important to have already exhausted other possibilities described above in Steps 1-4 to try pairing. Specifically, (1) attempting to pair several times using varied relative positions of the RileyLink and pod (2) trying the pairing again but in a different room/location that might have less wireless interference, and (3) verifying your RileyLink is connected and functioning correctly. For this next part, we want to make sure that the pod doesn't accidentally receive the deactivation command we are about to use. We want Loop to do the command...we just really don't want the pod to hear it. There's two ways we can keep the pod from hearing it, either (1) prevent the RileyLink from hearing Loop's command (and thus the command cannot reach the pod) or (2) prevent the pod from hearing the command from RileyLink . To accomplish our keep-the-pod-ignorant goal, you can try either option like so: Prevent RileyLink from hearing: Turn your RileyLink off temporarily at its physical switch. Some people worry about accidentally breaking their RileyLink switch, and if that's you...you can instead put the RileyLink far away from your iPhone or put the RileyLink in the microwave. That will keep the RileyLink from hearing the Loop's deactivate pod command. If RileyLink can't hear it, then your pod won't receive it. Prevent pod from hearing: Move the beeping pod to a place that the pod is incapable of hearing the command. There's several options depending on what works for you: Put the beeping pod far away...\"shouldn't be able to hear those beeps anymore\" kind of distance. Put the pod in a not-turned-on-but-door-is-closed microwave. Put the pod in a faraday bag, if you own one. Ok. Have the pod nice and ignorant? Good. Now press the \"Deactivate Pod\" button. It will take a few attempts, and you will see some failure messages about how the deactivation failed (of course it did...we hid the pod!) Eventually, you'll be given an \"Continue\" button that you'll want to use. Press the \"Continue\" button. The instructions start with \"fill a new pod with insulin\"...BUT DO NOT! Instead, bring that beeping pod back to the hearing range. Turn that RileyLink back on if you turned it off. Once you get the RileyLink on and the pod back in range, you'll just press the Pair button and hopefully you'll find success with the process. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally. Step 6: Help improve pod pairing process \u00b6 To help fix pairing bugs, some improvements have also been made in our ability to save the communications between the pods and Loop app during the pairing process. So, please help us leverage these new improvements and better squash bugs. If you run into any pairing problems when running a version of Loop prior to V2.2.4, which required Step 5A or Step 5B to be able to pair, or you had a pod that had to be abandoned, it would be helpful to generate an \" Issue Report\" after you finally get a pod paired (whether is was the original pod or if a different pod) and then post the resulting \"Loop Report\" on Zulipchat here with a short explanation of what happened. What about other pod start-up failures? \u00b6 If you have a pod that has already started the priming operation and then has problems either finishing the priming operation or the cannula insertion, then forcing a pod pairing recovery is not possible. If a pod fails during priming or cannula insertion, the pod is no good and it should be deactivated and disposed of properly. What about that insulin? \u00b6 If you have the misfortune of losing a pod during pairing, you can opt to not waste the insulin in that pod. Simply use the same syringe and same fill port on the pod to suck the insulin OUT of the loser pod. If you do that, good practice is to make sure that you get that loser pod far away from the process as you go forward. Mark a big \"X\" on the failed pod and put it in a microwave, or very far away from you, so that it can't interfere with subsequent pod pairing attempts.","title":"Pod Pairing Failures"},{"location":"troubleshooting/pod-pairing/#pod-pairing-failures","text":"Have you seen an error message during the pairing process for a new pod? The most common messages are \"No response from pod\" or \"Pod sent ack instead of response\", as shown below. There have been a large number of fixes and improvements to reduce various pairing problems and to automatically recover from them when they do occur. Make sure you stay on top of Loop updates to take advantage of these code improvements. It is strongly recommended to update to a modern stable version (i.e., the current Loop master release) when running any version of Loop prior to V2.2.4 with an Omnipod . In particular, you should never run Loop V2.2.3 with an Omnipod due to a severe UI bug that can result in a partially setup pod where the only possible recovery is an immediate Loop update to be able to complete the pod setup process.","title":"Pod Pairing Failures"},{"location":"troubleshooting/pod-pairing/#why-do-pod-pairings-fail","text":"Assuming the RileyLink is ok, the most common cause of a pod pairing failure is that Loop incorrectly partially pairs with the pod due to some problems during the fragile pairing process, perhaps aggravated by the placement of the RileyLink and the pod, wireless communications interference, and/or incorrect handling of some fault and retry conditions in versions of Loop prior to V2.2.4 that can leave the pod in an apparent non-responding state. This page will help you walk through some easy troubleshooting steps to recover that pod into good working order. Move Logically Let's walk through the pod pairing/replacement process from the very beginning to make sure that we have all the important steps clearly identified even before you attempt to press that Pair button.","title":"Why do pod pairings fail?"},{"location":"troubleshooting/pod-pairing/#step-0-check-your-loop-version","text":"You can check which version of Loop you are running by pressing the gear in the bottom right hand corner of the Loop home screen and then looking at the line under the header. If you are running Loop V2.2.3, you should update immediately as this is the only way to recover from a number of pairing failure situations. If you are running a version of Loop prior to V2.2.4 (or its equivalent), it is recommended to update to the current Loop master release to prevent pairing difficulties.","title":"Step 0: Check your Loop version"},{"location":"troubleshooting/pod-pairing/#step-1-verify-the-rileylink","text":"First, let's make sure everything is ok as far as the RileyLink goes: RileyLink is charged and nearby, and RileyLink has a green LED light lit (indicating a Bluetooth connection with your iPhone), and Try toggling the RileyLink off/on at its physical switch if the green light is not on.","title":"Step 1: Verify the RileyLink"},{"location":"troubleshooting/pod-pairing/#step-2-deactivate-old-pod","text":"Make sure you've deactivated your old pod. If you had issues deactivating your pod, you likely may have some RileyLink issues going on...so make sure to see the steps above. If you have a problem with deactivating a pod, go ahead and skip to Step 5 to get a new pod going. You should also remove that old pod (that would not deactivate) from your vicinity. Put it in a microwave or throw it over the fence into the neighbor's backyard (kidding, obviously...but outside trashcan is a good idea).","title":"Step 2: Deactivate old Pod"},{"location":"troubleshooting/pod-pairing/#step-3-start-new-pairing-process","text":"You've deactivated your old pod successfully...great! As the first part of pairing a new pod, Loop will prompt you to fill the new pod with insulin. Once a new pod is powered-up by the insertion of at least 85 units of insulin, the pod will emit reminder beeps every 5 or 10 minutes until the entire pod pairing process has completed. This pairing process must be completed within 60 minutes of beeps starting, or the pod will give up and never pair. These activation reminder beeps do not actually indicate that any pod communication is being attempted, just that the activation has not yet been completed and your 60 minute timer is counting down. Hopefully, your pod pairing continues uneventfully at this point. You'll press the Pair button and the pod pairs, primes, and the cannula insertion is successful. BUT, if not...you'll want to keep reading Steps 4-5 to find out how to recover. One beeping pod at a time, please It is very important to not have two pods giving reminder beeps at the same time as this can cause even more confusion for you and for Loop. Continue to work with a single pod at a time, retrying the Pair attempts multiple times if needed as described in Step 4. If you cannot get the pairing to complete with the single beeping pod (after trying the procedures described below a few times with multiple Pair attempts during each try), then you should completely abandon that pod before attempting to use another pod. \"Completely abandon\" means move that failed-to-pair-no-matter-what-you-tried pod far, far away from you or put it in a not-turned-on-but-door-is-closed microwave. You do not want that beeping-but-not-pairing pod to be able to plague your next pod's communications with Loop during the fresh pairing process.","title":"Step 3: Start new pairing process"},{"location":"troubleshooting/pod-pairing/#step-4-check-the-rileylink-and-pods-placement","text":"Pod pairing failed? Ok, so you've pressed that Pair button and received an error message like shown at the top of screen? It's time to start the stepwise process of seeing if we can get it to recover successfully. The placement of the pod and the RileyLink relative to each other is critical variable because the pod operates in a low power radio mode during pairing which can lead to a number of potential faulty and half-paired pod situations, particularly with earlier versions of Loop. How close should they be? Most people assume \"the closer the better\", but it has been measured that if the RileyLink and pod are too close together , the RileyLink may not be able to pick up the pairing response. The current recommendation is for the RileyLink to be placed a few inches to the side of the pod being paired. If Pair fails, move a bit and RETRY If the Pair operation is not succeeding, try repositioning the relative placement of the RileyLink and the pod multiple times. A little closer together if you had them far apart? A bit farther apart if they were really close? RileyLink on its side? Try standing it up with the antenna pointed to the ceiling. If the pairing is still unsuccessful with multiple repositioning attempts, move yourself, the RileyLink , and the pod to another area/room (preferably away from other radio frequency signals that might be interfering), and try Pair again. Again don't be shy to try repositioning the RileyLink and pod's relative position, if needed, in this new area/room too. If you have another available RileyLink , you can also try pairing using that RileyLink instead.","title":"Step 4: Check the RileyLink and Pod's Placement"},{"location":"troubleshooting/pod-pairing/#step-5-pod-pairing-recovery","text":"When you have a pod that continues to appear non-responsive or sending \"ack\" responses after several retried Pair attempts, it may be possible to recover by forcing Loop to start the pairing process from the beginning. To start we will have to press the Cancel button in the upper right corner of the pairing screen. Depending on which state the pod is stuck at in the pairing process...you'll see one of two screens after you select the Cancel button. Follow the directions (Step 5A vs Step 5B) for whichever screen corresponds to what you see after pressing Cancel . Step 5A \"Switch from Omnipod Pumps\": You press Cancel and Loop will send you back to the Pod Settings screen to do the \"Switch from Omnipod Pumps\" method Step 5B \"Deactivate\": You press Cancel and Loop will display a screen giving the option to \"Deactivate\"","title":"Step 5: Pod Pairing Recovery"},{"location":"troubleshooting/pod-pairing/#step-5a-switch-from-omnipod-pumps","text":"If you press the Cancel button and see a screen like below, you're going to select Switch from Omnipod Pumps in red. While this appears to confirm that you want to stop using the Omnipod , we will be adding pods back soon. Don't worry. Don't fret. None of your Loop settings including the basal schedule and delivery limits, will be lost deleting the Omnipod pump. Select Delete Omnipod to proceed which will take you back to the Loop home screen. From here, select the gear icon at the bottom right to go the Loop Settings page. Then select Add Pump in blue and then select Omnipod from the Add Pump list displayed. Verify that the green LED on the RileyLink goes on and off as you touch the switch for RileyLink you are using indicating a successful Bluetooth connection between the RileyLink and your iPhone. Leave the RileyLink enabled with its green LED and slider turned on, and then touch the Continue button on the bottom. The Pod Settings screen should have the previous Basal Rates and Delivery Limits in effect from your previous run which can be verified at this time. Once ready, select Continue on the bottom of the screen. Finally, you will be back to the Pod Pairing screen. Instead of filling a new pod with insulin, attempt to pair again using the original pod which was previously filled but unable to complete the pairing process successfully. That pod should still be occassionally giving reminder beeps. Place the RileyLink a few inches to the side of the pod and press the Pair button at the bottom of the screen and hopefully Loop will be able to successfully pair this time after starting from a fresh slate. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally.","title":"Step 5A \"Switch from Omnipod Pumps\""},{"location":"troubleshooting/pod-pairing/#step-5b-deactivate-pod","text":"If you press the Cancel button and see an option for \"Deactivate pod\", we're going to do a little different than Step 5A. You might lose your pod by attempting this procedure This is a point of no return for certain pod pairing situations and it is possible that the pod will be lost by attempting this procedure depending on the pod state. Some will recover fine, others may not. Since you can't know in advance if you might lose the pod, it is important to have already exhausted other possibilities described above in Steps 1-4 to try pairing. Specifically, (1) attempting to pair several times using varied relative positions of the RileyLink and pod (2) trying the pairing again but in a different room/location that might have less wireless interference, and (3) verifying your RileyLink is connected and functioning correctly. For this next part, we want to make sure that the pod doesn't accidentally receive the deactivation command we are about to use. We want Loop to do the command...we just really don't want the pod to hear it. There's two ways we can keep the pod from hearing it, either (1) prevent the RileyLink from hearing Loop's command (and thus the command cannot reach the pod) or (2) prevent the pod from hearing the command from RileyLink . To accomplish our keep-the-pod-ignorant goal, you can try either option like so: Prevent RileyLink from hearing: Turn your RileyLink off temporarily at its physical switch. Some people worry about accidentally breaking their RileyLink switch, and if that's you...you can instead put the RileyLink far away from your iPhone or put the RileyLink in the microwave. That will keep the RileyLink from hearing the Loop's deactivate pod command. If RileyLink can't hear it, then your pod won't receive it. Prevent pod from hearing: Move the beeping pod to a place that the pod is incapable of hearing the command. There's several options depending on what works for you: Put the beeping pod far away...\"shouldn't be able to hear those beeps anymore\" kind of distance. Put the pod in a not-turned-on-but-door-is-closed microwave. Put the pod in a faraday bag, if you own one. Ok. Have the pod nice and ignorant? Good. Now press the \"Deactivate Pod\" button. It will take a few attempts, and you will see some failure messages about how the deactivation failed (of course it did...we hid the pod!) Eventually, you'll be given an \"Continue\" button that you'll want to use. Press the \"Continue\" button. The instructions start with \"fill a new pod with insulin\"...BUT DO NOT! Instead, bring that beeping pod back to the hearing range. Turn that RileyLink back on if you turned it off. Once you get the RileyLink on and the pod back in range, you'll just press the Pair button and hopefully you'll find success with the process. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally.","title":"Step 5B \"Deactivate pod\""},{"location":"troubleshooting/pod-pairing/#step-6-help-improve-pod-pairing-process","text":"To help fix pairing bugs, some improvements have also been made in our ability to save the communications between the pods and Loop app during the pairing process. So, please help us leverage these new improvements and better squash bugs. If you run into any pairing problems when running a version of Loop prior to V2.2.4, which required Step 5A or Step 5B to be able to pair, or you had a pod that had to be abandoned, it would be helpful to generate an \" Issue Report\" after you finally get a pod paired (whether is was the original pod or if a different pod) and then post the resulting \"Loop Report\" on Zulipchat here with a short explanation of what happened.","title":"Step 6: Help improve pod pairing process"},{"location":"troubleshooting/pod-pairing/#what-about-other-pod-start-up-failures","text":"If you have a pod that has already started the priming operation and then has problems either finishing the priming operation or the cannula insertion, then forcing a pod pairing recovery is not possible. If a pod fails during priming or cannula insertion, the pod is no good and it should be deactivated and disposed of properly.","title":"What about other pod start-up failures?"},{"location":"troubleshooting/pod-pairing/#what-about-that-insulin","text":"If you have the misfortune of losing a pod during pairing, you can opt to not waste the insulin in that pod. Simply use the same syringe and same fill port on the pod to suck the insulin OUT of the loser pod. If you do that, good practice is to make sure that you get that loser pod far away from the process as you go forward. Mark a big \"X\" on the failed pod and put it in a microwave, or very far away from you, so that it can't interfere with subsequent pod pairing attempts.","title":"What about that insulin?"},{"location":"troubleshooting/pump-errors/","text":"Medtronic Pump Errors \u00b6 The Medtronic pumps are used and typically not under warranty. Use this section at your own risk. However, that said, some of the most common pump errors are repairable, or not actually a real problem. A21 error \u00b6 This error message is common when a pump has been stored for a period of time without a battery. Most pumps will show an A21 error when you first purchase them on the used market. Not a big deal. Press the down arrow (also has the symbol of a light bulb on it) and the pump screen message will scroll down to let you know how to clear that error message (press ESC then ACT). If the message is coming up on a pump that hasn't been in storage, pull the battery out and replace with a fresh, new battery. Chances are your battery or battery cap are old. Look for signs of dirt or rust in the battery cap, give it a little cleaning. Display Tip When the pump screen has a little black/white bar on the right side, that is a scroll bar. Use the arrow keys on the right of the pump screen to scroll and see the additional information. Batt Out Limit \u00b6 This error message \"battery out of limits\" has to do with the internal pump battery, not the AAA battery you replace. The internal battery cannot be replaced, and unfortunately also has a finite lifespan. The error message is more of an annoyance than a true problem. You can try to change the AAA battery faster. But, the worst-case scenario is that you'll have to re-enter the time and date when you get this message more often. (Don't forget to use RileyLink to set the time after you get this message.) Button Error \u00b6 The Button Error message usually happens from water, moisture, or dust getting under the pump's button pad and causing button(s) to fail. The fix luckily is quite straight-forward and takes less than 30 minutes. Check out the fix here for a YouTube video or here for photo gallery The solution involves simply prying up the button pad's sticker face to expose the layers beneath. You can see some evidence of crud/rust on the underside of this button pad which caused the button error. After you finish your fix, another excellent idea is to make sure you add a length of clear packing tape across the front face of the pump to prevent errant water or dirt from having easy access to the button pad seams. Crack/Missing Piece Repairs \u00b6 Another common issue on these Medtronic pumps are cracks and/or missing bits of plastic near the battery cap or reservoir sleeve. You can repair these fairly easily. For filling small cracks, Testor's plastic cement or Gorilla epoxy are good choices. For more extensive repairs to replace missing chunks of plastic, Gorilla epoxy or Sugru are excellent choices. You can use teflon thread tape on the battery cap to make sure the epoxy or Sugru don't stick to the battery cap, but still recreate the threads. The first photos are of a Sugru repair and second set of photos are Gorilla epoxy repair. Motor error \u00b6 Often a motor error is the result of a poorly seated reservoir or tubing cap. If you get a motor error, the first thing you should do is detach from your infusion site. Remove and reseat the reservoir, prime again, and see if the motor error resolves. If it does not, try replacing the tubing cap on the reservoir (new tubing). If that does not resolve the motor error, also replace the entire reservoir. A33 error \u00b6 Safety warning If you get this error, DO NOT push on the bulged out end cap. Always detach your tubing from your infusion set before addressing this error message. If you push on the end cap in an attempt to get it back flush, you may delivery a dangerous amount of insulin mistakenly. This error is a bit more involved to repair. The problem is that there is a loose drive support cap. Most of the time this error message will appear during a priming event as the end cap of the drive will slip, releasing the ability of the reservoir plunger to get pressure to delivery insulin. The pump senses the lack of pressure and delivers the A33 error. The solution is to UNHOOK from your site. See warning above. Remove reservoir and put your finger inside the reservoir sleeve. Push on the drive so that the end cap is pushed out the most possible. This will give your the most surface area possible to place the super glue GEL that you will use. (don't use regular super glue...it must be gel.) Remove the sticker that covers the end cap, save it for later because you can reattach when repair is completed. With the end cap pushed out, take some glue gel with the toothpick and apply it on the outside of the popped out cap . Be generous cause you can do this only once . Once you are done take a napkin and press hard the cap toward the pump so it can go back inside and keep it pressed for a few seconds. Then remove all the small parts of the napkin that has glued to the pump. Leave the pump to dry for about 10-15 minutes. Now to test whether the pumps was glued well. You have already waited about 10-15 minutes so put your finger back in and press hard the plunger. If you glued it well, the end cap will not move. If the cap goes out again, you have to glue one more time. If all looks well, put some glue back on top of the pump cap and reattach the sticker that was removed to start. A32 and E22 error loop \u00b6 From what we know, this set of error codes seems like a pump killer. A call to Medtronic support gave this less than hopeful information: A32 - failure of flash memory E22 - software re-installation is necessary We don't have any reports of a good fix for these error codes. When seen, usually the E22 error comes up and as soon as it is cleared, the A32 error comes up. And the loop continues with a pump restart.","title":"MDT Pump Errors"},{"location":"troubleshooting/pump-errors/#medtronic-pump-errors","text":"The Medtronic pumps are used and typically not under warranty. Use this section at your own risk. However, that said, some of the most common pump errors are repairable, or not actually a real problem.","title":"Medtronic Pump Errors"},{"location":"troubleshooting/pump-errors/#a21-error","text":"This error message is common when a pump has been stored for a period of time without a battery. Most pumps will show an A21 error when you first purchase them on the used market. Not a big deal. Press the down arrow (also has the symbol of a light bulb on it) and the pump screen message will scroll down to let you know how to clear that error message (press ESC then ACT). If the message is coming up on a pump that hasn't been in storage, pull the battery out and replace with a fresh, new battery. Chances are your battery or battery cap are old. Look for signs of dirt or rust in the battery cap, give it a little cleaning. Display Tip When the pump screen has a little black/white bar on the right side, that is a scroll bar. Use the arrow keys on the right of the pump screen to scroll and see the additional information.","title":"A21 error"},{"location":"troubleshooting/pump-errors/#batt-out-limit","text":"This error message \"battery out of limits\" has to do with the internal pump battery, not the AAA battery you replace. The internal battery cannot be replaced, and unfortunately also has a finite lifespan. The error message is more of an annoyance than a true problem. You can try to change the AAA battery faster. But, the worst-case scenario is that you'll have to re-enter the time and date when you get this message more often. (Don't forget to use RileyLink to set the time after you get this message.)","title":"Batt Out Limit"},{"location":"troubleshooting/pump-errors/#button-error","text":"The Button Error message usually happens from water, moisture, or dust getting under the pump's button pad and causing button(s) to fail. The fix luckily is quite straight-forward and takes less than 30 minutes. Check out the fix here for a YouTube video or here for photo gallery The solution involves simply prying up the button pad's sticker face to expose the layers beneath. You can see some evidence of crud/rust on the underside of this button pad which caused the button error. After you finish your fix, another excellent idea is to make sure you add a length of clear packing tape across the front face of the pump to prevent errant water or dirt from having easy access to the button pad seams.","title":"Button Error"},{"location":"troubleshooting/pump-errors/#crackmissing-piece-repairs","text":"Another common issue on these Medtronic pumps are cracks and/or missing bits of plastic near the battery cap or reservoir sleeve. You can repair these fairly easily. For filling small cracks, Testor's plastic cement or Gorilla epoxy are good choices. For more extensive repairs to replace missing chunks of plastic, Gorilla epoxy or Sugru are excellent choices. You can use teflon thread tape on the battery cap to make sure the epoxy or Sugru don't stick to the battery cap, but still recreate the threads. The first photos are of a Sugru repair and second set of photos are Gorilla epoxy repair.","title":"Crack/Missing Piece Repairs"},{"location":"troubleshooting/pump-errors/#motor-error","text":"Often a motor error is the result of a poorly seated reservoir or tubing cap. If you get a motor error, the first thing you should do is detach from your infusion site. Remove and reseat the reservoir, prime again, and see if the motor error resolves. If it does not, try replacing the tubing cap on the reservoir (new tubing). If that does not resolve the motor error, also replace the entire reservoir.","title":"Motor error"},{"location":"troubleshooting/pump-errors/#a33-error","text":"Safety warning If you get this error, DO NOT push on the bulged out end cap. Always detach your tubing from your infusion set before addressing this error message. If you push on the end cap in an attempt to get it back flush, you may delivery a dangerous amount of insulin mistakenly. This error is a bit more involved to repair. The problem is that there is a loose drive support cap. Most of the time this error message will appear during a priming event as the end cap of the drive will slip, releasing the ability of the reservoir plunger to get pressure to delivery insulin. The pump senses the lack of pressure and delivers the A33 error. The solution is to UNHOOK from your site. See warning above. Remove reservoir and put your finger inside the reservoir sleeve. Push on the drive so that the end cap is pushed out the most possible. This will give your the most surface area possible to place the super glue GEL that you will use. (don't use regular super glue...it must be gel.) Remove the sticker that covers the end cap, save it for later because you can reattach when repair is completed. With the end cap pushed out, take some glue gel with the toothpick and apply it on the outside of the popped out cap . Be generous cause you can do this only once . Once you are done take a napkin and press hard the cap toward the pump so it can go back inside and keep it pressed for a few seconds. Then remove all the small parts of the napkin that has glued to the pump. Leave the pump to dry for about 10-15 minutes. Now to test whether the pumps was glued well. You have already waited about 10-15 minutes so put your finger back in and press hard the plunger. If you glued it well, the end cap will not move. If the cap goes out again, you have to glue one more time. If all looks well, put some glue back on top of the pump cap and reattach the sticker that was removed to start.","title":"A33 error"},{"location":"troubleshooting/pump-errors/#a32-and-e22-error-loop","text":"From what we know, this set of error codes seems like a pump killer. A call to Medtronic support gave this less than hopeful information: A32 - failure of flash memory E22 - software re-installation is necessary We don't have any reports of a good fix for these error codes. When seen, usually the E22 error comes up and as soon as it is cleared, the A32 error comes up. And the loop continues with a pump restart.","title":"A32 and E22 error loop"},{"location":"troubleshooting/time-change/","text":"Travel and Timezones \u00b6 Airports \u00b6 RileyLinks have no problem going through any of the airport security systems. You can carry it with you in the airplane cabin and it can go through the xray scanner that your carry-on bags go through. Airplane Mode \u00b6 Nothing wrong with airplane mode, but many people forget about it at the time they travel. So, you can do this simple preparation step now: Turn airplane mode on. Then make sure your Bluetooth is still slid \u201con\u201d. If Bluetooth isn\u2019t on, then go slide it on again. Now go ahead and turn airplane mode off again. Why did we just do that? Because in older versions of iOS , airplane mode turned off the first time you ever use it. But, if you remember to turn Bluetooth back on while in airplane mode, two things happen (1) Dexcom and Loop will work while in airplane and (2) airplane mode will \u201cremember\u201d the next time that you like Bluetooth left on in airplane mode and will not turn it off the next time you slide airplane mode on. So now you\u2019ve just prevented yourself from forgetting to turn Bluetooth on the next time you fly and are in a hurry to meet your lovely seat mate and stow your luggage. You can safely follow cabin instructions and put phone in airplane mode without losing Loop or Dexcom. Changing Timezones and Daylight Savings Time \u00b6 Loop is built to operate fully across time zone and daylight savings time changes. When traveling, there is no urgency to update the pump's time to match the wall-clocks in your geography. Configuration schedules\u2014basal rates, target ranges, carb ratios, and insulin sensitivities all remain in the original time zone until modified by Loop command. The app's graphs and status will always display in the time zone of the iPhone, and Loop will understand the difference in offset between the two, highlighting it when attempting to change configuration schedules. When you're ready to update the pump's time, use the Loop Change Time Zone command. This will also shift your configuration schedules to the current time zone. Medtronic Users Do not use the Medtronic pump menus to change your pump's time when Looping. iPhone \u00b6 Loop will assume your iPhone's time (UTC, not timezone) is always correct. This theoretically may not be the case if a nearby cell tower is improperly configured (though there are likely resilience mechanisms in iOS to handle this). Automatic time setting can always be disabled in Settings. Minimed Pump and CGM \u00b6 The Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC. That offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed using the \"Change Time Zone\" command. Dexcom CGM \u00b6 No particular input is needed on your part for Loop to work with Dexcom CGM data. All times are UTC. However for Dexcom receiver users, at time changes you may want to manually change your receiver's time setting just so the time visually appears correct when you are viewing the screen.","title":"Time Changes"},{"location":"troubleshooting/time-change/#travel-and-timezones","text":"","title":"Travel and Timezones"},{"location":"troubleshooting/time-change/#airports","text":"RileyLinks have no problem going through any of the airport security systems. You can carry it with you in the airplane cabin and it can go through the xray scanner that your carry-on bags go through.","title":"Airports"},{"location":"troubleshooting/time-change/#airplane-mode","text":"Nothing wrong with airplane mode, but many people forget about it at the time they travel. So, you can do this simple preparation step now: Turn airplane mode on. Then make sure your Bluetooth is still slid \u201con\u201d. If Bluetooth isn\u2019t on, then go slide it on again. Now go ahead and turn airplane mode off again. Why did we just do that? Because in older versions of iOS , airplane mode turned off the first time you ever use it. But, if you remember to turn Bluetooth back on while in airplane mode, two things happen (1) Dexcom and Loop will work while in airplane and (2) airplane mode will \u201cremember\u201d the next time that you like Bluetooth left on in airplane mode and will not turn it off the next time you slide airplane mode on. So now you\u2019ve just prevented yourself from forgetting to turn Bluetooth on the next time you fly and are in a hurry to meet your lovely seat mate and stow your luggage. You can safely follow cabin instructions and put phone in airplane mode without losing Loop or Dexcom.","title":"Airplane Mode"},{"location":"troubleshooting/time-change/#changing-timezones-and-daylight-savings-time","text":"Loop is built to operate fully across time zone and daylight savings time changes. When traveling, there is no urgency to update the pump's time to match the wall-clocks in your geography. Configuration schedules\u2014basal rates, target ranges, carb ratios, and insulin sensitivities all remain in the original time zone until modified by Loop command. The app's graphs and status will always display in the time zone of the iPhone, and Loop will understand the difference in offset between the two, highlighting it when attempting to change configuration schedules. When you're ready to update the pump's time, use the Loop Change Time Zone command. This will also shift your configuration schedules to the current time zone. Medtronic Users Do not use the Medtronic pump menus to change your pump's time when Looping.","title":"Changing Timezones and Daylight Savings Time"},{"location":"troubleshooting/time-change/#iphone","text":"Loop will assume your iPhone's time (UTC, not timezone) is always correct. This theoretically may not be the case if a nearby cell tower is improperly configured (though there are likely resilience mechanisms in iOS to handle this). Automatic time setting can always be disabled in Settings.","title":"iPhone"},{"location":"troubleshooting/time-change/#minimed-pump-and-cgm","text":"The Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC. That offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed using the \"Change Time Zone\" command.","title":"Minimed Pump and CGM"},{"location":"troubleshooting/time-change/#dexcom-cgm","text":"No particular input is needed on your part for Loop to work with Dexcom CGM data. All times are UTC. However for Dexcom receiver users, at time changes you may want to manually change your receiver's time setting just so the time visually appears correct when you are viewing the screen.","title":"Dexcom CGM"},{"location":"troubleshooting/yellow-red-loop/","text":"Red Loops \u00b6 Red Loop Overview \u00b6 This page provides help if your Loop icon is red and Loop is not working or only working sometimes. You can click on the Red Loop icon to read an error message. If you understand it, great...that should help you fix the problem. If not, grab a screenshot so you can ask for help from a mentor. Omnipod Users Do not pull a pod when there is a red loop. Usually the problem is with Loop, not the pod A new pod won't fix a Loop (Bluetooth or RileyLink communication problem) There are a few times when it is the pod - but try all the steps on this page first . A Red Loop icon means that Loop has not completed a cycle for 15-minutes or more and this is normally because of a communication break-down with one of the systems listed below. To find out which one, tap on the Red Loop icon, read the message and search this page for that message. Typical Causes for Red Loop \u00b6 Some of the reasons listed below cause Loop to go Red and stay Red until you fix it. Others will cause intermittent Red Loops that come and go. RileyLink Compatible Device With Omnipod DASH, click on the link above and follow the Bluetooth steps Continuous Glucose Monitor ( CGM ) Apple Health Background App Refresh is not enabled for Phone, Loop and/or CGM Nightscout (optional service) Phone Storage is Full Lost Pod Information Read this section first Lost Pod Information \u00b6 There is a new reason for a red loop that is not well understood. Before attempting to resolve a red-loop with a phone reboot; please review this section. It can affect the stored CGM information as well as the stored pump information. Be Careful with Phone Reboots If you are using an Omnipod , then before rebooting the phone, make sure it is absolutely necessary - try all other methods first. Be prepared to check that the pod is still communicating with Loop following the reboot. If this rare event happens to you, please report it, save and post a Loop Report and be prepared to put on a new pod and possibly re-enter your CGM information. This could happen to someone using a Medtronic pump, but the consequence is less of a concern because the pump information is not modified as frequently as for Omnipod users. The developers are tracking this issue and if they find a solution, it will be announced. In rare cases, an old copy of app information is read following a reboot. Because your current pod information is stored in this file, if an older copy is provided following reboot - it may be remembering an old pod. The only solution, if this happens to you, is to change pods. This is a copy of what was posted on Facebook by Matthew Kitchin. Announcement from Facebook Caution: Please use rebooting or powering off your iPhone as a last resort for troubleshooting. There is an issue that can occur under unknown conditions where Loop/FreeAPS can revert to a previous state after reboot or power off. This can include symptoms such as Loop/FreeAPS indicating a Pod is expired or share credentials returning even though they were previously removed. There could be other settings that revert to a previous point in time. The exact cause is still under investigation. If this occurs, you will have to replace your current pod. There is no way to recover the active Pod if Loop/FreeAPS reverts to old settings and think the current Pod is expired/needing to be replaced. Obviously reboots do need to happen for things such as iOS updates. For Pod users, if possible, I would plan to do them at the end of a Pod cycle when a Pod change is already planned. This applies to current Master Loop, Loop-dev and FreeAPS. Don't panic: This doesn't happen on every reboot. Until a fix is found, just don't reboot if you don't need to, and try to time it just before a pod change if you can. In case it is related to phone storage, keep plenty of space available on your phone. RileyLink Compatible Device \u00b6 If the indication is one of these (or something similar), it can probably be fixed by resetting the RileyLink compatible device communication with the phone and pump. pump history is too old no rileylink could be found pod cannot be reached Do these steps until one of them fixes the issue: Turn off Bluetooth on your phone and then turn it right back on again. Close your Loop app (upswiping it in the iPhone's app selector) and reopen it. Turn your RileyLink off/on at its physical power switch located on the side of the RileyLink . If you have a different device, make sure you know how to power-cycle the device. For RileyLink (without wireless charging) use a small pointy object to carefully move the slider away from the charging port and then back up towards the charging port. A paperclip on the keyring can provide the help you need to reach the switch in the recessed case, and double as a screaming pod silencer tool . This should restore a green Loop within 5 minutes. If you're impatient, you can issue a \"Read Pod Status\" for Pod or \"Change Time\" for Medtronic (button press command is not available with v2.2.6). If this is successful, you've established pump communication again. Last thing to try is: Power cycle your phone. \u00b6 This suggestion is last because there has been an issue (with iOS 15) in which power cycling the phone does not load the latest version of Loop information Click on the Lost Pod Information link for more information If this was not successful, check out the Pump is Not Responding section. CGM Values Are Not Being Collected by Loop \u00b6 New Transmitter \u00b6 If you recently changed a transmitter, you need to also update your Loop settings to reflect the new transmitter ID. Go to the CGM section of Loop settings and Delete CGM (it's a button on the bottom of that page). Then use the Add CGM in Loop settings to include the new transmitter ID. If you fail to update your Transmitter ID in Loop and you also left Share Credentials in Loop (not recommended), you will see messages such as: Failed to decode SGV when the Share server cannot be reached. That's your notice to update the Transmitter ID (or if you think you already did - check for typos in data entry). Delete Share Account \u00b6 Finally, we see a lot of errors reported because people have problems with their Share server information in Loop app. Please delete your Share account information from within Loop settings. In other words, the credentials portion of the Share account info, as shown in the screenshot below, should say Tap to Set and not have your account info. It is unnecessary to have this portion filled out as local, non-internet spying of a transmitter is the preferred CGM source anyways. In fact, by leaving this information out, it will help you remember to change your transmitter ID when you change transmitters because CGM data won't appear in Loop. By not including Share account in Loop, you will prevent yourself from accidentally becoming internet dependent. Firefly-style Transmitter \u00b6 Leaving this in for historical interest only. It illustrates the need to keep Loop up-to-date. Who knows what the next hardware change will be. Enough time has passed that everyone's Loop code should be newer. In July 2019, we started to see a new style of Dexcom G6 transmitters on the market. These new transmitters required a rework of some of the Loop's code to continue to \"spy\" on the transmitter. Without that update, your Loop can not get CGM data unless it is pulling from Share servers (which is not a recommended mode of operation). So, download fresh code for your Loop app if you have a new transmitter type and haven't downloaded since July 2019. Apple Health \u00b6 Make sure both the Loop app and the Dexcom app have permission to write to Apple Health by checking the Apple Health Permissions In the early days of iOS 14, there were problems with the Apple HealthKit. The consequence is that some people's database was corrupted. If you tap on the Heart Icon on your phone to go to Apple Health and display data and it is very slow to respond - or never responds, you probably need to get rid of a corrupted database and start fresh. Be sure to go Open Loop if this is needed. Please get help from your favorite Loop Social Media group or from Apple support in this case. Background App Refresh \u00b6 If you have not enabled background app refresh on your phone, then Loop is likely to stop communicating as soon as the phone is locked. Phone Settings -> General -> Background App Refresh -> enable Then scroll down until you find Loop and make sure the green slider is enabled While you are there - check your CGM app as well For iOS 15, there is a new feature described by Dexcom Phone Settings -> Screen Time -> choose Always Allowed -> select an app, tap the plus icon to add to Always Allowed list add Dexcom add Loop Nightscout \u00b6 If you added your Nightscout URL to Loop and are uploading information to Nightscout, make sure the communication is working properly. For short-term interruptions, Loop will store information to upload to Nightscout later. But if too much information builds up, Loop can slow down and in some cases have a Red Loop. Check to see that internet service (WiFi or Cell) is operating Check that Nightscout database size isn't full (more details below) If Red Loops are resolved by removing the Nightscout URL from Loop; you need to figure out if it's the connection or the database or some other issue If you opted for the free DIY Nightscout, you will need to clean your database once or twice a year. Follow the Nightscout Database cleanup steps . Make sure you are periodically checking your database size (and that the dbsize keyword is in your ENABLE list and cleaning it. Phone Storage is Full \u00b6 This was reported by a user in November 2021. His phone storage was almost full and the reported error messages for Loop was: Sqlite Error: A Sqlite Error Occurred: (13) Database or Disk is Full The error message from Dexcom was not as helpful. If you see this, check your phone storage: The Dexcom G6 app has stopped working. Please delete the app from your device and redownload it from the App Store Solution: clear up space on your phone. Other Reasons for Red Loop \u00b6 Pump is Not Responding \u00b6 The obvious fix is to make sure the RileyLink compatible device is not so far away from the pump or pod that they cannot communicate. Assuming you've addressed this, then you can move on to other steps. Omnipod Loopers : Following the steps to reset the RileyLink / Phone almost always fixes this issue. There has been one report over the last 3 years where the pod really had stopped communicating, but try everything else before burning another pod. Medtronic Loopers : If the pump is not responding with \"decoding\" errors or various other messages about pump responses. Try the following: Change pump battery. Low pump battery will cause radio communications to fail. Use the Change Time command in the pump menu to update the pump's clock. If you've accidentally changed the pump's time in the pump itself or if the pump time has drifted, this will get the Loop app and pump time back in sync. If using a x23 or x54 pump, try deleting all the IDs under the \"Other Devices\" submenu in the pump's \"Connect Devices\" menu. Then go to the RileyLink menu and use the MySentry pairing command to get a fresh ID issued. Follow the directions listed in the MySentry pairing command's screen to scan for devices. A fresh ID can help prevent recurring red loops for x23 and x54 users, particularly if they started to occur after a recent Loop update. Make sure the following are checked in the pump: Your pump cannot be suspended. Resume insulin deliveries. Temp basal type must be set to unit/hour, not percent, in pump's Basal menu. Resolving Frequent Red Loops \u00b6 Here's some things to check if you have frequent red loops: Try deleting your Nightscout account from Loop settings and see if your Loop stops having red loops. If it does, then you'll need to assess what's going wrong in your Nightscout site and fix it. Most of the time, your database is getting too big and cleanup is required. Is your RileyLink battery plugged in all the way on the board? One Looper recently posted that her RileyLink battery connection needed to be reseated after several years of service. Has your RL been fully charged? Try charging your RL for an hour or two, make sure the red light comes on while charging. Try a new charger or cable. Oddly, some people have found that turning off Siri integrations for Loop and Dexcom apps in your iPhone settings has helped. This may be coincidental, but if you're still having trouble, you might want to try it. Check for sources of wireless interference. If you have a certain environment that seems to have more drops than others, it is likely that there is a source of wireless communication interfering with your Loop. Lots of Medtronic Loopers in a room together will often interfere with each other and get \"cross-talk\" red loop error messages. If it is a bedroom at night causing problems, try moving other wireless devices such as routers or baby monitors farther away from where you and your RileyLink compatible device. In some cases, you may need to clean out Apple Health , or even reset your phone to factory defaults and reload all your personal information and then rebuild the Loop app. Before you do this, you may want to Post for Help (next section). Posting for Help \u00b6 Before you post on Looped group for help with a red loop, please make sure you've reset the RileyLink / Phone . Before you post for help, please also check your Nightscout status including database size. This step is often overlooked and yet solves a lot of problems. When posting for help, include two screenshots of Loop's main screen; one with the red loop's error message and the other just the plain Loop main screen. Include a detailed description of what you have tried doing from the troubleshooting list above. For example, state if you've double checked the transmitter ID, deleted the Share account info from Loop settings so that we can rule out some of the causes of CGM issues. What Else? \u00b6 There are a few other things to consider: RileyLink is broken Battery has failed OrangeLink has firmware 2.6 RileyLink is Broken \u00b6 How can you tell if your RileyLink has a problem? The answer is mostly within the LED lights that display on the board. Some information is listed below, but also review the FAQs at getrileylink.org . If you have a different RileyLink compatible device, please check the appropriate site for troubleshooting help. Red light : comes on during charging and will turn off/on periodically, while still plugged in, after charge is complete. Green light : Indicates an active BT connection with the phone. You want the green light to stay on all the time on the RileyLink . If the green light is not on, then make sure your iPhone's bluetooth is still switched on. Blue light : The blue light will flash off/on periodically when the RileyLink and pump are actively communicating...it should NOT be always on. If your blue light is stuck on, that is an indication of a problem on the board. Try looking for signs of damage or debris that may be causing a short on the board. Clean the board with rubbing alcohol (unplug the battery first ). If you still can't get the blue light off, then contact GetRileyLink for help or check out RileyLink Compatible Devices for replacement options. Battery has Failed \u00b6 Both RileyLink and EmaLink use LiPo batteries. If they stop holding charge for as long as they used to, or if they swell (often first noticed as bowing of the case), stop using the battery and replace it as soon as possible. OrangeLink uses regular batteries, so just change them out. OrangeLink Firmware \u00b6 One version of the OrangeLine firmware did not communicate well with Loop (or Android APS). If you have FW 2.6 on your OrangeLink or OrangeLink Pro, please upgrade to FW 3.2 as soon as possible.","title":"Red Loop"},{"location":"troubleshooting/yellow-red-loop/#red-loops","text":"","title":"Red Loops"},{"location":"troubleshooting/yellow-red-loop/#red-loop-overview","text":"This page provides help if your Loop icon is red and Loop is not working or only working sometimes. You can click on the Red Loop icon to read an error message. If you understand it, great...that should help you fix the problem. If not, grab a screenshot so you can ask for help from a mentor. Omnipod Users Do not pull a pod when there is a red loop. Usually the problem is with Loop, not the pod A new pod won't fix a Loop (Bluetooth or RileyLink communication problem) There are a few times when it is the pod - but try all the steps on this page first . A Red Loop icon means that Loop has not completed a cycle for 15-minutes or more and this is normally because of a communication break-down with one of the systems listed below. To find out which one, tap on the Red Loop icon, read the message and search this page for that message.","title":"Red Loop Overview"},{"location":"troubleshooting/yellow-red-loop/#typical-causes-for-red-loop","text":"Some of the reasons listed below cause Loop to go Red and stay Red until you fix it. Others will cause intermittent Red Loops that come and go. RileyLink Compatible Device With Omnipod DASH, click on the link above and follow the Bluetooth steps Continuous Glucose Monitor ( CGM ) Apple Health Background App Refresh is not enabled for Phone, Loop and/or CGM Nightscout (optional service) Phone Storage is Full Lost Pod Information Read this section first","title":"Typical Causes for Red Loop"},{"location":"troubleshooting/yellow-red-loop/#lost-pod-information","text":"There is a new reason for a red loop that is not well understood. Before attempting to resolve a red-loop with a phone reboot; please review this section. It can affect the stored CGM information as well as the stored pump information. Be Careful with Phone Reboots If you are using an Omnipod , then before rebooting the phone, make sure it is absolutely necessary - try all other methods first. Be prepared to check that the pod is still communicating with Loop following the reboot. If this rare event happens to you, please report it, save and post a Loop Report and be prepared to put on a new pod and possibly re-enter your CGM information. This could happen to someone using a Medtronic pump, but the consequence is less of a concern because the pump information is not modified as frequently as for Omnipod users. The developers are tracking this issue and if they find a solution, it will be announced. In rare cases, an old copy of app information is read following a reboot. Because your current pod information is stored in this file, if an older copy is provided following reboot - it may be remembering an old pod. The only solution, if this happens to you, is to change pods. This is a copy of what was posted on Facebook by Matthew Kitchin. Announcement from Facebook Caution: Please use rebooting or powering off your iPhone as a last resort for troubleshooting. There is an issue that can occur under unknown conditions where Loop/FreeAPS can revert to a previous state after reboot or power off. This can include symptoms such as Loop/FreeAPS indicating a Pod is expired or share credentials returning even though they were previously removed. There could be other settings that revert to a previous point in time. The exact cause is still under investigation. If this occurs, you will have to replace your current pod. There is no way to recover the active Pod if Loop/FreeAPS reverts to old settings and think the current Pod is expired/needing to be replaced. Obviously reboots do need to happen for things such as iOS updates. For Pod users, if possible, I would plan to do them at the end of a Pod cycle when a Pod change is already planned. This applies to current Master Loop, Loop-dev and FreeAPS. Don't panic: This doesn't happen on every reboot. Until a fix is found, just don't reboot if you don't need to, and try to time it just before a pod change if you can. In case it is related to phone storage, keep plenty of space available on your phone.","title":"Lost Pod Information"},{"location":"troubleshooting/yellow-red-loop/#rileylink-compatible-device","text":"If the indication is one of these (or something similar), it can probably be fixed by resetting the RileyLink compatible device communication with the phone and pump. pump history is too old no rileylink could be found pod cannot be reached Do these steps until one of them fixes the issue: Turn off Bluetooth on your phone and then turn it right back on again. Close your Loop app (upswiping it in the iPhone's app selector) and reopen it. Turn your RileyLink off/on at its physical power switch located on the side of the RileyLink . If you have a different device, make sure you know how to power-cycle the device. For RileyLink (without wireless charging) use a small pointy object to carefully move the slider away from the charging port and then back up towards the charging port. A paperclip on the keyring can provide the help you need to reach the switch in the recessed case, and double as a screaming pod silencer tool . This should restore a green Loop within 5 minutes. If you're impatient, you can issue a \"Read Pod Status\" for Pod or \"Change Time\" for Medtronic (button press command is not available with v2.2.6). If this is successful, you've established pump communication again. Last thing to try is:","title":"RileyLink Compatible Device"},{"location":"troubleshooting/yellow-red-loop/#cgm-values-are-not-being-collected-by-loop","text":"","title":"CGM Values Are Not Being Collected by Loop"},{"location":"troubleshooting/yellow-red-loop/#apple-health","text":"Make sure both the Loop app and the Dexcom app have permission to write to Apple Health by checking the Apple Health Permissions In the early days of iOS 14, there were problems with the Apple HealthKit. The consequence is that some people's database was corrupted. If you tap on the Heart Icon on your phone to go to Apple Health and display data and it is very slow to respond - or never responds, you probably need to get rid of a corrupted database and start fresh. Be sure to go Open Loop if this is needed. Please get help from your favorite Loop Social Media group or from Apple support in this case.","title":"Apple Health"},{"location":"troubleshooting/yellow-red-loop/#background-app-refresh","text":"If you have not enabled background app refresh on your phone, then Loop is likely to stop communicating as soon as the phone is locked. Phone Settings -> General -> Background App Refresh -> enable Then scroll down until you find Loop and make sure the green slider is enabled While you are there - check your CGM app as well For iOS 15, there is a new feature described by Dexcom Phone Settings -> Screen Time -> choose Always Allowed -> select an app, tap the plus icon to add to Always Allowed list add Dexcom add Loop","title":"Background App Refresh"},{"location":"troubleshooting/yellow-red-loop/#nightscout","text":"If you added your Nightscout URL to Loop and are uploading information to Nightscout, make sure the communication is working properly. For short-term interruptions, Loop will store information to upload to Nightscout later. But if too much information builds up, Loop can slow down and in some cases have a Red Loop. Check to see that internet service (WiFi or Cell) is operating Check that Nightscout database size isn't full (more details below) If Red Loops are resolved by removing the Nightscout URL from Loop; you need to figure out if it's the connection or the database or some other issue If you opted for the free DIY Nightscout, you will need to clean your database once or twice a year. Follow the Nightscout Database cleanup steps . Make sure you are periodically checking your database size (and that the dbsize keyword is in your ENABLE list and cleaning it.","title":"Nightscout"},{"location":"troubleshooting/yellow-red-loop/#phone-storage-is-full","text":"This was reported by a user in November 2021. His phone storage was almost full and the reported error messages for Loop was: Sqlite Error: A Sqlite Error Occurred: (13) Database or Disk is Full The error message from Dexcom was not as helpful. If you see this, check your phone storage: The Dexcom G6 app has stopped working. Please delete the app from your device and redownload it from the App Store Solution: clear up space on your phone.","title":"Phone Storage is Full"},{"location":"troubleshooting/yellow-red-loop/#other-reasons-for-red-loop","text":"","title":"Other Reasons for Red Loop"},{"location":"troubleshooting/yellow-red-loop/#pump-is-not-responding","text":"The obvious fix is to make sure the RileyLink compatible device is not so far away from the pump or pod that they cannot communicate. Assuming you've addressed this, then you can move on to other steps. Omnipod Loopers : Following the steps to reset the RileyLink / Phone almost always fixes this issue. There has been one report over the last 3 years where the pod really had stopped communicating, but try everything else before burning another pod. Medtronic Loopers : If the pump is not responding with \"decoding\" errors or various other messages about pump responses. Try the following: Change pump battery. Low pump battery will cause radio communications to fail. Use the Change Time command in the pump menu to update the pump's clock. If you've accidentally changed the pump's time in the pump itself or if the pump time has drifted, this will get the Loop app and pump time back in sync. If using a x23 or x54 pump, try deleting all the IDs under the \"Other Devices\" submenu in the pump's \"Connect Devices\" menu. Then go to the RileyLink menu and use the MySentry pairing command to get a fresh ID issued. Follow the directions listed in the MySentry pairing command's screen to scan for devices. A fresh ID can help prevent recurring red loops for x23 and x54 users, particularly if they started to occur after a recent Loop update. Make sure the following are checked in the pump: Your pump cannot be suspended. Resume insulin deliveries. Temp basal type must be set to unit/hour, not percent, in pump's Basal menu.","title":"Pump is Not Responding"},{"location":"troubleshooting/yellow-red-loop/#resolving-frequent-red-loops","text":"Here's some things to check if you have frequent red loops: Try deleting your Nightscout account from Loop settings and see if your Loop stops having red loops. If it does, then you'll need to assess what's going wrong in your Nightscout site and fix it. Most of the time, your database is getting too big and cleanup is required. Is your RileyLink battery plugged in all the way on the board? One Looper recently posted that her RileyLink battery connection needed to be reseated after several years of service. Has your RL been fully charged? Try charging your RL for an hour or two, make sure the red light comes on while charging. Try a new charger or cable. Oddly, some people have found that turning off Siri integrations for Loop and Dexcom apps in your iPhone settings has helped. This may be coincidental, but if you're still having trouble, you might want to try it. Check for sources of wireless interference. If you have a certain environment that seems to have more drops than others, it is likely that there is a source of wireless communication interfering with your Loop. Lots of Medtronic Loopers in a room together will often interfere with each other and get \"cross-talk\" red loop error messages. If it is a bedroom at night causing problems, try moving other wireless devices such as routers or baby monitors farther away from where you and your RileyLink compatible device. In some cases, you may need to clean out Apple Health , or even reset your phone to factory defaults and reload all your personal information and then rebuild the Loop app. Before you do this, you may want to Post for Help (next section).","title":"Resolving Frequent Red Loops"},{"location":"troubleshooting/yellow-red-loop/#posting-for-help","text":"Before you post on Looped group for help with a red loop, please make sure you've reset the RileyLink / Phone . Before you post for help, please also check your Nightscout status including database size. This step is often overlooked and yet solves a lot of problems. When posting for help, include two screenshots of Loop's main screen; one with the red loop's error message and the other just the plain Loop main screen. Include a detailed description of what you have tried doing from the troubleshooting list above. For example, state if you've double checked the transmitter ID, deleted the Share account info from Loop settings so that we can rule out some of the causes of CGM issues.","title":"Posting for Help"},{"location":"troubleshooting/yellow-red-loop/#what-else","text":"There are a few other things to consider: RileyLink is broken Battery has failed OrangeLink has firmware 2.6","title":"What Else?"},{"location":"troubleshooting/yellow-red-loop/#rileylink-is-broken","text":"How can you tell if your RileyLink has a problem? The answer is mostly within the LED lights that display on the board. Some information is listed below, but also review the FAQs at getrileylink.org . If you have a different RileyLink compatible device, please check the appropriate site for troubleshooting help. Red light : comes on during charging and will turn off/on periodically, while still plugged in, after charge is complete. Green light : Indicates an active BT connection with the phone. You want the green light to stay on all the time on the RileyLink . If the green light is not on, then make sure your iPhone's bluetooth is still switched on. Blue light : The blue light will flash off/on periodically when the RileyLink and pump are actively communicating...it should NOT be always on. If your blue light is stuck on, that is an indication of a problem on the board. Try looking for signs of damage or debris that may be causing a short on the board. Clean the board with rubbing alcohol (unplug the battery first ). If you still can't get the blue light off, then contact GetRileyLink for help or check out RileyLink Compatible Devices for replacement options.","title":"RileyLink is Broken"},{"location":"troubleshooting/yellow-red-loop/#battery-has-failed","text":"Both RileyLink and EmaLink use LiPo batteries. If they stop holding charge for as long as they used to, or if they swell (often first noticed as bowing of the case), stop using the battery and replace it as soon as possible. OrangeLink uses regular batteries, so just change them out.","title":"Battery has Failed"},{"location":"troubleshooting/yellow-red-loop/#orangelink-firmware","text":"One version of the OrangeLine firmware did not communicate well with Loop (or Android APS). If you have FW 2.6 on your OrangeLink or OrangeLink Pro, please upgrade to FW 3.2 as soon as possible.","title":"OrangeLink Firmware"},{"location":"version/overview-version/","text":"Version Overview \u00b6 The Version tab of LoopDocs contains a lot of details about Loop versions, code customization and development that some Loopers need but may be confusing for new Loopers when they are first building Loop. Map to this section: Loop Releases Description of the current released version of Loop including when it was released Reverse chronology of earlier releases Code Customization Instructions for customizing your DIY code Think of this as your personalized version Simulator Build Instructions for building to a simulator Loop Development Description of the development process for Loop Information you need if you want to participate Building Dev After Loop 3 is released, a new page will be added For now, this link takes you to the Build Loop-dev page LoopWorkspace If you are interested in development, you might need information on this page The primary focus is on techniques for using git","title":"Version Overview"},{"location":"version/overview-version/#version-overview","text":"The Version tab of LoopDocs contains a lot of details about Loop versions, code customization and development that some Loopers need but may be confusing for new Loopers when they are first building Loop. Map to this section: Loop Releases Description of the current released version of Loop including when it was released Reverse chronology of earlier releases Code Customization Instructions for customizing your DIY code Think of this as your personalized version Simulator Build Instructions for building to a simulator Loop Development Description of the development process for Loop Information you need if you want to participate Building Dev After Loop 3 is released, a new page will be added For now, this link takes you to the Build Loop-dev page LoopWorkspace If you are interested in development, you might need information on this page The primary focus is on techniques for using git","title":"Version Overview"},{"location":"version/simulator/","text":"Simulator Build \u00b6 Options \u00b6 There are 2 main types of simulators users may want to build. Each of these require less up-front acquisition of hardware and may be desirable as a first step towards becoming a Looper. Please, review all the Build pages, even if you will be skipping some. Build to a Simulated iPhone on a Computer \u00b6 Need access to a mac or virtual computer, see Compatible Computer Build pages you can skip Compatible iPhone/iPod Compatible Pump Compatible CGM Order a RileyLink Apple Developer Program Follow Download Xcode Follow Xcode Preferences but can skip the Add Apple ID section Follow Build the Loop App but with the following variations: When told to select \"Your Phone\" in this section , instead choose a simulator Follow the instructions in the Build to a Simulator Use the simulated iPhone on the computer and set up the app as desired Build to a Real iPhone and use a Simulated Pump and CGM \u00b6 Need access to a mac or virtual computer, see Compatible Computer Need access to an iPhone or iPod, see Compatible iPhone/iPod Pages you can skip Compatible Pump Compatible CGM Order a RileyLink Apple Developer Program Follow Download Xcode Follow Xcode Preferences If you have a developer ID, use it in the Add Apple ID step and follow the normal build directions If you do not have a developer ID, use the Free Developer Account instructions in the Add Apple ID section When Building, use the Build Loop App page and select your phone` If you do not have a developer ID, be sure to follow the Free Account instructions Once the App is on your phone Follow the set up the app instructions but choose a simulated pump If you have a Dexcom CGM , you can select Dexcom Follow for the CGM ; otherwise, you can enter glucose values in Apple Health and Loop will pick up the values","title":"Simulator Build"},{"location":"version/simulator/#simulator-build","text":"","title":"Simulator Build"},{"location":"version/simulator/#options","text":"There are 2 main types of simulators users may want to build. Each of these require less up-front acquisition of hardware and may be desirable as a first step towards becoming a Looper. Please, review all the Build pages, even if you will be skipping some.","title":"Options"},{"location":"version/simulator/#build-to-a-simulated-iphone-on-a-computer","text":"Need access to a mac or virtual computer, see Compatible Computer Build pages you can skip Compatible iPhone/iPod Compatible Pump Compatible CGM Order a RileyLink Apple Developer Program Follow Download Xcode Follow Xcode Preferences but can skip the Add Apple ID section Follow Build the Loop App but with the following variations: When told to select \"Your Phone\" in this section , instead choose a simulator Follow the instructions in the Build to a Simulator Use the simulated iPhone on the computer and set up the app as desired","title":"Build to a Simulated iPhone on a Computer"},{"location":"version/simulator/#build-to-a-real-iphone-and-use-a-simulated-pump-and-cgm","text":"Need access to a mac or virtual computer, see Compatible Computer Need access to an iPhone or iPod, see Compatible iPhone/iPod Pages you can skip Compatible Pump Compatible CGM Order a RileyLink Apple Developer Program Follow Download Xcode Follow Xcode Preferences If you have a developer ID, use it in the Add Apple ID step and follow the normal build directions If you do not have a developer ID, use the Free Developer Account instructions in the Add Apple ID section When Building, use the Build Loop App page and select your phone` If you do not have a developer ID, be sure to follow the Free Account instructions Once the App is on your phone Follow the set up the app instructions but choose a simulated pump If you have a Dexcom CGM , you can select Dexcom Follow for the CGM ; otherwise, you can enter glucose values in Apple Health and Loop will pick up the values","title":"Build to a Real iPhone and use a Simulated Pump and CGM"}]}