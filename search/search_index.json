{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the LoopDocs website where you can learn about the Loop app.</p>"},{"location":"#what-is-the-loop-app","title":"What is the Loop App?","text":"<p>The Loop app is an automated insulin delivery application that you build and operate on an iPhone.</p> <p> </p> <ul> <li>The Loop app uses your settings, meal entries and glucose data to calculate insulin dosing needed to bring your blood glucose within the correction range you set<ul> <li>You enter your personal therapy settings (e.g., basal rate schedule, carbohydrate ratio, insulin sensitivity)</li> <li>You indicate your CGM and pump</li> </ul> </li> <li>You choose how to operate the Loop app:<ul> <li><code>Closed Loop</code>: Predict, recommend and control insulin dosing</li> <li><code>Open Loop</code>: Explore interface, test settings, learn to enter meals and dose</li> </ul> </li> </ul>"},{"location":"#what-is-loop-video","title":"What is\u00a0Loop\u00a0Video","text":"<p> Loop\u00a0Video</p> <ul> <li>This What is\u00a0Loop video with associated pdf deck was created by the\u00a0Loop and Learn\u00a0team</li> <li>It is a great introduction, created when Reese was using an earlier version of Loop</li> <li>Special thanks to <ul> <li>Tina and Reese Hammer for the terrific video</li> <li>Matthew Fouse for his beautiful graphics</li> </ul> </li> </ul>"},{"location":"#what-are-my-next-steps","title":"What are my next steps?","text":"<p>This site shows you step-by-step how to build, set up and operate the Loop app.</p> <ul> <li>You do not need a technical or computer background to do this</li> <li>You can choose to build the Loop app several ways:<ul> <li>Use a browser on any computer or tablet and install it on your iPhone via TestFlight</li> <li>Use an up-to-date Mac Computer and install it directly on your iPhone</li> </ul> </li> </ul> <p>In order to become proficient with the app, you should learn the information on this site. Consider doing this over a period of time and reviewing the materials more than once.</p> <ul> <li>You should test and perhaps adjust your settings to be successful with the Loop app (or any hybrid closed-loop system)</li> <li>As you read the documentation, you will find links to a robust volunteer support community<ul> <li>You're invited - come introduce yourself</li> <li>Don't be afraid to ask questions, just let us know where in the documentation you got confused so we can make improvements</li> </ul> </li> </ul> <p>There is a common saying in our community:</p> <p>Do It Yourself (DIY) does not mean Do It Alone!</p> <p>Once you are using the app, you should regularly follow one or more support forums for important updates on the Loop app. Spending this time is important for success in building and operating the Loop app safely.</p> <p>This website is updated regularly to keep pace with development of the Loop app and Apple releases.</p>"},{"location":"#important-disclaimer","title":"Important Disclaimer","text":"<p>Please consult with your health care professional regarding your diabetes management.</p> <ul> <li>The Loop app is an open source project used by many, but it is not approved for therapy by any government organization.</li> <li>You take full responsibility for building and running this system and do so at your own risk.</li> </ul>"},{"location":"#volunteer-community","title":"Volunteer Community","text":"<p>The Loop app has been, and continues to be, developed and supported by volunteers. From the code to this website, you are able to use this app because many volunteers continue to give their personal and family time.</p> <p>Please add your time by reading this website before embarking on your Loop journey.</p>"},{"location":"translate/","title":"Translation","text":""},{"location":"translate/#language-list","title":"Language List","text":"<p>\u0639\u0631\u0628\u064a</p> <p>\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438</p> <p>\u010ce\u0161tina</p> <p>Deutsch</p> <p>Dansk</p> <p>\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac</p> <p>Espa\u00f1ol</p> <p>\u65e5\u672c</p> <p>Suomi</p> <p>Fran\u00e7ais</p> <p>\u05e2\u05d1\u05e8\u05d9\u05ea</p> <p>Hrvatski</p> <p>\u0939\u093f\u0902\u0926\u0940</p> <p>Italiano</p> <p>\ud55c\uad6d\uc5b4</p> <p>Norsk</p> <p>Nederlands</p> <p>Polski</p> <p>Portugu\u00eas</p> <p>Rom\u00e2n\u0103</p> <p>\u0420\u0443\u0441\u0441\u043a\u0438\u0439</p> <p>Sloven\u010dina</p> <p>Svenska</p> <p>Turkish</p> <p>\u4e2d\u6587\uff08\u7b80\u4f53)</p> <p>\u4e2d\u6587\uff08\u7e41\u9ad4)</p>"},{"location":"translate/#google-translate-links","title":"Google Translate Links","text":"<p>Click on a language on the list of links above to turn on Google's automatic translation.</p>"},{"location":"translate/#change-language","title":"Change Language","text":"<p>To modify the language choice for the whole site, copy the line below, and paste it into the URL, and then choose the desired language from the list above.</p> Copy and Paste in Browser URL to return to original version<pre><code>https://loopkit.github.io/loopdocs/translate\n</code></pre> <p>OR</p> <p>Use the Google Translation three-dot menu and select <code>Go to Original URL</code> while on the Translation page.</p>"},{"location":"translate/#more-information","title":"More Information","text":"<ul> <li> <p>Every website page gets automatically translated to the selected language as do links to other websites</p> </li> <li> <p>The Google Translate Tool will appear at the top of each page</p> <ul> <li>LoopDocs how-to: Google Translate Tool Instructions</li> <li>Google how-to: Google Translate Help Link</li> </ul> </li> </ul> <p>Automatic Translation</p> <p>These links connect this site to the Google Translation service.</p> <ul> <li>No human has reviewed the translated information for accuracy</li> <li>Please use the translation with care</li> <li>Not available in all regions</li> <li>Some links may not work as expected</li> <li>Any \"code\" not protected by blocks may not appear correctly - be sure to click on Original to make sure you are viewing code properly</li> </ul>"},{"location":"translate/#google-translate-tool-instructions","title":"Google Translate Tool Instructions","text":"<p>Once Google Translate has been turned on, clicking on a language link above shows a \"Google Translate: Can't translate this page error\".</p> <ul> <li>To modify the language for a single page, use the Google Translate tool</li> <li>To modify the language for the entire site, see Change Language</li> </ul> <p>The graphic below shows the Google Translate Tool when maximized (default) for a browser and mobile display. The tool can be minimized by tapping on the up/down carets at the right of the tool. This is very useful if the tool obstructs part of the original screen. Additional options can be selected with the three-dot menu as shown in the graphic.</p> <p></p>"},{"location":"build/apple-developer/","title":"Apple Developer Program","text":""},{"location":"build/apple-developer/#enroll-in-apple-developer-program","title":"Enroll in Apple Developer Program","text":"<p>Time Estimate</p> <ul> <li>15-20 minutes to complete the enrollment forms</li> <li>up to 2 days to wait for confirmation email that enrollment has been activated</li> </ul> <p>Summary</p> <p>There are two options: Paid ($99/year) or Free (re-build weekly, Xcode only)</p> <ul> <li>Paid Developer Account: Go to the Apple Developer website to enroll in an individual account.</li> <li>Free: No action required at this time.<ul> <li>Free requires the Build with Mac method</li> </ul> </li> </ul> <p>FAQs</p> <ul> <li>\"Can I use someone else's Apple Developer account?\" Please refer to this Answer.</li> <li>\"Do I use my Apple ID or my child's Apple ID to enroll in the Apple Developer program?\" The Apple ID you use to enroll in the developer program must be associated with an adult. It does not need to be the same Apple ID as the Looper uses on their iPhone. For example, a parent installing the Loop app on their child's iPhone should configure a separate Apple ID for their child, but should use their own Apple ID to build the Loop app for that child.</li> <li>\"How long does it take to have my Apple Development account active after I enroll?\" After you enroll, make sure you look for a confirmation email. Apple says it can take up to 24-48 hours to confirm and setup a new Apple developer account. However, some people have had the process take minutes. One SURE way to make it take longer is to use a different credit card to pay for the Apple Developer account enrollment than is already associated with that Apple ID. When you do that, finishing the enrollment process may be a hassle.</li> </ul>"},{"location":"build/apple-developer/#loopers-need-their-own-apple-id","title":"Loopers Need Their Own Apple ID","text":"<p>The Apple ID is DIFFERENT than the Apple Developer ID.</p> <p>Apple ID</p> <p>Parents should set up a different Apple ID for each of their looper children and looper children should not use the parent Apple ID. Use Apple's Instructions for Create an Apple ID for your child.</p> <p>The Apple Health record is a convenient record of blood glucose, insulin and carbohydrates and should be associated with only one individual.</p> <p>Sharing an Apple ID among two or more loopers can cause safety issues. You don't want Sally to be dosed for Joe's lunch in addition to her own and vice versa.</p> <ul> <li>Loop 3 does not read Carbohydrates from Apple Health by default, but if you need that feature, you can modify your feature flags.</li> <li>The recommendation for Health Permissions for Loop 2.2.x has changed to no longer provide permission to read Carbohydrates from Apple Health</li> </ul>"},{"location":"build/apple-developer/#developer-account","title":"Developer Account","text":"<p>To build the Loop app on a phone, you must use an Apple developer account associated with an adult (minimum age of 18). This Apple developer account is tied to the email address associated with your Apple ID. You can build apps on phones for everyone in your family with a single Apple Developer Account tied to the Apple ID of an adult.</p> <p>You have two options for an individual account: free or paid.</p>"},{"location":"build/apple-developer/#free-developer-account","title":"Free Developer Account","text":"<p>If you decide to use a FREE developer account, here's what you need to know:</p> <ol> <li>You must use the Build with Mac method to build Loop.</li> <li>Loop apps signed with a free developer account will expire after 7 days.  On the 7th day, your Loop app will simply turn white when you open it and then immediately close. To rebuild the Loop app, you will have to find a computer and rebuild the app onto your iPhone again. You cannot rebuild the app on day 5 (when it is convenient, for example), hoping to reset the 7-day clock.  The app will still expire on the 7th day from when it was first signed and created.</li> <li>If you decide to switch to a paid account after trying out the free account, you will need to rebuild your Loop app to sign it with the new paid account. Furthermore, switching from a Free to a Paid account requires entering all the settings again (and starting a fresh pod).</li> <li>You will have to do an extra step during the build process to remove Siri and Apple Push capabilities to build with free accounts. Because free accounts do not have access to Apple Push notifications, you will also not be able to use Remote Commands through Nightscout.</li> </ol>"},{"location":"build/apple-developer/#paid-developer-account","title":"Paid Developer Account","text":"<p>If you decide to use a PAID developer account, here's what you need to know:</p> <ol> <li>The paid developer account is $99 per year. The default setting is to auto-renew annually. You can change that selection in your developer account settings at any time.</li> <li>If your household has multiple Loop users, only one developer account is needed.  That one developer account can be used to build Loop on multiple phones.</li> <li>If you use the Browser Build method<ul> <li>You must Update with Browser the build once every 90 days</li> <li>You must have a Paid Developer account</li> </ul> </li> <li>If you use the Build with Mac method<ul> <li>If you have a paid developer account, you must build at least once a year</li> <li>If you have a free account, you must build every 7 days</li> </ul> </li> </ol>"},{"location":"build/apple-developer/#switching-from-free-to-paid-memberships","title":"Switching from Free to Paid Memberships","text":"<p>You can try a free account first before buying a paid developer account. If you start with a free account, you'll build a Loop app (let's call it FreeLoop). When you switch to a paid account, you'll be building a totally new and separate Loop app onto your phone (let's call it PaidLoop). </p> <p>The two apps will look identical on your phone and they will both have the name Loop with the same icon, but they will be functionally separate from each other. Make sure you are successful building the PaidLoop app before deleting the FreeLoop app from your phone. Use the search feature on your phone to find both apps.  One will have your configuration settings (FreeLoop), the other will not (PaidLoop).</p> <p>Before deleting the FreeLoop, either record all the settings or take screenshots of all the relevant settings screens.</p> <p>PaidLoop will know nothing about the settings and information you had stored in FreeLoop, so you will need to re-enter all your settings (basal rates, ISF, carb ratios, etc.) and configurations into the new PaidLoop. It will also not connect or control any pods you are currently using with the old FreeLoop app. The one exception is Nightscout credentials, which are stored in your keychain. If you entered your Nightscout credentials into FreeLoop, they will persist across app removal and be used by PaidLoop.</p> <p>With Loop 3, if you use Nightscout, you can import settings that were uploaded to Nightscout by FreeLoop into PaidLoop, so that simplifies the transition. </p> <p>Once PaidLoop is working, delete the FreeLoop instance from your phone to avoid confusion. If you followed the directions when building, you may have configured your phone to prevent deletion of Loop.  Head over to Protect that App, reverse the steps, delete FreeLoop, then do the steps again to protect PaidLoop.</p>"},{"location":"build/apple-developer/#enrolling","title":"Enrolling","text":"<p>To enroll in an individual paid Paid account, go to the Apple's Developer Program website Apple Developer website.</p> <p>Be sure to use the credit card already associated with the email you are using for the developer account. If you switch credit cards, it can cause delays.</p> <p>If you choose to use the free account, you don't have to do anything on that website. You'll just wait for the instructions on the Xcode Settings page and get your free account then.</p>"},{"location":"build/apple-developer/#next-steps","title":"Next Steps:","text":"<p>Take the time to read the next three articles. You will be reminded again when you begin to set up your app.</p> <ul> <li>Test Settings</li> <li>Loop Data</li> <li>Meet the Community</li> </ul>"},{"location":"build/build-app/","title":"Build Loop","text":""},{"location":"build/build-app/#summary","title":"Summary","text":"<p>Time Estimate</p> <ul> <li>60-80 minutes for first time builders</li> <li>10-15 minutes for repeat builders</li> </ul> <p>Summary</p> <p>You will:</p> <ul> <li>Run the Build Select Script to download Loop code</li> <li>Prepare to build the Loop app</li> <li>Press the Xcode Build Button to build Loop</li> <li>Watch in awe as you build your very own Loop app</li> </ul> <p>FAQs</p> <ul> <li>Why does Xcode show a colorful spinning icon and not respond to me? Unfortunately, sometimes Xcode gets confused and you need to force quit the application. See Xcode Not Responding for instructions.</li> <li>Many more FAQs for building Loop are in-line with the steps that trigger the questions.</li> </ul>"},{"location":"build/build-app/#build-video","title":"Build Video","text":"<p>The Loop and Learn team prepared this YouTube video showing how to build Loop 2.2.x including the steps required to update if you previously built. The steps are different now. The video may be worth watching, but once you've reviewed it, work through the new build process described on this page.</p> <p>If you do watch this video, please note that you no longer are required to delete provisioning profiles as a separate step and the overall building process is streamlined.</p>"},{"location":"build/build-app/#build-with-browser","title":"Build with Browser","text":"<p>If you previously used Build with Browser to install Loop on this phone, you should Disable Automatic Install from TestFlight to be sure the version of the app on the phone is the one you build with Xcode.</p>"},{"location":"build/build-app/#developer-mode","title":"<code>Developer Mode</code>","text":"<p>If you are running iOS 15/watchOS 8, you do not have <code>Developer Mode</code> and can skip ahead to Download Loop.</p>"},{"location":"build/build-app/#upgrade-from-ios-15-to-newer-version","title":"Upgrade from iOS 15 to newer version","text":"<p>If you upgrade an iOS 15 phone to iOS 16 or 17, the Loop app will not open until you enable <code>Developer Mode</code> on that phone.</p> <p>You will see a message similar to the next graphic.</p> <p></p> <p>If you are running iOS 16 or 17 with watchOS 9 or newer, you must enable <code>Developer Mode</code> to run or build Loop directly from Xcode. (This is true for any app created by Xcode directly on your device.) If you want to know more, click on this Apple Link about <code>Developer Mode</code>.</p>"},{"location":"build/build-app/#prepare-your-phone-and-watch","title":"Prepare your Phone and Watch","text":"<p>If you have never built an app with Xcode on a particular phone, <code>Developer Mode</code> will not show up in the iOS Settings, Privacy &amp; Security menu until you connect that phone to Xcode.</p> <ul> <li>If you are building to a new Apple Watch - you must first pair that watch to the phone, build the app to the phone and then enable <code>Developer Mode</code> on the watch and then build to the phone again while watch is paired and on your wrist.</li> </ul> <p>To keep all the steps in one place, the instructions for configuring phone and watch are kept in this one section. If you have never built with Xcode to this phone, skip ahead to Download Loop for now and return at the appropriate part of the script instructions below. A clear message with a link will bring you back here.</p> <p>When Xcode is open and you plug in your phone, you will not be able to select the phone until you have enabled <code>Developer Mode</code>. The phone will show up, but be an \"Unavailable Device\" as shown in the graphic below.</p> <p></p>"},{"location":"build/build-app/#developer-mode-on-iphone","title":"<code>Developer Mode</code> on iPhone","text":"<p>Once your phone has been plugged in to the computer while Xcode is opened and you accepted have the Trust this Computer option, you will be able to enable <code>Developer Mode</code>.</p> <ol> <li>Open your phone settings, choose Privacy &amp; Security</li> <li>Scroll to the bottom of the screen and examine the <code>Developer Mode</code> row<ul> <li>If it says On - no further action is required</li> <li>If it says Off, then tap on the row</li> </ul> </li> <li>Slide the slider to the green (enabled) position</li> <li>Choose Restart</li> <li>After reboot, choose to Turn on <code>Developer Mode</code></li> <li>You are now ready to begin building from Xcode onto this phone</li> </ol> <p>If you are in the middle of building on a new phone, return to Initial Xcode Screens to continue.</p>"},{"location":"build/build-app/#developer-mode-on-watch","title":"<code>Developer Mode</code> on Watch","text":"<p>Build, Enable, Build</p> <p>Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable <code>Developer Mode</code> and build again.</p> <p>This must be configured on the watch itself (not the watch app on the iPhone). To determine if <code>Developer Mode</code> is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to and tap the Privacy &amp; Security icon. Then scroll to the bottom and tap on <code>Developer Mode</code>. If you don't see the <code>Developer Mode</code> row under Privacy &amp; Security, see the Extra Watch Instructions.</p> <ul> <li>If <code>Developer Mode</code> is enabled, the slider will be green and no further action is required</li> <li>If <code>Developer Mode</code> is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, you are asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"build/build-app/#enable-watch-widgetkit-developer-mode","title":"Enable Watch WidgetKit <code>Developer Mode</code>","text":"<p>With the latest watchOS, there are now options that show up after you enable <code>Developer Mode</code>. Go on and configure those now. Select the Settings icon on the watch, but instead of tapping on Privacy &amp; Security, scroll all the way to the bottom and there is now a Developer row at the very bottom of the watch Settings. If you don't see this row, reboot the watch again.</p> <ul> <li>Tap on Developer</li> <li>Scroll down to WidgetKit Developer Mode and enable that</li> <li>This might enable faster updates of complications on your watch</li> </ul>"},{"location":"build/build-app/#extra-watch-instructions","title":"Extra Watch Instructions","text":"<p>There have been a lot of reports of trouble getting <code>Developer Mode</code> to show up on a new Apple watch and then having further trouble getting the Loop app to show up on the watch. Previously, just having the watch paired to the phone when you build once followed, by enabling <code>Developer Mode</code> on the watch and building again, was enough. If you have problems, here are extra steps to try.</p> <p>These steps have been reported on Facebook and have not been tested in a controlled environment. They may not all be necessary.</p> <ol> <li>Restart watch, phone and computer</li> <li>Watch should be paired to your phone and on your wrist</li> <li>Go to Privacy &amp; Security on watch and enable developer mode (didn\u2019t see prior to restart)</li> <li>Plug phone into computer and open Xcode</li> <li>Select Window (top menu) and choose Devices &amp; Simulators<ul> <li>The watch should appear as a Disconnected device</li> <li>Click on the watch and if it connects - you are done</li> </ul> </li> <li>Otherwise manually add the UDID to your Developer Account<ul> <li>Copy UDID (right-click or control-click and choose Copy Identifier)</li> </ul> </li> <li>Go to the Apple developer website, devices page and manually add the watch (using the UDID)</li> <li>With phone plugged into computer and watch on wrist, follow these steps on the build errors page: Apple Watch Loop App not running on Watch to build the watch app directly.</li> </ol> <p>At this point, be sure to reboot the watch.</p>"},{"location":"build/build-app/#download-loop","title":"Download Loop","text":"<p>This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop.</p> <p>Every attempt was made to put messages directly in the script for each step. The next few sections of this page walk you through what you will see when you run the script.</p>"},{"location":"build/build-app/#open-terminal","title":"Open Terminal","text":"<p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal.</p>"},{"location":"build/build-app/#build-select-script","title":"Build Select Script","text":"<p>With the release of Loop 3, the build process is different and simpler</p> <ul> <li>Please read each step as if you are a new builder</li> <li>Don't assume you know what you are doing</li> </ul> <p>These instructions show each step needed to download Loop using the Build Select Script.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to start the Build Select Script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildSelectScript.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: Cmd+V ; or Ctrl click and select from menu or <code>Edit</code>-<code>Paste</code> at top of Mac screen.)</p> <ul> <li>Please read what is on the screen as you progress</li> <li>You can increase font size by holding down Cmd and hitting +</li> </ul> <p>You will be informed of the menu options as shown in the graphic below. You will choose Option <code>1</code> to Build Loop.</p> <p></p> <p>You will be informed that you are downloading open source software. Type <code>1</code> and return if you understand the warning and agree.</p> <p></p> <p>The next screen informs you of what you will be downloading. Type <code>1</code> and return to begin the download or <code>2</code> to return to the main menu.</p> <p></p>"},{"location":"build/build-app/#wait-for-download-to-complete","title":"Wait for Download to Complete","text":"<p>This download can take from 3 minutes to 30 minutes depending on your download speed.  You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning.  You only need to review the display to look for any error messages. </p> <p>New Feature</p> <p>The Build-Script automatically reports when the download is successful.</p> <p>The next graphic shows terminal messages for the beginning of a successful download.</p> <p></p> <p>If the download was successful, your terminal will be similar to the following graphic. Continue with the Download was Successful section.</p> <p></p> <p>If you see a failure message, scroll up in the terminal to find the error message(s) and go to Xcode Errors with Build-Select.</p> <p></p>"},{"location":"build/build-app/#download-was-successful","title":"Download was Successful","text":"<p>If there are no errors, hit return to continue. The next step involves signing the targets.</p>"},{"location":"build/build-app/#sign-targets","title":"Sign Targets","text":"<p>What does Sign Targets Mean?</p> <p>\"Sign Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone if you do not sign each target associated with that app.</p> <p>Experienced Builders</p> <p>This replaces several of the steps that used to be required to build Loop.</p> <p>If you have never built an Xcode app using your developer ID on this computer, then the first time you use the script, you will be asked how you want to sign the targets.</p> <p>I did not get this question</p> <p>The script searches for your developer ID for you and skips this question if it finds it.</p> <ul> <li>You have previously built an app on this computer with your developer ID</li> <li>You have previously run this script</li> </ul> <p>Skip ahead to Review LoopConfigOverride.xcconfig.</p> <p>The next question, as shown in graphic below, is whether you will (1) Sign Automatically or (2) Sign Manually.</p> <ul> <li>If you are building with a paid developers account, choose option 1, and continue on this page</li> <li>If you are building with a Free option or plan to build to a simulator on your computer, choose option 2 and click on Build Free Loop to move to the page with those instructions</li> </ul> <p></p>"},{"location":"build/build-app/#paid-developer-account","title":"Paid Developer Account","text":"<p>Continue with this page only if you have a paid developer account.</p> <ul> <li>You need to switch to the Loop Free Build page for a free account.</li> </ul>"},{"location":"build/build-app/#create-permanent-loopconfigoverridexcconfig","title":"Create Permanent LoopConfigOverride.xcconfig","text":"<p>The following graphics show the terminal display after selecting option 1 to use Apple Developer ID.</p> <ul> <li>Graphic below:<ul> <li>User is presented with instructions for getting Team ID from the Membership page<ul> <li>After review, the user hits return</li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>Graphic below:<ul> <li>The instructions remain on the screen for reference</li> <li>The developer.apple.com web page (not shown) opened automatically in the browser after user hit return<ul> <li>User obtains ID</li> </ul> </li> <li>User enters ID in terminal and then hits return</li> </ul> </li> </ul> <p></p> <p>After hitting return, the user can verify the entry.</p>"},{"location":"build/build-app/#review-loopconfigoverridexcconfig","title":"Review LoopConfigOverride.xcconfig","text":"<p>Once the permanent signing file is configured, the review step is the same each time.</p> <ul> <li>Graphic below:<ul> <li>The developer ID stored in the permanent file is displayed for review</li> <li>After review, enter 1 to continue</li> <li>OR - enter 2 to modify the ID in the file, see Problem with the ID?</li> </ul> </li> </ul> <p></p>"},{"location":"build/build-app/#problem-with-the-id","title":"Problem with the ID?","text":"<p>If there is a problem with the ID that is stored on your computer, you can modify it before continuing.  The instructions, shown in the terminal message if you select option 2, Editing Instructions, are repeated here:</p> <p>To edit the LoopConfigOverride.xcconfig file with a different developer ID:</p> <ol> <li>Open finder, navigate to Downloads/BuildLoop</li> <li>Locate and double click on LoopConfigOverride.xcconfig<ul> <li>This will open that file in Xcode</li> </ul> </li> <li>Edit in Xcode and save file</li> </ol> <p>You can now return to the terminal and hit return for the next step.</p>"},{"location":"build/build-app/#ensure-a-year","title":"Ensure a Year","text":"<p>The next question asks if you want to ensure a year with your new app. Unless you have a good reason, you should enter 1 and continue.</p> <p></p>"},{"location":"build/build-app/#build-loop","title":"Build Loop","text":"<p>Build to Simulator</p> <p>If you are an experienced builder and plan to build to a simulator on your Mac before building to your phone, you do not need to plug in your phone yet. You will need to select a simulator manually once Xcode opens.</p> <p>For first time builders - go on and build to your phone.</p>"},{"location":"build/build-app/#plug-in-your-phone","title":"Plug in Your Phone","text":"<p>Refer to the graphic below. The messages in the terminal instruct you to:</p> <ul> <li>Unlock your phone</li> <li>Plug Phone into the computer<ul> <li>(Optional) If you have an Apple Watch that has never had Loop on it<ul> <li>Make sure watch is paired, unlocked and on your wrist</li> </ul> </li> <li>If you have never \"Trusted\" this computer with these device(s), do so now<ul> <li>A screen will pop up on your phone (and watch) asking if you trust the computer</li> <li>Select \"Trust\"</li> <li>After trusting phone and watch, phone should remain plugged in, but watch does not need to stay in proximity of the phone</li> </ul> </li> </ul> </li> <li>Now you are ready to hit return in the terminal window</li> </ul> <p></p> <p>The next action of the script is to </p> <ul> <li>Open Xcode</li> </ul> <p>If this is a new phone that has never had an app built from Xcode, return to Prepare your Phone and Watch. After you get developer mode turned on for the phone continue with the build instructions. If you also want to set up the watch, you'll need to build one time, follow directions in Developer Mode on Watch and then build again.</p> <p>It is suggested that you wait until you've successfully built the app before closing the terminal.</p>"},{"location":"build/build-app/#initial-xcode-screens","title":"Initial Xcode Screens","text":"<p>Refer to the graphic below. Your intial Xcode screen should be similar.</p> <ul> <li>Wait for packages to download (see messages upper right - blue dashed rectangle)<ul> <li>You might see the words downloading or copying</li> <li>Package download is complete when you see the words Indexing or Ready (upper right)</li> </ul> </li> <li>Make sure your phone (or simulator if you prefer) is selected in the upper middle</li> </ul> <p></p>"},{"location":"build/build-app/#start-build","title":"Start Build","text":"<p>If there is a red x in the dashed-blue rectange region on your Xcode screen you need to click over to the Build Error page</p>"},{"location":"build/build-app/#first-time","title":"First Time","text":"<p>The first time you build, there will be steps that will not be required for subsequent builds. These are clearly marked in the intructions with the word First-Time. Do not get confused when you are asked to enter your password multiple times, see Codesign / Keychain Access. Be sure to enter your Mac login password and select <code>Always Allow</code> every time it is requested.</p>"},{"location":"build/build-app/#all-builds","title":"All Builds","text":"<p>Refer to the GIF below:</p> <ul> <li>Frame 1: Packages are downloaded<ul> <li>Xcode is Indexing as seen in dashed-green rectangle region<ul> <li>Indexing makes searching faster; it does not need to complete before building</li> </ul> </li> <li>Click the \"Play\" button highlighted by red rectangle to start the build</li> <li>First-Time for this Phone: A Device isn't registered screen appears, as shown in the graphic below the GIF<ul> <li>This happens for any phone not registered to the selected Developer ID</li> <li>You must be connected to the internet so the device can be registered</li> <li>Click register and then the build will continue (as shown in the GIF)</li> </ul> </li> </ul> </li> <li>Frame 2: Build has started<ul> <li>Xcode is Building as seen in dashed-green rectangle region</li> <li>First-Time on This Computer: <ul> <li>Follow the Always Allow Instructions the first time this Developer ID is used on this computer</li> <li>Never hit Deny</li> </ul> </li> </ul> </li> <li>Frame 3: Build succeeded<ul> <li>App is running as seen in dashed-green rectangle region</li> <li>If your phone locked during the build process, you will see a message to unlock your phone, as shown in the graphic below the GIF<ul> <li>Simply unlock your phone and Xcode does the rest</li> <li>If you tapped on <code>Cancel Running</code>, just hit the build button again</li> </ul> </li> <li>First-Time for this Phone: You may also see a \"Could Not Launch Loop\" message<ul> <li>Follow the Update Settings for Developer</li> </ul> </li> </ul> </li> </ul> <p></p> <p> </p> <p>If the app opened on your phone, the next two sections for first-time builders are not needed.  Skip ahead to Successful Build.</p> <p>If you got red error messages, skip ahead to Build Failed?</p>"},{"location":"build/build-app/#codesign-keychain-access","title":"Codesign / Keychain Access","text":"<p>First Time Using Developer ID on Computer</p> <p>During your first build with a given Developer ID on your computer, you will see a codesign/keychain access prompt, as shown in the graphic below. Enter the same password you use to log in to the mac, select \"Always Allow\" and then do it again each time you are asked.</p> <p></p> <p>It is normal for this prompt to come up repeatedly even after you enter the correct password (once for each target Loop needs to sign).</p> <p>In frustration, people think the prompt must be broken because it keeps reappearing and press deny or cancel. Don't press deny. Keep entering your computer password and pressing the \"Always Allow\" button as many times as it takes. The build will then continue.</p> <p>FYI: codesign is for code sign - nothing to do with design.</p>"},{"location":"build/build-app/#update-settings-for-developer","title":"Update Settings for Developer","text":"<p>First Time Building on a New Device?</p> <p>If this is the first time you have installed an app on your iPhone using a free account, you will see warnings in both Xcode and on your phone after a successful build and install on your phone.</p> <p>Don't worry, dismiss the messages and do this extra step on the phone. These instructions are valid for iOS 15:</p> <ul> <li>Open Phone Settings</li> <li>Select General</li> <li>Select VPN &amp; Device Management</li> <li>Under the Developer App section, tap on icon</li> <li>Tap on Trust</li> <li>You should now be able to open the app</li> </ul> <p></p> <p></p>"},{"location":"build/build-app/#what-if-the-automatic-signing-failed","title":"What if the Automatic Signing Failed?","text":"<p>Sometimes, something goes wrong with the automatic signing. Just the fact that you clicked on a few places in Xcode can change a particular file required to enable automatic signing. It is possible to reset that file, but it is easier to sign manually.</p> <ul> <li>The instructions to sign manually are found at Build Free Loop<ul> <li>As you go through that page, ignore the steps that remove capabilities which require a paid <code>Apple Developer</code> account</li> <li>Make sure you sign all 5 targets</li> <li>Each signed target shows a <code>Bundle Identifier</code> with your 10-digit <code>Apple Developer Membership ID</code> embedded after <code>com.</code></li> <li>If you don't know how to find that number, there are very clear directions in the Build with Browser: Find <code>TEAMID</code></li> </ul> </li> </ul>"},{"location":"build/build-app/#build-failed","title":"Build Failed?","text":"<p>No red error messages? Skip ahead to Successful Build.</p> <p>Red Errors</p> <p>If you get a message that your build failed and see RED ERROR messages:</p> <ul> <li>Go to the Build Errors page to find the steps to fix your build error</li> <li>(Optional) Follow the Clear the Error Message process</li> <li>Return to Start Build to try again</li> </ul> <p>FAQ: But what about those yellow or purple warnings that remain in Xcode? Should I worry about them?</p> <p>If you see yellow or purple warnings after your build is done...those are not an issue. Don't try to resolve them or fret about them. They mean nothing to the successful use of your Loop app.</p> <p>NOTE: purple warnings are still warnings and can be ignored.</p> <p></p>"},{"location":"build/build-app/#clear-the-error-message","title":"Clear the Error Message","text":"<p>Once you've resolved a build error and start the build process again, Xcode will continue to show a red indicator on the top line from the previous failure.  If you don't like seeing that, clean the build folder to clear the error.  Otherwise, as long as the steps of the build are showing across the top line, Xcode is still working on the build.  When the build succeeds, the red circle will disappear.</p> <p>Clean Build Folder</p> <ul> <li>In Xcode menu, select Product, then Clean Build Folder</li> <li>Wait for cleaning to complete: you'll see a \"Clean Finished\" message</li> </ul>"},{"location":"build/build-app/#successful-build","title":"Successful Build","text":"<p>After you see the Loop app open on your phone, you can unplug your phone and acknowledge the Xcode message: <code>Lost connection to the debugger on . . .</code>.  The square icon next to the play button goes away as soon as you unplug your phone from Xcode.</p> <p>The Loop app on your phone closes (but does not quit) when you unplug the phone. Open the Loop app on your phone just to be sure.</p> <p>Congratulations!</p> <p></p> <p>If you plan to build again on a backup phone, or want to try a customization, easiest for you to leave Xcode open. Otherwise, you can quit out of Xcode now.</p> <p>But wait - there's more.</p> <ul> <li>Caregivers who help manage a loved-ones diabetes often use other open-source apps that can be built the same way</li> <li>When you are done building and installing the Loop app, there are instructions on the Loop and Learn website to Download and Build Related Apps</li> </ul>"},{"location":"build/build-app/#protect-that-app","title":"Protect that App","text":"<p>Protect Against Deletion</p> <p>Prevent your Loop app from being deleted accidentally.</p> <p>If you, or a child, deletes the app from the home screen, it is gone - you have to rebuild and reenter all settings and start a new pod or add back in your Medtronic pump.</p> <p>The steps vary depending on iOS. With iOS 15 and 16, it is under Screen Time, Content &amp; Privacy Restrictions, iTunes &amp; App Store Purchases, Deleting Apps. Choose Don't Allow. If those steps don't help, do an internet search like this, where you use your current phone iOS version number:</p> <ul> <li>\"turn off app deletion iOS ##\"</li> <li>\"iOS ## prevent app deletion\"</li> </ul> <p>Follow the instructions to prevent deletion of what is now a critical medical app.</p>"},{"location":"build/build-app/#important-safety-reminder","title":"IMPORTANT SAFETY REMINDER","text":"<ul> <li>STAY IN OPEN LOOP UNTIL YOU UNDERSTAND THE SYSTEM</li> <li>Do NOT skip the Set Up and Operate material; at least skim it.</li> <li>Keep reviewing LoopDocs - some material will be more impactful once you have the app in your hands.</li> <li>Ask questions if you are confused.</li> <li>Learn to use the LoopDocs search feature</li> </ul>"},{"location":"build/build-app/#new-to-loop-3","title":"New to Loop 3","text":"<p>If this is your first build with Loop 3, head to the Set Up tab starting here: Loop 3 Overview.</p> <p>Pro Tip: Read Along in LoopDocs as you Onboard</p> <p>One of the goals for Loop 3 is to make the app robust even if you don't read the documentation, but a lot of questions may be resolved if you read along in LoopDocs as you onboard.</p> <p>All those mentors who answer questions are volunteers.</p> <p>Even if you don't read all the pages under the Set Up tab now, these links are important.</p> <ul> <li>New Looper: Onboarding</li> <li>Building Loop 3 over Loop 2.2.x: Experienced Looper Onboarding</li> </ul> <p>Add a Calendar Reminder</p> <ul> <li>It is good practice to add a reminder to your calendar when the app will expire</li> <li>Be sure to add an alert to that reminder so you have enough time to do all the Loop Updating steps to build the app again before it expires</li> <li>Even better, practice building every 3 to 6 months so you don't forget and keep that expiration date far in the future</li> </ul>"},{"location":"build/build-app/#optional-steps","title":"Optional Steps","text":""},{"location":"build/build-app/#code-customizations","title":"Code Customizations","text":"<p>New Loop users: Customizations are not a required part of any Loop build. As you gain experience using your Loop app, you may want to customize some of the features. First time builders are encouraged to build with the standard, default code. You can always update your Loop app to add customizations at a later time, using the same download. Subsequent build time is much faster than the initial build for a given download.</p> <p>Pro Tip</p> <p>With a fresh download of code, it's always best to build to a simulator without customization to ensure the build works without errors. Then add the customizations and check the build again. Now you are ready to build to your phone to update your existing app.</p> <p>To add custom configurations to your Loop or Loop Apple Watch apps, follow the step-by-step instructions on the Code Customizations page and then build the app again.</p>"},{"location":"build/build-app/#apple-watch","title":"Apple Watch","text":"<p>Existing Apple Watch users: Please update your watchOS prior to building the Loop app. The minimum iOS for Loop 3 is iOS 15.1, which means watchOS 8.1. When running iOS 16.x, you will need a watchOS of 9.x.</p> <p>New Apple Watch users: If you have an Apple watch and want to use it with Loop, first pair the watch with the iPhone before continuing to the next steps.  If you get a new watch after building the Loop app, you'll need to redo your Loop build.</p> <p>For more information, please see Operate: Apple Watch</p>"},{"location":"build/build-app/#build-again-with-this-download","title":"Build Again with this Download","text":"<p>Follow the Find My Downloaded Loop Code instructions if you later wish to build with this same dowload. Plug in an unlocked phone and start at the Start Build section of this page. You may need to select the phone you just plugged in. Everything else should be ready for you the start the build process.</p> <p>Don't use a really old download</p> <p>Do not use a really old download.</p> <p>Check the date of your download against the latest Current Release date and decide whether to get a fresh download instead.</p>"},{"location":"build/build-app/#xcode-errors-with-build-select","title":"Xcode Errors with Build-Select","text":"<p>The errors shown below should be prevented - the script will attempt to correct them automatically - follow the directions in the script.</p> <p>If this is not successful, the script told you the download failed and exited. Scroll up in the terminal to find the error message(s):</p> <ul> <li>Read the error message</li> <li>Try to figure out the problem</li> <li>If you need help, reach out to your favorite Loop Social Media site</li> </ul> <p>WARNINGS</p> <p>If you see errors like these . . .</p> <ul> <li><code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li> <li><code>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</code></li> <li><code>xcode-select: error: tool 'xed' requires Xcode</code></li> </ul> <p>You missed one of these steps:</p> <ul> <li>Install Xcode</li> <li>Xcode command line tools</li> </ul>"},{"location":"build/build-dev-mac/","title":"Build Loop dev with Mac","text":""},{"location":"build/build-dev-mac/#overview","title":"Overview","text":"<p>This page is only relevant when building the <code>dev</code> branch with a Mac.</p> <p>For Browser Build, please see: Build Loop dev with Browser</p> <p>No matter the method used to build Loop-dev, you are testing development code. Please read this link now before continuing.</p> <ul> <li>What's going on in the <code>dev branch</code></li> </ul>"},{"location":"build/build-dev-mac/#buildloopdev-script","title":"<code>BuildLoopDev</code> Script","text":"<p>There is a script to assist in building the <code>dev branch</code>. It gives you the option to choose the tip of the <code>dev branch</code> or to build a lightly tested commit. If you have not used the Build Select Script to build Loop previously, you may want to review that page. The command below can be pasted into the terminal of your Mac. Read the directions in the script.</p> <p>Copy and Paste to start the BuildLoopDev script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildLoopDev.sh)\"\n</code></pre> Both the <code>dev branch</code> and the lightly tested branch of <code>dev</code> have Libre support.</p>"},{"location":"build/build-dev-mac/#buildloopdev-other-branches","title":"BuildLoopDev Other Branches","text":"<p>You can use the BuildLoopDev script to build a specific development branch, other than <code>dev</code>. See the example below that would build <code>other-branch</code>, if such a branch existed. This is just an example. You need to substitute the branch you desire for <code>other-branch</code>. There must be a space after the final quote, followed by a hyphen, another space and then the branch name.</p> Example using <code>other-branch</code> with the BuildLoopDev script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildLoopDev.sh)\" - other-branch\n</code></pre>"},{"location":"build/build-dev-mac/#update-loop-dev","title":"Update Loop-dev","text":"<p>While Loop-dev is under active development, you should monitor zulipchat and update frequently.</p> <p>Checking for updates every week is a good idea. Also - subscribe to all the streams on Loop Zulipchat to make sure you don't miss critical information.</p> <p>You may choose to download fresh each time you update. </p> <p>You may prefer to use commands to fetch and pull the latest code without making a new clone.</p> <ul> <li>Some users like to use GitKraken to assist them (link takes you to a tutorial video).</li> <li>Some are comfortable with the command line git commands described on here.</li> </ul>"},{"location":"build/build-dev-mac/#loop-dev-version","title":"Loop-dev Version","text":"<p>The version of code that shows up under the Loop Settings screen does not change when the <code>dev branch</code> is modified.</p> <p>If you need help with your app, the mentors need more information. Please issue a Loop Report when asking for help. Refer to Support for how to issue a Loop Report. If you want to keep track yourself, refer to Identify Loop-dev Version</p> <ul> <li><code>Loop</code> Version Numbering</li> </ul>"},{"location":"build/build-dev-mac/#identify-loop-dev-version","title":"Identify Loop-dev Version","text":"<p>The version of code that shows up under the Loop Settings screen will remain fixed until Loop-dev is released. In order to identify which version of dev you have on your phone, you need the commit.</p> <p>The commit is identified by a 7-digit alphanumeric code.  That code was also appended to the folder name of the downloaded code under Downloads/BuildLoop as shown in the graphic above.  You can use finder to view the folder name after the script completes. It also appears in the Loop Report, refer to Support for instructions on issuing a Loop Report. After you issue the Loop Report, look at the workspaceGitRevision number near the beginning of the report.</p>"},{"location":"build/build-errors/","title":"Oh dear! Build errors?","text":""},{"location":"build/build-errors/#build-errors","title":"Build Errors","text":"<p>Important</p> <p>These are only relevant when building with a Mac and Xcode. For Building with Browser Build errors, please see: Errors with Browser</p> <p>There are two types of build indications that may be seen: they are warnings (yellow or purple icons) and red errors. You'll see the warnings and errors in the left-hand column of the Xcode window.</p> <p> Yellow and  Purple warnings do not cause the build to fail, those are just warnings.  You will often see yellow and purple icons. Ignore those. Do not try to do anything to fix those.</p> <p> Red errors will have to be resolved before you can successfully build the app. The steps below explain how to resolve them based on the messages you are seeing.</p>"},{"location":"build/build-errors/#xcode-not-responding","title":"Xcode Not Responding","text":"<p>Sometimes, Xcode stops responding. You have to fix this before any of the other steps on this page will help.  The signature is that Xcode shows a colorful spinning icon and does not respond to anything you do.</p> <p>This can happen sometimes. You just need to force quit Xcode. Sometimes rebooting the Mac may be required, but start with force quit. Then just open up Xcode again and keep going.</p> <ul> <li>Hold down these 3 keys Option+Cmd+Esc (or Alt+Cmd+Esc),  until the <code>Force Quit</code> menu appears (should be fast)</li> <li>Select <code>Xcode</code> and tap on the <code>Force Quit</code> button</li> </ul> <p></p>"},{"location":"build/build-errors/#start-with-the-obvious-error-causes","title":"Start with The Obvious Error Causes","text":"<p>New Loop Builders</p> <p>This page contains build error help for people updating their Loop app as well as brand new Loop app builders. Review the \"obvious\" errors causes first. If that doesn't help, then, skim the page until you reach Find Your Error Message or search the page (Cmd+F) or search LoopDocs for your error. Once you've identified your error message, try to resolve it.  Still stuck? Read Posting for Help</p> <p>Before you start trying to resolve your red errors, start with the most obvious things that can cause a red error message:</p> <ol> <li> <p>For older builds, before 3.2.0, you had to select Loop(WorkSpace) The first time you build after downloading new code, you had to manually select Loop (Workspace) instead of Loop in Xcode.</p> <ul> <li>Starting with Loop 3.2.0 and newer versions, the target name and xcworkspace file names are now automatically LoopWorkspace - no special action needed when building.</li> </ul> </li> <li> <p>Did you check that you have the minumum Xcode version for your iOS? This is critical. If you are updating your Loop app, please review the iOS driven requirements for minimum version of macOS and Xcode.</p> </li> <li> <p>Did you check your Apple developer account for new license agreement? Periodically, Apple will release a new developer license agreement that you need to sign before you can build new apps. You will get a build failure if there is a pending license agreement to sign. Login to your Apple developer account to check if there's a new license agreement.</p> </li> <li> <p>Do you have a new computer, never used to build Loop? Did you Add Apple ID to Xcode?</p> </li> <li> <p>Did you reboot, i.e., restart, your computer after updating Xcode? You should reboot following Xcode installation or update and you must make sure your command line tools match the version of Xcode you just installed. Xcode Command Line Tools</p> </li> <li> <p>Did you get a fresh download of Loop code? If you tried to build with an old download that you used a long time ago, that old version may not be compatible with the new iOS and Xcode versions. Check also, that you are actually using the new download in Xcode.  When you use the Build Select Script, it automatically opens Xcode using the new download.</p> <p>If you want to build using a recent download, this section tells you how to Find My Downloaded Loop Code.</p> </li> <li> <p>Are you are using a free developer account? Make sure you finished the removal of Siri and Push Notification capabilities described in the Free Account link.</p> </li> <li> <p>DO NOT USE BETA VERSIONS  If you are using an iOS beta version or an Xcode beta version, Loop might not build. Deleting iOS beta from a phone is a pain...so don't install it unless you know what you are doing.</p> </li> </ol>"},{"location":"build/build-errors/#fix-95-of-errors","title":"Fix 95% of errors","text":"<p>If you have checked all those steps above and think you have a true build error, here's a tip that resolves 95% of all build errors when updating Loop code.</p> <ol> <li>Open your project in Xcode as normal. Then go to the menu bar at the top of the screen and find the <code>Product</code> menu item. Use the drop down selection for <code>Clean Build Folder</code> or press Shift+Cmd+K. Either will work the same. Wait for the clean to finish before trying to build again.</li> <li>On the far right, next to the name Full Path is the folder name that Xcode will be using to build. Make sure it is the new code you just downloaded and not an older folder.</li> <li>If you are updating Loop and did not Delete Old Provisioning Profiles, do it now</li> <li>Return to Xcode and try building your app again.</li> <li>Still failing for phone or watch or both? Try the Unpair and Reboot procedure.</li> </ol>"},{"location":"build/build-errors/#unpair-and-reboot","title":"Unpair and Reboot","text":"<p>This is reported to fix a variety of watch building errors and <code>cannot prepare phone for development</code> errors:</p> <ol> <li>Open Xcode (if not already open)</li> <li>Plug phone into computer and make sure it is unlocked</li> <li>Using the Xcode menu, select<ul> <li>Windows</li> <li>Devices and Simulators</li> <li>On left side, Right-Click (or Control-Click) on your phone</li> <li>Choose Unpair Device</li> </ul> </li> </ol> <p>It may not be necessary, but the suggestion is to reboot phone, (watch) and Mac - in other words, you can try to build without rebooting, but if that fails, repeat the steps and reboot before trying again.</p> <p></p> <p>The next time you plug this phone into your computer, you will be asked to trust the computer on the phone (and watch).  Note this is unpairing the device from Xcode and your computer, not the same as, and much faster than, unpairing your watch from your phone.</p> <p>If the build fails again, look through the list below and see if you can match your error message with one of the error messages listed later in this page. If you really can't find your solution, then post for help. But help us help you.</p> <ul> <li>Ignore yellow and purple warning messages - those are not errors - do not try to fix them</li> <li>Confirm it really is an error not already on this page; read this page carefully, including all the circled bits in the images in the Specific Error Messages section</li> <li>Follow the steps in the Posting for Help section</li> <li>WE CANNOT HELP without version numbers and screenshots</li> <li>Do not take pictures of your computer screen with your phone, use screenshots</li> </ul>"},{"location":"build/build-errors/#new-with-xcode-15","title":"New with Xcode 15","text":""},{"location":"build/build-errors/#cycle-inside-loop","title":"Cycle inside Loop","text":"<p>If you build any older version of Loop with Xcode 15, you will see this error: <code>Cycle inside Loop: building could produce unreliable results</code>.</p> <p>Solution: Build Loop 3.2.3 or later</p> <p>What about other forks</p> <p>Other forks are not being maintained.</p> <p>If you are using FreeAPS or Loop with Patches (from the loopnlearn GitHub username), it is time to switch to released code.</p>"},{"location":"build/build-errors/#new-with-xcode-14","title":"New with Xcode 14","text":"<p>This may change, but for now, the watchOS simulator is not automatically included with the Xcode 14.x download and install. Some version of the watchOS simulator is required to build Loop, independent of whether you use a watch.</p> <p>You will be asked if you want to download &amp; install.   Make sure <code>watchOS</code> is selected.</p> <p></p> <p>If you are getting watch errors or having trouble with your watch, try this:</p> <p>Tap on the Xcode name on the menu bar and select Settings.</p> <p>Choose the Platform tab. If there is a missing watchOS simulator that you think might help, then download it using the <code>GET</code> button. Use the minus icon (bottom left) to remove simulators that are no longer being used. (The watchOS 9.0 is required to build with Xcode 14.0.1. The watchOS 9.1 was downloaded with a release candidate for Xcode 14.1 - your screens may look different.)</p> <p></p>"},{"location":"build/build-errors/#posting-for-help","title":"Posting for help","text":"<p>STOP!!  Read this section! Important!</p> <p>Before you post in a Loop Social Media site asking for help with build errors, do your work first.  The build errors listed below (and the checks listed above) will fix most of the problems you may encounter.  </p> <p>PLEASE READ THIS PAGE. The volunteers answering questions online would love to spend more time helping people use Loop and less time answering questions that can be addressed by using this page.</p> <p>Therefore, try to resolve your build error yourself. Then, if you need to post for help, please include enough information with the post so the volunteers know where you are in your troubleshooting attempts.</p> <p>Your Post Must Include:</p> <ul> <li>The version of Xcode you are using</li> <li>The version of Loop you are building with</li> <li>The version of iOS on your Loop iPhone</li> <li>Free or paid account, and if free, confirmation that you deleted Siri and Push Notification capabilities</li> <li>Confirmation that you are not using an Xcode beta or iOS beta version (so we don't have to ask, please actually type \"I am not using beta versions\")</li> <li>Screenshots of your WHOLE Xcode window and/or Terminal window showing your error and any messages you've seen while working through the build errors/solutions.  Do NOT use phone photographs of your computer screen.  See below for instructions on how to capture a screenshot.</li> <li>State which fixes from the list below you have already tried AND post the screenshots of the results of those fix attempts.</li> </ul>"},{"location":"build/build-errors/#screenshots","title":"Screenshots","text":"<p>Please take screenshots of your issue and use them in your posts. On an Apple computer, press Shift+Cmd+4 keys at the same time followed by pressing the space bar Space and then click on the window of interest. The screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". Use screenshots instead of cell phone images or words whenever possible. Screenshots are higher resolution and easier to read.</p> <p>Use the whole Xcode window screenshot when posting for build help.</p>"},{"location":"build/build-errors/#find-your-error-messages","title":"Find Your Error Message(s)","text":"<p>To begin fixing the error, use the Report Navigator view to find your error message.</p> <p></p> <p>The key is to (1) READ THE ERROR MESSAGE and then (2) FIND YOUR MESSAGE IN ONE OF THE TOPICS BELOW.</p> <p>Here's a super tip: Merely seeing the \"exit code\" in Xcode is not enough information to discern what error is causing your build to fail; some exit codes have multiple causes. Look at the detailed message to guide your search for the matching solution.</p> <p>Notice the screenshots below have red circles highlighting certain error messages.  Read your error message(s) from your screen, being guided by the red circles in the screenshots. Once you find your error message (hint: not \"exit code\"), you can either:</p> <ul> <li> <p>Take the error message from your Xcode screen and use LoopDoc's search function to enter in some of that phrase to bring up the appropriate solution topic, or</p> </li> <li> <p>Take the error message from your Xcode screen and read through EACH OF THE TOPICS BELOW. Check each of the red circles to see if you have a match. Kind of like a matching puzzle.</p> </li> </ul> <p>For example, if you see \"Invalid active developer path (/Library/Developer/CommandLineTools)\" in your error message, use the search tool in LoopDocs with \"invalid active\". You will get a couple of links and one is the Command Line Tools fix for that error message. Click on the link and you'll find the solution.</p> <p></p>"},{"location":"build/build-errors/#specific-error-messages","title":"Specific Error Messages","text":""},{"location":"build/build-errors/#unable-to-read-included-file-loopconfigoverridexcconfig","title":"Unable to read included file <code>LoopConfigOverride.xcconfig</code>","text":"<p>Error Message: This error occurs inside Xcode with the build halting at the line that reads the <code>LoopConfigOverride.xcconfig</code> file.</p> <p></p> <p>Solution:</p> <p>Modify the permissions for Xcode in your macOS.</p> <p>The graphic below has steps labeled 1 through 4 to guide you to the setting that must be enabled for you to build the app with Xcode.</p> <ol> <li>Open the macOS settings (Apple icon) and navigate to Privacy &amp; Security</li> <li>Select Files and Folders</li> <li>Select Xcode</li> <li>Ensure that Downloads Folder is enabled</li> </ol> <p></p>"},{"location":"build/build-errors/#the-file-could-not-be-unlocked","title":"The File Could not be Unlocked","text":"<p>Error Message: This error occurs inside Xcode with a modal alert that says:</p> <p>The file \"contents.xcworkspacedata\" could not be unlocked</p> <p>The solution is the same as in the previous section, Unable to read included file.</p>"},{"location":"build/build-errors/#no-devices-from-which-to-generate-a-provisioning-profile","title":"No devices from which to generate a provisioning profile","text":"<p>Error Message: This error occurs during the <code>Build target WatchApp</code> or <code>Build target WatchApp Extension</code>.</p> <p><code>Communication with Apple failed: Your team has no devices from which to generate a provisioning profile. Connect a device to use or manually add device IDs in Certificates, Identifiers &amp; Profiles. https://developer.apple.com/account/</code></p> <p><code>No profiles for 'com.XXX.loopkit. Loop. LoopWatch' were found: Xcode couldn't find any iOS App Development provisioning profiles matching 'com.XXX.loopkit.Loop.LoopWatch'.</code></p> <p></p> <p>Solution:</p> <ul> <li>Close Xcode </li> <li>Reopen Xcode</li> <li>Press the build button (<code>\u25b6\ufe0f</code>) again</li> </ul>"},{"location":"build/build-errors/#run-destination-is-not-valid-failed-to-prepare-the-device","title":"Run Destination is Not Valid; Failed to Prepare the Device","text":"<p>Error Message:</p> <p>The run destination for name's phone is not valid for running the scheme \"Loop (Workspace)\"</p> <p></p> <p>Solution:</p> <p>First make sure your Xcode version is new enough to work with your phone iOS version and make sure developer mode is turned on for iOS 16 or newer. If so, then try this procedure:</p> <ul> <li>Follow the link for the Unpair and Reboot procedure.</li> </ul>"},{"location":"build/build-errors/#packageresolved-file-corrupted-or-malformed","title":"Package.resolved file corrupted or malformed","text":"<p>Error Message:</p> <p>Package.resolved file is corrupted or malformed; fix or delete the file to continue: unsupported schema version 2</p> <p></p> <p>This error is new with Loop 3, which uses Package Dependencies.</p> <p>There are 2 problems shown here</p> <ol> <li>The version of Xcode is out of date</li> <li>The graphic was acquired using a camera instead of a screenshot, and yes - that was a joke - using a camera does not cause a build error</li> </ol> <p>Solution:</p> <p>Update Xcode, which may require you to update macOS.</p>"},{"location":"build/build-errors/#couldnt-get-revision-for-package-dependency","title":"Couldn't Get Revision for Package Dependency","text":""},{"location":"build/build-errors/#many-search-143-for-this-error","title":"Many Search 1.4.3 for this Error","text":"<p>This error is new with Loop 3, which uses Package Dependencies.</p> <ul> <li>If you notice a red x in Xcode (as circled in the graphic below)<ul> <li>Click on the red x to show the error in the left pane</li> <li>Alternatively, you can click on the icon shown with the red square to see the same information</li> </ul> </li> </ul> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li>Uncategorized<ul> <li>Couldn't get revision . . .</li> </ul> </li> </ul> <p>Solution:</p> <p>Refer to the graphic below</p> <ol> <li>Click on the folder icon (indicated by red square)</li> <li>Hold down the Control-Key and click the <code>Package Dependencies</code> row to display the dropdown menu (shown in the inset)</li> <li>Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process</li> <li>Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish</li> <li>You can start the build as soon as the Indexing message appears</li> </ol> <p></p>"},{"location":"build/build-errors/#unable-to-read-included-file","title":"Unable To Read Included File","text":"<p>This error has been seen with Loop 3. The permanent xcconfig file, created by the build script and used to sign targets, is written to a folder where the user does not have read permission.</p> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li>unable to read included file <code>path inserted here</code></li> </ul> <p>Solution:</p> <p>No need to quit Xcode. If your build script terminal is still open, use it. Otherwise, open a new terminal window.</p> <p>Copy the lines below that start with <code>ls -l</code> by hovering the mouse near the right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to add read permissions to xcconfig file<pre><code>ls -l ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\nchmod +r ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\nls -l ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>Paste the lines into the terminal. The response to the first line will be something like this:</p> <pre><code>--w-------  1 marion  staff  490 Nov  8 04:58 /Users/marion/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>There will be no response after the second line - although if an error is reported, please grab a screenshot.</p> <p>The response to the last line will be something like this:</p> <pre><code>-rw-r--r--  1 marion  staff  490 Nov  8 04:58 /Users/marion/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>The addition of <code>r</code> where there used to be <code>-</code> on the left side, means you now have permission to read that file.</p> <p>Final step is to return to Xcode and clean the build folder. Otherwise Xcode remembers it could not read the file and it won't try again.</p> <ol> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>Press the Build Button (play icon)</li> </ol>"},{"location":"build/build-errors/#cycle-dependency","title":"Cycle Dependency","text":"<p>This error is new with Xcode 13.3 (late Sep 2021) which has a new requirement</p> <ul> <li>For those who care: the new requirement is that for a certain type of instruction file, the line with the <code>Headers</code> keyword must be located before the line with the <code>Sources</code> keyword</li> <li>There used to be many <code>repositories</code> that did not have lines in that order</li> <li>If you are seeing this error, you are building with an older copy and should consider updating</li> </ul> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li> <p>Left window (the exact target names are not important):</p> <ul> <li>Cycle in dependencies between targets . . .</li> </ul> </li> <li> <p>Middle window:</p> <ul> <li>Target build order preserved because \"Build Order\" is set to \"Manual Order\" in the scheme settings</li> </ul> </li> </ul> <p>Solution:</p> <p>No need to quit Xcode - follow these steps using the Xcode Menu bar. (It's possible that only Step 1 is required, but sometimes all steps are needed.)</p> <ol> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>From the <code>File</code> menu, select <code>Close Workspace</code></li> <li>From the <code>File</code> menu, select <code>Open Recent</code> and choose the top line</li> <li>Press the Build Button (play icon)</li> </ol>"},{"location":"build/build-errors/#entitlements-error","title":"Entitlements Error","text":"<p>Error Message:</p> <p></p> <p>Text in error message can be either of these:</p> <p>Entitlements file \"WatchApp Extension.entitlements\" was modified . . .</p> <p>or</p> <p>Entitlements file \"Loop.entitlements\" was modified . . .</p> <p>Solution:</p> <p>No need to quit Xcode - follow these numbered steps as indicated in the graphic below.</p> <ol> <li>Click on the Loop icon under PROJECT</li> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>Press the Build Button (play icon)</li> </ol> <p></p> <p>It turns out that</p> <ul> <li>You can start building before indexing completes - just make sure it has started</li> <li>The behavior causing this in Xcode has been reported to Apple</li> </ul>"},{"location":"build/build-errors/#compileassetcatalog-error","title":"CompileAssetCatalog Error","text":"<p>This error is found when there is a space embedded in the path name to your LoopWorspace folder. The good news is that LoopWorkspace seems to be able to build from an iCloud or Dropbox drive.</p> <p></p> <p>Text in error message:</p> <p>Command CompileAssetCatalog failed with a nonzero exit code. . .</p> <p>Solution:</p> <p>This is very similar to the steps for the WatchApp Entitlements Error but you need to repeat it for 2 targets: <code>Loop</code> and <code>WatchApp</code> - the graphic below matches the step numbers in the list.</p> <ol> <li>Click on <code>Loop</code> folder</li> <li>Click on <code>Loop</code> target</li> <li>Click on the <code>General</code> tab</li> <li>Click on the <code>App Icons Source</code> dropdown menu</li> <li>Click on the item already selected (the line will change from red to blank)</li> </ol> <p></p> <ul> <li>Repeat the <code>App Icons Source</code> dropdown menu selection for the <code>WatchApp</code> target</li> <li>(Optional) Clear the Build Error (Menu at top of Xcode: Select Product-&gt;Clean Build Folder)</li> <li>Press build</li> </ul>"},{"location":"build/build-errors/#carthage-error","title":"Carthage Error","text":"<p>For older builds only. With Loop 3.2.0 and newer, the default selection is already LoopWorkspace.</p> <p>You should not see carthage errors, but if you do, you probably did not select Loop (Workspace) at the top of the Xcode window. Review the graphic from the Prepare to Build Instructions.</p> <p>Or maybe you are trying to build using an old download; some older versions did require carthage. Best practice is to download new code.</p> <p>Error Message:</p> <p>Wrong Version of Carthage Error</p> <p>Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: one of -create, -thin , -extract , -remove , -replace  , -verify_arch  \u2026 , -archs, -info, or -detailed_info must be specified. <p>Solution: Download fresh code with Build Select Script.</p>"},{"location":"build/build-errors/#could-not-locate-device-support-files","title":"Could Not Locate Device Support Files","text":"<p>Error Message: \"Could not locate device support files.\" That message is telling you that your iOS on the Loop phone requires you to get a newer version of Xcode to be able to build Loop onto that phone.</p> <p>Solution: Update your Xcode version; this may also require a macOS update. Please review the phone iOS driven requirements for Xcode and macOS.</p> <p></p>"},{"location":"build/build-errors/#no-such-module-loopkit-or-similar-message","title":"No Such Module 'LoopKit' or Similar Message","text":"<p>Error Message: If you see a Cartfile failure and several other red errors (in particular saying there is \"no such module 'LoopKit'\").</p> <p>Solution: Read the Carthage Error section above.</p>"},{"location":"build/build-errors/#developer-license-update-pla-update","title":"Developer License Update (PLA Update)","text":"<p>Error message: <code>The Apple Developer Program License Agreement has been updated,  In order to access certain membership resources, you must accept the latest license agreement</code>. Or you may see <code>Unable to process request - PLA Update available. You currently don't have access to this membership resource. To resolve this issue, agree to the latest Program License Agreement in your developer account.</code></p> <p>Solution: You'll need to log onto your Apple Developer account at developer.apple.com and accept the latest license agreement.</p> <p></p>"},{"location":"build/build-errors/#could-not-get-a-container-directory-url","title":"Could Not Get a Container Directory URL","text":"<p>Error message: \"Could not get a container directory URL. Please ensure App Groups are set up correctly in entitlements.\"</p> <p></p> <p>Solution: To resolve this error, you will need to click on the Loop target's signing area and then the plus-sign in the App Groups area under the signing. Copy and paste the bundle indentifier into the new container that starts with <code>group.</code> and then add <code>Group</code> to the end of the name. Click OK to save. Note, the line will start with lower case <code>group.</code> followed by your bundle identifier and an upper case <code>Group</code> added to the end of the bundle identifier.</p> <p></p> <p>The final App Group should now have a blue check box, the name should start with <code>group</code> and end with <code>LoopGroup</code>. See the screenshot as an example. Click the build button after your App Group is setup similarly and you should be good.</p> <p></p>"},{"location":"build/build-errors/#missing-command-line-tools","title":"Missing Command Line Tools","text":"<p>Error message:  \"Invalid active developer path (/Library/Developer/CommandLineTools)\"</p> <p></p> <p>Solution: Go to your Xcode -&gt; Settings and under the Locations tab, select your Xcode version (the figure shows 14.0.1 - yours should match your Xcode version) in the dropdown menu for Command Line Tools.</p> <p></p>"},{"location":"build/build-errors/#device-management-could-not-launch-loop","title":"Device Management Could Not Launch Loop","text":"<p>Error message: \"Could not launch \"Loop\". Verify the Developer App certificate for your account is trusted on your device. Open Settings and navigate to General -&gt; Device Management, then select your Developer App certificate to trust it.\"</p> <p></p> <p>New Solution First try the Unpair and Reboot process above. If that doesn't work, then try the solution listed below.</p> <p>Solution: If you get this message and are unable to find the Device Management option in your phone settings, then we need to do a little extra step to clear out some old info.</p> <ol> <li>Plug the phone into the computer and open Xcode</li> <li>Click the \"Window\" menu item in Xcode and then choose \"Devices and Simulators\"</li> <li>Right click your phone on the left and pick \"Show Provisioning Profiles\"</li> <li>Delete all of the items in the list that have Loop in the name</li> <li>Go to your four signing targets and change the signing team back to \"None\" for a quick bit, and then change back to your regular signing team name again.</li> <li>Rebuild Loop</li> </ol> <p>That should clear the out, problematic profiles and allow a successful build.</p> <p>If your problem persists after that, then you might need to do total reset of your phone to clear out the pesky problem. Before you do this, you may want to Post for Help to make sure it is really necessary:</p> <ol> <li>Wipe the iPhone clean and set it up as a new device<ul> <li>FIRST - write down or screenshot all your settings</li> <li>Pod users - you will have to start a fresh pod after this</li> <li>If you want your old pod to continue giving you basal rate, don't replace the pod before wiping your phone.  Once the phone is reset and a new Loop app is added, you must start a new pod.  The old pod should have the sound connection broken before being discarded because you won't be able to deactivate the pod.</li> </ul> </li> <li>Delete all certificates from your Developer account (you'll need to login to your Developer account to do that)</li> <li>Delete your old Loop code download and get a new one.</li> <li>Rebuild Loop on the phone with the new download of Loop code.</li> <li>Start a new pod with the new Loop app on the reset phone.</li> </ol>"},{"location":"build/build-errors/#pending-certificate-request","title":"Pending Certificate Request","text":"<p>Error message: \"You already have a current iOS Development certificate or a pending certificate request.\"</p> <p></p> <p>Solution: This error message has recently started to appear for some new Loop builders. To resolve the issue, please log in to your Developer account at developer.apple.com and then click on \"Certificates, Identifiers &amp; Profiles\".  Under that screen, you will see \"Development\" under the \"Certificates\" section in the column on the left.  You will need to click on the certificates, and choose \"revoke\" from the options that show after you click on the certificate. Confirm the warning message that will appear asking \"Do you want to revoke the certificate?\"</p> <p></p> <p>After you do that, return to Xcode and open up Xcode -&gt; Settings and choose the Accounts tab. Highlight your Apple ID and click on the minus sign to delete your Apple ID.</p> <p></p> <p>Re-enter your Apple ID (yes...add that account right back that you literally just deleted), return to your Loop's target signing areas in Xcode and your error message should have resolved as a new certificate will have been issued and a provisioning profile should have been created automatically.</p> <p>You can verify the iOS development certificates are working by clicking on \"Manage Certificates\" in Xcode -&gt; Settings, Accounts tab and viewing the iOS Development Certificates.  You should have one for your account that has a clean status similar to the screenshot below.</p> <p></p>"},{"location":"build/build-errors/#command-codesign-failed","title":"Command CodeSign Failed","text":"<p>Error message: \"errSecInternalComponent,  Command CodeSign failed with a nonzero exit code\"</p> <p></p> <p>Solution:  This error message is likely due to inadvertently saying \"no\" to allowing Keychain Access or changing your computer or AppleID password. Regardless, the solution is as follows:</p> <ol> <li>Close Xcode</li> <li>Open your Keychain Access application (found in Applications within the Utilities folder)</li> <li>In the upper left corner of keychain access, make sure you have the keychain <code>login</code> highlighted and then right-click the lock next to the <code>login</code>.  Click the lock closed, and then click the lock to open it again. You will be prompted for a password.  Enter your computer admin password.  Close Keychain Access app.</li> </ol> <p></p> <ol> <li>Open your Loop project again in Xcode.</li> <li>In the main Xcode menu (grey menu bar at the very top of your Apple display area), select <code>Product</code> and then select the option for <code>Clean</code>.  (Keyboard shortcut is Shift+Cmd+K)</li> <li>Now try rebuilding your Loop app.  If you ever get prompted again to allow Xcode access to Keychain, make sure to click on the option to Always Allow.</li> </ol>"},{"location":"build/build-errors/#unrecognized-arguments","title":"Unrecognized Arguments","text":"<p>Error message: \"Unrecognized arguments: --cache-builds\"</p> <p></p> <p></p> <p>Solution: This is a homebrew / carthage error, so I don't think you'll see this. If you do, download a fresh copy of Loop code and try again. If it repeats, it is time to request assistance. Please read Posting for Help.</p>"},{"location":"build/build-errors/#abort-with-payload","title":"Abort with Payload","text":"<p>Error message: \"Abort with payload\"  Your app will only open briefly with a white screen and then close, if you build with this error.</p> <p></p> <p>Solution: This error message is caused by having the Loop download folder in an iCloud mapped drive when doing the zip download.  Move your Loop download folder back to the Downloads folder, then rebuild. LoopWorkspace builds with Xcode 13 appear to work fine with an iCloud drive.  You may run into the spaces in your path name problem - which has a different solution.</p>"},{"location":"build/build-errors/#apple-watch-issues","title":"Apple Watch Issues","text":""},{"location":"build/build-errors/#apple-watch-loop-app-not-appearing","title":"Apple Watch: Loop App Not Appearing","text":"<p>Error: Apple watch app is not appearing.</p> <p>Solution: This error usually appears because you have not updated the watchOS prior to building Loop, or you didn't have your Apple watch paired at the time of building Loop.</p> <p>Don't forget to open the iPhone's Watch app, select My Watch tab on the bottom left, scroll all the way down, and click <code>Install</code> for the Loop app listed at the very bottom under \"available apps\".</p>"},{"location":"build/build-errors/#apple-watch-loop-app-not-installing","title":"Apple Watch: Loop App Not Installing","text":"<p>Before trying this solution, see if the Unpair and Reboot procedure works.</p> <p>Error: The Loop app appears on the list of apps available to install on the watch, but when you press \"install\", and it goes through the animation of filling in the circle while it's installing, but then at the end it just toggles back to saying \"INSTALL\".</p> <p>Solution:  Plug your iPhone into the computer and start Xcode.  On your watch, look for a prompt that says \"Trust this computer\".  Scroll down on the watch face and select the \"Trust\" button. In Xcode, go to the top menu bar and select \"Clean Build Folder\" from the Product menu option, and then rebuild your Loop app.</p> <p>If the watch app still fails to install properly, the next section should work.</p>"},{"location":"build/build-errors/#apple-watch-loop-app-not-running-on-watch","title":"Apple Watch: Loop App Not Running on Watch","text":"<p>Error: Tapping the Loop app icon on the watch results in flash of the watch screen and then return to the Loop app icon or a brief display of the watch interface and then return to the Loop app icon.</p> <p>Solution: Plug in your iPhone, with the watch already paired, into the computer and start Xcode with your current build folder.  In Xcode, from the list of schemes where you normally choose Loop (Workspace) (with Loop 3.2.x and newer, LoopWorkspace is the default), choose the WatchApp scheme (near the bottom of the list) and then select your watch (not a simulator) from the device list, see the graphics below. Press the play button to build and deploy the WatchApp directly to your watch. It will launch correctly and will not crash when you subsequently launch it from the complication or your watch Home Screen..</p> <p></p> <p></p> <p>Warning: Make sure your watchOS is up to date with respect to your phone iOS. If not, you may need to update to be successful. On pressing clicking build/play, some people report receiving an error stating \u201ciPhone/Apple Watch are ineligible because the OS on the watch doesn\u2019t support WatchKit App Products\u201d or similar wording. This is a known issue with some Mac USB ports. Fixes in preference order are: 1) swap which USB port is in use;  2) unplug and replug the USB cable from both the iPhone and Mac; or 3) as a last resort, reboot the iPhone and Mac.</p> <p>Don't forget to select Loop(Workspace) after building to the watch before trying to build to a phone.</p>"},{"location":"build/build-free-loop/","title":"Build Free Loop","text":""},{"location":"build/build-free-loop/#prepare-to-sign","title":"Prepare to Sign","text":"<p>This page is not stand-alone. You typically get here after choosing to Sign Manually after a successful download using the Build Select script.</p> <p>Normally this option is chosen by people building the app with the Free option or if you want to build to a simulator on your computer.</p> <p>If you have a paid developer account and are building Loop 3, you are far better off choosing to configure the permanent override file with your Apple Developer ID. Refer to Sign Targets.</p> <p>The instructions found on this page are for the first build.  With the Free version, you need to build every week. Refer to Build Again with this Download.</p>"},{"location":"build/build-free-loop/#select-the-loop-folder","title":"Select the Loop Folder","text":"<p>Don't touch that button!</p> <p>You will be told exactly where on each screen you should click. Please only click in the designated places.</p> <p>Follow the directions and compare your Xcode screen to the graphics as you walk through the steps.</p> <p>As shown in the GIF below:</p> <ul> <li>Frame 1: This is what the Xcode screen looks the very first time it is opened after a fresh download<ul> <li>You need to click on the indicated Loop folder icon two times</li> </ul> </li> <li>Frame 2: After the 2 clicks, the middle pane of the Xcode window should be similar (for Loop 3.2.x and newer, the top middle bar will show LoopWorkspace, not Loop)</li> </ul> <p></p>"},{"location":"build/build-free-loop/#select-your-phone","title":"Select Your Phone","text":"<p>If this is the First Time your phone or watch has been connected to Xcode, you will need to tell the phone and watch to \"Trust this Computer\".</p> <p>The GIF (not updated for Loop 3.2.x) below shows:</p> <ul> <li>Frame 1: Same as end of previous GIF<ul> <li>There's a red rectangle around the dropdown menus</li> <li>The menu on the left says \"LoopWorkspace\" for 3.2.x and newer</li> </ul> </li> <li>Frame 2: Same as Frame 1 with a zoomed inset of the red rectangle<ul> <li>Ignore Frame 2 and 3 for Loop 3.2.x and newer which already shows LoopWorkspace</li> <li>You can see Loop has a check mark beside it</li> <li>Loop (Workspace) is one line below</li> <li>Select Loop (Workspace)</li> </ul> </li> <li>Frame 3: Zoomed inset after selecting Loop (Workspace)</li> <li>Frame 4: Desired result should show LoopWorkspace and your phone</li> </ul> <p></p> <p></p> <p>I don't see my phone</p> <ul> <li>If you don't see your phone in the Devices section, unplug and plug in again</li> <li>Still don't see your phone - reboot the phone - and if that doesn't work - reboot the computer</li> <li>Still don't see your phone - try a different cable or USB slot</li> </ul>"},{"location":"build/build-free-loop/#build-to-a-simulator","title":"Build to a Simulator","text":"<p>Skip this section if building to a phone and proceed to Select Signing &amp; Capabilities Tab.</p> <p>If you want to build to a simulator, follow the directions in this section and skip the rest of this page.</p> <ul> <li>Simply choose one of the iOS Simulators instead of a phone and build to it<ul> <li>The iOS simulator you choose does not need to be the same model as your phone</li> </ul> </li> <li>With a simulator, you do not need to sign targets:</li> <li>After a successful build, a simulated phone will appear on your computer and you can interact with the app on that simulated phone</li> <li>Follow this link to Start Build</li> </ul>"},{"location":"build/build-free-loop/#select-signing-capabilities-tab","title":"Select Signing &amp; Capabilities Tab","text":"<p>What does Signing Targets Mean?</p> <p>\"Signing Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone without signing each target associated with that app.</p> <p>The graphic below indicates in red the three places you need to click in order to begin signing targets.</p> <ul> <li>First, click on the tab labeled <code>Signing &amp; Capabilities</code></li> <li>Second, click on the icon labeled <code>Loop</code> under the word <code>TARGETS</code></li> <li>Third, click on the dropdown menu (red circle) by the word <code>Team</code></li> </ul> <p>Click Only where Instructed</p> <ul> <li>Make sure <code>All</code>, indicated by dashed blue oval, is selected<ul> <li>If <code>Debug</code> or <code>Release</code> is accidentally tapped, you will not be able to build</li> </ul> </li> <li>Make sure <code>Automatically manage signing</code>, indicated by dashed blue rectangle, is checked</li> </ul> <p></p>"},{"location":"build/build-free-loop/#sign-the-targets","title":"Sign the Targets","text":"<p>It is time to Sign the Targets with your Apple ID.</p> <p>If you chose to sign manually but have a paid account, you can skip the Free Account steps below.</p> <p>You will be building multiple targets to make a complete app and must sign each one. With Loop 2.2.x, there are 4 targets. With Loop 3, there are 5 targets.</p> <p>Start with the Loop target, the first one on the target list. Choose your Apple ID.</p> <p></p>"},{"location":"build/build-free-loop/#free-account","title":"Free Account","text":"<p>This section is required if you are using the free account.</p> <p>Some features of Loop are not available with the Free option, so as you sign, you will need to remove features that are not supported.</p> <ol> <li>You must remove unsupported capabilities from 2 targets, this is best done as you sign each target:<ul> <li>Loop Target: Push Notifications; Siri and Time Sensitive Notifications</li> <li>Watch App Extension Target: Siri</li> </ul> </li> <li>Add the keyword <code>SIRI_DISABLED</code> to the LoopConfigOverride.xcconfig file<ul> <li>Click on the filename in the left pane of Xcode and view it in the Xcode editor</li> <li>Examine the file and find the line that starts with <code>SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited)</code></li> <li>Insert the new keyword (separated by a space) anywhere after <code>$(inherited)</code> and before the slashes near the end of the line</li> <li>When done, that line should be similar to:<code>SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited) SIRI_DISABLED</code></li> </ul> </li> </ol> <p>Details about removing unsupported capabilities:</p> <ul> <li>You must disable Push Notification, Siri and Time Sensitive Notifications<ul> <li>If the target you are signing does not use one of these attributes, no error message will appear when you select (personal team) for that target</li> <li>If the target you are signing does use one of these attributes, an error message will appear when you select (personal team) for that target</li> </ul> </li> <li>The Xcode error message starts with \"Cannot create . . .\" with a list of all the attributes not supported.<ul> <li>Scroll down and click on the little trash can icon next to each unsupported attribute</li> </ul> </li> <li>Scroll up and both the \"Cannot create . . .\" and \"No profiles for . . .\" error messages are gone</li> <li>You are done with this target</li> <li>Proceed to the next target</li> </ul>"},{"location":"build/build-free-loop/#end-of-free-account-steps","title":"End of Free Account Steps","text":"<p>Click on each of the three remaining targets shown in the red box below, and repeat the signing steps by choosing the same team name as you selected in the first target. The targets that must be signed prior to building are Loop, Loop Status Extension, Watch App, and WatchApp Extension for Loop 2.2.x, with the addition of Loop Intent Extension for Loop 3.</p> <p></p> <p>After signing the targets, click on the Loop icon under the <code>PROJECTS</code> heading. (Refer to the bright blue box in graphic above - click on that Loop icon.)</p> <ul> <li>If you skip this step, you may get an \"Entitlements\" Build Error for either Loop or WatchApp<ul> <li>Follow this procedure to fix the error: Entitlements Error</li> <li>Much easier to just click on Loop under <code>Projects</code></li> </ul> </li> </ul>"},{"location":"build/build-free-loop/#signing-complete","title":"Signing Complete","text":"<p>Now that you have signed your app, return to the Build Loop page at Start Build.</p>"},{"location":"build/cgm/","title":"Compatible CGM","text":""},{"location":"build/cgm/#compatible-cgm","title":"Compatible CGM","text":"<p>Time Estimate</p> <ul> <li>10 minutes to read this page</li> </ul> <p>Summary</p> <p>The Loop app is compatible with:</p> <ul> <li>Dexcom G4 Share, G5, G6 or ONE CGM systems<ul> <li>Dexcom ONE (based off G6 sensor) is available in some countries, but will be discontinued soon</li> </ul> </li> <li>Dexcom G7<ul> <li>Dexcom ONE+ (based off G7 sensor) is available in some countries</li> <li>At the current time, the Dexcom ONE+ cannot be used with Loop but pay attention to social media - an early indication is that a simple patch will allow this to work, but that patch is not available - more testing is needed</li> </ul> </li> <li>Medtronic sensors connected to a Loop-compatible Medtronic pumps</li> <li>Some Libre sensors: dev branch only</li> </ul> <p>FAQs</p> <ul> <li>\"What about Libre sensors?\"<ol> <li>Libre support is available in the Loop-dev branch - be sure to read information at that link about running the dev branch</li> </ol> </li> <li>\"What about Eversense?\" Refer to CGMs Not Supported in the Loop App</li> </ul>"},{"location":"build/cgm/#continuous-glucose-monitor-cgm","title":"Continuous Glucose Monitor (CGM)","text":"<p>The Loop app uses your CGM glucose readings, carbohydrate input and therapy settings, to model your current glucose trend, predict future glucose and automatically adjust insulin dosing. A compatible CGM is essential to operation of the Loop app.</p>"},{"location":"build/cgm/#dexcom-g5-g6-and-one-cgm","title":"Dexcom G5, G6 and ONE CGM","text":"<p>The Dexcom G5, G6 and ONE CGM transmits data directly to the Dexcom app on your iPhone via Bluetooth.</p> <p>The Dexcom ONE, available in some countries, acts just like the G6 as far as the Loop app is concerned. The Dexcom ONE app does not provide some features, such as Dexcom Share, that come with the G6. When you set up the Loop app, select Dexcom G6 as your CGM to use Dexcom ONE CGM with the Dexcom ONE app installed on your phone.</p> <p>Dexcom ONE+ is not yet compatible</p> <p>There are reports that Dexcom is transitioning to the ONE+ based off the G7 platform. These devices cannot be used with the Loop app at this time.</p> <p>Pay attention to social media - an early indication is that a simple patch will allow this to work, but that patch is not available - more testing is needed.</p> <p>Only available in some countries. This link is for Poland Dexcom ONE+</p> <p>If the Dexcom app is on the same device as the Loop app, your system can function without an internet connection. See Offline Use below.</p> <p>Dexcom G5 Support</p> <p>Dexcom has stopped supporting the G5 system in the US. In the US, and some other countries, the G5 is not available for download from the Apple Store. There are countries in which Dexcom does supply and support G5. The G5 capability will continue to be supported in Loop.</p> <p>There are third party apps, which interface with G4 and G5 transmitters, supported by some forks of Loop. The version of the Loop app supported by these documents only works with the Dexcom apps.</p>"},{"location":"build/cgm/#dexcom-g7-cgm","title":"Dexcom G7 CGM","text":"<p>Dexcom G7 is supported with version 3 or greater of the Loop app.</p>"},{"location":"build/cgm/#medtronic-cgm","title":"Medtronic CGM","text":"<p>The Minimed Enlite CGM, available with the Medtronic 522/722, 523/723, and 554/754, wirelessly sends glucose readings to the pump. The Loop app can read the Medtronic CGM data directly from the pump using a RileyLink compatible device.</p>"},{"location":"build/cgm/#offline-use","title":"Offline Use","text":"<p>\"Offline Use\" means using the Loop app when there is no cell data or internet available. The Loop app does not require any special setup to operate offline.</p> <p>For offline use, the iPhone's Bluetooth still needs to be active; and for Dexcom users, the G5, G6 or G7 app also needs to be running on the same phone as the Loop app. If you put your iPhone into Airplane mode, remember to turn Bluetooth back on to keep both the CGM and the Loop app running. If your offline use is failing, chances are you have forgotten to update your transmitter ID in the Loop app settings when you changed transmitters.</p>"},{"location":"build/cgm/#dexcom-share","title":"Dexcom Share","text":"<p>The Loop app can download Dexcom Share data for use in modeling glucose. However, this is not a typical configuration and requires internet connection for both the phone with the Dexcom app and the phone with the Loop app.  The steps for adding a CGM explain that you usually enter the Dexcom transmitter ID and leave the Dexcom Share setting blank.</p> <p>Dexcom ONE</p> <p>The Dexcom ONE app does not support Share.</p>"},{"location":"build/cgm/#nightscout-as-a-remote-cgm","title":"Nightscout as a Remote CGM","text":"<p>Version 3 or later of the Loop app can use Nightscout as a remote source for CGM data. This requires cell or WiFi connection.</p>"},{"location":"build/cgm/#cgms-not-supported-in-the-loop-app","title":"CGMs Not Supported in  the Loop App","text":"<p>Libre Support (for some Libre sensors) is available with Loop-dev or by adding customizations.</p> <ul> <li>Loop dev adds LibreTransmitter</li> <li><code>Loop and Learn: Loop Customization</code> </li> </ul> <p>Currently, there are no solutions for Eversense, Guardian or Libre 3 CGM to be used directly with the Loop app, but some Uploaders to Nightscout are available using an Android phone. Version 3 or later of the Loop app allows the use of Nightscout as a CGM source.</p>"},{"location":"build/cgm/#next-step","title":"Next Step","text":"<p>If your compatible pump is Medtronic or Omnipod (not DASH)</p> <ul> <li>Next step is to Order a RileyLink Compatible Device</li> </ul> <p>If your compatible pump is Omnipod DASH</p> <ul> <li>Next step is to enroll in the Apple Developer Program.</li> </ul>"},{"location":"build/community/","title":"Meet the Community","text":""},{"location":"build/community/#meet-the-community","title":"Meet the Community","text":"<p>Time Estimate</p> <ul> <li>Read about your Social Media Options: 5 minutes</li> <li>Join one or more groups: 10 minutes</li> </ul> <p>Summary</p> <ul> <li>Learn how to use the search tools explained in How to Ask for Help</li> <li>Learn the motto \"Help us help you\".</li> <li>Learn what information helps in solving a problem in building or in using Loop</li> </ul> <p>FAQs</p> <ul> <li>\"I'm worried I'll ask a stupid question\" Don't worry. All the mentors started out as novices. Focus instead on asking a thorough question. A thorough question explains what you've already tried or read, has screenshots of what you are confused by, and any other details you can provide.</li> </ul>"},{"location":"build/community/#online-groups","title":"Online Groups","text":"<p>There's a wonderful community of Loopers who are willing to help you through the process. This link on Social Media Options walks you through those groups and how to join.</p> <p>Volunteers provide assistance on building and using the Loop app at these sites. None of the people are paid to answer questions or spend time troubleshooting. They simply want to help others. Please decrease their support burden by doing your homework and providing the information they need when requesting help. Please click the image below to watch this video full of tips to make the most of your online resources.</p> <p>Please watch this video (just under 7 minutes) to learn about using announcements and searches in Facebook groups and the LoopDocs pages.</p> <p>Note, the LoopDocs menus were reorganized after this video was prepared to make it easier to progress through the pages.   </p> <p></p>"},{"location":"build/community/#screenshots","title":"Screenshots","text":"<p>Please take screenshots of your issue and include them in your posts. On an Apple computer, press Shift+Cmd+4 keys at the same time and a little crosshairs tool will appear. Click-and-drag across the area you'd like to include in the screenshot. When you let go of the button, the screenshot will be saved to your desktop with a file name starting with the name <code>Screen Shot</code>. To capture an entire window, press Shift+Cmd+4 keys at the same time followed by pressing Space (the  space bar) and then click on the window of interest.</p> <p>Use screenshots instead of cell phone images whenever possible. Screenshots are higher resolution and easier to read.</p> <p>Take a wide screenshot (full window capture) when asking for help with settings or Xcode build errors. Nightscout and Xcode have lots of valuable information off-to-the-side that can be valuable for troubleshooters.</p>"},{"location":"build/community/#descriptive-language","title":"Descriptive Language","text":"<p>Use descriptive language - the most accurate, detailed words possible - when asking for help. Try to avoid the word \"it\" and instead use details and information to explain why you're asking for help, what you've already tried, and what happened when you tried those things (including screenshots). Let's illustrate with a couple of examples.</p>"},{"location":"build/community/#example-1","title":"Example 1","text":"<p>The Loop app no longer allows you to enter your correction range in the wrong order, i.e., 110 to 90; but it once did and the Loop app would stop working. We're using that problem as an example below.</p> <p>Bad: \"<code>It's not working.</code>\" &lt;----makes me wonder what \"it\" is? What part of \"it\" isn't working exactly? The app? The glucose control? The pump integration? Alarms? Bolusing? CGM</p> <p>Ok: \"<code>My Loop app won't open.</code>\" &lt;---- Ok, so now I know the Loop app itself seems to be the problem, but still don't know if this is a build error or an error that has happened after building. The solutions might be different.</p> <p>Better: \"<code>My Loop app was working yesterday just fine, and now today it's not doing the things like I expect.</code>\" &lt;----- Getting closer. Now, I know this is not a build error and that it sounds like a more recent issue. I'm starting to narrow down the potential causes. This is about as much detail as it takes for me, as a volunteer, to consider helping. I might not have to ask 42 questions, but instead only 4 questions to find the remaining information for troubleshooting. If there were more details, it would save time.</p> <p>Awesome: \"<code>My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments and ever since it just turns white and closes no matter what I try.</code>\" &lt;---- DEFINITELY getting closer. Now I have a strong suspicion about where the bug is happening and can help with a couple links.</p> <p>GOLD MEDAL WORTHY: \"<code>My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments to correction ranges. Ever since I did that, the app immediately turns white and shuts down. I have tried restarting my phone, but it has not fixed the problem. I tried searching the docs for 'loop closing' but didn't see results that matched my issue.</code>\" &lt;----- This person is doing an outstanding job of describing the problem. Lots of good details. Has shown initiative to try to use the resources already. This person did an excellent job of helping all of us help them.</p>"},{"location":"build/community/#example-2","title":"Example 2","text":"<p>This example is not quite as old, but does refer to details from older Loop and iOS versions. It exemplifies the details needed to assist someone with a build error.</p> <p>Build with Browser</p> <p>If you are using the Build with Browser method, we still need descriptive details but we do not need screenshots. All that is required is to list your GitHub user name. The volunteers can then read your publicly available log files. (All private information is automatically redacted in those logs.)</p> <p>Bad: \"<code>My Loop app won't build.</code>\" &lt;----- What step are you on? What is the iOS on your phone? What kind of computer are you using? What macOS? What Xcode version? Have you built successfully before or is this new?</p> <p>Ok: \"<code>I'm trying to update my Loop app and am getting a few errors that I don't understand.</code>\" &lt;----- Wow, sure would be nice to know what those error messages are. Are they red or yellow? A screenshot sure would help here.</p> <p>Awesome: \"<code>I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code that I don't understand. I've tried everything in the docs and nothing worked.</code>\" &lt;---- While I'm super happy they \"tried everything\", I'm no closer to knowing what the exact error message is nor which \"stuff\" exactly they tried. But all the version numbers are included.</p> <p>GOLD MEDAL WORTHY: \"<code>I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code 645 that I don't understand. Here's the screenshot of the error message. I tried searching the docs for \"exit code 645\" and didn't see any responses that helped.</code>\" &lt;---- This is the kind of detail that will get you to an answer very fast.</p>"},{"location":"build/community/#be-ok-with-links","title":"Be OK with Links","text":"<p>Often, the best answer to your question is sending a link to the answer in LoopDocs or LoopTips.  This provides you a quick, accurate and complete answer. We understand that there is so much information in these sites that it can be hard to find answers.  Mentors know the docs well, are experts at using the search tools and will send direct links to the sections that best answer your question.</p> <p>If you've searched the docs and read relevant info already, please include that in your post or your reply. That way you don't get linked back to the part you are confused about. And if you have already read the specific section a mentor just linked, be specific about why your problem is not addressed by that link.  Or just say \"I'm confused when the doc says this\". Letting us know when these docs can be improved is very useful.</p>"},{"location":"build/community/#next-step","title":"Next Step","text":"<p>Now you are ready to build or continue with setting up the Loop app.</p>"},{"location":"build/community/#return-to-set-up","title":"Return to Set Up","text":"<p>If you are a new looper who got to these pages from the Set Up app page - congratulations. Now that you've reviewed these introductory pages, please continue with the Brand New Loopers section of the Set Up Overview page.</p>"},{"location":"build/community/#build-with-browser","title":"Build with Browser","text":"<p>Click here if you want to Build with Browser.</p>"},{"location":"build/community/#build-with-mac","title":"Build with Mac:","text":"<p>Click here if you want to Build with Mac.</p>"},{"location":"build/computer/","title":"Compatible Computer","text":""},{"location":"build/computer/#compatible-computer","title":"Compatible Computer","text":"<p>Time Estimate</p> <p>If you are building with a Mac and Xcode:</p> <ul> <li>5 minutes, if you have a Mac with Ventura (macOS 13.5) or higher (Sonoma)</li> <li>30-60 minutes, if you need to install macOS updates</li> </ul> <p>Hint: OS stands for Operating System</p> <p>Build with Browser</p> <p>If you do not have a Mac, you can build\u00a0Loop 3\u00a0with any computer using a browser. If you want to use that method, review this list and head over to Build with Browser.</p> <ul> <li>You need a paid ($99/year)\u00a0Apple Developer Account</li> <li>You need an account (free) with\u00a0GitHub</li> <li>You need a compatible phone to install the app from TestFlight</li> <li>You need a compatible Pump and CGM if you want to actually use the app (and not just explore the app)</li> </ul> <p>Summary</p> <p>Your computer, iPhone and Xcode must have compatible versions to build the Loop app using a Mac.</p> <ul> <li>A summary list of Compatible Versions is found on this page with more detail in a later page</li> </ul> <p>If you are buying a Mac specifically to use the build with Mac method, chose one with capabably of being updated to the Sonoma (macOS 14) operating system and at least 256 GB (512 GB is better). The Build with Browser method works on any computer or tablet.</p> <p>FAQs</p> <ul> <li>\"Do I need a Mac or Virtual Machine?.\" Not any more! You can build Loop 3 with any browser on any computer.</li> <li>\"I want to use the build with Mac method. Can I use a PC or Windows computer? I don't own an Apple computer.\" Yes, you can but only if your PC uses Intel chips. Please read this FAQ about using a Virtual Machine.</li> <li>\"How often do I need to use the computer if I choose the build with Mac method?\" Computer access is required when<ul> <li>Initially installing the Loop app</li> <li>Loop app expires (Annually for a paid account or weekly for a free account)</li> <li>Updating to a newer Loop release</li> <li>You do NOT need access to an Apple computer to update your phone iOS, troubleshoot or change Loop settings</li> </ul> </li> </ul> <p>If you have access to a computer with MacOS 13.5 or newer, you can skip ahead to Check Space Available.</p>"},{"location":"build/computer/#compatible-versions","title":"Compatible Versions","text":"<p>The current development version and the next release of\u00a0Loop\u00a0will require Xcode version 15 regardless of the iOS on the phone. This requires macOS 13.5 or higher. As an alternative, use Build with Browser, which supports iOS 15, 16, and 17.</p> <p>When this page was last updated, macOS 14.0 and Xcode 15.0 were tested to successfully build the app for phones with iOS 15 through iOS 17.0.2.</p> <p>The table below lists the minimum requirements to build the current release of\u00a0Loop 3.2.3. If your macOS or Xcode version is higher, you can build with Mac.</p> <p>Find your phone iOS in the table below. If your iOS is not listed, e.g., 16.6, choose the first row that is less than your iOS.</p> iOS Version minimum Xcode minimum macOS 17.0 15.0 13.5 16.4 14.3 13.0 16.2 14.2 12.5 15.1 14.1 12.5 <p>iOS Dictates Your Computer Needs</p> <p>The more up-to-date you keep your phone iOS, the more up-to-date your computer and macOS needs to be to build the Loop app with the Mac build method. A new build is required at least once a year. More information on iOS is on the Xcode Version page.</p> <p>There are important security updates that go along with iOS updates. Please install those iOS updates as soon as you can.</p> <p>Do not use any of the beta macOS versions. (If you don't know what that means, you aren't using one.)</p>"},{"location":"build/computer/#check-your-macos-version","title":"Check Your macOS Version","text":"<p>To find your macOS version, click on the Apple icon in the computer's upper left corner and select <code>About this Mac</code>. The graphic below highlights the macOS version with a red rectangle. Your computer can be a MacBook, iMac, macMini, etc. It will work to build Loop if it has the minimum required macOS version and enough storage.</p> <p>With the Ventura macOS version, the <code>About this Mac</code> display changed. For Ventura, when you tap on the <code>More Info</code> icon, it opens the General -&gt; About screen from the System Settings menu. This is very similar to the phone Settings -&gt; General -&gt; About screen.</p> <p>Sonoma, macOS 14.0, is expected to be released 26 September 2023.</p> <p></p> <p>If you do not have the required minimum macOS version</p> <ul> <li>For macOS 12.6.1 or earlier, check the <code>Software Update</code> button on the screen shown above</li> <li>For macOS 13.0 or later, click on the Apple and choose <code>System Settings</code><ul> <li>Select <code>General</code> and <code>Software Update</code>, just like you would on the phone interface</li> </ul> </li> </ul> <p>Apple says upgrading to macOS Ventura requires 26 GB of available storage.</p>"},{"location":"build/computer/#check-the-space-available","title":"Check the Space Available","text":"<p>You need to have 50 GB free space in order to install Xcode as directed on the Xcode Version page. At the top of the menu on the graphic above, click on the Storage Tab highlighted with a red rectangle, or, if running Ventura, tap on More Info to open the About screen (under System Settings-&gt;General), which includes storage at the bottom of the display.</p> <p>To free up space, move things like photos to an external drive. The Xcode application cannot be run from an external drive.</p> <p>If you are evaluating a used computer, it's best to have at least 256 GB total disk space (more is better).</p>"},{"location":"build/computer/#which-macs-are-compatible-with-macos-ventura","title":"Which Macs Are Compatible with macOS Ventura?","text":"<p>Ventura is required for building the Loop app on a phone running iOS 16.4 or higher with the Mac method. You can install Ventura on the following:</p> <ul> <li>MacBook Pro introduced in 2017 or later</li> <li>MacBook Air introduced in 2018 or later</li> <li>MacBook introduced in 2017 or later</li> <li>Mac mini introduced in 2018 or later</li> <li>iMac introduced in late 2017 or later</li> <li>iMac Pro</li> <li>Mac Studio</li> <li>Mac Pro introduced in 2019 or later</li> <li>get the full list from Apple for Ventura</li> </ul>"},{"location":"build/computer/#older-macs","title":"Older Macs","text":"<p>Look into building with GitHub Actions - no need to worry about versions for Mac OS or Xcode - all done for you on GitHub (some configuration required). Works with any computer (PC or Mac or Tablet).</p>"},{"location":"build/computer/#next-step","title":"Next Step:","text":"<p>If you already have an Apple Developer ID or you are using a free ID, next step is Xcode Version.</p> <p>Free ID</p> <p>The free ID method only works when using the build with Mac method. The Build with Browser method requires a paid developer ID ($99/year) but does not require a Mac computer.</p>"},{"location":"build/custom-mac/","title":"Customize using Mac","text":""},{"location":"build/custom-mac/#overview","title":"Overview","text":"<p>This page is only relevant when building with a Mac.</p> <p>For Building with a Browser, please see: Customize using Browser</p> <p>For new Loopers, please build the code before you make any changes. Start with Open Loop and familiarize yourself with the interface. Later, you can make the customization(s) you desire and build again. The second build will be much easier than your first build.</p> <p>These customizations require you to modify the code used to build the Loop app and then build the app again with the modified code.</p> <p>You take responsibility</p> <p>You are responsible when you decide to use customizations.</p> <p>Be sure to report what changes you made if you need to ask for assistance with your app.</p>"},{"location":"build/custom-mac/#customizations-prepared-for-you","title":"Customizations Prepared for You","text":"<p>Some customizations are the same for everyone and have been prepared for easy use.</p> <p>The Loop and Learn team is committed to maintaining these prepared customizations and provides an easy method to add your selection from these customizations to your version of Loop.</p> <p>Please read the documentation for these on the Loop and Learn: Customization Select Page:</p> <ul> <li>List of Customizations Available</li> <li>Customization Select Script</li> </ul>"},{"location":"build/custom-mac/#add-libre-support-to-323","title":"Add Libre Support to 3.2.3","text":"<p>If you are using <code>main</code> branch to build <code>Loop 3.2.3</code> and rely on either xDrip4iOS or GlucoseDirect to read your CGM and transfer the readings to the Loop app, you need to review this section of the Loop and Learn customization page.</p> <p>Alternatively, you can switch to the <code>dev</code> branch, which already supports Libre. Build Loop dev with Mac</p>"},{"location":"build/custom-mac/#personal-customizations","title":"Personal Customizations","text":"<p>Some customizations must be created for yourself. These are of two basic types: Custom Edits and Build-Time Flag.</p> <p>The information needed to modify the code to make these customizations is found in the Versions tab because the information is independent of build method (think of these as your personal versions). The links are found below.</p> <ul> <li>Version: Custom Edits<ul> <li>The page linked above indicates how you can modify behavior by editing the code</li> </ul> </li> <li>Version: Build-Time Flag<ul> <li>By enabling or disabling features controlled by a Build-Time Flag, you are turning on or off features included in the code by the developers that they configured to be off or on by default</li> <li>Please read about these flags on the page linked above</li> </ul> </li> </ul> <p>When preparing these personal edits using a Mac, there is a page explaining how to open Xcode to the correct folder (where code is stored on your Mac) and incorporate those changes into your personal copy of <code>LoopWorkspace</code> on your Mac before building.</p> <ul> <li>Custom Edits with Mac</li> </ul>"},{"location":"build/custom-mac/#details-at-links","title":"Details at Links","text":"<p>The code changes required for these customizations are the same regardless of the build method. The pages that provide the documentation on modifying and incorporating these changes are found at the links above.</p>"},{"location":"build/edit-mac/","title":"Custom Edits with Mac","text":""},{"location":"build/edit-mac/#overview","title":"Overview","text":"<p>When applying a customization using Mac, the downloaded code should be fairly recent. If you are not sure, get a fresh download. If you know your downloaded code is the Current Release, you can skip the download and use the same folder as last time.</p>"},{"location":"build/edit-mac/#find-my-downloaded-loop-code","title":"Find My Downloaded Loop Code","text":"<p>Refer to the graphic below.  The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom.</p> <p>Loop to LoopWorkspace</p> <p>Note that the directory <code>Loop.xcworkspace</code> has been renamed to <code>LoopWorkspace.xcworkspace</code> in the released code. For experienced builders - you realize this is good because the build process is easier.</p> <p>The words were updated, but it will take time for the graphics to be updated.</p> <ul> <li>Open Finder</li> <li>Navigate to Downloads/BuildLoop and look for your download by name and date</li> <li>Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145, and inside that folder open the LoopWorkspace folder</li> <li>Inside the Downloads/BuildLoop/Loop-220803-1145/LoopWorkspace folder, double-click on LoopWorkspace.xcworkspace (graphic not updated yet)</li> <li>Xcode automatically opens to that particular download</li> <li>You can then make the customizations and build to your phone</li> </ul> <p></p> <p>Experienced Builders</p> <p>Experienced builders will often build a fresh download to a simulator for their phone iOS (not their phone) to ensure download is good and is compatible with macOS, Xcode and phone iOS. Once the build is successful, they apply their customizations and build again to the simulator. Last step is to build the customized version to their real phone.</p>"},{"location":"build/edit-mac/#instructions-for-finding-the-lines","title":"Instructions for Finding the Lines","text":"<p>For each customization, you are given landmarks to find the correct location in the code when you review Version: Custom Edits. You can choose to search using the <code>Key_Phrase</code> or navigate to the file in the folder structure and look for ( Cmd+L # ) the line number. </p> <ul> <li>Either Key_Phrase or Module, Folder, File  can be used to find the lines</li> <li>Be sure to save the file when you make a change - otherwise the modification does not get built into your app</li> <li>Some folder icons show different names in Xcode, see Folders and Icons</li> </ul>"},{"location":"build/edit-mac/#key_phrase","title":"Key_Phrase","text":"Example of a Key_Phrase<pre><code>use the copy button at right, paste into search\nThe copy button for this exampe is just for practice\nDo not paste the result anywhere\n</code></pre> <p>To search using the <code>Key_Phrase</code> (see graphic below for clarification):</p> <ul> <li>A copy button is available when you hover your mouse in the right-hand side of the block below the title <code>Key_Phrase</code>;  click on it to copy the phrase</li> <li>In Xcode, tap the Find menu item and select <code>Find in Workspace</code></li> <li>Paste the text into the Find search-box that opens on upper left of Xcode screen and hit enter<ul> <li>If you don't see the phrase in the box, hit backspace - your system copied an extra return</li> </ul> </li> <li>You should see a message <code>1 result in 1 file</code> (for most cases)<ul> <li>Some customizations will show more than one result, but that will be explained in the directions for that customization</li> </ul> </li> <li>The file in which the line is located is reported showing the line in that file containing the <code>Key_Phrase</code></li> <li>Click on the one you think is correct and it will display in the main middle window of Xcode with the Keyword highlighted on the line you selected<ul> <li>The <code>Key_Phrase</code> was selected to limit the search to just the relevant line (if possible)</li> <li>In some cases, the <code>Key_Phrase</code> gets you close but not exactly on the line where you need to make the modifications - please read carefully</li> </ul> </li> </ul> <p></p>"},{"location":"build/edit-mac/#module-folder-file","title":"Module, Folder, File","text":"<p>Each customization will also show Module, Folder and File bullet below the key phrase.</p> <ul> <li>Module: Loop</li> <li>Folder: Loop/subfolder1/subfolder2/etc.</li> <li>File: filename.swift, line number(s)</li> </ul>"},{"location":"build/edit-mac/#open-a-terminal-in-loopworkspace-folder","title":"Open a Terminal in LoopWorkspace Folder","text":"<p>If you use the Loop and Learn: Customization Select Script, it automatically locates your most recent download, makes the customization you select in that download and then opens Xcode for you.</p> <p>But sometimes, you need to find your downloaded code and make your own changes in Xcode. This section tells you how to do this.</p> <p>Refer to the graphic below.  The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom. Double clicking on that file opens Xcode; but to apply customizations, you need to type commands in the terminal.</p> <ul> <li>Open Finder</li> <li>Navigate to Downloads/BuildLoop and look for your download by name and date</li> <li>Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145</li> <li>Find the LoopWorkspace folder icon (dashed-blue rectangle)</li> <li>Hold down the CTRL key and click (or right-click) LoopWorkspace</li> <li>A menu appears - select <code>New Terminal at Folder</code> (near the bottom of the list)</li> </ul> <p>This new terminal window is ready to accept commands as needed when the instructions say to start a terminal in the LoopWorkspace folder.</p> <p>To confirm you are in the correct location, type <code>pwd</code> and return in the terminal. The response must end in LoopWorkspace. For example, using the graphic below, the response to <code>pwd</code> should be similar to:</p> <p><code>/Users/marion/Downloads/BuildLoop/Loop-20220803-1145/LoopWorkspace</code></p> <p></p>"},{"location":"build/edit-mac/#folders-and-icons","title":"Folders and Icons","text":"<p>The folders listed in the code customization steps are the actual directory names as stored on your computer.  However, a shortened name is used for some folders when being displayed as icons in Xcode. Some people prefer to search through the folder icons to find a file instead of using the <code>Find in Workspace</code> feature.</p> <p>In the graphic below, the user searched for an item found for both Eros and DASH pods (in two different files).  The top part of the graphic shows the result of the search with user clicking on one instance.  On the right side of the top graphic (highlighted by red rectangle) is the name of the selected file on the computer with the full directory name.</p> <ul> <li>Inset 1: User clicked on the folder icon (highlighted by red square) to see the list of icons for folders included in the LoopWorkspace</li> <li>Inset 2: User opens folders under RileyLink icon to open OmniKit, then OmnipodCommon to find the Pod.swift file (NOTE - the Eros information is in a different Module now, OmniKit, but the graphic has not been updated.)</li> </ul> <p></p> <p>These folder icon names are different from the directory names on the computer:</p> Folder Icon Name Directory Name ShareClient dexcom-share-client-swift RileyLink rileylink_ios Amplitude Amplitude-iOS <p>All other icons and directory names match.</p>"},{"location":"build/edit-mac/#modify-and-save","title":"Modify and Save","text":"<ul> <li>Either <code>Key_Phrase</code> or <code>Module, Folder, File</code> method described on Version: Custom Edits can be used to find the lines inside Xcode on your Mac</li> <li>Be sure to save the file when you make a change - otherwise the modification does not get built into your app</li> <li>Some folder icons show different names in Xcode, see Folders and Icons</li> <li>When done with all the desired edits, plug in your phone and select it<ul> <li>Click on the \"Play\" button to build your customized code</li> </ul> </li> </ul>"},{"location":"build/health/","title":"Loop 2 Health Permissions","text":""},{"location":"build/health/#health-data","title":"Health Data","text":"<p>The Loop app uses the Health app to record blood glucose, insulin, and carbohydrate data. The blood glucose, insulin, and carbohydrate data stored in the Health app can also be accessed and uploaded by the Tidepool Mobile app which enables the display of your data on the Tidepool web-based display tool. Please review the settings below to ensure you have the proper settings.</p>"},{"location":"build/health/#loop-permissions","title":"Loop Permissions","text":"<p>You need to set up Loop's permissions to read and write some data in the Health app. When you finish building your first Loop app, the Health app screen for Loop permissions automatically appears. (People who have been looping a while should be aware that the permissions are slightly different now.) Do not enable permission for Loop to read carbohydrates from the Apple Health app.</p> <p>You can also get to this screen (for iOS 15) by iPhone -&gt; Settings -&gt; Health (heart icon) -&gt; Data Access &amp; Devices -&gt; Loop.</p> <p>New Instructions</p> <p>Loop does not need to read carbohydrates from the Health app.</p> <p>The old instructions suggested turning on all switches.  This is NOT necessary for carbohydrates and can be dangerous if</p> <ol> <li>A different app writes carbohydrates to the Health app</li> <li>If two Loopers use the same Apple ID - PLEASE - do not do this; Loopers need their own Apple ID</li> </ol> <p></p> <p>Blood Glucose: Permission to Write and Read</p> <ul> <li>Loop eavesdrops on the Bluetooth communication of the Dexcom G4/G5/G6 CGM and writes the values to the Health app for the first 3 hours</li> <li>After 3 hours, the Dexcom CGM app allows other apps (including the Health app) access to its CGM data, so Loop needs to read the older Blood Glucose from the Health app</li> <li>During times when there is no CGM data, the user can enter a finger stick value into the Health app Blood Glucose (BG) screen and Loop will read it, e.g., during sensor warmup</li> </ul> <p>Carbohydrates: Permission to Write ONLY</p> <ul> <li>Loop has its own carbohydrate data store and does not need to read carbs from the Health app</li> <li>Once Loop records a carbohydrate entry, it will start to dose insulin to accommodate the expected rise in blood glucose from the carbohydrates consumed</li> <li>If any other app writes carbohydrates to the Health app, you do not want Loop to add them to what you've already entered into the Loop app (resulting in duplicate entries)</li> </ul> <p>Insulin Delivery: Permission to Write and Read</p> <ul> <li>Loop writes basal and bolus doses to the Health app</li> <li>Loop reads any manual insulin added to the Health app, e.g., insulin taken by injection</li> </ul> <p>Sleep: Permission to Read</p> <ul> <li>Loop uses Sleep information to decide which times of day to use the limited daily allocation from Apple for updates to the Loop watch complication.</li> </ul>"},{"location":"build/health/#dexcom-permissions","title":"Dexcom Permissions","text":"<p>You also need to enable your Dexcom Mobile app to write to the Health app. The steps shown in the figure below are valid for iOS 12.</p> <p>For iOS 13/14, the menu items are: iPhone -&gt; Settings -&gt; Health (heart icon) -&gt; Data Access &amp; Devices -&gt; Dexcom app. Make sure Dexcom has permission to write Blood Glucose (after the 3 hour delay).  If you do not do this, you will have a maximum history of 3 hours displayed in the Loop Glucose screen.</p> <p></p>"},{"location":"build/loop-data/","title":"Loop Data","text":""},{"location":"build/loop-data/#make-plans-for-your-loop-data","title":"Make Plans for your <code>Loop Data</code>","text":"<p>Time Estimate</p> <ul> <li>Apple Health: 0 minutes, already a part of your system</li> <li>Tidepool: 30 minutes to set up an account and then choose how to upload from the Loop app to Tidepool<ul> <li>option: add Tidepool Mobile to your phone and upload via Apple Health data</li> <li>option: add upload to Tidepool as a Service in the Loop app<ul> <li>You can still use the Mobile app to take notes; but you must disable the Mobile app permission to read Health data - otherwise you get data uploaded twice</li> </ul> </li> </ul> </li> <li>Nightscout:<ul> <li>1-2 hours to build it yourself if you've never done it before</li> <li>1 hour to choose and sign up for a service if you want to pay someone</li> </ul> </li> </ul> <p>Summary</p> <ul> <li>Review the three major systems that can store and show your Loop data.</li> <li>Set up either Tidepool or Nightscout prior to your next endo appointment to provide Looping data to review.</li> </ul> <p>FAQs</p> <ul> <li>Do I have to set one of these up? Apple Health is already built into your iPhone and used by Loop, so there's no setup involved.</li> <li>Do I need all three? No, you can choose what suits you best. You can add a data system later.</li> <li>Why do I need any of these? With the Loop app, your PDM (Omnipod) is not used or your pump (Medtronic) does not have sufficient memory for all the commands. Your endo will have nothing to download at your next visit. You need to provide them with the information.</li> <li>Is it worth the time to setup Nightscout? I feel like I'm already doing so much outside my comfort zone. Yes. Loopers find it is definitely worth the time investment.  Nightscout provides essential data for evaluating settings and useful alarms and alerts.  Some Facebook help sites require Nightscout data to diagnose and suggest steps to address problems. There are fee-based services that will set up Nightscout for you, if you don't want to build it yourself.</li> </ul>"},{"location":"build/loop-data/#data-options","title":"Data Options","text":"<p>Take some time to familiarize yourself with these data options and choose your preferred system(s). Many Loopers use all three for various aspects.</p> <ul> <li>Apple Health app<ul> <li>Great resource to view on the Loop phone</li> <li>Not so great for showing your endo</li> </ul> </li> <li>Tidepool<ul> <li>Some endo offices will use your Tidepool website when you provide them with an invitation</li> <li>Many users of the mobile app like the note-taking ability<ul> <li>The mobile app also uploads Apple HealthKit data to Tidepool when the \"Read from Apple Health\" option is selected</li> <li>If you are using the Loop app to upload to Tidepool, be sure to disable the \"Read from Apple Health\" option in the Mobile app</li> </ul> </li> <li>With Version 3.2 of the Loop app, you can upload directly as a Service within the Loop app<ul> <li>If you use the mobile Tidepool app on your phone for note-taking, be sure to disable the read from Apple Health option in the mobile Tidepool app settings to avoid duplicate uploads</li> <li>If you use the mobile Tidepool app on your phone for uploading only, then it is no longer needed when you upload directly to Tidepool as a Service within the Loop app</li> </ul> </li> </ul> </li> <li>Nightscout:<ul> <li>LoopDocs: Nightscout section of LoopDocs, has Loop-centric information about Nightscout</li> <li>LoopTips: Nightscout link to LoopTips page on Nightscout</li> <li>Nightscout: Documentation official Nightscout site with lots of information about building and using Nightscout</li> <li>Nightscout has a lot of useful alarms and alerts, provides a care portal and detailed reports</li> <li>For those who assist someone who is Looping, Nightscout enables the caregiver to provide remote commands to the Looper's phone<ul> <li><code>Loop 2</code> allows overrides to be enabled or disabled remotely</li> <li><code>Loop 3</code> allows remote commands for carbs, bolus, or overrides</li> <li>The Loop Caregiver app is under development but already has sufficient capabilities to be useful for caregivers to monitor and provide remote commands to their Looper's phone</li> </ul> </li> </ul> </li> </ul> <p>Nightscout options include free or nominal cost sites you build yourself or there are several Nightscout as a Service vendors who provide turn-key sites for a monthly fee. Links to the options are found in the Nightscout: Documentation.</p> <p>Nightscout provides a secure, real-time Dashboard with status of the Loop app visible to anyone with access codes and the internet. It is required for remote commanding.</p> <p>If you plan to use remote commanding with Nightscout, please read these links with additional information:</p> <ul> <li>Set Up Remote for Nightscout<ul> <li>Paid Providers and Remote Configuration</li> </ul> </li> </ul>"},{"location":"build/loop-data/#next-step-meet-the-community","title":"Next Step: Meet the Community","text":"<p>Now you are ready to Meet the Community.</p>"},{"location":"build/overview/","title":"Mac Overview","text":""},{"location":"build/overview/#build-with-mac-requirements","title":"Build with Mac Requirements","text":"<p>The complete requirements for building Loop with a Mac and Xcode are summarized below. The first list contains the common requirements that are the same regardless of build method. The second list contains the additional requirements for building with a Mac and Xcode.</p> <p>Each requirement in the list is linked to the LoopDocs pages with more information.</p>"},{"location":"build/overview/#common-requirements","title":"Common Requirements","text":"<ol> <li>Compatible iPhone</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device (not needed for Omnipod DASH)</li> <li>Apple Developer Membership (not needed if you rebuild weekly using the Mac method)</li> </ol>"},{"location":"build/overview/#build-with-mac-additional-requirements","title":"Build with Mac Additional Requirements","text":"<ol> <li>Compatible Computer</li> <li>Xcode (a free Apple application)</li> </ol> <p>If using a Mac to build to a Simulator to try things out, the only requirements are a computer and Xcode.</p>"},{"location":"build/overview/#getting-ready-to-build","title":"Getting Ready to Build","text":"<p>Review the Common Requirements pages, listed above.</p> <p>Then review the Build pages for the method you have chosen. Read the top three boxes on each page: icons for those boxes are displayed below for reference. On a desktop, you can use <code>n</code> for next and <code>p</code> for previous.</p> <p>Time Estimate</p> <p>Summary</p> <p>FAQs</p> <p>Next, read pages completely and skim Oh dear! Build errors?. Most of the mistakes you can make when building with Xcode and a Mac have already been made. The Build Errors page shows how to fix them.</p> <p>When you are ready to proceed, complete the tasks on each page.  You can do one a day, take a week per page or blaze through them quickly.  Just be sure to read carefully and if you are confused - reach out for help: How to Find Help.</p> <p>After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app.</p>"},{"location":"build/overview/#what-if-i-get-stuck","title":"What if I get stuck?","text":"<p>Try to:</p> <ul> <li>Scroll back in the directions and see if you missed a paragraph or step.</li> <li>Compare your screen's display with the graphics in the step. Is something different or does yours have an error message? If you have an error message, does it guide you to the problem and solution?</li> <li>If you are still stumped - reach out for help: How to Find Help.</li> </ul>"},{"location":"build/phone/","title":"Compatible iPhone","text":""},{"location":"build/phone/#overview","title":"Overview","text":"<p>Time Estimate</p> <ul> <li>5 minutes, to check your device and iOS</li> <li>20 minutes, if need to update your compatible device to a new iOS</li> <li>10 minutes, if you need to order a Compatible Device </li> <li>0 minutes, if you own an Android and will not use Apple products; check out AndroidAPS Documention</li> </ul> <p>Summary</p> <ul> <li>Check your iPhone against the Compatible Device list<ul> <li>For all devices, the newest iOS is strongly recommended</li> </ul> </li> <li>Make sure the phone has good battery life</li> <li>Turn off automatic updates</li> </ul> <p>FAQs</p> <ul> <li>\"Can I use an android?\" No. Check out AndroidAPS Documention.</li> <li>\"Can I use an iPad?\" No. Older iPads do not support Apple Health which is required for the Loop app. It may be possible with newer iPads and newer iOS, but this has not been tested.</li> <li>\"Does my iPhone need a cell plan?\" No. The Loop app works using communication on your phone with your CGM and your pump; no internet connection required. However, if access to Dexcom Follow or <code>Nightscout</code> monitoring of the Loop app is a priority, then a cell plan may be desired.</li> <li>What watches work with the Loop app? Only Apple watches work with the Loop app. With iOS 17, some of the older Apple watch series are no longer compatible. See: Watch Hardware and OS Requirements</li> </ul>"},{"location":"build/phone/#which-devices-are-compatible","title":"Which Devices Are Compatible?","text":"<p>The Loop app requires an Apple device and uses the Apple Health app to store and retrieve your blood glucose and insulin data and to store your carbohydrate records. Older iPads do not support Apple Health which is required for the Loop app. It may be possible with newer iPads and newer iOS, but this has not been tested.</p> <p>You need a minimum version of the mobile operating software, called the iOS, to be installed on your iPhone. The Loop app is compatible with iPhone devices with iOS 15.1 or newer. </p> <ul> <li>It is unusual for three different iOS to be supported</li> <li>The developers try to maintain support for the current and one-level earlier iOS<ul> <li>Be prepared for your iOS 15 device to no longer be supported in future releases</li> </ul> </li> </ul>"},{"location":"build/phone/#compatible-device","title":"Compatible Device","text":"<p>These devices are compatible.</p> <ul> <li>iPhone 15, all variants</li> <li>iPhone 14, all variants</li> <li>iPhone 13, all variants</li> <li>iPhone 12, all variants</li> <li>iPhone 11, all variants</li> <li>iPhone XR, XS, XS max </li> <li>iPhone SE (3rd generation or later model; 2022 first release)</li> <li>iPhone SE (2nd generation; 2020 first release)</li> </ul> <p>These devices are compatible (now), but are limited to iOS 16.</p> <ul> <li>iPhone X, without an extra letter</li> <li>iPhone 8, all variants</li> </ul> <p>These devices are compatible (now), but are limited to iOS 15.</p> <ul> <li>iPhone 7, all variants</li> <li>iPhone 6s or 6s Plus, note the <code>s</code></li> <li>iPhone SE (1st generation; 2016 first release)</li> <li>iPod Touch, 7th generation</li> </ul>"},{"location":"build/phone/#find-your-ios","title":"Find Your iOS","text":"<p>Your iOS version can be found under the phone Settings -&gt; General -&gt; About display as shown below. The iOS number is found on the <code>Software Version</code> line.</p> <p></p> <p>Do not use any of the beta iOS versions. (If you are uncertain what that means, then you are not using one.)</p>"},{"location":"build/phone/#developer-mode-mac-build-only","title":"Developer Mode - Mac Build Only","text":"<p>When you build the Loop app using Build with Browser, you are not required to enable Developer Mode on the phone or watch.</p> <p>With iOS 16 or newer and watchOS 9 or newer, Apple added a feature. If you want to know more, click on this Apple Link about Developer Mode.</p> <p>When you build the Loop app on your phone from Xcode directly and then transition to or start with iOS 16 or newer, you need to have Developer Mode enabled. This is also a requirement to use the Loop app on a watch paired to your phone running watchOS 9 or newer. You will be told to enable it in the Build the Loop App: Prepare your Phone and Watch instructions.</p> <p>Developer Mode with iOS 16 or newer, watchOS 9 or newer</p> <p>If you already have the Loop app built with Xcode on your phone/watch when you update to iOS 16 or newer/watchOS 9 or newer or newer, you will be told that the Loop app requires Developer Mode to run.</p> <p>You will not be able to run the Loop app on your phone (or watch) until you have enabled Developer Mode on the device(s).</p> <p></p>"},{"location":"build/phone/#battery-health","title":"Battery Health","text":"<p>Make sure the battery on your phone is solid. Your phone will become a critical health device - you want it to keep working.</p> <ul> <li>Make sure a charger and cord are in your diabetes supplies</li> <li>Consider buying a battery pack, keep it charged, and add it to your travel bag</li> </ul> <p>Low Power Mode</p> <p>With newer iOS, some people have reported the Loop app continues working in the background (phone locked) even in Low Power Mode. Others have reported they still get red loops. You can experiment to determine if your phone/iOS/app is able to maintain green loops in low-power mode. Otherwise, the best practice is to avoid Low Power Mode.</p>"},{"location":"build/phone/#use-automatic-time","title":"Use Automatic Time","text":"<p>Be sure to set the phone to automatic time. Do not try to defeat a game by modifying time on the same phone used to control your insulin.</p> <p>Please read: The Loop Phone Must be on Automatic Time.</p>"},{"location":"build/phone/#turn-off-automatic-updates","title":"Turn Off Automatic Updates","text":"<p>Apple provides updates regularly to the iOS.  Often, these updates include critical security patches in addition to improved new features.</p> <p>Please be proactive - install updates as soon as the all-clear is given for using the Loop app with that iOS update.</p> <p>If a limitation on your Mac prevents you from updating your phone to the latest iOS, consider using Build with Browser.</p>"},{"location":"build/phone/#why-turn-off-automatic-updates","title":"Why Turn off Automatic Updates?","text":"<ul> <li>Once you accept an iOS phone update, you cannot go backwards<ul> <li>Some iOS updates require updates to Xcode and macOS before people can build the Loop app on that device again</li> <li>It is rare, but iOS updates have caused the Loop app to stop working until other updates were made and the Loop app was rebuilt on that phone</li> </ul> </li> <li>Turn off automatic updates so you can choose when to update your phone and avoid being caught without your Loop app</li> <li>Google the instructions for your device:<ol> <li>Configure your phone to automatically download the updates</li> <li>Choose to install the updates manually</li> </ol> </li> </ul> <p>When iOS updates are released, the Loop and Learn Version Updates page is typically updated faster than LoopDocs. Check to see if a new update is causing an issue with the Loop app or your CGM before accepting the update from Apple.</p> <p>Within a few days, the \"All-Clear\" or (very rare) the \"WAIT there is a problem\" message will be posted.</p>"},{"location":"build/phone/#next-step-compatible-pump","title":"Next Step: Compatible Pump","text":"<p>Now you are ready to check if you have a Compatible Insulin Pump.</p>"},{"location":"build/pump/","title":"Compatible Pump","text":""},{"location":"build/pump/#compatible-pump","title":"Compatible Pump","text":"<p>Time Estimate</p> <ul> <li>Omnipod users: 3 seconds to remember which Personal Diabetes Manager (PDM) you've been using.</li> <li>Medtronic users: 10 minutes to put a battery in and look at model and firmware</li> <li>Other pump users: 5 days to email friends asking them to check closets for their old Medtronic pump or call your insurance to start prior authorization for Omnipod</li> </ul> <p>Summary</p> <ul> <li>If you have a Medtronic pump, check the Medtronic Pump Version list to ensure compatible model/firmware</li> <li>If you use Omnipod - check which kind</li> </ul> <p>FAQs</p> <ul> <li>\"How can I find a compatible Medtronic pump?\" Refer to Finding a Medtronic Pump.</li> <li>\"What are the differences between Medtronic pump models?\" This question is answered in the Extra Details section.</li> <li>\"But what about the other types of pumps?\" No other pumps work with the Loop app at this time.<ul> <li>There are other open-source closed loop options such as AAPS: Android Artificial Pancreas System and OpenAPS that support other pumps</li> </ul> </li> <li>\"Can I change the firmware of my Medtronic pump?\" No.</li> </ul>"},{"location":"build/pump/#pumps-compatible-with-loop","title":"Pumps Compatible with Loop","text":"<p>There are three types of pumps compatible with Loop.</p> <ul> <li>Older Medtronic pumps</li> <li>Omnipod Eros pumps</li> <li>Omnipod DASH pumps</li> </ul>"},{"location":"build/pump/#check-medtronic-pump-version","title":"Check Medtronic Pump Version","text":"<ul> <li>Medtronic 515 or 715 (any firmware)</li> <li>Medtronic 522 or 722 (any firmware)</li> <li>Medtronic 523 or 723 (firmware 2.4 or lower)</li> <li>Medtronic Worldwide Veo 554 or 754 (firmware 2.6A or lower)</li> <li>Medtronic Canadian/Australian Veo 554 or 754 (firmware 2.7A or lower)</li> </ul> <p>If you have one of the pumps listed above, you are good to go on Loop! Congrats!</p>"},{"location":"build/pump/#extra-details-on-medtronic","title":"Extra Details on Medtronic","text":"<p>There are a number of Medtronic insulin pumps manufactured between 2006 \u2013 2012 which are compatible with the Loop app.  Compatibility has two requirements: (1) pump model and (2) firmware.</p>"},{"location":"build/pump/#medtronic-pump-model","title":"Medtronic Pump Model","text":"<p>To determine your pump model, look at the back of your pump to locate the sticker similar to that shown in the graphic below.  On the right-hand side of the sticker, it says REF MMT-XXXXXX</p> <p></p> <ul> <li>MMT ---&gt; Pump Manufacturer Model (MiniMed Medtronic)</li> <li>722 ---&gt; Pump Model Number</li> <li>NA ---&gt; Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide)</li> <li>S ---&gt; Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple)</li> </ul> <p>Some pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-722LNAS.  This does not affect compatibility with the Loop app.</p>"},{"location":"build/pump/#medtronic-pump-firmware","title":"Medtronic Pump Firmware","text":"<p>A pump\u2019s firmware is the internal software that runs your pump.  Older Medtronic firmware allows the Loop app to act as a \u201cremote control\u201d to set temporary basal rates and report back pump data.  Newer firmware disabled that \u201cremote control\u201d access and therefore cannot be used with these DIY closed-loop systems.  There is currently no ability to downgrade a pump\u2019s firmware or replace it with older firmware.  Before you buy a used pump, make sure the pump firmware is compabible.</p> <p>The firmware on all 515/715 and 522/722 model Medtronic pumps is compatible with Loop. You will only need to check the firmware version for 523/723 and 554/754 model Medtronic pumps.</p> <ul> <li>Medtronic 515 or 715 --&gt; any firmware</li> <li>Medtronic 522 or 722  --&gt; any firmware</li> <li>Medtronic 523 or 723 --&gt; firmware 2.4 or lower</li> <li>Medtronic Worldwide Veo 554 or 754 --&gt; firmware 2.6A or lower</li> <li>Medtronic Canadian/Australian Veo 554 or 754 --&gt; firmware 2.7A or lower</li> </ul> <p>To find your pump\u2019s firmware you will need to power it on. If the pump has not been powered on for some time (i.e., has been in storage without a battery for a while), it will run through a start-up count and the firmware version will appear on the bottom right of the pump\u2019s screen.  Don\u2019t turn away, as the version number will only be displayed for a little while before the pump moves to other information displays.  </p> <p>If the pump has been active recently or has a reservoir installed, follow these steps:</p> <ol> <li> <p>Press the  button on your pump.  </p> </li> <li> <p>Scroll down with the  button to the bottom of the status display.  </p> </li> <li> <p>Read the bottom line of the display.</p> </li> </ol> <p></p>"},{"location":"build/pump/#medtronic-pump-differences","title":"Medtronic Pump Differences","text":"<p>If you are in the position of being able to choose from different pump models, there are some slight differences between the Loop-compatible Medtronic pumps that may influence your decision.</p> <p>500 vs 700:  The difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs.  The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want).</p> <p>x15/x22 vs x23/x54:  The noteworthy differences between the x15 and x22 pumps versus the x23 and x54 series pumps are:</p> <ul> <li>The x23/x54 pumps will allow for smaller insulin deliveries in certain situations, if the smaller scroll rate is selected in the Bolus&gt;Setup&gt;Scroll Rate menu.</li> </ul> Pump Model Basal increments Bolus increments Range 515/715and522/722 0.050.1 0.10.1 deliveries of less than 10 unitsgreater than 10 units 523/723and554/754 0.0250.050.1 0.025 0.05 0.1 between 0.025 to 0.975 unitsbetween 1 to 9.95 unitsgreater than 10 units <ul> <li> <p>Additionally, because of the way the Loop app fetches information from the pump, the x23/x54 series of pumps are slightly better at conserving battery life through the use of the MySentry packets to collect information from the pump.  x22 pumps do not use MySentry.</p> </li> <li> <p>The x23/x54 series pumps are also faster at delivering boluses greater than 10 units.  On an x23 pump, a 13-unit bolus takes 5:00 minutes to complete.  On an x22 pump, a 13-unit bolus takes 8:40 minutes to complete.</p> </li> </ul>"},{"location":"build/pump/#finding-a-medtronic-pump","title":"Finding a Medtronic Pump","text":"<p>Finding a compatible Medtronic pump is probably the most difficult part for most new Loopers.  Our suggestions:</p> <ul> <li> <p>Talk to friends in the diabetes community.</p> </li> <li> <p>Ask your endocrinologist.  </p> </li> <li> <p>Ask at a local JDRF chapter meeting if someone has an old backup pump they'd be willing to donate to you.  </p> </li> <li> <p>Join diabetes supply groups on Facebook; both for-trade and for-sale groups.  </p> </li> <li> <p>Check Craigslist often and be willing to expand your search area to include larger cities.</p> </li> <li> <p>Check out the HelpAround, NextDoor, OfferUp, and/or LetGo apps for pumps.</p> </li> <li> <p>Looping in a time of covid</p> </li> </ul> <p>The most success appears to come from either one-on-one discussions with people with diabetes, your doctors or using apps (Craigslist, NextDoor, LetGo, HelpAround).  If you are using Craigslist, you may wish to use an app on your iPhone to make the searching easier.  There are apps to search multiple cities at once for your keywords and set up alerts.</p> <p></p>"},{"location":"build/pump/#safe-purchasing","title":"Safe Purchasing","text":"<p>If you choose to purchase from a remote or unknown seller, here are some tips for safe purchasing:</p> <ul> <li> <p>Use PayPal and purchase using the \"Goods and Services\" payment option. This costs nothing for the buyer, but the seller will lose 2.95% of the sale to PayPal fees. PayPal offers some protection for both buyer and seller in the event of fraud.  </p> </li> <li> <p>Ask for photos of the pump. Check to make sure the serial number of the pump on the back matches the serial number of the pump showing in the display menu. Ask for a short video of the pump, or at least a photo of the pump turned on, so that you can see the pump's firmware and model number. Cracks and some wear on these pumps are expected. These pumps are not usually free of marks. Many people are successfully looping on pumps that have cracks and rub marks, but you may want to ask if you are concerned about any you see in photos.</p> </li> <li> <p>Beware if the bottom of the reservoir/motor sleeve has the drive support cap pushed out, as shown here. Those pumps will generally not work (or only work intermittently), however some people have successfully repaired those pumps as shown in that link. Just be aware that it should be checked in advance.</p> </li> <li> <p>Repairs to cracks or missing bits of plastic on battery cap area and reservoir caps are possible and not very difficult in most situations. You can read more about how to repair those here.</p> </li> <li> <p>Ask for shipping that includes a tracking number. USPS Priority Mail's smallest box is a great option.  It's only $7.20 domestically in the US and includes tracking. Ask the seller to add a small bit of packing protection such as bubble wrap around the pump to keep it safe during shipping. Make sure you get a tracking number within a reasonable period of time after you have paid.  </p> </li> </ul> <p>Red flags that may indicate a scam:</p> <ul> <li> <p>Asking for payment through \"friends and family\" on PayPal, especially if you don't know the person or have any solid references for them. Paying in that way offers you no buyer protection. It's just like giving the seller cash, so you had better trust the seller.  </p> </li> <li> <p>Offering an \"almost new\" pump is a big red flag in the US. Do you really think a more than 10-year old pump would be unused and sitting in shrink wrap at this point? This seems highly suspicious. There are some out there, but they are very rare.</p> </li> <li> <p>Inability to provide new pictures of the pump when requested. Sure they posted some pictures with the ad, but what if they just downloaded them from other people's ads? The seller should be able to furnish a couple of \"new\" photos at your request. A good one to ask for is the battery and reservoir tops so you can see their condition.</p> </li> </ul>"},{"location":"build/pump/#pump-supplies","title":"Pump Supplies","text":"<p>Medtronic will not typically sell pump supplies directly to customers who have not previously purchased a registered Medtronic pump. Ask your insurance about purchasing pump supplies through a durable medical equipment (DME) provider. Typically, the DME provider will coordinate with your insurance and doctor's office to get the necessary insurance approval and prescriptions for the supplies. If you are brand new to Medtronic infusion sites, you may want to ask for help from friends to try a variety of infusion sets before purchasing a full 90-day supply of any type in particular.</p>"},{"location":"build/pump/#omnipod-pumps","title":"Omnipod Pumps","text":"<p>Reminder and Disclaimer</p> <p>The use of Omnipod pumps with the Loop app is not supported by Insulet, although they are aware it is happening. Do not call Insulet asking for help with your Loop app build, setup, or operation. You are fully responsible for your use of the Loop app and do so at your own risk. Please read these documents and familiarize yourself with the Loop app before using it.</p>"},{"location":"build/pump/#omnipod-eros","title":"Omnipod Eros","text":"<p>Eros pods (also known as Gen 3) were launched in 2013 and continue to be sold by Insulet in some countries. Insulet stopped providing Eros pods in the US end of December 2023. As far as we know, there are no timelines announced for the discontinuation of Eros pods for other countries. Insulet doesn't specifically call these \"Eros\" anymore, they just use the term \"Omnipod system\". For clarity, from Insulet's webpage:</p> <p>Alternative Names for Omnipod Eros Pump and Pods</p> <p>Eros pump is also known as Classic, or UST400, or Omnipod Insulin Management System.  </p> <p>Pharmacy sites sometimes may refer to the Eros pods as Gen 3 but they are the same exact pods. </p> <p>Eros system has a big Personal Diabetes Manager (PDM) that does not look like a phone.</p> <p></p>"},{"location":"build/pump/#omnipod-dash","title":"Omnipod DASH","text":"<p>The DASH system has the newer, slimmer locked-android Personal Diabetes Manager (PDM) and built-in BLE communications in the pod, so there is no requirement for a RileyLink compatible device.</p> <p>A RileyLink-compatible device is not required to use DASH with the Loop app. The communication with your iPhone uses Bluetooth.</p> <p><code>Loop 3.0</code> and later works with DASH pods. If your version of the Loop app is 2.2.9 or earlier, you cannot use DASH pods.</p> <p></p>"},{"location":"build/pump/#omnipod-5","title":"Omnipod 5","text":"<p>Loop does not support Omnipod 5 pods.</p>"},{"location":"build/pump/#next-step-compatible-cgm","title":"Next Step: Compatible CGM","text":"<p>Now you are ready to check if you have a Compatible CGM.</p>"},{"location":"build/rileylink/","title":"RileyLink","text":""},{"location":"build/rileylink/#order-a-rileylink-compatible-device","title":"Order a RileyLink Compatible Device","text":"<p>Not needed for DASH</p> <p>Time Estimate</p> <ul> <li>15-20 minutes to read about RileyLink compatible devices</li> <li>15 minutes to order a device</li> </ul> <p>Summary</p> <ul> <li>Decide what kind of RileyLink compatible device to buy</li> <li>Order your compatible device</li> </ul> <p>FAQs</p> <ul> <li>What is a RileyLink Compatible Device? RileyLink refers to both the communication protocol and the name of the original device. Other DIY Loopers have created RileyLink Compatible Devices that use the RileyLink protocol. All these devices can be used interchangeably with the Loop app to support Eros and Medtronic use.</li> <li>Do I have to buy one? These are open-source hardware devices, but it takes special skills to build them yourself. It is recommended you buy one (or two) if you require it. At the current time, new OrangeLink and EmaLink devices are available for purchase. There are many used devices available in the community now that many users have switched to DASH. Not needed for DASH<ul> <li>Facebook Group where you may find used items: Looping in a time of covid</li> </ul> </li> <li>\"What happens if I lose my RileyLink compatible device or walk away from it?\" Within a half hour, your pump returns to the normal scheduled basal rate</li> <li>\"Can I swap out RileyLink compatible devices at any time?\" Yes, you can. You do not need to start a new pod or rebuild the Loop app. Tap on the pump menu in settings to search for new devices. You can swap between compatible devices.</li> <li>\"How close does the RileyLink compatible device need to be to me? Do I have to carry it with me?\" See RileyLink Compatible Device Range.</li> </ul>"},{"location":"build/rileylink/#what-is-a-rileylink-compatible-device","title":"What is a RileyLink Compatible Device","text":"<p>The RileyLink compatible device is required to allow your phone to talk to compatible Medtronic and Omnipod Eros pumps. It is not needed for Omnipod DASH pumps.</p> <p>Details for RileyLink</p> <p>The RileyLink compatible device is an open-source hardware device that can bridge Bluetooth Low Energy (BLE) to the radio-frequency wireless communication used by compatible Medtronic and Omnipod Eros pumps.</p> <p>Loop 3 has Omnipod DASH support, among other new features. When using Omnipod DASH, the RileyLink compatible device is not necessary.  If you are using Medtronic or Omnipod Eros (not DASH), you still need the device regardless of which version of Loop you are running.</p> <p>Medtronic and Omnipod Eros pumps require a RileyLink compatible device.</p> <p></p>"},{"location":"build/rileylink/#rileylink-compatible-devices","title":"RileyLink Compatible Devices","text":"<p>The RileyLink protocol defines a specific Bluetooth interface and way of opening a Sub-GHz radio channel to pumps. All RileyLink compatible devices follow the RileyLink protocol.</p> <p>There used to be just one option, the original RileyLink. Now there are more options, so you have to make a decision. Depending on your choice, be sure to have the correct charger and cables or batteries handy and add spare compatible supplies to your diabetes go-bag.</p> <ul> <li>A Comparison Chart is provided by the GetRileyLink organization for all the RileyLink compatible devices listed below</li> <li>RileyLink<ul> <li>Designed by Pete Schwamb</li> <li>Rechargeable battery (max 36 hours per charge)</li> <li>No longer available new, check this Facebook Group for used ones:<ul> <li>Looping in a time of covid</li> </ul> </li> </ul> </li> <li>OrangeLink<ul> <li>Designed by Vic Wu, available from GetRileyLink</li> <li>Uses 2 AAA batteries, batteries typically last weeks or more, depending on the batteries/pump type</li> <li>Works with either Omnipod or Medtronic</li> <li>Uses new chipsets, reported to have a longer range</li> <li>Matches Apple AirPod form factor, so you can use AirPod cases</li> </ul> </li> <li>EmaLink<ul> <li>Designed by Sorin Kupas-Spunei to increase range, offer smaller sizes</li> <li>Rechargeable battery (various case/battery sizes available)<ul> <li>Micro/Nano: 2 to 3 days</li> <li>Standard: 6 to 7 days</li> <li>Maxx: 12 to 14 days</li> </ul> </li> <li>Must order either Omnipod or Medtronic version</li> <li>This EmaLink Information includes photos of various EmaLink configurations as well as photos showing relative sizes of EmaLink, OrangeLink and RileyLink</li> <li>In North America, available from EmaLink.us</li> </ul> </li> </ul>"},{"location":"build/rileylink/#more-information","title":"More information","text":"<p>There is an entire FAQs page on RileyLink Compatible Devices.</p> <p>Sections of interest include:</p> <ul> <li>Firmware Update information on the OrangeLink</li> <li>Ema and Orange Patch to see extra features on the Loop app screens</li> </ul>"},{"location":"build/rileylink/#waiting-for-your-rileylink-compatible-device","title":"Waiting for your RileyLink Compatible Device","text":"<p>While you are waiting for the RileyLink compatible device to arrive, you can proceed with these build directions and can try one of the Simulated Loop options. After that, unless you are using Omnipod DASH, you'll have to wait for your device.</p> <p>The population of DIY loopers (Loop and Android APS) has grown enough that you might be able to find someone local to loan you their spare.</p>"},{"location":"build/rileylink/#next-step-enroll-in-apple-developer-program","title":"Next Step: Enroll in Apple Developer Program","text":"<p>Now you are ready to enroll in the Apple Developer Program.</p>"},{"location":"build/test-settings/","title":"Test Settings","text":""},{"location":"build/test-settings/#test-settings","title":"Test Settings","text":"<p>Time Estimate</p> <ul> <li>2 hours to review the rest of LoopDocs (particularly the Set Up, Operate, and FAQs sections) and LoopTips</li> <li>If you like quizzes, this older quiz has not been updated for version 3 of the Loop app and not all the links work (when your answers are scored), but the questions are still really good and the scoring report provides extra insight into why your answer was right or wrong<ul> <li>15 minutes to take this quiz to confirm you understand the Loop app expected behavior</li> <li>New with version 3 of the Loop app: <ul> <li>you can remote bolus</li> <li>you can set a manual temp basal rate</li> <li>DASH pods can be used without a RileyLink<ul> <li>restarting your app or turning Bluetooth on and off replaces the Rileylink power cycle trouble-shooting tip</li> </ul> </li> <li>Nightscout with Heroku is no longer free, but there are other options</li> <li>you do NOT need a Mac computer if you use Build with Browser</li> </ul> </li> </ul> </li> <li>1-3 days to test settings for safety and to get the most out of the Loop app<ul> <li>This step can be done after you build the Loop app, just stay in <code>Open Loop</code> while you test</li> </ul> </li> </ul> <p>Summary</p> <ul> <li>Before you use <code>Closed Loop</code> mode, test and validate your basal rates, ISF (correction factor), and CR (carb ratios)</li> <li>You may need to adjust your settings for the Loop app</li> <li>Accurate settings are vital for success</li> </ul> <p>FAQs</p> <ul> <li>\"My endo chose my pump settings, so do I need to test them?\" Yes. Your endo chose your settings in a  different context, with different constraints. What is safe and ideal in traditional pump therapy, may not be the best selection for the Loop app. Testing your settings, even for just a couple days, makes a big difference.</li> <li>\"I have great control, why would I need to test my settings?\"  \"Great control\" may be due to lots of adjustments - bumps and nudges of insulin or carbs. Those bumps and nudges may be covering for underlying settings that need adjustment. If you are coming from a treatment style that involves memorizing your insulin doses for meals, you may not know your actual CR or ISF. Testing is key to success with the Loop app.</li> <li>\"I can't basal test with my 2-year-old. What can I do?\" That is pretty tough. Consult your endo, watch your patterns, and do the best you can...little kiddos are a difficult group to test settings. Once you become comfortable with the Loop app, there are tricks to adjust settings while staying in closed loop as long as settings are fairly close.</li> </ul> <p>Loop is just a fancy calculator underneath the hood. The math problems it solves depend on the settings you provide. So test settings before using the Loop app.</p>"},{"location":"build/test-settings/#basal-rates","title":"Basal Rates","text":"<p>Correct basal rates keep your blood glucose steady without food present. The standard method is to test your basal by having a relaxing 4-6 hours without eating at least two hours before you begin the test. Does your blood sugar stay steady? Or do you climb and need a correction? Or do you go low and need to eat? Setting basal is a crucial step to setting yourself up for success with the Loop app. It determines how much of the insulin delivered (from basal and bolus) is counted as insulin on board (IOB).</p> <p>Basal Tricks</p> <p>The Loop app keeps track of how much more or less insulin than your scheduled basal rates are required to keep glucose in target. Once you become a proficient looper, you can tune your basal by looking at IOB overnight or when food and exercise are not involved.</p>"},{"location":"build/test-settings/#insulin-sensitivity-factor","title":"Insulin Sensitivity Factor","text":"<p>The Insulin Sensitivity Factor (ISF), sometimes called Correction Factor, is how much one unit of insulin will bring down your glucose. The higher the value of this setting, the more sensitive to insulin you are. An ISF of 50 or 100 (2.8 or 5.5) means one unit of insulin lowers your glucose 50 or 100 mg/dL (2.8 or 5.5 mmol/L) in the absence of food or activity, when basal rates are correct.</p> <p>Test ISF after you test and determine your basal rates. Simply bring yourself to a higher glucose with a glucose tab or choose a time when you are \"stuck\" higher than your target.</p> <ul> <li>Calculate how much insulin is required to lower your glucose to target, take it and observe if your glucose flattens out at your target within 3 hours<ul> <li>Do not do this test if you have recently eaten, recovered from a low glucose, engaged in physical activity, are sick or under stress</li> </ul> </li> <li>A starting point for ISF is to take total daily dose and divide that into 1800<ul> <li>This is just a starting point, many people have higher or lower ISF than this formula suggests</li> <li>Example, you take 30 U a day and have no idea what your ISF should be<ul> <li>Start with 60 mg/dL (3.2 mmol/L) and test it</li> </ul> </li> </ul> </li> </ul>"},{"location":"build/test-settings/#carb-ratio","title":"Carb Ratio","text":"<p>The Carb Ratio (CR) is the amount of carbs covered by one unit of insulin. Ideally, a good carb ratio will restore your glucose close to its starting point within 3 hours of the meal. (High fat/protein meals may cause glucose to be impacted longer.)</p> <p>If you are spiking higher than you\u2019d like after a meal, but still coming back to the starting glucose, consider pre-bolusing your meal earlier (maybe by 15-20 minutes) rather than changing the carb ratio.</p>"},{"location":"build/test-settings/#other-resources","title":"Other Resources","text":"<p>Check the companion site LoopTips. Several direct links to discussions are provided below:</p> <ul> <li>How to check settings </li> <li>Why settings are important</li> <li>What to do when you need to change settings which covers short term and long term reasons</li> </ul> <p>If you\u2019re fascinated by this topic, read the book 'Think Like A Pancreas' by Gary Scheiner for a really great discussion.</p>"},{"location":"build/test-settings/#next-step-make-plans-for-loop-data","title":"Next Step: Make Plans for <code>Loop Data</code>","text":"<p>Now you are ready to make plans for Loop Data.</p>"},{"location":"build/testflight-xcode/","title":"TestFlight from Xcode","text":""},{"location":"build/testflight-xcode/#introduction","title":"Introduction","text":"<p>There are several different methods for making use of TestFlight:</p> <ul> <li>Test an app someone else is developing</li> <li>Use the Build with Browser method to build and distribute your Loop app to your iPhone or that of a family member</li> <li>Use TestFlight as a remote distribution (and backup) for an app you build using Xcode</li> </ul> <p>This guide can also be followed to install other apps you build with Xcode via TestFlight. Examples include <code>Loop Follow</code>, <code>Loop Caregiver</code>, <code>xDrip4iOS</code> and <code>GlucoseDirect</code>.</p> <p>Some useful features of using TestFlight to install Loop:</p> <ul> <li>You don't need to plug your phone into your computer</li> <li>You can update Loop on your kid's phone while they're away at college</li> <li>Reinstalling Loop on the fly is quick and easy from your phone, even if you accidentally delete the app, see Protect that App, or need to install Loop on a brand new phone</li> </ul> <p>Since apps built with TestFlight expire after 90 days, it is suggested you also setup a build using the Build with Browser method even if you don't plan on using it. The GitHub build can be updated in a few minutes from any browser and is an extra layer of protection in these scenarios if you do not have access to your Mac for a rebuild:</p> <ul> <li>Your Xcode built Loop in TestFlight expires</li> <li>An urgent update to Loop is released</li> </ul> <p>In all cases, except accidental deletion of Loop or loss of phone, the Loop you install from TestFlight builds over your existing app and you keep all your settings including your pump.</p>"},{"location":"build/testflight-xcode/#build-to-testflight-via-xcode","title":"Build to TestFlight via Xcode","text":""},{"location":"build/testflight-xcode/#initial-steps","title":"Initial Steps","text":"<p>Before creating the app or uploading it to TestFlight, use the Build with Mac guide to sign your targets and build Loop to a simulator phone in Xcode. This checks to ensure the app you upload to your TestFlight will work as expected.</p>"},{"location":"build/testflight-xcode/#archive-the-project","title":"Archive the Project","text":"<p>Change the build target to from building to a simulated phone to LoopWorkspace &gt; Any iOS Device (arm64) like the image below.</p> <p></p> <p>Now go to the top menu and choose Product &gt; Clean Build Folder. Once it's done, it should say \"Clean Finished\".</p> <p></p> <p>Go back to the top menu and choose Product &gt; Archive. This will build Loop into a file rather than a phone or simulator. It should take about the same amount of time as building to a phone or simulator does.</p>"},{"location":"build/testflight-xcode/#upload-the-archive","title":"Upload the Archive","text":"<p>Once the archive finishes building, it should automatically open the Archives window. If you want to open this window without re-archiving, click the following in the top menu: Xcode &gt; Window &gt; Organizer.</p> <p></p> <p>Select the archive and click Distribute App. If you've archived the project before, be sure to select the archive you intend to upload - most likely the one with the most recent Creation Date. </p> <p>On the next screen, App Store Connect is selected by default. Click Next.</p> <p></p> <p>On the next screen, Upload is selected by default. Click Next.</p> <p></p>"},{"location":"build/testflight-xcode/#first-time-archive-upload","title":"First-Time Archive Upload","text":"<p>If you have already created a TestFlight for Loop via Xcode or the GitHub Build method, the next screen will not be shown, so skip ahead to Subsequent Archive Upload.</p> <p>If this is the first time you're creating a TestFlight for Loop, enter the following on the next screen and click Next:</p> <ul> <li>Name: Enter a name that is unique. Most people just use \"Loop\" followed by their initials, so James Kirk would use \"LoopJK\". If he gets an error that the name is already taken, he might try something like \"LoopJTK\" or \"Loop_JTK_1701\".</li> <li>SKU: This can be anything, but it can't be the same SKU that you've used for a different app that you've created a TestFlight for. Ideally, just leave it as the autofilled bundle id.</li> <li>Primary Language: Set this to your primary language.</li> <li>Bundle Identifier: This should already be autofilled. If it's not, it should be \"com.YOUR_TEAM_ID.loopkit.Loop\". Make sure you replace YOUR_TEAM_ID with your actual TEAM ID, which you can find at developer.apple.com/account.</li> </ul> <p></p>"},{"location":"build/testflight-xcode/#subsequent-archive-upload","title":"Subsequent Archive Upload","text":"<p>On the next screen, leave everything checked and click Next.</p> <p></p> <p>On the next screen, leave it set to Automatically manage signing and click Next. You will see a few messages as it performs some tasks. Be patient.</p> <p></p> <p>When you see the next screen, click Upload.</p> <p></p> <p>Wait until uploading is finished. Don't be alarmed if you see the following screen, just click Done.</p> <p></p>"},{"location":"build/testflight-xcode/#deploy-app","title":"Deploy App","text":"<p>Now that it's uploaded to TestFlight, it will take a little bit before it finishes processing and becomes available for installation on your iPhone. You can check appstoreconnect.apple.com/apps to find it's progress by clicking Test Flight and then iOS under Builds in the upper left. Once it no longer says \"Processing\" and instead says \"Ready to Submit\" next to the build's number, it should be available and ready to install on your iPhone.</p> <p></p> <p>To install Loop from TestFlight onto your iPhone, follow the instructions on the GitHub Deploy page.</p>"},{"location":"build/testflight-xcode/#update-app","title":"Update App","text":"<p>Apps installed via TestFlight are only valid for a maximum of 90 days, so you must upload a new build to TestFlight at least every 90 days.</p> <p>To update, simply repeat all the steps on this page.</p> <p>Add a Calendar Reminder</p> <p>Note that the built-in Loop Notification for expiration has not been modified to read TestFlight expiration, yet.</p> <p>So, please add a calendar reminder.</p>"},{"location":"build/updating/","title":"Update/Rebuild with Mac","text":""},{"location":"build/updating/#overview","title":"Overview","text":"<p>This page is only relevant when building with a Mac and Xcode.</p> <p>For Browser Build, please see: Update/Rebuild with Browser</p> <p>Time Estimate</p> <ul> <li>25 minutes, if Xcode and macOS are already updated to support the current or desired iOS</li> <li>up to 2 days, if need to install macOS and / or Xcode update(s)</li> </ul> <p>Summary</p> <p>Summary of tasks to prepare for and update your app:</p> <ul> <li>Determine required macOS and Xcode version based on your phone iOS<ul> <li>If necessary, update first macOS and then Xcode</li> </ul> </li> <li>Check your Developer Account</li> <li>Download Updated Loop code and Build Loop</li> </ul> <p>In each of the sections below, follow links to sections of other build pages then hit the back button on your browser to return to this page.</p> <p>FAQs</p> <ul> <li>\"What is an update?\" Anytime you want to change versions or if the app is about to expire, follow the instructions on this page.</li> <li>\"Do I delete my old Loop app first?\" Definitely not! If you keep your Loop app on your phone, your Loop settings (and existing pod) will continue to work the same after the update. Seamless.</li> <li>\"Do I need to start a new pod when I update?\" No. Your existing pod session will continue seamlessly if you are using the same Developer Account to sign the Loop app targets as you did the last time you built.</li> <li>\"What if I'm using a new/different developer account?\" If you aren't building with the same developer account used when your existing app was built (this includes going from free to paid), then you will be installing a brand new (second) Loop app on your phone. Your existing pod won't work with the new app, so you might want to time this transition when you are due to change pods. Delete the old app once you get the new one all set up.</li> <li>\"What if it is a new computer but the same developer account?\" No big deal...use the Updating Steps to check that your new computer has the required compatible versions and then build your app. This will include installing Xcode, configuring Xcode Settings, and adding your Developer ID to Xcode: refer to What about a New Computer?. There is no need to delete provisioning profiles on a brand new computer, but no harm comes from following the instruction.</li> </ul>"},{"location":"build/updating/#when-to-update-loop","title":"When to Update Loop","text":"<p>Under ordinary circumstances, you do not have to update your Loop app until it expires (1 year for a paid account). However, we encourage regular updates when a new version of iOS, or of Loop, is released because they often contain bug fixes or improvements which may increase operational stability.</p>"},{"location":"build/updating/#ios-updates","title":"iOS Updates","text":"<p>Under ordinary circumstance, updating the iOS on your phone does not require a rebuild of the app on your phone. However, it's important to be prepared in case of an emergency, such as a lost phone.</p> <p>Best Practice</p> <p>It is good practice to first check if your computer (macOS or Xcode) will require an update to support building Loop to your phone BEFORE applying an iOS update to your Looping phone.</p> <p>Follow these \"safe Looping\" steps for updating your iOS:</p> <ol> <li>Check which version of macOS and Xcode is required for the phone iOS you intend to install.</li> <li>Update macOS / Xcode if needed</li> <li>Check Loop: Current Release status - if there is new code, you should download it</li> <li>Build app to your iPhone</li> <li>Then update your iPhone iOS</li> </ol> <p>Loop Releases provides information about current and previous Loop versions.</p> <p>Updating to iOS 16 (watchOS 9 or newer) requires enabling Developer Mode. Your existing app will not open until you take this step. Once enabled, the app opens again. A rebuild is not required.</p>"},{"location":"build/updating/#loop-is-no-longer-available","title":"\"Loop\" is No Longer Available","text":"<p>The apps built and signed by you in Xcode with a paid developer account will last for 12 months; then they expire and must be rebuilt. At least once per year you will have to rebuild your app and go through this update process. If you do not update and the \"provisioning profile\" on your phone expires, you will see the \"Loop\" is No Longer Available message. You will be given multiple Loop App Expiration Notifications on the Loop phone, but might miss them if you are a caregiver.</p> <p>When you see \"Loop\" is No Longer Available on your phone, the only solution is to rebuild the app.  All of your settings are still present on your phone, but your \"provisioning profile\" expired and you need to generate a new one. Once you build Loop on your phone, following the instructions on this page, all your settings will be maintained - assuming you build with the same Apple Developers ID that was used initially.</p>"},{"location":"build/updating/#macos-and-xcode-versions","title":"macOS and Xcode Versions","text":""},{"location":"build/updating/#determine-required-xcode-and-macos-versions","title":"Determine Required Xcode and macOS Versions","text":"<p>Between Loop app builds, there's a high likelihood that Apple has updated one or more of the systems involved in your Loop app. If you don't have the minimum Xcode version required for your phone iOS, you cannot build on that phone. Sometimes you must also update the macOS version to allow you to use the required Xcode version.</p> <p>Based on the iOS on your phone, or the iOS you plan to install on your phone, determine the required macOS and Xcode versions. Click on this  link versions for iOS, macOS and Xcode to determine the versions needed and then hit the back button in your browser to finish the steps on this updating page.</p> <p>If you are tired of the macOS and Xcode version update requirements, check out the Build with Browser option.</p> <p>First macOS and Then Xcode</p> <p>Your macOS must meet the minimum requirement for the Xcode version you need to support your current iOS as detailed in that link above.</p> <ul> <li>If the macOS is too old, the Xcode version will not appear in the App Store</li> <li>You might think you don't need to update Xcode (but you do)</li> <li>Your build will fail and mentors might need to help you</li> </ul> <p>Don't be that person. Follow the directions.</p> <p>Minimum means you need to have at least that version - newer versions build just fine.</p>"},{"location":"build/updating/#verify-update-macos","title":"Verify / Update macOS","text":"<ul> <li>Click on this link Check your macOS Version and follow the instructions on that page if an update is required.</li> <li>After you've reviewed that section, hit the back button on your browser to return here</li> </ul>"},{"location":"build/updating/#verify-update-xcode","title":"Verify / Update Xcode","text":"<p>Click on this link Check your Xcode Version to find your Xcode version number.</p> <p>If you need to update your Xcode, follow the instructions at this link Install Xcode and continue through Xcode Settings.</p> <p>Advanced users: If you are finding installation of Xcode from the App Store incredibly slow, try the alternate method of Direct Download of Xcode.</p> <p>Direct Download</p> <ul> <li>If you previously did a direct download of Xcode, it might not show up in the App Store.</li> <li>Either do another direct download or follow these directions in the Direct Download section to reconfigure so it will show up in the App Store.<ul> <li>Direct Download of Xcode</li> </ul> </li> </ul>"},{"location":"build/updating/#what-about-a-new-computer","title":"What about a New Computer?","text":"<p>Make sure your new computer has the macOS and Xcode required by your phone iOS. Be sure Xcode Command Line Tools are installed and that you Add Apple ID to Xcode.</p>"},{"location":"build/updating/#missing-xcode-or-command-line-tools","title":"Missing Xcode or Command Line Tools","text":"<p>WARNING</p> <p>If you fail to have Xcode or Xcode Command Line Tools installed, you will get one of these errors (or something similar) when you attempt to run the Build Select Script:</p> <ul> <li>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</li> <li>xcrun: error: active developer path (\"/Applications/Xcode.app/Contents/Developer\") does not exist</li> <li>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</li> <li>xcode-select: error: tool 'xed' requires Xcode</li> <li>Scripting Bridge could not launch application . . .</li> </ul> <p>Follow Xcode Settings page after updating Xcode</p> <pre><code>Make sure to restart your computer after updating Xcode and follow the instructions on the Xcode Settings page. There's a known issue that happens often enough to be frustrating if you skip those steps. It's not always required...but this is a good easy ounce of prevention step.\n</code></pre>"},{"location":"build/updating/#check-your-developer-account","title":"Check your Developer Account","text":"<p>Apple updates its License Agreement for the Developer Program frequently. You need to login to your developer account to manually check if there is a new agreement to accept.  If you see a big red or orange banner across the top of your Developer Account announcing a new license agreement like shown below...please read and accept it before building Loop.</p> <p></p>"},{"location":"build/updating/#ready-to-build-loop","title":"Ready to Build Loop","text":"<p>As long as there are no errors, you are now ready to proceed to Build the Loop App: Developer Mode</p> <p>After building the new app, you may choose to return to this page and follow the instructions to Delete Old Copies. This is optional, but cleans up space on your computer.</p>"},{"location":"build/updating/#delete-old-copies","title":"Delete Old Copies","text":"<p>This step is optional, but if your computer is low on space, it helps to clean up old downloads your are no longer using.</p> <p>There is an easy way to do this. The Build Select Script used to download and build Loop provides Maintenance Utilities to help free up disk space.</p> <p>Please review Loop and Learn: Build Select Script for more information.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to start the Build Select Script<pre><code>/bin/bash -c \"$(curl -fsSL \\\n  https://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildSelectScript.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: Cmd+V ; or Ctrl click and select from menu or <code>Edit</code>-<code>Paste</code> at top of Mac screen.)</p> <ul> <li>Please read what is on the screen as you progress</li> <li>Choose Option 3. Run Maintenance Utilities</li> </ul> <p>If you prefer to clean up old downloads yourself, keep reading.</p> <p>Where is the old folder?</p> <p>Assuming you used the Build Select Script, your downloads are in the ~/Downloads/BuildLoop folder as shown in the graphic below. If you are tight on space, the older folders can be deleted.  Best practice, download fresh and build Loop; and then go back and delete all but the most recent copy.  The nice thing about the Build Select script is it automatically generates the folder name with the date and time of the download. Delete each unwanted folder, one at a time.</p> <p>If you see a file (not a folder) in ~/Downloads/BuildLoop called LoopConfigOverride.xcconfig, keep that around. If you delete it, you'll need to recover it from the trash, regenerate it (if you know how) or sign your targets manually for your current download.</p> <p>The Scripts folder can also be left alone, but if you delete it, it is regenerated with the next use of the Build Select Script.</p> <p></p>"},{"location":"build/updating/#background-information","title":"Background Information","text":"<p>New Loopers do not need to read the rest of this page.</p> <p>Experienced Loopers may wonder what happened to deleting derived data.</p> <ul> <li>Each workspace folder has a unique folder for storing derived data</li> <li>Deleting derived data across all Xcode workspaces and projects for a brand new download is not required to ensure a year for a given build</li> <li>The Clean Derived Data option in the Utilities menu can be required for some special cases, but you probably won't need it</li> </ul>"},{"location":"build/updating/#frequent-builder","title":"Frequent Builder","text":"<p>If you build frequently, you do not have to delete the profiles every time. When the build script asks if you want to \"Ensure a Year?\", you can skip that step.</p> <p>On the other hand, you may need to delete the provisioning profiles or saved Xcode information about a version of LoopWorkspace (or other app) currently on your computer. The maintenance utilities found in the BuildSelectScrip can be run to delete your provisioning profiles or clear derived data. Or you can use the individual commands in the next sections to do the same thing.</p>"},{"location":"build/updating/#delete-provisioning-profiles","title":"Delete Provisioning Profiles","text":"<p>You can delete your provisioning profiles by copying this command and pasting it into any terminal. This does not affect any build you currently have on your phone - this just forces your current computer to generate a new one next time you build with Xcode.</p> Copy and Paste to manually remove your Provisioning Profiles on your computer<pre><code>rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision\n</code></pre>"},{"location":"build/updating/#delete-derived-data","title":"Delete Derived Data","text":"<p>If you build using the same clone on your computer and then update that clone, sometimes you want to remove derived information that Xcode remembers and force it to start fresh.</p> <p>First quit out of Xcode. The following command will delete all derived information for all your clones, so next time you build any app from an existing clone on your computer, the build will take longer. All dependencies will download again. So wait until you see the \"indexing\" indication on Xcode before trying to build.</p> Copy and Paste to manually force Xcode on your computer to start fresh<pre><code>rm -rf ~/Library/Developer/Xcode/DerivedData\n</code></pre>"},{"location":"build/updating/#revoke-certificate-issue","title":"Revoke Certificate Issue","text":"<p>What does it look like if you run into the Revoke Certificate message? When you prepare to Sign the Targets with Xcode, you'll see the message highlighted in the figure below.</p> <p> </p> <p>More information is shown in the orange box below.</p> <p>Revoke certificate</p> <p>The important part of this message is:</p> <ul> <li>\". . . signing certificate . . . private key is not installed in your keychain . . .\"</li> </ul> <p>WAIT - You might not need to revoke your certificate</p> <ol> <li>You might get this if you logged in as a different user, have a new computer or if your computer had to undergo a factory reset<ul> <li>You can transfer your keychain to your new computer (or just revoke and keep going)</li> <li>To transfer your keychain, check this Apple Documentation Link</li> </ul> </li> <li>Your version of Xcode is way out-of-date<ul> <li>Mentors have seen this with people trying to build with Xcode 11.4 or earlier</li> <li>Update Xcode to the most recent version</li> </ul> </li> </ol> <p>If you revoke and keep going:</p> <ul> <li>If you do hit Revoke Certificate, you'll be given a new one</li> <li>Even with the new certificate, your Apple Developer ID is not affected</li> <li>You can re-build on the existing Loop app on your device(s) and maintain all your settings with the new certificate.</li> </ul> <p>Be aware that you will have to rebuild to every device that used the certificate you just revoked and if you have other apps built with this certificate, they will stop working too.</p>"},{"location":"build/updating/#direct-download-of-xcode","title":"Direct Download of Xcode","text":"<p>Many people find updating Xcode from the App Store to be incredibly slow - especially when a new version has just been released.  This method still takes time and enough space on your disk but is faster than going through the App Store.  Depending on your internet speed, this download can be done in about an hour. Then once it is downloaded, expect another fifteen minutes to several hours (depending on the speed of your computer) for the \"xip\" file to \"expand\".</p> <p>The instructions do not hold your hand.</p> <ul> <li>Your macOS must be at the minimum version (or newer) to support the version of Xcode you're about the download</li> <li>You need to know how to log into your Apple Developer account and navigate those menus</li> <li>You need to know how to use Finder to navigate to Downloads</li> <li>You need to know how to drag the Xcode icon into your Applications folder (after download and expand completes)</li> <li>After you have done a direct download, the App Store will not show you updates<ul> <li>Either repeat the Direct Download or</li> <li>Delete Xcode from Applications folder<ul> <li>Open the App Store and search for Xcode</li> <li>Install fresh</li> <li>After you use the App Store for a download, then Updates will show in the future</li> </ul> </li> </ul> </li> </ul> <p>Here are the different steps you need to follow when doing the Direct Download instead of the App Store method:</p> <ol> <li>Login to your Apple developer account<ul> <li>Examine the menus (on my computer there are buttons on the left-hand side)</li> <li>Click on Downloads (under Additional Resources)</li> <li>Look at menu items (on my computer there are buttons at the top) that say Beta, Release, Profiles and Logs, and More</li> <li>Click on More</li> <li>Scroll down until you find the item you want (for example, Xcode 13)</li> <li>Click on View Details and click on the Download button for the \"xip\" file</li> </ul> </li> <li>Wait for Download to complete</li> <li>Expand the file by clicking on it in Finder</li> <li>Move the Xcode icon to Applications after the expansion completes</li> <li>Check the Command Line Tools setting under Xcode-&gt;Settings<ul> <li>The selection cannot be blank or Build-Script will fail to open Xcode automatically</li> <li>It should be the same version as your Xcode</li> </ul> </li> <li>Reboot the computer</li> </ol>"},{"location":"build/xcode-settings/","title":"Xcode Settings","text":""},{"location":"build/xcode-settings/#xcode-settings","title":"Xcode Settings","text":"<p>Time Estimate</p> <ul> <li>about 10-15 minutes to install the Command Line Tools</li> <li>5 minutes to add your Apple ID, assuming you remember your password</li> </ul> <p>Summary</p> <ul> <li>Verify that Command Line Tools are installed: Xcode-&gt; Settings -&gt; choose Locations tab.</li> <li>Add your Apply ID:  Xcode-&gt; Settings -&gt; choose Accounts tab.</li> </ul> <p>FAQs</p> <ul> <li>\"I still only see an account with <code>(personal team)</code> beside it even though I enrolled in the paid Developer Account program...what should I do?\" You should check your spam email box in case Apple sent you an email there. Make sure you've waited the 48 hours that Apple says it may take to get your account approved. If it's been 48 hours and you still don't see anything in your email, contact Apple support and ask them about the status of your enrollment. It may be held up by something on their end.</li> </ul>"},{"location":"build/xcode-settings/#xcode-version","title":"Xcode Version","text":"<p>Open Xcode from your Applications folder. If it offers to start a new project with you, just close that window.</p> <p>Click on the Xcode-&gt;About Xcode menu item. The version number is displayed.</p>"},{"location":"build/xcode-settings/#privacy-settings","title":"Privacy Settings","text":"<p>This is not typical, but it does happen.</p> <p>Some people have their macOS privacy settings configured so that Xcode does not have permission to access their <code>~/Downloads</code> folder. This will cause a lot of grief when trying to use the Build Select Script to build an app with Xcode. This will be mentioned on the build errors page, but this is a good time to check. The graphic below has steps labeled 1 through 4 to guide you to the setting that must be enabled for you to build the app with Xcode.</p> <p></p>"},{"location":"build/xcode-settings/#watchos-simulators","title":"watchOS Simulators","text":"<p>Yes, watchOS simulators are required to build Loop. If Xcode asks if you want to download them - say yes. It's slow but you cannot build Loop without the simulator.</p> <ul> <li>Tap on New with Xcode 14 for more information</li> </ul>"},{"location":"build/xcode-settings/#command-line-tools","title":"Command Line Tools","text":"<p>The very first time you open Xcode it may install a package of command line tools. Wait patiently until it finishes.  The command line tools may have installed without asking.</p> <ul> <li>Check that your Command Line Tools installed correctly.<ul> <li>First, open Xcode Settings<ul> <li>Click on the word <code>Xcode</code> in the top menu bar (just to the right of the Apple icon in the upper-left corner) and select <code>Settings</code> in the drop-down menu</li> </ul> </li> <li>Then select the <code>Locations</code> tab in the Settings window to see the dropdown menu for Command Line Tools.  Make sure the Xcode version listed matches what you just installed (not the version in this graphic)</li> </ul> </li> <li>If it's blank, use the blue arrows to the right of the Command Line Tools row to select it</li> </ul> <p></p>"},{"location":"build/xcode-settings/#add-apple-id","title":"Add Apple ID","text":"<p>Go to the Xcode Settings window from above, click on the <code>Accounts</code> tab and then press the + in the lower-left corner to add an Apple ID account.</p> <p></p>"},{"location":"build/xcode-settings/#xcode-accounts-tab","title":"Xcode Accounts Tab","text":"<p>The Xcode Accounts Tab, shown in the graphic (from Xcode 13) below allows you to have more than one account available to choose from when you sign your targets (another new term that is explained later).  Normally, you would only have one.</p> <p>In the graphic, whichever item is selected on the left side (highlighted by Xcode in blue) shows up with more details on the right side of the display. If the Free account had been selected, the information shown in the red inset would have been displayed.</p> <p>Free and Paid</p> <p>The graphic below shows examples for a paid account and a free account. You will only see one.</p>"},{"location":"build/xcode-settings/#free-developer-account","title":"Free Developer Account","text":"<p>If you want to use a free developer account, you will simply enter your Apple ID in this section and Xcode will automatically enroll your Apple ID in the free developer program. It will show up with the <code>(Personal Team)</code> and <code>User</code> indication.</p>"},{"location":"build/xcode-settings/#paid-developer-account","title":"Paid Developer Account","text":"<p>If you enrolled in the paid account already and have confirmation that your account is active, enter the Apple ID of the paid developer account. It will show up with just your name and the <code>Admin</code> indication. If you have enrolled and are waiting, the <code>(Personal Team)</code> and <code>User</code> indication shows up until the paid account is confirmed by Apple.</p> <p>Description</p> <p>The description line is initially empty. You can add your own description or just leave the line blank. Text added to the decription line shows up in two places: To the left, just above the email address and to the right once that Apple ID is selected.</p> <p></p> <p>You are now done setting up Xcode.  Great job!  You will not need to redo the account setup steps on any subsequent builds or updates of your Loop app.  Xcode will remember these settings.</p>"},{"location":"build/xcode-settings/#next-step-build-loop","title":"Next Step: Build Loop","text":"<p>Now you are ready to Build the Loop App.</p>"},{"location":"build/xcode-version/","title":"Xcode Version","text":""},{"location":"build/xcode-version/#install-required-xcode-version","title":"Install Required Xcode Version","text":"<p>Time Estimate</p> <ul> <li>45 minutes to 2 hours, depending on internet connection...but you don't need to babysit the download.</li> <li>0 minutes if you decide to use the Build with Browser method to build Loop</li> </ul> <p>Summary</p> <ul> <li>Check iPhone iOS version<ul> <li>The iOS version determines minimum Xcode version</li> <li>The minimum Xcode version determines minimum macOS version</li> <li>If necessary, update macOS first and then return to this step</li> </ul> </li> <li>Download (or update) Xcode from your computer's App Store application</li> </ul> <p>FAQs</p> <ul> <li>\"Why isn't my Xcode installing?\" The two most common reasons are:<ol> <li>Lack of internet connection, or</li> <li>Not enough space on your hard drive<ul> <li>Xcode is a large download, and needs at least 50GB of space to properly unpack and install itself</li> <li>If you do not have enough space on your hard drive, you will have installation failures</li> <li>Check the Space Available</li> <li>Although the download takes a long time, the good news is you can walk away once the download starts. If your laptop goes to sleep when you close the lid or when the screen saver starts, disable the screen saver and leave the laptop open.</li> <li>After Xcode has finished downloading (looks like the progress bar is almost completed), it takes a long time to unpack and install, be patient</li> </ul> </li> </ol> </li> <li>\"Can I install Xcode on an external drive?\" Unfortunately, no. Xcode needs to be on the Mac hard drive. But other things--like photos and documents--can be moved to an external drive to make room for macOS and Xcode updates.</li> </ul>"},{"location":"build/xcode-version/#what-is-xcode","title":"What is Xcode?","text":"<p>Xcode is a free application for Apple computers. You will use Xcode to turn the \"raw\" Loop source code into an iOS application and install it onto your iPhone.  Which version of Xcode you install on your computer depends on the iOS version you have on the iPhone you are going to be installing Loop on and the macOS version you have on your computer. </p> <p>Because of the complexity of these dependencies, please read this entire page.</p> <p>Or - look into building with GitHub Actions - no Mac computer required, no need to worry about versions for Mac OS or Xcode - all done for you on GitHub (some configuration required).</p>"},{"location":"build/xcode-version/#which-version-of-xcode-do-i-need","title":"Which version of Xcode do I need?","text":"<p>First, choose a version of Xcode appropriate for your iOS device. Then, determine the minimum macOS version required for that Xcode version. Update to at least that minimum macOS version. Then follow the instructions to download and install Xcode (or update an existing installation):</p> <ul> <li>Open the App Store on your computer and search for \"Xcode\"</li> <li>If the version number you need is bigger than what is shown in the App Store, you need to first update your macOS<ul> <li>Do not rely on the version number in this graphic</li> </ul> </li> </ul> <p></p>"},{"location":"build/xcode-version/#version-relationship-overview","title":"Version Relationship Overview","text":"<p>Have you turned off automatic updates on your iOS device?</p> <p>Loop and iOS Updates</p> <p>Please Read: Turn Off Automatic Updates</p> <p>Before manually accepting an iOS update, be sure you have compatible versions of Xcode and MacOS.  </p> <p>Minimum Xcode Version</p> <p>The minimum version of Xcode you need depends on the iOS version you have on your phone.</p> <p>Please Read: Minimum Version List</p> <p>Can't find the required Xcode version</p> <ul> <li>If your computer is not running the required minimum macOS, the App Store won't show the required minimum Xcode version</li> <li>You must use iOS to determine which Xcode, which determines which macOS</li> <li>Update your computer to at least that minimum macOS first</li> </ul> <p>Don't be the person who posts for help saying, \"I'm trying to update my Loop app but am getting errors.\" When asked what Xcode version they have and if they've updated, they respond, \"I don't have any Xcode updates available in the App Store, so I must be running the most current version.\"</p> <p>Actually, they forgot to check for macOS updates and therefore cannot see the needed Xcode update yet.</p>"},{"location":"build/xcode-version/#after-update-reboot","title":"After Update - Reboot","text":"<p>After any update of macOS or Xcode, it is always a good idea to reboot your computer.</p>"},{"location":"build/xcode-version/#how-do-all-the-minimum-versions-relate-to-each-other","title":"How do all the minimum versions relate to each other?","text":""},{"location":"build/xcode-version/#compatible-versions","title":"Compatible Versions","text":"<p>The current development version and the next release of\u00a0Loop\u00a0will require Xcode version 15 regardless of the iOS on the phone. This requires macOS 13.5 or higher. As an alternative, use Build with Browser, which supports iOS 15, 16, and 17.</p> <p>When this page was last updated, macOS 14.0 and Xcode 15.0 were tested to successfully build the app for phones with iOS 15 through iOS 17.0.2.</p> <p>The table below lists the minimum requirements to build the current release of\u00a0Loop 3.2.3. If your macOS or Xcode version is higher, you can build with Mac.</p> <p>Find your phone iOS in the table below. If your iOS is not listed, e.g., 16.6, choose the first row that is less than your iOS.</p> iOS Version minimum Xcode minimum macOS 17.0 15.0 13.5 16.4 14.3 13.0 16.2 14.2 12.5 15.1 14.1 12.5"},{"location":"build/xcode-version/#wikipedia-chart-for-apple-versions","title":"Wikipedia Chart for Apple Versions","text":"<p>This graphic (copied from Wikipedia and last updated March 2023) is not updated with every iOS update - use it as a map to read the minimum requirements.  Every attempt will be made to update the words in the Minimum Version List promptly - that's much easier than updating a graphic.</p> <p>Follow this link to Wikipedia and scroll down to the current version of this figure - the graphic shown below is a map of how to read the current version of this figure at Wikipedia.</p> <p></p>"},{"location":"build/xcode-version/#what-happens-if-you-try-using-too-old-of-xcode","title":"What happens if you try using too old of Xcode?","text":"<p>It isn't some catastrophic failure if you try to build with an outdated Xcode without realizing it. If the build fails, nothing happens to your phone (or Loop on your phone if you are rebuilding).  Nothing is copied from the computer to the phone until after you see the Build Succeeded message. You'll see a pretty obvious error message during your Loop build. Check Oh dear! Build errors?.</p> <p>Some error messages that have shown up in earlier updates:</p> <pre><code>Package.resolved file corrupted or malformed\n</code></pre> <p>This is for trying to select an iOS 17 phone when building with Xcode 14:</p> <pre><code>Could not locate device support files\n</code></pre> <p>This is for building development code with Xcode 14 instead of Xcode 15:</p> <pre><code>Loop Widget errors like:\nCommand SwiftCompile failed with a nonzero exit code\nCannot infer contextual base in reference to member 'widget'\n</code></pre>"},{"location":"build/xcode-version/#next-step-xcode-settings","title":"Next Step: Xcode Settings","text":"<p>Now you are ready to set up Xcode Settings.</p>"},{"location":"faqs/algorithm-faqs/","title":"Algorithm FAQs","text":""},{"location":"faqs/algorithm-faqs/#does-loop-learn-or-detect-changes-in-your-insulin-needs","title":"Does Loop \"learn\" or detect changes in your insulin needs?","text":"<p>The answer is both Yes and No.</p> <p>Yes in that:</p> <ul> <li>There is a short-term retrospective analysis built into Loop which will apply a weighted-correction based on the past 60 minutes of blood glucose changes.</li> <li>Loop works best if you enter an estimate of carbs and absorption time for meals, but it also is fairly forgiving<ul> <li>There are discussions on Insulin Counteraction Effect (ICE) on a number of pages within LoopDocs:<ul> <li>Dynamic Carb Absorption</li> <li>Carbohydrate Effect</li> <li>Insulin Counteraction Effect</li> </ul> </li> </ul> </li> </ul> <p>No in that:</p> <ul> <li>Loop assumes the settings you've provided are correct.<ul> <li>Loop does not adjust or \"learn\" the Therapy Settings portion of Loop parameters directly<ul> <li>It keeps those fixed and user controlled, separate from the dynamic part of the Loop algorithm, which does learn based on short-term patterns</li> <li>If outside factors (such as hormones, illness, exercise, medications, etc) affect your underlying Therapy Settings you may need to manually adjust those settings.</li> </ul> </li> </ul> </li> <li>This LoopTips 3-page section on Settings is recommended.</li> </ul> <p>Perhaps in subsequent versions of Loop, auto-adjustment of settings or machine learning could be incorporated. Until then, you will need to tell Loop if your underlying settings change or make temporary adjustments for short term issues.</p> <p>The use of Overrides can be quite helpful for short-term changes.</p>"},{"location":"faqs/algorithm-faqs/#what-does-negative-active-insulin-mean","title":"What does negative Active Insulin mean?","text":"<p>When Loop withholds or suspends some of your scheduled basal insulin, that starts an accumulation of insulin deficit. If you have a kinked cannula and insulin is not delivered, you'd call yourself \"lacking insulin\" (negative IOB).</p> <p>When Loop reports negative IOB, it is a sign that Loop has been actively helping you prevent a low blood sugar. If you find significant negative IOB regularly, you probably need to adjust/test your settings. Glucose that continues to decrease (away from a meal) when IOB goes negative is typically a sign that the scheduled basal rate is too high.</p> <p>Developer Notes</p> <p>Scheduled basal rates are meant to counteract your endogenous glucose production. Another way of saying this is that Loop expects your body to be producing an amount of glucose at a rate that is handled by your basal insulin settings.</p> <p>Your body doesn't really produce glucose at a fixed rate, but that's how it's modeled in Loop.</p> <p>\"All models are wrong, but some are useful.\" (Quote attributed to British statistician George E. P. Box.)</p>"},{"location":"faqs/algorithm-faqs/#how-is-iob-calculated","title":"How is IOB calculated?","text":"<p>Insulin on board (IOB) is calculated from the amount of insulin delivered above or below the scheduled basal rate. For each dose of insulin, the insulin model is used to determine how much of that insulin is active over time. Loop is adding up all the amounts over the full Duration of Insulin Action (DIA). The DIA is 6 hours for most rapid insulin in the models used by Loop.</p> <p>IOB is plotted on the Active Insulin Chart in the main Loop display.</p>"},{"location":"faqs/algorithm-faqs/#how-do-delivery-limits-affect-automatic-dosing","title":"How do Delivery Limits Affect Automatic Dosing?","text":"<p>With each cycle, Loop\u00a0generates a glucose prediction and a recommended dose (positive or negative) to bring you to your correction range.</p> <ul> <li>The nearest 3 hours has more influence on the recommendation than the later 3 hours, but the entire 6 hours is considered</li> <li>The automated response to a negative recommended dose is to reduce basal rate, typically to zero</li> <li>The automated response to a positive recommended dose depends on your Dosing Strategy and is adjusted by your Delivery Limits</li> </ul> <p>Let \\(\\mathit{dose}\\) be the amount the app thinks you need for this cycle before considering Delivery Limits. The relationship between \\(\\mathit{dose}\\), delivery limits: \\(\\mathit{maximumBolus}\\) and \\(\\mathit{maximumBasalRate}\\), and current IOB: \\(\\mathit{currentIOB}\\) are detailed in the following sections:</p> <ul> <li>Manual Dose</li> <li>Automatic Dose<ul> <li>Automatic Bolus: Constant Partial Application Factor</li> <li>Automatic Bolus: Glucose Based Partial Application Factor</li> <li>Temp Basal Only</li> </ul> </li> </ul>"},{"location":"faqs/algorithm-faqs/#manual-dose","title":"Manual Dose","text":"<p>In this case, where you are manually requesting a bolus recommendation by using the double orange triangles (circled below) in the toolbar at the bottom of the Loop status screen, only the \\(\\mathit{maximumBolus}\\) Delivery Limit is considered.</p> <p></p> <ul> <li>If \\(\\mathit{dose}\\) &gt; \\(\\mathit{maximumBolus}\\): app recommends \\(\\mathit{maximumBolus}\\)</li> <li>If \\(\\mathit{dose}\\) &lt; \\(\\mathit{maximumBolus}\\): app recommends \\(\\mathit{dose}\\)</li> </ul>"},{"location":"faqs/algorithm-faqs/#automatic-dose","title":"Automatic Dose","text":"<p>Because this will be an automatic dose, the app will not provide a dose that would exceed an IOB of 2 times the \\(\\mathit{maximumBolus}\\). The term automatic dose refers to insulin the app automatically delivers above your scheduled basal rate.</p> \\[ autoDose = minimum (dose, {2*maximumBolus} - currentIOB) \\] <p>Note that a manual dose can exceed \\(\\mathit{autoDose}\\). There will be no warning if this happens. But no additional automatic dosing will happen until IOB is below \\(\\mathit{2*maximumBolus}\\). As long as the prediction is above the correction range, scheduled basal continues regardless of IOB.</p>"},{"location":"faqs/algorithm-faqs/#automatic-bolus-constant-partial-application-factor","title":"Automatic Bolus: Constant Partial Application Factor","text":"<p>There is a new feature coming with the next release, available now with customization or the development version, called Glucose Based Partial Application Factor. This feature is disabled by default. When disabled, the Partial Application Factor is a constant 40%.</p> <ul> <li>If \\(\\mathit{autoDose}\\) &gt; \\(\\mathit{maximumBolus}\\): app boluses 40% of \\(\\mathit{maximumBolus}\\)</li> <li>If \\(\\mathit{autoDose}\\) &lt; \\(\\mathit{maximumBolus}\\): app boluses 40% of \\(\\mathit{autoDose}\\)</li> </ul>"},{"location":"faqs/algorithm-faqs/#automatic-bolus-glucose-based-partial-application-factor","title":"Automatic Bolus: Glucose Based Partial Application Factor","text":"<p>When Glucose Based Partial Application Factor is enabled, the application factor is modified based on the current glucose level. The value ranges from 20% at lower glucose to 80% at higher glucose. Let \\(\\mathit{gbpa\\%}\\) represent the application factor, then:</p> <ul> <li>If \\(\\mathit{autoDose}\\) &gt; \\(\\mathit{maximumBolus}\\): app boluses \\(\\mathit{gbpa\\%}\\) of \\(\\mathit{maximumBolus}\\)</li> <li>If \\(\\mathit{autoDose}\\) &lt; \\(\\mathit{maximumBolus}\\): app boluses \\(\\mathit{gbpa\\%}\\) of \\(\\mathit{autoDose}\\)</li> </ul>"},{"location":"faqs/algorithm-faqs/#temp-basal-only","title":"Temp Basal Only","text":"<p>This automatic method uses both Delivery Limits: \\(\\mathit{maximumBasalRate}\\) and \\(\\mathit{maximumBolus}\\). As explained above, the \\(\\mathit{maximumBolus}\\) is used to calculate \\(\\mathit{autoDose}\\).</p> <p>The desired dose, \\(\\mathit{autoDose}\\), is multiplied by two (to get an hourly rate) and then added to the scheduled basal rate to determine the desired temporary basal rate (\\(\\mathit{BR_temp}\\)) with a duration of half-an-hour to provide that amount of insulin. This calculated \\(\\mathit{BR_temp}\\) is compared to \\(\\mathit{maximumBasalRate}\\).</p> <ul> <li>If \\(\\mathit{BR_temp}\\) &gt; \\(\\mathit{maximumBasalRate}\\): app sets rate to \\(\\mathit{maximumBasalRate}\\)</li> <li>If \\(\\mathit{BR_temp}\\) &lt; \\(\\mathit{maximumBasalRate}\\): app sets rate to \\(\\mathit{BR_temp}\\)</li> </ul>"},{"location":"faqs/algorithm-faqs/#more-algorithm-information","title":"More Algorithm Information","text":"<p>There is more detail about the Loop Algorithm at the bottom of the Operate tab.</p> <ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Automatic Adjustments</li> </ul> </li> </ul>"},{"location":"faqs/apple-health-faqs/","title":"Apple Health FAQs","text":""},{"location":"faqs/apple-health-faqs/#how-does-loop-use-apple-healthkit","title":"How does Loop use Apple HealthKit?","text":"<p>Loop uses Apple HealthKit as long term storage for glucose, insulin and carbohydrates.  But there is more going on than simple storage.</p> <p>It is important that permissions for Loop be properly configured for the Health app.</p> <ul> <li><code>Loop 3.x.x</code>: See Apple Health Permissions</li> <li><code>Loop 2.2.x</code>: See Health Permissions<ul> <li>If you are still on Loop 2 (or FreeAPS), consider updating to Loop 3</li> </ul> </li> </ul> <p>To view the list of data stored in Health</p> <ul> <li>Tap on the Health  icon to open the app</li> <li>Tap on Blood Glucose, Carbohydrates or Insulin</li> <li>Scroll all the way to the bottom</li> <li>Tap on Show All Data</li> </ul> <p>To Set Blood Glucose, Carbohydrates and Insulin as Favorites</p> <ul> <li>Tap on the Health  icon to open the app</li> <li>There's a toolbar at the bottom of the screen (always visible in the app)</li> <li>Tap on the Browse icon (bottom right of toolbar)</li> <li>Tap on<ul> <li>Other Data for Blood Glucose and Insulin</li> <li>Nutrition for Carbohydrates</li> </ul> </li> <li>Tap each item, scroll down to Options section and tap on Add to Favorite</li> <li>Repeat until all three are added</li> <li>Tap on the Summary (bottom left icon of toolbar); Favorites show up first</li> </ul>"},{"location":"faqs/apple-health-faqs/#healthkit-plots","title":"HealthKit Plots","text":"<p>The health app on the Loop phone provides useful plots of data since you started to Loop with that Apple ID. Examples for insulin delivery and carbohydrates are shown in the graphic below. New versions of iOS modified details of the display with the same or improved capabilities. </p> <p></p>"},{"location":"faqs/apple-health-faqs/#healthkit-details","title":"HealthKit Details","text":""},{"location":"faqs/apple-health-faqs/#glucose-and-apple-healthkit","title":"Glucose and Apple HealthKit","text":"<p>For Dexcom users with the Dexcom app on the Loop phone, the Dexcom app writes the value to Health with a 3-hour delay.</p> <p>Loop reads the Dexcom information at the same time the Dexcom app gets the reading from the transmitter. It uses the glucose value to update predictions and stores it in Health.</p> <p>If you look at your Health glucose readings, you'll notice the Loop icon for the last 3 hours and the Dexcom icon for times earlier than that.</p> <p>All other CGM readings are reported with the Loop icon and there is no transition after 3 hours.</p>"},{"location":"faqs/apple-health-faqs/#carbohydrates-and-apple-healthkit","title":"Carbohydrates and Apple HealthKit","text":"<p>In <code>Loop* 2.2.x</code>, if you set Apple Health app permissions to allow it, Loop will read carbohydrates from the Health app. If you give a third-party app permission to store carbohydrate data in Health, and do not realize that Loop reads that information, you might get unexpected insulin delivery based off those carbs. To avoid that unanticipated behavior, the directions tell you to set permissions to allow Loop to write to carbohydrate storage but not read.</p> <p>In <code>Loop 3</code>, the option to read from Health carbohydrates is explicitly disabled and can only be enabled by setting up special parameters when you build the app. The insructions for the code customization are not in LoopDocs yet. If it is important to you to use a third-party app to record carbohydrates and have Loop read the information and automatically dose with insulin, ask for help in zulipchat.</p>"},{"location":"faqs/apple-health-faqs/#insulin-and-apple-healthkit","title":"Insulin and Apple HealthKit","text":"<p>The relationship between Loop and Apple HealthKit is very important to understand if you ever need to do one of these actions:</p> <ul> <li>Dose insulin from another source (injection, smart pen)</li> <li>Remove insulin that wasn't really given (failed site or forgot to reattach a tubed pump)</li> </ul> <p>Be Cautious</p> <p>Allowing users to delete events is fairly risky. If a user deletes a dose accidentally, or does not understand the IOB impact while in closed loop is enabled, then Loop may start giving insulin that is not needed.</p> <p>One method to deal with insulin that wasn't given is to go disable closed loop for 3 to 6 hours. However, if you take care, you can remove insulin from Loop.</p> <p>Developer Notes: Pump Events and Insulin Delivery</p> <p>Loop stores Pump Events separately from Insulin Delivery. With permissions set to allow Loop to read insulin from Health (recommended), the Insulin Delivery store contains doses entered from Health as well as the subset of pump events that represent doses.</p> <p>Pump Events are displayed by tapping an insulin chart on the main screen and viewing the Event History tab.</p> <p>When you delete a pump event using the Event History interface in Loop, the associated entry in Insulin Delivery is not deleted.</p>"},{"location":"faqs/apple-health-faqs/#bolus","title":"Bolus","text":"<ul> <li>When Loop commands the pump to provide a bolus, either manual or automatic, it is shown in the <code>Event History</code> and in the Health app insulin data list<ul> <li>It may take a loop cycle or two to show up in Health, but it will appear</li> </ul> </li> <li>When you add insulin, such as from an injection, to the Health app, Loop reads it and adds it to IOB<ul> <li>It will not be added to the Event History because this is not a pump event</li> <li>Loop 3 adds a new feature that allows you to add non-pump insulin from within the app instead of requiring you to add it inside the Health app</li> </ul> </li> <li>If you delete an entry from the <code>Event History</code> list, but leave that same entry in Health, Loop reads it back from Health<ul> <li>It will not show up in the Event History, but it will still contribute to IOB</li> <li>You must delete a pump event from both <code>Event History</code> and Health data; it is best if you do this within one loop cycle</li> <li>If that dose showed up in <code>Event History</code> but you could not find it in Health, look again after the next loop cycle</li> </ul> </li> <li>If you delete an entry from Health, but leave that same entry in <code>Event History</code>, Loop reports it to Health again<ul> <li>You must delete a pump event from both the <code>Event History</code> list and Health data; it is best if you do this within one loop cycle</li> </ul> </li> </ul> <p>Pro Tip</p> <p>Write on a piece of paper the times and values you think you should delete.</p> <p>Look at those values in both <code>Event History</code> and Health Insulin data list.</p> <p>Record what Loop is reporting as IOB.</p> <p>Review the values one more time, and then delete those entries in both places. Review IOB again. If you made a mistake, you can refer to that written list and adjust appropriately.</p>"},{"location":"faqs/apple-health-faqs/#basal","title":"Basal","text":"<p>Loop keeps track of how much basal is delivered so the IOB is properly reported. In older versions of Loop, there may be occasional display glitches, but the internal accounting is correct and updates every Loop Cycle.</p> <p>Developer Notes: Scheduled Basal is Not a Pump Event</p> <p>Scheduled basal is not a pump event so you will not see it listed in the Event History tab.</p> <p>Scheduled basal does not affect IOB when delivered as scheduled.</p> <p>The Insulin Delivery store keeps track of the insulin delivered via scheduled basal.</p> <p>Loop updates the amount of insulin delivered through basal (both scheduled and temporary) to Health at regular intervals - this does not happen every Loop Cycle when basal rates are not changing. The updates to Health happen:</p> <ul> <li>At midnight</li> <li>When the scheduled basal rate changes</li> <li>When a temporary basal rate changes</li> </ul> <p>A simple example to illustrate this - for a pump with smallest insulin delivery of 0.05 U:</p>  Schedule Temp Basal (TB)  Health Explanation 12:00 AM0.4 U/hr --- --- Start of Day / Start of Example 06:00 AM0.5 U/hr --- 06:00 AMBasal2.4 U Loop reports insulin delivered by basal for the last 6 hours when the scheduled basal rate has a new entry --- 07:15 AM0.0 U/hr 07:15 AMBasal0.6 U Loop reports insulin delivered by basal since last report up to time TB starts --- 07:45 AMTB expires 07:45 AMBasal0 U No insulin was delivered during TB 08:00 AM0.4 U/hr --- 08:00 AMBasal0.1 U Loop reports insulin delivered by basal since last report; the scheduled basal rate has a new entry"},{"location":"faqs/apple-health-faqs/#tidepool-and-apple-healthkit","title":"Tidepool and Apple HealthKit","text":"<p>If you have a Tidepool account and use the Tidepool uploader on your Loop phone, the data in Health is uploaded to your Tidepool database where you can view displays with the Tidepool web browser tool.</p>"},{"location":"faqs/apple-health-faqs/#how-do-i-modify-apple-healthkit-permissions","title":"How Do I Modify Apple HealthKit Permissions","text":""},{"location":"faqs/apple-health-faqs/#loop-health-permissions","title":"Loop Health Permissions","text":"<p>You can review and modify the Apple HealthKit permissions for the Loop app.</p> <p>Open the Apple Health app ( icon)</p> <ul> <li>Find the toolbar at the bottom that says Sharing</li> <li>Scroll to the bottom of Sharing</li> <li>Select Apps</li> <li>Select Loop</li> </ul> <p>At this point, you can review and modify the settings.</p>"},{"location":"faqs/apple-health-faqs/#cgm-health-permissions","title":"CGM Health Permissions","text":"<p>If you choose to, you may add permission for your CGM app to write to Apple Health. Loop will read glucose from Apple Health, but only while the phone is unlocked and the app is open.</p> <p>Note that if a glucose value is added to Apple Health \"now\", Loop will pick up that value and use it for the glucose prediction. This can happen with a finger-stick entry or some Libre third-party apps, but not with Dexcom, which has a 3-hour delay before writing to Health.</p>"},{"location":"faqs/apple-health-faqs/#dexcom","title":"Dexcom","text":"<p>The Dexcom app for both G6 and G7 has a 3-hour delay before writing to the Health app. If you tap Glucose data in Health, scroll to the bottom to select <code>Show All Data</code> and then scroll back in time, notice the <code>Loop</code> icon is replaced by either the <code>G6</code> or <code>G7</code> icon starting 3 hours ago.</p> <p>If you happen to wear a Dexcom G6 and G7 sensor at the same time, then starting 3 hours in the past, both sensor traces will show up in the <code>Loop Glucose chart</code>.</p> <p>Loop only uses data from the CGM you selected as your CGM for closed-loop insulin delivery, but don't be surprised at the double trace if you want to wear both during the transition from G6 to G7.</p> <p>Add Permission to Health for Dexcom to Write Glucose</p> <p>If either the G6 or the G7 has permission to write to Apple Health, then Loop will delete the Loop glucose data in Apple Health that are older than 3 hours and newer than 1 week. The Dexcom app will write its glucose values to Health when each value is 3 hours old.</p> <p>If you transition from G6 to G7 (or alternate back and forth), be sure that at least the app you are currently using has permission to write to health. (I inadvertently forgot to turn on health permission for G7. By the time I noticed, I had a gap of several days in my Apple Health storage of glucose values.)</p>"},{"location":"faqs/apple-health-faqs/#libre","title":"Libre","text":"<p>There are several choices for reading Libre sensors.</p> <p>With <code>Loop dev</code> (will be <code>Loop 3.4.x</code> after release), LibreTransmitter is integrated with the <code>Loop</code> app.</p> <p>The frequent updates (1-minute glucose data) provided by Libre did cause some issues with released versions (<code>Loop 3.0</code> and <code>Loop 3.2.x</code> with customizations that use various third-party apps to read the Libre). These were fixed initially by modifying the third-party apps to limit how frequently they supplied glucose data.</p> <p>With <code>Loop dev</code> (will be <code>Loop 3.4.x</code> after release), the Loop app only initiates a closed-loop cycle automatically following a new glucose value if it has been more than 4.2 minutes since the last one.</p> <p><code>Loop 3.0</code> and <code>Loop 3.2.x</code> versions do not have that limitation on how frequently Loop responds to a new glucose reading. There is a Customization that incorporates the 4.2 minute interval check which can be applied to Loop 3.2.2.</p>"},{"location":"faqs/apple-health-faqs/#how-do-i-change-glucose-units","title":"How Do I Change Glucose Units?","text":"<p>The glucose units (mg/dL or mmol/L) Loop uses match what is in Apple Health. Once you connect a device that reports glucose to the phone, make sure the units match the device. Note - you can change units for Dexcom Share and it translates units for you - not sure about other devices.</p> <ul> <li>These instructions to change Blood Glucose units are for iOS 15<ul> <li>Select the Health app (Heart icon)</li> <li>There's a toolbar at the bottom - select Browse</li> <li>Scroll to find Vitals</li> <li>Select Blood Glucose</li> <li>Scroll to the bottom and select Unit</li> <li>Tap on Unit, if it isn't right, and select the correct units</li> <li>While you are there - go on and select Blood Glucose as a Favorite - it will be easier to find next time</li> </ul> </li> </ul>"},{"location":"faqs/cgm-faqs/","title":"CGM FAQs","text":""},{"location":"faqs/cgm-faqs/#which-cgms-are-supported-by-the-loop-app","title":"Which CGMs are supported by the Loop app?","text":"<p>The next release of the Loop app and the current Loop-dev branch includes Libre support in addition to the CGM listed below.</p> <p>The Loop app supports G5, G6, G7, Dexcom ONE, Dexcom Share, Nightscout and the Medtronic CGM systems compatible with Looping pumps.</p> <p>Libre Support (for some Libre sensors):</p> <ul> <li>Loop dev adds LibreTransmitter</li> <li>Loop and Learn: Customization</li> </ul> <p>There are more details on the Compatible CGM page.</p>"},{"location":"faqs/cgm-faqs/#do-i-need-wait-for-a-new-sensor-session-to-start-loop","title":"Do I need wait for a new sensor session to start Loop?","text":"<p>No, you can start Looping mid-sensor session. There's no need to do anything special with regards to your CGM session when starting or ending the Loop app.</p>"},{"location":"faqs/cgm-faqs/#what-do-i-do-when-sensor-is-in-warm-up","title":"What do I do when sensor is in warm-up?","text":"<p>The Loop app will stop automatically adjusting insulin when the most recent glucose value is older than 15 minutes.  This is indicated by seeing three dashes in place of the glucose reading on the HUD.</p> <ul> <li>A HUD status row message of <code>No Recent Glucose</code> is displayed, making it easier to add the fingerstick value directly in Loop, which also saves it in Apple Health</li> </ul> <p>With no recent glucose readings, your pump returns to the scheduled basal delivery (within 30 min or less).</p> <p>Loop continues to accept carb entries and manual bolus commands. Manual Temp Basal can also be commanded.</p>"},{"location":"faqs/cgm-faqs/#dexcom-g7-warmup","title":"Dexcom G7 Warmup","text":"<p>The Dexcom G7 begins warming up as soon as you insert the device and completes in less than half an hour. Many Loopers use the combination of this warmup upon insertion and the 12-hour grace period offered by the G7 to have continuous CGM readings with no gap.</p> <ul> <li>During the 12-hour grace period, start the next sensor but do not connect it to your G7 app on your Looping phone</li> <li> <p>After waiting for the sensor to settle, stop the old sensor and connect to the new sensor</p> <ul> <li>The G7 app will show both traces as shown in the graphic below with about 9 hours of settle time<ul> <li>The new sensor data is added to the graph along with old sensor readings</li> <li>You cannot see the new sensor until you transition to using it</li> </ul> </li> </ul> <p></p> <ul> <li>By looking at the trace overlap, you can decide how much you trust the new sensor</li> </ul> </li> </ul>"},{"location":"faqs/cgm-faqs/#what-do-i-do-when-i-switch-dexcom-transmitters","title":"What do I do when I switch Dexcom transmitters?","text":"<p>When you change transmitters (prior to Dexcom G7), you will need to update the transmitter ID in your Loopsettings. The instructions for Dexcom are provided below:</p> <ul> <li>In Loop, select the <code>Delete CGM</code> button at the very bottom of the CGM info page<ul> <li>You cannot just edit the line with your old transmitter ID</li> </ul> </li> <li>It's a good idea to go into your phone Bluetooth settings and delete the old Dexcom transmitter<ul> <li>The transmitter starts with Dexcom and ends with the last 2 characters of your old transmitter ID</li> <li>Tap on the (i) next to <code>Not Connected</code> and select <code>Forget This Device</code></li> </ul> </li> <li>Follow the Dexcom instructions for pairing the new transmitter</li> <li>After pairing completes with Dexcom:<ul> <li>In Loop, add CGM and select the Dexcom system again</li> <li>Enter the new transmitter ID</li> <li>If you're unsure where to find your transmitter ID, see Where to get the Transmitter ID for Dexcom G6?</li> </ul> </li> </ul> <p></p> <p>If you don't update your transmitter ID when you change active transmitters, and you included your Dexcom share credentials, then the Loop app uses your Dexcom Share server to get your CGM data and will not work without cell or wifi connection. When the Loop app is using data from Dexcom Share servers, a small cloud will appear above the BG reading in the Loop app and should tip you off that maybe you forgot to update your transmitter ID. It's best not to enter Share Credentials. This makes it really obvious that you need to update the CGM settings in the Loop app at transmitter change time.</p>"},{"location":"faqs/cgm-faqs/#dexcom-g7","title":"Dexcom G7","text":"<p>With Dexcom G7, the Loop app automatically picks up the active sensor/transmitter pair from the Dexcom G7 app on the phone. Once Dexcom G7 is added to the Loop app as the CGM, the Looper does not need to do anything to the Loop app after selecting the new sensor/transmitter pair in the Dexcom G7 app.</p>"},{"location":"faqs/cgm-faqs/#dexcom-g5-g6-and-one","title":"Dexcom G5, G6 and ONE","text":"<p>The diagram below illustrates the steps needed to switch transmitters on Dexcom G5, G6, and ONE (for the version of ONE based on G6). This typically needs to be done every three months when a new transmitter is started.</p> <pre><code>sequenceDiagram\n    actor       user     as User\n    participant dexcom   as Dexcom App\n    participant loop_app as Loop App\n\n    autonumber\n    user     -&gt;&gt;  loop_app: Delete CGM\n    user     -&gt;&gt;  dexcom:   Stop old Sensor\n    activate      dexcom\n    Note over     dexcom:   Switching sensors and transmitters... \u23f1\ufe0f\n    user     --&gt;&gt; user:     Remove old Sensor and old Transmitter\n    user     -&gt;&gt;  dexcom:   Enter/Scan new Transmitter ID\n    user     -&gt;&gt;  dexcom:   Enter/Scan new Sensor Code\n    user     --&gt;&gt; user:     Insert new Sensor then attach new transmitter\n    user     -&gt;&gt;  dexcom:   Pair then Start new Sensor\n    deactivate    dexcom\n    dexcom   --&gt;&gt; user:     New Sensor warming up... \n    activate      dexcom\n    Note over     dexcom:   New sensor warmup... \u23f1\ufe0f\n    user     -&gt;&gt;  loop_app: Add CGM\n    user     -&gt;&gt;  loop_app: Enter new Transmitter Serial Number\n    user     -&gt;&gt;  loop_app: Enable Remote Upload\n    dexcom   --&gt;&gt; user:     New Sensor operational\n    deactivate dexcom</code></pre>"},{"location":"faqs/cgm-faqs/#can-i-use-libre-sensors-with-a-reader-like-miao-miao","title":"Can I use Libre sensors with a reader like Miao Miao?","text":"<p>If you use Loop dev code, then any Libre sensor supported by LibreTransmitter can be used with the Loop app.</p> <p>See Which CGMs are supported by the Loop app?.</p>"},{"location":"faqs/cgm-faqs/#can-i-use-eversense","title":"Can I use Eversense?","text":"<p>There is a method to upload Eversense to Nightscout using an Android phone, but there is no method to read an Eversense directly with an iPhone at this time.</p> <p>You can use Nightscout as a CGM with Eversense, but that requires internet access.</p>"},{"location":"faqs/cgm-faqs/#can-the-loop-app-read-cgm-data-from-nightscout","title":"Can the Loop app read CGM data from Nightscout?","text":"<p>Yes.</p>"},{"location":"faqs/cgm-faqs/#what-other-cgm-apps-can-be-used-with-loop","title":"What other CGM apps can be used with Loop?","text":"<p>If you are willing to build a development version of Loop, the dev branch incorporates LibreTransmitter into the Loop app itself. Please read about Loop Development before building dev and using the dev app.</p> <p>You can add xDrip4iOS and GlucoseDirect as a CGM option to the Loop app by applying a code customization.</p> <p>Please read the docs for xDrip4iOS and Glucose Direct. You must build these apps yourself to Loop; you cannot use the TestFlight pre-built versions.</p>"},{"location":"faqs/glossary/","title":"Glossary","text":"<p>Each item in the glossary is also a Tooltip. The word or phrase is repeated in parentheses to assist those using Google Translate.</p> <p>When Google Translate is selected:</p> <ul> <li>Tooltips, indicated by dashed underline, continue to be shown in English</li> <li>On the Glossary page<ul> <li>The first instance (in bold) remains in English</li> <li>The second instance (in parentheses) is translated to your selected language</li> </ul> </li> </ul> <p>Actions\u00a0 (Actions): a custom application for the GitHub Actions platform that performs a complex but frequently repeated task; specifically used to build Loop from a browser</p> <p>Activated\u00a0 (Activated): for Omnipod: time at which insulin was injected into pod and 2 beeps were heard</p> <p>Anchor Links\u00a0 (Anchor Links): any header on a LoopDocs page can be used as a link, tap on the paragraph symbol at the end of the header to view the link in the URL</p> <p>API_SECRET\u00a0 (API_SECRET): password (min 12 characters) needed to access Nightscout Site</p> <p>API\u00a0 (API): Application Programming Interface</p> <p>APN\u00a0 (APN): Apple Push Notification service, required for issuing remote command via Nightscout</p> <p>App Group\u00a0 (App Group): a unique identifier that Apple users for a given app, yours has your TEAMID embedded in it, group.com.TEAMID.loopkit.LoopGroup</p> <p>Automatic Bolus\u00a0 (Automatic Bolus): provide a fraction of the recommended insulin automatically with each updated CGM reading (default 40%)</p> <p>BAGE\u00a0 (BAGE): pump battery age on Nightscout site</p> <p>Big Sur\u00a0 (Big Sur): older version for operating system for Mac, macOS 11.x</p> <p>BLE\u00a0 (BLE): Bluetooth low energy, used for communication by phones, CGM and some pumps</p> <p>Build Select Script\u00a0 (Build Select Script): by running a command in your terminal, this menu-driven tool assists in building Loop</p> <p>branch\u00a0 (branch): version of code within a single repository or workspace repository</p> <p>CAGE\u00a0 (CAGE): cannula (or pump site) age on Nightscout site</p> <p>carthage\u00a0 (carthage): a program that used to be required to build Loop - no longer needed</p> <p>Catalina\u00a0 (Catalina): older version for operating system for Mac, macOS 10.x</p> <p>Certificate\u00a0 (Certificate): Apple certificate is used to sign your iOS or Mac apps - tied to but different from your permanent Developer ID</p> <p>CGM\u00a0 (CGM): continuous glucose monitor, wearable medical device that measures and reports glucose in interstitial fluid</p> <p>Closed Loop\u00a0 (Closed Loop): Loop will make automated adjustments of insulin delivery using predictions based off user entries, settings, IOB and COB</p> <p>Open Loop\u00a0 (Open Loop): Loop will not make automated adjustments of insulin delivery but predictions and recommendation features are available</p> <p>clone\u00a0 (clone): create a copy of a repository on your computer including revision history and ability to update using git commands</p> <p>COB\u00a0 (COB): Carbs on Board, affects automated insulin delivery: the g of carbohydrates that Loop expects to be absorbed and uses for glucose prediction</p> <p>commit\u00a0 (commit): a formal change to files in a repository; each commit has an alphanumeric identifier (SHA-1)</p> <p>Config Vars\u00a0 (Config Vars): configuration parameters for a Nightscout Site</p> <p>Correction Factor\u00a0 (Correction Factor): how many points your blood sugar will drop for each unit of insulin; Loop calls this Insulin Sensitivity Factor (ISF)</p> <p>Correction Range\u00a0 (Correction Range): Loop recommends changes to basal and / or bolus to bring glucose predictions into this range</p> <p>CR\u00a0 (CR): Carb Ratio; how many grams of carbs are covered by one unit of rapid-acting insulin</p> <p>Delivery Limits\u00a0 (Delivery Limits): max bolus and max basal rates allowed by your therapy settings</p> <p>Developer Mode\u00a0 (Developer Mode): Extra security for iOS 16 and newer; this must be turned on to allow an app built from Xcode directly to the phone to run on a phone or watch</p> <p>DIA\u00a0 (DIA): Duration of Insulin Action, the full time insulin is active including a long, low-level tail</p> <p>DIY\u00a0 (DIY): Do it yourself, a common acronym for the open-source software community (and the maker community)</p> <p>Dosing Strategy\u00a0 (Dosing Strategy): chosen method for increased insulin dosing: (1) High Temp Basal or (2) Automatic Bolus with scheduled basal</p> <p>dynos\u00a0 (dynos): used to reboot a Nightscout Site</p> <p>EmaLink\u00a0 (EmaLink): radio-frequency device Loop uses to control Eros pods (aka. Gen 3) and older Medtronic pumps</p> <p>EGP\u00a0 (EGP): Endogenous Glucose Production: glucose produced by the body from its reserves (mainly glycogen in the liver)</p> <p>Event History\u00a0 (Event History): record of pump events (bolus or temp basal) reported and used by Loop</p> <p>Expiration Date\u00a0 (Expiration Date): your Loop app has a finite life, the app warns you starting 3 weeks before the expiration date</p> <p>fastlane\u00a0 (fastlane): used as part of the github Build Action method that enables building Loop without a Mac computer or Xcode</p> <p>Finder\u00a0 (Finder): graphical folder and file display on Mac</p> <p>fork\u00a0 (fork): a copy of code in a github repository other than the original</p> <p>GBPA\u00a0 (GBPA): Glucose Based Partial Application: modification to Automatic Bolus Dosing Strategy</p> <p>GIF\u00a0 (GIF): Graphics Interchange Format (GIF) can be used for small animations and low-resolution video clips</p> <p>git\u00a0 (git): a tool for version control</p> <p>GitHub\u00a0 (GitHub): an online service for storing repositories, accessible from a browser</p> <p>github.com\u00a0 (github.com): an online service for storing repositories, accessible from a browser</p> <p>GitHub Personal Access Token\u00a0 (GitHub Personal Access Token): used to enable Browser Build of Loop</p> <p>Glucose Chart\u00a0 (Glucose Chart): Display of measured and predicted glucose values</p> <p>Glucose Safety Limit\u00a0 (Glucose Safety Limit): Loop will not suggest insulin delivery when glucose prediction (in next 3 hours) goes below this limit; in Loop 2 this was called Suspend Threshold</p> <p>GMT\u00a0 (GMT): Greenwich Mean Time is mean (average) solar time at 0 degrees longitude, see UTC</p> <p>Guardrails\u00a0 (Guardrails): limits in the code for user selected settings, recommended and absolute limits are provided</p> <p>Hamburger Menu\u00a0 (Hamburger Menu): three parallel lines that, when tapped, open a new menu</p> <p>HUD\u00a0 (HUD): Heads-Up Display at top of Loop main screen, phone in portrait mode</p> <p>ICE\u00a0 (ICE): Insulin Counteraction Effect - Loop models the expected glucose change based on carbs entered, absorption time and your settings; and adjusts based on measured glucose</p> <p>Identifiers\u00a0 (Identifiers): names of modules found on your Apple Developer Identifiers page that are required for GitHub build method</p> <p>IOB\u00a0 (IOB): Insulin on Board, affects automated insulin delivery: the current active insulin (above or below the basal rate) that Loop calculates and uses for glucose prediction</p> <p>iOS\u00a0 (iOS): operating system used by Apple Mobile devices (iPhone, iPod, iPad)</p> <p>IRC\u00a0 (IRC): Integral Retrospective Correction: Optional alternative to Retrospective Correction that integrates glucose deviations over a longer time frame</p> <p>ISF\u00a0 (ISF): Insulin Sensitivity Factor; how many points your blood sugar will drop for each unit of insulin; sometimes called Correction Factor</p> <p>Issue\u00a0 (Issue): On github - a formal method to report a problem, either code behavior or documentation</p> <p>JSON\u00a0 (JSON): JavaScript Object Notation; a standard data interchange format that is text-based and human readable</p> <p>macOS\u00a0 (macOS): operating system for Mac computer</p> <p>Lock your Phone\u00a0 (Lock your Phone): click the button on the side of the phone to lock it - prevent accidental touch, i.e., accidental Loop command</p> <p>Loop 3\u00a0 (Loop 3): Latest release with major updates</p> <p>Loop Cycle\u00a0 (Loop Cycle): typically 5 minutes: new CGM reading, prediction update, pump update and, if in Closed Loop, dosing update if needed</p> <p>Loop Caregiver\u00a0 (Loop Caregiver): An app you can build to provide remote commands to <code>Loop</code> using <code>Nightscout</code></p> <p>Loop Follow\u00a0 (Loop Follow): An app you can build to provide extra alarms and views of important information - can use Dexcom Share or <code>Nightscout</code> to include <code>Loop</code> information</p> <p>Loop\u00a0 (Loop): With a capital L, Loop is one of several do-it-yourself artifical pancreas systems</p> <p>Match-Secrets\u00a0 (Match-Secrets): a private repository you must create in your github account, stores keys required to build with github Build Actions</p> <p>MTB\u00a0 (MTB): Manual Temp Basal: user initiated temporary basal, Omnipod Common feature</p> <p>MDT\u00a0 (MDT): common abbreviation for Medtronic pumps</p> <p>modal\u00a0 (modal): message or alert appearing in front of app that must be acknowledged to return to app</p> <p>Modules\u00a0 (Modules): the Loop code uses a number of modules to handle different components of the entire app</p> <p>Monterey\u00a0 (Monterey): operating system for Mac, macOS 12.x</p> <p>Nightscout\u00a0 (Nightscout): a personal website used to view your glucose and diabetes management data, <code>Loop</code> can upload to <code>Nightscout</code></p> <p>Onboarding\u00a0 (Onboarding): familiarize new, and existing, Loop users with settings in Loop 3 and ensure the Therapy Settings are all entered and are within safety guardrails</p> <p>Omnipod\u00a0 (Omnipod): Insulet tubeless insulin pump; Loop supports Eros (with RileyLink) and DASH.  Eros is also known as Classic, UST400, and System.</p> <p>OrangeLink\u00a0 (OrangeLink): radio-frequency device Loop uses to control Eros pods (aka. Gen 3) and older Medtronic pumps</p> <p>OTP\u00a0 (OTP): one-time password, this is used to enable caregivers to securely execute remote commands to a Looper's phone</p> <p>Override\u00a0 (Override): a modification to Loop settings that can change the correction range, the sensitivity (basal, ISF and CR) or both</p> <p>Package Dependencies\u00a0 (Package Dependencies): packages that must be downloaded by Xcode (once) to build the app after downloading the LoopWorkspace to your computer</p> <p>pill\u00a0 (pill): on Nightscout, small boxes with information, tap for extra details</p> <p>PR\u00a0 (PR): Pull Request - a formal method to request changes to a repository</p> <p>prebolus\u00a0 (prebolus): take some or all of a meal bolus before eating</p> <p>Pre-Meal Range\u00a0 (Pre-Meal Range): modify the correction range for up to one hour by tapping on an icon in the toolbar</p> <p>Provisioning Profile\u00a0 (Provisioning Profile): associates your app with your Developer ID and limits app lifetime to 1 year (paid) or 1 week (free)</p> <p>Pull Request\u00a0 (Pull Request): formal method to request changes to a repository</p> <p>QR\u00a0 (QR): a machine-readable code consisting of an array of black and white squares</p> <p>Quit the Loop App\u00a0 (Quit the Loop App): quit out of the app - different from closing the app - typically you swipe up in the app switcher</p> <p>repository\u00a0 (repository): contains project files and each file's revision history</p> <p>RileyLink\u00a0 (RileyLink): radio-frequency device Loop uses to control Eros pods (aka. Gen 3) and older Medtronic pumps</p> <p>RC\u00a0 (RC): Retrospective Correction: part of the Loop model that considers actual glucose compared to earlier predictions</p> <p>SAGE\u00a0 (SAGE): sensor age on Nightscout site</p> <p>Secrets\u00a0 (Secrets): a method to securely embed personal information into your fork of LoopWorkspace to enable GitHub to have access required to build Loop</p> <p>TEAMID\u00a0 (TEAMID): One of 6 Secrets: Apple Developer account member number</p> <p>FASTLANE_ISSUER_ID\u00a0 (FASTLANE_ISSUER_ID): One of 6 Secrets: the issuer ID is associated with your Apple Developer ID and never changes</p> <p>FASTLANE_KEY_ID\u00a0 (FASTLANE_KEY_ID): One of 6 Secrets: Key ID provided when you create an API key in App Store Connect; it is associated with the FASTLANE_KEY</p> <p>FASTLANE_KEY\u00a0 (FASTLANE_KEY): One of 6 Secrets: Really long key (several lines); it and FASTLANE_KEY_ID are generated together</p> <p>GH_PAT\u00a0 (GH_PAT): One of 6 Secrets: Generated with your GitHub account; set it to never expire</p> <p>MATCH_PASSWORD\u00a0 (MATCH_PASSWORD): One of 6 Secrets: password you make up but must save and cannot change without deleting the Match-Secrets repository</p> <p>SHA-1\u00a0 (SHA-1): Secure Hash Algorithm 1; used to generate an alphanumeric code for commits in git (github)</p> <p>Sign Targets\u00a0 (Sign Targets): associate a Developer ID with an app; must sign all targets for a given app</p> <p>submodules\u00a0 (submodules): for Loop, submodules are repositories defined in the Workspace repository that are required to build the app</p> <p>Table of Contents\u00a0 (Table of Contents): (TOC) is the list of level 2 and 3 headers on a given page; the title at the top of the page is a level 1 header</p> <p>Temp Basal Only\u00a0 (Temp Basal Only): provide the recommended insulin automatically using an increase in temp basal over half an hour (limited by max temp basal)</p> <p>Temp Basal\u00a0 (Temp Basal): modify the scheduled basal rate for a pump</p> <p>Terminal\u00a0 (Terminal): interface for entering commands to the computer</p> <p>TestFlight\u00a0 (TestFlight): a method to distribute apps without direct connection</p> <p>Therapy Settings\u00a0 (Therapy Settings): Basal Rates, ISF, CR, correction and safety ranges and delivery limits</p> <p>Tokens\u00a0 (Tokens): on Nightscout, configure access permissions using tokens</p> <p>Tooltip\u00a0 (Tooltip): brief definitions provided for important terms and abbreviations on the website</p> <p>URL\u00a0 (URL): website address (Uniform Resource Locator)</p> <p>UTC\u00a0 (UTC): Coordinated Universal Time is a time standard for civil time and time zones worldwide</p> <p>Ventura\u00a0 (Ventura): operating system for Mac, macOS 13.x</p> <p>watchOS\u00a0 (watchOS): Apple watch operating system; must be compatible with phone iOS</p> <p>workflow\u00a0 (workflow): a set of instructions to GitHub to perform an action; the instruction files are found in the .github/workflows folder of the repository</p> <p>Workspace\u00a0 (Workspace): a grouping of several repositories into a complete package</p> <p>Xcode Preferences\u00a0 (Xcode Preferences): older name for Xcode Settings</p> <p>Xcode Settings\u00a0 (Xcode Settings): as of Xcode 14, Xcode menu uses Settings instead of Preferences</p> <p>Xcode\u00a0 (Xcode): program used to build an app</p>"},{"location":"faqs/loop-faqs/","title":"Loop FAQs","text":""},{"location":"faqs/loop-faqs/#what-do-i-need-to-loop","title":"What do I need to Loop?","text":"<p>Please click on the Requirements link.</p>"},{"location":"faqs/loop-faqs/#can-i-download-the-loop-app-from-the-app-store","title":"Can I download the Loop app from the App store?","text":"<p>No. The Loop app is not available for download. You must build your own Loop app. The Loop app app will not be available in the Apple App store because that would be distribution of a medical device, and we are not in that \"business\".  You can build yourself, but we are not distributors.</p> <p>Each step needed to successfully build your Loop app is found in these docs. The harder part will be having the patience to read all the documents before you start. New Loop users are so excited to get started that they often skip reading all the great info that these docs contain. As you begin the build...please include time to read the documents that follow what happens after you successfully build your Loop app.</p> <p>If you have any questions, use the Search feature to find topics in LoopDocs.</p>"},{"location":"faqs/loop-faqs/#can-i-use-an-android-phone-or-ipad-for-loop","title":"Can I use an android phone or iPad for Loop?","text":"<p>Loop requires an Apple device. Older iPads do not support Apple Health which is required for Loop. It may be possible with newer iPads and newer iOS, but this has not been tested.</p> <p>There is open source software that runs on Android phones. Check out AndroidAPS Documention.</p>"},{"location":"faqs/loop-faqs/#do-i-have-to-be-tech-smart-to-build-loop","title":"Do I have to be \"tech-smart\" to build Loop?","text":"<p>No. You do not need any experience in code or computers to build Loop. If you already own a computer or tablet and an iPhone, you already have the required level of experience. Beyond that, simply read the directions slowly and diligently...all the information you will need are in these documents.</p> <p>Often times the non-tech people do better than the tech people in building Loop. Why? Because the non-tech people take the time to read slowly and look at the screenshots in the directions. The tech people often skim and miss steps...which then leads to build errors that have to be retraced and fixed.</p>"},{"location":"faqs/loop-faqs/#is-there-a-cheat-sheet-for-a-school-nurse-to-use","title":"Is there a cheat sheet for a school nurse to use?","text":"<p>Sure, you can give this one a try. School nurse's cheat sheet download</p>"},{"location":"faqs/loop-faqs/#how-long-does-it-take-to-build-loop","title":"How long does it take to build Loop?","text":"<p>The answer is varied, but a few hours from start to finish, depending on where you are starting and how comfortable you are with your computer.</p> <p>Start at the Requirements Overview to decide which build method you wish to use. Each method starts with an overview page.</p> <p>Once you choose your method, you can break the required steps into shorter bits of effort.</p> <ul> <li>The Browser Build method has suggested breakpoints as you work through configuring for the first time</li> <li>The Mac Build method is broken into different pages for steps needed for the Mac and the actual build process</li> </ul>"},{"location":"faqs/loop-faqs/#does-the-loop-app-cost-money","title":"Does the Loop app cost money?","text":"<p>Yes, there are some costs, beyond the obvious costs of owning a pump and CGM.</p> <ul> <li>If you have a pump that requires a RileyLink Compatible Device, expect to spend $150 each (or find a used one). You should have two, one as a spare.</li> <li>Most people use a paid Apple Developer Account ($99/year)<ul> <li>With a paid developer account, you can build using the Build with Browser; no Mac required</li> </ul> </li> <li>If you build on a Mac using Xcode Build with Mac, you need a Mac or a PC with Intel chips on which you include a virtual Mac<ul> <li>The Mac must be kept up to date with recent operating system</li> <li>The Xcode app (from from Apple) must also be updated regular</li> </ul> </li> </ul> <p>There are no other costs, ongoing or initial, to use the Loop app beyond what you already pay for your CGM, pump supplies and insulin.</p>"},{"location":"faqs/loop-faqs/#rileylink-options","title":"RileyLink Options","text":"<p>This is not required for DASH users.</p> <p>There are several options for RileyLink Compatible Devices at this time.  They typically cost around $150. This is a one-time cost and the devices should last for years (unless it goes swimming, goes through the wash, gets run over by a car, etc.). It's fine to buy one device and make sure you want to Loop, but if you can afford it, go on and get two or get two different kinds. Once you Loop, you'll want a backup.</p> <p>Many used devices are available in the community. You may find posts for resale on this Facebook Group Looping in a time of covid. This is a private FB group where you must agree to the rules.</p> <p>Posts offering to buy or sell items in the support FB groups like The Looped Group, Loop and Learn or Little Loopers will be immediately taken down, or you will be directed to the appropriate location and comments will be turned off. FB can shut down groups without warning if they detect sales and the support groups are too important to risk.</p>"},{"location":"faqs/loop-faqs/#free-developer-account-options","title":"Free Developer Account Options","text":"<p>The Apple Developer License can be done for free, however, you will have to rebuild your Loop app every 7 days and you must use a computer with Xcode, Build with Mac. That could get very tedious. The $99 annual Apple Developer program enrollment is an excellent investment.</p>"},{"location":"faqs/loop-faqs/#do-i-need-to-own-my-own-apple-computer","title":"Do I need to own my own Apple computer?","text":"<p>You no longer need to own an Apple computer - see Build with Browser.</p> <p>If you chose Build with Mac, then you still don't have to own an Apple computer, but you do need to at least borrow one - or you can build using a virtual Mac if you have a PC with Intel chips (see next section).</p> <p>If you are borrowing an Apple computer, look at the required minimum settings associated with your iPhone Compatible Computer and Xcode Version. It would be really good to have the longer-term ability to borrow that computer again for updating Loop later when needed.</p>"},{"location":"faqs/loop-faqs/#can-i-use-a-pc-or-windows-computer-to-build","title":"Can I use a PC or Windows computer to build?","text":"<p>You can build the Loop app using just a browser on any device: Build with Browser.</p> <p>If you want to use Build with Mac, there is a hacked way of installing macOS on a Windows computer called a Virtual Machine. This link provides some helpful information. This Virtual Machine method will not work on PCs that have AMD processors, only Intel. Double-check that your computer uses an Intel processor before attempting the virtual machine method. If you want to try this, there are mentors on The Looped Facebook Group who can assist.</p>"},{"location":"faqs/loop-faqs/#how-often-do-i-need-to-get-on-the-computer-for-loop","title":"How often do I need to get on the computer for Loop?","text":"<p>When you use the Browser Build method, you need to access a browser at least once every 90 days to Update with Browser. This is simple enough to do that you can do the steps on your phone in just a few minutes. Several people are already working on automated methods so that won't be required, but a manual Build Actions step is required for now.</p> <p>When you use Build with Mac: the short answer is (1) when you first build and (2) once per year minimum after that. (If you decide to use a free Apple Developer Account, you will need to get on the computer every 7 days.)</p> <p>Loop code is updated periodically to include new features and bug fixes. When those updates are released, you'll need access to a browser or an Apple computer again to update your Loop app.  </p> <p>Loop updates are not available through the iPhone's app store...instead you do the app update yourself</p> <ul> <li>If using Browser build method: use this link: Update with Browser </li> <li>If using build with Mac method: use this link: update instructions</li> </ul> <p>In general, there are updates to the Loop app released a few times a year - these can occur more frequently after a major release.</p>"},{"location":"faqs/loop-faqs/#will-i-need-to-build-a-new-loop-app-if-i-switch-between-medtronic-and-omnipod","title":"Will I need to build a new Loop app if I switch between Medtronic and Omnipod?","text":"<p>No. The Loop app lets you move between different pump types from within the same Loop app. See Change Pump Type.</p>"},{"location":"faqs/loop-faqs/#can-i-use-my-apple-developer-account-to-build-for-others","title":"Can I use my Apple Developer account to build for others?","text":"<p>If there is more than one Looper in the family, you only need to have one Apple Developer ID and only one annual payment. The developer must be an adult.</p> <ul> <li> <p>With the Build with Browser method, you just add each Looper to your TestFlight test group and they get updates whenever you Build a new version on GitHub.</p> </li> <li> <p>With the Build with Mac method, you just plug into your computer each phone on which you want to build the Loop app. (New Xcode and newer iOS phones allow you to build across WiFi after the initial connection with Xcode.)</p> </li> </ul> <p>It's a good idea to let someone else in the family know how to build and have access to your Apple password (and for Browser Build, your GitHub password) in case you're out of town. It's also a good idea to build the Loop app on a backup phone especially for travel. </p> <p>The Apple Developer ID and the Apple ID are two different things. PLEASE read this: Loopers Need Their Own Apple ID.</p>"},{"location":"faqs/loop-faqs/#what-happens-when-i-switch-apple-developer-id","title":"What happens when I switch Apple Developer ID?","text":"<p>The Loop app on the phone is different if the build uses a different Apple Developer ID from the one currently on the phone. So if the Apple Developer ID used for a new Loop build is different from the one used for the existing Loop app, there will be two Loop apps on the phone.  The Looper will have to on-board the new app, enter all the settings again and delete the old app.</p>"},{"location":"faqs/loop-faqs/#can-i-use-someone-elses-apple-developer-account","title":"Can I use someone else's Apple Developer account?","text":"<p>It's best that you build your own Loop app using your own Apple Developer ID.</p> <p>One developer account can only be \"linked\" to a limited number of devices. So one person \"loaning out\" their developer license to a lot of people will quickly exceed the number of allowed devices. In those cases, that person will be told they need to revoke the certificates on some devices (essentially dropping old ones to make room for new ones). If they revoke your device certificate (and they can do that without you knowing through their developer portal), your Loop app will immediately stop working and not even open.</p> <p>Your Loop app will also die immediately if their developer account is not renewed or expires.</p> <p>Moral of the story, out of all the ways to save money...borrowing someone's developer account is not a good place to save money. You don't want your Loop app to suddenly stop working.</p>"},{"location":"faqs/loop-faqs/#how-can-i-find-a-compatible-pump-supplies","title":"How can I find a compatible pump? supplies?","text":"<p>You can use Omnipod DASH and Eros pumps with the Loop app. You do not need the Omnipod Personal Diabetes Manager (PDM), just the pod supplies. Your insurance or pharmacy coverage may cover some of the cost. See Which pods work with the Loop app? for more details.</p> <p>There is a whole page with detailed information about Medtronic pumps; how to find them, how to find supplies, and assessing whether your Medtronic pump is compatible. Please check out that page for more info.</p> <p>Some Looping equipment can be found on this Facebook Group Looping in a time of covid. This is a private FB group where you must agree to the rules.</p>"},{"location":"faqs/loop-faqs/#can-i-pay-someone-else-to-do-build-the-app-for-me","title":"Can I pay someone else to do build the app for me?","text":"<p>We do not know whether someone who builds the app for you incurs legal responsibility if something goes wrong while you are using a version they built for you.</p> <p>There are a few companies that provide the Loop app as a service.</p> <p>Best Practice: Learn to Build</p> <p>You are strongly encouraged to build the Loop app for yourself. </p> <ul> <li>No links to providers who build the Loop app as a service  are found in LoopDocs</li> <li>If you choose to use such a service, before you begin, you should:<ul> <li>Read all of LoopDocs</li> <li>Know how to Set up, Operate and Troubleshoot Loop</li> <li>These steps are important for your safety</li> </ul> </li> </ul>"},{"location":"faqs/loop-faqs/#what-if-i-lose-my-rileylink-compatible-device","title":"What if I lose my RileyLink Compatible Device?","text":"<p>For Medtronic users, you simply go back to old school pump use until you get a new RileyLink compatible device. You can either let your temp basal finish by itself (30 minutes or less) or cancel the temp basal on the pump's menu. For bolusing, you'd go back to using the pump's bolus commands. When you get a device (either finding your old one or getting your backup device out) and the Loop app running again, you'll want to do one thing. Enter in any carbs to the Loop app that you may have eaten in the recent past that could still be affecting blood glucose. While the Loop app will read whatever insulin deliveries had happened while the RileyLink compatible device was missing, it will not read any carbs you entered into the pump...so make sure to add those to the Loop app and backdate them to the time they were eaten. That will help make the transition back to closed loop smoother.</p> <p>For Pod users, your Pod will finish any currently running temporary basal rate (maximum of 30 minutes) and then revert back to your scheduled basal rate. Without a RileyLink compatible device, you will be receiving normal basals, but will need to pull out pens/syringe for boluses. If you have a backup device, you can simply connect to the new device on the same Loop app and it will work with the existing pod session. If you don't have a backup device, you'll have to remove the pod and start a new pod paired with your PDM until you get a new device.</p>"},{"location":"faqs/loop-faqs/#what-if-i-lose-or-get-a-new-iphone","title":"What if I lose or get a new iPhone?","text":"<p>If you lose your phone - follow the same dosing protocol as if you lost your rileylink.</p> <p>When you get a new iPhone, you can plan ahead. There's a whole FAQs page about transferring your Loop information to a new phone. New Phone.</p>"},{"location":"faqs/loop-faqs/#what-about-other-pumps-when-will-they-loop","title":"What about other pumps? When will they Loop?","text":"<p>Hey now...let's be grateful for what we have first. The ability to use the Loop app is the result of tremendous amounts of effort, time, and sacrifice by volunteers. Cracking the pumps for the Loop app use is a large undertaking. If and when another set of people spend a large amount of time figuring out other pumps, then they could conceivably be added to Loop. But you don't need to let us know that you'd love to see more pumps compatible with Loop. There is just an awful lot of work that needs to happen and it is neither quick nor easy.</p> <ul> <li>Tandem pumps are not compatible</li> <li>Omnipod DASH pods are compatible</li> <li>Omnipod 5 pods are not compatible</li> <li>Newer Medtronic pumps are not compatible</li> </ul>"},{"location":"faqs/loop-faqs/#can-i-have-more-than-one-loop-app-on-a-phone","title":"Can I have more than one Loop app on a phone?","text":"<p>Yes, this is technically possible. You can have multiple Loop apps built onto the same iPhone. However, having multiple Loop apps on a single phone may lead to unexpected conflicts that can negatively affect your Loop's ability to stay green (keep looping). Additionally, your Pod will only work on one Loop app at a time anyways. So for smooth looping, just keep one Loop app on any phone for looping use.</p>"},{"location":"faqs/loop-faqs/#will-i-be-able-to-the-loop-app-on-a-plane-or-in-the-mountains","title":"Will I be able to the Loop app on a plane? Or in the mountains?","text":"<p>Yes. The Loop app does not require internet or cell coverage to work. So long as the Loop user has Bluetooth enabled on the iPhone, then the CGM and DASH pod (or RileyLink for Eros or Medtronic pumps) will still be able to do their work with the Loop app and your pump/Pod.</p> <p>One exception - if you've chosen to use a CGM source that does require the internet, you will need to have cell or internet coverage. This ability is provided as a service to folks who cannot get their CGM data any other way. It is also a convenience for people testing the code.</p>"},{"location":"faqs/loop-faqs/#what-happened-to-freeaps","title":"What happened to FreeAPS?","text":"<p>FreeAPS hasn't really had an owner to develop it for several years, but many depended on it. Because of that, the Loop and Learn team kept it on life-support. It was updated in early 2023 to include DASH, but that was the last improvement. It is strongly recommended people switch to <code>Loop 3</code> or <code>iAPS</code>. Do not use an application without an owner.</p> <p>Many features people used with FreeAPS are now included in <code>Loop 3</code> or can be added with customization. The <code>dev</code> branch has Libre support, see Build Loop Dev.</p> <p>The addition of customizations has been simplified.</p> <ul> <li>If you build with a browser, refer to Customize with Browser</li> <li>If you build with a Mac, refer to Customize with Mac</li> </ul> <p>Please do not blindly apply customizations. First read the documentation provided at the links above carefully.</p>"},{"location":"faqs/new-phone/","title":"New Phone Tips","text":""},{"location":"faqs/new-phone/#overview","title":"Overview","text":"<p>Time Estimate</p> <p>At least a few hours.</p> <p>You can choose to keep Looping on the old phone and swap later. Most vendors give you more than a week to turn in your old device for credit.</p> <p>Phone Transition Overview - Detailed steps below</p> <p>Don't start right before a meal:</p> <ul> <li>Choose a time when Loop is stable and won't need much attention</li> </ul> <p>Keep your old phone (if you can, connected to WiFi) and use it for the Loop app:</p> <ul> <li>Make sure Apple Health from the old phone is uploading to the iCloud</li> <li>If you are using the old phone with your Loop app:<ul> <li>Keep the old phone connected to WiFi when convenient<ul> <li>The Loop app maintains a 7-day database on the phone and will upload when connected</li> </ul> </li> <li>You want the Apple Health records created by the Loop app on the old phone to transfer via the iCloud to the new phone</li> </ul> </li> </ul> <p>Two methods to transfer your phone information (plan for 1 hour, may be faster):</p> <ol> <li>Do direct phone-to-phone transfer<ul> <li>You will not be able to use your old or new phone during the transfer</li> <li>Both phones need to stay close to each other and on the same WiFi network</li> </ul> </li> <li>Use iCloud backup from old phone to transfer information to the new phone<ul> <li>You will not be able to use your new phone during the transfer</li> </ul> </li> </ol> <p>What happens after you transfer your phone information:</p> <ul> <li>Use your new phone for everything except the Loop app and your CGM app</li> <li>You can keep using your old phone to control your pump and read your CGM until you are ready to switch to the new phone</li> <li>The new phone has the Loop records up until the time the transfer started<ul> <li>If you change a pod on the old phone after the transfer<ul> <li>Plan to deactivate your pod on the old phone and pair the next pod on the new phone</li> </ul> </li> <li>If you change Dexcom on the old phone after the transfer<ul> <li>On the new phone, you will need to enter the new Transmitter number (G6) or wait for G7 to automatically connect</li> </ul> </li> <li>Glucose, Insulin and Carbohydrate records created on the old phone, after the transfer, will be transferred to the new phone via Apple Health - but this may be slow</li> </ul> </li> <li>Plan to be Open Loop when you decide to start using the Loop app on the new phone - the Glucose, Insulin and Carbohydrate records found on the old phone that occurred after the transfer begins will not be included in the Loop records sent to the new phone</li> </ul> <p>When ready to start using the new phone to control your app:</p> <ul> <li>First turn off Bluetooth on the old phone</li> <li>Review the IOB, COB and glucose trend on the old phone - that determines how long you need to run Open Loop on the new phone</li> <li>Then build Loop on the new phone<ul> <li>Browser Build: Open TestFlight and Install Loop<ul> <li>The TestFlight records were transferred to your new phone so no need to redeem a code</li> </ul> </li> <li>Mac Build: Plug the new phone into your computer<ul> <li>If you recently built to your old phone, you can use the same download - otherwise, you need to Download Loop</li> <li>Your new phone will have the same name as your old phone - might want to change the display names so the two phones are different so you don't get confused in Xcode</li> <li>You will have to trust your computer on your new phone (and watch)</li> <li>You will need to register your new phone (you can do this with Xcode)</li> <li>You may need to enable Developer Mode if it is not already on</li> <li>If you have trouble building, you should try to reboot phone, watch, quit Xcode, restart computer, delete old provisioning profiles and then ask for help</li> </ul> </li> </ul> </li> </ul> <p>Plan to stay in Open Loop until all Glucose, Insulin and Carbohydrate Apple Health records transfer:</p> <ul> <li>This can take hours</li> <li>Loop will pick up the missing records from Apple Health for insulin and glucose (but not carbohydrates)<ul> <li>If you upload to Nightscout or Tidepool, the carbohydrates entered with the old phone should be already uploaded so your record will be complete</li> </ul> </li> <li>If you have small IOB and COB and glucose is flat, you can probably enable closed loop on the new phone without waiting for the missing records</li> <li>If there are carbs entered on old phone that are still active, plan on a longer time open loop when you transition to the new phone</li> </ul> <p>Plan Ahead</p> <ul> <li>Choose when to change from old phone to new phone<ul> <li>Stable glucose</li> <li>No meals planned</li> </ul> </li> <li>Plan to use Open Loop after the transfer to allow recent Health records to transfer via iCloud</li> </ul>"},{"location":"faqs/new-phone/#steps-required","title":"Steps Required","text":"<p>Changing phones means you have to rebuild the Loop app onto the new phone. When you transfer information from your old phone to your new one, all your\u00a0Loop\u00a0information is included and the\u00a0Loop\u00a0icon will appear, but the app will not open until you install\u00a0Loop\u00a0from either TestFlight or Mac with Xcode. </p> <p>The records on the new phone are from the time you started the transfer from the old phone to the new phone. The more recent records are transferred via Apple Health. You may want to adjust carbs after the transfer because those are not read by the Loop app. But if you enter them again and you are uploading to Nightscout or Tidepool - they will show up twice. Best to have COB and IOB close to zero when you start using your new phone.</p> <p>Some people don't have access to their old phone. There are instructions for handling that on this page. It makes the whole process more stressful, but remember, pods continue to deliver basal rate and Medtronic pumps can be controlled on the pump itself. Use your backup plan until you can get\u00a0Loop\u00a0running on a new phone.</p>"},{"location":"faqs/new-phone/#forced-ios-update","title":"Forced iOS Update","text":"<p>When you change phones, Apple will force you to the latest iOS version available for your new phone.</p>"},{"location":"faqs/new-phone/#prepare-before-upgrade","title":"Prepare Before Upgrade","text":"<p>If you are using Dexcom, record the transmitter or sensor number in case it doesn't transfer</p> <ul> <li>G6: Record the Transmitter number (found in the G6 and the Loop app)</li> <li>G7: Record the 4-digit Sensor number (pairing code) found in the G7 app under Connections, Sensor</li> </ul> <p>If you still have your old phone, you can prepare before switching to the new phone.</p> <ul> <li>Be sure to record your\u00a0Loop\u00a0Settings (screenshots work well)</li> </ul> <p>If you don't have your old phone, hopefully you have an iCloud backup and can use that to transfer your information to your new phone.</p> <p>Keep the Old Phone Until the Loop app is Working on the New One</p> <p>Even if you plan to turn your old phone in for a rebate, you can ask to keep the old one for a week or two. Most vendors will agree to this.</p> <p>Update your old phone to the latest iOS the hardware supports - this simplifies the automatic transfer process Apple provides to move all your data and apps from your old phone to your new phone.</p> <p>New Phone Checklist for Build with Browser</p> <ul> <li>The Loop app will install from TestFlight onto the most recent iOS</li> <li>If a new version is available, we recommend updating and building to the latest, see Update with Browser</li> </ul> <p>New Phone Checklist for Build with Mac</p> <ul> <li>Are your Mac and Xcode versions compatible with the latest iOS version?</li> <li>If not, you need to install the correct versions on your Mac</li> <li>If you cannot do that, you should consider Build with Browser</li> </ul>"},{"location":"faqs/new-phone/#different-developer-id","title":"Different Developer ID","text":"<p>Different Developer ID</p> <p>If you need to build the Loop app with a different developer ID on the new phone, the settings and pump information will not transfer.</p> <ul> <li>The new app that you build with the new Developer ID will open and you can Onboard</li> <li>The old app will still be on the phone: find it and delete it to avoid confusion</li> </ul>"},{"location":"faqs/new-phone/#procure-a-new-phone","title":"Procure a New Phone","text":"<ol> <li>Procure the new phone and keep the old one (if possible)<ul> <li>Use the Old Phone until it is convenient to switch to the new phone</li> </ul> </li> <li>Transfer your information to your new phone. Your options are:<ol> <li>Use both devices with Quick Start to transfer from the old to the new phone</li> <li>Use an iCloud back-up for the transfer</li> <li>Let the new phone vendor help you</li> </ol> </li> </ol>"},{"location":"faqs/new-phone/#use-the-old-phone-until-ready","title":"Use the Old Phone until Ready","text":"<p>If you cannot keep the old phone, or it is not available, then skip ahead to the Use the New Phone.</p> <ul> <li>You can use the old phone to\u00a0Loop\u00a0until you are ready to switch</li> <li>Use WiFi with the old phone and use your new phone as a cellular hot-spot as needed</li> <li>Keep the CGM on the old phone<ul> <li>If using Dexcom, use the Dexcom app on the old phone</li> <li>If using Libre, the Libre CGM is connected to the old phone</li> </ul> </li> </ul>"},{"location":"faqs/new-phone/#use-the-new-phone","title":"Use the New Phone","text":""},{"location":"faqs/new-phone/#install-the-loop-app","title":"Install the Loop App","text":"<p>It is easier if you transfer information from the old phone to the new phone before you install and open\u00a0Loop\u00a0on the new phone. If this is not possible, then you will do the normal Onboarding for a new\u00a0Loop\u00a0app.</p> <ol> <li>When you transfer information from your old phone to your new phone, all the\u00a0Loop\u00a0settings files get copied to the new device including information about the pod<ul> <li>If the timing works, you can keep the pod when you switch to using the new phone for\u00a0Loop\u00a0after the information transfer and before changing pods with the old phone</li> <li>If this is not possible, you will need to start a new pod with the new phone</li> <li>Medtronic users will have all their information transferred but will only have one phone connected to the RileyLink</li> </ul> </li> <li>Install\u00a0Loop\u00a0on the new phone (all your settings should be there)<ul> <li>Install from TestFlightor</li> <li>Build using Mac</li> </ul> </li> <li>As soon as you install the Loop app on the new phone, go ahead and disable <code>Closed Loop</code>.<ul> <li>Keep <code>Closed Loop</code> disabled until you complete the full transfer and checkout.</li> </ul> </li> </ol>"},{"location":"faqs/new-phone/#install-from-testflight","title":"Install from TestFlight","text":"<ul> <li>Open TestFlight app on new phone</li> <li>Install the app on your new phone from TestFlight</li> <li>If necessary, review TestFlight for a Child</li> </ul>"},{"location":"faqs/new-phone/#build-using-mac","title":"Build using Mac","text":"<p>Preparatory steps:</p> <ul> <li>Your new phone will have the same name as your old phone - might want to change the display names so the two phones are different so you don't get confused in Xcode</li> <li>If the new phone does not have Developer Mode enabled, wait until you plug it in to try to configure it</li> </ul> <p>When building:</p> <ul> <li>Open Xcode<ul> <li>Use the same build as you used for the old phone if you built recently</li> <li>Otherwise, do a fresh download and let the BuildSelectScript  open Xcode for you</li> </ul> </li> <li>Plug in the new phone to the computer</li> <li>You will have to trust the computer on the new phone (and watch)</li> <li>There should be a modal pop-up in Xcode asking if you want to register the new phone</li> <li>You may need to enable Developer Mode if it is not already on</li> <li>Build the app on the new phone</li> </ul> <p>If you have trouble finding the new phone in Xcode or trouble building, you should try to reboot phone, watch, quit Xcode, restart computer, delete old provisioning profiles and then ask for help</p>"},{"location":"faqs/new-phone/#prepare-to-change-phone-used-for-the-loop-app","title":"Prepare to Change Phone used for the Loop App","text":"<p>On old phone (if available):</p> <ol> <li>Loop\u00a0app, turn off the slider for the RileyLink if using Medtronic or Eros Pods<ul> <li>Do not delete the pump; if using pods, this cannot be reversed</li> </ul> </li> <li>Phone Settings, Bluetooth<ul> <li>Forget the connections to the CGM (Dexcom or Libre)</li> <li>Do not forget anything that says TWI_BOARD or NXP_BLE(this is your DASH* pod)</li> </ul> </li> <li>Phone Settings, Bluetooth: Disable Bluetooth</li> </ol>"},{"location":"faqs/new-phone/#transfer-pump","title":"Transfer Pump","text":"<p>Bluetooth must be off on the old phone.</p> <ul> <li>On the new phone, examine the pump status<ul> <li>If everything transfered, your new phone should be communicating with your pump</li> <li>If using a RileyLink device and it doesn't show as connected, try a power cycle on the device</li> <li>If you need to start a new pod, do it now</li> </ul> </li> <li>If necessary, delete the pump type and add it back</li> </ul>"},{"location":"faqs/new-phone/#transfer-cgm","title":"Transfer CGM","text":"<p>It is now time to transfer the CGM to the new phone.</p> <ul> <li>Dexcom CGM</li> <li>Libre CGM</li> </ul>"},{"location":"faqs/new-phone/#dexcom-cgm","title":"Dexcom CGM","text":"<p>The Dexcom app might have transferred successfully, but it\u2019s not a bad idea to install that fresh from the App Store on the new phone. Doing so may be required.</p> <ul> <li>You need your Dexcom G6 Transmitter ID or G7 4-digit pairing code (Sensor number)</li> <li>On the new phone, in\u00a0Loop, delete Dexcom as your CGM so you can pair the new phone to the Dexcom app</li> <li> <p>On the new phone, open the Dexcom app and pair to the transmitter (G5, G6 or One) or enter the four-digit code for G7</p> <ul> <li>You can keep using your current sensor session</li> <li>You indicate you are starting a new sensor (it\u2019s not really new)<ul> <li>G5, G6 or ONE, enter transmitter ID<ul> <li>If you enter no code, you will be warned that calibrations are required (don't worry)</li> <li>When the app pairs with the tranmistter, it picks up the current session, and calibrations are not required</li> </ul> </li> <li>G7, enter 4-digit code if asked, otherwise just wait for it to connect</li> </ul> </li> <li>Within 5 to 10 minutes, Dexcom app should read the current session and keep going</li> </ul> </li> <li> <p>Wait for Dexcom to connect</p> </li> <li>On new phone, add the CGM to\u00a0Loop</li> </ul>"},{"location":"faqs/new-phone/#libre-cgm","title":"Libre CGM","text":"<p>Placeholder for\u00a0Libre CGM instructions. Suggested procedures from the community are encouraged.</p> <ul> <li>On the new phone, in\u00a0Loop, delete\u00a0Libre\u00a0as your CGM</li> <li>On the new phone, in\u00a0Loop, add\u00a0Libre\u00a0as your CGM</li> <li>Wait for\u00a0Libre\u00a0to connect</li> </ul>"},{"location":"faqs/new-phone/#check-out-the-transfer","title":"Check out the Transfer","text":"<ol> <li> <p>Stay in Open Loop (closed loop disabled) until you complete the full transfer and checkout.</p> <p>Check Every Setting</p> <ul> <li>Make sure all the basal, ISF, CR, Insulin Selection and ranges are correct</li> <li>Check Dosing Strategy selection</li> <li>Check permissions and notification settings</li> <li>Check Focus mode settings - make sure\u00a0Loop\u00a0and CGM apps have permission for all Focus modes</li> </ul> </li> <li> <p>Do a manual bolus of the smallest possible amount to make sure\u00a0Loop\u00a0and pump are working.</p> </li> <li> <p>Monitor CGM values to ensure new readings are coming in.</p> </li> <li> <p>Check Glucose, Insulin and Carbohydrate records</p> <p>Apple Health\u00a0History</p> <p>Your Glucose, IOB and COB may not have correct history on your new phone.</p> <p>Loop\u00a0 reads from\u00a0Apple Health\u00a0and will restore Glucose and Insulin records if health is stored on iCloud and synchronized between old and new phone - but this can take a long time to synchronize</p> <p>The Loop app does not read Carbohydrates from Apple Health, so stay Open Loop if you have high COB from an entry on the old phone</p> <p>Be prepared to spend 3 to 6 hours in Open Loop.</p> </li> <li> <p>Once you are happy with the configuration of\u00a0Loop\u00a0on your new phone, your glucose is being read and your COB and IOB on the new phone is valid, then you can restore Closed Loop.</p> </li> </ol>"},{"location":"faqs/new-phone/#old-phone","title":"Old Phone","text":"<p>Once you are using\u00a0Loop\u00a0on your new phone, you can delete the pump from the old phone.</p> <ul> <li>On the old phone, in the Loop app:<ul> <li>Delete the pump</li> </ul> </li> <li>If using DASH pods with direct Bluetooth connection to your phone<ul> <li>Go into the old phone Settings -&gt; Bluetooth and turn it back on</li> <li>Forget the pod; it will show up as TWI_BOARD or NXP_BLE</li> </ul> </li> </ul> <p>You can either keep the Old Phone as a backup, reset it and turn it in for credit or give it to some deserving individual.</p>"},{"location":"faqs/omnipod-faqs/","title":"Omnipod FAQs","text":""},{"location":"faqs/omnipod-faqs/#which-pods-work-with-the-loop-app","title":"Which pods work with the Loop app?","text":"<p>You can use DASH and Eros Omnipod pods with the Loop app. You cannot use Omnipod 5 pods.</p> <p>You do not need the Omnipod Personal Diabetes Manager (PDM), just the pod supplies. Your insurance or pharmacy coverage may cover some of the cost.</p> <p>Alternative Names for Omnipod Pods</p> <p>All three types of pods can be packaged five to a box, don't let the 5-pack indication confuse you. </p> <ul> <li> <p>Eros pods are also known as Classic or UST400</p> <ul> <li>The Reference number on the boxes should be similar to POD-ZXP425</li> <li>They have a clear needle cap</li> <li>Pharmacy sites sometimes may refer to the Eros pods as Gen 3 but they are the same exact pods</li> </ul> </li> <li> <p>DASH pods have DASH in the name</p> <ul> <li>The Reference number on the box should be similar to POD-BLE-P1-525 (note the P)</li> <li>They have a blue needle cap</li> </ul> </li> <li> <p>Omnipod 5 pods have 5 in the name</p> <ul> <li>The Reference number on the box should be similar to POD-BLE-H1-525 (note the H)</li> <li>They have a clear needle cap</li> </ul> </li> </ul> <p>DASH pumps communicate with the phone via Bluetooth so they do not require a RileyLink compatible device.</p>"},{"location":"faqs/omnipod-faqs/#what-about-tidepool-loop","title":"What about Tidepool Loop?","text":"<p>Tidepool Loop was approved by the FDA in Jan 2023, but at the current time, there are no announced pump or CGM partners. What does this mean?</p> <p>Tidepool Loop, cleared by the FDA, is the first:</p> <ul> <li>App that provides automated insulin dosing and is configured to be fully interoperable with pump and CGM partners</li> <li>App that originated as a patient-led initiative</li> </ul> <p>With this approval, there is now an FDA-approved pathway for independent selection of an app, a pump, and a CGM. Stay tuned for updates at https://tidepool.org/tidepool-loop.</p>"},{"location":"faqs/omnipod-faqs/#do-i-still-need-a-pdm-with-omnipod-loop","title":"Do I still need a PDM with Omnipod Loop?","text":"<p>No, pods are monogamous little creatures. They will pair with only one device at a time for safety reasons...so a pod is either paired with a PDM or your Loop app on your iPhone. In other words, your PDM can stay in the diabetes closet while you are Looping. You cannot use the PDM for a pod that has been activated with the Loop app. That doesn't mean you should get rid of your PDM if you have one. Instead, keep it for backup situations if you lose your phone. See below for what to do if you lose your phone or RileyLink.</p>"},{"location":"faqs/omnipod-faqs/#can-i-cancel-a-bolus","title":"Can I cancel a bolus?","text":"<p>Yes, you can cancel a bolus in progress. In fact, because it is very easy to cancel, make sure your phone is locked prior to being put away to avoid inadvertently cancelling a bolus. (This behavior is very similar to the Insulet PDM - which also needs to be locked once a bolus has started.)</p> <p>As soon as a bolus is initiated, look at your phone in portrait orientation.  You will see a bolus message indicating the progress of the bolus. This message is highlighted with a red rectangle in the graphic below. If you tap on this part of the display, the bolus is immediately cancelled.</p> <ul> <li>The displayed amount <code>Bolused</code> is based on the time since the bolus was started</li> <li>The Loop app will present that graphic for the entire time the bolus is in progress with the delivery amount updated based on time</li> <li>Once the bolus completes, the Loop app updates the actual delivery amount based on communication with the pod (taking into account any interruption of that bolus from the user or a pod error)</li> </ul> <p></p>"},{"location":"faqs/omnipod-faqs/#can-i-cancel-a-temp-basal","title":"Can I cancel a temp basal?","text":""},{"location":"faqs/omnipod-faqs/#cancel-temp-basal-with-the-loop-app","title":"Cancel Temp Basal with the Loop app","text":"<p>With Loop 3, disabling the setting for Closed-Loop immediately restores the basal rate on the pump to the scheduled basal rate, which effectively cancels the temp basal.</p> <p>You can tap on disable Closed-Loop and then immediately tap on enable Closed-Loop if all you want to do is cancel the current temp basal. If you do restore Closed-Loop, then Loop will resume automatic insulin delivery adjustments within 5 minutes.</p> <p>Bolus in progress</p> <p>Even if a bolus is in progress, you can still switch to Open-Loop and restore scheduled basal. The current bolus continues unless you separately cancel the bolus.</p>"},{"location":"faqs/omnipod-faqs/#cancel-temp-basal-with-loop-v22x","title":"Cancel Temp Basal with Loop v2.2.x","text":"<p>If you are running Loop v2.2.x, the method for canceling a temp basal is to suspend the pump and then resume delivery. This also interrupts any bolus that might be in progress.</p> <p>Be sure to follow the suspend with the resume command. Otherwise, all insulin delivery is stopped and remains stopped until the user either clicks on the \"Tap to Resume\" command from the main screen or the \"resume delivery\" command accessed in the pump settings display. The resume insulin delivery command returns insulin delivery to your scheduled basal rate.</p> <p>If a bolus was interrupted, the bolus will not resume.</p> <p>As long as you are in closed-loop mode, the Loop app will resume automatic insulin delivery adjustments within 5 minutes.</p>"},{"location":"faqs/omnipod-faqs/#can-i-set-my-own-temp-basal-on-loop","title":"Can I set my own temp basal on Loop?","text":"<p>With version 3, the Loop app provides a Manual Temp Basal feature.</p>"},{"location":"faqs/omnipod-faqs/#what-if-i-lose-my-phone-or-rileylink","title":"What if I lose my phone or RileyLink?","text":"<p>For pod users, your pod will finish any currently running temporary basal rate and then revert back to your scheduled basal rate. Without a phone or RileyLink, however, you will not be able to affect any pod use; no basal change, suspend, cancel, or bolus. To do anything other than let basals continue, you will need to take action depending on the situation.</p> <ul> <li> <p>Lost RileyLink only: You can replace your missing RileyLink with one from your backup supplies. No problem to switch out to a different Rileylink mid-pod session. If you don't have a backup RileyLink to use, then you will need to remove the pod and put on a new pod paired with your PDM until you can get a new RileyLink. In the interim, you are still getting basal from the pod. If you are taking bolus insulin via injection, just add it to Apple Health under insulin. The Loop app will read it and keep making predictions for you. Once you inject, then add the carbs that go with that injection into Loop.</p> </li> <li> <p>Lost iPhone only: You will need to remove the pod and put on a new pod paired with your PDM or a backup phone (with a copy of the Loop app on it). You cannot use the old pod with a new device. In the interim, the pod will continue to deliver your scheduled basal until the pod reaches 80 hours. See New Phone for more information.</p> </li> <li> <p>Lost both RileyLink and phone: You're having a really bad day. You'll need a hug and to follow the same directions as if you lost the phone as shown in the bullet above.</p> </li> </ul>"},{"location":"faqs/omnipod-faqs/#is-there-an-increase-in-pod-failures-on-loop","title":"Is there an increase in pod failures on Loop?","text":"<p>There is more communication between the pod and the controller (your Loop phone) than is typical with the PDM (Insulet provided controller). This increases the load on the pod battery. Most people have no increase in pod failures, but there are steps to take to limit \"extra pod battery use\". Every time the Loop app requests an update of the pod state or issues a command (bolus, basal schedule, temp basal), messages are exchanged with the pod.</p> <ul> <li>Set your correction range to be 10 to 20 mg/dL (0.5 to 1.1 mmol/L) instead of a single number<ul> <li>The number of commands will be reduced</li> </ul> </li> <li>An earlier release of Loop, version 3.0.0, pinged the pods more frequently to refresh status more quickly when the phone was unlocked and the Loop app was in the foreground<ul> <li>This did cause more failures and was modified for version 3.2.x.</li> </ul> </li> <li>The pod state is updated every 3 minutes for DASH and every 5 minutes for Eros</li> <li>If uncertain communications are detected such that the Loop app cannot determine if a dosing command sent to the pod was actually received, the app will try once a minute to get a response<ul> <li>The combination of Eros pods with a RileyLink device with poor signal leading to uncertain comms may cause excessive battery use and contribute to pod faults</li> </ul> </li> </ul>"},{"location":"faqs/omnipod-faqs/#what-do-i-do-if-a-pod-fails-to-pair","title":"What do I do if a pod fails to pair?","text":"<p>If you get a pod that is failing to pair, please see this page for steps on how to fix the problem. Follow these steps before filling and trying another pod. If the pod is not screaming, you can probably recover it.</p>"},{"location":"faqs/omnipod-faqs/#what-do-you-do-to-stop-a-screaming-pod","title":"What do you do to stop a screaming pod?","text":"<p>Screaming pods indicate the pod is out of insulin or out of time (80 hours) or there has been a critical pod fault.  In all these cases, there is no more delivery of insulin.</p> <p>The first step is to use your phone to <code>Deactivate</code> the pod. You may need to go to the pod settings and tap on the Replace Pod row or the app may take you to the screen with a Deactivate button directly. This only works if the app is able to communicate with the pod.  Sometimes this is not possible. After you attempt to deactivate two times, the app will \"discard\" the pod as active if communication fails and enable you to pair a new pod. But you still need to make that noise go away.</p> <p>If you are not successful at deactivating a pod and you've tried the steps at Reset-Loop-to-Pump-Communications, make sure the old pod is removed from the area before trying to connect a new pod. (Placing it in a microwave temporarily prevents the phone from detecting that pod.) The paperclip trick (next paragraph) only breaks the sound connection, the pod electronics is still active.</p> <p>Once you have removed the screaming pod, it can be silenced using a paperclip. Simply put the paperclip in the small hole that is on the bottom (the side opposite where the cannula is) of the pod as shown. Push the paperclip in until you hear a little click, that click is breaking the circuit that connects the speaker to the electronics.</p> <p></p>"},{"location":"faqs/overview-faqs/","title":"FAQs Overview","text":""},{"location":"faqs/overview-faqs/#frequently-asked-questions-faqs-overview","title":"Frequently Asked Questions (FAQs) Overview","text":"<p>The FAQs tab of LoopDocs contains pages with safety tips, frequently asked questions and the Glossary.</p> <p>Map to this section:</p> <ul> <li>Safety Tips</li> <li>Loop FAQs</li> <li>Time FAQs</li> <li>Omnipod FAQs</li> <li>CGM FAQs</li> <li>Update/Rebuild Loop FAQs<ul> <li>What if I'm Changing Phones</li> </ul> </li> <li>New Phone Tips</li> <li>RileyLink FAQs</li> <li>Algorithm FAQs</li> <li>Apple Health FAQs</li> <li>Glossary</li> </ul>"},{"location":"faqs/rileylink-faqs/","title":"RileyLink FAQs","text":""},{"location":"faqs/rileylink-faqs/#rileylink-compatible-device-faqs","title":"RileyLink Compatible Device FAQs","text":"<p>A RileyLink compatible device is required to use the Loop app with Medtronic pumps or Omnipod Eros pods.</p> <p>A rileylink is not required with DASH pods.</p> <p>The device uses the RileyLink protocol to communicate information to/from your pump by radio communications and to/from your iPhone using Bluetooth. You will need the device within range of your phone and pump so that these communications can happen. Put it in a purse, pocket, SPIbelt. Clip it to a backpack, belt, or bra...but please do bring it with you..</p> <p>Purchase information for these devices is found in RileyLink Compatible Devices</p>"},{"location":"faqs/rileylink-faqs/#adding-or-changing-rileylink","title":"Adding or Changing RileyLink","text":"<p>You can add or change the RileyLink compatible device in use without affecting the pump that is connected to the Loop app.  You can even have more than one connected, although only one will be used at a time.</p> <p>If you are connecting to a new Medtronic pump or switching between Medtronic and Omnipod, please follow the Modify Pump instructions under Set up App.</p> <p>Change Connected Devices:</p> <ul> <li>Open the Pump Menu for your connected pump</li> <li>Scroll down to the DEVICES section</li> <li>There should already be at least one device listed</li> <li>Power on your new device and look for a new device to appear in the list</li> <li>If this device has never been connected before, it might appear as a blank line with a slider beside it - if so, slide the slider to turn it green and then the device name should appear</li> <li>You can now turn sliders on or off to select which device you want to use with your connected pump</li> <li>Refer to the RileyLink Menu for instructions on personalizing your device name</li> </ul> <p></p>"},{"location":"faqs/rileylink-faqs/#using-more-than-one-device","title":"Using More Than One Device","text":"<p>You can have more than one RileyLink compatible device turned on and connected. Loop only uses one device at a time. Remember - if you do have two devices in use, make sure they are both charged (or have batteries).</p> <p>Example of using more than one device:</p> <ul> <li>One device is kept in the bedroom and another in the kitchen</li> <li>Loop will automatically switch to the device that is within Bluetooth range at the next cycle (Loop stays green)</li> <li>Caveats:<ul> <li>The phone needs to be close enough to get the CGM update</li> <li>Do NOT forget to pick up one RileyLink device and take it with you when you leave the house</li> </ul> </li> </ul>"},{"location":"faqs/rileylink-faqs/#communications","title":"Communications","text":"<p>All the RileyLink compatible devices communicate with the pump through radio frequency communications and with the phone through Bluetooth.</p> <p>Bluetooth (BT) Troubleshooting</p> <p>If your iPhone has BT issues, your Loop will have failures. There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interfering with the Loop. If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area.</p> <p>Your BT signal strength can be seen in the Loop settings, Pump settings, Device menu, on the <code>Signal Strength</code> line. As you move closer and further away from your phone, you can watch that number dynamically change. This line is not displaying the signal strength of your pump RF communications, just BT between the RileyLink compatible device and the phone.</p> <p>You will notice the Signal Strength is a negative number and in units of dB. Remember that number line from elementary school?  A signal strength of -50\u00a0dB is a stronger signal than  -80\u00a0dB.</p> <p></p>"},{"location":"faqs/rileylink-faqs/#range","title":"Range","text":"<p>The range at which RileyLink compatible devices will function is dependent on the environment that you are in and the specific device design. Both the OrangeLink and some sizes of the EmaLink have reported longer ranges than RileyLink (typically 10 to 20 ft) - but they still need to be \"near enough\".</p> <p>What influences this distance for a given device? The biggest external influences are (1) body-blocking and (2) \"noisy\" environments. The human body is a lot of water, and water is an excellent blocker of wireless communication. So, sleeping on a pod and smothering it entirely with your body can decrease the ability of the device to communicate with the pod. Environments with a high concentration of wireless signals can also interfere with device communications and make closer proximity a benefit. Where might those kinds of situations happen? Concerts, conferences, and sporting arenas are pretty prone to interference.</p> <p>Many people keep their device on the same side of their body as their pump during the day. They use a pocket, carabiner, lanyard, SPIbelt - the options are endless. What you don't want to do is put it in a blocking bag that has RFID blocking (some travel fanny packs have that).  </p>"},{"location":"faqs/rileylink-faqs/#what-happens-if-loop-loses-communication","title":"What happens if Loop loses communication?","text":"<p>While you are out of the communication range for your RileyLink compatible device(s), any running temp basal will keep going until it finishes (the longest temp basal that Loop sets are for 30 minutes duration...so within 30 minutes or less your pump would go back to your regularly scheduled basal). When you come back into range of your device, Loop will pick back up within 5-10 minutes without you needing to do anything.</p>"},{"location":"faqs/rileylink-faqs/#are-these-devices-waterproof","title":"Are these devices waterproof?","text":"<p>The electronics are not waterproof but there are waterproof cases available and some have wireless charging available. Check with the manufacturer.</p> <p>RileyLink Compatible Device Information</p>"},{"location":"faqs/rileylink-faqs/#firmware-version","title":"Firmware version","text":"<p>In Loop settings, tap on your pump, find your device (RileyLink or other) and tap on that menu. The figure below shows firmware specific to the RileyLink. If you have another type of device, the firmware value reported will be different. (Note - the displays for Ema, Orange and Riley have been updated to include device-specific features as shown in the RileyLink Display page.  The graphic below shows the original RileyLink display.)</p> <p></p> <p>With RileyLink, the firmware displayed should match or be a higher version number than what is shown in the figure above, e.g., <code>subg_rfspy 2.2/ble_rfspy 2.0</code>. (If you are running with a very old RileyLink from pre-Aug 2018, it might be a lower number.) Check it when the device is working well and make a note of what it says. If you're having Red Loops, you might want to check firmware and connected state. Make sure, after power cycling your device, that the correct firmware is displayed AND that there are two items shown.  </p> <ul> <li>In the example above:<ul> <li><code>subg_rfspy 2.2</code> is the sub-gigahertz radio frequency firmware that talks to the insulin pump (if this does not show up, the device will talk to the phone but not the pump)</li> <li><code>ble_rfspy 2.0</code> is the Bluetooth firmware that talks to the phone (if this is not working, you will not even see the device in the list)</li> </ul> </li> </ul> <p>HINT: You might need to quit the Loop app.  (Don't just close it, actually quit.) Then do the power cycle on the RileyLink compatible device to attempt to have both sets of firmware boot up.  When you restart the Loop app, it may show the correct firmware. Don't give up after one failure, try several times.</p> <p>If several power cycles do not make the correct firmware show up, contact the manufacturer for assistance.</p>"},{"location":"faqs/rileylink-faqs/#orangelink-firmware","title":"OrangeLink Firmware","text":"<p>The OrangeLink devices allow the user to update the firmware on the device using an app on the phone itself (available for iPhone 7 and later devices).</p> <ul> <li>OrangeLink Firmware Update</li> </ul> <p>A number of OrangeLink Pro devices were shipped with FW2.6 and for people who already had OrangeLink devices, a version of FW2.6 was offered for download. However, this firmware did not work well with Loop (or AndroidAPS).  </p> <ul> <li>If you are having communication issues, update to the latest firmware FW3.2 using the link above</li> <li>If you are not having communication issues, the update is optional<ul> <li>For OrangeLink (not Pro, HW version 1.0), FW2.5 or FW3.2 are OK</li> <li>For OrangeLink Pro (HW version 1.1), FW1.0 or FW3.2 are OK</li> <li>See link above to check if versions newer than FW3.2 have been released, LoopDocs might not have the latest information</li> </ul> </li> </ul> <p>Firmware/Hardware Labeling</p> <p>Earlier versions of the OrangeLink firmware did not put the hardware (HW) version and the firmware version (FW) in the \"correct\" location to hand off to Loop for interpretation. Do not worry if you are running on any FW version 1.x or 2.x and your HW version number doesn't say 1.0 or 1.1. This has been fixed for FW versions 3.x.</p>"},{"location":"faqs/rileylink-faqs/#emalink-and-orangelink-features","title":"EmaLink and OrangeLink Features","text":"<p>Some of the features of the OrangeLink were added to the RileyLink Display with Loop 2.2.x. However, as mentioned above, the FW and HW information in some OrangeLink firmware was inconsistent in earlier versions. The consequence is that the OrangeLink Pro screen does not show the Find Device feature that many people want to use with the versions of firmware that provide good communication with Loop. The patch listed below fixes this issue.</p> <p>The EmaLink features were not added with Loop 2.2.x. The patch listed below adds some EmaLink features.</p>"},{"location":"faqs/rileylink-faqs/#emalink-and-orangelink-patch","title":"EmaLink and OrangeLink Patch","text":"<p>A patch was developed to update the RileyLink screen of the Loop app that detects the OrangeLink hardware for all versions of the OrangeLink firmware and adds the battery level reporting and notification to the EmaLink screen. Click on the link below. There are detailed instructions on how to use this patch for Loop 2.2.x.</p> <ul> <li>EmaLink and OrangeLink Patch</li> </ul>"},{"location":"faqs/rileylink-faqs/#rileylink-information","title":"RileyLink Information","text":"<p>Since the RileyLink version of the communication link device has been around the longest, some additional information about that device has been added to LoopDocs throughout the years. The rest of this page is specific just to the RileyLink device.</p>"},{"location":"faqs/rileylink-faqs/#rileylink-assembly","title":"RileyLink Assembly","text":"<p>Your RileyLink will come with the Lithium-ion Polymer (LiPo) battery disconnected and the parts not already inside the case. It will be up to you to put the RileyLink in the case and attach the battery.</p> <p>Make sure the LiPo battery is well-plugged into the connection. Line up the little ridge appropriately, and push fairly firmly to get the connection tight. Poor battery cable connection can make the Loop communications fail. See photos below, for example.</p> <p>Common new user errors</p> <p>The most common two errors for new RileyLink owners are (1) not fully pushing in the LiPo battery cable connection and (2) failing to charge the RileyLink. Compare your LiPo battery cable with the photos; it takes a bit of oomph to push that plug fully in like the photos shown below. Remember to charge your RileyLink each night.</p> <p></p> <p>Loose battery cable on left. Proper battery cable on right</p> <p>Finally, the board and the battery fit into the slim case fairly tightly as well. Click on the image below to watch a helpful assembly video.</p> <p></p>"},{"location":"faqs/rileylink-faqs/#rileylink-lights","title":"RileyLink Lights","text":"<p>The RileyLink has several lights that you may notice from time to time. There is no 'power' light. If you suspect that your RileyLink is not being powered, try turning it off and on using the small sliding switch. You should see lights in the middle of the board flash when you do this. If they flash, that means the board has power.</p> <ul> <li> <p>Red light: Charging light. The red light will remain on while RileyLink is charging, and it will turn off when charging is complete. You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\".</p> </li> <li> <p>Green light: Bluetooth connection light. The green light will remain on while you have a BT connection with your iPhone. If that green light fails to stay on, you should troubleshoot your BT connections. Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch.</p> </li> <li> <p>Blue light: Pump communications. If you have an older firmware on your RileyLink, some of the blue lights will flash periodically as it communicates with the pump. It's just letting you know that it is busy talking and collecting info. You will also see increased blue flashes if you have \"Enabled Diagnostic LEDs\" for Medtronic users that have the RileyLinks with updated firmware (shipping since late August 2018).</p> </li> </ul> <p>A solid blue light that consistently remains lit on the board could mean one of two things:</p> <ul> <li> <p>A temporary issue that can be resolved by rebooting the RileyLink physically (turning the switch off/on), or</p> </li> <li> <p>An electrical short or damage to the board. Sweat and moisture are most likely culprits, so try to keep case free from those environments. Don't keep RileyLink in sports bras or waistband next to skin, for example, while exercising.</p> </li> </ul> <p>If your blue light remains on despite trying a restart, it is time to pull out your backup RileyLink.</p>"},{"location":"faqs/rileylink-faqs/#rileylink-charging","title":"RileyLink Charging","text":"<p>The battery that comes with RileyLink is not charged completely when it is shipped, so be sure to charge it up before initial use. RileyLink takes about 2 hours to fully charge (the red light will turn off when fully charged, read note above about red light patterns) and should easily last at least a full day of constant Loop use. Typically, it can go into the 30-hour range without any problems. Most people charge their RileyLink each night when they are sleeping. You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging. It will automatically stop charging the battery when it is fully charged.</p> <p>Since the best practice is to charge your RileyLink overnight while you sleep, and the battery lasts safely over 24 hours, there is no battery level indicator for the RileyLink. The RileyLink's charge level is not viewable on Nightscout, nor within the Loop app. If you forget to charge your RileyLink overnight, you can recharge it with a portable USB battery in a pinch. A short mini-USB cable could be a good addition to a small gear bag.</p>"},{"location":"faqs/rileylink-faqs/#what-are-the-differences-between-the-rileylink-medtronic-and-omnipod-antennas","title":"What are the differences between the RileyLink Medtronic and Omnipod Antennas?","text":"<p>There are two types of antennas for RileyLinks; each antenna is optimized for the pump you are using. Otherwise they are identical. See RileyLink Compatible Devices for other devices.  The OrangeLink has both antennas included in its design and can talk to either Medtronic or Omnipod.  The EmaLink requires selection for type of pump.</p> <p>The color of the RileyLink circuit board in the photos below is irrelevant.</p> <p></p>"},{"location":"faqs/rileylink-faqs/#what-will-happen-if-your-rileylink-has-the-wrong-antenna","title":"What will happen if your RileyLink has the wrong antenna?","text":"<p>You can technically use that RileyLink with either pump on Loop. But, you will have significant frustrations and probably a lot of red loops. With mismatched antenna/pump, the device needs to be very close (think inches) and in clear line-of-sight to pump/pod. This makes everyday living (and sleeping) a bit hard. If you use the appropriate-antenna-for-your-pump device, the distances the pump/pod and RileyLink can tolerate from each other is much more \"real world\" friendly and stable. The OrangeLink contains both antennas so will work with either pump. This may be a good choice if you like to switch between Medtronic and Omnipod.</p> <p>In a pinch, if you have a RileyLink that you used with a Medtronic pump and have switched to Omnipod, it might work as a backup, but you won't love it.</p>"},{"location":"faqs/rileylink-faqs/#how-long-will-my-rileylink-go-between-charging","title":"How long will my RileyLink go between charging?","text":"<p>RileyLinks can go about 30-36 hours on a single charge. There is no way to see the remaining charge level, so most people just get into the habit of charging overnight while they sleep. The actual time to fully recharge is about 1 or 2 hours; you'll know it is fully charged when the red light turns off. After a full charge, the red light will turn off and then periodically turn on for short times while it \"tops off\" while still on a charger.</p>"},{"location":"faqs/rileylink-faqs/#how-can-i-tell-how-much-charge-my-rileylink-has","title":"How can I tell how much charge my RileyLink has?","text":"<p>You can't. There is no charge level indicator. Just charge it nightly, and you won't have a problem. Full battery charge should last about 30-36 hours depending on battery health. Charging takes less than 2 hours.</p>"},{"location":"faqs/rileylink-faqs/#how-long-will-my-rileylink-battery-last","title":"How long will my RileyLink battery last?","text":"<p>Eventually, Lithium-ion Polymer (LiPo) batteries will lose charging capacity. You would want to replace if you notice the battery not lasting the full day. Many people report using their battery for more than 2 years without issue.</p> <p>Be aware that if a battery is failing, it may swell. If you notice that the RileyLink battery is swollen, remove the swollen battery from your home and place in a fire-safe area and recycle it properly.  Either order a new battery or pull out your spare.</p> <p>After a year of use (and a year of being dropped), the antenna may no longer be securely soldered. If you are getting a lot of red loops, it might be a poor antenna connection instead of a failing battery. Check the solder joint at the antenna. The solder should be shiny and the antenna base should be firmly attached to the board.</p>"},{"location":"faqs/rileylink-faqs/#rileylink-battery","title":"RileyLink Battery","text":"<p>Keep your RileyLink and its Lithium-ion Polymer (LiPo) battery protected from damage. LiPo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping. If your battery is damaged in some way, please disconnect it immediately, and dispose of it (it should be recycled). You can order new RileyLink batteries on the GetRileyLink website</p>"},{"location":"faqs/rileylink-faqs/#rileylink-battery-removal","title":"RileyLink Battery Removal","text":"<p>To remove the LiPo battery from the RileyLink, please do so slowly and patiently. Work the battery connection side to side slowly to loosen it from the plug. Some people have reported success using small, curved needle-nose pliers such as hemostats. Others have used small flathead screwdrivers as shown in this video.</p> <p></p>"},{"location":"faqs/safety-faqs/","title":"Safety Tips","text":""},{"location":"faqs/safety-faqs/#know-your-settings","title":"Know your settings","text":"<p>Do not enter settings that you are unsure of. For example, if you haven't any idea what your carb ratio is, please don't enter a wild guess. Instead, test your settings and talk to your health care provider about what your appropriate settings should be.</p>"},{"location":"faqs/safety-faqs/#ios-focus-notifications","title":"iOS Focus Notifications","text":"<p>iPhones have Focus modes to enable maximum flexibility for notifications. These modes must be configured by each user to allow important notifications from your diabetes apps.</p> <p>Set up every Focus mode you use to allow glucose alerts or you will not get them.</p> <p>Critical notifications, for example, urgent low from Dexcom, are enabled regardless of your Focus settings. But regular low and high glucose notifications might be suppressed. Open source apps, like the Loop app, can only be allowed to notify during a Focus mode when configured by the user.</p> <p>Under iOS Settings, select Focus, then choose the Focus mode you want to adjust.</p> <p>The graphic below has numbered highlights to follow along for configuring Sleep focus initially:</p> <ol> <li>Enable Time Sensitive Notifications (disabled by default)</li> <li>Tap on the + sign to add Apps that are allowed to notify in this mode</li> <li>Use the search feature to find apps of interest</li> <li>Tap on the radio button to select apps of interest, the check mark means that app will be added<ul> <li>If you use additional apps to provide alerts, be sure to add them to Focus as well</li> </ul> </li> </ol> <p></p> <p>The little clock icon indicates that time-sensitive notifications are enabled. The other icons represent the apps you added to have permission to notify you when in this Focus mode.</p> <p>Be sure to do this for every Focus mode you use.</p>"},{"location":"faqs/safety-faqs/#understand-the-app-displays","title":"Understand the App Displays","text":"<p>If you do not understand the components displayed in the graphic below, please spend time reviewing the information at Displays.</p> <p></p>"},{"location":"faqs/safety-faqs/#carb-entry-and-insulin-delivery","title":"Carb Entry and Insulin Delivery","text":"<p>If you configured the app with closed-loop enabled:</p> <ul> <li>Once carbohydrates are entered into\u00a0Loop, the algorithm will begin to dose insulin to anticipate those carbs</li> </ul> <p>If you entered carbs and then changed your mind on the amount or the time at which they were eaten, use these instructions to delete or edit them. This will make\u00a0Loop\u00a0better able to predict blood glucose and adjust insulin delivery appropriately.</p>"},{"location":"faqs/safety-faqs/#how-to-cancel-a-bolus","title":"How to Cancel a Bolus","text":"<p>Once a bolus starts, the progress of that bolus appears in the HUD Status Row. Note that the phone must be held in portrait mode to see this. Simply tap on the row that shows the delivery to halt the bolus.</p> <p></p>"},{"location":"faqs/safety-faqs/#understand-delivery-limits","title":"Understand Delivery Limits","text":"<p>With each cycle, Loop\u00a0generates a glucose prediction and a recommended dose (positive or negative) to bring you to your correction range.</p> <ul> <li>The automated response to a positive recommended dose depends on your Dosing Strategy and is adjusted by your Delivery Limits</li> </ul> <p>For more information, please read How do Delivery Limits Affect Automatic Dosing?.</p>"},{"location":"faqs/safety-faqs/#health-app-permissions","title":"Health app permissions","text":"<p>For older versions of\u00a0Loop, or if you customized\u00a0Loop 3\u00a0to read carbohydrates from third-party apps, be aware that you cannot edit those entries inside the\u00a0Loop\u00a0app.</p> <p>If you let other apps, such as MyFitnessPal, write carbohydrates to the Health app, Loop\u00a0could read those carbohydrates and you could be dosed for those carbohydrates.</p> <ul> <li>Loop 3: review Customization: Build Time Features</li> <li>Loop 2: Check your Health permissions and review.</li> </ul>"},{"location":"faqs/safety-faqs/#glucose-prediction-is-scary","title":"Glucose Prediction is Scary","text":"<p>Users often reach out if the glucose prediction shown on the Loop app screen is very low - negative even.</p> <ul> <li>The negative glucose prediction will not happen (that's just the way the model works) but the user must figure out what is going on</li> </ul>"},{"location":"faqs/safety-faqs/#scenario-1-extreme-override","title":"Scenario 1: Extreme Override","text":"<p>It is pretty common for new users to think a 10% override setting should behave similarly to a 10% temporary basal rate setting on a manual pump. This is not true.</p> <p>Read this section on the override page for information: Avoid Extreme Insulin Needs Setting</p>"},{"location":"faqs/safety-faqs/#scenario-2-entry-error-into-apple-health","title":"Scenario 2: Entry Error into Apple Health","text":"<p>With version 3 of the Loop app, it is no longer necessary to enter glucose or insulin manually into the Apple Health app for the Loop app to read. There are methods within the Loop app for entering a fingerstick value or non-pump insulin.</p> <p>However, some people are used to entering information into Apple Health directly - and it still works. The Loop app will read entries from Apple Health. But if you do this:</p> <ul> <li>Be very careful that you enter glucose into glucose</li> <li>Be very careful that you enter insulin into insulin</li> </ul> <p>A recent user entered a fingerstick value into the insulin record in Apple Health. They use mmol/L glucose units, so it wasn't as obvious as it would have been for someone using mg/dL. At any rate, they could not figure out why their child had such a high IOB and were afraid the pump had delivered 10 U of insulin! Once they deleted the incorrect entry from Apple Health, the Loop app was able to make the appropriate prediction.</p>"},{"location":"faqs/safety-faqs/#beware-the-medtronic-easy-bolus-button","title":"Beware the Medtronic Easy Bolus button","text":"<p>Medtronic's easy bolus button has been the cause of several accidental boluses when the pump has been carried in a pocket. Best practice would be to disable the Easy Bolus button since you will be doing boluses from the phone anyways.</p>"},{"location":"faqs/safety-faqs/#finish-your-medtronic-priming","title":"Finish your Medtronic priming","text":"<p>After a site change and reservoir rewind, Medtronic's pump will have a menu on the pump screen related to finishing your prime. Make sure you complete that screen and always return to the main menu. Medtronic's pump won't resume basal insulin delivery until that priming screen is completed.</p>"},{"location":"faqs/time-faqs/","title":"Time FAQs","text":""},{"location":"faqs/time-faqs/#the-loop-phone-must-be-on-automatic-time","title":"The Loop Phone Must be on Automatic Time","text":"<p>The Loop Phone is a Medical Device</p> <p>There have been several instances where a Looper disabled automatic time to change the time on their Loop phone.</p> <p>As of January 2023, this change in time is detected and the Loop app stops all automatic dosing of insulin other than your scheduled basal rates and begins to aggressively warn the user.</p> <p>One scenario should be enough to convince you not to do this:</p> <ul> <li>Glucose is 180 mg/dL (10 mmol/L) when you set time one day ahead (for a game)</li> <li>Later you return time to automatic and think nothing of it</li> <li>As soon as automatic time is restored, the Loop app thinks your eventual glucose will be the future value (in this example 180 mg/dL) and attempts to bring you to your correction range<ul> <li>If you are running a very old version of the Loop app, dosing could continue based on that incorrect future glucose value</li> </ul> </li> </ul>"},{"location":"faqs/time-faqs/#force-automatic-time","title":"Force Automatic Time","text":"<p>You can configure the iPhone to only allow automatic time.</p> <ul> <li>Under iOS Settings, select Screen Time</li> <li>Scroll down to the Lock Screen Time Settings row<ul> <li>Enter a passcode</li> </ul> </li> </ul> <p>The ability to use anything other than automatic time is disabled as long as that iOS setting has a passcode. Parents can use this for children. Adults can use this too in case they need a reminder not to change the time - you must first disable the passcode.</p> <p>This does not affect automatic time zone changes, those are handled by the phone without need for interaction.</p>"},{"location":"faqs/time-faqs/#remove-future-glucose","title":"Remove Future Glucose","text":"<p>If you have future glucose from a manual time change or just entering something into Apple Health with the wrong timestamp:</p> <ul> <li>You MUST go into Apple Health and remove any glucose values in the future</li> <li>The Loop app detects the future glucose and stops looping<ul> <li>It might not be completely obvious why Loop stopped, but you will get a red loop within 15 minutes and Loop is not Looping notifications starting at 20 minutes</li> <li>If you tap on the bolus icon, Loop informs you it detected invalid future glucose</li> <li>If you tap on the glucose icon - it takes you to your CGM which probably has a very different number from that shown on the main Loop screen</li> </ul> </li> <li>If you also use Nightscout and have the upload CGM readings enabled in Loop, those future glucose values will appear in Nightscout<ul> <li>To fix this problem (after you fix Apple Health), use the Admin Tools in Nightscout to remove future treatments and future entries</li> </ul> </li> </ul> <p>The Loop app is very aggressive at warning you if you make this mistake. you will get a notification - even when you are in a different app. The graphic below shows the alert when you next view the Loop app after turning off automatic time and changing the time. Even if you respond right away, you may have at least one glucose reading in the future when you see this alert. Please Remove Future Glucose.</p> <p></p> <p>The rest of this page is about changing time zones.</p> <p>This is safe because the Loop app keeps track of records internally using UTC.</p>"},{"location":"faqs/time-faqs/#time-zones-daylight-savings-time-summer-time","title":"Time Zones, Daylight Savings Time, Summer Time","text":"<p>The Loop app operates across time zones and time changes. The phone that is running the Loop app will automatically update the time, but you choose when to modify the time zone for \"pump time\".</p> <p>What Therapy Settings are set by \"pump time\"?</p> <ul> <li>Basal Rate Schedule</li> <li>CR and ISF Schedule</li> <li>Correction Range Schedule</li> </ul> <p>Time Change comments:</p> <ul> <li>The Pump Settings screen is used to modify time zones<ul> <li>Tap on Pump Status Icon from the HUD</li> <li>or Loop-&gt;Settings-&gt;Pump</li> </ul> </li> <li>Travel<ul> <li>There is no urgency to update the pump time to match the wall-clocks when traveling</li> <li>For short trips, many Loopers just leave the pump time alone</li> </ul> </li> <li>Time Change (Daylight Savings Time or Summer Time)<ul> <li>Most people want to update their pump time immediately after the clocks change</li> </ul> </li> <li>A Clock Icon is seen in the HUD Pump Status display when pump time differs from phone Time Zone</li> </ul> <p>Medtronic Users</p> <p>Do not use the Medtronic pump menus to change your pump's time when Looping.</p>"},{"location":"faqs/time-faqs/#iphone","title":"iPhone","text":"<p>The Loop app will warn you if your phone does not have time configured to automatically update. The configuration is under iOS Settings -&gt; General -&gt; Time &amp; Date.</p> <p>Do not ever adjust the time manually on your Looping phone to \"defeat\" time-based rules for a game. Your phone with the Loop app is now a critical medical device - make sure anyone who uses your phone understands this.</p>"},{"location":"faqs/time-faqs/#minimed-pump-and-cgm","title":"Minimed Pump and CGM","text":"<p>The Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, the Loop app assumes that the pump's date, until changed, remains at a fixed offset from UTC.</p> <p>That offset is stored by the Loop app the first time the pump ID is changed, and every time the pump's time is changed using the \"Change Time Zone\" command.</p>"},{"location":"faqs/time-faqs/#dexcom-cgm","title":"Dexcom CGM","text":"<p>No particular input is needed on your part for the Loop app to work with Dexcom CGM data. All times use UTC.  However for Dexcom receiver users, at time changes you may want to manually change your receiver's time setting just so the time visually appears correct when you are viewing the screen.</p>"},{"location":"faqs/time-faqs/#airports","title":"Airports","text":"<p>RileyLinks, pumps and CGM have no problem going through any of the airport security systems. You can carry it with you in the airplane cabin and it can go through the x-ray scanner that your carry-on bags go through.</p>"},{"location":"faqs/time-faqs/#airplane-mode","title":"Airplane Mode","text":"<p>Nothing wrong with airplane mode, but many people forget about it at the time they travel. So, you can do this simple preparation step now:</p> <p>Turn airplane mode on. Then make sure your Bluetooth is still slid \u201con\u201d. If Bluetooth isn\u2019t on, then go slide it on again. Now go ahead and turn airplane mode off again.</p> <p>Why did we just do that? Because in older versions of iOS, airplane mode turned off Bluetooth the first time you ever use it. New iOS don't do that, but worth checking.</p> <p>But, if you remember to turn Bluetooth back on while in airplane mode, two things happen (1) your CGM and the Loop app will work while in airplane and (2) airplane mode will \u201cremember\u201d the next time that you like Bluetooth left on in airplane mode and will not turn it off the next time you slide airplane mode on. So now you\u2019ve just prevented yourself from forgetting to turn Bluetooth on the next time you fly and are in a hurry to meet your lovely seat mate and stow your luggage. You can safely follow cabin instructions and put phone in airplane mode without losing access to the Loop app or CGM.</p>"},{"location":"faqs/update-faqs/","title":"Update/Rebuild Loop FAQs","text":""},{"location":"faqs/update-faqs/#overview","title":"Overview","text":"<p>First, please take a minute to understand what the words mean.</p> <ul> <li> <p>Update the Loop App is the process of building a new version of code, updated from that already on your phone</p> </li> <li> <p>Rebuild the Loop App is the process of building the same version of code, identical to that already on your phone</p> <ul> <li>Rebuilding the app extends the expiration date and enables your Loop app to keep working</li> </ul> </li> </ul> <p>In both cases, you build the code to install over an existing app on your phone or onto a new device.</p> <p>Check Apple Developer Account</p> <p>If you have an updated agreement, be sure to accept it before you update or rebuild.</p> <ul> <li><code>Apple Program License Agreement</code></li> </ul> <ul> <li>If you use the Browser build method:<ul> <li>Follow the steps on Update/Rebuild with Browser</li> <li>Within an hour that new build should be available via TestFlight to install on your phone</li> </ul> </li> <li>If you use the build with Mac method:<ul> <li>Follow the steps on Update/Rebuild with Mac<ul> <li>First make sure your Mac operating system and Xcode version are compatible with your iPhone version, and then</li> <li>Use the Build Select Script to download the latest released version of the code</li> </ul> </li> <li>See note below if your internet speed or your Mac is very slow</li> </ul> </li> </ul> Slow Internet / Slow Mac? (click to open/close) <p>If you have a very slow download speed or if you do a lot of customizations, it may be worth your time to decide if you need a new download.</p> <ul> <li>Use Finder to check the date of your last download by looking in the Downloads/BuildLoop folder</li> <li>Check the date of the last release at GitHub <code>LoopKit/Loop releases</code></li> <li>If the date in Finder is after the release date, follow Find my Downloaded Loop Code<ul> <li>Double-click on the Loop.xcworkspace file in that folder</li> <li>This opens Xcode and you can just plug in your phone and build with your existing download</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#what-if-im-changing-phones","title":"What if I'm changing phones?","text":"<p>There's a whole page devoted to just this topic: New Phone</p>"},{"location":"faqs/update-faqs/#when-should-i-update","title":"When Should I Update?","text":"<ul> <li>Best Practice<ul> <li>Build if a serious bug-fix is reported</li> <li>Build, two to four times a year so that it becomes easier and you are ready in case of an emergency</li> <li>Each time you build, the app expiration date is bumped out a full year for build with Mac method and 90-days for Browser build</li> </ul> </li> <li>Required<ul> <li>When your expiration date forces you</li> <li>Do not wait until the app expires - it will stop working<ul> <li>For Mac, you will see Loop is No Longer Available</li> <li>For Browser Build, the message is \"Loop Beta has expired\"</li> </ul> </li> <li>Hint - start a few weeks early and take your time</li> </ul> </li> <li>Optional<ul> <li>A new version of the Loop app is released and you want to install it</li> <li>You want to try a different branch or fork of Loop</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#steps-to-update","title":"Steps to Update","text":"<p>Updating the Loop app is the same idea as what happens to your other apps on your iPhone when you update them from the App Store on the phone. A newer version of the same app appears on the phone, simply updating-in-place the same the Loop app you were using with an updated version.</p> <ul> <li>Do NOT delete your current app from your phone - even if it says \"Loop is No Longer Available\" or \"Loop Beta has Expired\"</li> <li>There are files stored on your phone that will be read in as soon as the new Loop app is installed</li> <li>If you deleted your app, then you have to enter all your settings again<ul> <li>This is a good time to configure your phone to avoid accidental deletion</li> <li>Do an internet search like this: \"iOS 15.4 prevent app deletion\" where you use your current phone iOS version number and follow the instructions</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#typical-apple-update-schedule","title":"Typical Apple Update Schedule:","text":"<ul> <li>Each September, Apple releases a major iOS version which typically works with the current macOS but requires a new Xcode version</li> <li>Each September, Apple releases a major macOS version (but doesn't require you to update your Mac, yet)</li> <li>Each March, you must update to the current macOS (major version) to continue building applications</li> </ul>"},{"location":"faqs/update-faqs/#where-should-i-start-when-i-want-to-update-my-loop","title":"Where should I start when I want to update my Loop?","text":""},{"location":"faqs/update-faqs/#check-your-developer-account","title":"Check your Developer Account","text":"<p>Regardless of the build method, always check your Apple Developer Account status.</p> <p>Apple updates its License Agreement for the Developer Program frequently. You need to log in to your developer account to manually check if there is a new agreement to accept.  If you see a big red or orange banner across the top of your Developer Account announcing a new license agreement like shown below...please read and accept it before building Loop.</p> <p></p>"},{"location":"faqs/update-faqs/#updates-with-the-browser-build-method","title":"Updates with the Browser build method:","text":"<p>Go to Update/Rebuild with Browser and follow the instructions.</p>"},{"location":"faqs/update-faqs/#updates-with-the-build-with-mac-method","title":"Updates with the build with Mac method:","text":"<p>ALWAYS start with the Update/Rebuild with Mac before any new build with Mac. That page is important because it will offer information on the updates you may need for your Mac and Xcode before building.</p> <p>Do not simply build with your old downloaded folder from months ago. There is a high likelihood that your original code from awhile ago is outdated and might not build with the current phone iOS. Grab new code and you will get the compatible version that has all the latest and greatest features and bug fixes.</p>"},{"location":"faqs/update-faqs/#will-i-have-to-delete-my-old-loop-app","title":"Will I have to delete my old Loop app?","text":"<p>No. Do not delete your old Loop app. In fact, that is a bad idea as you will lose your currently paired pod and/or settings if you do that. So, don't delete.</p> <ul> <li>Refer to What if I change the branch or fork?</li> </ul>"},{"location":"faqs/update-faqs/#does-update-make-a-separate-second-loop-app","title":"Does update make a separate, second Loop app?","text":"<p>No. The Loop app is simply updated in-place, written right over the old version.</p> <p>The only exception to this is if you update/build using a different developer signing team than your current Loop app.</p> <ul> <li>The app's identity on your phone is defined by the developer ID.</li> <li>If you change that unique ID, your phone interprets that as a unique app as well...giving you two Loop apps on the phone.<ul> <li>Therefore, if changing developer accounts...you will get a new Loop app, and you would need a new Pod.</li> <li>You'll need to transfer your settings manually to the new app and delete your old app.</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#will-my-settings-be-saved-when-i-update","title":"Will my settings be saved when I update?","text":"<p>Yes. That's why we don't delete the app. Your settings will be saved so long as you use the same developer ID.</p>"},{"location":"faqs/update-faqs/#will-my-pod-still-work-when-i-update","title":"Will my pod still work when I update?","text":"<p>Yes. So long as you use the same developer ID as you originally built the app with before.</p>"},{"location":"faqs/update-faqs/#how-can-i-confirm-what-version-was-installed","title":"How can I confirm what version was installed?","text":"<p>The Loop app version is given at the top of the Loop settings page.</p> <p>There is more detailed information about how the Loop app was built at the top of the Issue Report as shown in the graphic in the next section.</p>"},{"location":"faqs/update-faqs/#when-will-my-app-expire","title":"When will my app expire?","text":"<p>The information in the graphic below shows the Build Details included at the very beginning of a Loop Report (<code>Loop, Setting, Support, Issue Report</code>).</p> <p>Up through version 3.2.3, the Browser Build versions do not report the correct date in the Expiration Alert. The date reported is correct with Mac Build or later versions using the Broswer Build.</p> <p></p> <ul> <li>A Browser Build can be identified when you see <code>runner</code> in the <code>* sourceRoot</code> line in the graphic above<ul> <li>If you add 90 days to the <code>* buildDateString</code>, that is approximately when the app expires</li> <li>The best method is to look in the TestFlight app because that tells you exactly how many days until expiration</li> </ul> </li> <li>A Mac Build expiration date can be read directly from the <code>* profileExpiration</code> line in the Build Details<ul> <li>The <code>* sourceRoot</code> line will be recognizable as where on your computer the download is located</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#what-if-i-change-the-branch-or-fork","title":"What if I change the branch or fork?","text":"<p>Does not matter. Changing the branch and even the fork is an update action. Nothing about the information above changes with the following exception.</p> <p>The exception to the rule is if you build <code>Loop 3</code> on your phone and want to return to <code>Loop 2.2.x</code> or any <code>FreeAPS fork</code>.</p> <ul> <li>In this case, the database storage is different between <code>Loop 3</code> and <code>Loop 2.2.x</code></li> <li><code>Loop 3</code> can read the data stored by <code>Loop 2.2.x</code>, but the reverse is not true</li> <li>If you are downgrading from <code>Loop 3</code> to <code>FreeAPS</code>, you need to first record settings, delete the old app and then build the desired app, enter your settings and add your pump (new pod required for Omnipod)</li> </ul>"},{"location":"faqs/update-faqs/#how-long-does-it-take","title":"How long does it take?","text":"<p>Assuming your macOS and Xcode updates are done, then plan on about 30 minutes for a Mac build. The Browser build steps are very fast, but then you need to wait about an hour for the build to complete and appear in TestFlight.</p>"},{"location":"gh-actions/automatic/","title":"Automatic Update & Build","text":""},{"location":"gh-actions/automatic/#overview","title":"Overview","text":"<p>After the next release of the Loop app (version 3.4.0), this page will be required for all versions when building with a browser.</p> <p>Before that release, this page is only relevant when building the <code>dev</code> branch with a browser and only when the <code>dev</code> branch is the default branch.</p>"},{"location":"gh-actions/automatic/#modify-automatic-building","title":"Modify Automatic Building","text":"<p>For someone using development code for their own use, they probably want to decide when to update their <code>fork</code> to the most recent commit. They can still have the advantage of automatic building without automatic updates. There may be other configurations someone would choose. These options are added to Loop 3.3.0 (<code>dev</code> branch) and later.</p> <p>You can affect the default behavior:</p> <ol> <li>Modify Automatic Schedule</li> <li>Disable Automatic Actions</li> </ol>"},{"location":"gh-actions/automatic/#modify-automatic-schedule","title":"Modify Automatic Schedule","text":"<p>You can modify the automation by creating and using some variables.</p> <p>To configure the automated build more granularly involves creating up to two environment variables: <code>SCHEDULED_BUILD</code> and/or <code>SCHEDULED_SYNC</code>. See How to configure a variable. </p> <p>Note that the weekly and monthly <code>Build Loop</code> actions will continue, but the actions are modified if one or more of these variables is set to false. A successful Action Log will still appear, even if no automatic activity happens.</p> <ul> <li>If you want to manually decide when to update your repository to the latest commit, but you want the monthly builds and keep-alive to continue: set <code>SCHEDULED_SYNC</code> to false and either do not create <code>SCHEDULED_BUILD</code> or set it to true</li> <li>If you want to only build when an update has been found: set <code>SCHEDULED_BUILD</code> to false and either do not create <code>SCHEDULED_SYNC</code> or set it to true<ul> <li>Warning: if no updates to your default branch are detected within 90 days, your previous TestFlight build may expire requiring a manual build</li> </ul> </li> </ul> <code>SCHEDULED _SYNC</code> <code>SCHEDULED _BUILD</code> Automatic Actions <code>true</code> (or NA) <code>true</code> (or NA) keep-alive, weekly update check (auto update/build), monthly build with auto update <code>true</code> (or NA) <code>false</code> keep-alive, weekly update check with auto update, only builds if update detected <code>false</code> <code>true</code> (or NA) keep-alive, monthly build, no auto update <code>false</code> <code>false</code> no automatic activity, no keep-alive"},{"location":"gh-actions/automatic/#how-to-configure-a-variable","title":"How to configure a variable","text":"<ol> <li>Go to the \"Settings\" tab of your LoopWorkspace repository.</li> <li>Click on <code>Secrets and Variables</code>.</li> <li>Click on <code>Actions</code></li> <li>You will now see a page titled Actions secrets and variables. Click on the <code>Variables</code> tab</li> <li>To disable ONLY scheduled building, do the following:<ul> <li>Click on the green <code>New repository variable</code> button (upper right)</li> <li>Type <code>SCHEDULED_BUILD</code> in the \"Name\" field</li> <li>Type <code>false</code> in the \"Value\" field</li> <li>Click the green <code>Add variable</code> button to save.</li> </ul> </li> <li>To disable scheduled syncing, add a variable:<ul> <li>Click on the green <code>New repository variable</code> button (upper right)</li> <li> <ul> <li>Type <code>SCHEDULED_SYNC</code> in the \"Name\" field</li> </ul> </li> <li>Type <code>false</code> in the \"Value\" field</li> <li>Click the green <code>Add variable</code> button to save</li> </ul> </li> </ol> <p>Your build will run on the following conditions:</p> <ul> <li>Default behaviour:<ul> <li>Run weekly, every Wednesday at 08:00 UTC to check for changes; if there are changes, it will update your repository and build</li> <li>Run monthly, every first of the month at 06:00 UTC, if there are changes, it will update your repository; regardless of changes, it will build</li> <li>Each time the action runs, it makes a keep-alive commit to the <code>alive</code> branch if necessary</li> </ul> </li> <li>If you disable any automation (both variables set to <code>false</code>), no updates, keep-alive or building happens when <code>Build Loop</code> runs</li> <li>If you disabled just scheduled synchronization (<code>SCHEDULED_SYNC</code> set to<code>false</code>), it will only run once a month, on the first of the month, no update will happen; keep-alive will run</li> <li>If you disabled just scheduled build (<code>SCHEDULED_BUILD</code> set to<code>false</code>), it will run once weekly, every Wednesday, to check for changes; if there are changes, it will update and build; keep-alive will run</li> </ul>"},{"location":"gh-actions/automatic/#disable-automatic-actions","title":"Disable Automatic Actions","text":"<p>To enable the scheduled build and sync, the <code>GH_PAT</code> must hold the <code>workflow</code> permission scopes. This permission serves as the enabler for automatic and scheduled builds with browser build. To disable this, follow these steps:</p> <ol> <li>Go to your FastLane Access Token</li> <li>If it says <code>repo</code>, <code>workflow</code> next to the <code>FastLane Access Token</code> link, then automatic building is enabled</li> <li>To disable automatic update and build, click on the link to open the token detail view<ul> <li>Click to uncheck the <code>workflow</code> box</li> <li>Click to check the <code>repo</code> box</li> </ul> </li> <li>Scroll all the way down to and click the green <code>Update token</code> button</li> <li>Your token now holds only the <code>repo</code> permission</li> </ol> <p>If you choose not to have automatic building enabled, be sure the <code>GH_PAT</code> has <code>repo</code> scope or you won't be able to manually build.</p>"},{"location":"gh-actions/automatic/#stop-building","title":"Stop Building","text":"<p>What if I decide I don't want the automatic building feature?</p> <ul> <li> <p>If you are using the released version of Loop, please leave automatic building running</p> <ul> <li>Please read TestFlight Automatic Updates on how to configure TestFlight so you choose when the updated app gets installed on your phone</li> <li>Otherwise, you may see the dreaded \"Loop Beta has expired\" message, have a Loop that won't open and not have a version ready to go in TestFlight that you can install within a few seconds</li> </ul> </li> <li> <p>If you are taking a break from Loop and want to stop monthly Build emails, consider disabling actions for the <code>Build Loop</code> action for your app.</p> <ul> <li>GitHub Directions to Disable and Enable a Workflow</li> <li>It is the Build action that kicks off the update and build steps, so simply disabling the one action is sufficient</li> </ul> </li> <li> <p>If you are done with Loop, you can delete the whole repository; but you should be sure about this because you'll need to start over with Configure to Use Browser to restore ability to build Loop with GitHub.</p> </li> </ul>"},{"location":"gh-actions/build-dev-browser/","title":"Build Loop dev with Browser","text":""},{"location":"gh-actions/build-dev-browser/#overview","title":"Overview","text":"<p>This page is only relevant when building the <code>dev</code> branch with a browser.</p> <p>For Mac, please see: Build Loop <code>dev</code> with Mac</p> <p>No matter the method used to build Loop-dev, you are testing development code. Please read this link now before continuing.</p> <ul> <li>What's going on in the <code>dev</code> branch</li> </ul>"},{"location":"gh-actions/build-dev-browser/#build-development-version","title":"Build Development Version","text":"<p>For Experienced Builders</p> <p>Building the development (<code>dev</code> branch) is not typically used for your first attempt at building the Loop app.</p> <p>The instructions on this page assume you are familiar with building the Loop app using a browser as detailed on Configure to use Browser</p> <ul> <li>You should be following along with zulipchat when using the <code>dev branch</code></li> <li>Summary build updates can be found under the One-Time Changes section</li> </ul> <p>You can build any desired branch (available at LoopKit/LoopWorkspace) using the GitHub Browser build method. This section is suitable if you have already built either <code>dev</code> or main branch using the GitHub First-Time instructions.</p> <p>The graphics on this page show the <code>dev</code> branch. If you want a different branch, just substitute that branch name for <code>dev</code>.</p> <p>Overview of what you will do</p> <ol> <li>Your <code>LoopWorkspace fork</code> must have the <code>branch</code> you want<ul> <li>You will either add it or make sure it is up to date</li> <li>You cannot just rename your existing branch to <code>dev</code> - you must get the <code>dev</code> branch from LoopKit</li> </ul> </li> <li>When you select the action <code>4. Build Loop</code> and then click on the <code>Run Workflow</code> dropdown, you must select <code>dev</code> there before clicking the green <code>Run workflow</code> button - see Build <code>Branch</code></li> </ol>"},{"location":"gh-actions/build-dev-browser/#check-current-branch","title":"Check Current <code>Branch</code>","text":"<p>Your <code>LoopWorkspace fork</code> is at <code>https://github.com/username/LoopWorkspace</code> where you substitute your actual GitHub <code>username</code>. You need to be logged into GitHub. Review the graphic below as you go through the steps.</p> <ol> <li>Click on the <code>branch</code> icon to display the <code>branches</code> as shown in the lower half of the graphic below:<ul> <li>If the <code>branch</code> you want is not listed, then continue with Step 2</li> <li>Otherwise, skip ahead to Update <code>Branch</code></li> </ul> </li> <li>Click on the <code>New branch</code> button and follow the Add <code>Branch</code> steps</li> </ol> <p></p>"},{"location":"gh-actions/build-dev-browser/#add-branch","title":"Add <code>Branch</code>","text":"<p>Each step in the list below matches with the number in the graphic. In the top half of the graphic, the left side shows the initial display and the right side shows the display after making the indicated selections:</p> <ol> <li>Click on the drop down menu labeled 1 in the graphic and choose LoopKit/LoopWorkspace as show in the top right graphic</li> <li>Click on the drop down menu labeled 2 in the graphic and choose <code>dev</code></li> <li>Click on the <code>Branch</code> name box labeled 3 in the graphic and type <code>dev</code><ul> <li>The branch name in your <code>fork</code> should always match the branch name you are adding; check that you type it correctly</li> </ul> </li> <li>Review the dialog items to make sure everything is correct and then tap on Create branch</li> </ol> <p></p>"},{"location":"gh-actions/build-dev-browser/#update-branch","title":"Update <code>Branch</code>","text":"<p>Tap the <code>Code</code> button (upper left) and ensure this branch in your <code>fork</code> is up to date.</p> <ul> <li>Select the desired branch in the dropdown menu (this graphic shows <code>dev</code> branch)</li> <li>If the message indicates this branch is \"behind\", tap on the sync <code>fork</code> button and then the Update branch button</li> </ul> <p></p>"},{"location":"gh-actions/build-dev-browser/#one-time-changes","title":"One-Time Changes","text":"<p>Look in this section for one-time changes for building <code>dev</code> with a browser that require special, one-time actions. </p> <p>If you have already completed the One-Time Changes, skip ahead to Build <code>Branch</code>.</p>"},{"location":"gh-actions/build-dev-browser/#transition-to-dev","title":"Transition to <code>dev</code>","text":"<p>When updating from\u00a0Loop\u00a03.2.x to <code>dev</code>, you will need to take some extra steps. </p> <p>You have a choice:</p> <ul> <li>You can change your default branch to <code>dev</code>, see Change Default <code>Branch</code> and then your\u00a0Loop\u00a0app will be automatically updated and automatically built at least once a month<ul> <li>Be sure to review the Modify Automatic Building section</li> </ul> </li> <li>You can leave your default branch at main, but no automated updates will happen<ul> <li>Running each action below requires you to select the <code>dev</code> branch in the drop-down menu</li> </ul> </li> </ul> <p>Here is a summary of the extra steps; each step has an associated link. This assumes you have already updated your <code>fork</code> and are at the correct branch.</p> <ol> <li>Confirm the status of your \u00a0GitHub Personal Access Token<ul> <li>It should be configured with permission scope of <code>repo, workflow</code> and to never expire</li> <li>You can check this using directions at GitHub Token</li> </ul> </li> <li>Next, follow along in this section to perform these steps before you build<ul> <li>Add and Update <code>New Indentifier</code></li> <li><code>Create Certificates</code></li> </ul> </li> </ol>"},{"location":"gh-actions/build-dev-browser/#automatic-creation-of-alive-branch","title":"Automatic Creation of <code>alive branch</code>","text":"<p>What about the <code>alive branch</code></p> <ul> <li>Sometimes you get an error about the <code>alive branch</code></li> <li>It should be created for you automatically if you are building with the <code>dev branch</code> and you have <code>workflow</code> permission added to the <code>scope</code> for your GitHub <code>Personal Access Token</code></li> <li>If necessary, delete the <code>alive branch</code> and run the <code>Build Loop</code> action again</li> </ul>"},{"location":"gh-actions/build-dev-browser/#add-and-update-new-identifier","title":"Add and Update New <code>Identifier</code>","text":"<p>The <code>bundle ID</code> for the \"<code>widget</code>\" changed from \"<code>SmallStatusWidget</code>\" to the more descriptive \"<code>LoopWidgetExtension</code>\".</p> <ul> <li>You need to run Add Identifier - be sure that you run this for the <code>dev branch</code></li> <li>Wait for it to succeed</li> <li>Add the <code>App Group</code> to this one new Identifier</li> </ul> <p>All other identifiers should be already set up. If they are not, please go through the steps on the Configure to Use Browser page to figure out what you are missing.</p> <code>NAME</code> <code>IDENTIFIER</code> <code>Loop Widget Extension</code> <code>com.TEAMID.loopkit.Loop.LoopWidgetExtension</code> <ul> <li>Open the Certificates, Identifiers &amp; Profiles: Identifiers List page.</li> <li>Click on the \"<code>LoopWidgetExtension</code>\" identifier</li> <li>Edit the App Group to include <code>group.com.TEAMID.loopkit.LoopGroup</code> where you use your <code>TEAMID</code></li> </ul>"},{"location":"gh-actions/build-dev-browser/#create-certificates-and-build","title":"Create Certificates and Build","text":"<p>You must create certificates again to cover the new Identifier name and to provide support for the addition of the Libre sensors. (This step is required whether you use Libre or not - Loop needs permission to have that capability). Once the certificate action succeeds, then run the action to build Loop.</p> <ol> <li>Run the Action for Create Certificates - be sure that you run this for the <code>dev branch</code></li> <li>Run the Action for <code>Build Loop</code> (see Build <code>Branch</code>)</li> </ol>"},{"location":"gh-actions/build-dev-browser/#build-branch","title":"Build <code>Branch</code>","text":"<p>If you want a branch to be the one you build all the time, you may choose to Change Default <code>Branch</code>. This is not necessary except for special cases.</p> <p>If you have one branch as default, for example main, and choose to build a different branch, there is an extra step when you <code>Build Loop</code>. Refer to step 4 in the graphic below. Use the branch dropdown menu to select the branch you want before hitting the green Run workflow button.</p> <p></p> <p>!!! </p>"},{"location":"gh-actions/build-dev-browser/#change-default-branch","title":"Change Default <code>Branch</code>","text":"<p>There can be several reasons why you would change your default branch.</p> <ul> <li>It can be convenient to have the branch you build most be configured as the default branch</li> <li>The branch you want to build has a different workflow than your default branch (not typical)<ul> <li>In this case, you must modify the default branch</li> <li>Check the zulipchat conversation about the branch you are testing to see if it is necessary to make it default</li> </ul> </li> </ul> <p>These are the steps to modify the default branch.</p> <p>For this example, we show how to change from a default branch of <code>main</code> to a default branch of <code>dev</code>. Note - only the owner of the repository can take this action and they must be logged in. Otherwise the Settings tab does not appear.</p> <p>For the numbered steps below, refer to the graphic found under each group of steps.</p> <ol> <li> <p>Click on the Settings Icon near the top right of your LoopWorkspace</p> <ul> <li>You may need to scroll down to see the <code>Default Branch</code> as shown in the graphic</li> <li>Do not tap on the Branches tab to the left under Code and Automation, that is not the correct menu</li> </ul> <p></p> </li> <li> <p>To the right of the default branch name there is a pencil and a left-right arrow icon</p> <ul> <li>Tap on the left-right arrow icon to bring up the <code>Switch default branch to another branch</code> dialog</li> </ul> </li> <li>Click on the dropdown next to the current default branch, in this example, <code>main</code></li> <li>Select the desired default branch, in this example, <code>dev</code></li> <li> <p>Click on the <code>Update</code> button</p> <p></p> </li> <li> <p>You will be presented with an are-you-sure question.</p> <ul> <li>Click on the red <code>I understand, update the default branch.</code> button</li> </ul> <p></p> </li> </ol> <p>Your default branch has been changed.</p>"},{"location":"gh-actions/build-dev-browser/#automatic-update-build","title":"Automatic Update &amp; Build","text":"<p>The automatic update and build features of the development branch are only available if you set the <code>dev</code> branch as your default branch. Be sure to read the Automatic Update &amp; Build if you did this.</p>"},{"location":"gh-actions/custom-browser/","title":"Customize using Browser","text":""},{"location":"gh-actions/custom-browser/#overview","title":"Overview","text":"<p>This page is only relevant when building with a browser.</p> <p>For Mac, please see: Customize with Mac</p> <p>For new Loopers, please build the code before you make any changes. Start with Open Loop and familiarize yourself with the interface. Later, you can make the customization(s) you desire and build again. The second build will be much easier than your first build.</p> <p>These customizations require you to modify the code used to build the Loop app and then build the app again with the modified code.</p> <p>You take responsibility</p> <p>You are responsible when you decide to use customizations.</p> <p>Be sure to report what changes you made if you need to ask for assistance with your app.</p>"},{"location":"gh-actions/custom-browser/#customizations-prepared-for-you","title":"Customizations Prepared for You","text":"<p>Some customizations are the same for everyone and have been prepared for easy use.</p> <p>The Loop and Learn team commits to maintaining these prepared customizations and provides an easy method to add your selection from these customizations to your version of Loop.</p> <p>Please read the documentation for these on the Loop and Learn: Customization Select Page:</p> <ul> <li>List of Customizations Available</li> <li>When building using a browser you will be modifying one of the special files that enable the GitHub action to build the Loop app. This file is called the build_loop.yml file and can be located at your <code>fork</code> of your <code>LoopWorkspace</code> repository. There are several sections you need to review on the Loop and Learn page:<ul> <li>Overview of how to modify the build_loop.yml file</li> <li>You will copy a template that you paste into that file and then edit it to keep just the customizations you want</li> <li>Template for <code>main</code></li> <li>Template for <code>dev</code></li> </ul> </li> </ul>"},{"location":"gh-actions/custom-browser/#add-libre-support-to-323","title":"Add Libre Support to 3.2.3","text":"<p>If you are using <code>main</code> branch to build <code>Loop 3.2.3</code> and rely on either xDrip4iOS or GlucoseDirect to read your CGM and transfer the readings to the Loop app, you need to review this section of the Loop and Learn customization page.</p> <p>Alternatively, you can switch to the <code>dev</code> branch, which already supports Libre. Build Loop dev with Browser</p>"},{"location":"gh-actions/custom-browser/#personal-customizations","title":"Personal Customizations","text":"<p>Some customizations must be created for yourself. These are of two basic types: Custom Edits and Build-Time Flag.</p> <p>The information needed to modify the code to make these customizations is found in the Versions tab because the information is independent of build method (think of these as your personal versions). The links are found below.</p> <ul> <li>Version: Custom Edits<ul> <li>The page linked above indicates how you can modify behavior by editing the code</li> </ul> </li> <li>Version: Build-Time Flag<ul> <li>By enabling or disabling features controlled by a Build-Time Flag, you are turning on or off features included in the code by the developers that they configured to be off or on by default</li> <li>Please read about these flags on the page linked above</li> </ul> </li> </ul> <p>When preparing these personal edits using a browser, there is a page explaining how to get these edits into your personal <code>fork</code> of <code>LoopWorkspace</code> prior to building.</p> <ul> <li>Custom Edits with Browser</li> </ul>"},{"location":"gh-actions/custom-browser/#details-at-links","title":"Details at Links","text":"<p>The code changes required for these customizations are the same regardless of the build method. The pages that provide the documentation on modifying and incorporating these changes are found at the links above.</p>"},{"location":"gh-actions/edit-browser/","title":"Custom Edits with Browser","text":""},{"location":"gh-actions/edit-browser/#hot-topics","title":"Hot Topics","text":"<p>Pro Tip</p> <p>The method on this page allows you to create a set of personalized customizations that you can use in addition to the Loop and Learn: Prepared Customizations. You can use (and re-use) your customizations with either Browser Build or Mac builds so you don't have to repeat the customization with every update.</p> <ul> <li>If you are building with Mac method, you can use the same lines prepared for Build with Browser method and simply paste them in your terminal at the\u00a0LoopWorkspace\u00a0folder to customize your code</li> <li>You can often use the same customization for several releases</li> <li>If a customization that you prepared for an older release says \"does not apply\" when you use it, you'll need to prepare a new one</li> </ul> <p>Modules vs Submodule</p> <p>This page has instructions to set up your own <code>fork</code> for the Modules, otherwise known as submodules, associated with\u00a0LoopWorkspace\u00a0that are needed for a selected customization.</p> <p>Each Module has its own GitHub <code>repository</code>;and you will be working with your <code>fork</code> of that Module at https://github.com/username/Module, where username is your username.</p> <p>What is a SHA-1?</p> <p>SHA-1 means Secure Hash Algorithm 1; which is used to generate an alphanumeric code.</p> <p>Each time you save a change to your\u00a0GitHub repository, a unique SHA-1 is created. That identifier is used to tell GitHub a specific change that you want applied or identifies a specific version for that <code>repository</code>. These work for any compatible <code>fork</code> from the original\u00a0GitHub repository.</p>"},{"location":"gh-actions/edit-browser/#do-not-make-a-pull-request-to-loopkit-github-username","title":"Do Not Make a Pull Request to LoopKit GitHub Username","text":"<p>Ignore\u00a0Compare &amp; pull request\u00a0Prompts</p> <p>Please do not click on boxes that GitHub might show you that ask if you want to Compare &amp; pull request.</p> <p>This would be an attempt to merge changes from your <code>fork</code> back to the original version that everyone uses. These changes are for you only. Ignore those prompts.</p>"},{"location":"gh-actions/edit-browser/#overview","title":"Overview","text":"<p>Time Estimate</p> <ul> <li>About half an hour to an hour per Module<ul> <li>Typically 1 or 2 Modules</li> </ul> </li> <li>Ten minutes to add patch lines to your build_loop.yml file</li> <li>One minute to start the build</li> <li>An hour before the build shows up on your phone in TestFlight</li> </ul> <p>Summary</p> <ul> <li>Prepare Customization (One Time):<ul> <li>Once you have prepared a given customization, you can use it again with each update</li> <li>If there is an update (new release) and the customization is no longer valid - you will get a clear error message<ul> <li>Just follow the steps on this page again to replace the customization that did not work</li> </ul> </li> <li>If there is an update (new release) and the customization applies with no errors, then you do NOT need to create an update</li> <li>It is a good idea to test each customization as soon as you install the new build on your phone</li> </ul> </li> <li>LoopDocs: Decide on Modules to modify using the Version: Custom Edits page<ul> <li>You only need to create your own customization if what you want is not provided at Loop and Learn: Customization List</li> <li>If there are customization not provided by the Customization List, then you need to make presonalized edits</li> <li>This current page explains how to make the edits using a browser</li> <li>The Version: Custom Edits gives instructions on identifying the Module, finding the file and editing the line(s) </li> </ul> </li> <li>GitHub (each Module):<ol> <li><code>Fork</code> the Module (if needed) - this is your <code>fork</code> where you will make changes</li> <li><code>Sync</code> the Module (if needed)</li> <li>Make the desired modification(s) using the pencil tool</li> <li>Save your changes</li> <li>Prepare lines needed for each customization and save</li> </ol> </li> <li>GitHub (LoopWorkspace) - using your <code>fork</code> where you will make changes<ol> <li>You will use the pencil tool to edit build_loop.yml</li> <li>Add customization lines to the file</li> <li>Save your changes</li> <li>Action 4: Build Loop</li> </ol> </li> <li>Phone: Install with TestFlight</li> </ul> <p>FAQs</p> <ul> <li>Do I need a Mac computer? No. This can be done on any browser.</li> <li>Should I build without customizations first? Yes. Make sure the build process works without customizations. You don't need to install the build on your phone, just make sure it builds without errors before you start modifying.</li> </ul>"},{"location":"gh-actions/edit-browser/#how-to-customize-build-with-browser","title":"How to Customize Build with Browser","text":"<p>You do this using any browser on a computer or laptop. (Phone is not recommended - screen is too small.)</p> <p>There is some background information at the bottom of this page starting at\u00a0LoopWorkspace\u00a0if you want to know what you are doing. Otherwise, just follow the steps like a cookbook.</p>"},{"location":"gh-actions/edit-browser/#decide-which-modules-you-want-to-modify","title":"Decide Which Modules You Want to Modify","text":"<p>Decide which Version: Custom Edits changes you want to make. Each customization lists a Module name.</p> <ul> <li>DASH Pods: Use OmniBLE</li> <li>Eros Pods: Use OmniKit</li> <li>Other Modules are Loop and LoopKit<ul> <li>Do not get confused later: LoopKit is both a username and a Module name</li> <li>Refer to the Module Table when directed</li> </ul> </li> </ul> <p>Look also at the Stable line for the desired customization:</p> <ul> <li>Stable: Yes or Changed on date</li> <li>The method for applying that customization differs slightly in the instructions below based on that notation</li> <li>The customizations that are not stable, are summarized in Not Stable List</li> </ul>"},{"location":"gh-actions/edit-browser/#outline-of-what-happens-in-the-module","title":"Outline of What Happens in the Module","text":"<p>Review Only</p> <p>Review this section so you know what to expect. The actual steps will come later, starting with Create your <code>Fork</code> for Selected Module or Edit Module in Browser.</p> <p>In the next sections, the exact process for making changes will be documented. But the steps may feel confusing. There are no links here because you are supposed to review the steps before taking action in the next section.</p> <ol> <li>First time for this module:<ul> <li>Make a <code>fork</code></li> <li>If the customization you want is not \"Stable\" and you are building <code>main</code><ul> <li>Create a new <code>branch</code> for your <code>fork</code> using the SHA-1 table</li> </ul> </li> </ul> </li> <li>Change the line(s) of code desired for your customization(s) in your <code>fork</code></li> <li>Save the change(s) using descriptive comments</li> <li>Repeat until done with this Module</li> </ol> <p>Later, you will use information from your <code>fork</code> to create your customizations. (Suggestion - use same file as your Secrets, or at least keep the customization file in the same folder). Details are found at the Prepare the Customizations section.</p>"},{"location":"gh-actions/edit-browser/#error-committing-your-changes","title":"Error Committing Your Changes","text":"<p>What should you do if you see the message:</p> <ul> <li><code>There was an error committing your changes: File could not be edited</code></li> </ul> <p>This is fairly rare, but it can happen. A user got this error when editing a file using GitHub:</p> <p></p> <p>The solution was to make sure the email address in their GitHub profile was correct. See GitHub Discussions for more information.</p>"},{"location":"gh-actions/edit-browser/#create-your-fork-for-selected-module","title":"Create your <code>Fork</code> for Selected Module","text":"<p>Choose your link:</p> <ul> <li>New <code>Fork</code>: if you do not have a <code>fork</code> of this Module</li> <li>Code Updates: if you are returning after a new release and the customization you used before no longer works</li> <li>Existing <code>Fork</code> for Module: if you have a <code>fork</code> but need guidance on whether it is the right <code>fork</code></li> </ul>"},{"location":"gh-actions/edit-browser/#code-updates","title":"Code Updates","text":"<p>New Release</p> <p>If you have previously used this process for a prior release, use the same Modules you already copied.</p> <p>You can often reuse customizations that you created earlier even with a new release. Attempt to use your existing patches before creating new ones.</p> <p>If a customization did not work, then</p> <ol> <li>Go to your <code>fork</code> of each Module</li> <li>Make sure you are on the Default Branch for that Module</li> <li>Sync that Module to get the most recent version</li> </ol> <p>Skip ahead to Personalized Customization for this Module.</p>"},{"location":"gh-actions/edit-browser/#new-fork","title":"New <code>Fork</code>","text":"<p>If you want a modification that uses a particular Module, you must make a <code>fork</code> of that module to your account in GitHub. You will repeat the <code>Fork</code> and Modify steps for each module.</p> <ol> <li>Log into your GitHub account</li> <li>Click the URL in the Module Table</li> <li>This opens a new browser tab at the URL of the module you need to <code>fork</code></li> <li>Click on\u00a0Fork, your <code>fork</code> will show up in the browser</li> </ol>"},{"location":"gh-actions/edit-browser/#module-table","title":"Module Table","text":"<p>This table lists all the modules referred to on the Code Customization page linked above:</p> Module <code>Fork</code> From Loop https://github.com/LoopKit/Loop LoopKit https://github.com/LoopKit/LoopKit OmniBLE (for DASH) https://github.com/LoopKit/OmniBLE OmniKit (for Eros) https://github.com/LoopKit/OmniKit <p>Remember - you can only have a single <code>fork</code> of a given\u00a0GitHub repository. If you already have a <code>fork</code>, you don't need another one; but it must be a linked to the URL listed the Module Table.</p> <p>I already have a <code>fork</code></p> <p>Go to Existing <code>Fork</code> for Module and follow the directions.</p>"},{"location":"gh-actions/edit-browser/#default-table","title":"Default Table","text":"<p>When you\u00a0\"fork a repository\", the default\u00a0branch\u00a0is the one that should be <code>forked</code>.</p> username/Repository Default LoopKit/Loop dev LoopKit/LoopKit dev LoopKit/OmniBLE dev LoopKit/OmniKit main"},{"location":"gh-actions/edit-browser/#create-branch-if-needed","title":"Create <code>branch</code> if needed","text":"<ul> <li>If the customization you wish to prepare indicates Stable: Yes, you can skip ahead to Personalized Customization for this Module</li> <li>If you are preparing a customization for the <code>dev</code> branch, regardless of the Stable notation, there is no need to create a special <code>branch</code>, simply update the default branch to the latest (sync it) and use the current version of the customization when you skip ahead to Personalized Customization for this Module</li> <li>Otherwise, when you a preparing a customization where the file changed sufficiently between <code>main</code> and <code>dev</code> and you want to build the <code>main</code> branch, you need to create a branch for this Module that is consistent with the version you wish to customize.</li> </ul> <p>Open your browser to your https://github.com/username/Module URL. If you already created the <code>branch</code> you need, you do not need to create a new one.</p> <p>If you are customizing a released version, use the Table of SHA-1 under your version number below. Copy the SHA-1 for your Module so you can paste it into the URL in Step 2 below. Notice the suggested branch name for that table. You will use this in Step 3.3 below.</p> <p>You should create a <code>branch</code> following the numbered steps and watching the GIF. Each Frame in the GIF corresponds to a numbered step below.</p> <ol> <li>Click on URL line as indicated by the arrow</li> <li>Add the text <code>/tree/SHA-1</code> where you change SHA-1 to be the value in the table below and hit return</li> <li>Create a new branch in three steps<ul> <li>3.1: Click on the dropdown under the <code>branch</code> icon</li> <li>3.2: Type the suggested new <code>branch</code> name in the blank space</li> <li>3.3: Click on the create <code>branch</code> button</li> </ul> </li> <li>You should see a screen similar to the example below<ul> <li>Do not click on the Create Pull Request button that is marked with a big X</li> </ul> </li> </ol> <p></p>"},{"location":"gh-actions/edit-browser/#table-of-sha-1","title":"Table of SHA-1","text":"<p>This will be updated with each release. The versions for the <code>dev</code> branch are not reported here because they are frequently updated. If customizing dev, use the default branch for each Module and <code>sync</code> that branch if needed.</p>"},{"location":"gh-actions/edit-browser/#version-323","title":"Version 3.2.3","text":"<p>Suggested <code>branch</code> name is <code>v-3.2.3</code></p> <code>Repository</code> SHA-1 <code>LoopWorkspace</code> 81a3d9b03305a4b2a844bd6bac14a14f27626fef <code>Loop</code> c6b058b4276681600979aaeba518c635f06ac135 <code>LoopKit</code> 9835a29f1bac9f75023f39c376479a2e6a6c8ccd <code>OmniBLE</code> f21360781c0b8eee26c531d20f1b0aa192a227f2 <code>OmniKit</code> c1e0d395975c93d15b3f84ac21097e40b7d5d93f"},{"location":"gh-actions/edit-browser/#personalized-customization-for-this-module","title":"Personalized Customization for this Module","text":"<p>Navigate to the file you need to modify (using the instructions to find the lines from the Version: Custom Edit page)</p> <p>Pro Tip</p> <p>Look at the files you want to change - if more than one change is desired for a single file - do them at the same time.</p> <p>This section provides the steps to make a single customization for the Module. If you need more than one, just repeat the process and make additional\u00a0\"\"patch\" branches.</p>"},{"location":"gh-actions/edit-browser/#example-gif","title":"Example GIF","text":"<p>The GIF showing the creation of one customization is shown below. Please review the 4 frames of the GIF, read the detailed instructions below and then review the GIF again. In case you are concerned by the\u00a0\"Pull Request\u00a0shown here; this is to your own <code>fork</code>, not back to the original.</p> <p></p>"},{"location":"gh-actions/edit-browser/#detailed-instructions","title":"Detailed Instructions","text":"<p>You will be using the \"pencil\" tool in the browser display for your <code>fork</code>.</p> <p>Are there detailed instructions?</p> <p>For more information about editing with GitHub:</p> <ul> <li>GitHub Docs: Editing Files</li> </ul> <p>The bullets below go with Frame 1 of the GIF above:</p> <ul> <li>Once you make the change to a given file, click on\u00a0\"Commit changes\" (upper right)</li> <li>Click in the\u00a0\"Commit message\"\u00a0box and replace the default\u00a0\"Update filename\"\u00a0with a comment about what the customization does</li> <li>Click on the second option near the bottom\u00a0\"Create a new branch for this commit\"<ul> <li>Note: when you do the\u00a0LoopWorkspace\u00a0modifications, you will not choose this option</li> </ul> </li> <li>Click on the\u00a0\"Propose changes\"\u00a0button</li> <li>As soon as you do this, a new\u00a0\"branch\"\u00a0is automatically created with a name like username-patch-#, where the number increments each time</li> </ul> <p>The bullets below go with Frame 2 of the GIF above:</p> <ul> <li>You will be shown a screen where you create a pull request to your own <code>fork</code> (this does not go back to the original)</li> <li>First review the changes (shown at the bottom) and then click on the\u00a0\"Create pull request\"\u00a0button</li> </ul> <p>Between Frame 2 and 3 of the GIF, your display will look similar to the graphic below:</p> <p></p> <p>You see there an opportunity to\u00a0\"Compare &amp; pull request\"</p> <ul> <li>Do not click on that<ul> <li>This would be an attempt to merge changes from your <code>fork</code> back to the original</li> </ul> </li> </ul> <p>The\u00a0branches\u00a0selection is highlighted with a brown rectangle in the graphic above. </p> <ul> <li>You can use the drop-down menu or click on the word\u00a0branches.</li> <li>Choose the\u00a0branch\u00a0you just created, i.e., username-patch-#.</li> </ul> <p>Your screen should now look like Frame 3 of the GIF above:</p> <ul> <li>Click on the Clock icon to the right</li> </ul> <p>Now your display should look like Frame 4 of the GIF above:</p> <ul> <li>The top line is the last thing saved (your customization)</li> <li>You need to record the very long alphanumeric number associated with this</li> <li>There is a copy icon to the right - click on it and save it in your text file along with a comment about the customization and record which module you used for the customization</li> </ul> <p>For example:</p> <pre><code># OmniBLE: Increase insulin at insert by 0.35 U\nSHA-1 = 5e9f4f407ff5544663f496d2e3a5ed8aa4f32a68\n</code></pre> <p>Warning - that is not a valid SHA-1 for this change. Do not try to copy it and use it. You must make your own personalized changes.</p> <p>Later on, you will create the actual command needed to insert into build_loop.yml so you can add this customization when your build the app.</p> <p>Repeat this process until you've done all your customizations for this Module and then move on to the next Module.</p>"},{"location":"gh-actions/edit-browser/#prepare-the-customizations","title":"Prepare the Customizations","text":"<p>Once you prepare the commands, then you will edit the build_loop.yml file of your <code>fork</code> of\u00a0LoopWorkspace.</p> <p>Ensure your <code>fork</code> is from\u00a0LoopKit/LoopWorkspace</p> <p>If your\u00a0LoopWorkspace fork\u00a0did not come from\u00a0LoopKit/LoopWorkspace, then delete your existing <code>fork</code> and make a new one. See Already Have\u00a0LoopWorkspace?.</p> <ul> <li>Do not use any other location to create your <code>fork</code></li> <li>You may have used a different location for Loop 3.2.2</li> <li>This is not supported for Loop 3.2.3 or later</li> </ul> <p>For each customization you want to include, create a pair of lines consisting of the comment (must start with a #) followed by the\u00a0<code>curl</code>\u00a0statement pointing to the SHA-1 that has the customization.</p> <p>Save the customization lines in your text file for later use in the build_loop.yml file.</p> Customization Template:<pre><code># Module: File: code customization description\ncurl https://github.com/username/Module/commit/SHA-1.patch | git apply -v --directory=Module\n</code></pre> <p>where:</p> <ul> <li><code>curl</code>\u00a0means copy from URL</li> <li>username is your GitHub username</li> <li>Module is where you made the customization (Module is in multiple places)</li> <li>SHA-1 is the full identifier for the desired change; there is a copy button to make this easy</li> <li>adding\u00a0<code>.patch</code>\u00a0after the SHA-1 informs GitHub to format that code change so it can be applied to your <code>fork</code></li> <li>the final\u00a0<code> --directory=Module</code>\u00a0is critical to apply the customization to the correct Module</li> </ul> <p>To view the exact code change associated with that patch, open a browser at the URL of\u00a0<code>https://github.com/username/Module/commit/SHA-1</code>.</p>"},{"location":"gh-actions/edit-browser/#update-loopworkspace","title":"Update\u00a0LoopWorkspace","text":"<p>The final step is to update your\u00a0LoopWorkspace fork\u00a0to apply these customizations by adding those customization lines into the build_loop.yml file.</p> <p>Return to your\u00a0GitHub fork for LoopWorkspace\u00a0and make sure to sync it if needed.</p> <ul> <li>Find the folder .github/workflows and click on it</li> <li>Find the file build_loop.yml and click on it</li> <li>Click on the pencil (so you can edit this file)</li> <li>If you are building dev, or if version 3.4 was just released - the directions are different<ul> <li>Skip the part where you copy and paste the block of text - it's already included</li> <li>You will Add Personal Customizations to build_loop.yml at or near line 239</li> </ul> </li> <li>If you are building main, before version 3.4 was released, keep going</li> <li>Locate line 31, which is just above the words:<ul> <li><code># Patch Fastlane Match to not print tables</code></li> </ul> </li> <li>Paste the contents of the block below so it comes before that section</li> </ul> Paste into build_loop.yml<pre><code>      # Customize Loop: Download and apply patches\n      - name: Customize Loop\n        run: |\n\n          # For each patch, edit comment line (keep the #) then update curl (and remove the #)\n\n          # Submodule Loop patches:\n          # Loop: Filename: customization details\n          #curl https://github.com/username/Loop/commit/SHA-1.patch | git apply -v --directory=Loop\n\n          # Submodule LoopKit patches:\n          # LoopKit: Filename: customization details\n          #curl https://github.com/username/LoopKit/commit/SHA-1.patch | git apply -v --directory=LoopKit\n\n          # Submodule xxxxx patches: Follow prototype above\n</code></pre>"},{"location":"gh-actions/edit-browser/#add-personal-customizations-to-build_loopyml","title":"Add Personal Customizations to build_loop.yml","text":"<p>Open the text file in which you saved the customization lines.</p> <p>For a given submodule, paste the comment / curl command as indicated in the template above.</p> <p>The indenting needs to match, so tab or (shift-tab) to line up the columns.</p> <p>Once you are done with all the edits for build_loop.yml you will commit the changes to your <code>fork</code> directly.</p> <ul> <li>Once you have finished the edits for build_loop.yml</li> <li>Click on\u00a0Commit changes (upper right)</li> <li>Click in the larger box below\u00a0\"Update build_loop.yml\"\u00a0and summarize the customizations you added</li> <li>Click on the option to\u00a0\"Commit directly to your branch\"<ul> <li>NOTE: for\u00a0LoopWorkspace fork\u00a0- commit directly to your default branch</li> </ul> </li> <li>Click on\u00a0Commit changes</li> <li>You can make as many changes to build_loop.yml in your <code>fork</code> as you want</li> </ul> <p>When you are ready, it's time to build with your customizations.</p>"},{"location":"gh-actions/edit-browser/#build-with-customizations","title":"Build with Customizations","text":"<p>At the top of the display, click on\u00a0Actions.</p> <ul> <li>Click on\u00a0Action 4: Build Loop<ul> <li>Click on Run workflow on the right side</li> <li>Then click on the green Run Workflow button</li> </ul> </li> </ul> <p>Wait about 2 minutes before walking away to make sure there are no errors. If you get an error, then look for the first \"did not apply\" error message and fix the customization right before that line.</p> <p>In about 1 hour, your customized app will be available for installation on your phone via TestFlight.</p>"},{"location":"gh-actions/edit-browser/#customization-and-sha-1","title":"Customization and SHA-1","text":"<p>When you commit your customization to your <code>branch</code> of your <code>fork</code>, there is a new SHA-1 associated with that step. The SHA-1 for a given branch, typically <code>main</code> or <code>dev</code> identifies to a mentor exactly which version of code you used for your build.</p> <p>The SHA-1 for customized code will not be recognized by a developer or mentor. If you are having a problem and need to ask for help you need to identify what the SHA-1 was before you added your customizations.</p> <p>If you are on <code>main</code> branch and it is up-to-date, this is less of an issue. If you are on <code>dev</code> branch, that can require some investigation.</p>"},{"location":"gh-actions/edit-browser/#ask-for-help-to-identify-your-base-version","title":"Ask for Help to Identify Your Base Version","text":"<p>The easy method is to provide a mentor with your GitHub username and they can figure out the base version you are using aside from customization. They can also identify the customizations you added.</p>"},{"location":"gh-actions/edit-browser/#identify-your-base-version","title":"Identify Your Base Version","text":"<p>If you want to do this yourself, this section explains the steps.</p> <ul> <li> <p>Step 1: In your customized <code>LoopWorkspace fork</code>: tap on <code>Code</code> at upper left</p> <ul> <li>If your <code>fork</code> is behind the <code>LoopKit</code> <code>repository</code>, consider updating your <code>fork</code><ul> <li>Typically this can be done without changing your customization</li> </ul> </li> <li>Because you added customizations, your <code>fork</code> will be ahead of the <code>LoopKit</code> <code>repository</code></li> <li>An example is shown for the <code>main</code> branch in the graphic below - it is one <code>commit</code> ahead of <code>LoopKit</code> as indicated by the message highlighted by the red rectangle</li> </ul> <p></p> </li> <li> <p>Step 2: Click on the clock symbol, highlighted by blue rectangle in the previous graphic, to view the <code>commit</code> history - the history is presented in reverse chronological order</p> </li> <li> <p>Step 3: Look at the <code>commit</code> descriptions for your <code>fork</code>; several examples are shown below</p> <ul> <li>The last <code>commit</code> made by the developers that is included in your <code>fork</code> is the one a mentor will recognize</li> <li> <p>The first example is for <code>main</code> with one customization</p> <ul> <li>The row highlighted in red is the one a mentor will recognize</li> <li>The 7-digit alpha-numeric identifier for the <code>commit</code> is highlighted in the blue rectangle</li> <li>If you click on the copy icon beside it, the full SHA-1 is captured in your paste buffer but the first 7 characters are sufficient to identify your base version (before customization) to a mentor</li> </ul> <p></p> </li> <li> <p>The second example is for <code>dev</code> where the <code>fork</code> was synched both before and after customizations were applied</p> <ul> <li>Red rectangle labeled 1 is the commit a mentor will recognize</li> <li>Blue dashed rectangle labeled 2 is what GitHub adds when the user successfully syncs the <code>repository</code> - note that the SHA-1 here is specific to this repo and does not help a mentor identify the base version of your build</li> <li>The row above the red rectangle is a customization made prior to the sync</li> <li>The top row (above the blue rectangle) is a customizaiton made after the sync</li> </ul> <p></p> </li> </ul> </li> </ul>"},{"location":"gh-actions/edit-browser/#special-cases","title":"Special Cases","text":""},{"location":"gh-actions/edit-browser/#existing-fork-for-module","title":"Existing <code>Fork</code> for Module","text":"<p>What if you already have a <code>fork</code> of one of the modules?</p> <p>Your existing <code>fork</code> is from a username other than LoopKit</p> <ul> <li>If you know this is a <code>fork</code> you do not care about, you can delete the <code>repository</code>.</li> <li>If you care about this <code>fork</code>, you are probably experienced enough to know how to solve the issue.</li> </ul> <p>Instructions to delete a <code>repository</code> are found at\u00a0GitHub Docs</p> <p>Once deleted, go to Create Your <code>Fork</code> for Selected Module.</p>"},{"location":"gh-actions/edit-browser/#background-information","title":"Background Information","text":""},{"location":"gh-actions/edit-browser/#loopworkspace","title":"LoopWorkspace","text":"<p>The\u00a0LoopWorkspace repository\u00a0is the umbrella organization holding all the pieces needed to build the Loop app. It provides a list of pointers to a specific version for each of the Modules used in the workspace.</p> <ul> <li>commit: a specific change to the code identified by the SHA-1; the most recent one indicates the most recent version of the code</li> <li>workspace: a grouping of several repositories (Modules) into a complete package</li> <li>LoopWorkspace: includes a list of the specific SHA-1 for each Module needed for the app</li> </ul> <p>You are telling GitHub to apply specific customizations when it builds your app for you. It extracts from GitHub all the code needed, applies your specific customizations and then starts the build.</p>"},{"location":"gh-actions/gh-deploy/","title":"Install on Phone","text":""},{"location":"gh-actions/gh-deploy/#general-installation-information","title":"General Installation Information","text":"<p>This is only available with\u00a0Loop 3.</p> <p>The Loop app must be built at least every 90 days when using a browser to build.</p> <p>After you Build the Loop App with a browser and it has automatically uploaded to the TestFlight app, you are ready to install on as many phones as you and your family members need.</p> <ul> <li> <p>If you later need to add an adult family member to your list, refer to Set Up Users and Access (TestFlight).</p> </li> <li> <p>Children (under 13 in US, varies by country) cannot use TestFlight with their ID. When you use TestFlight for a Child, you will need to use your ID on their phone (not the whole phone - just the Media &amp; Purchase portion), so send the TestFlight invitation to the email associated with your ID.</p> </li> </ul>"},{"location":"gh-actions/gh-deploy/#install-testflight","title":"Install TestFlight","text":"<p>If you already have the TestFlight app installed on your phone, skip ahead to Install App with TestFlight.</p> <p>To install TestFlight, refer to the GIF below:</p> <ul> <li>On the phone, open the App Store and Search for TestFlight</li> <li>Install or Download to that phone TestFlight<ul> <li>Hint: On child's phone, do this while logged in as yourself for Media &amp; Purchase</li> <li>Logging in as an adult is explained in TestFlight for a Child</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-deploy/#install-app-with-testflight","title":"Install App with TestFlight","text":"<p>Once you get an email that the TestFlight processing completed, you can install the app on your phone. Note this can be half-hour to an hour after the build displays the green check mark on your browser.</p> <p>The first time you use TestFlight on any phone associated with a given email, you must <code>Redeem</code> the code sent to that email inviting you to test the app. The GIF below is for someone who has never used TestFlight.</p> <ul> <li>Initial screen indicates there are no Apps available to test, tap on Redeem</li> <li>Enter your code and tap redeem to enter it</li> <li>Click on OK to acknowledge</li> <li>Click on Install</li> </ul> <p></p> <p>If you already have the\u00a0Loop\u00a0app on the phone, you'll see the warning about possible loss of data. Don't worry, all your settings remain. Go ahead with the installation.</p> <ul> <li>If you are building\u00a0Loop\u00a03.x over\u00a0Loop\u00a02.x, you will be required to go through Onboarding</li> </ul>"},{"location":"gh-actions/gh-deploy/#subsequent-times-on-phone","title":"Subsequent Times on Phone","text":"<ul> <li>Open the TestFlight app and find the name you used for your Loop app in the Create Loop App in App Store Connect step</li> <li>Tap on Install<ul> <li>If you already have the Loop app installed on this phone, you will be warned that the app already exists on your phone and that you might lose data</li> <li>Click Install again (your pump connection and all your data will be fine)</li> </ul> </li> <li>Choose Open</li> <li>Make sure the Loop app is operating as expected</li> </ul>"},{"location":"gh-actions/gh-deploy/#automatic-update-build-install","title":"Automatic Update, Build, Install","text":"<p>Automatic features will be available when the next version is released and are available now in 3.3.0 (when\u00a0dev is the default branch). The instructions on the Configure to Use Browser page will, unless you make a change, automatically take the following actions when you update to the next release or use <code>dev</code>:</p> <ul> <li>Update the version of your\u00a0fork\u00a0within a week of the change</li> <li>Build the app at least once a month and upload to TestFlight</li> </ul> <p>It is already true that, unless you make a change, the default setting will:</p> <ul> <li>Install each new build on phone from TestFlight</li> </ul>"},{"location":"gh-actions/gh-deploy/#recommendation","title":"Recommendation","text":"<p>Recommended settings:</p> <ul> <li>Allow automatic update of your\u00a0fork</li> <li>Allow automatic build and upload to TestFlight</li> <li>Disable automatic installation on phone from TestFlight</li> </ul> <p>If you are running the development code, you may prefer to turn off the automatic update, but keep the automatic build. To read more about modifying automatic update and build options, please read Modify Automatic Building.</p>"},{"location":"gh-actions/gh-deploy/#disable-automatic-install-from-testflight","title":"Disable Automatic Install from TestFlight","text":"<p>Once the app is installed one time, you can adjust whether it is automatically installed when updated versions are available. We recommend you disable automatic installation so you can choose when to switch to a newer build, which in some cases, may be a newer version.</p> <p>Go back to the TestFlight app on your phone and tap on your app name in the list to see an expanded screen similar to the graphic below. The row to enable or disable automatic updates is highlighted in the graphic, which shows the feature disabled. This is recommended for all users.</p> <ul> <li>If you leave automatic update enabled (default), then whenever a new build is created and uploaded to TestFlight , it will be installed immediately.</li> <li>WARNING: If you switch between Building with Browser and Mac, you must disable automatic update or Xcode will not be able to install to your phone.</li> </ul> <p></p> <p>When you are ready to install, just open the TestFlight app and click Install to get the most recent build and then click Open when it completes the installation. All your settings and connections to CGM and Pump are maintained.</p> <p>If you tap on the bottom row that says <code>Previous Builds</code>, highlighted by the dashed-green rectangle, you can view and choose an older build (as long as it has not expired).</p>"},{"location":"gh-actions/gh-deploy/#testflight-for-a-child","title":"TestFlight for a Child","text":"<p>The adult (Apple Developer Account owner) can log into Media &amp; Purchase (see steps below) without affecting the child Apple ID associated with a phone (and thus their health records used by\u00a0Loop). After the adult installs or updates the app using TestFlight, they probably should reverse those steps to remove their credentials from Media &amp; Purchase.</p> <p>Media &amp; Purchase affects access to the App Store, Books, Music and Podcasts.</p> <p>On the Child phone:</p> <ul> <li>Tap on Settings</li> <li>At the very top of Settings, tap on the Name of the phone, for example, <code>my kids phone</code></li> <li>Apple ID Screen appears<ul> <li>Tap on Media &amp; Purchases</li> <li>Tap on Sign Out, and confirm</li> <li>Sometimes the phone requires a reboot before you can sign in with a different ID</li> </ul> </li> <li>Sign in with the adult (Apple Developer Account owner) Apple ID and password</li> <li>Install or Update the app from TestFlight on child phone</li> <li>Repeat the process to sign out the adult and (if needed) sign back in the child</li> </ul>"},{"location":"gh-actions/gh-deploy/#change-the-app-store-connect-name","title":"Change the App Store Connect Name","text":"<p>Suppose you really don't like the name you picked initially for the\u00a0Loop\u00a0app that shows up in the TestFlight app.</p> <p>You can change it.</p> <p>Open this link: App Store Connect Apps and log in as needed.</p> <ul> <li>Click on your app name.</li> <li>Click on App Information on the left side (make browser wider if you don't see this).</li> <li>Modify the Name under Localizable Information and click on the Save button (upper left)</li> <li>If you chose a name that is in use, you'll see the warning screen - try again</li> </ul>"},{"location":"gh-actions/gh-errors/","title":"Errors with Browser","text":""},{"location":"gh-actions/gh-errors/#help-with-errors","title":"Help with Errors","text":"<p>If you get an error when building with a browser, use this page to figure out what to do.</p> <p>If you are still unsuccessful, then post your request for help along with your GitHub username. Mentors can go to your public\u00a0GitHub repository, check the status and then view your log files directly.</p> <ul> <li>Do not copy from the log file and post the words</li> <li>Do not take a screenshot of what you think is an error</li> <li>Just post your username and the name of the app you are trying to build</li> </ul> <p>Username, Not Pictures</p> <p>If you've been around the DIY community for a while, you know the mantra about screenshots. Well, when using a browser to build, screenshots are close to useless.</p> <p>All that is needed to assist is your GitHub username.</p> <p>But first - try to diagnose it yourself using this page.</p>"},{"location":"gh-actions/gh-errors/#most-common-mistakes","title":"Most Common Mistakes","text":"<p>These are some of the most common errors to date.</p> <ol> <li>You made a spelling error when adding <code>Secrets</code><ul> <li>Each secret must be spelled exactly the way it is presented in the instructions</li> <li>If you are using an automatic translation, please keep an original page open too and copy from it to make sure there are no spelling errors in the secret name</li> </ul> </li> <li>You did not add the <code>App Group Identifier</code> to all 4 of the required identifiers in this step: Add <code>App Group</code> to <code>Identifiers</code></li> <li>You used a smart editor instead of a text-only editor to save your information<ul> <li>It only takes one letter to be changed from lower-case to upper-case by your smart editor to ruin your day</li> <li>The alpha-numeric values used for <code>GH_PAT</code>, <code>FASTLANE_ISSUER_ID</code> and <code>FASTLANE_KEY</code> contain both upper and lower-case characters and all the values are case-sensitive</li> </ul> </li> <li>When saving <code>TEAMID</code>, you typed what you thought you saw instead of using copy and paste</li> <li>You skipped running one of the actions</li> <li>You need to sign a program license agreement or update a credit card at\u00a0Apple Developer<ul> <li>Be sure to read Misleading Error Message</li> </ul> </li> </ol> <p>If you are running development code, skip ahead to Preview for Next Version.</p>"},{"location":"gh-actions/gh-errors/#misleading-error-message","title":"Misleading Error Message","text":"<p>If there are Apple Developer agreements you have not accepted, you may get errors when you try to Build that indicate your Apple <code>Secrets</code> are incorrect even if they are not.</p> <ul> <li>The misleading message tells you that one or more of these: <code>FASTLANE_ISSUER_ID</code>, <code>FASTLANE_KEY_ID</code> or <code>FASTLANE_KEY</code> is not correct</li> <li>Check your Apple Developer account for agreements first, before trying to fix those</li> <li>If you previously built successfully - it is almost certainly the agreement</li> <li>It can take 15 minutes to an hour after the agreement is signed before it can be used</li> </ul> <p>If you need detailed instructions, click on this <code>Apple Program License Agreement</code> Help Page.</p> <p>You can also get this message if the credit card used to purchase the Developer account is not current, e.g., no longer valid or expiration date has passed.</p> <p>One user reported: The expiration date on the credit card used for auto-renew of my developer account was updated and the value in the Apple account did not match the new one. After updating my account with the new expiration date - Browser Build succeeded again.</p>"},{"location":"gh-actions/gh-errors/#find-your-error","title":"Find Your Error","text":"<p>For Version 3.2.3 and earlier - later versions have an improved method for display errors.</p> <p>There is a separate section for each step in the process. First, you must follow the Examine the Error instructions to view the record of the failed action. Then go to the section for the Action you were trying to complete to look for possible error strings to copy into the search box.</p> <ol> <li>Action: <code>Validate Secrets</code></li> <li>Action: <code>Add Identifiers</code> Errors</li> <li>Action: <code>Create Certificates</code> Errors</li> <li>Action: <code>Build Loop</code> Errors before a successful build</li> <li>Repeat <code>Build Loop</code> Errors after a successful build</li> </ol> <p>If you discover a new error, please reach out to help us update the documentation.</p>"},{"location":"gh-actions/gh-errors/#examine-the-error","title":"Examine the Error","text":"<p>It doesn't matter which action you are running; after the action completes, you will either see a green check mark  for success or a red x mark  for failure. The graphic below shows an example for the <code>Add Identifiers</code> action.</p> <p></p> <p>If you click on the action name, it opens a secondary screen as shown below.</p> <p></p> <p>Click on the top link to view the record of the failed action as shown in the graphic below. You will be pasting strings into the search box (highlighted with a green rectangle) to look for a documented error. Please read the instructions below the graphic.</p> <p></p> <ul> <li>Paste in a possible error string (copy it exactly); repeat until you find a match</li> <li>If the possible error string is found - follow the directions for that error</li> <li>Still stuck?<ul> <li>Post for help including your GitHub username</li> <li>With that, mentors can diagnose your problem - or at least make a good guess at what you need to try</li> <li>Please do NOT post a screenshot</li> </ul> </li> </ul> <p>Where to find my GitHub username?</p> <p>You can find it:</p> <ul> <li>either in the URL of your fork of <code>Loopworkspace</code>, after <code>github.com</code> in between the forward slashes (<code>/</code>).    https://github.com/username/Loopworkspace</li> <li> <p>or on the GitHub website</p> <p> </p> <p></p> </li> </ul> <p>As your GitHub <code>username</code> is case-sensitive, use copy and paste.</p>"},{"location":"gh-actions/gh-errors/#action-validate-secrets-errors","title":"Action: <code>Validate Secrets</code> Errors","text":"<p>To generate the graphic below, some items were deliberately set to be incorrect in the Secrets list. Representative error messages are shown when running the validate secrets action.</p> <p></p>"},{"location":"gh-actions/gh-errors/#action-add-identifiers-errors","title":"Action: <code>Add Identifiers</code> Errors","text":"<p>Use the Examine the Error instructions to find your error message.</p> <p>There are two errors that we are familiar with at this point. Look for text matching what is listed below and view what has caused this error to be seen.</p>"},{"location":"gh-actions/gh-errors/#error-credentials-missing-invalid","title":"Error: credentials missing / invalid","text":"<p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>Authentication credentials are missing or invalid\n</code></pre> <p>The full error looks like this:</p> <p>Authentication credentials are missing or invalid. - Provide a properly configured and signed bearer token, and make sure that it has not expired. Learn more about Generating Tokens for API Requests https://developer.apple.com/go/?id=api-generating-tokens`</p> <p>This can be caused by an error in the value (or spelling) of one of these keys:</p> <ul> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> <li><code>GH_PAT</code></li> </ul> <p>Use a Text-Only Editor</p> <p>If you used a \"smart\" editor when saving your Secrets in an archive file before pasting them into the repository <code>Secrets</code>, it might have changed a lowercase letter to an uppercase letter.</p> <p>If even one character is capitalized when it should not be, you will not succeed at the Add Identifiers step.</p>"},{"location":"gh-actions/gh-errors/#error-invalid-curve-name","title":"Error: <code>Invalid curve name</code>","text":"<p>If you see:</p> <pre><code>invalid curve name\n</code></pre> <p>This was caused by an error in the format of the value entered for the <code>FASTLANE_KEY</code>.</p> <p>Make sure you copy in a text editor from the first hyphen to the last hyphen.</p>"},{"location":"gh-actions/gh-errors/#action-create-certificates-errors","title":"Action: <code>Create Certificates</code> Errors","text":"<p>Use the Examine the Error instructions to find your error message.</p>"},{"location":"gh-actions/gh-errors/#error-wrong-teamid-in-secrets","title":"Error: Wrong TEAMID in <code>Secrets</code>","text":"<p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>error: No profile for team '***' matching 'match AppStore\n</code></pre> <p>If that phrase is found, then:</p> <ul> <li>You probably do not have the correct <code>TEAMID</code> entered in your <code>Secrets</code></li> <li>The rest of these instructions assume:<ul> <li>You have already created a Loop App in the App Store with that incorrect <code>TEAMID</code></li> <li>This is true if you completed the steps after running Action: <code>Add Identifiers</code> and before Action: <code>Create Certificates</code></li> </ul> </li> </ul> <p>Follow these steps:</p> <p>Open each link below in a separate tab</p> <p>It is best to open each link below in a separate tab so you can return to this list and keep using the links in each step.</p> <ol> <li> <p>Delete all the identifiers that you can, following the steps in Configure to Use Browser: Delete Identifiers</p> <ul> <li>Delete all the other identifiers first, then try to delete the Loop identifier with the wrong <code>TEAMID</code></li> <li>It is fine to just ignore identifiers with the wrong <code>TEAMID</code>, but do not use them</li> </ul> </li> <li> <p>Enter your <code>TEAMID</code> correctly in the repository <code>Secrets</code></p> <ul> <li>Make sure you use copy and paste from your Apple Developer Membership page for that <code>TEAMID</code>.</li> <li>Follow the update instructions here (this example is for <code>GH_PAT</code>, you'll do the same but for <code>TEAMID</code>) Update Secrets</li> </ul> </li> <li> <p>Run Action: Configure to Use Browser: <code>Add Identifiers</code> again</p> </li> <li> <p>Follow all the steps in this section with the correct <code>TEAMID</code> Configure to Use Browser: Configure Identifiers for Loop but when you get to the Configure to Use Browser: Create Loop App in App Store Connect, you need to return to this page and follow the instructions below to remove the app and add a new one.</p> </li> </ol> <p>The first time through, you created an app with a <code>Bundle ID</code> that does NOT include your <code>TEAMID</code>.</p> <p>You will remove that app and create a new one.</p>"},{"location":"gh-actions/gh-errors/#remove-app-with-incorrect-teamid","title":"Remove App with Incorrect <code>TEAMID</code>","text":"<p>Go to <code>App Store Connect / Apps</code> and follow the numbered steps in the graphic below.</p> <ol> <li>Find the Loop app you created earlier and click on it</li> <li>On the left side, under <code>General</code>, click on <code>App Information</code><ul> <li>Confirm that the value listed under <code>Bundle ID</code> is the incorrect one</li> <li>The <code>Bundle ID</code> says: <code>com.NOT_YOUR_TEAMID.loopkit.Loop</code></li> </ul> </li> <li>Scroll to the bottom of the page and tap on <code>Remove App</code></li> <li>The dialog box, similar to the one in the graphic below, should appear and you tap <code>Remove</code><ul> <li>After the App is removed, you'll see a very similar screen, where you can tap on <code>Restore App</code></li> </ul> </li> <li>But since you want that App removed, tap on <code>Apps</code> at the very top of the screen and proceed to the next step</li> </ol> <p></p> <p>That App with the wrong <code>Bundle ID</code> remains in the App store but it is hidden so it won't confuse you.</p>"},{"location":"gh-actions/gh-errors/#add-app-with-correct-teamid","title":"Add App with Correct <code>TEAMID</code>","text":"<p>Now click on the <code>Add Apps</code> button or the  (plus sign) if you have other apps in the App Store.</p> <p>Follow the Configure to Use Browser: Create Loop App in App Store Connect directions with these additions:</p> <ul> <li>You must come up with a new name for your Loop App</li> <li>Triple-check that the <code>Bundle ID</code> you choose is for Loop and contains your <code>TEAMID</code>, it should look like: <code>com.TEAMID.loopkit.Loop</code></li> <li>You must come up with a new <code>SKU</code> for your Loop App (try <code>1234</code>, if you used <code>123</code> before)</li> </ul>"},{"location":"gh-actions/gh-errors/#create-certificates","title":"Create Certificates","text":"<p>You should be able to continue with the Configure to Use Browser Steps to <code>Create Certificates</code> and then proceed from there with <code>Build Loop</code> and keep going.</p>"},{"location":"gh-actions/gh-errors/#error-missing-repository-access","title":"Error: Missing Repository Access","text":"<p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>Error cloning certificates\n</code></pre> <p>The full error looks like this:</p> <p>Error cloning certificates repo, please make sure you have read access to the repository you want to use</p> <p>or</p> <p>Error cloning certificates git repo, please make sure you have access to the repository - see instructions above</p> <p>If you see this phrase, the <code>fastlane</code> package that is utilized during the <code>3. Create Certificates</code> action cannot access your repository to create certificates for your Loop app. This is due to insufficient repository access rights that were not granted during the creation of your <code>GH_PAT</code> token.</p> <p>To fix this error:</p> <ul> <li>Open this link: https://github.com/settings/tokens/</li> <li>Here you will see your personal access token (<code>Fastlane Access Token</code>) that was created during Configure to Use Browser: Setup GitHub: Create <code>GitHub Personal Access Token</code></li> <li>Note that <code>Tokens (classic)</code> is highlighted in the menu on the left</li> <li>Click on the token name (should be bold, blue <code>Fastlane Access Token</code> ) to open its detail page</li> <li>None of the checkboxes under <code>Select Scopes</code> will be checked\u00a0\u2013 this is what's causing the issue.</li> <li>Add a check beside the <code>workflow</code> permission scope (the graphic does not match the words, you want to use <code>workflow</code> to get both <code>repo</code> and <code>workflow</code> scope)</li> <li>Scroll all the way to the bottom and click <code>Update token</code> (it's a long way, ignore all other settings, do not check anything else)</li> </ul> <p></p> <p>After you have clicked <code>Update token</code> you should see the token overview again with the message <code>Some of the scopes you\u2019ve selected are included in other scopes. Only the minimum set of necessary scopes has been saved.</code> (You can dismiss the message using the <code>X</code> near the upper right side if it appears).</p> <p>NOTE: for next release or if using the dev branch - you want <code>GH_PAT</code> to have <code>repo, workflow</code> scope. So click on the workflow scope now and save yourself a step later.</p>"},{"location":"gh-actions/gh-errors/#create-certificates_1","title":"Create Certificates","text":"<p>You should be able to continue with the Configure to Use Browser Steps to <code>Create Certificates</code> and then proceed from there with <code>Build Loop</code> and keep going.</p>"},{"location":"gh-actions/gh-errors/#error-could-not-create","title":"Error: Could not create","text":"<p>Copy the words on the line below and paste them into the search function for your log file.</p> <pre><code>Could not create another Distribution certificate\n</code></pre> <p>The full error message is:</p> <p><code>Could not create another Distribution certificate, reached the maximum number of available Distribution certificates</code></p> <p>These steps are needed to make room for a <code>Certificate</code>:</p> <ol> <li>Delete an old <code>Distribution Certificate</code><ul> <li>Apple limits you to two <code>Distribution Certificates</code></li> <li>Use this link to view your Apple Developer Certificates<ul> <li>Carefully examine the <code>Type</code> column - do not delete a <code>Development</code> <code>Certificate</code></li> <li>If you accidentally delete a <code>Development</code> <code>Type</code> certificate associated with an Xcode build for your Loop app - it will stop working and you will be very sad</li> </ul> </li> <li>Click on the oldest <code>Distribution</code> <code>Certificate</code> and revoke it<ul> <li>You will get an email informing you the certificate was revoked</li> </ul> </li> </ul> </li> <li>To create a new <code>Certificate</code>:<ul> <li>Return to GitHub and your fork</li> <li>Run the <code>Action</code>: <code>Create Certificates</code></li> </ul> </li> <li>You are now ready to run the <code>Action</code>: <code>Build Loop</code></li> </ol> <p>But what about TestFlight builds?</p> <p>Previous builds using this method that are already in TestFlight are not affected by deleting the <code>Distribution Certificate</code>.</p>"},{"location":"gh-actions/gh-errors/#error-could-not-decrypt","title":"Error: Could not decrypt","text":"<p>Copy the words on the line below and paste them into the search function for your log file.</p> <pre><code>decrypt the repo\n</code></pre> <p>The full error message is:</p> <p><code>Couldn't decrypt the repo, please make sure you enter the right password</code></p> <p>If you know you entered the incorrect <code>MATCH_PASSWORD</code> in your repository <code>Secrets</code>, go and fix it now and try again.</p> <p>Otherwise, you need to follow the steps to Reset Match-Secrets.</p>"},{"location":"gh-actions/gh-errors/#action-build-loop-errors","title":"Action: <code>Build Loop</code> Errors","text":"<p>Run <code>Create Certificates</code> First</p> <p>You must run Action: <code>Create Certificates</code> before attempting to run Action: <code>Build Loop</code></p> <p>Use Examine the Error</p> <ul> <li>Click on the Action log on GitHub</li> <li>There may be a series of green items followed by a red one</li> <li>Click on the red item to view the error</li> <li>Use the search function in this log to locate your error using one of the strings below</li> </ul> <p>For each section below, copy the phrase into the search function of the log. If you find it, solve that error. If not, move on to the next one.</p>"},{"location":"gh-actions/gh-errors/#could-not-find-an-app-on-app-store-connect","title":"<code>Could not find an app on App Store Connect</code>","text":"<p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>Could not find an app on App Store Connect\n</code></pre> <p>If that phrase is found, then:</p> <ul> <li> <p>Make sure you completed the Create Loop App in App Store Connect Step</p> <ul> <li>Once you've resolved that step, run these Actions again:<ul> <li><code>Create Certificates</code></li> <li><code>Build Loop</code></li> </ul> </li> </ul> </li> <li> <p>This can also be caused if you correctly created the Loop App but entered an incorrect value for the <code>TEAMID</code>.</p> <ul> <li>If you have the incorrect <code>TEAMID</code>, check this link: Certificates, Identifiers &amp; Profiles for entries with the incorrect <code>TEAMID</code> embedded</li> <li>For example, if your <code>TEAMID</code> is <code>0123456789</code>, but you entered <code>000123</code>, you may see both of these in your identifiers list<ul> <li><code>com.0123456789.loopkit.Loop</code></li> <li><code>com.000123.loopkit.Loop</code></li> </ul> </li> <li>Delete the \"bogus\" identifier version, fix your <code>TEAMID</code> and rerun all three steps:<ul> <li><code>Add Identifier</code></li> <li><code>Create Certificates</code></li> <li><code>Build Loop</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"gh-actions/gh-errors/#error-provisioning-profile","title":"<code>Error: Provisioning Profile</code>","text":"<p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>error: Provisioning profile \"match AppStore\n</code></pre> <p>If that phrase is found one, or more times, it means you missed a step when configuring the Loop identifier or missed associating your Loop App Group with one or more identifiers.</p> <p>For example, if you see:</p> <p><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop\" doesn't include the com.apple.developer.usernotifications.time-sensitive entitlement.</code></p> <p>Go back to First-Time: Add or Review Configuration for Loop Identifier and make sure you enabled the <code>Time-Sensitive notification</code> for Loop.</p> <p>For example, you might see:</p> <ul> <li><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop.SmallStatusWidget</code></li> <li><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop.statuswidget</code></li> <li><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop.Loop-Intent-Extension</code></li> </ul> <p>Return to Add App Group to Other Identifiers and fix the missing items.</p> <p>You must create certificates again before you can build Loop:</p> <ul> <li>Action: <code>Create Certificates</code></li> <li>Action: <code>Build Loop</code></li> </ul>"},{"location":"gh-actions/gh-errors/#a-new-one-cannot-be-created-because-you-enabled","title":"<code>A new one cannot be created because you enabled</code>","text":"<p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>A new one cannot be created because you enabled\n</code></pre> <p>If that phrase is found with lines similar to the following:</p> <pre><code>[31mA new one cannot be created because you enabled `readonly`\u001b[0m\n[31mProvisioning profiles in your repo for type `appstore`:\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.statuswidget.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.SmallStatusWidget.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.LoopWatch.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.Loop-Intent-Extension.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.LoopWatch.watchkitextension.mobileprovision'\u001b[0m\n</code></pre> <p>This tells you, the <code>Bundle ID</code> you selected in First-Time: Create Loop App in App Store Connect does NOT have your <code>TEAMID</code> embedded in the name.</p> <p>Once you have created an app in the App Store that is not based on your <code>TEAMID</code>, you cannot delete it, but you can Remove it (i.e. hide it so that it is no longer visible on this page and you don't accidentally click on it).</p> <ol> <li>Open this link: App Store Connect / Apps to view your apps; log in if needed.</li> <li>Find the App with the wrong <code>Bundle ID</code> and click on it</li> <li>On the left-hand side, click on <code>App Information</code> (under <code>General</code>)<ul> <li>Confirm the <code>Bundle ID</code> listed does not include your <code>TEAMID</code></li> <li>Scroll all the way to the bottom</li> <li>Tap on <code>Remove App</code></li> <li>New dialog window appears, select <code>Remove</code></li> </ul> </li> </ol> <p>At this point, get your correct <code>TEAMID</code>, fix your Secrets file to have the correct <code>TEAMID</code> and then return to First-Time: Configure Secrets. This time you will be updating <code>TEAMID</code> in the repository secret list.</p>"},{"location":"gh-actions/gh-errors/#repeat-build-loop-errors","title":"Repeat <code>Build Loop</code> Errors","text":"<p>This section is only for people who have successfully built using GitHub Build Actions.</p> <p>Use the Examine the Error instructions to find your error message.</p>"},{"location":"gh-actions/gh-errors/#error-asset-validation-failed","title":"<code>ERROR: Asset validation failed</code>","text":"<p>This error indicates your fork needs to be updated. As of 29 April 2024, you are required to use Xcode 15 to build the app.</p> <p>There are serveral phrases you can check for. All of them have the same solution.</p> <p>Copy the words on the line below and paste them into the search function for your action log.</p> <pre><code>ERROR: Asset validation failed\n</code></pre> <pre><code>Could not download/upload from App Store Connect\n</code></pre> <p>Solution: Update your fork. See instructions on the Update page: Update <code>Fork</code></p>"},{"location":"gh-actions/gh-errors/#could-not-install-wwdr-certificate","title":"<code>Could not install WWDR certificate</code>","text":"<p>Assuming you have successfully built using the Browser-Build / GitHub method before:</p> <ul> <li>If the details show this message, <code>Could not install WWDR certificate</code>, make sure your Apple developer account is in good standing and that there are no agreements that need to be accepted</li> <li>Sometimes this is a sign that Apple did not respond to a request, this failure happens in the first few minutes<ul> <li>Repeat the build and it should be fine the next time</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-errors/#reset-match-secrets","title":"Reset <code>Match-Secrets</code>","text":"<p>This is not the first thing to try, but sometimes it is the best approach.</p> <p>There might be several reasons to do this:</p> <ul> <li>You lost your <code>MATCH_PASSWORD</code> and want to build one of the Other Apps</li> <li>You thought you entered the correct <code>MATCH_PASSWORD</code> but you are getting Error: Could not decrypt</li> <li>You are having trouble renewing your certificates after using Browser Build for a year</li> </ul> <p>These steps are needed to reset your <code>Match-Secrets</code>:</p> <ol> <li>Delete your <code>Match-Secrets</code> Repository<ul> <li>Instructions to delete a repository are found at GitHub Docs</li> </ul> </li> <li>Create a new private <code>Match-Secrets</code> Repository<ul> <li>main branch: follow the directions First-Time: Create <code>Match-Secrets</code></li> <li>dev branch: the <code>Action</code>: <code>Validate Secrets</code> automatically creates a new private <code>Match-Secrets</code> repository if you don't have one</li> </ul> </li> <li>In your fork of LoopWorkspace:<ul> <li>Run the <code>Action</code>: <code>Create Certificates</code></li> <li>If this fails, click on this link for the most likely Error: Could not create</li> <li>If that doesn't help, check all your <code>Secrets</code> and try again</li> </ul> </li> <li>You are now ready to run the <code>Action</code>: <code>Build Loop</code></li> </ol> <p>Other Apps</p> <p>All DIY iOS apps that have an associated <code>GitHub Browser Build</code> method require the same 6 <code>Secrets</code>.</p> <p>If you add an app to your GitHub username (by forking the repository and adding <code>Secrets</code>) and then build it, it encrypts your <code>Certificate</code> using <code>MATCH_PASSWORD</code>.</p> <p>If you already have the other apps configured and then you delete <code>Match-Secrets</code> and add a new one, you will need to run <code>Create Certificates</code> for each app before the next time you build each app - go ahead and do that now so you don't forget.</p>"},{"location":"gh-actions/gh-errors/#preview-for-next-version","title":"Preview for Next Version","text":"<p>Error annotations are available for Version 3.3.0 and later. These were contributed by community volunteers along with the improvements to enable automatic updates and automatic builds.</p>"},{"location":"gh-actions/gh-errors/#examine-annotation","title":"Examine Annotation","text":"<p>If a\u00a0GitHub Action\u00a0fails, you will see a clear notification.</p> <p>First consider the following results from the\u00a0GitHub Action: 1. Validate Secrets.</p> <p>Your screen may look similar to the graphic below. The name in parentheses refers to the branch used to develop these wonderful messages. Yours may be (dev) or (main), once 3.4.0 is released.</p> <p></p> <p>But there are so many reasons why this could happen. The first step is to click on the link highlighted by the red rectangle in the graphic above. This opens a new detailed view. The GIF below shows two different error messages. The first frame shows the error in the Annotation box at the bottom (you may need to scroll down to see this), and you may need to click on \"Show More\" to see the full message as seen in the second frame. The third frame of the GIF shows a different message. Each one these messages is designed to make it easier for you to diagnose your own problem.</p> <p></p> <p>Notice that\u00a0GitHub Action: 1. Validate Secrets\u00a0is broken into three jobs each of which will either pass and show a green check or fail and show a red check. The secrets are validated with each action, so you will see this a lot.</p> <p>For example, the graphic below shows a failure of\u00a0GitHub Action: 3. Create Certificates\u00a0.</p> <p></p> <p>This is an example of a message that is not terribly descriptive - which is why it is shown here. In this case, you can click on just the one job that failed. There will be less to sort through to find your error. The most likely reason for this error is Error: Could not Create.</p> <p>If you run across an error that does not have a nice message, be sure to post as discussed in Help with Errors. You may be contributing to future improvements for this process.</p>"},{"location":"gh-actions/gh-first-time/","title":"Configure to use Browser","text":""},{"location":"gh-actions/gh-first-time/#build-the-loop-app-using-github","title":"Build the Loop App using GitHub","text":"Time Estimate (click to open/close) <ul> <li>If you have never built the Loop app (allow up to one week elapsed time)<ul> <li>Request and get an Apple Developer Account: 1-2 days</li> <li>Create and configure your GitHub account and <code>repositories</code>: 1-2 hours</li> <li>Add <code>Secrets</code> (requires Apple Developer Account): 1 hour</li> <li>Perform the GitHub <code>Action</code> steps: 30 minutes to 2 hours</li> </ul> </li> <li>If you have previously built the Loop app with Xcode you have fewer steps and are probably familiar with some of the concepts<ul> <li>Expect 1 to 4 hours</li> </ul> </li> </ul> Page Summary with Links (click to open/close) <p>There is a lot of introductory information on this page.</p> <ul> <li>You can skip some sections but please read this one: Save Your Information</li> </ul> <p>A narrated video is available:</p> <ul> <li>How to Build the Loop App With a Web Browser</li> </ul> <p>Once you have Apple Developer and GitHub accounts, the steps below are a high-level summary with links to the detailed section of this LoopDocs page.</p> <p>You can think of the first part as a scavenger hunt where you find or generate and save six <code>Secrets</code>.</p> <ul> <li>Apple:<ul> <li>Collect the four Apple <code>Secrets</code></li> </ul> </li> <li>GitHub:<ul> <li>Collect the <code>GH_PAT</code> Secret</li> </ul> </li> <li>Make up a Password</li> </ul> <p>Now it's time to use those <code>Secrets</code> to build the Loop app</p> <ul> <li>GitHub:<ul> <li>Create a <code>Match-Secrets</code> private repository</li> <li>Fork a repository (copy of <code>LoopWorkspace</code>)</li> <li>Add <code>Secrets</code> to your copy of LoopWorkspace repository</li> <li><code>Action: 1. Validate Secrets</code></li> <li><code>Action: 2. Add Identifiers</code></li> </ul> </li> <li>Apple:<ul> <li>Configure Identifiers for Loop</li> <li>Create your version of Loop in <code>App Store</code> (personal use only, not for distribution)</li> </ul> </li> <li>GitHub:<ul> <li><code>Action: 3. Create Certificates</code></li> <li><code>Action: 4. Build Loop</code></li> </ul> </li> <li>Apple: Set up <code>Internal TestFlight Group</code></li> <li>Phone: Install the Loop app using the TestFlight app</li> </ul> FAQs (click to open/close) <ul> <li>Do I need a Mac computer? No. This can be done on any browser, although it will be easier using a computer or tablet than just using a phone.</li> <li>Can I do this on my phone? Yes, but the graphics shown on this page are from a computer browser.</li> <li>Isn't it hard to build every 90 days? The initial setup and installation take a lot of your focused time. But once you build once, subsequent builds take very little of your time to start the build. The rest is done automatically.</li> <li>Can I use this for my child? You, as the adult, can install using TestFlight on your child's phone. The explicit steps are provided at Install on Phone: TestFlight for a Child.</li> <li>Can I still use my customizations? Yes. Customize using Browser</li> <li>Is there a build video? Yes. How to Build the Loop App With a Web Browser</li> </ul>"},{"location":"gh-actions/gh-first-time/#tips-and-tricks","title":"Tips and Tricks","text":"<p>This page contains fully detailed steps including graphics, which makes it incredibly long.</p> <p>Responding to a user request, step number indicators were added to this page.</p> <ul> <li>If you do not understand a step, back up a step or substep and review the material again</li> <li>If you learn better watching a video, you may find this video useful as an accompaniment to your building journey<ul> <li>How to Build the Loop App With a Web Browser</li> </ul> </li> </ul> <p>Some sections have a Section Summary:</p> <ul> <li>To view the summary, click on the summary header</li> <li>If the summary is all you need, use the <code>skip forward</code> symbol () to skip to the next instruction</li> <li>Or follow the detailed instructions below the summary</li> </ul> <p>An automatic table of contents (TOC) should appear for each page on the right side of your browser (if the browser is \"wide\" enough). If not, tap on the hamburger menu (upper left) and then this page name to see the TOC.</p> <p>For sparse instructions, click on the link below:</p> <ul> <li>LoopWorkspace Build Instructions</li> </ul>"},{"location":"gh-actions/gh-first-time/#make-a-secrets-reference-file","title":"Make a <code>Secrets</code> Reference File","text":"<p>As you move through this page, there will be a lot of instructions regarding your <code>Secrets</code>. Please save yourself a lot of agony. Make a <code>Secrets</code> Reference folder and then create a <code>Secrets</code> Reference file in it.</p> <p>You don't need to know anything about the <code>Secrets</code> or any other steps on this page to do this. Come up with your own names, but make sure you know where you put this.</p> <ol> <li>Decide on where you want your <code>Secrets</code> saved and create a special folder</li> <li>Open a text-only editor (do not use a Smart Editor, those might change capitalization or formating and ruin your <code>Secrets</code>)<ul> <li>Create a blank <code>Secrets</code> Reference file using the text-only editor</li> <li>Tap on the copy icon below to copy the template and paste it into your blank file</li> <li>Save the file</li> </ul> </li> <li>As you move through the steps on this page, fill in the parts of the template that say <code>&lt;your information here&gt;</code></li> <li>In addition to the <code>Secrets</code>, this template has places for other pieces of information you may find handy to save in the same file.</li> </ol> Template to use for Secrets<pre><code>MySecretsReferenceFile.txt\n\nInformation needed to use Browser Build.\nThe same secrets are used for every app you build.\n\nFirst some handy username and password information:\n\nApple ID username for your Developer account is the associated email:\n&lt;your information here&gt;\nsuggest you use your desired password tool to save the password for this account\n\nGitHub username\n&lt;your information here&gt;\nsuggest you use your desired password tool to save the password for this account\n\nThese are the Six Secrets in alphabetical order - each one shows the expected format.\nDelete each prototype as you gather your own secrets.\nThe letter A indicates an alphanumeric character.\nSome may be lower case, some upper case and some numerals.\nThe FASTLANE_KEY may have additional characters included.\nFor that one copy the entire key\nincluding -----BEGIN PRIVATE KEY-----\nthrough\n-----END PRIVATE KEY-----\n\nSECRETS BELOW:\n\nFASTLANE_ISSUER_ID\n&lt;looks like this&gt;\nAAAAAAAA-AAAA-AAAA-AAAA-AAAAAAAAAAAA\n\nFASTLANE_KEY_ID\n&lt;looks like this&gt;\nAAAAAAAAAA\n\n\nFASTLANE_KEY\n&lt;looks like this&gt;\n-----BEGIN PRIVATE KEY-----\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAA\n-----END PRIVATE KEY-----\n\nGH_PAT\n&lt;looks like this&gt;\nghp_AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n\nMATCH_PASSWORD\n&lt;looks like this&gt;\nAnyThingYouWant-sameForEveryRepository\n\nTEAMID\n&lt;looks like this&gt;\nAAAAAAAAAA\n\nRepository Names for my Fork:\n\nhttps://github.com/my-github-username/LoopWorkspace\n\nAdd additional apps here if you decide to build any\n</code></pre>"},{"location":"gh-actions/gh-first-time/#how-to-video-to-build-with-a-browser","title":"How-to Video to Build with a Browser","text":"<p>In addition to this page, there is a narrated video of each step needed to build using a browser.</p> <ul> <li>How to Build the Loop App With a Web Browser</li> </ul> <p>Click in the comments for a full index of topics.  If you have issues with a part of this page, use the index to advance to the relevant part of the video. Subtitles are in English. You can choose a different language but the automatic translation feature may provide translations that are not completely accurate.</p>"},{"location":"gh-actions/gh-first-time/#step-1-of-12","title":"Step 1 of 12","text":"<p> Step 1 of 12 is Prerequisites, things you must complete before you start.</p>"},{"location":"gh-actions/gh-first-time/#prerequisites","title":"Prerequisites","text":""},{"location":"gh-actions/gh-first-time/#prerequisites-to-build-the-loop-app","title":"Prerequisites to Build the Loop App","text":"<p>There are two prerequisites to build the Loop app using <code>GitHub Browser Build</code>.</p> <ol> <li>Paid Apple Developer account ($99/year)</li> <li>Free GitHub account</li> </ol>"},{"location":"gh-actions/gh-first-time/#prerequisites-to-install-loop","title":"Prerequisites to Install Loop","text":"<p>To install Loop, you need the free TestFlight app, from the Apple App Store, installed on your Compatible Phone.</p>"},{"location":"gh-actions/gh-first-time/#prerequisites-to-use-loop","title":"Prerequisites to Use Loop","text":"<p>To use Loop, you need a Compatible Pump and Compatible CGM. For pumps other than Omnipod DASH, you also need a RileyLink Compatible Device.</p>"},{"location":"gh-actions/gh-first-time/#new-terms-with-github-browser-build","title":"New Terms with <code>GitHub Browser Build</code>","text":"<p> You can read details about new terms with GitHub build or skip ahead to Save Your Information.</p> <p>The <code>GitHub Browser Build</code> may use new and unfamiliar terms.</p> <p>Some of these terms have ToolTips, so hover your mouse over those - or review them in the Glossary.</p> <ul> <li>Some terms in the Glossary are not in alphabetical order. All the <code>Secrets</code> discussed on this page, are listed after <code>Secrets</code> in the Glossary.</li> </ul> <p>If this summary of terms is confusing, finish reviewing the whole page and then come back.</p> <ul> <li><code>Actions</code>: available in your GitHub account to build your app (once you follow the instructions on this page)<ul> <li>With <code>Loop 3</code>, the actions: <code>Validate Secrets</code>, <code>Add Identifiers</code>, <code>Create Certificates</code>, and <code>Build Loop</code> enable users to build the Loop app from a browser on any computer</li> <li>If <code>GitHub Browser Build</code> Actions are not operating as you expect, check GitHub Status to see if it is GitHub problem.</li> </ul> </li> <li><code>Secrets</code>: are required to enable GitHub to build the Loop app using GitHub Actions<ul> <li>Six <code>Secrets</code> must be added to your fork of LoopWorkspace</li> <li>These <code>Secrets</code> work for any branch in your fork (<code>main</code> or <code>dev</code>, for example)</li> <li>These <code>Secrets</code> can be added to Other Apps configured with the same <code>GitHub Browser Build</code> method</li> <li>For those who feel confident using GitHub, there are optional instructions to configure a free organizational account (for your personal use) that allows you to enter the <code>Secrets</code> only once, see Use a GitHub Organization Account, and have them available for every repository in that organization account</li> </ul> </li> <li>API <code>Key</code>:<code>Application Programming Interface Key</code><ul> <li>You obtain and save this key from the Apple Developer website</li> <li>Doing this provides 3 of your <code>Secrets</code></li> <li>It is required to enable your GitHub account to interface with Apple to create your app</li> </ul> </li> <li><code>Identifiers</code>: are required to build the Loop app with <code>GitHub Browser Build</code> (these are automatically generated for you)<ul> <li>Four Identifier Names must be associated with your <code>App Group</code><ul> <li><code>Loop</code>, <code>Loop Intent Extension</code>, <code>Loop Status Extension</code> and <code>Small Status Widget</code></li> <li>For the dev branch only: <code>Small Status Widget</code> was renamed <code>Loop Widget Extension</code></li> </ul> </li> <li>Two Identifier Names will exist but do not require that association<ul> <li><code>WatchApp</code> and <code>WatchAppExtension</code></li> </ul> </li> <li>The <code>Identifier</code> screen, has <code>NAME</code> and <code>IDENTIFIER</code> columns<ul> <li>If you previously built with Xcode, the items in the <code>NAME</code> column may start with <code>XC</code></li> <li>The items under the <code>IDENTIFIER</code> column match the table in Add <code>App Group</code> to Identifiers</li> </ul> </li> </ul> </li> <li><code>App Store Connect</code>: a website available for Apple Developers to review apps build with your Apple Developer account<ul> <li>Once you purchase an Apple Developer annual account, you are an Apple Developer and have access to this site</li> <li>Most Loopers will not have an App until using the <code>GitHub Browser Build</code></li> <li>The instructions walk you through creating and naming your app: Create Loop App in App Store Connect</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#save-your-information","title":"Save Your Information","text":"<p>Everyone needs to read this section!</p> <p>You need to keep a digital copy of your 6 <code>Secrets</code>.</p> <ul> <li>You need to copy and paste those <code>Secrets</code> to build the app with a browser</li> <li>Make sure your editor does not change any characters in your <code>Secrets</code>; use a text-only editor like NotePad (PC) or TextEdit (Mac)</li> <li>Many people add other information to the <code>Secrets</code> file for easy reference</li> </ul> <p>Archive Your Information</p> <p>To complete the steps on this page, you will need a username, email address, and password for Apple and GitHub. You will find, generate or make up six <code>Secrets</code> as instructed.</p> <ul> <li>Record this information in a safe place where you can find them</li> <li>A digital copy is best for copying and pasting in different locations</li> </ul> <p>Be sure to use a Text-Only editor like NotePad (PC) or TextEdit (Mac) to archive your information.</p> <p>A Note about Capitalization and Spaces</p> <p>In places, you use a name like \"<code>FastLane API Key</code>\" or \"<code>FastLane Access Token</code>\". Please copy from the docs to use those exact names.</p> <p>The <code>Secrets</code> that you add use names that are capitalized and use underscore _ instead of spaces. Be precise and careful.</p> <p>Use a Text-Only Editor</p> <p>Be sure to use a Text-Only editor like NotePad (PC) or TextEdit (Mac) to archive your information.</p> <p>If you use a \"smart\" editor, it may change lower-case letters to upper-case letters at the beginning of a line when you paste items into your archive file.</p> <p>If even one character is capitalized when it should not be, you will get Errors with Browser Build.</p> <p>If you use a smart editor to store your FASTLANE_KEY, you are likely to get the mysterious <code>invalid curve name</code> error.</p>"},{"location":"gh-actions/gh-first-time/#step-2-of-12","title":"Step 2 of 12","text":"<p> Step 2 of 12 is Save Six <code>Secrets</code>.</p> <p>The creation of accounts at Apple and GitHub, if you don't already have them, are not numbered. Using those accounts, there are 5  Substeps for Step 2.</p>"},{"location":"gh-actions/gh-first-time/#save-six-secrets","title":"Save Six <code>Secrets</code>","text":"Section Summary (click to open/close) <p>You require 6 <code>Secrets</code> (alphanumeric items) to use the <code>GitHub Browser Build</code> method and if you use the <code>GitHub Browser Build</code> method to build more than Loop, e.g., <code>Loop Follow</code> or <code>Loop Caregiver</code>, you must use the same 6 <code>Secrets</code> for each app you build with this method.</p> <p>Each secret is identified with <code>ALL_CAPITAL_LETTER_NAMES</code>.</p> <ul> <li>Four <code>Secrets</code> are from your Apple Account</li> <li>One Secret is from your GitHub account</li> <li>One Secret is a password you make up and save</li> <li>Be sure to save the 6 <code>Secrets</code> in a text file using a text editor<ul> <li>Do NOT use a smart editor, which might auto-correct and change the case, because these <code>Secrets</code> are case-sensitive</li> <li> Refer back to Save Your Information for more details about smart vs text editors</li> </ul> </li> </ul> <p> To skip the detailed instructions, click on Collect the Four <code>Apple Secrets</code></p> <p>You need to save your information digitally, so you can copy and paste. The information is created in one place and used in another. Refer to Configure <code>Secrets</code> for how the <code>Secrets</code> are used. In addition to the 6 <code>Secrets</code>, other important information to keep handy (like usernames and passwords) is listed below. Be sure to keep this file secure.</p> <p>Created at developer.apple.com</p> <ul> <li>Email address (this is your username)</li> <li>password</li> <li>Four items used as <code>Secrets</code><ul> <li><code>TEAMID</code></li> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> </ul> </li> </ul> <p>Created at github.com</p> <ul> <li>Email address</li> <li>password</li> <li>username</li> <li>Your GitHub repository address will be: <code>https://github.com/username</code></li> <li>Your LoopWorkspace repository address will be: <code>https://github.com/username/LoopWorkspace</code></li> <li>One item used as a Secret<ul> <li>GitHub Personal Access Token (<code>GH_PAT</code>)</li> </ul> </li> </ul> <p>Created yourself</p> <ul> <li>a password - make one up and save it (<code>MATCH_PASSWORD</code>)</li> </ul>"},{"location":"gh-actions/gh-first-time/#collect-the-four-apple-secrets","title":"Collect the Four <code>Apple Secrets</code>","text":"Section Summary (click to open/close) <p>You will be saving 4 <code>Secrets</code> from your Apple Account in this step.</p> <ol> <li>Sign in to the Apple Developer portal page.</li> <li>If you need to accept a new agreement (happens about twice a year), be sure to do so now<ul> <li>Need help? Look at this section on the update page: Accept Agreements</li> </ul> </li> <li>Copy the Team ID from the upper right of the screen. Record this as your <code>TEAMID</code>.</li> <li>Go to the App Store Connect interface, click the \"Integrations\" tab, and create a new key with \"Admin\" access. Give it the name: \"<code>FastLane API Key</code>\".</li> <li>Record three more secrets<ul> <li>Record the issuer id; this will be used for <code>FASTLANE_ISSUER_ID</code>.</li> <li>Record the key id; this will be used for <code>FASTLANE_KEY_ID</code>.</li> <li>Download the <code>API Key</code> itself, and open it in a text editor. The contents of this file will be used for <code>FASTLANE_KEY</code>. Copy the full text, including the \"-----BEGIN PRIVATE KEY-----\" and \"-----END PRIVATE KEY-----\" lines.</li> </ul> </li> </ol> <p> To skip the detailed instructions, click on Collect the <code>GH_PAT</code> Secret</p> <p>This section provides detailed instructions for the four <code>Secrets</code> associated with your Apple Developer ID.</p> Name Description <code>TEAMID</code> This 10-character identifier is associated with your Apple Developer ID and never changes <code>FASTLANE_ISSUER_ID</code> The issuer ID is associated with your Apple Developer ID and never changes <code>FASTLANE_KEY_ID</code> Key ID provided when you create an <code>API Key</code> in App Store Connect; it is associated with the <code>FASTLANE_KEY</code> <code>FASTLANE_KEY</code> Copy the full key from the text file you downloaded when generating the <code>API Key</code> - Filename has <code>FASTLANE_KEY_ID</code> value embedded in it.Include everything in the file from <code>-----BEGIN PRIVATE KEY-----</code>and ending in <code>-----END PRIVATE KEY-----</code>"},{"location":"gh-actions/gh-first-time/#new-apple-developer-account","title":"New Apple Developer Account","text":"<p> If you have an Apple Developer Account, skip ahead to Find <code>TEAMID</code>.</p> <p>If not, you need to purchase one ($99 annual fee). It may take a few days for the account to be enabled.</p> <ul> <li>LoopDocs has an Apple Developer Program page that explains in detail how to sign up for an account</li> <li>This link takes you straight to Apple Developer account to sign up</li> </ul>"},{"location":"gh-actions/gh-first-time/#substep-21-for-step-2","title":"Substep 2.1 for Step 2","text":"<p>Next section, Find <code>TEAMID</code>, is  Substep 1 out of 5 for Step 2.</p>"},{"location":"gh-actions/gh-first-time/#find-teamid","title":"Find <code>TEAMID</code>","text":"<p>Sign in to your Apple Developer account at this link: Apple Developer portal page.</p> <ol> <li>Click <code>Account</code> in the top menu bar</li> <li>If you need to accept a new agreement (happens about twice a year), be sure to do so now<ul> <li>Need help? Look at this section on the update page: Accept Agreements</li> </ul> </li> <li> <p>Click the <code>Membership Details</code> icon</p> <p></p> </li> <li> <p>Next to the <code>Team ID</code> field, is a 10-character ID number.   This is your Apple Developer <code>TEAMID</code>.</p> </li> </ol> <p></p> <p>Record this for use as <code>TEAMID</code> in your <code>Secrets</code> file. You will also need it when you Create \u00a0App Group.</p> <ul> <li>Stop a moment and double-check</li> <li> <p>If you get this wrong, you will have errors at the very end, which require you to delete some items and repeat some steps on this page</p> <p>Do not \"type\" what you think you see</p> <p>Copy and paste the <code>Team ID</code> from the webpage.</p> <ul> <li><code>TEAMID</code> must be 10 characters</li> <li>Avoid typing an\u00a0<code>8</code>\u00a0when it should be a\u00a0<code>B</code></li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#substep-22-for-step-2","title":"Substep 2.2 for Step 2","text":"<p>Next section, Generate <code>API Key</code>, is  Substep 2 out of 5 for Step 2.</p>"},{"location":"gh-actions/gh-first-time/#generate-api-key","title":"Generate <code>API Key</code>","text":"<p>Paid Apple Developer Account is Required</p> <p>To generate the <code>API Key</code>, you must have a paid Apple Developer account.</p> <p>If you are waiting for Apple to enable your account, you can skip ahead to create a New GitHub Account and Create GitHub <code>Personal Access Token</code>. You then pause at Configure <code>Secrets</code> until your Apple account is active.</p> <ol> <li> <p>Click this link to open in a new tab: <code>App Store Connect/Access/Integrations/API</code></p> <ul> <li>The top of the display is shown in the graphic below</li> </ul> <p></p> <ul> <li> <p>Click the <code>Integrations</code> tab as indicated in the graphic above</p> <ul> <li> <p>If this is your first time here, you will see:</p> <p>\"<code>Permission is required to access the App Store Connect API. You can request access on behalf of your organization.</code>\"</p> <ul> <li>Click on <code>Request Access</code> and follow directions until access is granted</li> </ul> </li> <li> <p>Once access is granted, click on the <code>Generate API Key</code> button</p> </li> </ul> </li> <li> <p>If you did not get routed through the <code>permission is required</code> screens click the blue + sign</p> </li> <li> <p>A new <code>Generate API Key</code> dialog box will appear as shown in the graphic below</p> </li> </ul> <p></p> <ul> <li>Enter the name of the key as \"<code>FastLane API Key</code>\" and choose <code>Admin</code> in the access drop-down menu</li> <li>Confirm the name and that \"<code>Admin</code>\" is selected and then click on the \"<code>Generate</code>\" button.</li> </ul> </li> </ol>"},{"location":"gh-actions/gh-first-time/#substep-23-for-step-2","title":"Substep 2.3 for Step 2","text":"<p>Next section, Copy <code>API Key Secrets</code>, is  Substep 3 out of 5 for Step 2. In this  Substep you are dealing with 2 of the Apple <code>Secrets</code>.</p>"},{"location":"gh-actions/gh-first-time/#copy-api-key-secrets","title":"Copy <code>API Key Secrets</code>","text":"<p>The <code>Integrations</code> screen appears again with content similar to the graphic below; the key information is blanked out for security.</p> <p>Review the graphic and then follow the directions below to save more parameters you will need to Configure <code>Secrets</code></p> <p></p> <ol> <li>A button labeled Copy is always adjacent to the <code>Issuer ID</code> above the word Active (this is the same for all keys that you generate with this Apple Developer ID)<ul> <li>Tap on the <code>Copy</code> button - this copies the <code>Issuer ID</code> into your paste buffer</li> <li>In the file where you are saving information, paste this with the indication that it is for  <code>FASTLANE_ISSUER_ID</code></li> </ul> </li> <li>Hover to the right of the <code>Key ID</code> and the <code>Copy Key ID</code> button shows up<ul> <li>Tap on the <code>Copy Key ID</code> button - this copies the <code>Key ID</code> into your paste buffer</li> <li>In the file where you are saving information, paste this with the indication that it is for  <code>FASTLANE_KEY_ID</code></li> </ul> </li> <li> <p>Click on the <code>Download API Key</code> button - you will be warned you can only download this once.</p> <p></p> </li> <li> <p>Find your <code>AuthKey</code> download in your downloads folder. The name of the file will be \"<code>AuthKey_KeyID.p8</code>\" where <code>KeyID</code> matches your <code>FASTLANE_KEY_ID</code></p> <ul> <li>Double-click to open it and you will be presented a message asking how you'd like to open it (The message shown is for a Mac - translate these directions to whatever computer you are using)</li> <li>Click on \"<code>Choose Application...</code>\" and then select \"<code>TextEdit</code>\" (on a Mac, NotePad on a PC, or any text-only editor you prefer)</li> </ul> <p></p> </li> <li> <p>The contents of this file will be used for <code>FASTLANE_KEY</code></p> <ul> <li>Copy the full text, including the \"<code>-----BEGIN PRIVATE KEY-----</code>\" and \"<code>-----END PRIVATE KEY-----</code>\" lines<ul> <li>On a Mac, use Cmd+A, then Cmd+C  to copy all the contents</li> <li>On a PC, use Ctrl+A , then Ctrl+C to copy all the contents</li> </ul> </li> <li>In the file where you are saving information, paste this with the indication that it is for  <code>FASTLANE_KEY</code></li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#do-not-confuse-your-keys","title":"Do Not Confuse Your Keys","text":"<p><code>API Key</code>\u00a0 vs\u00a0<code>APN Key</code></p> <p>If you use Remote Commands with <code>Nightscout</code>, you may notice the Application Programming Interface (API) key has the same type of format as the Apple Push Notification (APN) key. The keys for both of these purposes are p8 keys, but they should not be confused with each other.</p> <p>The <code>Secrets</code> for building with GitHub use the\u00a0<code>API Key</code>.</p> <p>The config vars for <code>Nightscout</code> use the\u00a0<code>APN Key</code>.</p> <ul> <li>If you are using remote commands with <code>Nightscout</code> and building with <code>GitHub Browser Build</code><ul> <li>Remote Commands Config Vars: make sure you have a config var of <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> with a value of <code>production</code> or remote commands will not work with <code>Nightscout</code></li> </ul> </li> <li>This is true for using <code>Nightscout</code> directly or using <code>Loop Caregiver</code></li> </ul>"},{"location":"gh-actions/gh-first-time/#done-with-apple-secrets","title":"Done with Apple Secrets","text":"<p>In summary, from this section, you have found or generated the following and saved copies for later use</p> <ul> <li><code>TEAMID</code></li> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> </ul> <p>Time for a Break?</p> <p>This is a good place to pause if you need to. Just note where you are on the page so you can return later.</p>"},{"location":"gh-actions/gh-first-time/#collect-the-gh_pat-secret","title":"Collect the <code>GH_PAT</code> Secret","text":"<p> If you already have a GitHub Account, skip ahead to Create GitHub <code>Personal Access Token</code>.</p>"},{"location":"gh-actions/gh-first-time/#new-github-account","title":"New GitHub Account","text":"<p>If you do not already have a GitHub account, you need to create one. Be sure to record the email, password, and username for your GitHub account.</p> <p>Decide on a couple of usernames that you will be happy with - this will get embedded into your GitHub URL. Your first choice might not be available, so be prepared with several candidates. Your personal URL will be: <code>https://github.com/username</code>.</p> <ul> <li>Click on this link to sign up for a free account: GitHub account signup<ul> <li>You will need to enter the email you want associated your GitHub account</li> <li>You will be asked to enter a password</li> <li>You will be asked to enter a username</li> <li>You will be asked if you want to receive email, ok to say <code>N</code> for no - you still get important account information with that email</li> <li>Solve the puzzle to prove you're a person</li> <li>Check the associated email to get the code and enter the code into github.com to confirm your account</li> </ul> </li> <li>You should get the Welcome to GitHub screen<ul> <li>Indicate it is \"Just me\" on your team and Continue</li> <li>Don't check anything on the next screen, just tap <code>Continue</code></li> <li>Select the <code>Free</code> option by selecting <code>Continue for Free</code></li> </ul> </li> </ul> <p>The free level comes with plenty of storage and compute time to build the Loop app.</p>"},{"location":"gh-actions/gh-first-time/#substep-24-for-step-2","title":"Substep 2.4 for Step 2","text":"<p>Next section, Create <code>GitHub Personal Access Token</code>, is  Substep 4 out of 5 for Step 2.</p>"},{"location":"gh-actions/gh-first-time/#create-github-personal-access-token","title":"Create <code>GitHub Personal Access Token</code>","text":"Section Summary (click to open/close) <p>Log into your GitHub account to create a personal access token, which you will save as <code>GH_PAT</code>.</p> <p>Click to create a new <code>personal access token</code>:</p> <ul> <li>Enter a name for your token, use \"<code>FastLane Access Token</code>\"</li> <li>Change the Expiration selection to <code>No expiration</code></li> <li>Select the <code>workflow</code> <code>permission scope</code> (<code>repo</code> will be automatically selected)</li> <li>Click \"Generate token\"</li> <li>Copy the token and record it. It will be used below as <code>GH_PAT</code></li> </ul> <p> To skip the detailed instructions, click on Make up a Password.</p> <p>You must be logged into your GitHub account before starting this step. If you are continuing, you are already logged in.</p> <ol> <li>You will be creating a new GitHub <code>Personal Access Token</code> and giving it the name \"<code>FastLane Access Token</code>\"</li> <li> <p>Open this link: https://github.com/settings/tokens/new</p> <ul> <li>Referring to the graphic<ul> <li>Note that <code>Tokens (classic)</code> is highlighted</li> <li>Most Looper will use the <code>classic Token</code><ul> <li>If you are a developer who needs to use fine-grained <code>tokens</code>, that is fine</li> </ul> </li> <li>Edit the note box to be <code>FastLane Access Token</code></li> </ul> </li> <li>The default Expiration time is 30 days - but you should select <code>No expiration</code> (use the drop-down menu to select)<ul> <li>GitHub will show a yellow warning when you do this</li> <li>It is ok to ignore the warning</li> </ul> </li> <li>Add a check beside the <code>workflow</code> permission scope</li> <li>A check will automatically appear in the <code>repo</code> scope as well - this is normal</li> <li>Scroll all the way to the bottom and click <code>Generate token</code> (it's a long way, ignore all other settings, do not check anything else)</li> </ul> <p></p> </li> <li> <p>A new screen appears showing your access token</p> <ul> <li>Copy the <code>token</code> and record it - once you leave this screen you can't see it again</li> <li>You will use this for <code>GH_PAT</code> when you set up your Secrets</li> <li>You can Regenerate Personal Access Token for <code>GH_PAT</code> if you lose it, but then you have to update that in the <code>Secrets</code> for all repositories using GitHub Build.</li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#substep-25-for-step-2","title":"Substep 2.5 for Step 2","text":"<p>Next section, Make up a Password, is  Substep 5 out of 5 for Step 2.</p>"},{"location":"gh-actions/gh-first-time/#make-up-a-password","title":"Make up a Password","text":"<p>If you have not already made up a password, do it now and record it as <code>MATCH_PASSWORD</code>.</p>"},{"location":"gh-actions/gh-first-time/#step-3-of-12","title":"Step 3 of 12","text":"<p> Step 3 of 12 is Prepare your Repositories. This step has 2  Substeps.</p>"},{"location":"gh-actions/gh-first-time/#prepare-your-repositories","title":"Prepare your Repositories","text":""},{"location":"gh-actions/gh-first-time/#substep-31-for-step-3","title":"Substep 3.1 for Step 3","text":"<p>Next section, Create Match-Secrets, is  Substep 1 of 2 for Step 3. This is done only one time for a given GitHub username.</p>"},{"location":"gh-actions/gh-first-time/#create-match-secrets","title":"Create Match-Secrets","text":"Section Summary (click to open/close) <p>The creation of the <code>Match-Secrets</code> repository is a common step for all <code>GitHub Browser Builds</code>; do this step only once. You must be logged into your GitHub account.</p> <p>Click on the link to create a new empty repository titled <code>Match-Secrets</code>. It should be private.</p> <p>Once created, you will not take any direct actions with this repository; it needs to be there for GitHub to use as you progress through the steps.</p> <p> To skip the detailed instructions, click on Fork LoopWorkspace</p> <p>Open your github.com URL (this is <code>https://github.com/username</code>), (<code>username</code> is the name you chose above).</p> <p>Create a new private repository - you can either click on the link below or follow the instructions with the first graphic:</p> <ul> <li>Click on this link: https://github.com/new</li> </ul> <p>or</p> <ul> <li> <p>At the top right of the screen, click on the + sign and select <code>New Repository</code></p> <p></p> </li> </ul> <p>This shows you a screen similar to the following graphic which has 3 regions highlighted:</p> <ul> <li>In <code>Repository name</code>, type <code>Match-Secrets</code> (use a hyphen between <code>Match</code> and <code>Secrets</code>)</li> <li>Be sure to check the  box <code>Private</code>  (red circle) to make the repository private</li> <li>Please confirm you selected the <code>Match-Secrets</code> repository as private.</li> <li>Scroll to the bottom of the page and tap on \"<code>Create repository</code>\"</li> </ul> <p></p> <p>A screen will appear with a lot of options - do not do anything on this screen.</p> <ul> <li>Click on your username (as indicated by the red rectangle) to return to your main GitHub URL.</li> </ul> <p></p> <p>You will not directly interact with your <code>Match-Secrets</code> repository.</p>"},{"location":"gh-actions/gh-first-time/#substep-32-for-step-3","title":"Substep 3.2 for Step 3","text":"<p>Next section, Fork LoopWorkspace, is  Substep 2 out of 2 for Step 3.</p> <p>If you are creating an app other than the Loop app, you substitute the appropriate URL for the app you are building.</p>"},{"location":"gh-actions/gh-first-time/#fork-loopworkspace","title":"Fork LoopWorkspace","text":"Section Summary (click to open/close) <p>Fork https://github.com/LoopKit/LoopWorkspace into your account.</p> <p> To skip the detailed instructions, click on Configure <code>Secrets</code></p> <p>Existing Fork</p> <p>If you already have a fork of <code>LoopWorkspace</code>, click on Already Have LoopWorkspace to decide what to do. That section provides links to return you to these instructions.</p> <ol> <li>Open this link https://github.com/LoopKit/LoopWorkspace to open the <code>LoopWorkspace</code> repository owned by <code>LoopKit</code>.</li> <li>Review the highlighted locations of the graphic below (yours won't look quite like this yet, but the <code>Fork</code> button is in the same place)</li> <li>At the upper right side of the screen, click on the word <code>Fork</code><ul> <li>If you already have a fork, you cannot proceed, see Already Have LoopWorkspace</li> </ul> </li> <li> <p>Now your screen should look like the graphic below</p> <ul> <li>Your username will be automatically filled in as the owner (<code>Owner</code>)</li> <li><code>LoopWorkspace</code> is the repository name (<code>Repository Name</code>)</li> <li>Leave the selection that says \"<code>Copy the main branch only</code>\" checked</li> <li>Click on the green <code>Create fork</code> button</li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#successful-fork","title":"Successful Fork","text":"<p>After creating the \u00a0fork, your screen should be similar to the next graphic - it will say <code>main</code> for the branch instead of <code>dev</code> because this graphic was prepared before the release of <code>Loop 3</code>. You may or may not see the messages you are told to dismiss in the next two bullets. No worries if you don't see them.</p> <ul> <li>Near the top right, click on the close button  (<code>x</code>) to dismiss the <code>Successfully fetched</code> message</li> <li>In the middle, click on the <code>Dismiss</code> button to remove the \"<code>Your branch is not protected</code>\" message</li> </ul> <p></p> <p>Carefully compare your screen to the graphic below paying attention to the highlighted sections.</p> <ul> <li>Note that your username is now showing</li> <li>The comment under your username indicates where the \u00a0fork\u00a0 came from (that is a clickable link)</li> <li>The branch that is selected  is <code>main</code></li> <li>The message says \"<code>This branch is up to date with LoopKit/LoopWorkspace:main</code>\"</li> </ul> <p></p> <p>Time for a Break?</p> <p>This is a good place to pause if you need to. Just note where you are on the page so you can return later.</p>"},{"location":"gh-actions/gh-first-time/#step-4-of-12","title":"Step 4 of 12","text":"<p> Step 4 of 12 is Configure <code>Secrets</code>. This step does not have  Substeps, however, you must enter all 6 <code>SECRETS</code>.</p> Feeling confident? Planning to build more than one app? Click to see more. <p>If you are already feeling overwhelmed - skip this tip.</p> <p>If you plan to build more that one app, you will making a fork of each repository associated with each app, and then you must add the 6 <code>Secrets</code> to each repository. It is not hard but it can get tiresome.</p> <p>There is a way to enter the 6 <code>Secrets</code> only one time for all your repositories, but this requires setting up a free GitHub organization. This is also not hard, but it modifies some of displays you see on GitHub. If you are interested, refer to Use a GitHub Organization Account</p>"},{"location":"gh-actions/gh-first-time/#configure-secrets","title":"Configure <code>Secrets</code>","text":"Section Summary (click to open/close) <p>These <code>Secrets</code> are the same for any repository for which you use <code>GitHub Browser Build</code>.</p> <ul> <li>They are added once for a repository and work for all branches of that repository</li> <li>They must be added to any other repository, such as <code>Loop Caregiver</code>, for which you also use <code>GitHub Browser Build</code></li> </ul> <p>For each of the following <code>Secrets</code>, tap on \"New repository secret\", then add the name of the secret, along with the value you recorded for it:</p> <ul> <li><code>TEAMID</code></li> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> <li><code>GH_PAT</code></li> <li><code>MATCH_PASSWORD</code></li> </ul> <p> To skip the detailed instructions, click on Validate <code>Secrets</code>.</p> <p><code>Branches</code> and <code>Repositories</code></p> <ul> <li>These \u00a0Secrets\u00a0 are added to your <code>fork of LoopWorkspace</code> and work for any <code>branch</code> (<code>main</code> or <code>dev</code>, for example)</li> <li>These \u00a0Secrets\u00a0 must be added, if desired, for Other App <code>repositories</code></li> </ul>"},{"location":"gh-actions/gh-first-time/#prepare-to-enter-secrets","title":"Prepare to Enter <code>Secrets</code>","text":"<p>Log into GitHub.</p> <ol> <li> <p>Return to your forked copy of <code>LoopWorkspace</code></p> <ul> <li>Click on your personal icon at the upper right to see the drop-down menu and select \"<code>Your repositories</code>\"</li> </ul> <p></p> </li> <li> <p>You should see (at least) 2 repositories: <code>Match-Secrets</code> and <code>LoopWorkspace</code></p> </li> <li>Click on <code>LoopWorkspace</code> to open that repository</li> <li> <p>Click on the Settings Icon near the top right of your LoopWorkspace</p> <ul> <li>If you don't see \u2699\ufe0f <code>Settings</code>, make your browser wider or scroll to the right</li> <li>If you still don't see \u2699\ufe0f <code>Settings</code>, then you are not on your fork or you need to sign in to your GitHub account</li> <li> <p>After you click on \u2699\ufe0f <code>Settings</code>, your screen should look like the graphic below</p> <p></p> </li> </ul> </li> <li> <p>On the left side, find the <code>Secrets and variables</code> dropdown and choose <code>Actions</code></p> <ul> <li> <p>After you select <code>Actions</code>, your screen should look like the graphic below</p> <p></p> </li> </ul> </li> </ol>"},{"location":"gh-actions/gh-first-time/#enter-the-secrets","title":"Enter the <code>Secrets</code>","text":"<ol> <li>Tap on the green button at the top right of your screen labeled <code>New repository secret</code> (highlighted above)<ul> <li>A new screen appears as shown in the first graphic below</li> <li>Do not do anything until reading the sub-bullets, examining the graphics, and proceeding to the next section where each <code>Secret</code> name is provided for you to copy and paste<ul> <li>Under <code>Name *</code>, click on <code>YOUR_SECRET_NAME</code> and paste one of the 6 secret names, as directed in Enter Each Secret</li> <li>Click inside the <code>Secret *</code> box and paste the value for that secret</li> <li>Once you click on <code>Add Secret</code>, the secret will be added</li> <li>The second graphic below shows <code>TEAMID</code> added and ready for save</li> </ul> </li> </ul> </li> </ol>"},{"location":"gh-actions/gh-first-time/#enter-each-secret","title":"Enter Each Secret","text":"<p>Enter the name of each <code>Secret</code> found in Save Your Information and your value for that <code>Secret</code>.</p> <ul> <li>Once you save a secret value, you will not be able to view what you entered, so check carefully before you hit <code>Add Secret</code><ul> <li>You can replace the value for any secret later - but you can't view the saved value</li> </ul> </li> <li>Be especially careful with your <code>TEAMID</code><ul> <li>If <code>TEAMID</code> is incorrect, the initial <code>Actions</code> will succeed but <code>Build Loop</code> will fail and you will have some clean-up to do</li> </ul> </li> </ul> <p>You can copy the names of the <code>Secrets</code> by hovering to the right of each word below until you see the copy button (). Click on the button to copy the <code>Secret</code> name and paste it into GitHub where you see <code>YOUR_SECRET_NAME</code>. This avoids spelling errors. <pre><code>TEAMID\n</code></pre> <pre><code>FASTLANE_ISSUER_ID\n</code></pre> <pre><code>FASTLANE_KEY_ID\n</code></pre> <pre><code>FASTLANE_KEY\n</code></pre> <pre><code>GH_PAT\n</code></pre> <pre><code>MATCH_PASSWORD\n</code></pre></p> <ul> <li>For the <code>FASTLANE_KEY</code> value, copy the entire contents from<code>-----BEGIN PRIVATE KEY-----</code> through<code>-----END PRIVATE KEY-----</code></li> <li>For <code>MATCH_PASSWORD</code> value - if you did not already make up a password and save it with your other <code>Secrets</code>, do it now<ul> <li>The <code>MATCH_PASSWORD</code> must be the same for any repository using this method (Other Apps)</li> </ul> </li> </ul> <p>Once all six <code>Secrets</code> have been added to your <code>LoopWorkspace</code>, your screen should look similar to the graphic below.</p> <ul> <li>Check that all of your <code>Secrets</code> are spelled correctly</li> <li>If one is misspelled, delete it and add a <code>New repository secret</code> with the correct name</li> </ul> <p></p> <p>Time for a Break?</p> <p> This is a good place to pause if you need to. Just note where you are on the page so you can return later.</p>"},{"location":"gh-actions/gh-first-time/#step-5-of-12","title":"Step 5 of 12","text":"<p> Step 5 of 12 is Validate Secrets. This step has 2  Substeps.</p>"},{"location":"gh-actions/gh-first-time/#substep-51-for-step-5","title":"Substep 5.1 for Step 5","text":"<p>Next section, First Use of Actions Tab, is  Substep 1 out of 2 for Step 5. This is done only once for a given repository.</p>"},{"location":"gh-actions/gh-first-time/#first-use-of-actions-tab","title":"First Use of Actions Tab","text":"<p>Near the top middle of your <code>LoopWorkspace</code> fork\u00a0 is an <code>Actions</code> tab. This section provides detailed directions to enable <code>Actions</code>.</p> <p>Click on the <code>Actions</code> tab of your <code>LoopWorkspace</code> repository.</p> <ul> <li>Your first time, a message appears saying <code>Workflows aren't being run on this forked repository</code> as shown in the graphic below</li> <li> <p>Tap on the green button that says: <code>I understand my workflows, go ahead and enable them</code></p> <p></p> </li> </ul> <p>The <code>workflows</code> are now displayed on the left side as shown in the graphic below. (Dismiss the <code>Actions Enabled</code> message using the <code>X</code> near the upper right side if it appears).</p> <p></p>"},{"location":"gh-actions/gh-first-time/#substep-52-for-step-5","title":"Substep 5.2 for Step 5","text":"<p>Next section, Validate <code>Secrets</code>, is  Substep 2 out of 2 for Step 5. This should only be needed one time, unless you modify any of your <code>Secrets</code>.</p>"},{"location":"gh-actions/gh-first-time/#validate-secrets","title":"Validate <code>Secrets</code>","text":"Section Summary (click to open/close) <p>This step validates most of your six <code>Secrets</code> and provides error messages if it detects an issue with one or more.</p> <ol> <li>Click on the \"Actions\" tab of your LoopWorkspace repository and enable workflows if needed</li> <li>On the left side, select <code>1. Validate Secrets</code>.</li> <li>On the right side, click \"Run Workflow\", and tap the green <code>Run workflow</code> button.</li> <li>Wait, and within a minute or two you should see a green checkmark indicating the workflow succeeded.</li> <li>The workflow will check if the required <code>Secrets</code> are added and that they are correctly formatted. If errors are detected, please check the run log for details.</li> </ol> <p> To skip the detailed instructions, click on <code>Add Identifiers</code></p> <p>Near the top middle of your <code>LoopWorkspace</code> fork, click on the <code>Actions</code> tab.</p> <ul> <li>If you have never used <code>Actions</code> on this repository before, and need instructions (in addition to what GitHub shows), please back up to First use of Actions Tab.</li> </ul> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the <code>Actions</code> tab of your <code>LoopWorkspace</code> repository</li> <li>On the left side, click on 1. <code>Validate Secrets</code></li> <li>On the right side, click <code>Run Workflow</code> to show a drop-down menu<ul> <li>You will see your default branch (typically this is <code>main</code>)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says <code>Run workflow</code>.</p> <p></p> </li> </ol> <p>The <code>Validate Secrets</code> Action\u00a0 should succeed or fail in a few minutes. Do not continue to the next step until this one succeeds.</p> <ul> <li>If you see the green check ()  continue to the next section</li> <li>If you see the red <code>X</code> ():<ul> <li>Examine the Error tells how to view the file needed to diagnose your problem.</li> <li>Action: Validate Secrets Errors tells you what to search for in the file</li> <li>Resolve the error and repeat the Action: Validate Secrets</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#step-6-of-12","title":"Step 6 of 12","text":"<p> Step 6 of 12 is <code>Add Identifiers</code>. This step has no  Substeps.</p> <p>This should only be needed one time, unless the developers add or modify an identifier.</p> <p>For example going from version 3.2.x to version 3.3 or higher requires this to be repeated. There will be clear instructions on to update page when you need to do this.</p>"},{"location":"gh-actions/gh-first-time/#add-identifiers","title":"<code>Add Identifiers</code>","text":"Section Summary (click to open/close) <ol> <li>Click on the \"Actions\" tab of your LoopWorkspace repository.</li> <li>On the left side, select \"2. Add Identifiers\".</li> <li>On the right side, click \"Run Workflow\", and tap the green <code>Run workflow</code> button.</li> <li>Wait, and within a minute or two you should see a green checkmark indicating the workflow succeeded.</li> </ol> <p> To skip the detailed instructions, click on Configure Identifiers for Loop.</p> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the <code>Actions</code> tab of your <code>LoopWorkspace</code> repository</li> <li>On the left side, click on 2. <code>Add Identifiers</code></li> <li>On the right side, click <code>Run Workflow</code> to show a drop-down menu<ul> <li>You will see your default branch (typically this is <code>main</code>)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says <code>Run workflow</code>.</p> <p></p> </li> </ol> <p>The <code>Add Identifiers</code> Action\u00a0 should succeed or fail in a few minutes. Do not continue to the next step until this one succeeds.</p> <ul> <li>If you see the green check ()  continue to the next section</li> <li>If you see the red <code>X</code> ():<ul> <li>Examine the Error tells how to view the file needed to diagnose your problem.</li> <li>Action: Add Identifiers Errors tells you what to search for in the file</li> <li>Resolve the error and repeat the Action: Add Identifiers</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#step-7-of-12","title":"Step 7 of 12","text":"<p> Step 7 of 12 is Configure Identifiers for Loop. This step has 2  Substeps, some of which may not be required but are numbered so you can check them off.</p> <p>This should only be needed one time, unless the developers add or modify an identifier.</p> <p>For example going from version 3.2.x to version 3.3 or higher requires this to be repeated. There will be clear instructions on to update page when you need to do this.</p>"},{"location":"gh-actions/gh-first-time/#configure-identifiers-for-loop","title":"Configure Identifiers for Loop","text":"<p>Some steps can be skipped if you previously built the Loop app with a Mac using Xcode.</p> <p>Please read carefully to avoid confusion.</p>"},{"location":"gh-actions/gh-first-time/#substep-71-for-step-7","title":"Substep 7.1 for Step 7","text":"<p>Next section, Create <code>App Group</code>, is  Substep 1 out of 2 for Step 7. This is only required one time and can be skipped if you previously built this app with Xcode.</p>"},{"location":"gh-actions/gh-first-time/#create-app-group","title":"Create <code>App Group</code>","text":"Section Summary (click to open/close) <p> If you have already built the Loop app via Xcode using this Apple ID, skip ahead to Previous Xcode Builders.</p> <ol> <li>Go to Register an <code>App Group</code> on the Apple Developer site.</li> <li>For Description, use \"Loop App Group\".</li> <li>For Identifier, enter \"group.com.TEAMID.loopkit.LoopGroup\", substituting your team id for <code>TEAMID</code>.</li> <li>Click \"Continue\" and then \"Register\".</li> </ol> <p> To skip the detailed instructions, click on Add <code>App Group</code> to Identifiers</p> <p>The <code>Loop</code> App Group already exists if you previously built the Loop app using Xcode with this Apple Developer ID. In that case, skip ahead to Previous Xcode Builders.</p> <p>If you have never built the Loop app with Xcode using your <code>TEAMID</code>, you need to create an App Group associated with your <code>TEAMID</code>.</p> <ol> <li>Open this link: Register an App Group on the Apple Developer site.</li> <li>For <code>Description</code>, use <code>Loop App Group</code>.</li> <li>For <code>Identifier</code>, enter <code>group.com.TEAMID.loopkit.LoopGroup</code>, substituting your team id for <code>TEAMID</code>.</li> <li>Double-check the spelling - your <code>TEAMID</code> must be correct and the <code>Loop</code> App Group must match the format shown in the previous step<ul> <li>A mistake here means you will not be able to build the Loop app until you fix it</li> </ul> </li> <li>Click <code>Continue</code> and then <code>Register</code>.</li> </ol>"},{"location":"gh-actions/gh-first-time/#identifiers-for-the-loop-app-32x-and-before","title":"Identifiers for the Loop app (3.2.x and before)","text":"<p> If you ever built the Loop app using Mac, skip ahead to Previous Xcode Builders.</p>"},{"location":"gh-actions/gh-first-time/#new-builders","title":"New Builders","text":"<p>Click this link: <code>Certificates, Identifiers &amp; Profiles: Identifiers List</code> on the Apple Developer site.</p> <p>If you never built using Xcode, then after the <code>Add Identifiers</code> Action, you will see the six items under <code>NAME</code> in the table below with the associated <code>IDENTIFIER</code> information. Your <code>Developer ID</code> replaces the <code>TEAMID</code> in the identifier.</p> <p> Skip ahead to Table with Name and Identifier for <code>Loop 3</code>.</p>"},{"location":"gh-actions/gh-first-time/#previous-xcode-builders","title":"Previous Xcode Builders","text":"<p>Click this link: <code>Certificates, Identifiers &amp; Profiles: Identifiers List</code> on the Apple Developer site.</p> <p>Because you built the Loop app using Xcode, then the <code>NAME</code> associated with at least the <code>Loop identifier</code> will appear as <code>XC com.TEAMID.loopkit.Loop</code> under the <code>NAME</code> column. Ignore the <code>NAME</code> column and key off what you see under the <code>IDENTIFIER</code> column of the table. Only the six listed in the table below need to appear when building <code>Loop 3</code>.</p>"},{"location":"gh-actions/gh-first-time/#table-with-name-and-identifier-for-loop-3","title":"Table with Name and Identifier for <code>Loop 3</code>","text":"<code>NAME</code> <code>IDENTIFIER</code> <code>Loop</code> <code>com.TEAMID.loopkit.Loop</code> <code>Loop Intent Extension</code> <code>com.TEAMID.loopkit.Loop.Loop-Intent-Extension</code> <code>Loop Status Extension</code> <code>com.TEAMID.loopkit.Loop.statuswidget</code> <code>Small Status Widget</code> <code>com.TEAMID.loopkit.Loop.SmallStatusWidget</code> <code>WatchApp</code> <code>com.TEAMID.loopkit.Loop.LoopWatch</code> <code>WatchAppExtension</code> <code>com.TEAMID.loopkit.Loop.LoopWatch.watchkitextension</code> <p>Loop dev Builders</p> <p>The name and identifier for \"<code>Small Status Widget</code>\" has been renamed to \"<code>Loop Widget Extension</code>\". This only affects those using the dev branch until the next release. At that time, this table will be updated.</p> <p>If you are building with the dev branch, follow the directions at One-Time Changes.</p>"},{"location":"gh-actions/gh-first-time/#substep-72-for-step-7","title":"Substep 7.2 for Step 7","text":"<p>Next section, Add or Review Configuration for <code>Loop Identifier</code>, is  Substep 2 out of 2 for Step 7.</p> <p>This should only be needed one time, unless the developers add or modify an identifier.</p> <p>For example going from version 3.2.x to version 3.3 or higher requires this to be repeated. There will be clear instructions on to update page when you need to do this.</p>"},{"location":"gh-actions/gh-first-time/#add-or-review-configuration-for-loop-identifier","title":"Add or Review Configuration for <code>Loop Identifier</code>","text":"Section Summary (click to open/close) <p>Note 1 - If you previously built with Xcode, the <code>Names</code> listed below may be different, but the <code>Identifiers</code> will match. A table was provided above that lists both <code>Names</code> and <code>Identifiers</code>. The Add Identifier Action that you completed above generates 6 identifiers, but only 4 need to be modified as indicated in this step.</p> <p>Note 2 - Depending on your build history, you may find some of the Identifiers are already configured - and you are just verifying the status; but in other cases, you will need to configure the Identifiers.</p> <ol> <li>Go to Certificates, Identifiers &amp; Profiles on the Apple Developer site.</li> <li>For each of the following identifier names:<ul> <li><code>Loop</code></li> <li><code>Loop Intent Extension</code></li> <li><code>Loop Status Extension</code></li> <li><code>Small Status Widget</code> (released code) / <code>Loop Widget Extension</code> (dev branch)</li> </ul> </li> <li>Click on the identifier's name.</li> <li>On the \"App Groups\" capabilities, click on the \"Configure\" button.</li> <li>Select the \"Loop App Group\"</li> <li>Click \"Continue\".<ul> <li>For the <code>Loop Identifier</code> only, you must add a check box next to <code>Time Sensitive Notifications</code></li> <li>This is only required for released code, it is automatically selected for the dev branch</li> </ul> </li> <li>Click \"Save\".</li> <li>Click \"Confirm\".</li> <li>Remember to do this for each of the identifiers above.</li> </ol> <p> To skip the detailed instructions, click on Create Loop App in App Store Connect</p> <p>Find and click on the row for the <code>Loop identifier</code> on the Certificates, Identifiers &amp; Profiles: Identifiers List page. Look in the <code>IDENTIFIER</code> column to find <code>com.TEAMID.loopkit.Loop</code>. The name in the <code>NAME</code> column may be different than Loop.</p> <code>NAME</code> <code>IDENTIFIER</code> <code>Loop</code> <code>com.TEAMID.loopkit.Loop</code> <p>The <code>Edit Your App ID Configuration</code> screen will open. Take two actions for the <code>Loop identifier</code>.</p> <ol> <li>In the <code>App Services</code> column, scroll down to the <code>App Groups</code> row<ul> <li>Ensure the check box (under the <code>Capabilities</code> column) for <code>App Groups</code> is checked</li> <li>(<code>XC Loop</code>) - If the word <code>Edit</code> shows up under <code>NOTES</code>, move on to step 2 below</li> <li>If the word <code>Configure</code> shows up, tap on it<ul> <li>This opens the <code>App Group Assignment</code> screen</li> <li>Check the box by <code>Loop</code> App Group that uses your <code>TEAMID</code> in <code>group.com.TEAMID.loopkit.LoopGroup</code> and then <code>Continue</code></li> </ul> </li> </ul> </li> <li> <p>Continue scrolling down to the <code>Time Sensitive Notifications</code> row</p> <ul> <li>Make sure the box next to <code>Time Sensitive Notifications</code> is checked as shown in the following graphic</li> <li>This is only needed for the <code>Loop</code> identifier</li> </ul> <p></p> </li> <li> <p>Now scroll slowly back up to the top of the page. As you go, confirm that each of these is configured with a check mark; if any are missing, click to enable.</p> <ul> <li><code>Time Sensitive Notifications</code></li> <li><code>Siri</code> (formerly known as <code>SiriKit</code>)</li> <li><code>Push Notifications</code></li> <li><code>HealthKit</code></li> <li><code>App Groups</code> (enabled with <code>group.com.TEAMID.loopkit.LoopGroup</code>)</li> </ul> </li> </ol> <p>If you modified settings for an identifier, the <code>Save</code> button at the top right will become active. Click on <code>Save</code> before leaving this page - otherwise, the change does not take effect.</p> <ul> <li>Tap on <code>Save</code></li> <li>This opens the <code>Modify App Capabilities</code> confirmation screen</li> <li>Click on <code>Confirm</code></li> </ul> <p>If you did not need to make changes, the <code>Save</code> button will not be active.</p> <ul> <li>Tap on the <code>&lt; All Identifiers</code> button at the top left</li> </ul> <p>The full list of Identifiers should be displayed again.</p>"},{"location":"gh-actions/gh-first-time/#add-app-group-to-identifiers","title":"Add <code>App Group</code> to Identifiers","text":"<p>You will now be checking the status for 3 more identifiers to ensure the <code>App Group</code> is configured to use the <code>Loop</code> App Group. You must add or confirm the App Group for these 3 identifiers (for released code):</p> <code>NAME</code> <code>IDENTIFIER</code> <code>Loop Intent Extension</code> <code>com.TEAMID.loopkit.Loop.Loop-Intent-Extension</code> <code>Loop Status Extension</code> <code>com.TEAMID.loopkit.Loop.statuswidget</code> <code>Small Status Widget</code> <code>com.TEAMID.loopkit.Loop.SmallStatusWidget</code> <p>Double-check when finished with this step</p> <p>When you think you have completed this step, double check to make sure all 4 <code>Identifiers</code> listed in the table have the <code>App Group</code> added.</p> <p>If not, <code>Create Certificates</code> will succeed but <code>Build Loop</code> will fail.</p>"},{"location":"gh-actions/gh-first-time/#building-dev-branch","title":"Building dev branch?","text":"<p>If you are building the dev branch, the <code>Small Status Widget</code> was renamed. Look for it and add the App Group to it now.</p> <code>NAME</code> <code>IDENTIFIER</code> <code>Loop Widget Extension</code> <code>com.TEAMID.loopkit.Loop.LoopWidgetExtension</code>"},{"location":"gh-actions/gh-first-time/#back-to-how-to-instruction-for-main-or-dev","title":"Back to How-to Instruction for main or dev","text":"<p>Find and click on a given identifier row on the Certificates, Identifiers &amp; Profiles: Identifiers List page.</p> <p>The <code>Edit Your App ID Configuration</code> screen will open. Take one action for each of these three identifiers.</p> <p>Looking at the <code>App Services</code> column, scroll down to the <code>App Groups</code> row</p> <ul> <li>Ensure the check box (under the <code>Capabilities column</code>) for <code>App Groups</code> is checked</li> <li>If the word <code>Edit</code> shows up under <code>NOTES</code>, return to the identifiers list</li> <li>If the word <code>Configure</code> shows up, tap on it<ul> <li>This opens the <code>App Group Assignment</code> screen</li> <li>Check the box by <code>Loop App Group</code> that uses your <code>TEAMID</code> in <code>group.com.TEAMID.loopkit.LoopGroup</code> and then <code>Continue</code></li> </ul> </li> </ul> <p>If you had to modify a given identifier, the <code>Save</code> button at the top right will become active</p> <ul> <li>Tap on <code>Save</code></li> <li>This opens the <code>Modify App Capabilities confirmation</code> screen</li> <li>Click on <code>Confirm</code></li> </ul> <p>If you did not need to make changes, the <code>Save</code> button will not be active.</p> <ul> <li>Tap on the <code>&lt; All Identifiers</code> button at the top left</li> </ul> <p>The full list of Identifiers should be displayed again.</p>"},{"location":"gh-actions/gh-first-time/#step-8-of-12","title":"Step 8 of 12","text":"<p> Step 8 of 12 is Create Loop App in App Store Connect. This step has two  Substeps.</p> <p>Substep 8.1 is required only one time.</p> <p>If you are building other apps using this page as a guide, you must complete Substep 8.2 one time for each app.</p>"},{"location":"gh-actions/gh-first-time/#substep-81-for-step-8","title":"Substep 8.1 for Step 8","text":""},{"location":"gh-actions/gh-first-time/#digital-service-act-compliance","title":"Digital Service Act Compliance","text":"<p>In order to create an app you need to indicate whether you are a trader or a non-trader. You are a non-trader unless you use the same Developer ID to submit apps for sale.</p> <p>Even if the graphic below does not match what you see exactly, it should assist in guiding you through the steps.</p> <p>Open this link: <code>App Store Connect / Apps</code>; log in if needed.</p> <p>If you do not see the banner, shown in the top of the graphic below, asking you to Complete Compliance Requirements, you can skip ahead to Create Loop App in App Store Connect.</p> <p>If you do see the banner, follow the numbered steps in the graphic below:</p> <ol> <li> <p>Click on the link that says \"Complete Compliance Requirements\" to open a new screen shown in the middle of the graphic below</p> </li> <li> <p>Tap on the \"Complete Compliance Requirements for Your Name\" link to bring up a pop-up shown in the bottom of the graphic below</p> </li> <li> <p>Select the \"This is a non-trader provider account\" radio button</p> </li> <li> <p>Click Save</p> </li> </ol> <p></p> <p>You do not need to add a bank account or fill out tax forms if you are only using the App Store to get your own app into TestFlight. You only need to have a paid account with a valid license agreement and have completed this compliance form. Ignore other requests from Apple.</p>"},{"location":"gh-actions/gh-first-time/#substep-82-for-step-8","title":"Substep 8.2 for Step 8","text":""},{"location":"gh-actions/gh-first-time/#create-loop-app-in-app-store-connect","title":"Create Loop App in App Store Connect","text":"Section Summary (click to open/close) <p>If you have created a Loop app in App Store Connect before, make sure you Remove Apple Vision Pro and then skip ahead to Create Certificates.</p> <ol> <li>Click on the link apps list to open App Store Connect and click the blue \"plus\" icon to create a New App.<ul> <li>Select \"iOS\".</li> <li>Select a name: this will have to be unique, so you may have to try a few different names here, but it will not be the name you see on your phone, so it's not that important.</li> <li>Select your primary language.</li> <li>Choose the bundle ID that matches <code>com.TEAMID.loopkit.Loop</code>, with TEAMID matching your team id.</li> <li>SKU can be anything; e.g. \"123\".</li> <li>Select \"Full Access\".</li> </ul> </li> <li>Click Create</li> </ol> <p>You do not need to fill out the next form. That is for submitting to the app store.</p> <p>Remove Apple Vision Pro from the app you just created.</p> <p> To skip the detailed instructions, click on Create Certificates.</p> <p>If you have created a <code>Loop app</code> in App Store Connect before, skip ahead to Create Certificates.</p> <p>If you have previously used some kind of remote build, like <code>diawi</code> or <code>TestFlight</code>, you may have your Loop in the App Store but can't see it. Don't worry - there are instructions for this case.</p> <ol> <li> <p>Open this link: <code>App Store Connect / Apps</code> to view your apps; log in if needed.</p> <ul> <li>If you have never added an app to App Store Connect, you will not see the icons inside the red rectangle and should keep going, although some people report the search icon shows up for them</li> <li>If you have an app that is not shown, you will see a search icon and the <code>All Statuses</code> dropdown. If you get to step 3 and cannot find your <code>com.TEAMID.loopkit.Loop</code> in the Bundle ID drop-down, this means you need to follow Find My Loop.</li> </ul> <p></p> </li> <li> <p>There might be a blue banner present at this time. If not, it will show up after you have at least one app.</p> <ul> <li>The information banner refers to \"iOS Apps on Apple Vision Pro\"</li> <li>You must wait until you have an app before you can edit the capabilities for the app - this will happen after the next step</li> </ul> </li> <li> <p>Click the <code>Add Apps</code> button or the blue \"plus\" icon ( ) and select <code>New App</code> as shown in the graphic below</p> <p></p> </li> <li> <p>The <code>New App</code> dialog box opens and should appear similar to the graphic below. Before you fill anything out, make sure your <code>Bundle ID</code> is available in the dropdown menu (it shows as <code>Choose</code> in the graphic below). If you do not see <code>com.TEAMID.loopkit.Loop</code>, with <code>TEAMID</code> matching your <code>TEAMID</code> in the dropdown menu; back out of this screen and follow the directions in Find My Loop instead.</p> <ul> <li>Select <code>iOS</code>.</li> <li>Enter a name: this will have to be unique<ul> <li>You could start with <code>Loop_ABC</code> where <code>ABC</code> are your initials</li> <li>If that is already taken, you can add a number, for example, <code>Loop_ABC_123</code></li> <li>This name is what you see on the App Store Connect list and in the TestFlight app</li> <li>Once installed on your phone, you will see the Loop app with the standard <code>Loop Logo</code></li> <li>You can Change the App Store Connect Name later if you want</li> </ul> </li> <li>Select your primary language.</li> <li>Choose the <code>Bundle ID</code> that matches <code>com.TEAMID.loopkit.Loop</code></li> <li><code>SKU</code> can be anything; for example <code>123</code>.</li> <li>Select \"<code>Full Access</code>\".</li> </ul> <p></p> </li> <li> <p>One last check - if the <code>Bundle ID</code> has a number other than your actual 10-digit <code>TEAMID</code> embedded in it, you will be creating an App in the App Store that you cannot use</p> <ul> <li>In this case, do NOT select <code>Create</code></li> <li>Instead, go back and put the correct value into the <code>TEAMID</code> Secret  and follow the steps in Delete Identifiers</li> </ul> </li> <li>Click <code>Create</code> but do not fill out the next form. That is for submitting to the app store and you will not be doing that.</li> </ol>"},{"location":"gh-actions/gh-first-time/#remove-apple-vision-pro","title":"Remove Apple Vision Pro","text":"<p>It is now time to edit the availability of your app on Apple Vision Pro. If you skip this step, you will get an annoying email telling you Apple Vision Pro is not supported by your app.</p> <ul> <li> <p>First click to return to the main App Store Connect. In the message section labeled iOS Apps on Apple Vision Pro, click on \"Edit Availability\", highlighted by the red rectangle in the graphic below.</p> <p></p> </li> <li> <p>This opens a new screen. By default, all your apps have Apple Vision Pro selected. Tap on the None button and then save to remove this.</p> </li> <li> <p>If you later create a new app, you might need to perform the same task for the new app</p> <p></p> </li> </ul> <p>You are done with this activity and can close the browser tab. It's time to head back to your GitHub account and Create Certificates</p>"},{"location":"gh-actions/gh-first-time/#find-my-loop","title":"Find My Loop","text":"<p>This section is for people who were not able to follow the instructions in the last section because <code>com.TEAMID.loopkit.Loop</code>, with <code>TEAMID</code> matching your <code>TEAMID</code>, was not in the dropdown menu for <code>Bundle ID</code>.</p> <p>There are two possible reasons:</p> <ol> <li>You did not complete Add <code>App Group</code> to Identifiers or one of the predecessor steps; review those steps</li> <li>Your app is already in App Store Connect, but you cannot see it</li> </ol> <p>You may have no memory of ever setting up <code>Loop</code> in App Store Connect. If you previously used some kind of remote build, like <code>diawi</code>, your <code>Loop</code> may be there as a Removed App.</p> <ul> <li> <p>Open this link: App Store Connect / Apps, look for the <code>All Statuses</code> dropdown indicator, and select <code>Removed Apps</code></p> <p></p> </li> <li> <p>Click on the App name:</p> <p></p> </li> <li> <p>Ensure this is the app you want by selecting <code>App Information</code>, highlighted on the left side in the graphic below.</p> <ul> <li>Examine its <code>Bundle ID</code> (not in view in this graphic) - confirm it is correct.</li> <li>The format should be: <code>com.TEAMID.loopkit.Loop</code> with your TEAMID included</li> </ul> </li> <li> <p>Then scroll down to the bottom and choose <code>Restore App</code>.</p> <p></p> </li> <li> <p>Make sure <code>User Access</code> is set to <code>Full Access</code> and click on <code>Restore</code>.</p> <p></p> </li> <li> <p>You are done with this step and ready to Create Certificates</p> </li> </ul>"},{"location":"gh-actions/gh-first-time/#step-9-of-12","title":"Step 9 of 12","text":"<p> Step 9 of 12 is <code>Create Certificates</code>. This step has no  Substeps.</p> <p>The next section will be required again in the future for these cases:</p> <ul> <li>When your certificates have expired (after one year) and you need to Renew Certificates</li> <li>When the developers have modified the Identifiers; this requires Create Certificates to be run after you successfully run Add Identifiers and update the new Identifiers</li> </ul>"},{"location":"gh-actions/gh-first-time/#create-certificates","title":"<code>Create Certificates</code>","text":"Section Summary (click to open/close) <ol> <li>Go back to the \"Actions\" tab of your LoopWorkspace repository in GitHub.</li> <li>On the left side, select \"3. Create Certificates\".</li> <li>On the right side, click \"Run Workflow\", and tap the green <code>Run workflow</code> button.</li> <li>Wait, and within a minute or two you should see a green checkmark indicating the workflow succeeded.</li> </ol> <p> To skip the detailed instructions, click on Build the Loop App</p> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the \"<code>Actions</code>\" tab of your <code>LoopWorkspace</code> repository</li> <li>On the left side, click on \"<code>Create Certificates</code>\"</li> <li>On the right side, click \"<code>Run Workflow</code>\" to show a drop-down menu<ul> <li>You will see your default branch (typically <code>main</code>)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says \"<code>Run workflow</code>\".</p> <p></p> </li> <li> <p>Wait a minute or two for the action to finish</p> <ul> <li>If this action fails, head over to Action: 3. Create Certificates Errors</li> <li>Once you've resolved the error, repeat the Actions Add Identifiers and then <code>Create Certificates</code>. (The <code>Add Identifiers</code> might not be required but it is fast and should be done as a matter of routine.)</li> </ul> </li> </ol>"},{"location":"gh-actions/gh-first-time/#step-10-of-12","title":"Step 10 of 12","text":"<p> Step 10 of 12 is Build the Loop App. This step has no  Substeps.</p> <p>The next section is repeated every time you need to manually build. With the next release, building can be configured to be automatic, but for now, plan to run this once a month so you always have a fresh build in your TestFlight app.</p>"},{"location":"gh-actions/gh-first-time/#build-the-loop-app","title":"Build the Loop App","text":"Section Summary (click to open/close) <ol> <li>Click on the \"Actions\" tab of your LoopWorkspace repository.</li> <li>On the left side, select \"4. Build Loop\".</li> <li>On the right side, click \"Run Workflow\", and tap the green <code>Run workflow</code> button.</li> <li>You have some time now. Go enjoy a coffee. The build should take about 20-30 minutes.</li> <li>You should get several emails<ul> <li>one says the build succeeded (or failed)</li> <li>one says TestFlight is ready (typically half-hour after the build succeeds)</li> <li>Ignore the one that says you need to fix \"issues\" in your app. You are not selling the app in the app store; so no action is required. The app you built is for personal use for you or a family member.</li> </ul> </li> <li>Your app should eventually appear on App Store Connect.</li> <li>For each phone/person you would like to support:<ul> <li>Add them in Users and Access on App Store Connect.</li> <li>Add them to your TestFlight Internal Testing group.</li> </ul> </li> </ol> <p> To skip the detailed instructions, click on Set Up Users and Access (TestFlight).</p> <p>Refer to the graphic below for the first four steps:</p> <ol> <li>Click on the \"<code>Actions</code>\" tab of your <code>LoopWorkspace</code> repository.</li> <li>On the left side, click on \"4. <code>Build Loop</code>\".</li> <li>On the right side, click \"<code>Run Workflow</code>\" to show a drop-down menu<ul> <li>You will see your default branch (typically <code>main</code>)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says \"<code>Run workflow</code>\".</p> <p></p> </li> <li> <p>Wait a few minutes to make sure there is not an early failure</p> <ul> <li>If this action fails, head over to Action: Build Loop Errors</li> <li>Once you've resolved the error, it's a good idea to repeat all three steps in this order:<ul> <li>Add Identifiers</li> <li>Create Certificates</li> <li>Build Loop</li> </ul> </li> </ul> </li> <li>If the process appears to be happening without an error, go do something else for a while. The build should take about 20-30 minutes.</li> <li>You should get several emails<ul> <li>one says the build succeeded (or failed)</li> <li>one says TestFlight is ready (typically half-hour after the build succeeds)</li> <li>Ignore the one that says you need to fix \"issues\" in your app</li> </ul> </li> <li>Your app should eventually appear on <code>App Store Connect</code>.</li> </ol>"},{"location":"gh-actions/gh-first-time/#apple-email-to-ignore","title":"Apple Email to Ignore","text":"<p>You can ignore an email from Apple that there are things you must fix in your app:</p> <ul> <li>There is no action you need to take - the developers will handle any updates that are required before it affects your ability to build the app</li> <li>Other warnings only address issues if you were selling the app in the app store, but it is for your own personal use</li> </ul>"},{"location":"gh-actions/gh-first-time/#build-failed","title":"Build Failed?","text":"<p>Did you get a red X? Head over to the Errors with Browser to page find a solution.</p>"},{"location":"gh-actions/gh-first-time/#successful-build","title":"Successful Build","text":"<p>Congratulations</p> <p>If you get the green check mark, your app successfully built. Just a few more steps.</p>"},{"location":"gh-actions/gh-first-time/#step-11-of-12","title":"Step 11 of 12","text":"<p> Step 11 of 12 is Set Up Users and Access (TestFlight). This step has no  Substeps.</p> <p>The next section is repeated if you need to add a User to your account. For example, you want to add another adult who can install the app on your child's phone or you want a spouse or friend to have a copy of the app on their phone as backup for a trip.</p> <p>As a developer, you are already included as a user with the Role of Account Holder, Admin.</p>"},{"location":"gh-actions/gh-first-time/#set-up-users-and-access-testflight","title":"Set Up Users and Access (TestFlight)","text":"<p>Once the first build completes, you will be able to configure TestFlight for the app.</p> <p>Add Each Users One Time</p> <p>Once you add a user to have access to your TestFlight for this app, you don't need to do it again - it remains available to them across rebuilds and different versions for that app.</p> <p>You are configuring a private capability for your family using an Internal Testing group. You need the Apple ID email address for each adult installing from your build. When building for a child, you will use your own Apple ID, not theirs. See TestFlight for a Child.</p> <ol> <li> <p>First you need to add the email address(es) to your App Store Connect Access Users list:</p> <ul> <li>Open this link: Users and Access<ul> <li>You must provide a role for each person - <code>Customer Support</code> is a good choice</li> <li>Once you have added them here, you'll be able to select them in the <code>TestFlight</code> group for your app</li> </ul> </li> </ul> <p></p> </li> <li> <p>Open this link: App Store Connect / Apps to view your apps; log in if needed. Then select your Loop app. Click on the <code>TestFlight</code> tab then click the blue plus button () next to <code>Internal Testing</code> to add a group.</p> <p></p> </li> <li> <p>Fill out the name you want for the <code>Internal Testing</code> group</p> <ul> <li>Be sure to check the box <code>Enable automatic distribution</code></li> <li>Click <code>Create</code> when done (this can always be modified later)</li> </ul> <p></p> </li> <li> <p>As soon as you create the group, you'll be asked who should be included</p> <ul> <li>Click in the box beside each person you want to include</li> <li>Each person in this group will get an email each time you update (build again) using the <code>GitHub Browser Build</code> method</li> <li>Click <code>Add</code> when you are done</li> <li>If building for a child, you will send the invitation to yourself because you will install for your child: See TestFlight for a Child</li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#step-12-of-12","title":"Step 12 of 12","text":"<p> Step 12 of 12 is Install on Phone. This step has no  Substeps.</p> <p>The next section is repeated for every phone that you want to install a given build from TestFlight. Because a TestFlight app only last 90 days, you should probably build and install at least every 60 days.</p>"},{"location":"gh-actions/gh-first-time/#install-on-phone","title":"Install on Phone","text":"<p>The Install on Phone page walks you through the steps to use the TestFlight app to install the Loop app on a phone.</p> <p>But wait - there's more.</p> <ul> <li>Caregivers who help manage a loved-ones diabetes often use other open-source apps that can be built the same way</li> <li>When you are done building and installing the Loop app, there are instructions to Build Other Apps with Browser</li> </ul>"},{"location":"gh-actions/gh-first-time/#extra-steps","title":"Extra Steps","text":"<p>Most people won't need the information on the rest of this page.</p>"},{"location":"gh-actions/gh-first-time/#already-have-loopworkspace","title":"Already Have\u00a0LoopWorkspace?","text":"<p>Some people may already have a copy of <code>LoopWorkspace</code>.</p> <p>If your copy is not from <code>LoopKit</code>, follow the Delete and Start Fresh directions.</p> <p>If your copy is from <code>LoopKit</code>:</p> <ul> <li>Open your <code>LoopWorkspace</code> repository (<code>https://github.com/username/LoopWorkspace</code>) where you use your GitHub <code>username</code> in the URL</li> <li>Review the graphic in the Configure: Successful Fork section<ul> <li>Make sure all the items highlighted by red rectangles are correct with the possible exception of your fork being up to date</li> </ul> </li> <li>If you see a message that your fork is not up to date - tap on the <code>Sync fork</code> button and follow the instructions</li> <li>Continue with Create <code>GitHub Personal Access Token</code></li> </ul>"},{"location":"gh-actions/gh-first-time/#delete-and-start-fresh","title":"Delete and Start Fresh","text":"<p>If your fork is not from <code>LoopKit</code>:</p> <ul> <li>Delete your LoopWorkspace repository<ul> <li>Instructions to delete a repository are found at GitHub Docs</li> </ul> </li> <li>Return to Fork LoopWorkspace and follow all the instructions</li> </ul>"},{"location":"gh-actions/gh-first-time/#delete-identifiers","title":"Delete Identifiers","text":"<p>When you have already built the Loop app with Xcode, the Identifier names will not match the directions and you might have trouble deciding which ones to configure.  Your existing <code>Loop</code> identifier will have a name that starts with <code>XC</code> as shown below, where your 10-digit <code>TEAMID</code> is used.</p> <ul> <li><code>Name: XC com TEAMID loopkit Loop</code></li> <li><code>Identifier: com.TEAMID.loopkit.Loop</code></li> </ul> <p>The <code>Identifier</code> that is associated with the <code>Loop</code> identifier cannot be deleted if it is already in the App Store but all others can. If you attempt to delete the <code>XC</code> Loop identifier, you may be told it cannot be deleted because it is in use in the app store. That's OK. Same for other identifiers (if you build a bunch of Apps). If a <code>Bundle ID</code> has ever been associated with an app in the App Store, you cannot delete the <code>Identifier</code>.</p> <p>To make it easy when configuring the identifiers, go through and delete as many as you can.</p> <ul> <li>Open this link: Certificates, Identifiers &amp; Profiles: Identifiers List on the Apple Developer site.</li> <li>Use the graphic below as a guide to removing identifiers</li> <li>Keep repeating the steps until you've removed all the identifiers you can (or want to) delete</li> <li>It is OK to delete an identifier even if it does have your correct <code>TEAMID</code><ul> <li>If you try to delete the <code>Loop</code> identifier with your <code>TEAMID</code>, it will refuse, don't worry, just keep going</li> </ul> </li> <li>Note - this graphic indicates where on this page you can find your <code>TEAMID</code><ul> <li>If you notice an identifier with a value embedded in it that does not have your <code>TEAMID</code>, then delete it if you can and Update <code>Secrets</code> with your correct <code>TEAMID</code></li> <li>If you try to delete a <code>Loop identifier</code> that does not have your <code>TEAMID</code>, but you already added to the App Store, it will refuse, don't worry, just keep going</li> </ul> </li> </ul> <p></p> <p>If coming here from the Errors with Browser page because you enter the wrong <code>TEAMID</code> in <code>Secrets</code> - return to that page once you've deleted as many identifiers as you can: Errors: Wrong TEAMID in Secrets.</p> <p>If you were just trying to clean up the identifiers, then follow these steps:</p> <ul> <li>Run Action: Add Identifiers to add Identifiers with the documented short names</li> <li>If you did not complete the Add or Review Configuration for Loop Identifier step, do it now</li> <li>Complete the Add <code>App Group</code> to Identifiers</li> <li>If you did not complete the Create Loop App in App Store Connect step, do it now</li> <li>Continue with Create Certificates and then Build the Loop App</li> </ul>"},{"location":"gh-actions/gh-other-apps/","title":"Build Other Apps with Browser","text":""},{"location":"gh-actions/gh-other-apps/#build-other-apps-using-a-browser","title":"Build Other Apps using a Browser","text":"<p>Once Loop 3 was released with the ability to build using a browser, a lot of other apps in the DIY universe added the same feature.</p> <p>Only apps that are companions to\u00a0Loop\u00a0are included on this page.</p> <ul> <li>Loop Caregiver</li> <li>Loop Follow</li> </ul> <p>If you want to build another DIY app that is not included here, look for the file <code>fastlane/testflight.md</code> in the GitHub repository associated with that app and open it in a browser. The instructions for that app should be located in that file.</p> <p>The same technique is used and the same six <code>Secrets</code> are applied to each <code>repository</code>. Those secrets are tied to your Apple Developer ID and your GitHub account.</p>"},{"location":"gh-actions/gh-other-apps/#updating-rebuilding-other-apps","title":"Updating / Rebuilding Other Apps","text":"<p>If you are coming to this page to update one of the other apps, follow the How to Update or Rebuild instructions provided for the Loop app, but substitute the repository name from the Table of App Repositories for the app you want to rebuild for all references to\u00a0LoopWorkspace.</p>"},{"location":"gh-actions/gh-other-apps/#update-to-build-with-browser-for-the-loop-caregiver-app","title":"Update to Build with Browser for the Loop Caregiver App","text":"<p>The Loop Caregiver App Requires an <code>App Group</code></p> <p>As of 2023 December 8, the updated version of the Loop Caregiver app requires the addition of an <code>App Group</code> to an expanded list of <code>Identifiers</code>.</p> <ul> <li>To update the Loop Caregiver App you need to Update the <code>Repository</code></li> <li>Then (one time only):<ul> <li>Run the Action to Add Identifiers</li> <li>Follow the instructions in Add <code>App Group</code> to <code>LoopCaregiver</code></li> <li>Continue with Create Certificates</li> <li>Finish with Build App</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#optional-build-method","title":"Optional Build Method","text":"<p>Optional - Set up a Organization Account</p> <p>If you are going to be building a lot of different apps, you can choose to set up a free organization account with GitHub and use that to build.</p> <p>Pros:</p> <ul> <li>The 6 <code>Secrets</code> can be added to the organization one-time and apply to every repository</li> </ul> <p>Cons:</p> <ul> <li>The displays for an organization are slightly different than for a personal account but are not hard to navigate if you are computer literate and feel comfortable using a browser</li> </ul> <p>For more information, see Use a GitHub Organization Account.</p>"},{"location":"gh-actions/gh-other-apps/#multiple-copies-of-loop-follow","title":"Multiple Copies of <code>Loop Follow</code>","text":"<p>For the convenience of caregivers who use <code>Loop Follow</code> to monitor multiple people, updates were added in v2.1.2 to make this more convenient. This works regardless of the build method. (Build with Browser or Build with Mac).</p> <ul> <li>Build up to three instances of <code>Loop Follow</code></li> <li>Customize the name of the app that appears on your phone</li> <li>Display the custom name in the main <code>Loop Follow</code> screen</li> </ul>"},{"location":"gh-actions/gh-other-apps/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>If you have already built using the Browser Build method, it is easy to build other apps which use the same method. Skip ahead to Fork and Add Secrets</p> <ul> <li>If you decide you want to try the GitHub free organization method, review the instructions and then adjust as you work through the step-by-step instructions on this page which show graphics and instructions for using a personal GitHub account</li> </ul> </li> <li> <p>If this is the first repository you have built with the Browser Build method, you must first complete the initial steps found on Configure to Use Browser. When you reach the point where</p> <ul> <li>You have created your Match-Secrets repository</li> <li>You are told to Configure to Use Browser: Fork LoopWorkspace<ul> <li>Review the directions but don't do it</li> <li>Return here and check the table below</li> <li>Use that table to find the link of the repository you will fork</li> </ul> </li> </ul> </li> </ul> <p>Use the <code>repository</code> for the application you are building</p> <p>Many graphics on this page show\u00a0LoopWorkspace, just remember to use the <code>repository</code> for the app you want to build, that is either\u00a0Loop Caregiver\u00a0or \u00a0Loop Follow.</p>"},{"location":"gh-actions/gh-other-apps/#fork-and-add-secrets","title":"Fork and Add Secrets","text":"<ul> <li>You will return to this page after reviewing (but not doing) this step Configure to Use Browser: Fork LoopWorkspace<ul> <li>Use the same method as that section, but <code>fork</code> the <code>repository</code> for the app you plan to build</li> <li>Loop Caregiver, expect the <code>dev branch</code></li> <li>Loop Follow, expect the <code>main branch</code></li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#table-of-app-repositories","title":"Table of App <code>Repositories</code>","text":"App Fork from this Address Documentation Loop Caregiver https://github.com/LoopKit/LoopCaregiver LoopDocs: Loop Caregiver Loop Follow https://github.com/loopandlearn/LoopFollow Loop Follow <p>The two repositories below are only if you need to follow a second or third looper. All others should use just the table above. The instructions for the second and third looper are otherwise identical to the first looper. Note that <code>LoopCaregiver</code> can follow multiple Loopers; you select the person inside the app.</p> Special Case Fork from this Address Loop Follow for a Second Looper https://github.com/loopandlearn/LoopFollow_Second Loop Follow for a Third Looper https://github.com/loopandlearn/LoopFollow_Third"},{"location":"gh-actions/gh-other-apps/#update-the-repository","title":"Update the <code>Repository</code>","text":"<p>If you just created the <code>fork</code>, you can skip this section.</p> <p>If you are returning to this page to update an app, please follow these steps. Each step has a link to instructions on the Update <code>LoopWorkspace</code> page. Follow the <code>Update Fork</code> directions for the <code>repository</code> of the app you are updating:</p> <ol> <li>Accept Agreements for the Apple Developer account</li> <li>Update <code>Fork</code></li> </ol> <p>Then return to this page.</p> <p>Normally you skip ahead to Build App after an update.</p> <p>If you are updating the LoopCaregiver app after the 2023 December 8 update, you need to go to Add Identifiers after updating the <code>fork</code>.</p>"},{"location":"gh-actions/gh-other-apps/#configure-secrets-for-this-app","title":"Configure <code>Secrets</code> for this App","text":"<p>If you choose to use the optional GitHub organization method, you can skip this section:</p> <ul> <li>All <code>repositories</code> in your GitHub organization use the organization <code>Secrets</code></li> <li>Make sure you complete Add <code>Secrets</code> to your GitHub Organization instead of this section</li> <li>Skip ahead to Validate <code>Secrets</code></li> </ul> <p>After successfully creating your fork of the repository for this app:</p> <ul> <li> <p>If you have already built Loop using the Browser Build method, skip ahead to Add Existing <code>Secrets</code></p> </li> <li> <p>If this is the first repository you have built with GitHub</p> <ul> <li>You should follow the detailed steps at Configure to Use Browser: Configure <code>Secrets</code>, except you will apply the <code>Secrets</code> to the repository for the app you are planning to build</li> <li>Once your 6 secrets have been added, return to this page and skip ahead to Validate <code>Secrets</code> on this page.</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#add-existing-secrets","title":"Add Existing <code>Secrets</code>","text":"<p>MATCH_PASSWORD</p> <p>An early version of GitHub First-Time had incorrect information about the need to save MATCH_PASSWORD.</p> <p>If you did not save your MATCH_PASSWORD in your file with all your <code>Secrets</code>, you will need to delete your Match-Secrets repository, create a new one and then add all your <code>Secrets</code> into all you repositories again and run all the Actions again.</p> <p>Instructions are found at Reset Match-Secrets.</p> <p>Open the text file in which you maintain a copy of your 6 <code>Secrets</code> so you can copy each value into the <code>Secrets</code> for this repository.</p> <ol> <li>Click on the repository for your app</li> <li> <p>Click on the Settings Icon near the top right of your repository</p> <ul> <li>On the left side, tap on <code>Secrets and variables</code> dropdown and choose Actions</li> <li>After you select Actions, your screen should look like the graphic below</li> </ul> <p></p> </li> <li> <p>Tap on <code>New repository secret</code> and add each of the 6 <code>Secrets</code></p> <ul> <li>You will notices the New secret dialog looks a little different</li> <li>As soon as you click on the Name* Box, the 6 Secret Names may show up as a dropdown as shown in the graphic below</li> <li>Select each one in turn and paste the secret value into the Secret* box and hit Add secret</li> <li>If they do not appear in a dropdown, enter them exactly as shown (suggest copy / paste from your text file)</li> </ul> <p></p> </li> </ol> <p>Once all six <code>Secrets</code> are added, proceed to the first Action to validate your secrets.</p>"},{"location":"gh-actions/gh-other-apps/#validate-secrets","title":"Validate <code>Secrets</code>","text":"<p>The first action step is to Validate <code>Secrets</code>. Near the top middle of your Repository fork, click on the <code>Actions</code> tab.</p> <ul> <li>The first time you click on <code>Actions</code> with this repository you'll be informed that <code>Workflows aren't being run on this forked repository</code></li> <li>Tap on the green button that says: <code>I understand my workflows, go ahead and enable them</code></li> </ul> <p>The workflows are now displayed: look at the list on the left side similar to that shown in the graphic below. (You can dismiss the Actions Enabled message using the X near the upper right side if it appears).</p> <ul> <li>The graphic below is an example from Loop, your screen will show your app and associated repository</li> </ul> <p>This step validates most of your six <code>Secrets</code> and provides error messages if it detects an issue with one or more.</p> <ol> <li>Click on the \"Actions\" tab of your  Loop Follow  or  Loop Caregiverrepository and enable workflows if needed</li> <li>On the left side, click on 1. <code>Validate Secrets</code></li> <li>On the right side, click <code>Run Workflow</code> to show a drop-down menu<ul> <li>You will see your default branch (<code>main</code> for LoopFollow, <code>dev</code> for LoopCaregiver)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li>Tap the green button that says <code>Run workflow</code>.</li> </ol> <p></p> <p>The <code>Validate Secrets</code> Action\u00a0 should succeed or fail in a few minutes. Do not continue to the next step until this one succeeds.</p> <ul> <li>If you see the green check ()  continue to the next section</li> <li>If you see the red <code>X</code> ():<ul> <li>Examine the Error tells how to view the file needed to diagnose your problem.</li> <li>Action: Validate <code>Secrets</code> Errors tells you what to search for in the file</li> <li>Resolve the error and repeat the Action: Validate <code>Secrets</code></li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#add-identifiers","title":"Add Identifiers","text":"<p>Near the top middle of your Repository fork, click on the \"Actions\" tab.</p> <ul> <li>The graphic below is an example from Loop, your screen will show your app and associated repository</li> </ul> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the \"Actions\" tab of your repository</li> <li>On the left side, click on \"Add Identifiers\"</li> <li>On the right side, click \"Run Workflow\" to show a drop-down menu<ul> <li>You will see your default branch (<code>main</code> for LoopFollow, <code>dev</code> for LoopCaregiver)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says \"Run workflow\"</p> <p></p> </li> </ol> <p>The <code>Add Identifier</code> Action\u00a0 should succeed or fail in a few minutes.</p> <ul> <li>If you see the green check ()  continue to the next section</li> <li>If you see the red <code>X</code> ():<ul> <li>Examine the Error tells how to view the file needed to diagnose your problem</li> <li>Action: Add Identifiers Errors tells you what to search for in the file</li> <li>Resolve the error and repeat the Action: Add Identifiers</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#review-app-identifier","title":"Review App Identifier","text":"<p>Open this link: Certificates, Identifiers &amp; Profiles: Identifiers List on the apple developer site.</p> <p>After successfully performing the <code>Add Identifiers Action</code>, you will see the identifier for your app with a Name and Bundle ID matching that in the table below. You will see your unique TEAMID embedded in the identifier. (If you previously built this App with Xcode, the name may start with XC but the ending should match.)</p> App Name Name Bundle ID Loop Caregiver LoopCaregiver com.TEAMID.loopkit.LoopCaregiver Loop Follow LoopFollow com.TEAMID.LoopFollow <p>If you build from a second or third <code>repository</code> for <code>Loop Follow</code>, the Name will end in <code>Second</code> or <code>Third</code> and Bundle ID will have <code>.Second</code> or <code>.Third</code> at the end.</p> <p>The Loop Caregiver app requires updates to the <code>Identifiers</code> after they are generated.</p> <p>The Loop Follow app does not require this extra step. You can skip ahead to Create App in App Store Connect.</p>"},{"location":"gh-actions/gh-other-apps/#add-app-group-to-loopcaregiver","title":"Add <code>App Group</code> to <code>LoopCaregiver</code>","text":"<p>As of 2023 December 8, the Loop Caregiver app requires the addition of an <code>App Group</code> to an expanded list of <code>Identifiers</code>. Follow these steps one time to be able to build the Loop Caregiver app after this update.</p>"},{"location":"gh-actions/gh-other-apps/#check-if-app-group-exists","title":"Check if <code>App Group</code> Exists","text":"<p>Open this link to view your <code>applicationGroup</code> <code>Identifiers</code>: <code>App Group Identifiers</code></p> <ul> <li>No action is required if there is already an identifier with the <code>NAME</code> of <code>LoopCaregiver App Group</code> and the <code>IDENTIFIER</code> contains your <code>TEAMID</code> in this format: <code>group.com.TEAMID.loopkit.LoopCaregiverGroup</code></li> <li>In that case, you can skip ahead to Add <code>App Group</code> to <code>Identifiers</code></li> </ul>"},{"location":"gh-actions/gh-other-apps/#create-app-group-for-the-loop-caregiver-app","title":"Create <code>App Group</code> for the Loop Caregiver App","text":"<p>Open this link: Register an App Group on the Apple Developer site.</p> <ol> <li>For <code>Description</code>, use <code>LoopCaregiver App Group</code></li> <li>For <code>Identifier</code>, enter <code>group.com.TEAMID.loopkit.LoopCaregiverGroup</code>, substituting your team id for <code>TEAMID</code>.</li> <li>Double-check the spelling - your <code>TEAMID</code> must be correct and the <code>LoopCaregiverGroup</code> App Group must match the format shown above<ul> <li>A mistake here means you will not be able to build the LoopCaregiver app until you fix it</li> </ul> </li> <li>Click <code>Continue</code> and then <code>Register</code>.</li> </ol>"},{"location":"gh-actions/gh-other-apps/#add-app-group-to-identifiers","title":"Add <code>App Group</code> to <code>Identifiers</code>","text":"<p>Click to open this link in a new tab: <code>Certificates, Identifiers &amp; Profiles: Identifiers List</code> on the Apple Developer site.</p>"},{"location":"gh-actions/gh-other-apps/#table-with-name-and-identifier-for-loopcaregiver","title":"Table with Name and Identifier for <code>LoopCaregiver</code>","text":"<p>All five of these identifiers should be found after running the <code>Add Identifier</code> action on GitHub.</p> <p>If you do not see them, please sync your <code>LoopCaregiver</code> repository and then run the <code>Add Identifier</code> action. The <code>NAME</code> might begin with an <code>XC</code> if you previously built with Xcode. However, the <code>IDENTIFIER</code> column value should match.</p> <code>NAME</code> <code>IDENTIFIER</code> <code>LoopCaregiver</code> <code>com.TEAMID.loopkit.LoopCaregiver</code> <code>LoopCaregiverIntentExtension</code> <code>com.TEAMID.loopkit.LoopCaregiver.IntentExtension</code> <code>LoopCaregiverWatch</code> <code>com.TEAMID.loopkit.LoopCaregiver.watchkitapp</code> <code>LoopCaregiverWatchWidgetExtension</code> <code>com.TEAMID.loopkit.LoopCaregiver.watchkitapp.WidgetExtension</code> <code>LoopCaregiverWidgetExtension</code> <code>com.TEAMID.loopkit.LoopCaregiver.WidgetExtension</code>"},{"location":"gh-actions/gh-other-apps/#add-loopcaregivergroup-to-each-identifier","title":"Add <code>LoopCaregiverGroup</code> to each Identifier","text":"<p>Find and click on the row for the <code>LoopCaregiver</code> on the Certificates, Identifiers &amp; Profiles: Identifiers List page. Look in the <code>IDENTIFIER</code> column to find <code>com.TEAMID.loopkit.LoopCaregiver</code>. The <code>NAME</code> might begin with an <code>XC</code> if you previously built with Xcode. However, the <code>IDENTIFIER</code> column value should match.</p> <code>NAME</code> <code>IDENTIFIER</code> <code>LoopCaregiver</code> <code>com.TEAMID.loopkit.LoopCaregiver</code> <p>The <code>Edit Your App ID Configuration</code> screen will open.</p> <ol> <li> <p>In the <code>App Services</code> column, scroll down to the <code>App Groups</code> row</p> <ul> <li>Ensure the check box (under the <code>Capabilities</code> column) for <code>App Groups</code> is checked</li> <li>Tap on the word <code>Edit</code> or <code>Configure</code>, whichever shows up<ul> <li>This opens the <code>App Group Assignment</code> screen</li> <li>Check the box by <code>LoopCaregiver</code> App Group that uses your <code>TEAMID</code> in <code>group.com.TEAMID.loopkit.LoopCaregiver</code> </li> <li>If the box by <code>Loop App Group</code> is checked, you should uncheck it</li> <li>Your screen should be similar to the graphic below</li> <li>If you made any changes, tap <code>Continue</code>, otherwise, tap <code>Cancel</code></li> </ul> </li> </ul> <p></p> </li> <li> <p>If you modified settings for an identifier, the <code>Save</code> button at the top right will become active. Click on <code>Save</code> before leaving this page - otherwise, the change does not take effect.</p> <ul> <li>Tap on <code>Save</code></li> <li>This opens the <code>Modify App Capabilities</code> confirmation screen</li> <li>Click on <code>Confirm</code></li> </ul> </li> <li> <p>If you did not need to make changes, the <code>Save</code> button will not be active.</p> <ul> <li>Tap on the <code>&lt; All Identifiers</code> button at the top left</li> </ul> </li> <li> <p>The full list of Identifiers should be displayed again.</p> </li> <li> <p>Continue down the list until every identifier in the table below has the <code>App Group</code> for <code>LoopCaregiver App Group</code> added to it. (DO NOT SELECT the <code>Loop App Group</code>) If you miss any, the GitHub action to <code>3. Create Certificates</code> will succeed but the GitHub action to <code>4. Build LoopCaregiver</code> will fail.</p> </li> </ol> <code>NAME</code> <code>IDENTIFIER</code> <code>LoopCaregiver</code> <code>com.TEAMID.loopkit.LoopCaregiver</code> <code>LoopCaregiverIntentExtension</code> <code>com.TEAMID.loopkit.LoopCaregiver.IntentExtension</code> <code>LoopCaregiverWatch</code> <code>com.TEAMID.loopkit.LoopCaregiver.watchkitapp</code> <code>LoopCaregiverWatchWidgetExtension</code> <code>com.TEAMID.loopkit.LoopCaregiver.watchkitapp.WidgetExtension</code> <code>LoopCaregiverWidgetExtension</code> <code>com.TEAMID.loopkit.LoopCaregiver.WidgetExtension</code>"},{"location":"gh-actions/gh-other-apps/#create-app-in-app-store-connect","title":"Create App in App Store Connect","text":"<p>Same procedure as for the Loop app</p> <p>You will follow the same procedure as you did with the Loop app.</p> <p>You will also want to edit your new app once you create it to Remove Apple Vision Pro.</p> <p>You will be following the directions below to create an App in App Store Connect if you don't already have one.</p> <p>This requires you to provide some information. Examine the table below for the bundle ID associated with your app. </p> App Name Bundle ID Loop Caregiver com.TEAMID.loopkit.LoopCaregiver Loop Follow com.TEAMID.LoopFollow <p>If you build from a second or third <code>repository</code> for <code>Loop Follow</code>, the Bundle ID will have <code>.Second</code> or <code>.Third</code> at the end.</p> <ol> <li> <p>Open this link: App Store Connect / Apps to view your apps; log in if needed. </p> </li> <li> <p>If this App already exists, you can continue to Create Certificates</p> </li> <li> <p>Click the Add Apps button or the blue \"plus\" icon and select New App as shown in the graphic below</p> <p></p> </li> <li> <p>The New App dialog box opens and should appear similar to the graphic below. Before you fill anything out, make sure your Bundle ID is available in the dropdown menu. If you do not see the Bundle ID for your app; back out of this screen and follow the directions in Configure to Use Browser: Find My Loop, where you'll be finding App Name instead of Loop.</p> <ul> <li>Select \"iOS\". For Loop Follow you can also select \"macOS\" if you own a Mac with macOS 11 or later.</li> <li>Enter a name: this will have to be unique<ul> <li>You could start with \"App Name ABC\" where ABC are your initials</li> <li>If that is already taken, you can add a number, for example, \"App Name ABC 123\"</li> <li>This name is what you see on the App Store Connect list and in the TestFlight app</li> <li>Once installed on your phone, you will see the actual app name</li> <li>You can Change the App Store Connect Name later if you want</li> </ul> </li> <li>Select your primary language.</li> <li>Choose the bundle ID for your app</li> <li>SKU can be anything; for example \"123\" but must be unique across all your apps, so try 1234 or 12345 depending on how many apps you build with this method</li> <li>Select \"Full Access\".</li> </ul> <p></p> </li> <li> <p>Click Create but do not fill out the next form. That is for submitting to the app store and you will not be doing that.</p> </li> <li> <p>Edit your new app to Remove Apple Vision Pro</p> </li> </ol> <p>You are done with this activity. Before you close this browser window, note the TestFlight tab at the top of the page. You'll be using that tab after you complete the next two actions.</p>"},{"location":"gh-actions/gh-other-apps/#create-certificates","title":"Create Certificates","text":"<ul> <li>The graphic below is an example from Loop. Your screen will show your app and associated repository.</li> </ul> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the \"Actions\" tab of your Repository repository</li> <li>On the left side, click on \"Create Certificates\"</li> <li>On the right side, click \"Run Workflow\" to show a drop-down menu<ul> <li>You will see your default branch (<code>main</code> for LoopFollow, <code>dev</code> for LoopCaregiver)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says \"Run workflow\".</p> <p></p> </li> <li> <p>Wait a minute or two for the action to finish</p> <ul> <li>If this action fails, head over to Action: Create Certificates Errors</li> <li>Once you've resolved the error, repeat the Actions Add Identifiers and then Create Certificates. (The Add Identifiers might not be required but it is fast and should be done as a matter of routine.)</li> </ul> </li> </ol>"},{"location":"gh-actions/gh-other-apps/#build-app","title":"Build App","text":"<p>The graphic below is an example from Loop, your screen will show your app and associated repository</p> <p>If you are building the Loop Caregiver app, skip ahead to Build Action.</p>"},{"location":"gh-actions/gh-other-apps/#display-name-customization-for-loop-follow","title":"Display Name Customization for <code>Loop Follow</code>","text":"<p>If you build <code>Loop Follow</code> for one, two or three loopers, you may choose to customize your <code>fork</code> or <code>forks</code> to insert a custom display name.</p> <ul> <li>Find and click on the file <code>LoopFollowDisplayNameConfig.xcconfig</code></li> <li>Tap the pencil icon so you can edit the file</li> <li>The last line says <code>display_name = LoopFollow</code> (or <code>LoopFollow_Second</code> or <code>LoopFollow_Third</code>)</li> <li>Insert your custom name so the last line says <code>display_name = LF custom name</code></li> <li>Click on commit changes and chose to commit directly into the <code>main</code> branch</li> </ul> <p>Continue to build as instructed below. After you install the app on your phone, iPad or Mac via TestFlight, that custom name is what is displayed. The prefix LF is suggested to make it easier to find the custom named <code>Loop Follow</code> app in the list of apps, but is not required.</p>"},{"location":"gh-actions/gh-other-apps/#build-action","title":"Build Action","text":"<p>Refer to the graphic below for the first four steps:</p> <ol> <li>Click on the \"Actions\" tab of your Repository repository.</li> <li>On the left side, click on \"Build App Name\".</li> <li>On the right side, click \"Run Workflow\" to show a drop-down menu<ul> <li>You will see your default branch (<code>main</code> for LoopFollow, <code>dev</code> for LoopCaregiver)</li> <li>You can select a different branch, but typically, you run the default</li> </ul> </li> <li> <p>Tap the green button that says \"Run workflow\".</p> <p></p> </li> <li> <p>Wait a few minutes to make sure there is not an early failure</p> <ul> <li>If this action fails, head over to Action: Build Loop Errors</li> <li>Once you've resolved the error, it's a good idea to repeat all three steps in this order:<ul> <li>Add Identifiers</li> <li>Create Certificates</li> <li>Build Loop</li> </ul> </li> </ul> </li> <li>If the process appears to be happening without an error, go do something else for a while. The build should take about 20-30 minutes.</li> <li>Your app should eventually appear on App Store Connect.</li> </ol>"},{"location":"gh-actions/gh-other-apps/#add-users-to-testflight-for-app","title":"Add Users to TestFlight for App","text":"<p>Once the first build completes, you will be able to configure TestFlight for the app - follow the template for setting up TestFlight for Loop found in Configure to Use Browser: Set Up Users and Access (TestFlight).</p>"},{"location":"gh-actions/gh-other-apps/#install-on-phone","title":"Install on Phone","text":"<p>The Install on Phone walks you through the steps to install the app to a phone. When going through those steps, replace your App Name for\u00a0Loop. Everything else is the same.</p>"},{"location":"gh-actions/gh-other-apps/#use-a-github-organization-account","title":"Use a GitHub Organization Account","text":"<p>This section is optional. It is provided to assist:</p> <ul> <li>Users who are using GitHub for other reasons and want to segregate their DIY app building from their existing accounts</li> <li>Mentors who want to do a lot of testing of many DIY apps to support people and get tired of entering the 6 <code>Secrets</code> repeatedly</li> <li>Users who are comfortable with the GitHub web interface who want the convenience of entering the 6 <code>Secrets</code> just one time instead of entering them for each <code>repository</code> individually</li> </ul>"},{"location":"gh-actions/gh-other-apps/#set-up-a-free-github-organization","title":"Set up a Free GitHub Organization","text":"<p>Prerequisite: You need a personal GitHub account.</p> <p>In the instructions below, use your GitHub username instead of <code>my-name</code>.</p> <ol> <li>Follow the directions below to create a new GitHub organization account with a username of <code>my-name-org</code> (of course naming is up to you)<ul> <li>There is documentation at this link, New GitHub Organization, or you can follow the bullets below</li> <li>Log into <code>my-name</code> and click on your icon (at upper right) and choose Settings</li> <li>On the left side-bar, click on Organizations</li> <li>In the new view, click on New Organization and choose Free for the plan by clicking on  <code>Create a free organization</code>.</li> <li>In the <code>Set up your organization</code> screen:<ul> <li>Enter <code>my-name-org</code> into the <code>Organization name</code> box</li> <li>Enter the same email you use for <code>my-name</code> account</li> <li>Select this organization belongs to <code>My personal account</code></li> <li>Check the box to accept the terms of service</li> <li>Tap on the next button</li> </ul> </li> </ul> </li> <li>You now see a Welcome screen<ul> <li>Unless you plan to collaborate with others, just tap <code>Complete setup</code></li> <li>You can always add others at a later time</li> </ul> </li> <li>Confirm access by entering the same password as you use for <code>my-name</code></li> </ol> GH_PAT comes from personal <code>my-name</code> account <p>The GitHub personal access token used as one of the 6 <code>Secrets</code> is associated with your personal account (<code>my-name</code>); so if you already have one, you just keep using it.</p>"},{"location":"gh-actions/gh-other-apps/#use-the-free-github-organization","title":"Use the Free GitHub Organization","text":"<p>There are three steps to using this account moving forward:</p> <ol> <li> <p>One-time only: You need to add your 6 <code>Secrets</code> to this organization account (instructions are in next section)</p> </li> <li> <p>One-time only: Create a <code>Match-Secrets</code> repository in the <code>my-name-org</code> account</p> <ul> <li>Start out at the top-level of your organization (<code>github.com/my-name-org</code>)</li> <li>Click on <code>Repositories</code></li> <li>Click on <code>New repository</code></li> <li>Choose <code>my-name-org</code> as owner and enter <code>Match-Secrets</code> as the name</li> <li>Make sure to choose <code>Private</code> and tap on the <code>Create</code> button</li> <li>If you want to see graphics for the steps above, refer to the instructions written for a personal (instead of organization) account in Create <code>Match-Secrets</code></li> </ul> </li> <li> <p>For each repository: you need to <code>fork</code> for each app you wish to build to the new <code>my-name-org</code> account</p> <ul> <li>When you do the fork, there will be a drop-down menu under Owner for you to select the account for the <code>fork</code></li> <li>Choose the organization account</li> <li>Other than that extra step, follow the standard <code>fork</code> directions<ul> <li>This link provides instructions to <code>Fork LoopWorkspace</code></li> <li>Refer to the Table of App <code>Repositories</code> when building apps other than the Loop app</li> </ul> </li> </ul> </li> </ol> <p>Then, for every build, you will use just the organization account. The original account is maintained to give you access to GitHub and holds your GitHub personal access token.</p> <p>WARNING - If you have <code>forks</code> of DIY apps in your original <code>my-name</code> account that are configured to build automatically, you want to disable that and have only the <code>my-name-org</code> account be configured for automatic building. Refer to Disable Building for Personal GitHub account.</p>"},{"location":"gh-actions/gh-other-apps/#add-secrets-to-your-github-organization","title":"Add <code>Secrets</code> to your GitHub Organization","text":"<p>Adding the <code>Secrets</code> to an organization is similar to adding them to each <code>repository</code> for a personal GitHub account. The difference is you add them at the organization level and then they are available to each <code>repository</code> in that organization.</p> <p>Follow the directions below to prepare to add secrets to the organization and then skip (when provided the link) to the per-repository directions for more details about adding each secret.</p> <p>Make sure you are in the organization for GitHub:</p> <ul> <li>Click on your icon at upper right of GitHub browser</li> <li>Select <code>Your Organizations</code></li> <li>In the new screen, select <code>my-name-org</code></li> <li>Make sure the URL is <code>github.com/my-name-org</code></li> <li>Click on Settings (it is optional to fill in the information shown under general)</li> <li>In the left pane, scroll down to find <code>Secrets and variables</code> and click on the drop-down symbol and choose <code>Actions</code></li> <li>Your screen should look like the graphic below</li> </ul> <p></p> <ul> <li>At this point, tap on <code>New organization secret</code><ul> <li>Refer the instructions at this link, Enter the <code>Secrets</code>, for adding <code>Secrets</code></li> <li>Those instructions show the graphics for a personal <code>repository</code> and indicate the button will says <code>New repository secret</code> - your screen will show <code>New organization secret</code></li> <li>Continue until all six <code>Secrets</code> are entered for your organization account <code>my-name-org</code></li> </ul> </li> <li>Once the organization <code>Secrets</code> are entered, they are used by every repository you fork with this organization as the owner</li> </ul> <p>The GitHub personal access token used as one of the 6 <code>Secrets</code> is associated with your personal account (<code>my-name</code>); so if you already have one, you just keep using it. If not, follow these instructions to get or configure a new one.</p>"},{"location":"gh-actions/gh-other-apps/#disable-building-for-personal-github-account","title":"Disable Building for Personal GitHub account","text":"<p>Once you have your apps building as you expected from the <code>my-name-org</code> organization account, you should configure your personal account to stop any automatic building that may be taking place.</p>"},{"location":"gh-actions/gh-other-apps/#option-1-delete-repository","title":"Option 1: Delete <code>repository</code>","text":"<p>You can delete the DIY repositories from your personal account</p> <ul> <li>Pro: You can't get confused about where you should be building</li> <li>Cons:<ul> <li>If you have already generated some customizations there, it is safest to not delete the repository</li> <li>If you have pull requests open from your personal account, DO NOT DELETE that repository - that would automatically close those open PR</li> </ul> </li> <li>Here are the instructions if you decide to delete the repositories<ul> <li>Click on your icon at upper right of GitHub browser</li> <li>Select <code>Your Repositories</code></li> <li>Notice the github address now says <code>my-name</code> instead of <code>my-name-org</code></li> <li>Select the repository you wish to delete and follow these instructions</li> <li>GitHub Docs: Delete a repository</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#option-2-disable-build-action","title":"Option 2: Disable Build Action","text":"<p>You can disable the build actions from the repositories in your personal account</p> <ul> <li>Pro: You leave any work you previously did alone in your personal account</li> <li>Con: You might get confused and try to build in your personal account instead of your organization account</li> <li>Here are the instructions to disable the build actions:<ul> <li>Click on your icon at upper right of GitHub browser</li> <li>Select <code>Your Repositories</code></li> <li>Notice the github address now says <code>my-name</code> instead of <code>my-name-org</code></li> <li>Select the repository you wish to disable build actions for and follow these instructions</li> <li>GitHub Directions to Disable and Enable a Workflow</li> <li>It is the Build action that kicks off the update and build steps, so simply disabling the one action is sufficient</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-overview/","title":"Browser Overview","text":""},{"location":"gh-actions/gh-overview/#build-with-a-browser","title":"Build with a Browser","text":"<ul> <li>Loop 3\u00a0can be built with a web browser using GitHub Actions</li> <li>The app is then installed remotely on the phone using TestFlight</li> </ul>"},{"location":"gh-actions/gh-overview/#advantages-of-building-with-a-browser","title":"Advantages of Building with a Browser","text":"<ul> <li>Mac computer is not required to build or install the app<ul> <li>Anything with a browser works to build the Loop app: PC, Tablet, Mac or iPad</li> <li>The TestFlight app is used to install the Loop app on your iPhone</li> </ul> </li> <li>Compatible version of Xcode is provided by GitHub<ul> <li>The time required for the initial setup to build with a browser may take less time than one macOS and Xcode version update for those using Build with Mac</li> </ul> </li> <li>Updates are easy<ul> <li>Starting an update takes a few minutes of your time; the rest is automatic</li> <li>Planned for the next release: app will build automatically at least once a month and is checked for updates once a week</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-overview/#considerations-for-building-with-a-browser","title":"Considerations for Building with a Browser","text":"<ul> <li>After the\u00a0GitHub Build\u00a0starts, your app is ready to install on your iPhone in about an hour</li> <li>The app is delivered to your phone via TestFlight<ul> <li>The app is considered \"Beta\" by  Apple and expires after 90 days</li> <li>With the next release, which includes automatic builds, this will be even easier than it is now</li> </ul> </li> <li>Customization methods are documented at Customize with Browser</li> </ul>"},{"location":"gh-actions/gh-overview/#requirements","title":"Requirements","text":"<ul> <li>Loop 3 requires iOS 15.1 or higher on the phone.</li> </ul> <p>To build the\u00a0Loop\u00a0app using a browser, you need:</p> <ol> <li>Free GitHub account (instructions included in Configure to use Browser)</li> <li>Apple Developer Membership<ul> <li>Must be a paid developer account</li> <li>If building for a family member, review this section:<ul> <li>Loopers Need Their Own Apple ID</li> </ul> </li> <li>If building for a child (age depends on the country), review this section:<ul> <li>TestFlight for a Child</li> </ul> </li> </ul> </li> </ol> <p>Once you have the\u00a0Loop\u00a0app in TestFlight, you need:</p> <ol> <li>Compatible iPhone</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device (not needed for Omnipod DASH)</li> </ol>"},{"location":"gh-actions/gh-overview/#configuration-to-build-with-a-browser","title":"Configuration to Build with a Browser","text":"<p>Steps that must be completed to configure for building with a browser are found at:</p> <ul> <li>Configure to use Browser</li> </ul> <p>This is a very long page because there are a lot of steps and each step is explained with graphics of what you will see when you work through the steps.</p>"},{"location":"gh-actions/gh-overview/#how-to-video-to-build-with-a-browser","title":"How-to Video to Build with a Browser","text":"<p>In addition to the webpage linked above, there is a narrated video of each step needed to build using a browser.</p> <ul> <li>How to Build the Loop App With a Web Browser</li> </ul> <p>Click in the comments for a full index of topics.  If you have issues with a step, use the index to  advance to the relevant part of the video. Subtitles are  in English. You can choose a different language but the automatic translation feature may provide translations that are not completely accurate.</p>"},{"location":"gh-actions/gh-overview/#install-on-phone","title":"Install on Phone","text":"<p>Instructions to install on your phone are found at:</p> <ul> <li>Install on Phone</li> </ul>"},{"location":"gh-actions/gh-overview/#update-the-app","title":"Update the App","text":"<p>Instructions to make updates are found at:</p> <ul> <li>Update with Browser</li> </ul> <p>There is also a helpful video for this process:</p> <ul> <li>How to Update and Rebuild DIY Loop with a Web Browser</li> </ul>"},{"location":"gh-actions/gh-overview/#errors-while-building","title":"Errors while Building","text":"<p>If you get an error, please consult:</p> <ul> <li>Errors with Browser</li> </ul>"},{"location":"gh-actions/gh-overview/#building-the-development-version-of-the-app","title":"Building the Development Version of the App","text":"<p>For experienced and/or advanced users who want to build the development version of the app, there is additional information at the link below. If you have not built using the browser build method before, it is suggested you first build the released version. Once you have a successful build, then follow the steps for the development version. Building the app is independent of installing the app on your phone from TestFlight.</p> <ul> <li>Build Development Version</li> </ul>"},{"location":"gh-actions/gh-overview/#what-if-i-get-stuck","title":"What if I get stuck?","text":"<p>Try to:</p> <ul> <li>Scroll back in the directions and see if you missed a paragraph or step</li> <li>Compare your display with the graphics in LoopDocs<ul> <li>Is something different or does yours have an error message?</li> <li>Does the error message guide you to the problem and solution?</li> <li>Be aware that GitHub sometimes updates displayed names or locations for menu items - search for GitHub directions if your display looks different than our documentation</li> </ul> </li> <li>If you are still stumped - reach out for help: How to Find Help<ul> <li>Remember - to get help with Browser Build, all we need is your GitHub username and a brief description of your problem</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-update/","title":"Update/Rebuild with Browser","text":""},{"location":"gh-actions/gh-update/#overview","title":"Overview","text":"<p>This page is only relevant when building with a browser.</p> <p>For Mac, please see: Update/Rebuild with Mac</p> Time Estimate (click to open/close) <p>Build the Loop App</p> <ul> <li>5 min: Check Apple account status</li> <li>Check if you need to renew certificates (once a year only)</li> <li>5 min: Update version if a new one is available</li> <li>5 min: Start the Build</li> <li>1 hour: Wait for the build to complete and appear in the TestFlight app on your phone<ul> <li>depends on GitHub, Apple and TestFlight</li> </ul> </li> <li>5 min: Install from TestFlight onto your phone</li> </ul> <p>Once a Year Renew Certificate</p> <ul> <li>5 min: Clear out expired certificates</li> <li>5 min: Generate new certificates</li> </ul> <p>One Time: Complete the information for the Digital Service Act Compliance</p> <ul> <li>This is a new requirement that must be completed one time</li> <li>See Digital Service Act Compliance for instructions</li> </ul> Page Summary (click to open/close) <p>The Loop app must be built at least every 90 days when you build with a browser - this is TestFlight requirement.</p> <p>Most users will start at How to Update or Rebuild.</p> <p>If your GitHub <code>Personal Access Token</code> has expired, we recommend you update it with <code>No Expiration</code> as explained at GitHub Token.</p> <p>If you are running <code>Loop-dev</code>, be sure to review these instructions but modify for the branch you are using: refer to Build Loop dev with Browser</p> FAQs (click to open/close) <ul> <li>\"What is an update?\" Anytime you want to change versions or if your TestFlight build is about to expire, follow the instructions on this page.</li> <li>\"Do I delete my old Loop app first?\" Definitely not! If you keep your Loop app on your phone, your Loop settings (and existing pod) will continue to work the same after the update. Seamless.</li> <li>\"Do I need to start a new pod when I update?\" No. Your existing pod session will continue seamlessly if you are using the same Developer Account as the last time you built.</li> <li>\"What if I'm using a new/different developer account?\" If you aren't building with the same developer account used when your existing app was built, then you will be installing a brand new (second) Loop app on your phone. Your existing pod won't work with the new app, so you might want to time this transition when you are due to change pods. Delete the old app once you get the new one all set up.</li> <li>Do I need a computer? No.</li> <li>Can I do this on my phone? Yes, especially after you update your GitHub token to <code>No Expiration</code>.</li> <li>Did the directions change? Yes. We now recommend you select a GitHub Personal Access Token that never expires and supports automatic update and rebuild when that feature is released. It simplifies the build every 90-day process significantly.</li> <li>How do I set my GitHub <code>Personal Access Token</code> to never expire and to support the automatic rebuild feature? See this section Regenerate Token.</li> <li>What happens to my existing builds when I change my GitHub Personal Access Token? Nothing. The <code>GH_PAT</code> only affect future builds. Previous build are available for the full 90 days.</li> <li>Is there anything I have to do once a year? Yes. Once a year you need to get a new <code>Distribution Certificate</code>. These only last one year. See this section Renew Certificate</li> </ul>"},{"location":"gh-actions/gh-update/#when-to-update-or-rebuild","title":"When to Update or Rebuild","text":"<p>Under ordinary circumstances, you do not have to rebuild or update your Loop app until TestFlight forces you to (90 days). However, there is no harm in building more frequently.</p> <ul> <li>You control when the new app is installed on your phone, refer to: Install on Phone: Disable Automatic Install from TestFlight</li> <li>You always want a build available in the TestFlight app<ul> <li>You can use TestFlight to quickly install the app if you loose or break your phone and need to replace it</li> <li>You can use TestFlight to quickly install the app if someone accidentally deletes the app from your phone</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-update/#how-to-update-or-rebuild","title":"How to Update or Rebuild","text":"<p>Summary of Update Steps</p> <ol> <li>Accept Agreements</li> <li>Renew Certificate (once a year)</li> <li>Update <code>Fork</code></li> <li>Build the Loop App</li> <li>Wait for TestFlight</li> <li>Install on Phone</li> </ol> <p>Ignore the email that says you need to fix \"issues\" in your app. You are not selling the app in the app store; so no action is required. The app you built is for personal use for you or a family member.</p> <p>There is also a helpful video for updating (it does not include the Renew Certificates step, which is only done once a year):</p> <ul> <li>How to Update and Rebuild DIY Loop with a Web Browser</li> </ul>"},{"location":"gh-actions/gh-update/#accept-agreements","title":"Accept Agreements","text":"<p>This is Step 1 of 6 - it may not always be necessary, but please check every time.</p> <p>Sign in to your Apple Developer account. If there are agreements you have not accepted, you will get errors when you try to Build that indicate your Apple <code>Secrets</code> are incorrect - that is very unlikely. You may also need to update your credit card information if it has changed, for example, if there is a new expiration date.</p> <ul> <li>For an update, you do not need to modify the <code>FASTLANE_ISSUER_ID</code>, <code>FASTLANE_KEY_ID</code> or <code>FASTLANE_KEY</code></li> <li>Check your Apple Developer account for agreements, then continue</li> </ul> <p>If you need detailed instructions, click on this <code>Apple Program License Agreement</code> Help Page.</p> <ul> <li>Accept the <code>Apple Program License Agreement</code> (only)<ul> <li>You do NOT need to accept anything related to the <code>Paid Applications Schedule Agreement</code></li> <li>You do not need to provide banking or tax information</li> <li>That is only required when you sell an app through the <code>App Store</code></li> </ul> </li> </ul> <p>Digital Service Act Compliance</p> <ul> <li>Configure yourself as a non-trader<ul> <li>This is a new requirement that must be completed one time</li> <li>See Digital Service Act Compliance for instructions</li> </ul> </li> </ul> <p>Wait After You Agree</p> <p>It typically takes 15 minutes before your updated agreement is available so you can complete your build.</p> <p>If your build with browser fails, wait longer. An hour wait was reported by one person.</p>"},{"location":"gh-actions/gh-update/#renew-certificate","title":"Renew Certificate","text":"<p>This is Step 2 of 6 - it is only needed once a year - you should get an email from Apple 30 days before your <code>Distribution Certificate</code> expires. (Don't worry if you did not see the email.)</p> <p>Apps in TestFlight are not affected when a certificate expires or is revoked.</p> <ul> <li>Apps installed on the phone continue to run</li> <li>Apps can be installed from TestFlight onto a phone up through the TestFlight expiration date</li> <li>You just cannot build a new app until a new Certificate is generated</li> </ul> Do you want to know more? (Click to open/close) <p>This is only a summary - please follow the detailed steps below carefully.</p> <ul> <li> <p>Delete all your <code>Distribution Certificates</code>. Apple only allows you to have 2 of these. So get rid of the old ones so you will be able to create a new one that will last a full year. (Step 1 below.)</p> </li> <li> <p>The Certificate in question is embedded in your <code>Match-Secrets repository</code>. In order to proceed, you need to remove the old certificate from <code>Match-Secrets</code>. Later this will be automated and can be done without modifying your <code>Match-Secrets repository</code>, but for now the easiest way to do that is to just delete the <code>certs/distribution</code> folder in your current <code>Match-Secrets repository</code>.</p> </li> <li> <p>Finally, for every app that you build with this method, you need to run <code>Create Certificates</code> for that app. (Step 4 below.)</p> </li> </ul>"},{"location":"gh-actions/gh-update/#manual-steps-to-renew-your-distribution-certificate","title":"Manual Steps to Renew Your <code>Distribution Certificate</code>","text":"<p>Delete and Create</p> <p>Do not miss the final step in this section. After you delete certificates, you must run the Action for <code>Create Certificates</code> before you can build an app again.</p> <ol> <li>Use this link to view your Apple Developer Certificates<ul> <li>If your screen shows no Certificates and you see a message \"Getting Started with Certificates\", your certificate already expired and was removed by Apple; so skip ahead to Step 2: Navigate to your <code>Match-Secrets</code> Repository</li> <li>Carefully examine the <code>Type</code> column - do not delete a <code>Development Certificate</code><ul> <li>If you do not have any rows that say <code>Distribution Certificate</code>, your certificate already expired and was removed by Apple; so skip ahead to Step 2</li> <li>If your certificate has an expiration date several months in the future - you can wait and renew your certificate later; skip ahead to Update <code>Fork</code></li> </ul> </li> <li>Click each row that has a <code>Distribution Certificate</code> and revoke it</li> <li>You will get an email informing you the certificate was revoked</li> </ul> </li> <li> <p>Navigate to your <code>Match-Secrets</code> Repository</p> <ul> <li>You can do this several ways, but one method is demonstrated by the GIF below</li> <li>Open the URL for your GitHub account (address is <code>https://github.com/username</code> where <code>username</code> is replaced by your GitHub username</li> <li>Click on the Repositories Tab</li> <li>Select Match-Secrets</li> </ul> <p></p> </li> <li> <p>Delete the <code>certs/distribution</code> folder of your <code>Match-Secrets</code> <code>repository</code> using these instructions. The GIF below indicates the places to click with numbered red rectangles:</p> <ul> <li>Frame 1: Click 1 on the folder called <code>certs/distribution</code></li> <li>Frame 2: Click 2 and 3 on the three dots in the upper right and then <code>Delete directory</code></li> <li>Frame 3: Click 4 and 5 on <code>Commit changes</code> in the upper right and then accept the suggested choice by clicking on <code>Commit changes</code> in the lower right</li> </ul> <p></p> <p>Deleting the certs/distribution folder did not work for me</p> <p>Some people reported trouble with this step. The other option is to delete and create a new <code>Match-Secrets</code> repository: see Reset <code>Match-Secrets</code></p> </li> <li> <p>While still within your Github account, navigate to your fork of LoopWorkspace.</p> <ul> <li>You can do this several ways, but one method is demonstrated by the GIF below</li> <li>Click on your username and then <code>Repositories</code> and select <code>LoopWorkspace</code></li> <li>Once you are on your LoopWorkspace repository, click on the link below and follow the instructions provided to create your certificates.</li> <li>Run the <code>Action</code>: <code>Create Certificates</code></li> </ul> <p></p> </li> </ol> <p>Other Apps</p> <p>If you build other apps using the build with browser method, they have just had their certificates revoked.</p> <ul> <li>The existing apps you installed from TestFlight continue working until their TestFlight expiration date</li> <li>You cannot build new versions of the app until you run <code>Create Certificates</code> for that app</li> <li>To make sure you don't forget, go ahead and do that for all your other <code>repositories</code> now</li> </ul>"},{"location":"gh-actions/gh-update/#update-fork","title":"Update <code>Fork</code>","text":"<p>This is Step 3 of 6 - it may not always be necessary, but please check every time.</p> <p>Open your GitHub account and select your <code>LoopWorkspace repository</code> from your repositories list.</p>"},{"location":"gh-actions/gh-update/#up-to-date-or-behind","title":"Up to Date or Behind","text":"<ul> <li> <p>If your <code>fork</code> is up to date with LoopKit version, you will see the message <code>This branch is up to date with LoopKit/LoopWorkspace:{branch}</code> - there is no need to build again unless your Loop app in TestFlight is about to expire - in which case, proceed to Build the Loop App</p> </li> <li> <p>If your <code>fork</code> shows a message such as <code>This branch is 3 commits behind LoopKit:main</code> and you want to update and build, then click <code>Sync Fork</code> by tapping where the red rectangle is shown in the graphic below, then in the pop-up window, tap on <code>Update branch</code> and if it succeeds, move on to Build the Loop App</p> </li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#ahead-and-behind","title":"Ahead and Behind","text":"<ul> <li>If your <code>fork</code> shows a message such as <code>This branch is 3 commits behind LoopKit:main and 4 commits ahead of LoopKit:main</code>; you might need to manually resolve a conflict.<ul> <li>This can happen if you customized your build</li> <li>Sometimes GitHub lets you keep your customizations while updating the <code>fork</code></li> <li>The GIF below is an example for LoopFollow<ul> <li>Frame 1 shows the repository is both ahead and behind</li> <li>Frame 2 shows the <code>Sync Fork</code> option was selected</li> <li>Frame 3 shows that GitHub was able to merge the new branch with existing customization</li> </ul> </li> <li>Tap on <code>Sync Fork</code> and then <code>Update branch</code> and if it succeeds, move on to Build the Loop App</li> <li>Sometimes GitHub cannot figure out how to combine the incoming changes with the customizations, so you have to choose to <code>discard changes</code>; you can always customize again after the update</li> </ul> </li> </ul> <p>Building a different branch</p> <p>Do I need to do anything special to build a different branch?</p> <p>Yes: please follow instructions at Build Development Version</p>"},{"location":"gh-actions/gh-update/#build-the-loop-app","title":"Build the Loop App","text":"<p>This is Step 4 of 6 - this is always required.</p> <p>Refer to graphic below as you follow the steps to build the Loop app.</p> <ul> <li>Click on the <code>Actions</code> tab</li> <li>Select the <code>4. Build Loop</code> workflow on the left<ul> <li>If using a mobile browser, be sure to use landscape mode to more closely match how GitHub looks on a computer.</li> </ul> </li> <li>Look on the right and click <code>Run workflow</code> to  see the dropdown</li> <li>Click on the green <code>Run workflow</code> button in the dropdown</li> <li>Wait ~25 min for the build to complete successfully</li> <li>It is then processed by Apple and sent to TestFlight (be patient)</li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#what-if-the-build-fails","title":"What if the Build Fails","text":"<p>If a new release is announced at Current Release, look to see if there are instructions about extra steps required with the release. (The release after 3.2.3 will certainly have extra instructions.)</p> <p>If you are using the dev branch, head over to Build Development Version for information.</p> <p>Otherwise, head over to Errors with Browser.</p>"},{"location":"gh-actions/gh-update/#apple-email-to-ignore","title":"Apple Email to Ignore","text":"<p>You can ignore an email from Apple that there are things you must fix in your app:</p> <ul> <li>There is no action you need to take - the developers will handle any updates that are required before it affects your ability to build the app</li> <li>Other warnings only address issues if you were selling the app in the app store, but it is for your own personal use</li> </ul>"},{"location":"gh-actions/gh-update/#wait-for-testflight","title":"Wait for TestFlight","text":"<p>You'll receive an App Store Connect email confirming that the build has completed processing, and a TestFlight email confirming the new app is ready to test.</p> <ul> <li>If you get an email that the action failed, then return to your repository and look for Build Action error messages<ul> <li>Click on the most recent Build job with the red x by it</li> <li>If the details show this message, <code>Could not install WWDR certificate</code><ul> <li>This means Apple did not reply to GitHub as fast as GitHub expected</li> <li>Make sure your developer account is in good standing and that there are no agreements that need to be accepted</li> <li>Repeat the build (previous step)</li> </ul> </li> </ul> </li> </ul>"},{"location":"gh-actions/gh-update/#install-the-loop-app-on-the-phone","title":"Install the Loop app on the phone","text":"<p>This is Step 6 of 6 - once you finish this, you are done and your app will last 90 days.</p> <p>Open the TestFlight app on the Loopers phone and install the most recent version of the Loop app. Most Loopers have automatic update disabled on their phones, so this is a manual process. Don't forget.</p> <p>The updated Loop app will show up in your TestFlight app on the Looper's phone.</p> <ul> <li>Your new app will have \"Expires in 90 days\"<ul> <li>There may be older builds that are still in TestFlight</li> <li>It takes time for the update to show up in the TestFlight app</li> <li>Wait for the one that expires in about 90 days</li> </ul> </li> <li>You will also see a build number in parentheses, that number increments each build - don't worry about the number</li> </ul> <p>Calendar Reminder</p> <p>This is a good time to put a calendar reminder in your favorite app.</p> <p>Set it up for a few days before the TestFlight app will expire.</p>"},{"location":"gh-actions/gh-update/#automatic-update-disabled","title":"Automatic Update Disabled","text":"<p>Option 1: If you chose to Disable Automatic Install from TestFlight, you control when to install the app on the phone.</p> <ul> <li>This is the recommended option</li> <li>Open TestFlight on your phone and click <code>Install</code> as shown in the GIF below</li> <li>If you are building for a child, follow the TestFlight for a Child instructions again</li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#automatic-update-enabled","title":"Automatic Update Enabled","text":"<p>We strongly recommend you toggle off Automatic Updates to allow you to be in full control over when the app is updated. This is even more important if you're using automatic builds from GitHub for version 3.3 or later.</p> <p>Option 2: If you chose to enable Automatic Updates from TestFlight for the Loop app, the updated build will be installed over your existing app as soon as it uploaded to TestFlight.</p> <ul> <li>In this case, when you look at the TestFlight app on your phone, the app should have installed automatically</li> <li>Refer to the GIF above, the message will say <code>Open</code> instead of <code>Install</code></li> </ul>"},{"location":"gh-actions/gh-update/#choose-previous-build","title":"Choose Previous Build","text":"<p>If you are a typical user who just builds a single version for yourself or your child, you do not need to read this section.</p> <p>This section provides detailed instructions if you want to choose a previous build to install on your phone. Typically, the most recent build is selected but there may be special cases:</p> <ul> <li>You are supporting multiple family members and may build different versions for each</li> <li>You want to test a different <code>branch</code> or set of customizations; you can install a previous build once you are done with the test</li> </ul> <p>This section covers two topics.</p> <ol> <li>Optional: Add Test Details to the TestFlight build</li> <li>Select a Previous Build</li> </ol>"},{"location":"gh-actions/gh-update/#add-test-details","title":"Add Test Details","text":"<p>About half an hour after the build action completes, the new build will appear in the TestFlight screen at this link: App Store Connect / Apps</p> <ul> <li>Log in if needed</li> <li>Select your Loop app</li> <li>Click on the <code>TestFlight</code> tab to see a screen similar to the graphic below</li> </ul> <p></p> <p>Select the build to which you wish to add testing notes. When you tap on that icon, it opens a screen similar to that in the next graphic.</p> <p></p> <p>Click inside the box under Test Details. Insert the text you want to see on the phone before you install this version of the app. Tap the <code>Save</code> button at upper right and then <code>&lt; iOS Builds</code> at upper left.</p> <p>In this example, the branch and commit number are included followed by an indication that this version includes the customizations preferred by this person. Your test details can be as simple as \"Use this for Charlie\".</p> <p>Commit Number</p> <p>If your build includes customizations, your commit number will not match what the developer expects to see if you need to ask for help.</p> <p>Use this section Customization and SHA-1 to determine the SHA-1 before customization.</p>"},{"location":"gh-actions/gh-update/#select-a-previous-build","title":"Select a Previous Build","text":"<p>First open the TestFlight app on your phone and select the Loop app.</p> <p>Near the bottom of the screen is a row labeled previous builds.</p> <ul> <li>Tap on the previous builds row</li> <li>The available builds are grouped by app version number, choose your desired version</li> <li>Typically you choose the most recent build for that version and click Install and then Open after installation completes</li> <li>All your settings should remain</li> </ul> <p>The following graphic shows the view seen in the TestFlight app on the phone. By adding test details (as explained in the previous section), the desired build is clear. For most people - they will just use the most recent build. This procedure is useful for those who build often or who support multiple family members.</p> <p></p>"},{"location":"gh-actions/gh-update/#the-loop-app-build-details","title":"The Loop App Build Details","text":"<p>In the Loop app, once installed on your phone, tap on <code>Settings -&gt; Support -&gt; Issue Report</code>. The graphic below shows an example of the Build Details included in the report.</p> <ul> <li>The <code>profileExpiration</code> listed here is irrelevant - the app expires when the TestFlight expiration indicates<ul> <li>Pro Tip: Add a calender reminder for your next build</li> </ul> </li> <li>An app built with a browser displays a <code>sourceRoot</code> that starts with <code>/Users/runner/work/LoopWorkspace</code><ul> <li>The <code>buildDateString</code> is when the app was built and transferred to TestFlight, not when it was installed on your phone</li> <li>You can use 90 days from this date, as well as the Expires in ## Days on the TestFlight app, to know when you need to rebuild</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#github-token","title":"GitHub Token","text":"<p>Your GitHub <code>Personal Access Token</code> should be configured:</p> <ul> <li><code>Never expire</code></li> <li><code>repo, workflow</code> permission scope</li> </ul> <p>If you are not logged in to GitHub and have not logged in recently, then you may see the authentication screen when doing the steps below.</p> <p>Authenticate if requested by clicking on the green <code>Send SMS</code> button or entering your password.</p> <p></p> <p>Once you are authenticated, you will have access to view your personal access token.</p>"},{"location":"gh-actions/gh-update/#modify-personal-access-token","title":"Modify <code>Personal Access Token</code>","text":"<p>If your <code>Personal Access Token</code> has not expired but does not have the correct permission, you should modify it. Do not regenerate it.</p> <p>Click on the link to view your token and compare it to the graphic below.</p> <ul> <li>Link to access your GitHub <code>Personal Access Token</code></li> </ul> <p></p> <p>The graphic above has a blue rectangle added to indicate where you should see your token. If yours does not look like this, click on the link (<code>FastLane Access Token</code>) to open a new display. Watch the GIF below - there are 4 frames, the last one has the Update token button.</p> <ol> <li>Click on the link (<code>FastLane Access Token</code>) to open a new display</li> <li>This example has no workflow or repo checks in it</li> <li>Add a check to the workflow box</li> <li>Scroll all the way to the bottom of the screen and click on the green <code>Update token</code> button</li> </ol> <p></p> <p>After you click on the <code>Update token</code> button, your <code>FastLane Access Token</code> should now show <code>repo, workflow</code> and look like the earlier graphic above.</p> <p>The only reason to regenerate a token is if it is set to expire. Do not do the next section unless you have to.</p>"},{"location":"gh-actions/gh-update/#regenerate-token","title":"Regenerate Token","text":"<p>If your <code>Personal Access Token</code> has expired or has an expiration date, you can regenerate the new one at any time.</p> <p>Update new GH_PAT to <code>Secrets</code></p> <p>After you get your new token, immediately add it to your <code>Secrets</code> for any app you build with this method. You don't have to rebuild the app, but it's a good idea to at least run <code>Action 1. Validate Secrets</code> for each repository to make sure you did not make a mistake.</p> <p>You can regenerate your GitHub <code>Personal Access Token</code> at any time by clicking on the link below. (it will open in a new browser tab.)</p> <ul> <li>Link to access your GitHub Personal Access Token</li> </ul> <p>The <code>FastLane Access Token</code> is a clickable link.</p> <p></p> <p>After you click on <code>FastLane Access Token</code> your screen should be similar to the graphic below.</p> <p>Your existing TestFlight builds are fine</p> <p>The yellow GitHub warning by the <code>Regenerate Token</code> button is for new builds you make in the future.</p> <p>Previous builds are still available in TestFlight and are not affected by this action.</p> <p>Note - selecting the <code>workflow</code> check box below is new. If yours does not show that selection, add it before you click on Regenerate token (red highlight in graphic below).</p> <p></p> <p>Click on Regenerate token (red highlight in previous graphic) to see screen similar to next graphic. </p> <ul> <li>Most Loopers will have classic personal access tokens<ul> <li>If you are a developer who needs to use the fine-grained (by repository) option, that's fine</li> </ul> </li> </ul> <p>Be sure to change the Expiration from <code>30 days</code> to <code>No Expiration</code>. When you select <code>No Expiration</code> a GitHub warning appears. Click on the green <code>Regenerate Token</code> button (red highlight in following graphic).</p> <p></p> <p>The next screen shows your new token. Copy the token using the copy icon and save it along with your other secret settings.</p> <p></p> <p>The next step is to update GH_PAT in your <code>Secrets</code>. (If you build other apps with this method - update the GH_PAT for all of them right now - do not forget.)</p>"},{"location":"gh-actions/gh-update/#update-secrets","title":"Update <code>Secrets</code>","text":"<p>This example is for updating GH_PAT in the <code>Secrets</code> for your <code>repository</code>, but the same method can be applied when changing any of the <code>Secrets</code>.</p> <p>Open the <code>repository</code> for which you will update <code>Secrets</code>. On the far right is a Settings selection. If you don't see Settings (if last item on row is Insights), then you are not on your <code>fork</code> or you need to sign in to your GitHub account. You should see <code>username/LoopWorkspace</code> with <code>forked</code> from <code>LoopKit/LoopWorkspace</code> underneath.</p> <p>Refer to the GIF for help. There are 3 frames.</p> <p></p> <ol> <li>Tap on Settings, then scroll down until you see <code>Secrets and variables</code> on the left side and click on the drop down indicator to display <code>Actions</code>.</li> <li>Keep scrolling on the same screen, past the <code>Action secrets / New repository secret</code> row, until you see the list of your current <code>Secrets</code>. </li> <li>Click on the GH_PAT, tap on the pencil and enter the new token in the form. Click on Update Secret to complete the action.</li> </ol> <p>Scroll all the way to the top of the screen and tap on your LoopWorkspace link. Then follow the How to Update or Rebuild instructions to start a new build.</p>"},{"location":"gh-actions/gh-update/#build-development-version","title":"Build Development Version","text":"<p>The information to build a development (<code>dev</code> or any other branch) has been moved to a new page: Build dev with Browser</p>"},{"location":"intro/loopdocs-how-to/","title":"LoopDocs How-to","text":""},{"location":"intro/loopdocs-how-to/#how-to-find-help","title":"How to Find Help","text":"<p>Volunteers generously provide support for Loop via online platforms. You have several options for joining conversations on Loop and asking for help.  Links to the main platforms are listed below.  Non-US Loop users in Italy, Australia, and several other countries have also formed Facebook (FB) groups.</p> <ul> <li>The Looped Group on Facebook. Looped Group is the original FB group for DIY looping systems. There are a lot of active members there with an excellent history of helping people.</li> <li>Loop and Learn is a community that provides Loop-centric information, a T1D Speaker Series covering many topics of general diabetes interest as well as Loop-specific chats, alerts whenever there is an update to iOS and Xcode, Quick Tips and articles written by mentors providing their Loop experience.<ul> <li>LoopandLearn Facebook Group</li> <li>LoopandLearn Website</li> <li>LoopandLearn YouTube Channel</li> </ul> </li> <li>The LoopTips website provides non-build information that is helpful once you are looping, e.g., how to print endo reports, find Loop data, deal with therapy settings changes, etc.</li> <li>Many Loopers use a companion app called Nightscout. Nightscout help can be found in the CGM in the Cloud Facebook group.</li> <li>For those interested in what is coming next for Loop and those who prefer not to use Facebook, join Loop Zulipchat and be sure to subscribe to all the streams or you'll miss some interesting conversations.</li> <li>Loop has an Instagram account @diy.loop where some updates are shared.</li> </ul>"},{"location":"intro/loopdocs-how-to/#how-to-ask-for-help","title":"How to Ask for Help","text":"<p>If you are having trouble building or using your Loop app, there are some important steps to get responses to your question, while also being considerate of our volunteers' time.</p> <ol> <li>Always search in both LoopDocs and your favorite support group. <ul> <li>Confused about how to search in a Facebook group? Here is a video to help.</li> </ul> </li> <li>If you use Facebook, click on the Featured posts (at the top of the page); many posts asking for help are already answered there.</li> <li>Don't post a duplicate question in multiple groups (mentors monitor many groups). Only post to a different group if you have had no responses for several hours.</li> <li>If a LoopDocs search, FB or Zulipchat search, and a check of Looped Group featured posts pinned to the top of the page haven't answered your question, then post for help. Review the tips for how to post for help so that our volunteers get all the information they'll need to help you, without needing to ask 40 questions first.    </li> <li>Leave your question posted even after you've gotten an answer, but edit the original post to add the word RESOLVED at the beginning of the original post. <ul> <li>This helps other Loopers who have the same question</li> <li>This helps mentors know they don't need to respond to help you</li> </ul> </li> </ol>"},{"location":"intro/loopdocs-how-to/#how-to-use-loopdocs","title":"How to use LoopDocs","text":""},{"location":"intro/loopdocs-how-to/#website-short-cuts","title":"Website Short Cuts","text":"<p>One of our awesome Loop volunteers captured the domain names  <code>loopdocs.org</code> and <code>looptips.org</code>.  So you can find these valuable websites by simply typing loopdocs or looptips followed by .org in your browser. In other words, you don't need to remember or type <code>https://loopkit.github.io/loopdocs/</code>.</p>"},{"location":"intro/loopdocs-how-to/#website-navigation","title":"Website Navigation","text":"<p>There are a lot of links you can click on this website.</p> <ul> <li>Some links take you to a different section of the same page</li> <li>Some links take you to a different page in LoopDocs</li> <li>Some links take you to a different website</li> </ul> <p>If you click on the link, you are moved to the new location and must hit the back button on your browser to return.</p> <p>You can choose to open that link in a new window or new tab.</p> <ul> <li>If your mouse has a right button, then right click the link</li> <li>On a Mac with no right button, hold down the Control key and click</li> <li>On a mobile device, click and hold the link and choose where to open the link</li> </ul> <p>Keyboard Navigation</p> <p>When viewing the site at a computer, you can use keys as shortcuts:</p> <ul> <li><code>n</code> for next page</li> <li><code>p</code> for previous page</li> <li><code>s</code> for search</li> </ul> <p>The website navigation depends on whether you are on a mobile device or a computer (with browser width &gt; 1220 pixels). </p> <ul> <li>For the wide-view:<ul> <li>The tabs for the different sections of LoopDocs are visible across the top of the browser</li> <li>Once a tab is selected:<ul> <li>That tab is highlighted</li> <li>The list of pages in that tab is displayed on the left side</li> <li>The Table of Contents for the current page is displayed on the right side</li> </ul> </li> </ul> </li> <li>For the mobile (or narrow) display:<ul> <li>From the Home page, tap the Hamburger Menu to display the tabs for the different sections of LoopDocs</li> <li>Once a tab is selected:<ul> <li>The list of pages in that tab is displayed in the Hamburger Menu</li> <li>To return to the main tab list, tap the back arrow</li> <li>To see the Table of Contents, use the Hamburger Menu and scroll to the highlighted page (current page) and tap again</li> </ul> </li> </ul> </li> </ul>"},{"location":"intro/loopdocs-how-to/#website-search","title":"Website Search","text":"<p>It is not uncommon to have a question about Loop. But, it is exceptionally rare to have the question not already answered in LoopDocs, so please search for answers by selecting the Search tool (upper right) or typing <code>s</code> then a search term at a computer. As you begin to type, suggested completions and links to pages are displayed. Click on the item you think answers your question.     </p>"},{"location":"intro/loopdocs-how-to/#how-to-improve-loopdocs","title":"How to Improve LoopDocs","text":"<p>Please submit suggestions for updates and improvements to this documentation. There are many pages of content and we welcome reviewers to help find typos and outdated info/links. If you notice a typo, poor word choice or some explanation that could be improved or clarified, there are a few options. The first two options use github, a website where open-source code and documentation is often shared. You can only use github if you have an account (it's free).</p> <ol> <li>You can issue a Pull Request (best option if it is a simple typo or wording update)</li> <li>You can open an Issue (best option if a major rewrite is needed or you think a conversation would help), or </li> <li>You can post on Facebook or Zulipchat </li> </ol>"},{"location":"intro/loopdocs-how-to/#pull-requests-and-issues","title":"Pull Requests and Issues","text":"<p>If you decide to do a GitHub Pull Request (PR) or create an Issue, first look to see if someone has already opened a PR or Issue on the topic so you don't create a duplicate.</p> <ul> <li>If a PR or Issue on the topic is open, feel free to add your comments (don't be shy), but please don't create a duplicate</li> <li>If a PR doesn't exist, watch this LoopDocs Pull Request video on how to create one (it's easy, video is less than 5 minutes)</li> <li>If your Issue is new, please add it by clicking on the <code>New Issue</code> button<ul> <li>Give the Issue a descriptive title</li> <li>Indicate which page or pages need updating , along with a brief description of the problem(s)</li> </ul> </li> </ul>"},{"location":"intro/loopdocs-how-to/#facebook-or-zulipchat","title":"Facebook or Zulipchat","text":"<p>Helpful tips for providing LoopDocs feedback through Facebook and/or Zulipchat:</p> <ul> <li>In Looped Group - make sure your post is clear that you have a comment about LoopDocs in particular.</li> <li>In Loop Zulipchat, please use the documentation stream, Loopdocs Issue channel.</li> </ul>"},{"location":"intro/overview-intro/","title":"LoopDocs Overview","text":"<p>Take a deep breath</p> <p>It is totally understandable if the thought of building and operating your own\u00a0Loop\u00a0app feels intimidating.</p> <p>As you learn the information explained in\u00a0LoopDocs, this will start feeling more comfortable.</p>"},{"location":"intro/overview-intro/#loopdocs-contents","title":"LoopDocs\u00a0Contents","text":"<p>The\u00a0LoopDocs\u00a0website is organized as follows</p> <ul> <li>Home: What is\u00a0Loop?</li> <li>Intro: Introduction to\u00a0LoopDocs<ul> <li>Requirements: What is needed regardless of build method</li> </ul> </li> <li>There are two ways to build - you get the same app either way<ul> <li>Build with Browser: Build\u00a0Loop\u00a0app using a browser on any computer or tablet</li> <li>Build with Mac: Build\u00a0Loop\u00a0app with a Mac the first time, or Update next time</li> </ul> </li> <li>Set Up: How to set up the\u00a0Loop\u00a0app</li> <li>Operate: How to use the\u00a0Loop\u00a0app</li> <li>Troubleshoot: What to do if you're having trouble with the\u00a0Loop\u00a0app</li> <li>Version: Information about\u00a0Loop\u00a0versions, code customization and development</li> <li>Nightscout: Loop-specific\u00a0Nightscout\u00a0details; Nightscout is an open-source cloud application used by people with diabetes and their caregivers<ul> <li>Remote Overview: Overview on issuing commands remotely to a\u00a0Loop\u00a0app using\u00a0Nightscout\u00a0and Apple Push Notifications</li> <li>Loop Caregiver: Companion app useful for remote commands</li> </ul> </li> <li>FAQs: Pages with safety tips, frequently asked questions and the Glossary</li> <li>Translation: Links to Google Translate provided as a convenience, no guarantees about the quality of the translation</li> </ul>"},{"location":"intro/overview-intro/#using-links","title":"Using Links","text":"<p>You will notice many links in the LoopDocs pages pointing to detailed information. </p> <ul> <li> <p>If you notice an arrow pointing up and to the right beside the link:</p> <ul> <li>This means a new tab or window (depending on your browser configuration) is opened when you click on the link</li> <li>For example, the What is Loop? video is found on YouTube</li> </ul> </li> <li> <p>This link format is used anytime the link will take you to a different website</p> </li> <li>In some cases, it is also used when referring to a different LoopDocs page</li> </ul>"},{"location":"intro/overview-intro/#using-tooltips","title":"Using Tooltips","text":"<p>The LoopDocs pages contain words that may be unfamiliar. For a definition of any word with a dashed underline, simply hover your mouse over the word, or tap on the word on a mobile device, to view the definition. For example, Omnipod has a tooltip.</p> <p>Every tooltip definition is also found in the Glossary - so head over there if you have trouble reading a tooltip.</p>"},{"location":"intro/overview-intro/#building-loop","title":"Building\u00a0Loop","text":"<p>The process for building the\u00a0Loop\u00a0app is divided into short segments (sections or pages) in the Build tabs of\u00a0LoopDocs.</p> <p>Best Practice: Learn to Build</p> <p>You are strongly encouraged to build\u00a0Loop\u00a0for yourself.</p> <ul> <li>No links to providers who build\u00a0Loop\u00a0as a service  are found in\u00a0LoopDocs</li> <li>If you choose to use such a service, before you begin, you should:<ul> <li>Read\u00a0LoopDocs</li> <li>Know how to Set up and Operate\u00a0Loop</li> <li>Ask what features, if any, available with DIY loop are not available with their service</li> <li>These steps are important for your safety</li> </ul> </li> </ul>"},{"location":"intro/overview-intro/#use-a-simulator","title":"Use a Simulator","text":"<p>You can build\u00a0Loop\u00a0and practice with a simulated phone, CGM and/or pump. You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions.</p> <p>Starting with a simulator can help you decide if you want to move forward with purchasing additional items required to use the app. You can:</p> <ul> <li>Learn the interface</li> <li>Explore glucose predictions and dosing recommendations</li> </ul> <p>Locked Phone or App in Background</p> <p>Do not expect the simulator to work when the phone is locked or the app is in the background. The app relies on a real insulin pump or a real CGM to wake up the app when the phone is locked or the app is in the background. The simulator cannot do this.</p> <p>Please review Simulator Build for more information.</p>"},{"location":"intro/overview-intro/#operating-loop","title":"Operating\u00a0Loop","text":"<p>A significant amount of content is provided on this website and via link to other sources. </p> <p>Please review these pages when initially setting up and learning to use\u00a0Loop.</p> <p>Some techniques are specific to\u00a0Loop, but the general concepts of how man-made insulin works and strategies to test basal, carb ratios and insulin sensitivity apply to all the hybrid closed-loop systems, commercial and open source.</p>"},{"location":"intro/overview-intro/#development-history","title":"Development History","text":"<p>Loop\u00a0is an open-source, shared project. The entire project has been, and continues to be, done by volunteers. From the code to the website, you're getting all this because dozens of volunteers have given their time, so please add your time by reading this website thoroughly before embarking on your\u00a0Loop\u00a0journey.</p> <p>Here are development history links to other resources for you to explore.</p> <ul> <li> <p>The early history of\u00a0Loop\u00a0development:</p> <ul> <li>History of\u00a0Loop\u00a0and\u00a0LoopKit, written by\u00a0Loop\u00a0developer Nate Racklyeft</li> </ul> </li> <li> <p>The early days and the many advances brought about by the <code>#We Are Not Waiting</code> diabetes community:</p> <ul> <li>The Artificial Pancreas Book written by Dana Lewis and check out her website DIYPS.</li> </ul> </li> <li> <p>How the Omnipod Eros pods were cracked to work with\u00a0Loop:</p> <ul> <li>Insulin Pumps, Decapped Chips and Software Defined Radios written by\u00a0Loop\u00a0developer Pete Schwamb</li> <li>Deep Dip Teardown of Tubeless Insulin Pump by Sergei Skorobogatov</li> </ul> </li> </ul>"},{"location":"intro/requirements/","title":"Requirements Overview","text":""},{"location":"intro/requirements/#two-ways-to-build-the-app","title":"Two Ways to Build the App","text":"<p>With the release of\u00a0Loop 3\u00a0, there are two ways to build the app.</p> <ul> <li>If you have never built\u00a0Loop\u00a0before:<ul> <li>If you already own a Mac then you may prefer the Build with Mac method</li> <li>For all others, you will probably prefer the Build with Browser method</li> </ul> </li> </ul> <p>The Build Steps have been split into two tabs:</p> <ul> <li>Build with Browser<ul> <li>Build with a browser on any computer or tablet</li> <li>App is installed on the iPhone using TestFlight</li> </ul> </li> <li>Build with Mac<ul> <li>App is built on a Mac with Xcode connected to the iPhone</li> <li>The operating system on the Mac and the version of Xcode must be kept up-to-date</li> </ul> </li> </ul> <p>There are some requirements common to both methods. Some requirements are specific to only one method.</p>"},{"location":"intro/requirements/#common-requirements","title":"Common Requirements","text":"<p>These requirements are independent of how you build the Loop app:</p> <ol> <li>Compatible iPhone</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device<ul> <li>Not needed with Omnipod DASH</li> <li>Required for Medtronic and Omnipod Eros</li> </ul> </li> <li>Apple Developer Membership<ul> <li>If building for a child, be sure to read Loopers Need Their Own Apple ID</li> <li>Build with Browser - requires a paid developer account</li> <li>Build with Mac - can build a free version with some limitations and must rebuild weekly</li> </ul> </li> </ol>"},{"location":"intro/requirements/#added-requirements-to-build-with-browser","title":"Added Requirements to Build with Browser","text":"<p>If you plan to build using the Build with Browser instructions, you also need:</p> <ol> <li>A free GitHub account</li> </ol> <p>Detailed instructions are included in the link above.</p>"},{"location":"intro/requirements/#added-requirements-to-build-with-mac","title":"Added Requirements to Build with Mac","text":"<p>If you plan to build using the Build with Mac instructions, you also need:</p> <ol> <li>Compatible Computer</li> <li>Xcode (a free Apple application)</li> </ol>"},{"location":"intro/requirements/#getting-ready-to-build","title":"Getting Ready to Build","text":"<p>Go through the Common Requirements to see what you need to actually Loop.</p> <p>Simulator Option</p> <p>If you want to test the Loop app without attaching CGM or pump hardware, you can run a simulated CGM or simulated pump. You can use actual CGM data using Dexcom Share or Nightscout as a Remote CGM.</p> <p>These simulators are part of the Loop app and are available with either build method you choose.</p> <p>Check out the Simulator page.</p> <p>Once you have chosen your Build Method, go through the pages for that build method several times before beginning, especially if this is new to you.</p> <p>When you are ready to proceed, work through the tasks on each page. Take your time. You can do one a day, take a week per page or blaze through them quickly.  Just be sure to read carefully and if you are confused - reach out for help: How to Find Help.</p> <p>After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app.</p>"},{"location":"intro/requirements/#next-steps","title":"Next Steps:","text":""},{"location":"intro/requirements/#review-the-common-requirements","title":"Review the Common Requirements","text":"<p>Before you start either build method, review the Common Requirements. First one is Compatible iPhone. On each page, keep clicking Next (or n) until you've finished with the Intro pages and are ready to Build.</p>"},{"location":"intro/requirements/#build-with-browser","title":"Build with Browser","text":"<p>Click on the link if you are done reviewing the common requirements and you want to skip ahead to Build with Browser.</p>"},{"location":"intro/requirements/#build-with-mac","title":"Build with Mac","text":"<p>Click on the link if you are done reviewing the common requirements and you want to skip ahead to Build with Mac.</p>"},{"location":"loop-3/add-cgm/","title":"Add CGM","text":""},{"location":"loop-3/add-cgm/#cgm-choices","title":"CGM Choices","text":"<p>A CGM can be added from the Heads-Up-Display (HUD) or from the Loop Settings screen \u2699\ufe0f.</p> <p>The HUD will look like the graphic below if no CGM or Pump is connected with Loop:</p> <p></p> <p>Loop can be connected to the following CGMs:</p> <ul> <li>CGMs that reside on the same phone (internet not required)<ul> <li>Dexcom G5</li> <li>Dexcom G6 (use this for Dexcom ONE)</li> <li>Dexcom G7 (Loop 3 only)</li> <li>Minimed Enlite CGM<ul> <li>Medtronic Pump only</li> <li>You must add pump first<ul> <li>If Enlite is connected to Medtronic pump and that pump is connected to Loop, then an option for Enlite shows up when choosing a CGM, not visible in graphic below</li> </ul> </li> </ul> </li> <li>Libre: LibreTransmitter was added to the dev branch (and thus will be supported in the next release of Loop)<ul> <li>Only some Libre sensors are supported; some have encryption that limits DIY use</li> <li>No details for using Libre will show up on this page until the next release - please read Build Loop-dev and follow the links to understand what you are doing if you choose a development branch</li> </ul> </li> </ul> </li> <li>CGMs that require active internet (WiFi or Cell)<ul> <li>Dexcom Share</li> <li>Nightscout Remote CGM</li> </ul> </li> <li>CGM Simulator - useful to learn the app interface</li> </ul>"},{"location":"loop-3/add-cgm/#add-cgm","title":"Add CGM","text":"<p>To add a CGM, go to the Settings screen \u2699\ufe0f, tap on <code>Add CGM</code>, and tap on your CGM.</p> <p></p> <p>If you later decide to use a different CGM type, you must first delete the CGM and then add CGM to choose the new one.</p> <ul> <li>For Dexcom G5, G6 or ONE, you must delete the CGM when you change transmitters (about once every 90 days)</li> </ul> <p>Set up Focus Mode</p> <p>Don't forgot to check your iOS Focus Notifications when you add or change your CGM.</p> <ul> <li>Dexcom CGM must have the app for G6 or G7 added separately</li> <li>Libre CGM (<code>dev</code> branch only) must have Loop notifications turned on to get CGM alerts</li> <li>Nightscout or other alerts: if you use another app to provide alerts, be sure to add them to Focus as well</li> </ul>"},{"location":"loop-3/add-cgm/#remote-upload-from-loop","title":"Remote Upload from Loop","text":"<p>Loop provides an option to upload CGM values to a remote service like Nightscout or Tidepool. In many cases this can be a preferred solution.</p> <p>With Loop 3, the data-store on the Loop phone keeps a full week of data. If there is an interruption in the upload, when it is restored, Loop will fill in up to 1-week of CGM data that was not previously uploaded.</p> <p>Some people use Dexcom Share to feed their remote services. There have been outages with Share. When those occur, the data is not back-filled like it is with Loop.</p> <p>This is the reason why there's a comment under each CGM below to select Upload Readings.</p> <p></p>"},{"location":"loop-3/add-cgm/#dexcom-g5-g6-one","title":"Dexcom G5, G6, ONE","text":"<p>To use the Dexcom G5, G6 or ONE:</p> <ul> <li>Select Dexcom model, use <code>Dexcom G6</code> for either  G6 or ONE</li> <li>Dexcom app must be running on the Loop iPhone and paired to an active transmitter</li> <li>User must enter that active transmitter ID in the location indicated by the red rectangle in the graphic below</li> <li>Do not enter your <code>Share Credentials</code><ul> <li>The graphic below shows <code>Tap to set</code></li> <li>Do not tap, leave it alone</li> </ul> </li> <li>Only add the transmitter ID to Loop after it is paired with the Dexcom app on your phone</li> </ul> <p></p>"},{"location":"loop-3/add-cgm/#where-to-get-the-transmitter-id-for-dexcom-g6","title":"Where to get the Transmitter ID for Dexcom G6?","text":"<p>You can find the transmitter ID in your Dexcom G6 app or on the back of the transmitter box (please refer to the below screenshots). </p> <ul> <li>In your Dexcom G6 app</li> <li>Tap \"\u2699\ufe0f Settings\"</li> <li>The transmitter ID is located under section \"CGM\" where it says \"Transmitter\" with a the 6-digit string.</li> <li>Alternatively, while in Settings, tap on the &gt; in the \"Transmitter\" row: your transmitter ID is the 6-digit identifier next to \"SN\" (short for serial number). </li> </ul> <p></p> <ul> <li>On the back of your transmitter box </li> <li>Your transmitter ID is the 6-digit number next to \"SN\" and the QR code on the back of the carton.</li> </ul> <p></p> <p>It is suggested that you enable Remote Upload from Loop.</p>"},{"location":"loop-3/add-cgm/#change-dexcom-sensor","title":"Change Dexcom Sensor","text":"<p>When you change a Dexcom G5, G6 or ONE sensor, you do this in the Dexcom app. When the sensor completes warmup and CGM values are once again reported in the Dexcom app, Loop picks these values up because you are using the same Dexcom Transmitter.</p>"},{"location":"loop-3/add-cgm/#change-dexcom-transmitter","title":"Change Dexcom Transmitter","text":"<p>When you change the Dexcom G5, G6 or ONE Transmitter, you need to delete your CGM selection from Loop and then add it back after you complete the pairing with the transmitter in your Dexcom app.</p> FYI: When You Change Dexcom Transmitters (click to open) <p>Before you change Dexcom transmitters, select the <code>Delete CGM</code> button at the very bottom of the CGM info page in Loop. If you leave the transmitter connected in Loop, you may have trouble pairing your new transmitter. If pairing does work, then Loop will not get CGM data from the Dexcom app on your phone.</p> <p>Follow the instructions here: What do I do when I switch Dexcom transmitters?.</p> <p>The Dexcom G7 is handled differently - Loop automatically detects when a new sensor/transmitter pair is added to the Dexcom G7 app.</p> <p>Your selection to enable Remote Upload from Loop must be repeated with each new Transmitter. The default setting is disabled.</p>"},{"location":"loop-3/add-cgm/#about-dexcom-share-credentials","title":"About Dexcom Share credentials","text":"<p>You do NOT need your Share account info listed in Loop settings if you are using a G5 or G6 system. The transmitter ID is sufficient. In fact, you should leave your Share credentials blank so that you don't accidentally become internet-dependent for CGM data if you forget to update your transmitter ID when you start a new transmitter.</p>"},{"location":"loop-3/add-cgm/#dexcom-g7","title":"Dexcom G7","text":"<p>This is only available on Loop 3.</p> <p>You must have the G7 app on the same phone as Loop. When the G7 app switches to the next sensor/transmitter assembly, Loop automatically switches too.</p> <p>It is suggested that you enable Remote Upload from Loop.</p> <p></p> <p>Don't forget Health Permissions</p> <p>For those switching from Dexcom G6 to Dexcom G7, you might forget to add permission for the G7 app to write to Apple Health. If you want long-term history of those CGM readings to persist in Apple Health, turn on the permission for the Dexcom app to write glucose to Health.</p> <p>If either the G6 or the G7 has permission to write to Apple Health, then Loop will delete the Loop glucose data in Apple Health that are older than 3 hours and newer than 1 week. The Dexcom app will write its glucose values to Health when each value is 3 hours old.</p>"},{"location":"loop-3/add-cgm/#medtronic-enlite-cgm","title":"Medtronic Enlite CGM","text":"<p>The Medtronic Enlite CGM is only available if you have connected it to your compatible Medtronic Pump.</p> <ul> <li>Make sure your pump reports the Enlite CGM results</li> <li>Go through the Add Pump to Loop steps with that Medtronic pump</li> <li>Then do the Add CGM steps and the sensor should be presented as an option</li> </ul>"},{"location":"loop-3/add-cgm/#dexcom-share-as-a-cgm","title":"Dexcom Share as a CGM","text":"<p>If you need to use Dexcom Share</p> <p>If the dexcom is on another phone, you can use Share if internet / cell coverage is good.</p> <p>Dexcom Share is not available for Dexcom ONE CGM.</p> <p>The Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress.</p> <p>If you do not enter your Share credentials correctly into Loop, you will get an error when Loop tries to access your Share account to backfill CGM data. An example of the error message is shown in the graphic below. If you see that message, delete your Share account from Loop settings and try again.</p> <p></p>"},{"location":"loop-3/add-cgm/#nightscout-remote-cgm","title":"Nightscout Remote CGM","text":"<p>If the user is already uploading CGM data to their Nightscout URL, they can select that as a source for CGM data for Loop. The user must acknowledge they understand the risks of using a remote source that requires internet, as shown in the graphic below. </p> <p>In addition to the risks of missing data if the internet is not reliable, you must also make sure the CGM data sent to Nightscout is reliable.</p> <p>DANGER - Make sure Nightscout CGM Data is Reliable</p> <p>Just because you can use Nightscout as a CGM source does not mean you should.</p> <p>If you decide to use Nightscout as a CGM source, make sure the data stored in Nightscout is reliable. If the app you choose uploads bad results to Nightscout, you don't want Loop to use that bad data.</p> <p>Sensors that can be added to Nightscout via other apps include Dexcom, some Libre and some Medtronic sensors. Please refer to Nightscout Docs: Configure your Uploader.</p> <p>There are third party apps that bring Libre data to your Loop phone and there are customization instructions starting at Libre Support for Loop 3.2.x Code that explain how to modify Loop 3 to use one of those apps. Please use these steps to get a version of Loop that does not rely on internet access to work.</p> <p>It is suggested that you use Open Loop during warmup until the new sensor begins to provide reasonable data. This is especially important with European Libre 2 using direct bluetooth connection.</p> <p>The xDrip4iOS app (which can also be found in the app store under the name Shuggah) may have a problem during warmup of a new sensor (European Libre 2 using direct bluetooth connection). There were two instances of crazy high values being reported and picked up by Loop 3. One Shuggah user and one xDrip4iOS user who connected via Nighscout as a CGM with Loop 3 had serious overdose of insulin because of bad readings with a new sensor. The developers of xDrip4iOS fixed their application - so make sure you have the latest version. Those developers have no control over what is provided by Shuggah.</p> <p></p> <p>The user must enter both the URL and API_SECRET for their site to ensure the security of the data. The URL must start with <code>https://</code> and cannot have any extra spaces in the line.</p> <p></p> <p>When using Nightscout Remote CGM, if the user needs to change credentials or switch to a different CGM, the user must go through the Loop-&gt;Settings \u2699\ufe0f-&gt;CGM menu.</p>"},{"location":"loop-3/add-cgm/#change-cgm","title":"Change CGM","text":"<p>To change CGMs, delete your existing CGM and then add a new CGM.</p>"},{"location":"loop-3/add-cgm/#change-a-nightscout-remote-cgm","title":"Change a Nightscout Remote CGM","text":"<p>For Nightscout Remote CGM, the Nightscout URL is opened when tapping on the CGM icon in the Heads-Up Display, while the credential sections with the <code>Delete CGM</code> row are shown when tapping on Loop <code>Settings</code> \u2699\ufe0f, and selecting CGM.</p> <p>After deleting a CGM, the Head-Up-Display at the top of the Loop main screen will show the <code>Add CGM</code> icon.</p>"},{"location":"loop-3/add-cgm/#change-other-cgm","title":"Change Other CGM","text":"<p>Other CGM, you can tap on the CGM from either the Heads-Up Display or tap on <code>Settings</code> \u2699\ufe0f, and select your CGM.</p> <p>Scroll to the bottom of the screen and select <code>Delete CGM</code>.</p> <p>For some CGM that can be added to Loop 3 with a patch, the words may be different, but the steps are the same.</p>"},{"location":"loop-3/add-cgm/#dexcom-g5-g6-and-one-not-g7","title":"Dexcom G5, G6 and One (not G7)","text":"<p>For older Dexcom sensors, the transmitter is replaced separately about once every three months. In order to enter a new transmitter number, you must first delete the CGM and then add the CGM.</p> <p>Detailed instructions are found at CGM FAQs: What do I do when I switch Dexcom transmitters?.</p> <p>Once the Dexcom G7 has been added to Loop, the user only needs to let the Dexcom G7 app know when to use the new sensor. The Loop app automatically switches to the new sensor with no additional steps required by the Looper.</p>"},{"location":"loop-3/add-pump/","title":"Add Pump","text":""},{"location":"loop-3/add-pump/#pump-choices","title":"Pump Choices","text":"<p>You can choose a pump from the Heads-Up-Display (HUD) or from the Loop Settings screen.</p> <p>The HUD looks like the graphic below if no CGM or Pump is chosen:</p> <p></p> <p>Switching Pumps?</p> <p>To change the pump connected to Loop go to Change Pump Type.</p> <p>Loopers can choose from 3 pumps and a simulator:</p> <ul> <li>Minimed 500/700 Series<ul> <li>Note: this label does not mean any 5 or 7 series pump works with the app</li> <li>Please refer to Compatible Pump for additional details</li> </ul> </li> <li>Omnipod</li> <li>Omnipod DASH</li> <li>Insulin Pump Simulator</li> </ul> <p>Omnipod Terms</p> <p>The Loop app and LoopDocs use these terms:</p> <ul> <li>Omnipod is the older (Eros) pods (requires RileyLink compatible device to Loop)</li> <li>Omnipod DASH is the newer BLE pods (phone talks directly to pod - no extra device needed to Loop)</li> <li>Omnipod Common means information common to Omnipod and Omnipod DASH</li> </ul>"},{"location":"loop-3/add-pump/#summary-of-steps-to-add-a-pump","title":"Summary of Steps to Add a Pump","text":"<p>Here is an overview of the different steps for adding each pump.  Before changing pumps, you need to delete the old pump first.  See Change Pump Type section below.</p>"},{"location":"loop-3/add-pump/#steps-for-omnipod","title":"Steps for Omnipod","text":"<ol> <li>Omnipod Common 1 (choose default notifications)</li> <li>Insulin Type</li> <li>Select RileyLink</li> <li>Omnipod Common 2 (Pair Pod)</li> </ol>"},{"location":"loop-3/add-pump/#steps-for-omnipod-dash","title":"Steps for Omnipod DASH","text":"<ol> <li>Omnipod Common 1 (choose default notifications)</li> <li>Insulin Type</li> <li>Omnipod Common 2 (Pair Pod)</li> </ol>"},{"location":"loop-3/add-pump/#steps-for-medtronic","title":"Steps for Medtronic","text":"<ol> <li>Insulin Type</li> <li>Select RileyLink</li> <li>Medtronic</li> </ol>"},{"location":"loop-3/add-pump/#add-pump","title":"Add Pump","text":"<p>Tap on Add Pump in the Settings screen to see pump options (shown in the graphic below).</p> <p>Tap on your Pump.</p> <p></p> <p>Medtronic pump users - skip ahead to Insulin Type.</p>"},{"location":"loop-3/add-pump/#omnipod-common-1","title":"Omnipod Common 1","text":""},{"location":"loop-3/add-pump/#pod-nofication-defaults","title":"Pod Nofication Defaults","text":"<p>Here are the common screens for adding Omnipod or Omnipod DASH showing the default settings. You can change the default settings later.</p> <p></p> <p>After you complete these screens, you select the insulin type.</p>"},{"location":"loop-3/add-pump/#insulin-type","title":"Insulin Type","text":"<p>For all pumps, you can choose from the insulin types below.</p> <ul> <li>Insulin Type<ul> <li>Rapid Acting (Novolog, Humalog, Apidra) or Ultra Rapid (Fiasp, Lyumjev)</li> <li>Inhaled insulin (Afrezza) is not offered because it is not used in pumps. Non-Pump Insulin</li> </ul> </li> </ul> <p></p> <p>To add a Omnipod DASH pump, skip ahead to Omnipod Commom 2.</p> <p>Omnipod and Medtronic users should continue to select a RileyLink compatible device.</p>"},{"location":"loop-3/add-pump/#omnipod-or-medtronic","title":"Omnipod or Medtronic","text":""},{"location":"loop-3/add-pump/#select-rileylink","title":"Select RileyLink","text":"<p>For Omnipod and Medtronic pumps, you need a RileyLink compatible device to Loop.  The Device and your phone must be kept close to your pump for Loop to work.</p> <p>A new RileyLink compatible device is not listed next to its slider until after you connect the device to Loop. Find the little toggle in the device list, switch on that toggle, and the RileyLink will appear after the toggle is green.</p> <p>You can personalize the name once it is connected to Loop.</p> <p></p> <p>All RileyLink compatible devices in the nearby area, not already connected to a Loop app, will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue <code>Continue</code> button at the bottom of the screen.</p> <p>If your device does not appear:</p> <ul> <li>Make sure it is charged and turned on</li> <li>Make sure it is not connected to a different phone or app</li> </ul> <p>If you are adding a Medtronic pump, skip ahead to Medtronic.</p>"},{"location":"loop-3/add-pump/#omnipod-common-2","title":"Omnipod Common 2","text":"<p>After selecting a RileyLink for Omnipod, all other actions for Omnipod and Omnipod DASH are the same. Once a pod is paired, the Pump display is the same, except the Omnipod screen has a RileyLink Devices section.</p> <p>For Omnipod (left) and Omnipod DASH (right), you should see the <code>Pair Pod</code> screen.</p> <p></p> <p>At this point - you should hit <code>Cancel</code> (upper right of screen) and review the Omnipod Common page before pairing a pod.</p> <p>New Looper / New Podder</p> <p>Carefully review the Pair Pod instructions and the rest of the Omnipod Common page before continuing. Then, when you are ready, pair a pod.</p> <p>If you are not ready to fill and attach a pod with insulin, try filling a pod with water and let it drip into a ziplock bag to test running Loop on the pod. (Be sure the pod is not near anything when you hit \"Insert Cannula\".)</p> <p>You may enjoy reading Rufus the Bear.</p>"},{"location":"loop-3/add-pump/#medtronic","title":"Medtronic","text":"<p>If you followed this page to add your Medtronic pump, you have completed the first three steps.  If not, you can prepare your pump now, then do those first three steps using Loop (follow the links). All other steps be completed before you Connect the Pump.</p> <ol> <li>Select Minimed 500/700 Series as your pump</li> <li>Select Insulin Type</li> <li>Select RileyLink</li> <li>Prepare Medtronic Pump</li> <li>Connect Pump to Loop</li> </ol>"},{"location":"loop-3/add-pump/#prepare-medtronic-pump","title":"Prepare Medtronic Pump","text":"<p>Loop requires these settings on your Medtronic pump.</p> <p>Check with your users guide (can be found online if you don't have one) for more detailed instructions on your model of pump if you're not sure how to accomplish these steps.</p> <p>If you have basal rates, insulin to sensitivity factor and carb ratios in your pump - these will be overwritten (using the Therapy Setting values) when you connect your pump to Loop. If those rates are important to you, record them prior to continuing.</p> <ul> <li>Turn off Patterns under the basal menu settings.</li> <li>Set the Max Basal and Max Bolus values in the Medtronic pump to be greater than or equal to the values you enter in the Loop Therapy Settings. Otherwise, Loop will not connect to your pump with the error message: <code>Pump Error. Max setting exceeded</code>.</li> <li>Set your pump's <code>Temp Basal Type</code> to <code>Insulin Rate (U/hr)</code>.</li> <li>Set Remote Devices to <code>ON</code> and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn <code>ON</code> the Remote Options.</li> <li>Cancel any currently running extended or dual wave boluses.  Loop cannot loop with those running.</li> <li>If you are using an Enlite CGM through your Medtronic pump, make sure that is configured properly before adding your pump to Loop</li> </ul>"},{"location":"loop-3/add-pump/#connect-pump-to-loop","title":"Connect Pump to Loop","text":"<p>The final step is to connect your Medtronic pump to Loop.</p> <ul> <li>Make sure your RileyLink is turned on and nearby</li> <li>Add your pump's region, color as shown in the graphic below<ul> <li>Note that some Canadian pumps use <code>CM</code> instead of <code>CA</code> for the region code.  Select <code>CA/CM</code> in the dropdown menu.</li> </ul> </li> </ul> <p></p> <ul> <li>Add your pump's 6-digit serial number as shown in the graphic below</li> <li>Click the <code>Connect</code> button to connect the pump to Loop.</li> <li>The spinning icon continues until you see the blue check mark and <code>Continue</code> button<ul> <li>If Loop is not successful at connecting, you will get an error message and stay on this screen</li> <li>If the Delivery Limits (max basal and max bolus) in the pump are lower than values you entered in Loop you will see an error message: <code>Pump Error. Max setting exceeded</code>. (See note below for other reasons you might see this message.)<ul> <li>In this case, edit the values in the pump and then click <code>Connect</code> to retry.</li> </ul> </li> </ul> </li> </ul> <p></p> <p>Max setting exceeded</p> <p>It turns out the \"Max setting exceeded\" error might be displayed even when Max Bolus and Max Basal Rate are already set appropriately on the pump.</p> <ul> <li>If you had previously used a pump that allows multiples of 0.025 U/hr basal rate and you have one of those rates in the basal rate schedule in Loop, you will not be able to connect to a different Medtronic pump that does not support those rates.</li> <li>If this happens to you, cancel out of connecting to that pump<ul> <li>Refer to Prep for Medtronic on the Settings page<ul> <li>Add a simulator so you can Change the scheduled basal rates</li> <li>Delete the simulator</li> </ul> </li> <li>Try again</li> </ul> </li> </ul>"},{"location":"loop-3/add-pump/#bolus-in-progress","title":"Bolus in Progress","text":"<p>If you get an error <code>Bolus in progress</code> on the pump when trying to connect, you probably need to rewind and load insulin into the reservoir.</p> <p>If the pump has alerted that it is out of insulin, you cannot pair to Loop as a new pump.</p>"},{"location":"loop-3/add-pump/#final-steps","title":"Final steps","text":"<p>Once you have successfully connected to the Medtronic pump, click on <code>Continue</code>:</p> <ul> <li>You will then be presented with two more screens, click <code>Continue</code> for each<ul> <li>Pump Clock message</li> <li>Pump is ready for use screen</li> </ul> </li> <li>If you have an x23 or x54 pump, there is one more step - highlighted below</li> </ul> <p>For x23 and x54 Medtronic pump users only</p> For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process.Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app.Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the <code>Continue</code> button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app.This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. <p>Now that your pump is paired with Loop, you should select the type of battery you are using and decide whether to use My Sentry:</p> <ol> <li>Select your pump's battery type (lithium or alakine)<ul> <li>There is a whole page about Medtronic pump batteries</li> </ul> </li> <li>Leave the Preferred Data Source on Event History</li> <li>If you have an x23 or x54 pump, choose whether to use My Sentry (saves phone battery) or not (saves OrangeLink battery)<ul> <li>For other Medtronic pumps, adjusting this setting does not do anything</li> <li>Note that the Orange Link battery drain is substantial<ul> <li>Some users reported batteries needed to be changed every 2-4 days compared to 10 days with MySentry off</li> </ul> </li> </ul> </li> </ol> <p>The Medtronic status and commands available are shown in the Pump Settings page.</p>"},{"location":"loop-3/add-pump/#change-pump-type","title":"Change Pump Type","text":"<p>Before changing from one pump type to another pump type, you must delete the old pump type.</p> <ul> <li> <p>If you are using Medtronic, scroll to the bottom of the pump screen and select <code>Delete Pump</code></p> </li> <li> <p>Before switching between Omnipod and Omnipod DASH or any kind of Omnipod to Medtronic, you must deactivate your current pod</p> <ul> <li>This does not include changing a pod, so long as the pods are of the same type</li> <li>The <code>Switch to other insulin delivery device</code> button will not be available with an active pod</li> <li> <p>Follow along in the GIF below - it cycles though these steps.</p> <ul> <li>Go to the Omnipod screen and tap on Replace Pod</li> <li>Deactivate the pod</li> <li>When deactivation completes, tap on Cancel in upper right<ul> <li>If you hit continue instead, tap cancel when Pair Pod screen appears</li> </ul> </li> <li>On the main Loop screen, tap on the ! No Pod icon</li> <li>Scroll to the bottom of the screen</li> <li>Tap on <code>Switch to other insulin delivery device</code> and follow the directions to complete the task</li> </ul> </li> <li> <p>Now the new pump type can be selected from settings or tapping on the add pump icon on the HUD</p> </li> </ul> <p></p> </li> </ul> <p>The Head-Up-Display at the top of the Loop main screen will now show the add pump icon.</p>"},{"location":"loop-3/displays-v3/","title":"Displays","text":"<p>This page has detailed information about Loop 3 Displays.</p> <p>If you are running Loop v2.2.x, follow this link: Loop v2.2.x Displays.</p>"},{"location":"loop-3/displays-v3/#main-loop-screen","title":"Main Loop Screen","text":"<p>The main Loop screen contains a Heads-Up Display (HUD) at the top (when in portrait mode) with various charts in the middle and a toolbar at the bottom. As part of the HUD, important messages will appear in the Status Row location.</p> <p></p>"},{"location":"loop-3/displays-v3/#landscape","title":"Landscape","text":"<p>When the device is in landscape mode, the HUD is no longer visible, but the chart history is increased.  In landscape, the exact number of hours varies by phone, but on my test phone, each chart displays the last 8 hours of history along with the next 6 hours of glucose prediction. The toolbar is always visible while the chart display can be scrolled up and down to view charts of interest.</p>"},{"location":"loop-3/displays-v3/#heads-up-display","title":"Heads-Up Display","text":"<p>The Heads-Up Display (HUD) shows 3 icons:</p> <ul> <li>Left: Glucose status</li> <li>Middle: Loop status</li> <li>Right: Pump status</li> </ul> <p>There is a <code>Status Row</code> underneath those three icons that is used to display bolus progress, some alerts and important messages. The <code>Status Row</code> is also a button that performs an action depending on the message.  These are described in the table in the HUD Status Row section. The <code>Status Row</code> is only visible in portrait mode, so make sure to orient your device to look for these messages.</p>"},{"location":"loop-3/displays-v3/#charts","title":"Charts","text":"<p>There are several charts on the main screen to help you navigate and understand Loop.  Tapping on a chart on your phone opens up additional information.</p>"},{"location":"loop-3/displays-v3/#glucose-chart","title":"Glucose Chart","text":"<p>The Glucose Chart displays glucose values in your preferred units.</p> <p>mg/dL or mmol/L</p> <p>If your preferred glucose unit is not selected, follow these instructions to change Glucose Units.</p> <p>The vertical scale is automatically adjusted by Loop to be as useful as possible while including the highest and lowest readings in the chart.</p> <p>The horizontal axis is set to go forward from the current time through your DIA (insulin duration), so you can see what Loop thinks glucose will be eventually. It then goes back in time as far as there is room, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time.</p> <p>The glucose Correction Range is shown as a blue bar on the glucose chart.  Single-value ranges (such as 100-100 mg/dL), will have a narrower blue bar.  When a temporary override range is enabled, a darker blue bar indicates the correction range during that override.</p> <p>Negative Glucose Prediction</p> <p>If you have a crazy negative glucose prediction - it is likely that you set an Override with a tiny Overall Insulin Needs percentage.</p> <ul> <li>Do not panic - this is a prediction only; not reality.</li> </ul> <p>Best approach:</p> <ul> <li>Open the loop until the prediction settles down.</li> <li>In future, do not choose a tiny Overall Insulin Needs percentage to force less insulin<ul> <li>Increase the correction range in your override</li> <li>Loop will reduce your basal rate at the next cycle (within 5 minutes)</li> <li>Most users should limit Overall Insulin Needs settings in the range of 50% to 200% (a factor of 2 in each direction)</li> <li>Be cautious adding carbs during an override with a change in Overall Insulin Needs - make sure you understand the effects first</li> </ul> </li> </ul> <p>If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below.</p>"},{"location":"loop-3/displays-v3/#predicted-glucose-chart","title":"Predicted Glucose Chart","text":"<p>The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual glucose.</p> <p></p> <p>The graph at the top of this view will match your Glucose Chart. Below this chart you will see an explanation of the variables Loop takes into account in predicting your future glucose value:  Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction. You can tap on any of the entries to see the effects of that component by looking at the dashed lines.</p> <p>Display Only</p> <p>These elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects.</p>"},{"location":"loop-3/displays-v3/#active-insulin-chart","title":"Active Insulin Chart","text":"<p>The Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive or negative.  Negative IOB results from the suspension of normally scheduled basals.</p> <p>The active insulin displayed in the upper right corner of the chart updates as soon as Loop issues a command to your pump.</p> <p>It may later be modified and the Event History updated if:</p> <ul> <li>The command does not go through and Loop is sure it did not go through</li> <li>The user cancels a bolus</li> <li>The user cancels a temp basal</li> </ul> <p>There are some times when communication is interrupted at a critical moment in the communication cycle. When that happens the Loop Alert - Unable to Reach Pump modal screen appears on your device. Typically, this resolves by itself. Click the link above for more information.</p> <p>Medtronic Only: So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB.</p>"},{"location":"loop-3/displays-v3/#insulin-delivery-chart","title":"Insulin Delivery Chart","text":"<p>The Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as <code>+0 units</code> would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin, is given in the upper right corner of the graph.</p> <p>Please note that for safety reasons, Loop will assume a bolus was successful, even if it is not sure that the pump responded as expected.  Once the communications with the pump settle down, Loop will (almost always) be able to reconcile whether a dose went through as expected. Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event.  This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart as the equivalent of a high temp basal rate.</p>"},{"location":"loop-3/displays-v3/#event-history-reservoir-and-non-pump-insulin","title":"Event History, Reservoir and Non-Pump Insulin","text":"<p>Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are three tabs that can be viewed, with Event History shown by default:</p> <p></p> <ul> <li> <p>Event History: Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability.</p> </li> <li> <p>Reservoir:</p> <ul> <li>Omnipod users should not worry if the reservoir display is blank. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. When a pod is deactivated, the reservoir history for that pod is no longer displayed.</li> <li>Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues.</li> </ul> </li> <li> <p>Non-Pump Insulin: The user can enter insulin taken by another method such as inhaled or by injection. The user can choose a different insulin type than used by the pump. This is explained further at this link.</p> </li> </ul> <p>Previous Pod Insulin History</p> <p>For those who want to delete some recorded insulin near the end of a pod because the site was not absorbing properly, this can be done in Apple Health.</p> <p>Before attempting that modification, please read this entire section on How does Loop use Apple HealthKit in detail.</p> <p>Pay special attention to Insulin and Apple HealthKit section.</p>"},{"location":"loop-3/displays-v3/#active-carbohydrates-chart","title":"Active Carbohydrates Chart","text":"<p>The Carbohydrate chart displays the carbs used by Loop to predict glucose changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen.  Please read the Meal Entry page for more information about entering and editing carb entries.</p>"},{"location":"loop-3/displays-v3/#ice-chart","title":"ICE Chart","text":"<p>Click this link for even more details about Insulin Counteraction Effects. It's a good idea to read both the Meal Entry and ICE pages - this is an important concept.</p>"},{"location":"loop-3/displays-v3/#toolbar","title":"Toolbar","text":"<p>The toolbar is always found at the bottom of the main Loop screen in both portrait and landscape orientation. By tapping on one of these icons, you can begin a Meal Entry, start a Pre-Meal Range, initiate a Manual Bolus, select an Override or go to the Loop Settings screen.</p> <p>From left to right, the icons are:</p> <ul> <li> <p>Meal Entry- click on this icon to enter meals. Detailed info regarding how to enter, save, and edit meal entries can be found in the Meal Entry page.</p> <ul> <li>For those used to entering carbs on a Medtronic pump or coming from non-Loop DIY systems, Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the meal entry tool.</li> </ul> </li> <li> <p>Pre-Meal Range - click on this icon to start the Pre-Meal Range for one hour or until carbs are entered. (plate symbol turns dark green when active)</p> </li> <li> <p>Bolus - click on this icon to open the Bolus tool.</p> </li> <li> <p>Overrides - click on this icon to select a saved or custom Override or to cancel an override if one is active (heart symbol turns dark blue when active)</p> </li> <li> <p>Loop Settings - click on this icon to make changes to any of your Loop settings.</p> </li> </ul>"},{"location":"loop-3/displays-v3/#hud-details","title":"HUD Details","text":"<p>Very Detailed Section</p> <p>This section is packed with an incredible amount of detail. Remember it exists and come back when you need a reference to Loop 3 icons and messages.</p> <p>If you are a new looper your eyes may glaze over the first time through. Don't worry. But do come back and read this section again after you've used the system in Open Loop mode (before you enable Closed Loop mode). And then come back again after a day or so of closed loop testing.</p> <p>Experienced loopers need to read the detail on this page. There are important changes from Loop 2.2.x.</p> <p>The Heads-Up-Display, visible in portrait mode, shows the Glucose Status on the left, the Loop Status in the middle and the Pump Status on the right. Once a CGM and pump have been added to Loop, the Loop Status icon will update and ideally be similar to the graphic below.</p> <p></p> <ul> <li>The Glucose is displayed in the same units as the selected CGM<ul> <li>If units are incorrect, quit Loop, allow your CGM app to update and then restart Loop</li> <li>You can override the display units, later, by selecting the units in Apple Health</li> </ul> </li> <li>The green Loop icon indicates that within the last 5 minutes Loop completed a cycle</li> <li>The Pump Status indicates the scheduled basal rate is running<ul> <li>The +0.0 U display means the basal currently running is 0 U/hr different from the scheduled basal</li> </ul> </li> </ul>"},{"location":"loop-3/displays-v3/#loop-status-icon","title":"Loop Status Icon","text":"<p>The Loop Status Icon is the colored circle in the center of the main Loop display.  The three colors displayed are Green, Yellow or Red.  In all cases, more information is displayed by tapping on the Loop Status Icon, which brings up a modal message indicating the last time a loop cycle completed and other descriptive text.</p>"},{"location":"loop-3/displays-v3/#loop-cycle","title":"Loop Cycle","text":"<p>A complete Loop cycle, at high level, includes these steps:</p> <ul> <li>Current Glucose is updated</li> <li>Glucose prediction is calculated along with any recommended change to insulin delivery to maintain future glucose above safety threshold and within correction range</li> <li>Messages are sent to the pump to modify insulin delivery if required and request current pump status</li> <li>Pump acknowledges the loop messages</li> </ul> <p>This table shows examples of Loop Status Icons and what each icon means.</p>  Icon Meaning A green circle indicates the app is in Closed Loop mode and it completed a cycle within the last 5 minutes. A yellow circle indicates the app is in Closed Loop mode and it has completed a cycle in the last 5-15 minutes.It is not unusual to have a few instances of yellow loops per day.  They can be caused by being out of range (physically), Bluetooth or RileyLink \u201cnoise\u201d interference, or even that the pump was giving a bolus.Most yellow loops will self-resolve without needing any special troubleshooting. A red circle indicates the Loop has not completed in over 15 minutes.This is not a typical state, and you should troubleshoot the problem.In this case, either the Glucose Icon or the Pump Icon or both will display an <code>alert</code> graphic. When the circle is open at the top, Loop is operating in \u201copen-loop\u201d mode. The color code is the same as for closed loop except the cycle involves updating predictions from available blood glucose values and obtaining pump status; but the app will not make any automated changes in insulin delivery.While Manual Temp Basal (MTB) is active, the Open Loop icon will be displayed until MTB expires or is cancelled. Note that MTB is only implemented in Loop 3 for Omnipod and Omnipod DASH, at the current time. <p>Fun Fact</p> <p>The loop status icon will pulse slightly when Loop is communicating with the pump.  The pulsing will stop when the communication has completed (green loop) or given up (yellow or red loop).</p>"},{"location":"loop-3/displays-v3/#example-loop-status-modal-messages","title":"Example Loop Status Modal Messages","text":"<p>When you tap on the Loop Icon on the main screen, you will see a message similar to one of those shown below. The message content depends on:</p> <ul> <li>Closed Loop enabled or disabled</li> <li>How long since the last successful Loop Cycle; &lt;20 minutes, &lt;4 hours, more than 4 hours</li> </ul> <p>On your phone, you should see the green, yellow or red icon in the background - the color is not captured when taking screenshots of the modal message.</p> <p></p>"},{"location":"loop-3/displays-v3/#glucose-status-icon","title":"Glucose Status Icon","text":"<p>The table below shows examples of the Glucose Status Icon and what each icon means. The Glucose Color Code is provided below the table.</p>  Icon Meaning The current glucose reading is displayed. It can be from the CGM or from a finger stick. The value must have been updated within the last 15 minutes to be displayed.For the example shown, a valid trend arrow is available and is blue. Color codes are explained at this link. The last glucose reading from the CGM or from a finger stick is stale, i.e., it was acquired more than 15 minutes ago. In this case, the glucose prediction will stop updating.The HUD Status Row message enables user to enter fingerstick glucose value if desired.If in closed-loop mode, no changes will be made to insulin delivery. If a temporary basal is running, it continues running for the scheduled duration. Once the temporary basal expires, the pump resumes the scheduled basal rate.When the app issues a temporary basal, the duration is always 30 minutes.The user can enter a manual temporary basal duration up to the limits of their pump. If no CGM is currently selected, the Add CGM icon is displayed. The user can add a CGM following these instructions. If no CGM is currently selected, but a glucose value was acquired within the last 15 minutes (from fingerstick or a different CGM), that value is displayed along with a plus sign. By tapping on the icon, the user can add a CGM following these instructions."},{"location":"loop-3/displays-v3/#glucose-color-code","title":"Glucose Color Code","text":"Glucose Range Glucose Value Color Trend Arrow Color 55 mg/dL (3.0 mmol/L) or below red regardless of background color red 56 to 79 mg/dL (3.1 and 4.4 mmol/L) black (light mode) / white (dark mode) yellow 80 to 199 mg/dL (4.4 to 11.0 mmol/L) black (light mode) / white (dark mode) blue 200 mg/dL (11.1 mmol/L) or above black (light mode) / white (dark mode) yellow"},{"location":"loop-3/displays-v3/#cgm-display","title":"CGM Display","text":"<p>Tapping on the CGM icon in the HUD shows more information about the last CGM reading.</p> <p>For Dexcom G5/G6 and Share, the same screen is obtained by tapping on Loop Settings-&gt;CGM.</p> <p>For Nightscout Remote CGM, the Nightscout URL is opened when tapping on the CGM icon in the HUD, while the credential sections is shown when tapping on Loop Settings-&gt;CGM.</p> <p>The graphic below shows the result of tapping on the CGM icon when using a Dexcom G6.  It includes the time of the last reading to the nearest second, along with other information about that sensor and transmitter. It also has an option to go to the Dexcom app on the same device.</p> <p></p>"},{"location":"loop-3/displays-v3/#pump-status-icon","title":"Pump Status Icon","text":"<p>The nominal pump icon displays high-level status information for the pump with two main components: left side is the basal delivery status and right side is the reservoir status. For Pods, a lifecycle line is displayed underneath the pump icon during the last 24 hours of nominal pod life.</p> <ul> <li>The basal delivery status displays the enacted temp basal change relative to the scheduled basal.  For example, for a scheduled basal of 0.45 U/hr<ul> <li>If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.25 U</li> <li>If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.05 U</li> <li>When scheduled basal is running, the icon displays +0.0 U</li> </ul> </li> <li>But what about Overrides?<ul> <li>Using scheduled basal of 0.45 U/hr with override set to 70%, the \"override basal rate\" is 0.315 U/hr<ul> <li>That is a value that cannot be set in the pump, but Loop uses it for IOB calculations<ul> <li>If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.115 U</li> <li>If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.185 U</li> </ul> </li> </ul> </li> </ul> </li> <li>The reservoir status indicates insulin remaining graphically and displays a value when less than 50 U remain.<ul> <li>For Medtronic Pumps, the reservoir display indicates the level graphically.</li> <li>For Pods, the reservoir graphic is constant until the pod begins to report reservoir level when less than 50 U remain.</li> </ul> </li> </ul> <p>The table below shows examples for a few nominal Pump Status Icons and Alert messages that might be shown.  In all cases, tapping on the Pump Status Icon opens the Pump Settings screen with more information.</p>  Icon Meaning This nominal pump status graphic is for a Pod with temp basal less than scheduled basal rate and no reported reservoir level. This nominal pump status graphic is for a Medtronic pump running scheduled basal rate and with a half-full reservoir.For a Pod, the reservoir shows full until pod estimates reservoir is below 50 U remaining. This nominal pump status graphic is for a pump running a high temp basal rate with the reservoir level reported. When the reservoir level is above the notification level, the reservoir graphic is orange. This pump status graphic indicates 2 alerts: (1) the 15 U reservoir level is less than the notification level of 20 U selected by this user and (2) a small clock icon is added to the display to indicate the phone time zone and pump time zone do not match. When the reservoir level is below the notification level, the reservoir graphic is yellow.Follow the link for time zone information. This alert message indicates the reservoir reports 0 U. Although  pumps will continue to deliver some insulin after this point (max of 4 U for pods, or until all insulin is gone for both pods and Medtronic), the user should be aware that insulin delivery could stop at any moment.Note that if you see a display of 0 U in yellow, that means there is 0.5 U or less reported by the pump. This alert message indicates no pod is currently paired so no insulin is being delivered.Tap on the icon to reach the pod setting screen and pair a new pod, or switch to a different source for providing insulin. This alert message indicates all insulin delivery has been suspended. A Status Row message appears to enable the user to resume delivery with one tap. Alternatively, insulin can be resumed by tapping on the Pump Icon to enter the Pump Setting display and resume from that screen. This alert message indicates the user has initiated a manual temp basal (MTB). While the MTB is active, the Loop Icon Status will also display an Open Loop symbol to indicate no automatic adjustments are made until MTB expires or is canceled. The lifecycle indicator across the bottom of the pod status indicates a pod within the final 24 hours of nominal life.Tapping on the icon takes the user to the pump settings display where the rate and duration of the MTB are displayed. This alert message indicates it has been more than 15 minutes since the app was able to communicate with the pump.Follow these troubleshooting steps. This alert message indicates no pump has been added. Follow the instruction for adding a pump."},{"location":"loop-3/displays-v3/#time-zone","title":"Time Zone","text":"<p>Loop allows your pump to have a different time zone from your phone.</p> <ul> <li>For Medtronic - the pump time shows on the pump display<ul> <li>Always use Loop to set your pump time</li> </ul> </li> <li>For Omnipod Common - there isn't a clock on pods, but Loop has a concept of \"pump\" time for that pod</li> </ul> <p>Your daily schedule for basal rates, correction ranges, insulin sensitivity factors and carb ratios is displayed with respect to midnight on \"pump time\". When you first Add Pump to Loop, the pump and phone are in the same time zone, but it's important to understand what happens when the time zone changes on the phone.</p> <ul> <li> <p>The scheduled rates for basal, correction range, ISF and CR follow  the pump time</p> <ul> <li>This is true even when your phone updates because of a new time zone (travel) or because of daylight savings (summer) time</li> <li>This is true across pod changes</li> </ul> </li> <li> <p>To change the pump time zone to match your phone, select the Pump Settings display</p> <ul> <li>An active row is available when phone and pump time zones are different</li> <li>Touch the active row to update the pump time zone to phone time zone<ul> <li>Medtronic: Loop sets the pump time to the current phone time</li> <li>Omnipod Common: Loop sends your scheduled basal rates to your pod based on phone time</li> <li>Make sure your gear is close together (phone, pump and, if needed, RileyLink)</li> </ul> </li> </ul> </li> </ul> <p>The display to modify time zone is slightly different for Loop 2.2.x and Loop 3 (links below):</p> <ul> <li>Loop 3 Omnipod</li> <li>Loop 3 Medtronic</li> <li>Loop 2.2.x</li> </ul> <p>You can choose to leave the pump and phone time zones different; the pump icon on the HUD (Loop 3 only) will show the clock icon to remind you. Many people do this for short trips.</p>"},{"location":"loop-3/displays-v3/#other-time-changes","title":"Other Time Changes","text":"<p>What about other time changes?  Suppose the iOS -&gt; General -&gt; Time &amp; Date is modified to manually change the time, but the time zone is not adjusted. (Sometimes this is done to defeat limits on games. Do Not do this on a Looping phone.  If you have an \"old\" glucose reading in the \"future\" - Loop will not predict correctly which may have dangerous consequences.) There will not be an obvious display in the HUD or Omnipod screen (which keys off time zone) but you will get regular warnings that phone does not have automatic time set.</p> <p>Loop 3 will display this warning modal screen if it detects a problem with the Phone time. It leaves it up the user to decide what action should be taken. To make this warning stop, go to iOS -&gt; General -&gt; Time &amp; Date and enable Set Automatically. </p> <p></p>"},{"location":"loop-3/displays-v3/#hud-status-row","title":"HUD Status Row","text":"<p>The Status Row is located immediately below the CGM, Loop and Pump Icons and is used to provide status, action buttons and information. The messages in the table are in order of priority. For example, a <code>No Recent Glucose</code> message is displayed even when an <code>Override</code> is active.</p> <p>Bolus In Progress</p> <p>The bolus messages are displayed with the highest priority:</p> <ul> <li>If another message is shown when a bolus starts, the bolus message is displayed instead</li> <li>To return to the other message, such as Override or <code>No Recent Glucose</code>, you must either wait for the bolus to complete or cancel the bolus by tapping on the <code>Status Row</code></li> <li>To ensure you do not accidentally cancel a bolus, keep the phone locked when not in use</li> </ul> Status Row / Meaning When the user issues a manual bolus through the app, a <code>Starting Bolus</code> information message is displayed. Tapping on this message has no action.As soon as the app issues a command to the pump (or sends it to the RileyLink to be delivered to the pump), the bolus in progress message appears. As soon as a bolus is started, from either a manual command or an automatic bolus, the bolus in progress message is displayed. Tapping on the <code>Status Row</code> causes the app to attempt to cancel the bolus. The app can only cancel a bolus if communication is active between the app and the pump.The message says <code>Bolused</code>value<code>of</code>total<code>U</code>. The value is based on a timer, so it is possible for an occlusion or other fault to occur while the app indicates bolus is in progress.In case of a fault, the user can tap on the pump icon to force a new pump status reading. For the case of pods, this allows you to  silence a screaming pod quickly. Once the app communicates with the pump, the actual delivery status will be updated. If the user taps on the bolus in progress message in the <code>Status Row</code>, the message changes to Canceling Bolus. Tapping on this message has no action. As soon the app determines that the pump is suspended, the <code>Insulin Suspended, Tap to Resume</code> message is displayed. Tapping on the <code>Status Row</code> resumes scheduled basal delivery if communication is active between the app and the pump.Medtronic pump users who suspend directly on the pump will notice a delay before this message is displayed. It is best to use the app Pump Settings screen to suspend the pump. If a higher priority message is not displayed in the <code>Status Row</code> and the glucose value is stale (more than 15 minutes old), the <code>No Recent Glucose, Tap to Add</code> message is displayed. Tapping on the <code>Status Row</code> opens the Manual Bolus screen for entry of a Fingerstick Glucose. Note that if you choose not to accept a recommended bolus on this screen but you want to save the Fingerstick value, you need to tap the Bolus line to force it to 0 U and then tap <code>Save Without Bolusing</code>. However, be aware that, in Closed Loop mode, the app will use that glucose value for the next 15 minutes and may adjust insulin delivery accordingly. If a higher priority message is not displayed in the <code>Status Row</code> and an override is active, the override symbol and name, along with the time at which the override expires, is displayed. Tapping on the <code>Status Row</code> opens the screen for that particular override to enable the user to edit the override. Note that any changes made to that override are applied just to the current session. If you want the override permanently modified, refer to the Overrides instructions. If a higher priority message is not displayed in the <code>Status Row</code> and the Pre-Meal Range is active in the toolbar, the <code>Pre-meal Preset, until time stamp</code> is displayed. Tapping on the status row has no effect for this message.New with Loop 3: The Pre-Meal Preset can be engaged with an Override. When both are active, the Pre-Meal Range supersedes the range of the active Override, but the other settings for that Override still apply. When both are active, the <code>Status Row</code> message reflects the Override with both the Pre-Meal and Override icons in the toolbar highlighted."},{"location":"loop-3/features/","title":"Features","text":""},{"location":"loop-3/features/#work-in-progress","title":"Work in Progress","text":"<p>work in progress</p> <p>This page will be deleted after all the relevant information is incorporated into the appropriate locations as part of the development process for Loop 3.</p> <p>Now that Loop 3 has been released, this page may be updated, but leaving it alone for now.</p> <p>This page discusses updated versions of Loop features as well as new capabilities provided with Loop 3.</p> <p>Loop 3 Displays</p> <p>One thing you may notice on some screens is the primary button, with associated information message, is always visible at the bottom of even small screens.  You may need to scroll to see intermediate rows. </p> <p>For example, if the default action on a bolus screen is to deliver the recommended bolus, that button is visible and active. The button remains fixed as other portions of the screen are scrolled up and down. When you make changes to selections, then the information displayed and the button label updates to reflect the action taken if you tap on the button.</p> <p>There are other screens, like the Onboarding and Therapy Settings screens, where you should read all the provided information.  Those screens require you to scroll to the bottom before being able to hit <code>Continue</code> or <code>Save</code>.</p>"},{"location":"loop-3/features/#non-pump-insulin","title":"Non-Pump Insulin","text":"<p>If insulin is taken from a different source and the user wants to let Loop know, there is a new method in Loop 3.</p> <p>With Loop 2.2.x, the user manually entered the Insulin dose into the Apple Health app. Loop then imported that value.</p> <p>With Loop 3, the \"old\" method still works, but there is a new method for entering this information. This method enables the user to indicate the type of insulin so that the appropriate model is used by Loop. An updated <code>Glucose</code> prediction chart is displayed prior to saving the dose.</p>"},{"location":"loop-3/features/#enter-non-pump-insulin-before-carbs","title":"Enter non-pump insulin before carbs","text":"<p>WARNING</p> <p>If you are planning to enter non-pump insulin to cover carbs and you do NOT want Loop to automatically start increasing insulin based on the carb entry, enter the non-pump insulin first and then add the carbs.</p> <p>To find out what Loop recommends, without actually dosing with Loop:</p> <ul> <li>Wait for a CGM entry (or fingerstick) to appear in the HUD<ul> <li>Enter the carbs and continue to the bolus screen, i.e., do not save carbs</li> <li>Note the recommended bolus, but do not actually bolus</li> <li>Back up to the carb entry screen and <code>Cancel</code></li> </ul> </li> <li>Go to the non-pump insulin screen and enter the bolus amount you've decided to take, and select the model if it's different from your pump<ul> <li>Don't forget to actually take the insulin</li> <li>Add the carb entry and save the carbs without bolusing</li> </ul> </li> </ul> <ol> <li> <p>Tap on either of the insulin charts (Active Insulin or Insulin Delivery) on the home screen to display the <code>Insulin Delivery Screen</code>. This screen has 3 tabs.</p> <ul> <li>Event History (default) is similar to Loop 2.2.x; however, the event history from a prior pod is not displayed once it is deactivated</li> <li>Reservoir is similar to Loop 2.2.x; however, the reservoir value from a prior pod is not displayed once it is deactivated</li> <li>Non-Pump Insulin is a new feature with Loop 3</li> </ul> </li> <li> <p>Select the <code>Non-Pump Insulin</code> tab to bring up the graphic shown below</p> <ul> <li>Tap on the + sign (green solid lines)</li> <li><code>Log Dose</code> screen is displayed showing the current <code>Glucose</code> prediction</li> <li>The default insulin type is that used by the pump</li> <li>To modify Insulin Type, tap on that row (red dashed lines)<ul> <li>Picker wheel allows other insulin types to be selected</li> <li>Note that some insulin types, such as Afrezza are only available for non-pump insulin selection</li> </ul> </li> <li>Tap on the <code>Bolus</code> row (blue dash-dot lines) to bring up a keyboard<ul> <li>The <code>Glucose</code> prediction chart updates automatically based on the value entered in the Bolus row</li> <li>Tip, add 0.001 to the actual dose to make it easier to see if reviewing in Apple Health</li> <li>Once the user selects <code>Done</code> on the keyboard display, the entered value is displayed on the <code>Bolus</code> row and the <code>Log Dose</code> button changes from gray to blue</li> <li>Tap on <code>Log Dose</code> to record or <code>Cancel</code> to quit</li> </ul> </li> </ul> </li> </ol> <p></p>"},{"location":"loop-3/features/#bolus-entry","title":"Bolus Entry","text":"<p>The bolus following carbs (<code>Meal Bolus</code>) and manual bolus (<code>Bolus</code>) screens are updated from Loop 2.2.x version. There is still a predicted <code>Glucose</code> chart that actively updates as the bolus value is updated and various buttons. </p> <ul> <li>With Loop 2.2.x<ul> <li>The Recommended Bolus is provided but the default for the Bolus value is 0</li> <li>If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row</li> </ul> </li> <li>With Loop 3<ul> <li>The Recommended Bolus is provided AND the default for the Bolus is the recommended value</li> <li>If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry</li> </ul> </li> </ul> <p>Blue Means Active</p> <ul> <li>The blue color indicates an active button, whereas a grey button is inactive.</li> <li>The value displayed on the <code>Bolus</code> row is blue to indicate if you tap on that, you can edit the value</li> </ul>"},{"location":"loop-3/features/#meal-bolus","title":"Meal Bolus","text":"<p>When the <code>Meal Bolus</code> screen is entered following a carb entry or edit action, the active button might be <code>Save and Bolus</code> or, if no bolus was recommended, <code>Save without Bolusing</code>. The <code>Save</code> refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen.</p>"},{"location":"loop-3/features/#accept-recommendation","title":"Accept Recommendation","text":"<p>In the graphic below, the user enters carbs and taps continue to display the Meal Bolus screen.</p> <ul> <li>The left graphic shows a case where a bolus is recommended - tapping on the <code>Save and Deliver</code> button saves the carbs and delivers the bolus</li> <li>The right graphic shows a case where no bolus is recommended - tapping on the <code>Save without Bolusing</code> saves the carbs</li> <li>Note that these graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the <code>Recommended Bolus</code> and <code>Bolus</code> rows</li> <li>For both graphics<ul> <li>Active Carbs and Active Insulin are displayed above the <code>Glucose</code> prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved)</li> <li>The Bolus Summary is presented below the <code>Glucose</code> prediction graph with three rows:<ul> <li><code>Carb Entry</code>, the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the <code>&lt; Carb Entry</code> button at upper left</li> <li><code>Recommended Bolus</code> displays what Loop recommends for that proposed <code>Carb Entry</code></li> <li><code>Bolus</code> default display is what Loop recommends, but user can edit that value</li> </ul> </li> </ul> </li> </ul> <p></p> <p>If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged.</p>"},{"location":"loop-3/features/#modify-bolus","title":"Modify Bolus","text":"<p>This section is a continuation of the information presented in the Accept Recommendation portion of the <code>Meal Bolus</code> section. In the graphic below, the user overrides the recommended bolus.</p> <ul> <li>The left side shows a modified bolus less than the recommended bolus</li> <li>The right side shows a modified bolus greater than the recommended bolus</li> <li>Note that the <code>Glucose</code> prediction graph updates based off the <code>Bolus</code> value, giving the user the opportunity to accept or change their proposed value before tapping <code>Save and Deliver</code></li> <li>At the next Loop cycle, the app modifies insulin delivery based on the saved information<ul> <li>For the example with bolus less than the recommended amount:<ul> <li>Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the <code>Correction</code> range</li> <li>The recommendation to add insulin when the current glucose is below the <code>Correction Range</code> is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the <code>Safety Threshold</code></li> </ul> </li> <li>For the example with bolus greater than the recommended amount:<ul> <li>Loop will probably issue an automatic temporary basal of 0 U/hr</li> <li>This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post-meal spikes</li> </ul> </li> </ul> </li> <li>Remember - the <code>Glucose</code> prediction is what happens if you <code>Save and Deliver</code> and then no further adjustments are made to insulin delivery by Loop</li> </ul> <p></p>"},{"location":"loop-3/features/#manual-bolus","title":"Manual Bolus","text":"<p>When the <code>Bolus</code> screen is entered directly from the toolbar, the button choices are <code>Enter Bolus</code> if none is recommended, <code>Deliver</code> if a value is on the <code>Bolus</code> row, or <code>Cancel</code> using the button on the upper left. The user can also tap on the value on the <code>Bolus</code> row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero.</p> <p>Other alert messages might be displayed if the pump or CGM is not active.  Those are found on the Loop 3 Displays page.</p> <p>The two graphics below are examples of manual bolus screens. </p> <ul> <li>In the first graphic, no bolus was recommended<ul> <li>If you tap on the <code>Enter Bolus</code> button at the bottom, it brings up a screen to enable you to type in an amount and then <code>Deliver</code> it. </li> <li>Alternatively, you can tap the <code>0</code> amount in the <code>Bolus</code> row and perform the same action as the <code>Enter Bolus</code> button</li> <li>If you do not want to override the recommendation, hit the <code>Cancel</code> button at the upper left.</li> </ul> </li> </ul> <p></p> <ul> <li>In the second graphic, a recommended amount is shown<ul> <li>If you tap on <code>Deliver</code> that recommended dose is delivered</li> <li>If you tap on the value on the <code>Bolus</code> row, you can override the amount</li> <li>The amount displayed on the <code>Bolus</code> row is modified to 0 U with the first tap - at that point, you may enter a new value or tap <code>Cancel</code> using the button at the upper left of the screen</li> </ul> </li> </ul> <p></p>"},{"location":"loop-3/features/#remote-carb-bolus","title":"Remote Carb / Bolus","text":"<p>Loop 3 includes a feature for remote input of Carbohydrates and Bolus, enabling caregivers who are not physically present to better assist the individual who requires support in managing Loop.</p> <p>Please read the documentation about this feature carefully to ensure proper configuration and use: * Remote Command Overview</p> <p>WARNING</p> <p>You will be using this feature at your own risk, like any other Loop code you build. It is very important you completely read and re-read the Remote Command Overview before getting started.</p> <p>There are validation and troubleshooting steps for each section of the guide. </p> <p>Please make sure not to skip sections as this makes it difficult to troubleshoot.</p> <p>Be aware:</p> <ul> <li>Apple limits how many push notifications (used by this feature) can be received on an iOS device</li> <li>If the system feels too many are being sent, it may begin to throttle notifications</li> <li>There is no published limit, but consider limiting it to 1 per hour</li> <li>When on cellular data, there may be further limitations to protect your data usage</li> </ul>"},{"location":"loop-3/features/#new-with-loop-3","title":"New with Loop 3","text":"<p>The Loop 3 app, building off work by Tidepool and DIY contributors, provides a major upgrade in user safety, user experience, and user interface with the same great Loop algorithm.</p> <p>Here are some highlights:</p> <ul> <li>Onboarding protocol with guardrails to help configure settings</li> <li>Streamlined main screen display and user experience</li> <li>Better alerts and notifications</li> <li>Omnipod Dash compatibility</li> <li>Fingerstick blood glucose prompts when data is stale</li> <li>Non-pump insulin entry within the app</li> <li>Remote capability for Carbohydrate/Bolus input</li> </ul>"},{"location":"loop-3/loop-3-overview/","title":"Overview","text":""},{"location":"loop-3/loop-3-overview/#loop-3-set-up-overview","title":"Loop 3 Set Up Overview","text":"<p>Congratulations on Building Loop!</p> <p>The first time you build Loop 3, the app takes you through the Onboarding process. Review this page before using your app.</p> <p>Suggestion</p> <ul> <li>Read this page all the way through without clicking on any links</li> <li>Scroll back to the top of the page and click the links for more detail on particular topics as needed<ul> <li>Use the back button on your browser to return from a link</li> </ul> </li> </ul>"},{"location":"loop-3/loop-3-overview/#brand-new-loopers","title":"Brand New Loopers","text":"<ul> <li>Review these 3 pages in detail before you touch any buttons on your app<ul> <li>Onboarding</li> <li>Add CGM</li> <li>Add Pump</li> </ul> </li> <li> <p>Review these pages from the Intro tab of LoopDocs</p> <ul> <li>Test Settings</li> <li>Loop Data</li> <li>Meet the Community</li> </ul> </li> <li> <p>Read the rest of the pages listed under All Loopers, below. </p> <ul> <li>The information on the pages will become clearer as you learn to use the app.  You can find a page later using the search function</li> <li>Complete the Onboarding steps to set up Loop</li> <li>Learn to use Loop starting with the Open Loop page</li> <li>Once you are comfortable with manually controlling Loop and have settings that work with the algorithm, move on to the Closed Loop page</li> <li>Make suggestions if you think parts of LoopDocs could be clarified, especially from the viewpoint of a brand-new Looper</li> </ul> </li> </ul>"},{"location":"loop-3/loop-3-overview/#experienced-loopers","title":"Experienced Loopers","text":"<ul> <li>Skim these 3 pages before you touch any buttons on your app<ul> <li>Onboarding<ul> <li>Read in detail Onboarding: Experienced Loopers</li> </ul> </li> <li>Add CGM</li> <li>Add Pump<ul> <li>If switching to DASH, read Change Pump Type</li> </ul> </li> </ul> </li> <li>Read the rest of the pages listed under All Loopers, below<ul> <li>Some of the screens and user interface changed with Loop 3</li> <li>Many of the new Loop 3 features are described</li> <li>Reach out if information is missing or needs to be clarified, suggestions are always welcome</li> </ul> </li> <li>LoopDocs design<ul> <li>Sections specific to experienced Loopers are after the sections for new Loopers</li> <li>The goal is to make LoopDocs easier for new Loopers to navigate</li> <li>Experienced Loopers can scroll ahead, check the page table of contents or use the search feature</li> </ul> </li> </ul>"},{"location":"loop-3/loop-3-overview/#all-loopers","title":"All Loopers","text":"<p>These pages have a lot of detailed Loop information.</p> <ul> <li>Settings</li> <li>Therapy Settings</li> <li>Optional Services</li> <li>Displays</li> </ul> <p>And a lot of detailed information about Status and Commands for:</p> <ul> <li>RileyLink</li> <li>Omnipod Common</li> <li>Medtronic</li> </ul> <p>Medtronic Users</p> <p>You must select Insulin Type on your pump settings screen after updating from Loop 2 to Loop 3 and completing the onboarding. Without an insulin type, closed loop will not work.</p>"},{"location":"loop-3/loop-3-overview/#safety","title":"Safety","text":"<p>Please be informed so you can Loop safely.</p> <p>Consult with your health care professional regarding your diabetes management.</p> <p>Open Source</p> <ul> <li>The Loop app is an open source project used by many, but it is not approved for therapy by any government organization.</li> <li>You take full responsibility for building and running this system and do so at your own risk.</li> </ul>"},{"location":"loop-3/medtronic/","title":"Medtronic Pump","text":""},{"location":"loop-3/medtronic/#pump-settings","title":"Pump Settings","text":"<p>To bring up the Pump Settings display, tap on the pump icon in the Heads Up Display (HUD) or your connected pump in the Loop Settings screen.</p>"},{"location":"loop-3/medtronic/#medtronic-status-and-commands","title":"Medtronic Status and Commands","text":"<p>Medtronic status and commands are found in the Pump Settings screen shown in the graphic below. The bottom section with Pump ID, Firware Version and Region is configured at the time the pump is connected to Loop. You cannot edit those lines.</p> <p></p>"},{"location":"loop-3/medtronic/#suspend-delivery","title":"Suspend Delivery","text":"<p>Tapping on the <code>Suspend Delivery</code> row will suspend all insulin delivery: basals, temp basals, and boluses in progress. When you press <code>Suspend Delivery</code>, the label changes to <code>Suspending</code> while Loop is communicating with the pump. When the label changes to <code>Resume Delivery</code>, all insulin delivery is stopped until the user resumes using the HUD Status Row, the Pump Settings screen or on the pump itself.</p> <p>As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. Make sure your RileyLink device is powered on and close to the phone and pump.</p> <p>When the phone is in portrait mode, so the HUD is visible:</p> <ul> <li>The user is alerted that pump is suspended by the HUD Pump Status Icon.</li> </ul> <p></p> <ul> <li>The HUD Status Row message can be tapped to resume delivery.</li> </ul> <p></p> <p>You can still suspend and resume insulin on the pump itself.  It may take until the next Loop cycle (typically less than 5 minutes), but Loop will detect that the pump is suspended or basal is resumed and the HUD Status Row will update.</p> <p>If you request a manual bolus with Loop while the pump is suspended, Loop resumes basal delivery as well. No automated boluses are initiated while suspended, only manual ones.</p>"},{"location":"loop-3/medtronic/#insulin-type","title":"Insulin Type","text":"<p>You select insulin type when connecting to a new Medtronic pump.</p> <p>If you install Loop 3 over Loop 2 with the pump already configured, be sure to set the Insulin Type on the pump settings screen. If no insulin type is set, you will get red loops.</p> <p>Use this row if you switch to a different type of insulin.</p> <ul> <li>The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences</li> <li>If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model</li> </ul>"},{"location":"loop-3/medtronic/#pump-battery-type","title":"Pump Battery Type","text":"<p>The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump.</p>"},{"location":"loop-3/medtronic/#preferred-data-source","title":"Preferred Data Source","text":"<p>Leave the Preferred Data Source set to on Event History.</p>"},{"location":"loop-3/medtronic/#use-mysentry","title":"Use MySentry","text":"<p>The <code>Use My Sentry</code> row only shows up on pumps that support it.</p> <p>Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly.  This option allows you to turn off MySentry within the Loop app.</p> <p></p>"},{"location":"loop-3/medtronic/#devices","title":"Devices","text":"<p>This allows access to the RileyLink screen for each connected RileyLink compatible device.</p>"},{"location":"loop-3/medtronic/#pump-battery-remaining","title":"Pump Battery Remaining","text":"<p>Loop uses the Pump Battery Type to estimate Pump Battery Remaining. For information about the method, review MDT Pump Battery.</p>"},{"location":"loop-3/medtronic/#pump-time","title":"Pump Time","text":"<p>Loop keeps the pump time up to date with the phone time automatically. As shown in the graphic in the next section, Loop allows differences in time zone. The user can decide when and if to modify the pump time zone, if different from the phone time zone. If the Pump Time shows as yellow, then the time zones do not match.</p>"},{"location":"loop-3/medtronic/#change-time-zone","title":"Change Time Zone","text":"<p>During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to <code>Change Time Zone</code>. Please review Time Zone for more details.</p> <p>When the time zone for the pump and phone are not the same, you will notice a small clock symbol in the upper right of the pump status icon.</p> <p></p> <p>Navigate to the Pump Settings screen. Right below the Pump Battery Remaining and Pump Time rows, there is a new row <code>Sync to Current Time</code>. When you tap that row, the time for the Medtronic pump is updated to the current Loop phone time.</p> <p></p>"},{"location":"loop-3/medtronic/#delete-pump","title":"Delete Pump","text":"<p>If you want to switch to a different pump you must first delete this one:</p> <ul> <li>Deselect your RileyLink compatible device<ul> <li>Move the slider(s) so it is no longer green</li> </ul> </li> <li>Tap on <code>Delete Pump</code></li> <li>Acknowledge you really mean it when asked by tapping <code>Delete Pump</code> again</li> <li>Add a new pump</li> </ul> <p>For more information, follow this link: Modify Pump.</p>"},{"location":"loop-3/omnipod/","title":"Omnipod Pump","text":""},{"location":"loop-3/omnipod/#omnipod-and-omnipod-dash-pump","title":"Omnipod and Omnipod DASH Pump","text":"<p>The information and user interface for Omnipod (Eros) and DASH pods is the same, except Omnipod DASH pods do not require a RileyLink compatible device. They communicate directly with the phone through Bluetooth.</p>"},{"location":"loop-3/omnipod/#pair-pod","title":"Pair Pod","text":"<p>Max Fill is 200 Units</p> <p>When you fill the Pod do not exceed 200 units.</p> <p>If you overfill the pods, you may get a pod fault right after priming.</p> <p>Pod Filling and Insertion</p> <p>The Pod filling and insertion instructions are the same with the Loop app as they are for the PDM.  These videos: Filling a Pod with Insulin and Inserting the Cannula, may be useful.</p> <p>For DASH Pods:</p> <ul> <li>You will use your phone instead of the PDM.  Be sure to keep the phone close to the pod during pairing and insertion because the Pod uses a low-power mode during these activities.</li> </ul> <p>For Eros Pods:</p> <ul> <li>You will use your phone and RileyLink compatible device instead of the PDM.  Be sure to keep the phone and RileyLink close during pairing and insertion because the Pod uses a low-power mode during these activities.</li> </ul> <p>You'll be pairing a pod every 2 or 3 days (max pod life is 80 hours).</p> <p>You'll see this screen every time you ask Loop to <code>Pair New Pod</code>.</p> <p>The Omnipod Common pairing protocol is the same for all pods. The difference is that Omnipod requires a RileyLink compatible device and Omnipod DASH does not. There are also slight differences in some of the text and graphics, e.g., Omnipod DASH uses a blue needle cap and Omnipod has a clear needle cap.</p> <p>Graphic below shows the Pair Pod screen for Omnipod (left) and Omnipod DASH (right).</p> <p></p> <p>Loop walks you through each step of the filling, pairing, priming, attaching and insertion process.</p> <p>It makes sure you are really ready to do the insertion.</p> <p>Please watch the video of the Loop app screen when pairing a DASH pod to see the full process before pairing your first pod. In this video, once the pod starts priming, you may want to skip forward (it takes about a minute to prime).</p> <p>Keep Gear Close</p> <ul> <li>Make sure the phone (and RileyLink if using one) are close to the pod before you tap Pair Pod<ul> <li>Do NOT move devices away from the pod until you see the blue check mark and the <code>Continue</code> button on the phone screen</li> <li>You can then move away to attach the pod to your body</li> </ul> </li> <li>Make sure the phone (and RileyLink if using one) are close to the pod before you tap <code>Insert Cannula</code><ul> <li>Do NOT move devices away from the pod until you see the blue check mark and the <code>Continue</code> button on the phone screen</li> </ul> </li> </ul>"},{"location":"loop-3/omnipod/#insert-cannula-slider","title":"Insert Cannula Slider","text":"<p>New Insert Cannula Control</p> <p>For version 3.3.0 and later, (which means the <code>dev branch</code> right now), there is a new slider to control insertion of the cannula instead of a button to tap. It looks like the graphic below. You place your finger on the darker blue icon and, while keeping your finger in contact with the screen, drag all the way to the right. After the drag operation, as soon as you lift your finger off the phone, the cannula insertion command is sent to the pod.</p> <p></p> <p>The Screen that says Setup Complete allows you to change the Scheduled Reminder for this pod if you want a different reminder time (including none) from your usual setting.</p> <ul> <li>This only changes the reminder for this one pod</li> <li>If you want to change all future reminders, tap on Notifications to modify the Reminder Default</li> <li>In that same location, you can also change notification for the current pod</li> </ul>"},{"location":"loop-3/omnipod/#pod-status","title":"Pod Status","text":"<p>The Pod Status screen is shown in the graphic below. The dashed green outline indicates the <code>Device</code> portion that is found only for the Omnipod.  All other features of the screen are common for Omnipod and Omnipod DASH.</p> <p></p>"},{"location":"loop-3/omnipod/#play-beeps","title":"Play Beeps","text":"<p>If you want to make sure Loop can talk to your pod, click on the sound icon (highlighted by the red box) in the graphic above. If the icon is greyed out - that means Loop is having a communication issue reaching your pod. Follow the usual Troubleshoot: Pump is Not Responding steps to resolve this problem.</p> <p>Other Uses</p> <ul> <li>Find (or startle) your child</li> <li>Find the pod that fell off overnight and is mixed with the laundry</li> </ul>"},{"location":"loop-3/omnipod/#pod-expires","title":"Pod Expires","text":"<ul> <li>This line provides a count-down until expiration along with a graphical representation of pod life<ul> <li>Once you are on the final day, the time remaining until expiration starts to report in Hours and Minutes</li> <li>The solid bar is proportional to pod hours since activation<ul> <li>It is blue for the first 48 hours</li> <li>It is orange for the last 24 hours and also appears in the HUD Pump Status icon</li> <li>After expiration, a full-width red bar is shown here and in the HUD Pump Status icon</li> </ul> </li> </ul> </li> <li>Once the pod officially expires, at 72 hours, there is an 8 hour grace period<ul> <li>Insulet does not guarantee the pod will keep working that long, but it often does</li> <li>A note will appear on the Pod Status screen with count-down text:<ul> <li>Change pod now. Insulin delivery will stop in HH hours, MM minutes or when no more insulin remains</li> </ul> </li> </ul> </li> </ul>"},{"location":"loop-3/omnipod/#basal-report","title":"Basal Report","text":"<p>The next row changes the label depending on the situation. In all cases, the current basal rate is reported.</p>  Label Description Scheduled Basal Pod is running the scheduled basal rate Insulin Delivery Pod is running an automated or manual temporary basal rate"},{"location":"loop-3/omnipod/#insulin-remaining","title":"Insulin Remaining","text":"<p>Pods start reporting reservoir values when 50 U are left.</p>  Value Meaning 50+ U Pod reservoir is greater than 50 U Value U Pod reservoir is estimated to be at least as great as the indicated value. 0 U Pod will attempt to deliver up to 4 U after it reports 0 U. This is not guaranteed. The pod senses when it is not successful delivering pulses and that can happen before 4 U have been delivered."},{"location":"loop-3/omnipod/#activity","title":"Activity","text":""},{"location":"loop-3/omnipod/#suspend-delivery","title":"Suspend Delivery","text":"<p>You may want to consider using a Manual Temp Basal of 0 U/hr instead of suspend.</p> <p>Tapping on <code>Suspend Delivery</code> brings up a timed reminder screen. You can choose to be reminded (via a beep on the pod itself) with 4 choices (or you can cancel the request):</p> <ul> <li>30 minutes</li> <li>1 hour</li> <li>1 hour 30 minutes</li> <li>2 hours</li> </ul> <p>After you select the reminder time, Loop issues a command to the pod to halt all insulin delivery: basals, temp basals, and boluses in progress. The label on the <code>Suspend Delivery</code> row changes to <code>Suspending</code> while Loop is communicating with the pump. When the label changes to <code>Resume Delivery</code>, all insulin delivery is stopped until the user resumes using the HUD Status Row or the Pod Status screen.</p> <p>As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. For Omnipod, make sure your RileyLink device is powered on and close to the phone and pod.</p> <p>When the phone is in portrait mode, so the HUD is visible:</p> <ul> <li>The user is alerted that pump is suspended by the HUD Pump Status Icon.</li> </ul> <p></p> <ul> <li>The HUD Status Row message can be tapped to resume delivery.</li> </ul> <p></p>"},{"location":"loop-3/omnipod/#no-manual-bolus-while-pod-is-suspended","title":"No Manual Bolus While Pod is Suspended","text":"<p>If you request a manual bolus with Loop while a pod is suspended, Loop will send a notification that Bolus Failed with instructions that Pump is Suspended, Resume Delivery.  In other words, you must resume delivery before you will be allowed to bolus with pods.</p>"},{"location":"loop-3/omnipod/#suspend-timer-reminder","title":"Suspend Timer Reminder","text":"<p>At the end of the reminder time, an alert beep is issued by the pod and a modal alert will be provided on the Loop app. You must acknowledge the modal alert on the phone to silence future pod alerts. </p> <ul> <li>If you do not acknowledge the modal alert, the pod will keep beeping</li> <li>If you need a silent pod, consider using Manual Temp Basal of 0 U/hr instead of Suspend</li> </ul> <p></p> <p>Manually Resume Insulin Delivery</p> <p>The halt of all insulin delivery continues until you manually resume. There is no automatic resumption of basal insulin from a suspend command.</p> <p>If you select a Manual Temp Basal command of 0 U/hr instead of Suspend:</p> <ul> <li>Basal Delivery automatically resumes at the end of the selected duration without need for Loop to command it</li> <li>At the end of the duration, Loop will restore Closed Loop, if you were in closed loop when you issued the Manual Temp Basal command</li> <li>There are no beeps on the pod to remind you to resume insulin delivery</li> </ul>"},{"location":"loop-3/omnipod/#manual-temp-basal","title":"Manual Temp Basal","text":"<p>Tap on the <code>Set Temporary Basal Rate</code> to select a Manual Temp Basal.</p> <p>This brings up the <code>Temporary Basal</code> screen shown on the left of the graphic below. </p> <ul> <li>You can select any basal rate from 0 U/hr to your maximum basal rate set in Delivery Limits</li> <li>You can choose any duration up to 12 hours in half-hour increments</li> <li>Once you select rate and duration and tap <code>Set Temporary Basal</code>, Loop goes into Open Loop mode and the pod is commanded to that rate and duration. </li> </ul> <p>In other words, you can leave your phone behind and the selected basal rate continues for the selected basal duration. There will be no automated adjustments of delivery for the temp basal duration.</p> <p></p>"},{"location":"loop-3/omnipod/#during-manual-temp-basal","title":"During Manual Temp Basal","text":"<p>This Pod Only</p> <p>The manual temp basal command from Loop tells the pod to initiate a temp basal for the designated rate and duration.</p> <ul> <li>The pod itself takes care of the temp basal with no further interaction with Loop</li> <li>Loop will no longer issue commands to the pod without manual intervention from the user until the expected duration ends or user selects <code>Cancel Manual Basal</code></li> <li>Loop continues to request and receive status reports from the pod while the pod is within communication range</li> </ul> <p>Deactivating this pod and pairing a new one interrupts the temp basal.</p> <p>If you still need that basal rate, you must initiate it on the new pod.</p> <p>Once the manual temp basal command is sent to the pod, Loop changes to Open Loop mode and updates displays as shown in the graphic above</p> <ul> <li>Pod Status screen:<ul> <li>The Basal Report updates with the new rate and label indicates <code>Insulin Delivery</code></li> <li>The row label changes to <code>Cancel Manual Basal</code> and reports the time remaining until the temp basal expires</li> </ul> </li> <li>Main screen (refer to red rectangle highlights):<ul> <li>The HUD Loop Status Icon changes to an <code>Open Loop</code> icon and the HUD Pump Status Icon indicates <code>Manual Basal</code></li> <li>The Insulin Delivery plot indicates the planned duration of the manual temp basal</li> <li>The Glucose Prediction updates using that assumed change in insulin delivery</li> </ul> </li> </ul> <p>So long as you were in Closed Loop before requesting the Temp Basal, Loop returns to Closed Loop automatically when the duration ends or you cancel the temporary basal.</p> <p>Automatic Resumption of Scheduled Basal</p> <p>The phone does not need to be in contact with the pod for insulin delivery to return to scheduled basal at the end of the selected duration. That duration is commanded along with the temporary rate. Once the pod accepts that command, and you'll get an error message if it does not, the pod will resume scheduled basal rate without further commanding if there is insulin in the reservoir and a pod fault does not occur.</p> <p>For situations where you need a modification of your insulin needs that is not dependent on a particular pod, review the information on the Overrides page.</p>"},{"location":"loop-3/omnipod/#devices","title":"Devices","text":"<p>For Omnipod, there is a Devices section used to access the RileyLink status and commands screen.</p>"},{"location":"loop-3/omnipod/#pod-details","title":"Pod Details","text":"<p>The Pod Details table, shown in the graphic below, reports:</p> <ul> <li>Time at which pod was Activated</li> <li>Time at which pod will Expire</li> <li>Access to Device Details</li> </ul> <p></p> <p>Time Drift</p> <p>The pod will expire when it thinks it has been 80 hours. The pod clock may drift a few seconds with respect to phone time during the pod life. The Expiration time gets updated when the pod reports how long it thinks it has been since it was activated.</p>"},{"location":"loop-3/omnipod/#device-details","title":"Device Details","text":"<p>Some additional details from the most recent pod status response message are displayed if you tap the Device Details row, as shown in the graphic below. Most people will not need to view this.</p> <p>The graphic shows an example for Omnipod on the left, Omnipod DASH (TWI BOARD) in the middle and Omnipod DASH (NXP BLE) on the right. Do not worry about the different board styles (Device Name) for DASH. The developers did that for you. If you are asking for help from a mentor - they may request this information.</p> <p></p>"},{"location":"loop-3/omnipod/#replace-pod","title":"Replace Pod","text":"<p>When you tap on the <code>Replace Pod</code> row, the <code>Deactivate Pod</code> screen, shown below, is displayed. </p> <ul> <li>If you tap <code>Deactivate Pod</code> on this screen, insulin delivery stops for this pod and cannot be resumed</li> <li>If you have changed your mind, tap Back or Cancel to continue using the pod</li> </ul> <p></p>"},{"location":"loop-3/omnipod/#configuration","title":"Configuration","text":""},{"location":"loop-3/omnipod/#notification-settings","title":"Notification Settings","text":"<p>When you tap on the <code>Notifcation Settings</code> row, the graphic below is displayed. The notifications are a combination of beeps on the pod with associated modal alerts on the phone app that must be acknowledged to prevent future beeps.</p> <ul> <li>Expiration Reminder Default: changes the reminder time for any future pod (not the current one)</li> <li>Scheduled Reminder: affects the reminder for the current pod (not future pods)<ul> <li>If no pod is connected, you will not see the Scheduled Reminder section</li> </ul> </li> <li>Low Reservoir Reminder: changes the reminder level for the current pod and all future pods<ul> <li>If no pod is connected, the app will not allow you to modify this setting</li> <li>Change it after the next pod is paired</li> </ul> </li> <li>Critical Alerts: Information row about which alerts can be silenced by phone settings</li> </ul> <p></p>"},{"location":"loop-3/omnipod/#confidence-reminders","title":"Confidence Reminders","text":"<p>When you tap on the <code>Confidence Reminder</code> row, the graphic below is displayed.  You can choose from three levels of audible responses that Loop requests from the pod:</p> <ul> <li>Disabled: no audible pod alerts to acknowledge commands</li> <li>Enabled: each manual command provides an audible sound to acknowledge it:<ul> <li>For manual dosage change, the pod beeps at both the beginning and end of the manual command.</li> <li>For automated dosage change, the pod does not beep.</li> </ul> </li> <li>Extended: Automated dosage change beeps, similar to the manual commands when set to <code>Enabled</code></li> </ul> <p></p>"},{"location":"loop-3/omnipod/#insulin-type","title":"Insulin Type","text":"<p>You selected insulin type when connecting to this pump.</p> <p>Tap on this row if you switch to a different type of insulin.</p> <ul> <li>The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences</li> <li>If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model</li> </ul>"},{"location":"loop-3/omnipod/#pump-time","title":"Pump Time","text":"<p>Click on Time Zone to understand how Loop treats \"pump\" time for pods.</p> <p>When the Pump time zone matches the phone time zone, the Pump Time is displayed with black font. </p> <p>When the phone time zone and pump time zone do not match, there is a clock icon on the main screen in the Pump Status Icon of the HUD.</p> <ul> <li>Tap on the Pump Status Icon in the HUD (top red rectangle in graphic below)</li> <li>Information about Time Change is provided on the Omnipod screen</li> <li>The Pump Time displays the clock icon and yellow font<ul> <li>The <code>Sync to Current Time</code> row appears</li> <li>Tap on the <code>Sync to Current Time</code> row to choose whether to make Pump Time match Phone Time or not (bottom red rectangle in graphic below)</li> </ul> </li> </ul> <p></p>"},{"location":"loop-3/omnipod/#other-time-changes","title":"Other Time Changes","text":"<p>What about other time changes?  Suppose the iOS -&gt; General -&gt; Time &amp; Date is modified to manually change the time, but the time zone is not adjusted. (Sometimes this is done to defeat limits on games. Do Not do this on a Looping phone.  If you have an \"old\" glucose reading in the \"future\" - Loop will not predict correctly which may have dangerous consequences.) There will not be an obvious display in the HUD or Omnipod screen (which keys off time zone) but you will get regular warnings that phone does not have automatic time set.</p> <p>Loop 3 will display this warning modal screen if it detects a problem with the Phone time. It leaves it up the user to decide what action should be taken. To make this warning stop, go to iOS -&gt; General -&gt; Time &amp; Date and enable Set Automatically. </p> <p></p>"},{"location":"loop-3/omnipod/#previous-pod-information","title":"Previous Pod Information","text":"<p>When you tap on the <code>Previous Pod Information</code> row, a graphic similar to those shown below is displayed. This provides summary information about the pod before the one currently in use. </p> <p>If the previous pod had a fault and you choose to report it to Insulet, this screen reports the PDM reference code that Insulet uses in their tracking system.</p> <p></p> <p>Do Not Call Insulet about -049 (0x31) Faults</p> <p>If you should happen to get a fault where the last 3 digits of the PDM ref code are \"-049\" (the Hex Designation is fault code 0x31), do not report this to Insulet and do not ask for a replacement. This means Loop did not ensure the pod was in the correct state to accept a command. In other words, it was a bug in the Loop code. </p> <p>We believe the code has been updated to prevent these faults. There was a brief period during development in which at least one of these happened - this was fixed July 3, 2022. If this happens to you, report it on zulipchat for the developers, save a Loop Report and rebuild if you have an older version of the development code.</p> <p>With Loop 3, do not leave the screen open and unlocked for long periods of time without first reading Is there an increase in pod failures on Loop?</p>"},{"location":"loop-3/omnipod/#pod-error-messages","title":"Pod Error Messages","text":"<p>This section presents some of the error message screens you may see specific to pods.</p>"},{"location":"loop-3/omnipod/#pod-faults","title":"Pod Faults","text":"<p>You are likely to hear a pod fault before Loop notices. If your phone is locked, Loop only checks status every 5 minutes for Omnipod or 3 minutes for Omnipod DASH.</p> <p>Unlock your phone, open Loop, navigate to the Pod Status screen and tap on Deactivate Pod to stop the noise. The pod fault - even if it does not show up in the HUD or the Pod Status screen, will be picked up by the process of hitting Deactivate Pod. You can then view the Fault information in the Previous Pod Information screen.</p>"},{"location":"loop-3/onboarding/","title":"Onboarding","text":""},{"location":"loop-3/onboarding/#onboarding","title":"Onboarding","text":"<p>As soon as your app builds on your phone, you are guided through the onboarding (set up) process. You will see information screens for each Therapy Setting and must acknowledge each screen. You can review those informational screens later by clicking the Therapy Settings screen after a pump has been added.</p>"},{"location":"loop-3/onboarding/#entering-and-editing-values","title":"Entering and Editing Values","text":"<p>This section explains how to enter and edit values with Loop 3.</p> <ul> <li>For more information on a specific therapy setting, tap on the information icon on the screen or review the detailed Therapy Settings page in LoopDocs</li> <li>Some screens only have one value for a given quantity<ul> <li>In that case, you can tap on and edit that value</li> <li>If you tap on the value and the <code>Confirm Setting</code> or <code>Save</code> button is inactive, move the picker value to make the button active,</li> </ul> </li> <li>Some screens allow different values for different times of day<ul> <li>Scheduled entries must start at midnight and at least one entry is required</li> <li>During onboarding, new loopers must tap the + sign to get the initial midnight time slot</li> <li>When one or more entries are present, tap the + sign to add an entry<ul> <li>Choose any time-slot without an entry</li> <li>Enter desired value</li> <li>Tap Add to include this entry in your schedule</li> </ul> </li> <li>Tap on a time-slot with an entry to edit it<ul> <li>You can change the time within the range of half hour after the slot immediately before and half hour before the slot after the slot under edit</li> <li>You can edit the value to any allowed value</li> </ul> </li> <li>To delete one or more entries, tap on Edit<ul> <li>Then tap the red icon to the left of the time-slot you want to delete and select delete</li> <li>Continue until done, then tap Done</li> </ul> </li> </ul> </li> </ul>"},{"location":"loop-3/onboarding/#glucose-units","title":"Glucose Units","text":"<p>First time connecting a glucose monitoring device to your phone's Apple Health app?  If so, the units on the phone might not be in the units you want, i.e., mg/dL or mmol/L. Loop uses the units in Apple Health.</p> <ul> <li>If the Apple Health units are mg/dL and you try to enter therapy settings suitable for mmol/L, or vice versa, the guardrails in Loop will prevent your entries</li> <li>If this happens:<ul> <li>Quit onboarding</li> <li>Click on the link FAQs: How Do I Change Glucose Units?</li> <li>Start the Loop app again and Onboarding will restart</li> </ul> </li> </ul>"},{"location":"loop-3/onboarding/#onboarding-steps","title":"Onboarding Steps","text":"<p>Each onboarding step is presented in order on this page. Please follow this document while entering values into your app for the first time.</p> <p>Settings Help</p> <p>Please stay in Open Loop until you verify that your settings (basal rates, insulin sensitivity, carb ratio, etc) are properly adjusted to work with the Loop algorithm. You may need time to evaluate and perhaps identify settings to adjust.</p> <p>If you need help with your settings adjustment, you may find useful tips in the companion website, LoopTips at this link: LoopTips: Settings tab.</p>"},{"location":"loop-3/onboarding/#welcome-to-loop","title":"Welcome to Loop","text":"<p>The first screen you will see is the Welcome to Loop screen shown in the graphic below. Tap on <code>Let's Go</code> to continue.</p> <p></p>"},{"location":"loop-3/onboarding/#apple-health-permissions","title":"Apple Health Permissions","text":"<p>Next, you need to give Loop permission to read and write to Apple Health. In the graphic below, from left to right, tap on the buttons highlighted with red boxes to configure permissions:</p> <ul> <li>Tap on the <code>Share with Apple Heath</code> button</li> <li>Tap on the <code>Turn On All</code> button in the middle</li> <li>Tap on the <code>Allow</code> button at upper right</li> </ul> <p>You need to enable Health Permissions for Loop to work.</p> <p></p> <p>You can review the permissions screen later. FAQS: How Do I Modify Apple HealthKit Permissions.</p>"},{"location":"loop-3/onboarding/#usage-data-sharing","title":"Usage Data Sharing","text":"<p>Language?</p> <p>If the instructions on this screen are not your preferred language, make sure you built the released code.</p> <p>Next, you will be asked your preference for Usage Data Sharing, with the default automatically set to <code>Share Version Only</code> as shown in the graphic below:</p> <p></p> <p>If you choose to share usage data, it is collected anonymously. The choices are:</p> <ul> <li>Do not share any usage data</li> <li>Share the Loop version number, phone type and iOS version number</li> <li>Additionally share usage data in terms of events only - health data such as values for glucose, insulin and carbs is not collected</li> </ul>"},{"location":"loop-3/onboarding/#share-usage-data","title":"Share Usage Data","text":"<p>If you select Share Usage Data you may wonder types of information is available to the Loop Developers.</p> <ul> <li>Statistics on loop failures can show which devices are causing more issues and which issues are more widespread</li> <li>Pod failures show whether particular versions of Loop affect the rate of failure, which helps determine fixes</li> <li>Learning how often particular features, like overrides, are used helps with future user interface design and improvements</li> <li>Language and location information helps understand the user base so <code>localization</code> (language translations) can be prioritized</li> <li>Version information helps quantify risk when a bug is found in a particular version of Loop, giving an indication of how many people may be affected</li> </ul> <p>The Loop Developers are the only ones with access to this data.</p>"},{"location":"loop-3/onboarding/#connect-loop-to-nightscout","title":"Connect Loop to Nightscout","text":"<p>The next screen, shown on the left of the graphic below, enables the user to both connect Loop to Nightscout and to download existing Loop settings from Nightscout.</p> <p>Nightscout</p> <ul> <li>Nightscout is not required for Loop</li> <li>It can be added later</li> </ul> <p>Loop 3 with Nightscout Requires API_SECRET</p> <ul> <li>Even if you used Nightscout with Loop 2, you will neeed to add it again and you must include your API_SECRET</li> </ul> <ul> <li> <p>If you have do not have a Nightscout site, or choose not to use it, select <code>Setup Loop without Nightscout</code> and skip ahead to Therapy Settings (Onboarding)</p> </li> <li> <p>If you have a Nightscout site, select <code>Use Nightscout with Loop</code> to connect Loop to your site and download your profile (Therapy Settings) from Nightscout for review.</p> </li> <li> <p>If you were using a Nightscout site with a prior version of Loop, you need to type it in again.</p> </li> </ul> <p></p> <p>If you select <code>Use Nightscout with Loop</code>:</p> <ul> <li>The right side of the graphic above shows the screen used to enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET.</li> <li>Once those credentials are accepted, choose whether you want to import your settings from your Nightscout profile (including any overrides previously saved).</li> <li>Every Therapy Setting downloaded from Nightscout is presented for review.</li> </ul>"},{"location":"loop-3/onboarding/#therapy-settings-onboarding","title":"Therapy Settings (Onboarding)","text":"<p>The next onboarding screens take you through the therapy settings one at a time.</p> <p>The therapy settings are the heart of how Loop makes predictions. If your settings are not close, the predictions will not be correct.</p> <ul> <li>Therapy Settings<ul> <li>An informational graphic is shown before you are asked to enter or confirm each therapy setting</li> <li>This Onboarding Page provides a brief summary of each therapy setting.<ul> <li>Each setting section on this page has a link to a more detailed description of that setting on the Therapy Settings page.</li> <li>If you follow a link, click on your browser back button to return to your place on this Onboarding page</li> </ul> </li> <li>While onboarding, you will see, in order:<ul> <li>Glucose Safety Limit</li> <li>Correction Range</li> <li>Pre-Meal Range</li> <li>Carb Ratios</li> <li>Basal Rates</li> <li>Delivery Limits<ul> <li>Maximum Basal Rate</li> <li>Maximum Bolus</li> </ul> </li> <li>Insulin Sensitivites</li> </ul> </li> </ul> </li> </ul>"},{"location":"loop-3/onboarding/#guardrails-while-onboarding","title":"Guardrails While Onboarding","text":"<p>Warning - Outside Typical?</p> <p>The Therapy Settings have \"guardrails\" to warn you if your settings are unusual.</p> <ul> <li>Some indications are based on surveys of experienced Loopers</li> <li>Some indications are for safety</li> <li>It's fine to put Glucose Safety or Correction Ranges higher than \"is typical\"</li> <li>It's fine to put Delivery Limits lower than \"is typical\"</li> </ul> <p>Take the yellow (and red) indications with a grain of salt. You will get an extra modal screen that you must acknowledge. Simply confirm your choice and keep going.</p> <ul> <li>It's OK to ignore warnings when being conservative</li> <li>Experienced loopers may choose to ignore warnings to be more aggressive</li> </ul> <p>A red limit cannot be exceeded without modifying the code itself. But values that show up as red can be saved - they are valid therapy selections.</p> <p>mmol/L</p> <p>People using mmol/L should avoid the red (the min or max end points) glucose values for their settings. They sometimes cause a crash.</p> <p>The Guardrails for Settings are summarized on the Therapy Settings page.</p>"},{"location":"loop-3/onboarding/#glucose-safety-limit","title":"Glucose Safety Limit","text":"<p>If Loop predicts that your glucose will go below the Glucose Safety Limit at any time in the next 3 hours and Loop is in Closed Loop, it will set a temporary basal rate of 0 U/hr in an attempt to prevent that future low.</p> <p>If you ask Loop for a bolus recommendation, and loop predicts your glucose will go below the Glucose Safety Limit at any time in the next 3 hours, no bolus will be recommended.</p> <p>The Glucose Safety Limit can never be higher than the lowest of these related settings: Correction Range and Pre-Meal Range.</p>"},{"location":"loop-3/onboarding/#correction-range","title":"Correction Range","text":"<p>Loop uses the Correction Range as the goal when it recommends a bolus and makes automated adjustments to insulin dosing.</p> <p>Correction Range vs Time in Range</p> <p>For example, you may choose a correction range of 100-110 mg/dL (5.6-6.1 mmol/L) for Loop, but you may monitor your \"success\" or Time in Range using 70-180 mg/dL (3.9-10 mmol/L).</p>"},{"location":"loop-3/onboarding/#manual-vs-automated-dosing","title":"Manual vs Automated Dosing","text":"<p>Loop estimates future glucose over the next 6 hours (DIA) and, when in closed loop, adjusts insulin dosing. Loop uses or recommends the smallest amount of insulin that will bring you to your target (Correction Range midpoint) over the whole forecast.</p> <p>If you ask Loop for a manual Bolus recommendation while your current glucose is below the bottom of the correction range and above the glucose safety limit, Loop will recommend a value that should keep your glucose above the safety limit.</p> <ul> <li>This is only if you manually request a bolus recommendation.</li> <li>Loop will not automatically provide extra insulin, via high temp basal or automatic bolus, until your current glucose is higher than the bottom of your correction range.</li> </ul>"},{"location":"loop-3/onboarding/#pre-meal-range","title":"Pre-Meal Range","text":"<p>The Pre-Meal Range, which is optional, gives you a small amount of insulin before a meal to help control post-meal glucose spikes. The Pre-Meal icon is inactive if you choose not to enter a range.</p> <p>Example</p> <p>If your normal range is 100-110 mg/dL (5.6-6.1 mmol/L) and pre-meal range is 80-80 mg/d L (4.4 mmol/L), Loop will give you extra insulin to move you towards the lower range number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the pre-meal icon in the toolbar, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first.</p>"},{"location":"loop-3/onboarding/#carb-ratios","title":"Carb Ratios","text":"<p>Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin.</p> <ul> <li>At least one carb ratio (CR) must be entered</li> <li>A daily schedule with varying CR can be entered</li> </ul>"},{"location":"loop-3/onboarding/#basal-rates","title":"Basal Rates","text":"<p>You must provide a Basal Rate schedule and the schedule must start at midnight. Loop does not provide the option for having more than one profile saved that you can switch between.</p> <p>If you onboard basal rates before a pump is added, you are limited to increments of 0.05 U/hr for basal rates and 0.00 U/hr is not allowed. Enter values close to what you actually use because the values determine your maximum basal rate in the Delivery Limits.</p> <p>Once a pump is added, the basal increments will match those on your pump. The onboarding basal rates will be saved to your added pump. Return to Therapy Settings to adjust the Basal rates to your pump increments.</p>"},{"location":"loop-3/onboarding/#medtronic-pump-users","title":"Medtronic Pump Users","text":"<p>If you will be connecting a Medtronic pump after onboarding:</p> <ul> <li>The values entered here will overwrite whatever is in your Medtronic pump when you first connect it</li> <li>For those who build Loop 3 over an existing Loop app with a Medtronic pump attached - you will just be confirming values you used previously</li> <li>If you have values in a Loopable Medtronic pump that you plan to attach after onboarding - please record those values if they are important to you</li> </ul>"},{"location":"loop-3/onboarding/#delivery-limits","title":"Delivery Limits","text":"<p>The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits.</p> <p>The Maximum Basal Rate the app allows you to choose will be limited based on the basal rate schedule you just entered as well as pump limits, so make sure you put in sensible values. (There is a back button if you need it.)</p>"},{"location":"loop-3/onboarding/#medtronic-pump-users_1","title":"Medtronic Pump Users","text":"<p>If you will be connecting a Medtronic pump after onboarding:</p> <ul> <li>The values entered here will overwrite whatever is in your Medtronic pump when you first connect it</li> <li>Make sure that the Delivery Limit values in the Medtronic pump are equal to or greater than the values you enter while onboarding or you will not be allowed to connect to the pump.</li> </ul>"},{"location":"loop-3/onboarding/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>Maximum Basal Rate will cap the maximum temporary basal rate that Loop issues to meet your correction range when you are in Closed Loop with a Dosing Strategy of Temp Basal Only.</p> <p>For safety, new loopers should start with a max basal set 2-3 times their highest scheduled basal rate. If you choose 2 times your highest scheduled basal, you may get a message informing you this is \"lower than typical.\" Ignore this to put safety first as a new looper.</p> <p>Experienced loopers typically set their maximum basal rate around 3-4 times their highest scheduled basal rate. Loop 3 app will not allow you to exceed 6.4 times your highest scheduled rate.</p>"},{"location":"loop-3/onboarding/#maximum-bolus","title":"Maximum Bolus","text":"<p>Maximum Bolus is the highest bolus amount Loop can recommend at one time to cover carbs or bring down high glucose.</p> <p>For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U.</p> <p>This setting also limits how much automated dosing is allowed. Loop will not automatically increase the user's IOB above two times the Maximum Bolus. This is true with <code>Dosing Strategy</code> of <code>Temp Basal Only</code> or <code>Automatic Bolus</code>.</p>"},{"location":"loop-3/onboarding/#insulin-sensitivities","title":"Insulin Sensitivities","text":"<p>Your Insulin Sensitivity Factor is the drop in glucose expected from one unit of insulin over the entire duration of insulin activity. It may be a different value than what you used as the Correction Factor with shots or manual pumping. Loop uses your ISF every 5 minutes when calculating predicted glucose levels.</p> <ul> <li>At least one insulin sensitivity factor (ISF) must be entered</li> <li>A daily schedule with varying ISF can be entered</li> </ul> <p>Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF.</p> <p>Incorrectly set ISF is a common cause of roller coaster glucoses for new Loop users. You may need to raise (increase) your ISF value/number to help smooth a roller coaster glucose trend. You can read about that topic more over in LoopTips here.</p>"},{"location":"loop-3/onboarding/#therapy-settings-review","title":"Therapy Settings Review","text":"<p>Once these are all entered, the Therapy Settings screen is shown for your review. You must scroll down to see all settings and reveal the Save Settings button.  Only the top and bottom portions are shown, the other settings were not captured for this graphic.</p> <p></p>"},{"location":"loop-3/onboarding/#notifications-and-bluetooth","title":"Notifications and Bluetooth","text":"<p>Once you save settings, Loop asks to send notifications and use Bluetooth. You must allow both for Loop to work properly.</p> <ul> <li> <p>Notifications are necessary for safety reasons while Looping.</p> </li> <li> <p>Bluetooth lets Loop get data from your CGM and talk to your Pump.</p> </li> </ul> <p></p>"},{"location":"loop-3/onboarding/#cgm-and-pump","title":"CGM and Pump","text":"<p>For new Loopers, it is now time to add a CGM and a pump.  Follow these links for instructions.</p> <ul> <li>Add a CGM</li> <li>Add a Pump</li> </ul> <p>Medtronic CGM</p> <p>If you plan to use a Medtronic Enlite sensor for your CGM, you must first add that pump to Loop before the sensor will be shown as an option.</p> <p>If you built Loop 3 over an existing app, your CGM and pump selections should have carried over.</p>"},{"location":"loop-3/onboarding/#experienced-loopers","title":"Experienced Loopers","text":"<p>Insulin Type</p> <p>Insulin Type is in Pump Settings (not therapy settings) and will NOT be imported.</p> <p>After you finish onboarding, you must select Insulin Type on your pump settings screen. Without an insulin type, closed loop might not work or a different insulin type might be selected.</p> <p>The first time you build Loop 3 on a device, you will need to go through the onboarding process too.</p> <ul> <li> <p>If you build Loop 3 over Loop 2.2.x, the onboarding remembers the settings, previously saved overrides and your current pod or pump information is maintained. (Yes, you can build Loop 3 and keep using the same pod.)</p> </li> <li> <p>If you build Loop 3 onto a device without an existing Loop app and you have a Nightscout site, you can enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET and it will ask if you want to import your settings from your Nightscout profile. This includes all the overrides you have previously saved.</p> </li> <li> <p>If you are building on a device that does not have an existing Loop app and you choose not to use Nightscout, then follow the new Looper Onboarding Steps.</p> </li> </ul> <p>You will be presented with an information screen describing the setting (with a continue button) followed by your current settings (if available), which you must confirm to keep - or can modify and then confirm to change. Depending on the device you are using, you may need to scroll down to see the Continue or Save buttons for each setting.</p> <p>What is in my Nightscout Profile</p> <p>To check what is in your Nightscout profile that Loop would use as part of onboarding, follow these instructions.</p> <p>Note: you will get a json file - look that up using your favorite internet search method.</p> <ol> <li>Open your Nightscout URL</li> <li>Click in the URL address and append this text \"/api/v1/profile.json\"</li> <li>You can download the file and examine it if you are interested</li> </ol>"},{"location":"loop-3/onboarding/#check-imported-settings","title":"Check Imported Settings","text":"<p>WARNING</p> <p>The new onboarding forces you to check all your imported Therapy Settings (Onboarding Summary) but there may be other settings you need to check as well.</p> <ul> <li>Dosing Strategy: may be at the default value of <code>Temp Basal Only</code>, even if you were using <code>Automatic Bolus</code> before</li> <li>Overrides: verify these are populated as expected</li> <li>Pumps that use a RileyLink: confirm the device is selected and active in the Pump settings screen</li> <li>If you use Nightscout, make sure the site is getting Loop updates</li> </ul> <p>HIGHLIGHTING THIS ONE - A LOT OF PEOPLE MISSED THIS:</p> <ul> <li>Insulin Type: ensure the correct insulin type is selected</li> </ul>"},{"location":"loop-3/onboarding/#carb-absorption-time-update","title":"Carb Absorption Time Update","text":"<p>If you used earlier versions of Loop, please be aware that absorption times have changed.</p> <p>Loop 3 Carb Absorption Times</p> <p>Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details.</p> <ul> <li>Loop 3 uses absorption times of 30 minute, 3 hours and 5 hours for the Candy, Taco, Pizza icons<ul> <li>Loop 2.2.x used 2 hours, 3 hours and 4 hours</li> </ul> </li> <li>The 30 minute (candy) time is for rapid acting carbs only</li> </ul> <p>If you selected the candy icon for a complex meal, you told Loop to expect your glucose to rise rapidly. When that rapid rise does not materialize, you may find Loop predicts an unexpectedly low glucose because the algorithm assumes something must be affecting your glucose downward in a strong way.</p> <p>If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction.</p>"},{"location":"loop-3/onboarding/#carb-data-source","title":"Carb Data Source","text":"<p>Loop 3 does not read non-Loop carbohydrate entries from Apple Health, as previous versions did. It still writes to Apple Health. Some experienced loopers want to modify the code to enable Loop to read carbohydrate records from Apple Health with the full understanding of how that works. The instructions for this code customization option, using a flag set in the LoopConfigOverride.xcconfig file, see the Customize: Build-Time Features section.</p> <p>Users who build Loop 3 over Loop 2.2.x, may find a permission switch to give Loop permission to read carb data from health, but without making the customization mentioned above, changing permission does not change the behavior of Loop.</p>"},{"location":"loop-3/services/","title":"Optional: Services","text":""},{"location":"loop-3/services/#services-for-the-loop-app","title":"Services for the Loop App","text":"<p>Near the bottom of your Loop settings screen is a section called \"Services\".</p> <p>Sevices are Optional</p> <ul> <li>The Loop app will work whether you use these or not.</li> <li>Nightscout is highly recommended, but can be added later - you don't need it to get started.</li> <li>If you are running Loop 2.2.x, see Loop 2 Services</li> </ul> <p>The services are added by tapping on the + sign and choosing the service from the list. Services are shown alphabetically. The most common services are Nightscout and Tidepool.</p> <p></p>"},{"location":"loop-3/services/#nightscout","title":"Nightscout","text":"<p>There is a whole section in LoopDocs about Nightscout. For more information, see Nightscout Overview. That also has the links you might need to the official Nightscout Documentation (different website).</p> <p>If you have an existing Nightscout site, it's still a good idea to review that section, but here's the quick summary of how to add your Site URL and API_SECRET to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API_SECRET, it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites).</p>"},{"location":"loop-3/services/#nightscout-login","title":"Nightscout Login","text":"<p>The graphic below shows the steps needed to add your Nightscout site to the Loop app. See the tip below about using stored passwords on the phone. If you have your credentials stored in passwords, simply tap the URL row to show the password option and select it.</p> <ol> <li>Select Settings in the Loop app and scroll down to Services and tap the Add Service Row</li> <li>Choose Nightscout Service</li> <li>Tap on the URL row<ul> <li>If your credentials are not saved in your Passwords, enter the URL including https:// in this row</li> </ul> </li> <li>This step has two options:<ul> <li>If your credentials are saved in Passwords, tap on the Passwords icon and select them</li> <li>Both the URL and API_SECRET will be filled in from your Passwords</li> <li>Otherwise, manually fill in the API_SECRET row</li> </ul> </li> <li>Tap on Login to add this site</li> </ol> <p>The Loop app will begin uploading your data from this point on - it does not back-fill old data to the Nightscout site.</p> <p>However, if there is a temporary outage of internet service or if the Nightscout site stops working temporarily, the Loop app will fill in all data not uploaded during the outage up to a total of 7 days worth of data.</p> <p></p> <p>The two most common errors in filling out this section are:</p> <ol> <li>Failure to use <code>https://</code>  in the site URL.  If you use <code>http://</code> (see how that doesn't have the \"s\" at the end?), you will get an error message about an App Transport Security policy.</li> <li>Having a trailing slash on the end of the URL (or an embedded space). If you copy and paste from a web browser, make sure to delete the trailing slash on the URL entry.</li> </ol> <p>Do not block your Nightscout site</p> <ul> <li>One family had an app configured to block some websites for their child's phone and accidentally blocked their Nightscout URL - took them a while to figure out that mistake.</li> </ul> <p>Add a Password</p> <p>To make it easy to access your Nightscout URL and API_SECRET, add a password to your iPhone:</p> <ol> <li>iOS Settings, Password</li> <li>Tap + to add<ul> <li>Enter a name, e.g., \"Nightscout\" in the Title row</li> <li>Enter the URL without the \"https://\" in the Website row</li> <li>Enter the URL including the \"https://\" in the User Name row</li> <li>Enter the API_SECRET in the password row</li> </ul> </li> <li>If you use tokens, you can add those in the Notes section - they will be hidden behind the authentication for the passwords</li> </ol>"},{"location":"loop-3/services/#nightscout-logout","title":"Nightscout Logout","text":"<p>If you want to stop uploading to a given Nightscout site or change to a different Nightscout site, you must first logout. You can then login again at the new site.</p> <p>The graphic below indicates how to remove your Nightscout site from the Loop app. This will stop future uploads from the Loop app to that site.</p> <p></p>"},{"location":"loop-3/services/#tidepool","title":"Tidepool","text":"<p>With Loop 3.2.x and newer versions, data can be directly uploaded from the Loop app to Tidepool.</p> <p>User Beware</p> <p>Don't use the Loop Tidepool uploader yet unless you want to help the developers work through some known issues. The Tidepool Mobile app still works to upload some of your Loop data from Health.</p> <ul> <li>There is a new authentication framework in Tidepool<ul> <li>Loop developers are working on handling this new authentication protocol</li> </ul> </li> <li>One other problem is that data uploaded with the Tidepool Mobile uploader from Apple Health shows up as duplicate data<ul> <li>Even if you turn off access of the Tidepool Mobile uploader to Apple Health, there will still be 7-days of overlap with Loop that will display as duplicated data (think 2x carbs, insulin etc in your Tidepool Web display) when you enable Loop Tidepool service as the uploader</li> </ul> </li> </ul> <p>Please refer to the LoopTips: Data: Tidepool page for more information about Tidepool. The Tidepool display browser is undergoing some updates; the information on these pages will be updated after changes happen.</p> <p>The Tidepool Mobile app serves 2 purposes:</p> <ol> <li>Allow notes to be recorded with associated glucose, carbs, and insulin record for a snap shot in time</li> <li>Upload Loop data stored in Health to the Tidepool database for display in their browser tool; when the Connect to Health feature is enabled</li> </ol> <p>With the new Loop Service to upload to Tidepool, additional information that is not stored in Health can be made available to Tidepool. However, this is a work in progress.</p> <p>At the current time:</p> <ul> <li>If you have Tidepool Mobile installed on your phone, with the Connect to Health feature enabled, while also using the Tidepool Service in the Loop app, all of your carb and insulin records will be doubled on the Tidepool Web browser display<ul> <li>In other words, your data is uploaded by the Tidepool Mobile app and by the Loop app and duplicates are not filtered (at the current time)</li> </ul> </li> <li>Short Term: There is a filter button at the bottom right of the browser display where you turn off the Loop portion for days when you have both Tidepool Mobile uploader and Loop uploader turned on</li> </ul> <p>When you add the Tidepool Service to the Loop app, be sure to disable Tidepool Mobile ability to read from Apple Health.</p> <p></p> <ul> <li>Warning: Even when you turn off the access to Health on the Tidepool Mobile app on the day that you turn on Loop Tidepool service, you will still get 7 days of overlap because Loop stores 7 days of data.</li> </ul> <p>You can still use the note taking feature with Tidepool Mobile when Health is not connected, although you must have internet connectivity for this to work.</p> <p>Tidepool Support is available to help troubleshoot issues or answer questions about using Tidepool. Contact them via email at support@tidepool.org.</p>"},{"location":"loop-3/services/#loggly","title":"Loggly","text":"<p>Loggly is a free logging service. If you sign up for an account, you'll need to go under Source Setup and then Customer Tokens. Copy and paste your customer token into your Loop App settings for Loggly.</p> <p></p>"},{"location":"loop-3/services/#amplitude","title":"Amplitude","text":"<p>Amplitude is a remote event monitoring service and can be used to quickly identify errors and events. Amplitude stores the events and allows you to view those events as points in time. To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues. If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.</p> <p></p>"},{"location":"loop-3/services/#next-step-loop-displays","title":"Next Step: Loop Displays","text":"<p>Great job, almost finished! Now that you have completed your services, let's move onto understanding your Loop Displays. </p> <p>Loop displays is a valuable tool for understanding your Loop and a great page to review when troubleshooting.</p>"},{"location":"loop-3/settings/","title":"Settings","text":""},{"location":"loop-3/settings/#loop-settings-screen","title":"Loop Settings Screen","text":"<p>The Settings screen, shown in the graphic below, is reached by tapping the gear icon in the Toolbar on the Main Loop Screen.</p> <p></p> <p>Each section and row on the Settings screen is described below.</p>"},{"location":"loop-3/settings/#closed-loop","title":"Closed Loop","text":"<p>The user can select closed loop or open loop using this slider. When you first start Loop, we encourage you to leave this slider disabled and become familiar with the app using Open Loop mode.</p> <p></p> <p>As soon as Closed Loop is enabled, Loop will begin automatic adjustment of insulin dosing. Please ensure the settings you entered are appropriate for the Loop algorithm.</p> <p>No automatic (closed loop) adjustment of insulin will occur and the slider will be disabled under the following conditions.</p> <ul> <li>No Pump added</li> <li>No CGM added</li> <li>User set a Manual Temp Basal</li> </ul>"},{"location":"loop-3/settings/#recommended-insulin","title":"Recommended Insulin","text":"<p>With every loop cycle - typically every 5 minutes - Loop updates the glucose prediction using</p> <ul> <li>CGM or Fingerstick glucose value (no older than 15 minutes)</li> <li>COB from meal entries</li> <li>IOB from previous insulin delivery</li> <li>Your Therapy Settings</li> </ul> <p>Based on this prediction, Loop calculates a modification to insulin dosing to bring the user into the desired correction range. This can be a reduction in basal to raise the glucose prediction or a recommended bolus, subject to Delivery Limits, to lower the prediction. The glucose prediction is shown in the Glucose Chart along with the measured glucose values.</p> <ul> <li>When in Open Loop, no automated action is taken.</li> <li>When in Closed Loop, automated action is taken based on the selected Dosing Strategy.</li> </ul> <p>If you find this confusing, read how to Think Like a Loop on the LoopTips website.</p>"},{"location":"loop-3/settings/#dosing-strategy","title":"Dosing Strategy","text":"<p>This row gives you the ability to select Dosing Strategy. The Dosing Strategy only affects the method by which the recommended bolus - if any - is delivered. The current selection is noted underneath the Dosing Strategy label. The default (initial) value for this setting is Temp Basal Only. Tap on the arrow to the right to modify your selection.</p> <p></p> <p>Words in Graphic</p> <p>Temp Basal Only: Loop will set temporary basal rates to increase and decrease insulin delivery.</p> <p>Automatic Bolus: Loop will automatically bolus when insulin needs are above scheduled basal, and will use temporary basal rates when needed to reduce insulin delivery below scheduled basal.</p> <p>Regardless of the Dosing Strategy selected, when glucose is below target or predicted to go below target, Loop decreases basal insulin using Temporary Basal.</p> <p>Temp Basal Only: Subject to your Delivery Limits, Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB. </p> <p>Automatic Bolus: Subject to your Delivery Limits, you receive 40% of the Recommended Bolus at every loop cycle.</p>"},{"location":"loop-3/settings/#automatic-bolus","title":"Automatic Bolus","text":"<p>When you first start Loop, we encourage you to leave Dosing Strategy set to Temp Basal Only until you are sure your settings are dialed in.</p> <p>The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged.</p> <p>As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen.  Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus.</p>"},{"location":"loop-3/settings/#configuration","title":"Configuration","text":"<p>The Configuration section allows entry to the following screens:</p>"},{"location":"loop-3/settings/#therapy-settings","title":"Therapy Settings","text":"<p>There's a LoopDocs page devoted to therapy settings. Click on the link to get to that page: Therapy Settings.</p>"},{"location":"loop-3/settings/#add-pump-for-therapy-settings","title":"Add Pump for Therapy Settings","text":"<p>But I don't see Therapy Settings!</p> <p>Therapy Settings is only accessible in the Settings screen when you have a pump connected to Loop.</p> <ul> <li>Loop needs to know the parameters for the pump</li> <li>There are several options presented below</li> </ul>"},{"location":"loop-3/settings/#option-1-prep-for-pods","title":"Option 1: Prep for Pods","text":"<p>If you add an Omnipod (requires RileyLink) or Omnipod DASH up to the <code>Pair Pod</code> screen and then cancel, Loop will use the common Omnipod details to allow you to modify your Therapy Settings.</p>"},{"location":"loop-3/settings/#option-2-prep-for-medtronic","title":"Option 2: Prep for Medtronic","text":"<p>If you need to modify Therapy Settings before connecting to a Medtronic pump:</p> <ul> <li>Add the Insulin Pump Simulator<ul> <li>Tap on the Pump in settings or the HUD to bring up the control screen</li> <li>Select the type of Medtronic</li> <li>Adjust the Therapy Settings as required</li> </ul> </li> <li>Delete the Insulin Pump Simulator</li> </ul>"},{"location":"loop-3/settings/#option-3-simulate-loop","title":"Option 3: Simulate Loop","text":"<p>If you want to use Loop in parallel with your current method of dosing insulin.</p> <ul> <li>Add the Insulin Pump Simulator</li> <li>Tap on the Pump in settings or the HUD to bring up the control screen</li> <li>Choose the type of pump you wish to simulate (notice each pump has specific basal rates and ranges available)</li> <li>For best fidelity, use a real CGM (if available on the same phone) or set up the CGM to be from Dexcom Share or Nightscout</li> <li>For every meal or correction, you can echo that meal or correction with Loop using the simulated pump - watch and learn from recommendations and predictions</li> </ul>"},{"location":"loop-3/settings/#usage-data-sharing","title":"Usage Data Sharing","text":"<p>iOS 15</p> <p>If you are running an iOS 15 device, this screen is shown in German regardless of the language you choose for Loop. That is an accident that will be fixed by the next release. The English version is shown below.</p> <p>You can review and modify your preference for Usage Data Sharing as shown in the graphic below:</p> <p></p> <p>If you change the check mark, it is immediately modified. Tap on Settings in upper left to return to the main Settings screen.</p> <p>If you choose to share usage data, it is collected anonymously. The choices are:</p> <ul> <li>Do not share any usage data</li> <li>Share the Loop version number, phone type and iOS version number</li> <li>Additionally share usage data in terms of events only - health data such as values for glucose, insulin and carbs is not collected</li> </ul>"},{"location":"loop-3/settings/#pump","title":"Pump","text":"<p>The information about the pump section is detailed on several different pages. Follow the links below:</p> <ul> <li>Add or Modify Pump</li> <li>Omnipod or Omnipod DASH Status and Commands</li> <li>Medtronic Status and Commands</li> </ul>"},{"location":"loop-3/settings/#cgm-settings","title":"CGM Settings","text":"<p>The information about the CGM is found on the Add or Modify CGM page.</p>"},{"location":"loop-3/settings/#services","title":"Services","text":"<p>The Services section allows additions of other services such Nightscout, Tidepool, Loggly and Amplitude.</p> <p>Please refer to the Optional: Service page.</p>"},{"location":"loop-3/settings/#support","title":"Support","text":"<p>The Support section enables the user to provide output data (Loop Report and/or Critical Logs) about the app. This information can be very helpful to folks trying to assist with problem reports.</p> <p>The graphic below shows the screen provided when you tap on the Support row at the bottom of the Settings screen.</p> <p></p>"},{"location":"loop-3/settings/#issue-report","title":"<code>Issue Report</code>","text":"<p>Tap on the <code>Issue Report</code> row, on the graphic above, to create a Loop Report text file with a lot of useful information for the mentors or developers if they need to assist you in solving a problem. This covers 84-hours (to enable a full pod history for users of Omnipod or Omnipod DASH). When you tap that row, you'll see a message that the file is loading.  That message never goes away but the rest of the page fills in fairly quickly. After that happens, use the up arrow to see various options to save the report.</p> <p>Issue vs <code>Issue Report</code></p> <p>Be aware:</p> <ul> <li>Issue (on github) is used to report code problems</li> <li><code>Issue Report</code> is an action in Loop app to provide information you may need when you ask for help: refer to How to Find Help</li> </ul> <p>It's a good idea to use the <code>Issue Report</code> button and save it along with a screenshot if you think you will ask for help.  You can always discard these if you resolve the problem on your own.</p> <p>Pro Tip</p> <p>The Loop Reports can be saved in the Files section on your iPhone. I have a folder on my phone Files named Loop Reports.</p> <p>You can upload them to zulipchat from your phone (new feature) using the paperclip in the zulipchat app. (Don't see a paperclip - update your app.)</p>"},{"location":"loop-3/settings/#submit-bug-report","title":"Submit Bug Report","text":"<p>Tap on the <code>Submit Bug Report</code> row to bring up one of the two views shown in the graphic below.  The left view is if you do not have a github account (or the phone is not signed in to your account). The right view is if your github credentials are available.</p> <p>In either case, the first action should be to add a term or phrase to the search box (red rectangle) to see if your issue has already been reported and to read the status if it has been reported.  Please refer to the GitHub Issues section for more information.</p> <p></p> <p>Not for Build or Settings Help</p> <p>Submit Bug Report should be used when you believe there is an error in the code.</p> <ul> <li>Use How to Find Help instead for these cases:<ul> <li>Trouble building</li> <li>Trouble pairing a pod</li> <li>Trouble with red loops</li> <li>RileyLink is not working</li> <li>Trouble adjusting your settings</li> </ul> </li> </ul>"},{"location":"loop-3/settings/#export-critical-event-logs","title":"Export Critical Event Logs","text":"<p>The last row under Support creates a zip (compressed file) with detailed app information over a 7-day period. It is stored in a different format from the Loop Report and provides critical information to the developers when troubleshooting. Once the compressed file is created, you can save it and later share it with the developers if they request it.  You can always discard these if you resolve the problem on your own.</p> <p>Pro Tip</p> <p>The Critical Logs zip file can be saved in the Files section on your iPhone. I have a folder on my phone Files named Critical Logs.</p> <p>You can upload them to zulipchat from your phone (new feature) using the paperclip in the zulipchat app. (Don't see a paperclip - update your app.)</p>"},{"location":"loop-3/settings/#critical-log-format","title":"Critical Log Format","text":"<p>The critical logs use a JSON (JavaScript Object Notation) format.</p> <p>Each day (in user's local time) has the following files:</p> <ul> <li>Alerts.json</li> <li>Carbs.json</li> <li>DeviceLog.json</li> <li>Doses.json</li> <li>DosingDecisions.json</li> <li>Glucoses.json</li> <li>Settings.json</li> </ul> <p>The JSON file for each day are zipped into one file for that day and then the zip files are again zipped into a single file that you can save. The current day (up to the current time) is combined with the previous day's data.</p> <p>The time stamps within the JSON files use UTC.</p>"},{"location":"loop-3/settings/#app-profile","title":"App Profile","text":"<p>The Profile Expiration is reported at the bottom of the Settings display along with the number of days remaining before Loop stops working.</p> <p>The link for <code>How to update (LoopDocs)</code> is provided for build with Mac.</p> <p>In fine print, the exact date and time of the expiration is reported in your local time zone.</p> <p></p> <p>The Profile Expiration is different for GitHub Browser Build method. A feature request is in place (but not yet added to the code) to report the TestFlight expiration for that build method.</p>"},{"location":"loop-3/therapy-settings/","title":"Therapy Settings","text":""},{"location":"loop-3/therapy-settings/#loop-therapy-settings","title":"Loop Therapy Settings","text":"<p>During Onboarding, all of your therapy settings were entered.</p> <p>After onboarding, the Therapy Settings screen is reached by going through the Loop Settings screen after a pump has been added.</p> <p>When building Loop 3 over Loop 2.2.x, the existing values from Loop 2.2.x are kept where possible and presented to the user as the \"default\" value when moving through each screen.</p> <p>This page provides more details about each of your Therapy Settings.</p>"},{"location":"loop-3/therapy-settings/#authorization-required","title":"Authorization Required","text":"<p>All the settings configured under Therapy Settings are protected by the same authorization method (FaceID, Fingerprint or Passcode) used to enable the app to issue a manual bolus.</p>"},{"location":"loop-3/therapy-settings/#details-for-therapy-settings","title":"Details for Therapy Settings","text":"<p>Loop 3 has Guardrails for some Therapy Settings. These are grouped in the Guardrails for Settings section of this page.</p> <p>New Loopers</p> <p>New Loopers may prefer settings that show up outside the \"typical\" range.</p> <ul> <li>These show yellow font on the picker dial and you must acknowledge a warning message that the selected value is lower, higher or outside \"typical\"</li> <li>It is always fine to pick a yellow or even red value when being cautious</li> </ul> <p>For example, choosing a Correction Range that is higher than \"typical\" when starting to learn Loop is fine. Once you are comfortable with how the system works, the range can be adjusted if desired - entirely up to you in consulatation with your health care professional.</p> <p>Therapy Settings are used for automated insulin delivery when Loop is in Closed-Loop mode.</p> <ul> <li>If your Therapy Settings are not \"dialed-in\" before you enable closed loop, you may experience too much or too little automated insulin delivery</li> <li>Please spend the time to thoroughly understand the effect of each therapy setting</li> </ul>"},{"location":"loop-3/therapy-settings/#screens-displayed","title":"Screens Displayed","text":"<p>Some screens displayed on this page were acquired during Onboarding.</p> <ul> <li>When saving a Therapy Setting<ul> <li>During Onboarding, the button is labeled \"Confirm Setting\"</li> <li>Otherwise, the button is labeled \"Save\"</li> </ul> </li> </ul>"},{"location":"loop-3/therapy-settings/#glucose-safety-limit","title":"Glucose Safety Limit","text":"<p>Loop will deliver basal and recommend bolus insulin only if your glucose is predicted to be above the Glucose Safety Limit for the next three hours.</p> <p>The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8.</p> <p></p> <p>The GIF below shows two screens for Glucose Safety Limit.</p> <ul> <li>Frame 1: During onboarding, user can accept the default limit by tapping \"Confirm Setting\" or tap the row to configure the range (see Frame 2)</li> <li>Frame 2: The user adjusts the picker wheel to select desired value and then taps on the \"Confirm Setting\" or \"Save\" button</li> </ul> <p></p> <p>If you feel more comfortable with a higher limit, do not let the yellow font influence you. Once you've used Loop for a while, you can revisit this setting.</p> <p>Note</p> <p>The value you select for Glucose Safety Limit will dictate the lowest value on the glucose picker that is available for Correction Range and Pre-Meal Range. Those cannot be lower than the Glucose Safety Limit.</p> <p>Guardrails for Glucose Safety Limit</p>"},{"location":"loop-3/therapy-settings/#correction-range","title":"Correction Range","text":"<p>Your Correction Range is the glucose value (or range of values) that you want Loop to aim for in adjusting your basal insulin and helping you calculate your boluses.</p> <p>The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8.</p> <p></p> <p>The GIF below shows four screens when first adding and selecting a correction range. The red box indicates where the user taps.</p> <ul> <li>Frame 1: Tap the + sign</li> <li>Frame 2: Use the picker wheels to select desired values<ul> <li>This is the first entry so must start at midnight - additional rows can be added for other times</li> <li>When happy with the picker values, user must tap add</li> </ul> </li> <li>Frame 3: This screen is shown only if a value is outside \"typical\"</li> <li>Frame 4: Tap on the \"Confirm Setting\" or \"Save\" button to accept the values</li> </ul> <p></p> <p>Do not let the yellow font discourage you if you want to have a \"higher than typical\" range to start with. Once you've used Loop for a while, you can revisit this setting.</p> <p>Guardrails for Correction Range</p>"},{"location":"loop-3/therapy-settings/#manual-vs-automated-dosing","title":"Manual vs Automated Dosing","text":"<p>Loop estimates future glucose over the next 6 hours (DIA) and, when in closed loop, adjusts insulin dosing. Loop uses or recommends the smallest amount of insulin that will bring you to your target (Correction Range midpoint) over the whole forecast.</p> <p>If you ask Loop for a manual Bolus recommendation while your current glucose is below the bottom of the correction range and above the glucose safety limit, Loop will recommend a value that should keep your glucose above the safety limit.</p> <ul> <li>This is only if you manually request a bolus recommendation.</li> <li>Loop will not automatically provide extra insulin, via high temp basal or automatic bolus, until your current glucose is higher than the bottom of your correction range.</li> </ul>"},{"location":"loop-3/therapy-settings/#pre-meal-range","title":"Pre-Meal Range","text":"<p>Your Pre-Meal Range is used to temporarily lower your glucose target before a meal to impact post-meal glucose spikes.</p> <p>The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8.</p> <p></p> <p>The GIF below shows three screens from various scenarios. The red box indicates where the user taps. If the user chooses to leave Pre-Meal not set, the Pre-Meal icon in the tool bar is disabled. Some users prefer this.</p> <ul> <li>Frame 1: During onboarding, user can choose not to add a pre-meal range by tapping \"Confirm Setting\" or tap the Pre-Meal row to configure the range (see Frame 2)</li> <li>Frame 2: User adjusts the Pre-Meal range using the picker and then \"Save\"</li> <li>Frame 3: If a pre-meal range was added, user can remove it by tapping \"Delete\" and then \"Save\"</li> </ul> <p></p> <p>Note</p> <ul> <li>If you do not add an entry, the pre-meal icon on the toolbar is disabled</li> <li>If you add an entry, the pre-meal icon is activated for 1 hour or until carbs are entered or until the user cancels it</li> </ul> <p>Guardrails for Pre-Meal Range</p>"},{"location":"loop-3/therapy-settings/#carb-ratios","title":"Carb Ratios","text":"<p>Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin.</p> <ul> <li>At least one carb ratio must be entered<ul> <li>Use the + sign, picker wheels and then tap \"Add\"</li> <li>The method was described in the Correction Range section</li> </ul> </li> <li>Loop supports 1 to 48 carb ratios per day</li> </ul> <p>Guardrails for Carb Ratios</p>"},{"location":"loop-3/therapy-settings/#basal-rates","title":"Basal Rates","text":"<p>Your Basal Rate of insulin is the number of units per hour that you want to use to cover your background insulin needs.</p> <ul> <li>Loop supports 1 to 48 rates per day</li> <li>The schedule starts at midnight and cannot contain a rate of 0 U/hr (as the only entry)</li> </ul> <p>Guardrails for Basal Rates</p>"},{"location":"loop-3/therapy-settings/#delivery-limits","title":"Delivery Limits","text":"<p>Delivery Limits are safety guardrails for your insulin delivery.</p> <ul> <li>Click on one of the limits on this screen, Maximum Basal Rate or Maximum Bolus, to display the picker wheel for that limit</li> <li>You must first move the picker off the current value before saving<ul> <li>When onboarding, you can restore the picker to the original level once it has been moved</li> <li>When adjusting settings later, one of the two limits must be changed to make the <code>Save</code> button active</li> </ul> </li> <li>You may need to put your finger on part of the screen away from the picker wheel and scroll up and down to see the other setting</li> <li>Make sure both Maximum Basal Rate and Maximum Bolus have the desired value before hitting <code>Save</code></li> </ul>"},{"location":"loop-3/therapy-settings/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>Maximum Basal Rate is the maximum automatically adjusted basal rate that Loop is allowed to enact to help reach your correction range. Some users choose a value 2, 3, or 4 times their highest scheduled basal rate. Work with your healthcare provider to choose a value that is higher than your highest scheduled basal rate, but as conservative or aggressive as is comfortable.</p> <p>If the Dosing Strategy is configured to Temp Basal Only, then the maximum basal rate can be used to limit how much extra insulin can be supplied automatically.</p> <p>Guardrails for Maximum Basal Rate</p>"},{"location":"loop-3/therapy-settings/#maximum-bolus","title":"Maximum Bolus","text":"<p>Maximum Bolus is the highest bolus amount that you will allow Loop to recommend at one time to cover carbs or bring down high glucose. The value the user selects for Maximum Bolus is also used to set a maximum level of IOB for automated dosing.</p> <ol> <li>Maximum Bolus is the largest single bolus that Loop will recommend or allow the user to bolus in a single action</li> <li>Maximum Automatic IOB is two times the value of Maximum Bolus<ul> <li>The Loop algorithm will not automatically dose any value that would cause the user's IOB to exceed Maximum Automatic IOB</li> <li>The user can exceed Maximum Automatic IOB with a manual bolus</li> <li>The recommended manual bolus amount is limited by Maximum Bolus</li> </ul> </li> </ol> <p>If you manually enter a value in the Bolus screen that is greater than the Maximum Bolus setting and press <code>Deliver</code>, Loop will show a warning message and refuse to bolus that amount.</p> <p>For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U.</p> <p>If the Dosing Strategy is configured to Automatic Bolus, then the maximum bolus that is automatically supplied is 40% of the maximum bolus, but this can be applied at 5-minute intervals. Automatic dosing is limited to keep the user's IOB less than two times the Maximum Bolus setting.</p> <p>Guardrails for Maximum Bolus</p>"},{"location":"loop-3/therapy-settings/#insulin-sensitivities","title":"Insulin Sensitivities","text":"<p>Your Insulin Sensitivities refer to the drop in glucose expected from one unit of insulin over the full duration of the insulin action time. You may have also seen the term Correction Factor or Insulin Sensitivity Factor (ISF). These are all referring to the same setting.</p> <ul> <li>At least one insulin sensitivity must be entered<ul> <li>Use the + sign, picker wheels and then tap \"Add\"</li> <li>The method was described in the Correction Range section</li> </ul> </li> <li>Loop supports 1 to 48 insulin sensitivities per day</li> </ul> <p>Guardrails for Insulin Sensitivities</p>"},{"location":"loop-3/therapy-settings/#guardrails-for-settings","title":"Guardrails for Settings","text":"<p>Loop has guardrails for Therapy Settings.</p> <ul> <li>The limits in the code are provided for reference below<ul> <li>The tables list from left to right: the lower limit, min recommended, max recommended and upper limit values for that guardrail</li> </ul> </li> <li>The limits for some settings can be altered by other therapy settings you have selected</li> </ul> <p>Experienced Loopers</p> <p>The guardrails for each therapy setting used by Loop can be modified with Code Customization.</p> <p>mmol/L</p> <p>People using mmol/L should avoid the red (the min or max end points) glucose values for their settings. They sometimes cause a crash.</p> <p>The font color in the value picker has the following meaning:</p> <ul> <li>black: value is within the range \"recommended by Loop\"</li> <li>yellow: value is outside the range \"typical\" for Loopers<ul> <li>It is fine to choose yellow values - sometimes that's a good choice for a new Looper</li> </ul> </li> <li>red: value is minimum or maximum limit of the range \"allowed by Loop\"</li> </ul> <p>Mobile Device</p> <ul> <li>On a mobile device, you may need to scroll the table left to right to see all four values</li> <li>Try landscape mode to see the entire table width without scrolling</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-glucose-safety-limit","title":"Guardrails for Glucose Safety Limit","text":"Units limit min max limit mg/dL 67 74 80 110 mmol/L 3.7 4.2 4.4 6.0 <p>Glucose Safety Limit Info</p> <p>Top value available on the picker limited by lowest of:</p> <ul> <li>code constraint</li> <li>your Correction Range</li> <li>your Pre-Meal Range</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-correction-range","title":"Guardrails for Correction Range","text":"Units limit min max limit mg/dL 87 100 115 180 mmol/L 4.8 5.6 6.3 10.0 <p>Correction Range Info</p> <p>Bottom value available on the picker limited by highest of:</p> <ul> <li>code constraint</li> <li>your Glucose Safety Limit</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-pre-meal-range","title":"Guardrails for Pre-Meal Range","text":"Units limit min max limit mg/dL n/a safety 106 130 mmol/L n/a safety 5.9 7.2 <p>Pre-Meal Range Info</p> <p>Bottom value available on the picker limited by highest of:</p> <ul> <li>code constraint</li> <li>your Glucose Safety Limit</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-basal-rates","title":"Guardrails for Basal Rates","text":"<ul> <li>Limited by your selected pump (or if no pump selected, then generic pump limits apply)<ul> <li>Generic Pump rates from 0.05 U/hr to 30 U/hr in steps of 0.05</li> </ul> </li> <li>Top value available on the picker is your Maximum Basal Rate (once that is set)</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-maximum-basal-rate","title":"Guardrails for Maximum Basal Rate","text":"<ul> <li>Recommended maximum value available on the picker is 6.4 times the highest basal rate in your scheduled basal rates<ul> <li>Values higher than this, if available, are shown in yellow</li> </ul> </li> <li>Absolute maximum value is 70 divided by the smallest carb ratio (CR) in your schedule or the maximum rate allowed by your pump, whichever is higher<ul> <li>Depending on your basal rate and CR schedules, the maximum value available on the picker might be more that 6.4 times the highest basal rate</li> </ul> </li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-maximum-bolus","title":"Guardrails for Maximum Bolus","text":"<p>The maximum bolus is limited by your pump, but it is a good idea to limit it to the maximum you use for a common \"big\" meal. This limits the bolus for a single manual dose.</p> <p>This setting also limits how much automated dosing is allowed. Loop will not automatically increase the user's IOB above two times the Maximum Bolus. This is true with <code>Dosing Strategy</code> of <code>Temp Basal Only</code> or <code>Automatic Bolus</code>.</p>"},{"location":"loop-3/therapy-settings/#guardrails-for-carb-ratios","title":"Guardrails for Carb Ratios","text":"<p>Remember, CR goes in the denominator when calculating insulin dose for carbs. So the min - max values in the table below correspond to stronger - weaker values for CR.</p> Units limit min max limit g/U 2.0 4.0 28.0 150.0"},{"location":"loop-3/therapy-settings/#guardrails-for-insulin-sensitivities","title":"Guardrails for Insulin Sensitivities","text":"<p>Remember, ISF goes in the denominator when calculating insulin dose for a correction. So the min - max values in the table below correspond to stronger - weaker values for ISF.</p> Units limit min max limit mg/dL/U 10 16 399 500 mmol/L/U 0.6 0.9 22.1 27.8"},{"location":"nightscout/loop-caregiver/","title":"<span translate=\"no\">Loop Caregiver<span>","text":""},{"location":"nightscout/loop-caregiver/#the-loop-caregiver-app","title":"The Loop Caregiver App","text":"<p>The Loop Caregiver app is under development to make remote commands easier to implement and monitor.</p>"},{"location":"nightscout/loop-caregiver/#minimum-requirements","title":"Minimum Requirements:","text":"<ul> <li>Loop\u00a0version 3.2.0 or newer<ul> <li>version 3.0 works but is not recommended for other reasons</li> <li>version 3.3 and higher offers improved feedback to the Loop Caregiver user</li> </ul> </li> <li>iOS 16 or newer for Loop Caregiver phone</li> <li>Nightscout version 14.2.6</li> </ul>"},{"location":"nightscout/loop-caregiver/#prerequisites","title":"Prerequisites:","text":"<ul> <li>Complete all 4 steps on the Remote Configuration page:<ul> <li>Step 1: Update the Looper's iPhone settings</li> <li>Step 2: Apple Push Notifications</li> <li>Step 3: Add APN to Nightscout</li> <li>Step 4: Test Remote Overrides</li> </ul> </li> <li>Read the Remote Commands page and pay special attention to these 2 sections<ul> <li>FAQs on Remote Overrides</li> <li>Warnings on Remote Commands</li> </ul> </li> </ul> <p>Older Nightscout Versions</p> <p>If you ignore this minimum version requirement - what happens:</p> <ul> <li>If you attempt to use the carb entry in the past or future, the caregiver app accepts it but the remote commands accepted by the Loopers phone show up at the current time - not when the caregiver intended to insert carbs</li> <li>Please take the time to update your Nightscout site to <code>master</code></li> <li>Nightscout 14.2.6 was released 30-Sep-2022 as <code>Classic Liquorice</code></li> </ul> <p>If you use Loop Caregiver, please join Loop Caregiver App Zulipchat stream.</p> <p>As with all development code, monitor Zulipchat for announcements, report any problems you experience, be prepared to build frequently, and pay attention.</p>"},{"location":"nightscout/loop-caregiver/#build-the-loop-caregiver-app","title":"Build the Loop Caregiver App","text":"<p>You can build the Loop Caregiver app using the Build with Browser method or the Build with Mac method.</p>"},{"location":"nightscout/loop-caregiver/#build-with-browser","title":"Build with Browser","text":"<p>The Build with Browser method is documented on the Build Other Apps with Browser page.</p>"},{"location":"nightscout/loop-caregiver/#build-with-mac","title":"Build with Mac","text":"<p>A build script is available to assist in building Loop Caregiver. This should be straightforward for anyone who has previously built \u00a0Loop 3\u00a0 using the script.</p> <ul> <li>Open a terminal window. </li> <li>Spot the line below that starts with <code>/bin/bash</code></li> <li>Click the gray copy button () located near the bottom right side of that line  (should say <code>Copy to Clipboard</code> when you hover the mouse over it).   Once clicked, a confirmation message that says <code>Copied to Clipboard</code> will appear on your screen.     Copy and Paste to start the BuildLoopCaregiver script<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildLoopCaregiver.sh)\"\n</code></pre></li> <li>Important: Click anywhere in the terminal before trying to paste</li> <li>Paste the line into the Terminal window.  <ul> <li>on Mac, you can do this in one of the following ways:<ul> <li>Press Cmd+V </li> <li>or Press Ctrl+click and select <code>Paste</code> from the menu </li> <li>or select <code>Edit =&gt; Paste</code> (i.e. click the <code>Edit</code> menu at the top of the Mac screen then click <code>Paste</code>).</li> </ul> </li> <li>on PC (Virtual Mac): <ul> <li>Press Ctrl+V</li> </ul> </li> </ul> </li> <li>Once the line is pasted, hit Return (Enter) to execute the script. </li> <li>The script displays the directions for downloading and building.       Please read them carefully.</li> </ul> <p>Read Carefully</p> <p>The output you see in the Terminal may look very similar to when you build the Loop app from a script.</p> <p>It is pulling down a clone from a different location (<code>LoopKit/LoopCaregiver</code>). It uses some modules from <code>Loop</code>. The target and scheme are automatically selected for <code>Loop Caregiver</code>  and if you follow directions for a paid Developer account, the signing is automatic.</p>"},{"location":"nightscout/loop-caregiver/#use-the-loop-caregiver-app","title":"Use the Loop Caregiver App","text":"<p>Some limited directions for using the Loop Caregiver app are provided - please also read the Zulipchat stream to stay up-to-date with improvements - especially if you are using a development branch of \u00a0Loop.</p>"},{"location":"nightscout/loop-caregiver/#add-looper-to-the-loop-caregiver-app","title":"Add Looper to the Loop Caregiver App","text":"<p>You must add a Looper to continue with the Loop Caregiver app as shown in the graphic below.</p> <p></p> <ul> <li> <p>On the\u00a0Loop\u00a0phone:</p> <ul> <li>Tap on <code>Loop -&gt; Settings -&gt; Services -&gt; Nightscout</code></li> <li>Tap on the <code>One-Time-Password</code> row to see the QR code  </li> </ul> <p>Pro-tip</p> <p>Take a screenshot of the QR code and store it on your computer.</p> <p>You can then add the QR code to Loop Caregiver  without bothering your Looper.</p> <ul> <li>Keep the screenshot secure</li> <li>Do not share the QR screenshot when asking for help</li> </ul> </li> <li> <p>On the Loop Caregiver phone:</p> <ul> <li>Tap on Loop Caregiver -&gt; <code>Settings</code></li> <li>Enter the name of the Looper, the Nightscout URL (use \u00a0 https://\u00a0) and <code>API_SECRET</code></li> <li>Touch the QR code row - this opens the camera - point the camera at the QR code from Looper's phone</li> </ul> </li> </ul> <p>You can add additional more people under settings. (*Loop Caregiver * can monitor more than one Looper).</p>"},{"location":"nightscout/loop-caregiver/#main-screen-of-the-loop-caregiver-app","title":"Main Screen of the Loop Caregiver App","text":"<ul> <li>Loop Caregiver uses a lot of features from\u00a0Loop\u00a0with some Nightscout-like features in the Timeline.</li> </ul> <p>The Timeline:</p> <ul> <li>Autoscales the vertical display for glucose reported over the last 24 hours (plus the forecast if that is turned on)<ul> <li><code>Show Prediction</code> for Timeline is turned off in the graphic below.</li> </ul> </li> <li>Horizontal display can be adjusted using the dropdown hours selector and scrolling left/right.</li> <li>A double tap on the Timeline alternates between 1 and 6 hour display</li> </ul> <p></p> <p>You can also use the Loop Caregiver -&gt; <code>Settings</code> screen to modify:</p> <ul> <li>Units used for glucose display: <code>mg/dL</code> or <code>mmol/L</code></li> <li>Include the\u00a0Loop\u00a0forecast display on the Timeline chart as well as the Glucose chart of the main display (<code>Show Prediction</code> is turned off in the graphic above)</li> </ul>"},{"location":"nightscout/loop-caregiver/#issue-remote-commands-with-the-loop-caregiver-app","title":"Issue Remote Commands with the Loop Caregiver App","text":"<p>You issue override, carb, and bolus commands using a toolbar similar to the one seen on\u00a0Loop. In the example graphic above, the carb and bolus entries visible were issued remotely.</p> <p>Carb and bolus commands each require authorization before they are accepted. The authorization (FaceID, Fingerprint, or passcode) matches that required to unlock the Loop Caregiver 's phone.</p> <p>The use of Loop Caregiver makes remote commands much easier and more reliable.</p> <p>Go back and review the details about Remote Commands before using the app.</p>"},{"location":"nightscout/loop-caregiver/#troubleshooting","title":"Troubleshooting","text":"<p>Troubleshooting steps are found on the Remote Errors page.</p>"},{"location":"nightscout/new-user/","title":"New Nightscout","text":""},{"location":"nightscout/new-user/#why-nightscout","title":"Why Nightscout?","text":"<p>Nightscout is not required, but is recommended for Loop</p> <ul> <li>A Nightscout site provides a dashboard for remote viewing of Loop actions including the temporary basal rates Loop is setting, the current insulin on board, or a recent bolus and carb entry</li> <li>A Nightscout site provides reports for retrospective review of your settings</li> <li>You will want a Nightscout site:<ul> <li>If you are a parent of a little Loop user</li> <li>If you want to see Loop's actions anywhere other than the Looper's iPhone</li> <li>If you want to ask a mentor for help adjusting your settings</li> <li>If you want to prepare reports to evaluate your own settings</li> <li>If you want to prepare reports to hand to your doctor</li> </ul> </li> </ul>"},{"location":"nightscout/new-user/#setup-nightscout","title":"Setup Nightscout","text":"<p>Please visit Nightscout: Documentation to read about Nightscout. There are several options, mentioned in that documentation, for setting up your Nightscout site.</p> <ul> <li>You can choose one of many free (except for your time) DIY methods</li> <li>You can choose one of many DIY methods where you pay a monthly fee for data storage</li> <li>You can choose a managed site (for a monthly fee) that creates your site, keeps the software up to date and provides data storage</li> <li>Social Media sites for announcements, help and discussion:<ul> <li>CGM in the Cloud Facebook group</li> <li>Nightscout Discord Channel</li> </ul> </li> </ul> <p>Once your Nightscout site is operational and you've read the information about using your site, return to LoopDocs to follow the directions on the LoopDocs: Nightscout with Loop page.</p> <p>Comments</p> <p>Most of the free DIY methods provide sufficient storage for a single Loop user, but will require you to delete older data after a year or two of use. The one exception is the Google Cloud method which includes multiple GB of storage.</p> <p>If there are multiple Loopers in your family and you want to stay in the \"free\" tier, each will need their own site to stay under the monthly usage limitations. That means an account for each user under different email addresses for each user.</p> <p>\"Free\" sites might potentially stop being \"free\" in the future.</p> <p>One of the Nightscout as a Service providers will not allow you to put in your own Apple Push Notification variables, you must use theirs. If you have no plans to use remote commands via Nightscout, this will not affect you. If you decide to use remote commands, you may need to switch to a different service or get Loop through that same provider for an extra monthly fee.</p>"},{"location":"nightscout/new-user/#configure-nightscout-to-use-with-loop","title":"Configure Nightscout to use with Loop","text":"<p>There are a few Loop-specific variables you should configure to get the most out of your Nightscout site. Follow the instructions on the LoopDocs: Nightscout with Loop page.</p>"},{"location":"nightscout/new-user/#add-nightscout-to-loop","title":"Add Nightscout to Loop","text":"<p>Once you finish setting up your new Nightscout site, don't forget to enter your website URL and API_SECRET into your Loop settings, LoopDocs: Services - Nightscout. This way Loop will have access to your Nightscout site to upload all the wonderful data.</p>"},{"location":"nightscout/new-user/#nightscout-troubleshooting","title":"Nightscout Troubleshooting","text":"<p>If your Nightscout site is not showing CGM (and Loop, if you are Looping) data within about 10 minutes of finishing your setup, then please follow the steps on the Nightscout: Troubleshooting page.</p>"},{"location":"nightscout/ns-crossref/","title":"Nightscout Cross Ref","text":""},{"location":"nightscout/ns-crossref/#nightscout-documentation","title":"Nightscout Documentation","text":"<p>A number of pages that used to be in LoopDocs have been moved to the Nightscout documentation. To prevent duplication and inconsistency, those pages have been removed from LoopDocs.  A cross-reference to the Nightscout pages is provided below.</p> <ul> <li>You can always use the search function of Nightscout: Documentation to find any topic</li> </ul>"},{"location":"nightscout/ns-crossref/#remote-notifications","title":"Remote Notifications","text":"<p>While the Loop app sends notifications locally on the Loop user's iPhone, parents and caregivers may want those messages on their phones, too.  We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover.</p> <ul> <li>Please see<ul> <li>Nightscout: Configurations: Pushover</li> <li>Nightscout: Remote Notifications</li> </ul> </li> </ul>"},{"location":"nightscout/ns-crossref/#loop-follow","title":"Loop Follow","text":"<p>Loop Follow was created by Jon Fawcett who took ideas from multiple other apps to create a single app to assist in his caregiving role. It is popular with Loopers who like the display and notifications as well as Loop caregivers. It can work with just the Dexcom Share credentials and/or the Nightscout URL and allows for easy customization of alerts and alarms. Jon handed over maintenance of this app to the Loop and Learn team.</p> <ul> <li>Please see<ul> <li>Loop and Learn: Loop Follow page</li> <li>Loop and Learn Facebook group</li> </ul> </li> </ul>"},{"location":"nightscout/ns-crossref/#pebble-watch","title":"Pebble Watch","text":"<p>LoopDocs had a page specifically about the Pebble Watchface called <code>SkyLoop Predict</code>, which is no longer being supported. The Nightscout Documentation provides information about many methods for displaying your Nightscout data on a variety of wearable devices.</p> <ul> <li>Please see<ul> <li>Nightscout: On Your Watch</li> </ul> </li> </ul>"},{"location":"nightscout/ns-crossref/#reports","title":"Reports","text":"<p>Nightscout offers some fantastic data-crunching report tools.</p> <ul> <li>Please see<ul> <li>Nightscout: Reports</li> </ul> </li> </ul>"},{"location":"nightscout/overview/","title":"Nightscout Overview","text":""},{"location":"nightscout/overview/#overview","title":"Overview","text":"<p>Nightscout is an excellent tool for remotely viewing Loop actions. Nightscout can act as a stand-alone tool or be integrated with Loop. (Nightscout also integrates with other open-source hybrid closed loop systems such as OpenAPS, AndroidAPS and iAPS. LoopDocs focuses on Loop.)</p> <p>When integrated with Loop, Nightscout provides monitoring of Loop activities such as viewing history of glucose, carbs, boluses, temp basals and overrides; troubleshooting Loop errors; and provides extensive reports for analyzing data trends and patterns. These reports assist when Loop Therapy Settings need to be adjusted.</p> <p>For caregivers, Nightscout enables remote monitoring and even the ability to issue remote commands through Nightscout when both Loop and Nightscout are properly configured. There are several pages starting at LoopDocs: Remote Overview that provide documentation on this feature. If you are a caregiver, this summary of remote capabilities may encourage you to look into Nightscout.</p> <p>Remote Commands</p> <ul> <li>Loop 2.2.x<ul> <li>Overrides can be enabled and disabled</li> </ul> </li> <li>Loop 3<ul> <li>Overrides can be enabled and disabled</li> <li>Carbs can be entered</li> <li>Boluses can be commanded</li> <li>Loop Caregiver app (under development, iOS only) enables the following from the caregiver's phone<ul> <li>monitor Loop</li> <li>issue remote commands for carbs, bolus, and overrides</li> </ul> </li> </ul> </li> </ul> <p>If you plan to use remote commanding with Nightscout, please read these links with additional information:</p> <ul> <li>Set Up Remote for Nightscout<ul> <li>Paid Providers and Remote Configuration</li> </ul> </li> </ul> <p>Nightscout is useful for many who use Loop. Adults who take care of themselves find the reports and analysis methods from Nightscout provide effective tools to monitor their settings and provide reports for their health care provider. It also stores Loop configurations so they can be reviewed. With Loop 3, the saved Nightscout profiles can be downloaded to a new Loop installation or a new phone for quick onboarding, should you ever need to start fresh.</p> <p>Setting up a Nightscout site is described in a separate web site: Nightscout: Documentation.</p> <p>There are Nightscout apps in your iPhone App Store that allow you to view the Nightscout site after you've configured it, or you can use a web browser to view the data. The app alone is not enough - you need to follow the steps to configure your own Nightscout site and obtain your specific Nightscout URL.</p> <ul> <li>Nightscout is highly recommended for Loop users, especially for caregivers helping someone use Loop</li> <li>Nightscout displays are often the easiest way to troubleshoot Loop settings if you are having problems and seeking input from others</li> <li>Nightscout provides reporting features for longer-term review and preparing information for your physician</li> </ul>"},{"location":"nightscout/overview/#nightscout-documentation","title":"Nightscout Documentation","text":"<p>There used to be a lot of Nightscout information found only in LoopDocs, but that was transferred and subsequently updated in Nightscout: Documentation. The information that remains in LoopDocs about Nightscout is Loop specific. So you may be jumping back and forth between the two sets of documents.</p> <ul> <li>If you see the Nightscout Owl logo in upper left you are in the Nightscout website</li> <li>If you see the LoopDocs green-loop logo in upper left you are in the LoopDocs website</li> <li>While in the Nightscout tab of LoopDocs, most links have a Nightscout or LoopDocs in the link name</li> <li>Suggestion: open the Nightscout: Documentation in a separate tab or window of your browser for easy access to both websites</li> </ul>"},{"location":"nightscout/overview/#nightscout-with-loop","title":"Nightscout with Loop","text":"<p>This page provides a general discussion about the Nightscout display, as well as some Loop-specific display information. Over time, interactions between Loop and Nightscout were improved. The information on this page has been updated for Loop 3 and Nightscout version 14.2.6 (or later). Older versions may exhibit some differences in the display of Loop information on the Nightscout site.</p>"},{"location":"nightscout/overview/#loop-uploads-to-nightscout","title":"Loop Uploads to Nightscout","text":"<p>The Nightscout display updates when the Loop phone is connected to the internet via WiFi or cellular service. When the uploads stop, the Loop pill becomes \"stale\" (cannot open it) after 15 minutes.</p> <p>Pills are the little information boxes. They are Nightscout: Plugins that must be enabled with configuration variables and then the display for each pill can be turned on or off within your Nightscout site.</p> <p>If upload to Nightscout is interrupted, Loop 3 stores up to 7 days of Nightscout information in a local buffer on the phone, and will attempt to upload later when access is restored. Once access is restored, a stale Loop Pill may require 15 minutes before it will open to display additional Loop information.</p> <p>The Carb pill on the Nightscout site is populated by Loop when Loop is actively uploading to Nightscout - but it may lag the value displayed in the Loop pill by one loop cycle and it will display 0 COB within 5 to 10 minutes if the upload is interrupted. In other words, if the COB pill shows 0 unexpectedly and Loop pill is active, you can believe the value shown in the Loop pill.</p>"},{"location":"nightscout/overview/#loop-2-red-loop-warning","title":"Loop 2 Red Loop Warning","text":"<p>With Loop 2.2.9 and earlier versions, when a Nightscout site is selected in Loop Services and is unable to upload messages to that site, Loop keeps trying to upload the buffer of stored messages. This could lead to sluggish behavior in Loop or even cause a \u00a0Red Loop. This can happen if the Nightscout site is not accessible (no WiFi or cellular coverage) or if the database is full and not accepting messages.</p> <p>Step 1: Remove Nightscout URL from Loop Services</p> <p>Step 2: Figure out why the Nightscout site is not accepting uploads from Loop and fix that problem.</p> <ul> <li>Nightscout: Troubleshooting</li> <li>Nightscout: Database Management</li> </ul> <p>Step 3: Add Nightscout URL to Loop Services</p> <p>Note - the method used by Loop 3 is not subject to this same problem.</p> Do you want to know more? (Click to open) <p>For those who want to know more:</p> <p>There is a big architectural change between Loop 2 and Loop 3 for remote data services like Nightscout.</p> <p>It used to be that Loop would keep trying to upload data to Nightscout. If a site could not be reached or would not accept data, that could cause large backlogs. Loop 2 could slow down by trying to keep uploading the backlog. The new system does not allow for this. Uploaders individually keep track of where they are in the upload stream via a lightweight \u201cquery handle\u201d, and if the data in Loop data store expires before upload, that data will be missing in Nightscout.</p> <p>Loop 3 saves 7 days of information in the data store.</p>"},{"location":"nightscout/overview/#nightscout-dashboard","title":"Nightscout Dashboard","text":""},{"location":"nightscout/overview/#blood-glucose","title":"Blood Glucose","text":"<p>Glucose readings from the CGM are shown in green, yellow, or red in the main Dashboard of Nightscout. (The graphic above was generated with Colors enabled in Nightscout; there are other display options.) You can adjust your high and low glucose alarm thresholds in Nightscout by modifying configuration variables. This is optional - defaults are provided if you do not set them. The alarm thresholds affect the color of the displayed CGM data points and, if enabled, determine when an audible and visible alarm sounds. The Nightscout alarm thresholds will not affect Loop performance. Loop only uses the glucose correction ranges in the Loop app settings.</p> <p>The main dashboard (upper section) for Nightscout displays the time duration you have selected (in the example above, 12 hours). The bottom of the screen shows the last 48-hours of glucose trends. You can scan backward by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days.</p>"},{"location":"nightscout/overview/#sage-cage-bage","title":"SAGE, CAGE, BAGE","text":"<p>The SAGE, CAGE, and BAGE pills are for Sensor Age, Cannula Age, and (pump) Battery Age. These optional pills track the time since your CGM sensor, Pump site, and Pump battery were last changed. You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes. When these items do not auto-upload, you can use the Nightscout Careportal to input the changes.</p> <ul> <li>Loop 3.3.0 or newer: The SAGE and CAGE fields are automatically uploaded</li> <li>Loop 3.2.x or older: None of the fields are automatically uploaded</li> </ul>"},{"location":"nightscout/overview/#carbs","title":"Carbs","text":"<p>Carbs are automatically uploaded to Nightscout by the Loop app. The amount of carbs on board (active carbs or COB) can be seen by clicking the Loop pill. The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from Nightscout for use in looping calculations, it only uploads carbs to Nightscout that have been entered in the Loop app.</p>"},{"location":"nightscout/overview/#boluses","title":"Boluses","text":"<p>Insulin boluses are automatically uploaded to Nightscout by the Loop app. The bolus is shown as a filled-in blue lower-half of the dot, and the specific amount of the bolus is also shown. There may be a separation between the bolus and the carb entry, especially if the user preboluses a meal.</p> <p>The bolus is uploaded to Nightscout as soon as it starts and Insulin on board (active insulin or IOB) is updated in the Loop pill. Should the bolus be interrupted, the Nightscout information is updated when the Loop information updates (assuming internet access is active).</p>"},{"location":"nightscout/overview/#temp-basals","title":"Temp Basals","text":"<p>Your current basal profile is automatically updated to Nightscout whenever it is changed by Loop. The dashed blue line represents the scheduled basal profile. The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate. If the graph and Loop pill do not agree, you should believe the Loop pill.</p>"},{"location":"nightscout/overview/#predicted-glucose","title":"Predicted Glucose","text":"<p>The purple line to the right of the glucose is Loop predicted glucose. Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps. You can read more on that topic in the LoopDocs: Algorithm section of these docs. If you don't see the prediction (and all other Nightscout and Loop settings are configured), tap on the 3 dots to the right of the 24 to reveal the choice to display AR2 prediction or Loop prediction. Adjust the check boxes to show just the Loop prediction.</p>"},{"location":"nightscout/overview/#loop-pill","title":"Loop Pill","text":"<p>The Loop pill is the little display box which, when hovered over or clicked, will provide additional information about recent Loop activities and status. Information included is the last time Loop ran, the temp basal set, IOB, and COB. Looking at the Loop pill is a quick method for assessing if your loop is currently active, as well.</p> <p>Loop Pill status indicator symbols</p> <p>X  Error in Loop</p> <p>\u03d5  Recommending basal or bolus, but not enacting (open loop or pump suspended)</p> <p>\u2301  Enacted a new temp basal</p> <p>\u21bb Loop is continuing with last temp basal, no change</p> <p>\u26a0  Warning indicating Loop is either red or has failed to upload to Nightscout for a longer period of time.</p> <p>Mouse over or touch the Loop pill to view a tooltip containing one or more of the latest status messages. The most up-to-date Nightscout also includes information in the Loop pill for the minimum and maximum predicted glucose, eventual and predicted glucose.</p> <p></p>"},{"location":"nightscout/remote-commands/","title":"Remote Commands","text":""},{"location":"nightscout/remote-commands/#requirements","title":"Requirements","text":"<p>All remote commands require the configuration steps from Remote Configuration.</p> <ul> <li>A new One-Time Password (OTP) is required for each remote command that issues a bolus or adds a carb entry<ul> <li>The OTP updates every 30 seconds</li> <li>Both the sending device and the Loop phone must have automatic time enabled</li> </ul> </li> <li>Remote Overrides do not require a One-Time Password (OTP)<ul> <li>There are some versions of Nightscout that provide a row for entry of an OTP for Temporary Override in the Nightscout Careportal</li> <li>Leave that row blank</li> </ul> </li> </ul> <p>Do I have to use Loop Caregiver ?</p> <p>There are a number of methods for using remote commands.</p> <p>Things everyone needs to know are covered on this page, so you should read it regardless of how you plan to issue remote commands.</p> <p>If you decide on Loop Caregiver , review both this page and \u00a0Loop Caregiver page.</p>"},{"location":"nightscout/remote-commands/#qr-code","title":"QR Code","text":"<p>On the\u00a0Loop\u00a0phone, Nightscout must be included under the <code>Loop</code> -&gt; Settings -&gt; Services section. Navigate to Services and select Nightscout. Tap on the One-Time Password row to view the QR code.</p> <p>When you need to configure your authentication method, you can either use a saved QR screenshot or scan the QR on the\u00a0Loop\u00a0phone.</p> <p>Options:</p> <ul> <li>Have your Looper (or at least their phone) available</li> <li>Save a screenshot of their QR code<ul> <li>Keep this secure</li> <li>Do not share the QR screenshot when asking for help</li> </ul> </li> </ul> <p></p> <p>While you are on the Settings -&gt; Services -&gt; NightScout screen, notice that the 6-digit number on the One-Time Password row updates every 30 seconds.</p>"},{"location":"nightscout/remote-commands/#set-up-an-authentication-app","title":"Set up an Authentication App","text":"<p>You need to set up an authentication app to generate one-time-passwords for remote bolus and carbs.</p> <p>One of the nice features of Loop Caregiver is that it handles the one-time password (OTP) requirements for you.</p> <p>But even if you choose to use Loop Caregiver , you should configure an authentication app for cases where you don't have access to your Loop Caregiver phone.</p> <p>There are several authentication apps that support one-time passwords.</p>"},{"location":"nightscout/remote-commands/#apple-keychain","title":"Apple Keychain","text":"<p>If you are using an iPhone or a Mac to issue remote commands through a browser or Nightscout app, you can use the \u00a0Apple Keychain\u00a0 which has native support to store passwords and generate one-time passwords. </p> <p>To set up your Nightscout credentials in \u00a0Apple Keychain:</p> <p>On the Caregivers device (iPhone or Mac):</p> <ul> <li>Go to Apple Settings -&gt; Passwords</li> <li> <p>Tap the + Button up top to add a new Password</p> <p></p> </li> <li> <p>You will enter your Nightscout credentials</p> <ul> <li>Website: Enter a portion of the Nightscout URL, without the leading \u201chttps://\u201d</li> <li>Username: Enter the full Nightscout URL including the leading \u201chttps://\u201d part</li> <li>Password: Enter the API_SECRET for the Looper's Nightscout site</li> <li>Tap Done</li> </ul> </li> <li>Next, you are offered a screen that allows you to set up a <code>Verification Code</code><ul> <li>If you need to come back later, you can find that screen again</li> <li>Go to Apple Settings -&gt; Passwords -&gt; Tap the row with your Nightscout URL</li> </ul> </li> <li>Tap \u201cSetup Verification Code\u201d<ul> <li>This is where you can scan your QR code from the\u00a0Loop\u00a0phone or the saved QR screenshot</li> <li>As soon as the camera reads the QR code, an OTP will begin to appear</li> <li>If the\u00a0Loop\u00a0phone is handy, wait a cycle or two and ensure the 6-digit OTP on the password screen matches that on the\u00a0Loop\u00a0phone and they update at the same time</li> <li>Click Passwords on the upper left to return to the previous screen</li> </ul> </li> <li>Select Passwords Options<ul> <li>Enable the <code>Autofill Passwords</code> and check <code>Keychain</code></li> </ul> </li> </ul>"},{"location":"nightscout/remote-commands/#using-safari","title":"Using Safari","text":"<ul> <li>When you use Safari to view your Looper's Nightscout site and choose the Careportal ()<ul> <li>Choose a remote command from the Event Type drop-down menu (remote commands are at the bottom of the list)</li> <li>The OTP will be offered to you for every row - ignore it when entering Carb amount or Absorption Time, or Bolus Amount</li> <li>Select it for the OTP row</li> <li>Note that OTP is not required for Remote Overrides - leave that row blank</li> </ul> </li> </ul>"},{"location":"nightscout/remote-commands/#other-authentication-apps","title":"Other Authentication Apps","text":"<p>There are other Authentication apps available. Here are a few options that you can download from your phone\u2019s app store:</p> <ul> <li>1Password</li> <li>Authenticator</li> <li>Authy</li> </ul>"},{"location":"nightscout/remote-commands/#faqs-for-all-remote-commands","title":"FAQs for all Remote Commands","text":"<ol> <li> <p>If I have multiple Nightscout sites because I support multiple people with T1D looping, do I need multiple APNs Keys? Answer: No. If you support multiple people, you can use the one APNs key in each of their Nightscout sites.</p> </li> <li> <p>How can I tell if it worked? Answer: You should see your override pill in Nightscout, with the NEXT Loop\u00a0cycle, reflecting that the desired remote action took place. If you are near the\u00a0Loop\u00a0phone, you should see the new override within less than 30 seconds or so.</p> </li> </ol>"},{"location":"nightscout/remote-commands/#faqs-on-remote-overrides","title":"FAQs on Remote Overrides","text":"<p>Don't forget to read Loopdocs: Overrides. </p> <p>For remote overrides in particular:</p> <ol> <li> <p>Can I set a different override in Nighscout than I have programmed into\u00a0Loop\u00a0app? Answer: No. You will only be able to enact override presets already programmed into the Loop app.</p> </li> <li> <p>If I didn't start the override in Nightscout (it was started in\u00a0Loop\u00a0itself), can I still use Nightscout to cancel it? Answer: Yes. You can cancel an override set in\u00a0Loop\u00a0with a Nightscout-set cancel \"temporary override\" command in the careportal.</p> </li> <li> <p>Can I replace an override set in\u00a0Loop\u00a0with an override set in Nightscout? Answer: Yes.</p> </li> <li> <p>Can I see on Nightscout when a temporary override has been set using the looper\u2019s phone? Answer: Yes. There will be a grey bar with the name of the override noted and the Loop pill will display the targets and duration. Remember, there is a KNOWN issue with the grey bars, so use the pill as your best guide.</p> </li> <li> <p>Can a looper cancel a remote override? Answer: Yes. They can tap the heart icon  in\u00a0Loop\u00a0so that it is no longer highlighted. This turns off the override, regardless of where it was initiated.</p> </li> <li> <p>I set a remote override in Nightscout but the Looper tapped the heart symbol  in the Loop app, so the override turned off. Will the override get reinstated  the next time\u00a0Loop\u00a0completes with internet access? Answer: No. The APN is only sent once. You can set the remote override again if need be.</p> </li> <li> <p>Can I schedule a remote override ahead of time using Nightscout? Answer: No. When you set a remote override in Nightscout, it starts immediately and lasts for the duration programmed for that override in the Loop app. You can only set an override in advance using the Loop app.</p> </li> </ol>"},{"location":"nightscout/remote-commands/#remote-commands","title":"Remote Commands","text":"<p>Remote Commands to deliver a bolus or add a carb entry require a \u00a0One Time Passcode\u00a0 (OTP).</p> <p>Minimum Versions: Loop 3\u00a0 and \u00a0Nightscout 14.2.6</p> <p>If your Nightscout version does not meet that minimum requirement, remote commands might be accepted but if they are, the time for the commands is always the current time. In other words, Carbs in the Past or Future might be accepted, but would be entered at the current time on the\u00a0loop\u00a0phone.</p>"},{"location":"nightscout/remote-commands/#warnings-on-remote-commands","title":"Warnings on Remote Commands","text":"<p>Duplicate Delivery Risk</p> <p>We want to highlight a very important risk before you get started.</p> <p>For safety, always assume a previous remote carbs/bolus was delivered. For motivation think of the following example:</p> <ul> <li>You send a 5-unit remote bolus.</li> <li>The bolus is delivered to the Looper.</li> <li>Nightscout is having a temporary technical issue and doesn't show the bolus was received.</li> <li>You are watching Nightscout and you don\u2019t see a delivery so you assume it failed.</li> <li>You send another remote 5-unit bolus.</li> <li>The second 5-unit bolus is delivered to the Looper (10 Units total).</li> </ul> <p>You can see the danger of sending duplicate bolus/carbs so be careful. If a remote bolus/carb entry doesn\u2019t show in Nightscout, use your own judgment on whether enough time has passed to try again.</p>"},{"location":"nightscout/remote-commands/#remote-bolus-then-remote-carb","title":"Remote Bolus, Then Remote Carb","text":"<p>If sending both, choose Bolus then Carbs</p> <p>If you plan to send a carb command remotely and later decide to issue a bolus command - STOP and consider.</p> <p>There are 2 scenarios of concern that could lead to too much insulin:</p> <ul> <li>Dosing Strategy is Temp Basal Only (temporary basal)<ul> <li>Loop\u00a0will initiate a max Temp Basal when it receives the carbs remote command</li> <li>Your bolus is accepted next and takes place in addition to the high temporary basal</li> </ul> </li> <li>Dosing Strategy is Automatic Bolus <ul> <li>Loop\u00a0will initiate a percentage of the recommended dose when it receives the carbs remote command</li> <li>Your bolus will be accepted and take place in addition to an automatic boluses or be rejected because a bolus is already in progress</li> </ul> </li> </ul> <p>Typically, sending a remote carb entry alone is sufficient for\u00a0Loop\u00a0to know about the carbs and begin to dose for them.</p> <p>If you really want to both bolus for carbs and enter carbs, then do it in that order.</p> <ol> <li>The bolus, when accepted, may start a zero Temp Basal (temporary basal) (which is \"safer\")</li> <li>The carbs, when accepted, will cause the app to respond to the carbs</li> <li>In this case, the prediction includes both carbs and bolus</li> </ol> <p>\u2757\ufe0f Remember - you should pause at least 60 seconds between remote commands or the One-Time-Password (OTP) will be rejected as having already been used.</p>"},{"location":"nightscout/remote-commands/#use-unique-times-for-remote-carbohydrate-entries","title":"Use Unique Times for Remote Carbohydrate Entries","text":"<p>Use unique times for remote carbohydrate entries</p> <p>Instead of adding a second remote carbohydrate entry at an identical time, add one minute to the second entry.</p> <p>This ensures that Nightscout keeps both entries.</p> <p>Any Caregiver entering remote carbohydrates needs to be aware of how Nightscout decides what carbohydrates treatments are unique. If two entries have the same hour:minute:second time, Nightscout keeps only one of the entries.</p> <ul> <li>It does not affect how the Loop app handles the remote carbohydrate entries it receives<ul> <li>The Loop app assigns a unique identifier to each entry; it doesn't depend just on the timestamp</li> </ul> </li> <li>It will affect Nightscout and thus LoopCaregiver displays<ul> <li>This might lead to the Caregiver thinking they need to send the remote carbohydrate again</li> <li>But Loop has both entries</li> </ul> </li> </ul> <p>One example scenario:</p> <ul> <li>A caregiver enters 10 g for lunch with a timestamp of 11:30, then waits for child to eat and glucose to start rising</li> <li>They then want to \"edit\" that entry to 15 g, but that is not possible with remote carbohydrates<ul> <li>Instead they can add a new 5 g entry</li> <li>They should enter the second entry at 11:31</li> </ul> </li> </ul> <p>Second example scenario:</p> <ul> <li>A caregiver wants to enter two different absorption times using remote carbohydrates<ul> <li>The first entry eating time is at 11:30 for 10 g with 2 hour absorption</li> <li>The second entry eating time is at 11:31 for 15 g wtih 4 hour absorption</li> </ul> </li> </ul> <p>The LoopCaregiver app was recently modified to use the seconds from when the new entry was created, instead of using hour:minute:00. This change makes it less likely that two entries with the same timestamp will collide. (One chance in 60.)</p> <p>Any remote carbohydrate entry from the Nightscout careportal using the same hour:minute time, however, will be entered with 0 seconds.</p> <ul> <li>If a second entry is made from the Nightscout careportal with the same hour:minute selection:<ul> <li>The Loop app accepts the second entry and treats it as a unique event</li> <li>When the entry is reported to Nightscout from the Loop app as a carbohydrate event, the new event replaces the previous event in the Nightscout record</li> </ul> </li> </ul> <p>For more information, see:</p> <ul> <li>Carb treatments disappearing in Nightscout</li> </ul>"},{"location":"nightscout/remote-commands/#using-remote-commands","title":"Using Remote Commands","text":"<p>There are four ways you can trigger your commands remotely; Loop Caregiver, Nightscout Careportal, Shortcuts, and IFTTT.</p>"},{"location":"nightscout/remote-commands/#loop-caregiver","title":"Loop Caregiver","text":"<p>Click the link above to read more about Loop Caregiver .</p>"},{"location":"nightscout/remote-commands/#nightscout-careportal","title":"Nightscout Careportal","text":"<p>To use remote commands in the \u00a0Careportal, you must configure your Nightscout site according to the directions here in\u00a0Loopdocs\u00a0in addition to setting up the Remote Configuration. </p> <ul> <li>Pay particular attention to these entries in the <code>ENABLE</code> line: <code>override</code> <code>careportal</code> <code>Loop</code><ul> <li>The order of the words in the <code>ENABLE</code> line is not important</li> </ul> </li> <li>If you changed your Loop build method (between Mac Build and Browser Build) - don't forget the extra Config Var</li> <li>You site must be authenticated so that your \u00a0Careportal\u00a0is active to send remote overrides from the website</li> </ul> <p>Once authenticated by entering your <code>API_SECRET</code>, there is a plus sign () in the upper right corner of your site. That is your Careportal. Tap the Careportal plus sign () and then scroll down to the bottom of the <code>event type</code> menu. Refer to Command Remote Bolus or Carb Entry for more instructions and a graphic.</p> <p>Please note that there are entries that do not say <code>remote</code> at the top of the list.</p> <ul> <li>You must go all the way to the bottom of the list to see the remote commands</li> <li>Those entries at the top of the list are for caregivers who may be recording manual treatments without access to an automated system; they are not read by the Loop app</li> <li>For users of systems based on OpenAPS, the behavior may be different - check the documentation for your particular app</li> </ul>"},{"location":"nightscout/remote-commands/#command-remote-bolus-or-carb-entry","title":"Command Remote Bolus or Carb Entry","text":"<p>Open your Nightscout site in a browser or app.</p> <ul> <li> <p>Tap the Careportal plus sign () and then scroll down in the <code>event type</code> dropdown menu to find <code>Remote Carb Entry</code> or <code>Remote Bolus Entry</code> as shown in the graphic below</p> <p></p> </li> <li> <p>Fill out the treatment log until you get to the OTP row</p> <ul> <li>When using Safari, the OTP code is automatically offered - might need to tap twice</li> <li>For other authentication apps (Authenticator, 1Password, etc)<ul> <li>Tap on the code in the authentication app and copy it to your clipboard</li> <li>In Nightscout, paste that code into the OTP box</li> </ul> </li> <li>Click \u201cSubmit Form\u201d</li> </ul> </li> </ul> <p>Note that Loop will honor both the current OTP code and the one that just expired.</p> <p>If the Looper is with you, you can see the notification on their phone. You can see the entry on the\u00a0Loop\u00a0carbohydrate or the insulin displays to see if it went through.</p> <p>If the Looper is not with you, you should see the result in the Nightscout dashboard within 5 minutes.</p>"},{"location":"nightscout/remote-commands/#start-and-end-remote-override","title":"Start and End Remote Override","text":"<p>Starting or ending a remote override does not require a One-Time Password.</p> <p></p> <p>The Looper will see a banner notification that a remote command has been sent with details about that command and whether it succeeded (or not).</p> <p></p> <p>Canceling an override through Nightscout careportal is as simple as selecting the event type <code>Temporary Override Cancel</code> and submitting.</p>"},{"location":"nightscout/remote-commands/#shortcuts","title":"Shortcuts","text":"<p>If you want to make your life SUPER AMAZING, check out using the iPhone's Shortcuts app. The Shortcuts app is for making little automations (like mini apps) that can integrate parts of your life. In this case, we've written a couple of shortcuts for you that integrate\u00a0Loop\u00a0overrides with Nightscout.</p> <p>Important Note</p> <p>Before you click on the download file below...save yourself some trouble.</p> <ol> <li>Download the Shortcuts app if you don't have it yet</li> <li>Choose to run any shortcut from the Gallery. It can be the laundry timer...I don't care, just pick one shortcut and run it.  </li> <li>THEN, go to download the shortcut of your choice below.    \u2139\ufe0f The shortcuts that aren't run through the Gallery option are called \"untrusted\". And you need a slider in your iPhone to trust the \"untrusted\" shortcuts you would be downloading here.    But...in a lovely iOS glitch...that slider doesn't appear unless you've run a trusted shortcut first.  So, run one now.</li> <li>Then, this slider will now be visible in the iPhone Settings app under the Shortcuts app menu.</li> <li>When you will see the message \"This shortcut cannot be opened because your Shortcuts security system settings don't allow untrusted shortcuts\"</li> <li>Open iPhone Settings and scroll down the list and tap the Shortcuts menu to turn on \"Allow Untrusted Shortcuts\".</li> </ol> <p>Click these links on your iPhone and you'll be prompted to download the premade shortcuts (assuming you open the links in Safari browser on iPhone):</p> <p>Comprehensive\u00a0Loop\u00a0Shortcut includes Set Remote Override, Cancel Override, Loop Troubleshooting Tips, Quick Text options, Manual BG entry, Bookmarks to websites, etc.</p> <p>And if you want to save one click to get to these one functions more directly: these shortcuts are simplified to offer only one function:</p> <p>Set Remote Override only shortcut</p> <p>Cancel Override\u00a0 only shortcut</p> <p>A couple notes about these shortcuts:</p> <p>You need to open those links in the Safari browser on your iPhone. A confirmation will show to initiate the download.</p> <p>After the download finishes, tap the button marked <code>AA</code> near your Safari address bar and tap <code>Downloads</code> (downloads)  to find and open the downloaded Shortcut.</p> <p>Wait a bit, and the shortcut's inner guts will be there...scroll ALL the way down to the bottom to click the button to save the untrusted shortcut</p> <ol> <li>When you enter your Nightscout URL in \u00a0the <code>URL</code> field\u00a0 of the\u00a0Loop\u00a0shortcut setup, make sure you don't include a \u00a0trailing <code>/</code>, or the API calls to Heroku will error out.</li> <li>When a remote override is set properly, you'll see an <code>ok</code> message displayed. If there is an error, you'll see an error message. Most errors will be that you have an <code>API_SECRET</code> wrong (make sure there isn't a space at the end of your <code>API_SECRET</code> that you don't see) or you failed to do the steps to setup Nightscout and update your\u00a0Loop\u00a0app as described in steps 1-3 above.</li> <li>You can absolutely customize these bits and pieces within the shortcut. Change the text messages, and change the links... It is totally up to you.</li> </ol>"},{"location":"nightscout/remote-commands/#ifttt","title":"IFTTT","text":"<p>If you want to walk uphill both ways in the snow carrying bags of uneven groceries, you can also set overrides remotely by using If This, Then That (IFTTT) integration. By using IFTTT, you can have single button presses on your phone that will set an override, log a cannula change, log a sensor change and much more.</p> <ul> <li>Please see<ul> <li>Nightscout: Configurations: IFTTT Maker</li> <li>Nightscout: IFTTT</li> </ul> </li> </ul>"},{"location":"nightscout/remote-config/","title":"Remote Configuration","text":"<p>Page Summary</p> <ol> <li>Update the Looper's iPhone Settings</li> <li>Create a Key for an <code>Apple Push Notifications service (APNs)</code></li> <li>Update Nightscout site and add some \"config vars\" lines in Nightscout site settings</li> <li>Test Remote Overrides</li> </ol>"},{"location":"nightscout/remote-config/#set-up-remote-for-nightscout","title":"Set Up Remote for Nightscout","text":"<p>You can use the Nightscout site to remotely set and cancel override presets remotely in the Loop app.</p> <p>With \u00a0Loop 3, you can also send remote commands to add carbs and command a bolus. Remote bolus/carb commands have a minimum requirement of \u00a0Nightscout 14.2.6. If your Looper's Nightscout version does not meet that minimum requirement, remote commands might be accepted, but the time for the commands is always the current time. In other words, Carbs in the Past or Future might be accepted, but would be entered at the current time on the\u00a0Loop\u00a0phone.</p> <p>After you complete the configuration, read the entire Remote Commands page - pay attention to the warnings and caveats. Test this while your Looper is sitting next to you so you can watch their phone.</p> <p>Remote Nightscout Interface Caveats</p> <ul> <li>Must use a paid \u00a0Apple Developer\u00a0 account to build\u00a0Loop<ul> <li>Apple Push Notifications\u00a0 (APN) service is not available with a Free account</li> </ul> </li> <li>When you build \u00a0Loop, the required APN information is tied to your Apple Developer account<ul> <li>You add your APN information to your Looper's Nightscout site</li> <li>If you support multiple Looper's, you add the same APN variables to each of their Nightscout sites</li> </ul> </li> <li>There are many choices for building your own or paying someone to build a Nightscout site<ul> <li>The directions for only one of the options is documented on this page</li> <li>Use that as a guide for your site</li> </ul> </li> <li>Nightscout Docs: Comparison Table<ul> <li>Warning: examine the <code>Loop remote carbs/bolus</code> row: subscription refers to a monthly fee</li> <li>If a green check is missing, it might just be too new for evaluation</li> </ul> </li> </ul>"},{"location":"nightscout/remote-config/#paid-providers-and-remote-configuration","title":"Paid Providers and Remote Configuration","text":"<p>There are several options to pay for a turn-key Nightscout service.</p> <ul> <li>In order to enable remote commanding, your Nightscout site must be configured with information associated with the Apple Developer ID used to build the Loop app<ul> <li>Most Nightscout options allow you full access to your Nightscout configuration variables so you can add the required information</li> </ul> </li> <li>Please check out Nightscout: New User for up-to-date information about your Nightscout options<ul> <li>If you use the wizard, you can see more options when you select No to the question about contributing to research and development</li> <li>If you choose T1Pal and want to use remote commands, you must also purchase your Loop app from them for an additional monthly fee - contact T1Pal for details</li> </ul> </li> </ul> <p>The rest of this page assumes that you built your Loop app and you have full access to the configuration variables for your Nightscout site.</p>"},{"location":"nightscout/remote-config/#step-1-update-the-loopers-iphone-settings","title":"Step 1: Update the Looper's iPhone settings","text":"<p>For remote commands to successfully deploy to a Looper's iPhone when the phone is locked, they must have Background App Refresh enabled.</p> <ul> <li>The slider in <code>iPhone -&gt; Settings -&gt; General -&gt; Background App Refresh -&gt; Loop</code> must be enabled</li> </ul> <p>Consequence if Looper's phone is not configured correctly:</p> <ul> <li>If Background app refresh is not enabled, the remote overrides might only enact if the Loop app is open and the phone is unlocked</li> </ul> <p>Keep Notifications Turned on for Looper's Phone</p> <p>Typically, the Looper's phone has Notifications enabled for \u00a0Loop. In fact, if they don't, a red warning bar is prominently displayed. </p> <p>There may be times when you really need\u00a0Loop\u00a0to be quiet, so you can turn off Notifications. The remote commands still go through but the Looper does not see a notification that this happened.</p> <p>Best practice is to keep\u00a0Loop\u00a0Notifications enabled.</p>"},{"location":"nightscout/remote-config/#step-2-apple-push-notifications","title":"Step 2: Apple Push Notifications","text":"<p>The step is required for the Loop app to give permissions to your Nightscout site to remotely interact with it. To enable this, you need to create a key and grant it access to the \u00a0Apple Push Notification Service (APNS). </p> <p>Reminder</p> <p>This only works with the paid Apple Developer ID.</p> <ol> <li>To get started, go to the <code>Keys</code> section under Apple Developer's <code>Certificates, Identifiers &amp; Profiles</code> and login with the Apple ID associated with your developer team that you used to build the Loop app.</li> <li>If not already open in your browser (compare with the below screenshot), <ul> <li>Click on <code>Keys</code> (located in the left-hand column). </li> <li>Either click on the blue <code>Create a new key</code> button OR the plus button ()  to add a new key. <p></p> </li> </ul> </li> <li>In the form that appears, do the following:<ul> <li>Click the checkbox for enabling <code>Apple Push Notifications service (APNs)</code></li> <li>Enter a name for the key such as <code>Nightscout</code> (you can name it however you want, just make sure you know what the key is for by the name you choose).</li> <li>Then click the <code>Continue</code> button in the upper right of the screen.   <p></p> </li> </ul> </li> <li>In the screen that follows, click the blue <code>Register</code> button.   <p></p> </li> <li>In the screen that follows, click the blue <code>Download</code> button.     This step will download a file with a name that starts with <code>AuthKey</code> and ends with <code>.p8</code>.   <p></p> </li> <li>Find your <code>AuthKey</code> downloaded file in your downloads folder.    Double-click to open it and you will be presented a message asking how you'd like to open it. The graphic and instructions below are for a Mac. Make sure your editor does not change any characters in your APN key; use a text-only editor like NotePad (PC) or TextEdit (Mac).    Click on <code>Choose Application...</code> and then select <code>TextEdit</code> as your application to open it with.   <p> </p> </li> <li> <p>When the file opens, it will look similar to the screenshot below. In a few minutes, after we do a few other steps first, we will need to highlight ALL OF THE CONTENTS of that file and copy it because we will be pasting it in Heroku or whichever Nightscout provider you are using. Yes, allllll of the contents.     So, the easiest way is to:</p> <ul> <li>Click inside that file</li> <li>Highlight all the text, and then</li> <li>Copy all the text to the clipboard (Cf. screenshot below).<ul> <li>On a Mac, press Cmd+A to select all, then press Cmd+C to copy the selection. </li> <li>On a PC, press Ctrl+A to select all, then press Ctrl+C to copy the selection.</li> </ul> </li> </ul> <p>You don't have to do it right now...just keep that window open in the background for now until we need it a little further down. Then we will copy all that text.</p> <p></p> </li> </ol>"},{"location":"nightscout/remote-config/#step-3-add-apn-to-nightscout","title":"Step 3: Add APN to Nightscout","text":""},{"location":"nightscout/remote-config/#update-nightscout-site","title":"Update Nightscout Site","text":"<p>You'll need to make sure your Nightscout site version is version <code>13.0.1</code> or newer for remote overrides and version <code>14.2.6</code> or newer for access to all the remote command features. </p> <p>What is my Nightscout Version Number?</p> <p>To find your Nightscout version number:</p> <ul> <li>Tap on (<code>\u2630</code>) the hamburger button (3 horizontal lines stacked on each other) at the upper right, near the authentication button.</li> <li>A context menu slides in from below the hamburger.</li> <li>Scroll to the very bottom of this menu.</li> <li>The version is located in the <code>About</code> section after the <code>Settings</code> section, (below the <code>Save</code> button).</li> </ul> <p>This link should be used if you want to Nightscout: Update your Nightscout site.</p> <p>Note for Google Cloud Users</p> <p>The Nightscout with Google Cloud instructions include information about updating your site. Scroll down to the line (on that page) that says <code>Update Nightscout</code>.</p>"},{"location":"nightscout/remote-config/#add-apn-variables-to-nightscout","title":"Add APN Variables to Nightscout","text":"<p>In order to use remote overrides, you must add a couple of new variables. If you don't know how to update your Nightscout configuration, review Nightscout: Setup Variables and then come back.</p> <p>The instructions in this section show Heroku images. If you are using a different method, you should be able to \"translate\" the steps.</p> <p>Go to the <code>Settings</code> tab near the top of the screen on your Heroku app and then click on <code>Reveal Config Vars</code>.</p> <p></p> <p>Scroll down the bottom of the <code>Config Vars</code> lines until you find the last blank one.  You are going to add three new rows of config vars for remote overrides as shown below:</p> <p></p> KEY VALUE <code>LOOP_APNS_KEY</code> Enter the ENTIRE contents of the downloaded <code>.p8</code> file including the <code>BEGIN</code> and <code>END</code> lines. Here's where you can use the Cmd+A and Cmd+C to highlight and copy all the text in that file so you can paste it into Heroku here for this new variable you are creating.  <code>LOOP_APNS_KEY_ID</code> String of characters on the <code>.p8</code> download file immediately following the underscore (<code>_</code>) and not including the file extension (<code>.p8</code>), or you can get it from your saved key in your developer account as shown next step, too. This is a part of the downloaded filename located after the underscore (<code>_</code>) and before the file extension (<code>.p8</code>).     <code>LOOP_DEVELOPER_TEAM_ID</code> Get this value from the Loop app signing or in your \u00a0Apple Developer\u00a0 account's top right corner under your name  <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> (optional) Set this to <code>production</code> if you installed\u00a0Loop\u00a0remotely such as with TestFlight, Diawi, AppCenter, or an IPA. If you built directly to your phone in XCode with your phone plugged into to your computer, do not include this variable."},{"location":"nightscout/remote-config/#remote-build-config-var-requirement","title":"Remote Build Config Var Requirement","text":"<p>That last row of the table above is needed if you are using a remote build option such as LoopDocs: GitHub Build Actions or downloaded an archived file via Loop and Learn: Remote Build with Diawi. If you later return to a direct Xcode build to your phone, you must remove that config var or remote commands will not work.</p> <p>When executed properly, you should have something that looks like this for the three (or four) new variables that you added:</p> <p></p>"},{"location":"nightscout/remote-config/#baddevicetoken","title":"BadDeviceToken","text":"<p>When the Nightscout config var LOOP_PUSH_SERVER_ENVIRONMENT does not match the Loop app build method; the error message contains the phrase <code>APNs delivery failed: BadDeviceToken</code>.</p> <ul> <li>If\u00a0Loop\u00a0was installed remotely (typically from TestFlight following GitHub Browser Build), you must have Nightscout config var <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> set to <code>production</code></li> <li>If\u00a0Loop\u00a0was built using Mac, you cannot have <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> as one of your Nightscout config vars</li> </ul>"},{"location":"nightscout/remote-config/#do-not-confuse-your-keys","title":"Do Not Confuse Your Keys","text":"<p>API Key vs APN Key</p> <p>If you build with the Build with Browser, you may notice \u00a0the \u00a0Application Programming Interface (API)\u00a0 key\u00a0 has the same type of format as \u00a0the \u00a0Apple Push Notification (APN)\u00a0 key. The keys for both purposes are of type <code>p8</code>, but should not be confused.</p> <p>The Secrets for building with GitHub use the API Key.</p> <p>The config vars for Nightscout use the APN Key.</p> <ul> <li>If you are using remote commands with Nightscout and building with the GitHub Browser build method, you must also add the config var of <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> with a value of <code>production</code> to your Nightscout site or the remote commands will not work.</li> <li>If you are using the Mac build method, you should not have a config var of <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> entered - remove it if it is present.</li> </ul>"},{"location":"nightscout/remote-config/#step-4-test-remote-overrides","title":"Step 4: Test Remote Overrides","text":"<p>If remote overrides do not function, remote commands for delivering a bolus or adding a carb entry will not work either.</p> <p>After you finish setting up your Nightscout site:</p> <ol> <li>Use the Looper's phone to set an override</li> <li>Make sure that override shows up on the Nightscout site</li> <li>Then using the \u00a0Nightscout Careportal, test that you can turn off that override</li> </ol>"},{"location":"nightscout/remote-config/#things-to-check","title":"Things to Check:","text":"<ul> <li>Remote overrides will not start working until after you activate an override in the app at least once<ul> <li>Activating an override from the\u00a0Loop\u00a0interface will upload the necessary push notification token to Nightscout which will enable remote commands to work</li> <li>If your Looper gets a new phone - be sure to activate an override from the new phone before trying to use remote commands</li> </ul> </li> <li>Notifications must be allowed in\u00a0Loop</li> <li>Give loop access to all health data</li> <li>Enable Background App Refresh</li> <li>Double check your Nightscout credentials</li> <li>Low Power Mode may prevent background notifications from working</li> <li>Some have found that activating the \u201cFocus\u201d and Do-Not-Disturb features on iOS can prevent push notifications from being delivered<ul> <li>Turn these off when troubleshooting to eliminate this as a source of problems</li> </ul> </li> <li>iOS 15.3.x: Note there are reports of Remote notifications not being received to the Loopers device for iOS version 15.3 and 15.3.1; this is fixed in iOS version 15.4</li> <li>If you distribute the app remotely (i.e. TestFlight, Diawi, AppCenter), you must set a special Nightscout variable, LOOP_PUSH_SERVER_ENVIRONMENT to \u201cproduction\u201d, to enable push notifications<ul> <li>See Remote Build Config Var Requirement</li> </ul> </li> </ul>"},{"location":"nightscout/remote-errors/","title":"Remote Errors","text":""},{"location":"nightscout/remote-errors/#loop-data-is-not-showing-in-nightscout","title":"Loop data is not showing in Nightscout","text":"<ul> <li>This is a\u00a0Loop\u00a0and/or Nightscout issue, not related to remote configuration<ul> <li>Review the LoopDocs: Nightscout with\u00a0Loop page</li> <li>Check out links on the LoopDocs: Nightscout Troubleshooting page</li> </ul> </li> <li>Make sure Looper's phone is connected to the internet so it can upload to Nightscout</li> </ul>"},{"location":"nightscout/remote-errors/#remote-commands-stopped-working","title":"Remote Commands Stopped Working","text":"<p>This section is for people who were using remote commands and they suddenly stopped working.</p> <p>If you are using LoopCaregiver, try the remote command directly from Nightscout to see if they work there. If they are not working there as well, check out your account status first before attempting the fixes on the rest of this page.</p> <ul> <li>Your Apple Developer account must be in good standing for the push notifications to work</li> <li>Log in to your Apple Developer account and see if there are agreements you need to accept</li> </ul>"},{"location":"nightscout/remote-errors/#improper-configuration","title":"Improper Configuration","text":""},{"location":"nightscout/remote-errors/#nightscout-config-and-loop-build-method","title":"Nightscout Config and Loop Build Method","text":"<p>Ensure your Nightscout version is at least version 14.2.6.</p> <p>Verify that you performed all the Remote Configuration steps for the Nightscout site including sending an override from the\u00a0Loop\u00a0phone to Nightscout.</p>"},{"location":"nightscout/remote-errors/#baddevicetoken","title":"BadDeviceToken","text":"<p>When the Nightscout config var LOOP_PUSH_SERVER_ENVIRONMENT does not match the\u00a0Loop\u00a0app build method; the error message contains the phrase <code>APNs delivery failed: BadDeviceToken</code>.</p> <ul> <li>If\u00a0Loop\u00a0was installed remotely (typically from TestFlight following GitHub Browser Build), you must have Nightscout config var <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> set to <code>production</code></li> <li>If\u00a0Loop\u00a0was built using Mac, you cannot have <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> as one of your Nightscout config vars</li> </ul> <p>If you attempt to issue a command from Nightscout Careportal; after you hit submit and then OK, you will see the error message:</p> <pre><code>Error: APNs delivery failed: BadDeviceToken\n</code></pre> <p>If you attempt to issue a command using Loop Caregiver ; after you authenticate the command, you will see the error message listed below and shown in the screenshot.</p> <pre><code>HTTP Error\nStatus Code: 500\nbody: APNs delivery failed: BadDeviceToken\n</code></pre> <p></p>"},{"location":"nightscout/remote-errors/#loop-remote_overrides_disabled","title":"Loop <code>REMOTE_OVERRIDES_DISABLED</code>","text":"<p>You can build Loop with Build-Time Features as part of code customization.</p> <p>If you added this Build-Time Flag: <code>REMOTE_OVERRIDES_DISABLED</code></p> <p>You will not see any errors, but nothing will happen when you issue any kind of remote command.</p> <p>Solution: Remove  <code>REMOTE_OVERRIDES_DISABLED</code> from  <code>LoopConfigOverride.xcconfig</code> file and rebuild the\u00a0Loop\u00a0app.</p>"},{"location":"nightscout/remote-errors/#incorrect-password-otp-error","title":"Incorrect Password (OTP) Error","text":"<p>The references to Caregiver below is the person sending the commands. There are specific Loop Caregiver app insructions that you modify for your authenticator. You must have the\u00a0Loop\u00a0phone with you to troubleshoot this problem.</p> <ul> <li>The Apple clock should be set to automatic on both the Looper's phone and Caregiver\u2019s device.<ul> <li>If the clock is incorrect, even slightly, remote commands will fail.</li> </ul> </li> <li>Check if One-Time Passwords (OTP) align between Caregiver and\u00a0Loop.<ul> <li>In\u00a0Loop: Settings -&gt; Services -&gt; Nightscout</li> <li>In Loop Caregiver : Settings -&gt; Tap on Loopers Name</li> <li>Observe the 6-digit OTP as they change</li> </ul> </li> <li>If the OTP don't match, you can reset it:<ul> <li>Warning: If there are multiple devices (or people) sending remote commands, this procedure resets the OTP for all</li> <li>Loop: Settings -&gt; Services -&gt; Nightscout -&gt; One-Time Password -&gt; Tap Reload button<ul> <li>The QR code is different as soon as you hit <code>Reload</code></li> </ul> </li> <li>Loop Caregiver: Delete the Looper's profile from Loop Caregiver and add the Looper again by scanning their new QR code</li> <li>Authenticators for every device used to send remote commands must be updated<ul> <li>Delete the OTP configuration</li> <li>Add the new QR code</li> </ul> </li> </ul> </li> </ul>"},{"location":"nightscout/remote-errors/#undelivered-or-expired-commands","title":"Undelivered or Expired Commands","text":"<p>Apple Push Notifications will often not make it to an app, either due to your settings or intentional limitations by Apple. This error can appear in various forms:</p> <ul> <li>Push notification banner never shows on Looper\u2019s device.</li> <li>Push notification banner shows but nothing happens in\u00a0Loop (no error or success message afterwards)</li> <li>Error message shows that Password (OTP) is expired</li> </ul> <p>While\u00a0Loop\u00a0does not have control over Push Notification timely delivery, there are things that can be done to mitigate these issues. Note that rebuilding\u00a0Loop, Loop Caregiver or Nightscout is generally not going to help.</p> <p>Check these settings on the Looper\u2019s device, not the Caregivers. Several of these are related to Apple suppressing notifications.</p> <ul> <li>Notifications<ul> <li>Settings -&gt; Notifications -&gt;\u00a0Loop</li> <li>Turn on \u201cAllow Notifications\u201d</li> <li>Turn on \u201cTime Sensitive Notifications\u201d</li> </ul> </li> <li>Focus Modes<ul> <li>For all focus modes (ex: Do Not Disturb, Sleep), make sure\u00a0Loop\u00a0is listed as an app allowing Notifications.</li> <li>To Adjust<ul> <li>Settings -&gt; Focus</li> <li>Select the focus mode (ex: Do Not Disturb, Sleep)</li> <li>Under \u201cAllow Notifications, tap \u201cApps\u201d</li> <li>Add \u201c\u00a0Loop\u00a0\u201d to the list.               </li> <li>Turn on \u201cTime Sensitive Notifications\u201d.</li> </ul> </li> </ul> </li> <li>Background App Refresh<ul> <li>Settings -&gt; General -&gt; Background App Refresh</li> <li>Select \u201cOn\u201d up top</li> <li>Activate\u00a0Loop\u00a0toggle in list</li> </ul> </li> <li>Lower Power Mode<ul> <li>Turn off if able</li> </ul> </li> </ul> <p>Some other things to try on the Looper\u2019s phone:</p> <ul> <li>Reboot phone<ul> <li>This sometimes resets Apple\u2019s push notification limit.</li> </ul> </li> <li>Try wifi instead of cellular, if able<ul> <li>Apple may not deliver notifications on cellular as often as wifi.</li> </ul> </li> <li>Charge the phone<ul> <li>If the battery is low, iOS may not deliver notifications to save battery life.</li> </ul> </li> <li>Limit the number of\u00a0Loop\u00a0commands you send in a short period. Apple may throttle notifications if too many are received. (i.e. no more than 1 or 2 per hour may help).</li> <li>Consider disabling \u201cspammy\u201d notifications from other apps. This is only a theory, but it is possible that other apps can cause the system to throttle all notifications, including\u00a0Loop.</li> <li>Wait 24 hours or so as it often just takes time for the push notification limits to \u201creset\u201d.</li> <li>iOS 15.3.x: Note there are reports of Remote notifications not being received to the Loopers device for iOS version 15.3 and 15.3.1. This is fixed in iOS version 15.4.</li> </ul>"},{"location":"nightscout/remote-errors/#how-to-ask-for-help","title":"How to Ask for Help","text":"<p>This is helpful information to share when requested by helpers. If you are not using Loop Caregiver, review the response seen on the Nightscout site.</p> <ol> <li>Activate an override from within\u00a0Loop . Does Nightscout show the active override?</li> <li>Activate an override from  Nightscout . Does it change the active override in\u00a0Loop?</li> <li>Do errors show in Loop Caregiver or Nightscout Careportal when you send a remote command?<ul> <li>Share screenshots of error if any</li> </ul> </li> <li>Do errors show in iOS Notifications on the Looper\u2019s device?<ul> <li>Check their Notification history in iOS by swiping down </li> <li>Share screenshots of errors if any</li> </ul> </li> <li>What\u00a0Loop\u00a0version are you using? Released (main) or development (dev)? Approximately when did you update last?<ul> <li>The minimum version that support remote bolus and carbs is\u00a0Loop\u00a03</li> </ul> </li> <li>What iOS version is being used on the Looper\u2019s device?<ul> <li>Note that iOS 15.3.x had notification issues</li> <li>Update to a newer version</li> </ul> </li> <li>How did you build\u00a0Loop?<ul> <li>Build with Xcode to device (typical)?</li> <li>Using AppCenter or Diawai? A special environment variable must be set LOOP_PUSH_SERVER_ENVIRONMENT=production</li> </ul> </li> </ol> <p>Mention which troubleshooting steps you have completed so we know whether to ask about these again.</p>"},{"location":"nightscout/remote-errors/#other-errors","title":"Other Errors","text":"<p>Once you've set up remote commands, you may encounter errors when trying to run them via Nightscout or iOS Shortcuts.  Below are the most common and typical solutions.</p> <ol> <li><code>Error: Loop notification failed: Could not find deviceToken in loopSettings</code> You might see this in either Nightscout or Shortcuts.  The error is most commonly caused by\u00a0Loop\u00a0not pointing to the right Nightscout instance or you haven't yet run an override locally (with the\u00a0Loop app) before trying to run one remotely. Solution: Confirm the Loop app is pointing to the right Nightscout site (and there are no extra spaces or a slash (<code>/</code>) at the end, and always run an override for a few seconds in the Loop app before you try to run one remotely.</li> <li><code>Error: cannot POST/api/v2/notifications/loop</code> You might see this in iOS Shortcuts.  This means Nightscout is not updated correctly and you are running a version of Nightscout that doesn't yet support remote overrides.  Solution: Follow the Remote Configuration documentation.</li> <li><code>Error: {\u201cstatus\u201d:401,\u201dmessage\u201d:\u201dUnauthorized\u201d,\u201ddescription\u201d:Invalid\\\\/Missing\u201d}</code> You might see this in iOS Shortcuts.  This is caused by having an incorrect <code>API_SECRET</code> in the shortcut. Solution: Double check the <code>API_SECRET</code> is correct and that there are no spaces at the end.</li> <li><code>Error: APNs delivery failed: InvalidProviderToken</code> You might see this in either Nightscout or Shortcuts.  This is caused because your <code>LOOP_APNS_KEY_ID</code> and <code>LOOP_DEVELOPER_TEAM_ID</code> are swapped in Heroku.  Solution: Double check what's listed in your Apple Developer Account and compare it to the config variables in Heroku. Your <code>Team_ID</code> is next to your name in the top right corner.  The other code is your <code>Key_ID</code>. Get the IDs in the correct location in Heroku to resolve the error.</li> </ol>"},{"location":"nightscout/remote-overview/","title":"Remote Overview","text":""},{"location":"nightscout/remote-overview/#remote-caregivers","title":"Remote Caregivers","text":"<p>With\u00a0Loop\u00a03, a caregiver can provide remote commands to assist in diabetes care, including modifying overrides, issuing remote bolus commands and adding remote carb entries. With\u00a0Loop\u00a02, only overrides can be turned on or off remotely.</p> <p>Remote commands to the\u00a0Loop\u00a0phone go through their Nightscout site. For security, any command to deliver a bolus or add a carb entry requires a one-time-password (OTP) to be used with each remote command. These codes are unique to your combined\u00a0Loop\u00a0and Nightscout configuration. An authentication app needs to be installed on the device sending the remote boluses/carbs. The Loop Caregiver app can be used. It handles authentication requirements and offers a\u00a0Loop\u00a0-like user interface.</p>"},{"location":"nightscout/remote-overview/#remote-commanding-requirements","title":"Remote Commanding Requirements:","text":"<ul> <li> Loop\u00a0version 3.2.0 or newer<ul> <li>version 3.0 works but is not recommended for other reasons</li> </ul> </li> <li>Apple Push Notifications\u00a0 ( APN\u00a0) created with the \u00a0Apple Developer ID\u00a0 that built the\u00a0Loop\u00a0app</li> <li>Nightscout version 14.2.6 or newer<ul> <li>Several configuration variables must be added</li> </ul> </li> <li>Ability to generate a One-Time-Password (OTP)</li> </ul> <p>What about Older Versions?</p> <p>Caregivers for those using older versions of Loop can modify <code>Overrides</code> remotely but cannot send remote bolus or carb commands.</p> <p>If your Nightscout site is an older version, you should limit your remote commands to <code>Overrides</code>, even with \u00a0Loop 3.</p> <p> Loop Caregiver</p> <p>There is a new companion app, \u00a0Loop Caregiver that makes remote commands and reviewing the status of your looper much easier.</p>"},{"location":"nightscout/remote-overview/#how-does-this-work","title":"How does this work?","text":"<p>Loop\u00a0and Nightscout work using \u00a0Apple Push Notifications\u00a0 (APN).</p> <ul> <li>The \u00a0Apple Developer ID\u00a0 used to build the\u00a0Loop\u00a0app must be configured to enable \u00a0Apple Push Notifications<ul> <li>If you built Nightscout and\u00a0Loop\u00a0yourself, follow the directions to set up Remote Configuration</li> </ul> </li> <li>Most providers who supply <code>Nightscout as a service</code> or <code>Hosted Nightscout</code> will assist you, if needed, in getting your APN information added to your Nightscout variables<ul> <li>Nightscout Docs: New User</li> <li>Nightscout Docs: Comparison Table<ul> <li>Warning: examine the <code>Loop remote carbs/bolus</code> row: subscription refers to a monthly fee</li> </ul> </li> </ul> </li> </ul>"},{"location":"nightscout/remote-overview/#warning-nightscout-remote-carbohydrate-entries","title":"Warning: Nightscout Remote Carbohydrate Entries","text":"<p>Use unique times for remote carbohydrate entries</p> <p>Instead of adding a second remote carbohydrate entry at an identical time, add one minute to the second entry.</p> <p>This ensures that Nightscout keeps both entries.</p> <p>For more information, see:</p> <ul> <li>Use Unique Times for Remote Carbohydrate Entries</li> </ul>"},{"location":"nightscout/remote-overview/#next-steps","title":"Next Steps","text":"<p>There are several steps to follow to set this up. Each page is linked below:</p>"},{"location":"nightscout/remote-overview/#set-up-remote-for-nightscout","title":"Set Up Remote for Nightscout","text":""},{"location":"nightscout/remote-overview/#using-remote-commands","title":"Using Remote Commands","text":""},{"location":"nightscout/remote-overview/#remote-errors","title":"Remote Errors","text":""},{"location":"nightscout/remote-overview/#loop-caregiver-app","title":"Loop Caregiver App","text":""},{"location":"nightscout/troubleshoot/","title":"Nightscout Troubleshooting","text":""},{"location":"nightscout/troubleshoot/#setup-troubleshooting","title":"Setup Troubleshooting","text":"<p>If you have just tried to set up your Nightscout site and have problems with seeing all your data, please check out the Nightscout: Troubleshooting  page.</p>"},{"location":"nightscout/troubleshoot/#dexcom-data-not-showing","title":"Dexcom data not showing","text":"<p>If you use a Dexcom and get your CGM data into Nightscout using Dexcom Share (bridge in Nightscout) and everything is working but the Dexcom data stops showing, please review Nightscout: Dexcom bridge Troubleshooting.</p> <p>As part of that troubleshooting, you may need to remove the Nightscout service credentials from Loop. You may need to remove Dexcom credentials from all third-party apps that get data from Dexcom Share. Be sure to add them back after the CGM data to Nightscout is restored.</p> <p>You do not need to use Share or bridge with Nightscout. You can choose to have Loop update your CGM readings to Nightscout directly. There's a check box in the Loop CGM setting screen to select this. You must select that check box every time you update your transmitter for Dexcom G5 or G6.</p>"},{"location":"nightscout/troubleshoot/#loop-data-not-showing","title":"Loop data not showing","text":"<p>If your BG data is showing, but Loop data is not (like Loop pill is empty and carbs and boluses are not showing), please delete your Nightscout account in Loop settings area. Enter the information in Loop again. Make sure to use <code>https://</code> to start the site URL. Make sure there is no trailing slash at the end of the URL. Enter your API_SECRET correctly. Make sure you have <code>loop</code> on the ENABLE line in Heroku settings.</p>"},{"location":"nightscout/update-user/","title":"Nightscout with Loop","text":""},{"location":"nightscout/update-user/#adding-loop-to-existing-nightscout-site","title":"Adding Loop to Existing Nightscout Site","text":"<p>Many people may already have an existing Nightscout site setup from before adding Loop to their management strategies. In order to make the most of your Looping setup, you will need to modify your existing Nightscout site a bit specifically for Loop. The process is pretty easy and should not take long.</p> <p>The graphics on this page are from a Heroku implementation for DIY Nightscout. When you read the Nightscout documents, you'll notice there are a lot more options than just Heroku. When Heroku announced that the \"free\" tier for Heroku would be disabled in November 2022, the #WeAreNotWaiting community developed a lot of options - both free DIY, nominal cost DIY and there were already several companies that provide Nightscout as a service. If your site is not with Heroku, you need to translate how to adjust the configuration variables.</p>"},{"location":"nightscout/update-user/#variables-for-loopers","title":"Variables for Loopers","text":"<p>Once you have created a Nightscout site, there are some Nightscout Config Vars specific to Loop.</p> <ul> <li> <p>First the Config Vars need to be added to the Nightscout site.</p> </li> <li> <p>For each instance of viewing the Nightscout site (i.e., on broswer or phone app), you can individually select which of those configured items are displayed.  This is on a per-view basis. However, Config Vars like the <code>SHOW_PLUGINS</code> line allow you to preconfigure what will be shown by default.</p> </li> </ul>"},{"location":"nightscout/update-user/#editadd-config-vars","title":"Edit/Add Config Vars","text":"<p>These instructions are for people using Heroku, because that is the most common choice. If your Nightscout site is not on Heroku, this page provides a guide for the Config Vars used by Loop.</p> <p>Login to your Heroku account, select the <code>Settings</code> tab near the top of the screen on your Heroku app.</p> <p></p> <p>Click on <code>Reveal Config Vars</code>.  Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping.</p> <p>Omnipod Users can skip the Config Vars that begin with <code>PUMP_</code>. Those are useful for Medtronic users.</p> <p></p> ENABLE bridge loop pump iob cob basal careportal sage cage bage override dbsize (Note: If you are an existing NS user, you likely already have an ENABLE line in this section of Heroku. Don't add a new one. Simply find the existing ENABLE line, click on the little pencil icon to the right of it, and add the words shown on the ENABLE line above to the existing words already on the enable line.  Avoid duplicates. The remainder of the lines are likely going to be brand new additions to your Heroku settings.) DEVICESTATUS_ADVANCED true PUMP_FIELDS battery reservoir clock status PUMP_RETRO_FIELDS battery reservoir clock status SHOW_FORECAST loop SHOW_PLUGINS loop pump cob iob sage cage careportal basal override dbsize PUMP_ENABLE_ALERTS true PUMP_URGENT_BATT_U 30(This is the pump battery percentage that will trigger a red, urgent alert in NS.) PUMP_URGENT_BATT_V 1.25(This is the pump battery voltage that will trigger a red, urgent alert in NS.) PUMP_URGENT_RES 10(This is the reservoir volume that will trigger a red, urgent alert in NS.) PUMP_URGENT_CLOCK 30 LOOP_ENABLE_ALERTS true LOOP_WARN 20(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.) LOOP_URGENT 60(Same as the alert above, but will be red in color and have a shorter snooze option.) BASAL_RENDER default <p>Click on <code>Open App</code> in the top right corner of your Heroku site.</p> <p></p>"},{"location":"nightscout/update-user/#plugins-selection","title":"Plugins Selection","text":"<p>Once you are viewing an instance of your Nightscout site (browser or app), you can adjust what this instance of the display will show.</p> <p>Click on the \"hamburger\" menu - those three horizontal lines in the upper right corner of the main NS display.  </p> <p>Different sets of documentation call the three horizontal lines in the upper right of the Nightscout display different things such as:</p> <ul> <li>Settings</li> <li>Hamburger Menu</li> <li>Drawer Menu</li> </ul> <p></p> <p>The graphic below shows some of the check boxes you can select.  Make sure your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), adjust alarms (on or off), check the boxes that you\u2019d like display as pills in the SHOW PLUGINS section (usually all of them), and then click save. (You are saving your display preferences, not modifying anything in the NS database.)</p> <p>Note - Nightscout has been updated since this figure was generated.</p> <p></p>"},{"location":"nightscout/update-user/#authenticate-site","title":"Authenticate Site","text":"<p>If the current display of your NS site has been not authenticated, you will not be able to access certain portions of Nightscout such as the careportal, administration tools and remote overrides.  There are two ways to authenticate.</p> <ul> <li> <p>Use API_SECRET to access all features of Nightscout</p> </li> <li> <p>Use Tokens to generate a URL that opens with predefined role(s)</p> </li> </ul> <p>The use of tokens is documented at this link to the security page in the Nightscout documentation.</p> <ul> <li>Please see Nightscout: Tokens</li> </ul> <p>You can authenticate with your API_SECRET using either of these methods:</p> <ul> <li> <p>Click on the hamburger menu and scroll all the way to the bottom, click on authenticate and add your API_SECRET</p> </li> <li> <p>Click on the Lock symbol on upper right on main display (requires careportal plugin to be enabled) and add your API_SECRET</p> </li> </ul> <p>An authenticated site, with careportal plugin enabled, will show a + at upper right of the main display instead of a lock symbol. Tapping on the + gives you access to the careportal.</p>"},{"location":"nightscout/update-user/#nightscout-version-update","title":"Nightscout Version Update","text":"<p>If you are new to Loop and haven\u2019t updated your Nightscout site for a while, check to see if there's an available update. Visit Nightscout: Update Instructions for directions on updating.</p>"},{"location":"nightscout/update-user/#more-variables-for-loopers","title":"More Variables for Loopers","text":"<p>The list of Variables for Loopers above can be expanded if you want your site to automatically open with specific values and alarm settings.</p> <p>This Loop and Learn: Nightscout Variables page, created for folks using the Google Cloud method to create a Nightscout site, has a convenient, expanded list.</p>"},{"location":"operation/overview/","title":"Loop 2 Set Up Overview","text":"<p>This section of LoopDocs will be maintained during the transition to Loop 3. These pages are specific to Loop 2.2.x and some forks based off that older version. </p> <p>Be aware that older versions and forks will probably not be updated as the Apple environment changes.</p> <p>With Loop 2.2.x, you must manually step through every Loop setting and fill out the appropriate values. If you miss some, you may get errors in the app. If this happens to you, review every setting carefully.</p> <p>You need to work through the steps listed in the headings under this page one by one. Please follow along with each page's information to make sure that you don't miss any valuable information about your Loop's settings and function.</p> <p>You can work through each page completely and click on the link at the bottom of the page to proceed to the next page. Or you can use the back button on your browser to return to this page and click on the link for the page of interest.</p>"},{"location":"operation/overview/#permissions","title":"Permissions","text":"<p>Make sure that Loop has permission to send you notifications. For example, you will want to know if Loop has stopped working for more than 20 minutes.</p> <p>Make sure Loop has permission to access Bluetooth devices.  You'll need that for your CGM and to connect a pump to Loop.</p>"},{"location":"operation/overview/#loop-2-health-permissions","title":"Loop 2 Health Permissions","text":"<p>Follow the instructions on the Loop 2 Health Permission page. Note that the Carbohydrate read permission should be turned off after enabling all.</p>"},{"location":"operation/overview/#loop-2-add-pump","title":"Loop 2 Add Pump","text":"<p>Select and configure your insulin pump. There are separate pages for setting up a Medtronic (MDT) pump or an Omnipod Eros pump (aka \"pods\"). Click on one of the pages to go straight to that page's guide.</p> <p>Loop 2 Add Medtronic Pump</p> <p>Loop 2 Add Omnipod Pump</p> <p></p>"},{"location":"operation/overview/#loop-2-add-cgm","title":"Loop 2 Add CGM","text":"<p>Follow direction on the Loop 2 Add CGM page. If you are wondering which CGMs are supported natively by Loop, check Compatible CGM.</p> <p></p>"},{"location":"operation/overview/#loop-2-configurations","title":"Loop 2 Configurations","text":"<p>Configure Loop's settings. Within this section, you will be entering many settings that you are already familiar with such as basal rates, carb ratios, and insulin sensitivity factor (aka correction factor). There are also several new terms that you may be unfamiliar with like insulin model selection, suspend threshold, and override ranges. Make sure to refer to the Loop 2 Configurations while entering values - DO NOT GUESS.</p> <p></p>"},{"location":"operation/overview/#loop-2-services-optional","title":"Loop 2 Services (Optional)","text":"<p>You are not required to use services although many Loopers use Nightscout. If you do not yet have Nightscout configured and want to add it later, just return to the Services page when you are ready. Note that Loop 3 and Loop 2 use the same documentation page for Services. Services can be added at any time.</p> <p></p>"},{"location":"operation/overview/#loop-2-displays","title":"Loop 2 Displays","text":"<p>After you are done entering your settings, you should familiarize yourself with the information displays. The Loop 2 Displays page will help you recognize and begin to understand what all the icons, graphs, and data mean.</p> <p>It is a good idea to remain in Open Loop while becoming familiar with the app.</p>"},{"location":"operation/overview/#loop-2-pump-settings-screen","title":"Loop 2 Pump Settings Screen","text":"<p>The pump settings screens for Loop 3 were updated. The older interface used by Loop 2 is documented at Loop 2 Pump Settings</p>"},{"location":"operation/overview/#rileylink-screen","title":"RileyLink Screen","text":"<p>The documentation for Loop 3 and Loop 2 is the same for the RileyLink screen. This screen is only available after configuring a pump that uses a RileyLink Compatible Device.</p> <p>After a pump that uses a RileyLink is connected to the app, tap on a RileyLink name in the pump settings screen to bring up the displays and commands found on the RileyLink Menu screen.</p>"},{"location":"operation/algorithm/bolus/","title":"Bolus Recommendations","text":""},{"location":"operation/algorithm/bolus/#loop-manual-bolus","title":"Loop Manual Bolus","text":"<p>Loop will recommend bolus insulin corrections when the eventual blood glucose is greater than the correction target and the active insulin plus any active 30-minute temporary basal will not be sufficient to cover the predicted excursion above correction target.</p> <p>These recommendations are not proactively sent to the Loop user through any notification or banner alert; the recommendation is only viewable when the user clicks on the bolus tool. Note that Loop never issues a bolus command automatically while using the default Temp Basal Dosing Strategy; all boluses are initiated by the user unless the Automatic Bolus dosing strategy is enabled. With automatic bolus enabled, each automatic bolus is limited to 40% of the recommended amount or the maximum bolus setting, whichever is smaller.</p> <p>The bolus dose calculation is identical to the dose equation given in the basal recommendations section, with the exception that:</p> <ul> <li>the insulin contribution from the currently running temporary basal set by Loop is removed or subtracted from the recommended bolus amount, and  </li> <li>the delta is calculated for the top of the correction range, rather than the average of the correction range.</li> </ul> <p>For recently saved carbohydrates where the projected carbohydrate absorption will outlast the insulin activity duration (e.g., very slow-digesting meals like pizza or pasta), Loop\u2019s algorithm will inherently decrease the initial meal bolus \u2014 to prevent hypoglycemia events that often occur after these meals \u2014 by only recommending enough bolus to prevent minimum predicted glucose from going below the suspend threshold. As described above, the Loop algorithm computes the recommended bolus such that predicted glucose will not dip below the suspend threshold. This may result in future blood glucose levels predicted above correction range, but will prevent a hypoglycemia event shortly after the meal (as it sometimes occurs for people giving a \"pizza bolus\" in traditional pump therapy). Loop will then later make corrections by issuing a command to temporarily Increase Basal Rate or provide an automatic bolus. In effect, this algorithm behavior mimics traditional pump therapy of \u201cextended\u201d or \u201cdual wave\u201d bolusing, but with the benefit of added information about actual carbohydrate absorption effects as time goes by.</p> <p>Finally, Loop checks that the result of the calculations is below the maximum single bolus the Loop user specified in their settings. If the calculated bolus is less than the maximum single bolus setting, then the recommended bolus will be displayed in Loop\u2019s bolus tool.</p> <p>Bolusing safety feature</p> <p>If the current blood glucose, or any predicted blood glucose, falls below the suspend threshold, Loop will not return a recommended bolus. When the minimum blood glucose rises above the suspend threshold, the bolus tool will provide a recommended bolus.</p>"},{"location":"operation/algorithm/bolus/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/algorithm/overview/","title":"Algorithm Overview","text":""},{"location":"operation/algorithm/overview/#loop-algorithm","title":"Loop Algorithm","text":"<p>Loop\u2019s algorithm for adjusting insulin delivery is oriented around making a blood glucose prediction. Every five minutes, triggered by new blood glucose data, it generates a new prediction. Both bolus recommendations and temporary basal rate adjustments are set based on this prediction.</p>"},{"location":"operation/algorithm/overview/#algorithm-terminology","title":"Algorithm Terminology","text":"<p>This graph and legend illustrates terms commonly used in discussing Loop's algorithm, and shows them in the context of historical and forecasted blood glucose in style similar to the status screen of Loop.</p> <p></p> Insulin activity duration The insulin activity duration is the duration of the insulin activity curve, and describes the point at which the delivered insulin dose no longer affects blood glucose. The insulin activity duration is 6 hours for Loop's rapid-acting and ultra-rapid insulin models. Correction range The correction range is the blood glucose range Loop uses to determine corrective actions (e.g., between 90 and 120 mg/dL in the figure). NOTE: Loop\u2019s correction range is a user setting and should not be confused with the target range, typically 70-180 mg/dL, used for the purpose of calculating the percent time in range. Correction minimum The lower or minimum value of the user\u2019s correction range, which is 90 mg/dL in the figure. Correction maximum The upper or maximum value of the user\u2019s correction range, which is 120 mg/dL in the figure. Correction target The correction target is the average value of the correction range. In the overview figure, this is 105 mg/dL given that the correction minimum is 90 mg/dL and the correction maximum is 120 mg/dL. Predicted blood glucose Loop makes a prediction of blood glucose values out for a length of time equal to your insulin action duration. The predicted blood glucose is the basis for how Loop makes its insulin delivery recommendations and actions. Eventual blood glucose The last value of the predicted glucose curve, in other words the very last blood glucose predicted at the end of your insulin action duration. In the figure above, this is 85 mg/dL. Minimum predicted blood glucose The lowest blood glucose value at any point in time within the prediction. In the figure above, this is 77 mg/dL. Delta The delta is the difference between the eventual blood glucose and the correction target. In the overview figure, the eventual blood glucose is 85 mg/dL and the correction target is 105 mg/dL, which means that the delta is  -20 mg/dL. Suspend Threshold The suspend threshold is a safety feature of the Loop algorithm. If any predicted blood glucose is below this threshold, the Loop algorithm will issue a temporary basal rate of 0 CGM data Blood glucose readings made by a continuous glucose monitor. Insulin sensitivity factor A configuration value that provides an estimate of how much blood glucose will drop given a unit of insulin. Active insulin Active insulin, often referred to as Insulin-on-Board (IOB), is the remaining amount of insulin activity from boluses and temporary basal rates relative to a user\u2019s scheduled basal rates. More specifically, it is the total amount of insulin activity due to all bolus and basal insulin delivered within the last N hours, where N is determined by the insulin activity duration. The amount of \u201cactive\u201d insulin depends upon the insulin activity curve, and also accounts for the insulin withheld via basal suspensions. As such, it is possible that the active insulin can be negative. Negative active insulin will result in an increase in predicted blood glucose. The active insulin displayed in Loop's main display does not reflect the currently enacted temporary basal rate, as that basal rate may be canceled or modified before completion over the next 30 minutes. In others words, Loop doesn't count chickens before the eggs hatch...insulin delivery must be confirmed before being added to the active insulin reporting."},{"location":"operation/algorithm/overview/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/algorithm/prediction/","title":"Glucose Prediction","text":""},{"location":"operation/algorithm/prediction/#blood-glucose-prediction","title":"Blood Glucose Prediction","text":"<p>Loop uses an algorithm to maintain blood glucose in a correction range by predicting the contributions from four individual effects (insulin, carbohydrates, retrospective correction, and blood glucose momentum) at any time t to recommend temporary basal rate corrections and boluses.</p> \\[ BG[t] = Insulin[t] + Carb[t] + RetrospectiveCorrection[t] + Momentum[t] \\] <p>Note that the Momemtum term does not just add to the other effects as implied in the simple formular above; it is blended with the other terms as described in more detail in the Momemtum section below).</p> <p>You can see the individual contributions of these effects by tapping on the predicted blood glucose chart on Loop's status screen. Loop updates this blood glucose prediction every five minutes when a new CGM value has been received and the pump's status has been updated.</p> <p>Just a note, this whole section is fairly technical. While perhaps not the most interesting topic for many readers, if you are seeking the detailed view of the Loop algorithm this discussion is quite useful. If you want a more surface understanding, the overview and temporary basal recommendations sections alone are probably sufficient.</p>"},{"location":"operation/algorithm/prediction/#overview","title":"Overview","text":"<p>Before we delve into each of the four individual effects, a general overview figure may be a helpful start. There are four effects summed together to produce Loop's final predicted blood glucose curve. Each individual effect, along with their combined effect, is illustrated in the figure below. Insulin, from boluses and temporary basals, will have a decreasing effect on the prediction. Carbohydrates will have an increasing effect on the prediction. Blood glucose momentum effect can have a positive or negative effect, depending on how blood glucose is trending in the most recent CGM values. As shown in the example below, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is lowering the prediction, indicating that the recent rise in blood glucose was not as large as had been predicted by Loop in the recent past.</p> <p></p> <p>The sections below provide detailed information on each of the four contributions.</p>"},{"location":"operation/algorithm/prediction/#insulin-effect","title":"Insulin Effect","text":"<p>Most traditional pump users and caregivers are already familiar with the concept of an insulin activity curve, where the insulin\u2019s effect is time-dependent. Insulin takes a little while to affect blood glucose. The insulin effect typically peaks around one hour after giving insulin and then gradually decays.</p> <p></p> <p>Loop 2.x provides users with two different classes of insulin models (i.e., an exponential model and the Walsh model). All of the exponential models have an insulin activity duration of 6 hours, whereas the insulin activity duration is customizable for the Walsh model. The rapid-acting and Fiasp insulin activity curves are modeled as exponential curves that match the shape of the insulin activity curves from insulin labeling, and as observed in both adults and children.</p> <p>Loop 3 drops the Walsh model and, by default, does not include the concept of child versus adult for \"rapid\" acting insulin, i.e., Humalog, Novalog and Apidra. Loop 3 adds the concept of non-pump insulin to account for injections or inhaled insulin. The Afrezza model is added as a non-pump insulin. The Insulin Type is selected in the Pump Settings screen. All insulin types are modeled by selecting parameters in the exponential model. See also Exponential Insulin Curve on the Code Customization page.</p> <p></p>"},{"location":"operation/algorithm/prediction/#insulin-effect-remaining","title":"Insulin Effect Remaining","text":"<p>The amount of insulin effect remaining, or percent of remaining active insulin after an insulin bolus is delivered, is modeled mathematically in Loop with an exponential decay curve.</p> <p></p> <p>If a user\u2019s insulin sensitivity factor (ISF) is 50 mg/dL per 1 unit of insulin and the user gives 2 units of insulin, then the user\u2019s blood glucose would be expected to drop 100 mg/dL within the 6 hours following the insulin delivery. This insulin effect can be visualized in several different ways: the expected active insulin, expected drop in blood glucose every 5 minutes after delivery, and the expected cumulative drop in blood glucose. The figures below use the Rapid Acting - Adult insulin model in Loop.</p>"},{"location":"operation/algorithm/prediction/#active-insulin","title":"Active Insulin","text":"<p>This figure shows that 2 units of insulin are given initially, and the corresponding active insulin (i.e., insulin on board IOB) decays according to the curve below.</p> <p></p> <p>The active insulin at any time is the product of original insulin delivered and the percent of insulin activity remaining. Knowing the expected active insulin over the next 6 hours, and the insulin sensitivity factor (50 mg/dL, in this case), Loop can calculate the expected drop in blood glucose from that dose of insulin as shown in the figure below.</p> <p></p> <p>NOTE: ISF is also a function of time, which means if the user\u2019s scheduled ISF changes during the insulin activity time, it will change the expected drop in blood glucose due to the insulin effect.</p>"},{"location":"operation/algorithm/prediction/#expected-change-in-blood-glucose","title":"Expected Change in Blood Glucose","text":"<p>Lastly, taking the first derivative (i.e., the rate of change) of the cumulative drop in the blood glucose curve yields the expected change in blood glucose over the insulin activity duration. For each dose of insulin given, Loop calculates the expected discrete drop in blood glucose at each 5-minute period for the insulin activity duration, as shown below.</p> <p></p>"},{"location":"operation/algorithm/prediction/#insulin-effect-on-blood-glucose","title":"Insulin Effect on Blood Glucose","text":"<p>For this example, assuming a user\u2019s blood glucose was 205 mg/dL at the time of insulin delivery, Loop would predict a drop in blood glucose due to the two units delivered at 12 pm as shown in the figure below.</p> <p></p>"},{"location":"operation/algorithm/prediction/#scheduled-basal-rates","title":"Scheduled Basal Rates","text":"<p>In traditional basal/bolus pump therapy, basal rates are set to accommodate the user's endogenous glucose production (EGP) that causes blood glucose to rise. If a user's basal settings were exactly right in traditional pump therapy, the user would have perfectly flat blood glucose all day, all other factors being equal.</p> <p>In reality, people with type 1 diabetes, and their caregivers, know that basal settings are never exactly right. Every day is a little different, and a myriad of factors that affect blood glucose (e.g., including stress, hormones, sleep, etc.) may affect insulin needs. Some people have different basal profiles to accommodate these variations. Some people regularly tune and adjust their basal rates, and/or do so at their endocrinology clinic visits.</p> <p>Since the Loop algorithm assumes that the user-set basal rates are correct, it calculates the effect of insulin relative to scheduled basal rates. If basal rates are not entirely correct, Loop can compensate a bit through the retrospective correction and blood glucose momentum effects, discussed later in this page.</p> <p>The insulin delivery chart below displays a bar-graph history of the temporary basal rates enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. A rate displayed in this chart as +0 would indicate that no temporary basal rate was set and that the basal rate being delivered was the scheduled basal rate. Positive values indicate a temporary basal rate was set above the scheduled basal rate (i.e., more insulin delivered), and negative values indicate that a temporary basal rate was set below the scheduled basal rate (i.e., less insulin delivered).</p> <p></p> <p>For example, if the user\u2019s scheduled basal rate is 1 U/hr, and Loop gives a temporary basal rate of 3 U/hr, then it will calculate the expected drop in blood glucose due to +2 U/hr of insulin.</p> <p>Similarly if Loop sets a temporary basal rate of 0 U/hr for 1 hour, then the insulin effect will also be relative to the current scheduled basal rate of 1 U/hr, and Loop would predict the user\u2019s blood glucose to increase by the amount of change from -1 U/hr of insulin. If the user\u2019s ISF is 50 mg/dL, then Loop would predict blood glucose to rise 50 mg/dL over the insulin activity duration (6 hours).</p> <p>Here is a real-world example where Loop is setting many temporary basal rates over the course of the day. The light orange bars are the temporary basal rates delivered and the solid orange line is the active insulin at any given time during the day.  </p> <p></p>"},{"location":"operation/algorithm/prediction/#total-insulin-effect-combining-boluses-and-temporary-basal-rates","title":"Total Insulin Effect (combining boluses and temporary basal rates)","text":"<p>Loop will combine or stack the active insulin of all the discrete (individual) boluses and temporary basal rates over the past insulin activity duration (6 hours), to predict the active insulin for the next 6 hours. As demonstrated above, using the predicted active insulin Loop can predict the blood glucose drop over the next 6 hours.</p> <p>Lastly, the combined effect of bolus and basal insulin are visually represented for the user by Loop\u2019s insulin charts:</p> <p></p> <p>The insulin effect can be expressed mathematically:</p> \\[ \\Delta BG_{I}[t] = ISF[t] \\times IA[t] \\] <p>where BG is the expected change in blood glucose with the units (mg/dL/5min), ISF is the insulin sensitivity factor (mg/dL/U) at time t, and IA is the insulin activity (U/5min) at time t. Insulin activity can also be thought of as a velocity or rate of change in insulin in the blood as it acts on glucose. Insulin activity explicitly accounts for active insulin from temporary basals and boluses, and implicitly accounts for scheduled basal which is assumed to balance out with EGP.</p>"},{"location":"operation/algorithm/prediction/#carbohydrate-effect","title":"Carbohydrate Effect","text":"<p>Carbohydrates will raise blood glucose, but the speed and degree to which they impact blood glucose are dependent on the type of carbohydrates. High glycemic index (GI) carbohydrates will raise blood glucose quickly over a shorter time, whereas low GI foods will raise blood glucose more slowly over a longer period. Foods like candy, juice, and fruits tend to be high GI foods, while pizza, burritos, and quesadillas are usually lower GI foods. Digestion issues like gastroparesis may also contribute to variations in carbohydrate absorption.</p> <p>Because carbohydrate absorption can be quite variable, Loop has a model that dynamically adjusts the expected remaining time of carbohydrate absorption. To start with, Loop allows the user to input a rough guess of how long they think the food or drink will take to absorb. The user\u2019s guess is used as a middle of the road estimate, and Loop\u2019s algorithm will shorten or lengthen it based on observed blood glucose change.</p> <p>For all carbohydrate entries, Loop assumes carbohydrates will not start absorbing for 10 minutes, so there is a 10-minute period of no absorption that is modeled prior to the absorption modeled in the next sections.</p>"},{"location":"operation/algorithm/prediction/#linear-carbohydrate-absorption","title":"Linear Carbohydrate Absorption","text":"<p>Loop takes a conservative view of how fast the remaining carbohydrates will absorb.  Because it is safer to under-deliver insulin for long-duration meals, Loop starts out at a minimum rate of absorption based on extending the entered carbohydrate duration by 50%. Said another way, the minimum carbohydrate absorption rate is the total number of grams of carbohydrates over 150% of the entered duration.</p> <p>Using this initial minimum absorption rate, the remaining carbohydrates are modeled to absorb linearly. For example, if the user enters a 72g carbohydrate meal, and selects an estimated absorption time of 4 hours, then Loop will forecast a 12g/hr absorption rate for the next 6 hours. This rate can be termed the minimum absorption rate, which can be represented mathematically as:</p> \\[ MAR[t] = \\frac{CA[t]}{1.5 \\times d} \\] <p>where MAR is the minimum absorption rate (g/hr), CA is the number of carbohydrates (g) and d is the expected duration (hr) it will take the carbohydrates to absorb.</p>"},{"location":"operation/algorithm/prediction/#dynamic-carbohydrate-absorption","title":"Dynamic Carbohydrate Absorption","text":"<p>The linear model above is modulated by an additional calculation that uses recently observed blood glucose data to estimate how fast carbohydrates have been absorbing. The expected change in blood glucose due to insulin effects alone is compared to the actual observed changes in blood glucose. This difference is termed the insulin counteraction effect (ICE):</p> \\[ ICE[t] = OA[t] + IA[t] \\] <p>where, ICE (mg/dL/5 min) is the insulin counteraction effect, OA is the observed activity (mg/dL/5min) or observed change in blood glucose at time t, and IA is the insulin activity (mg/dL/5min).</p> <p>Insulin counteraction effects are caused by more than just carbohydrates, and can include exercise, sensitivity changes, or incorrectly configured insulin delivery settings (e.g., basal rate, ISF, etc.). However, since the effect of carbohydrates is often dominant (after insulin), Loop can still make useful ongoing adjustments to its carbohydrate model by assuming that the increase in blood glucose is mainly carbohydrate absorption in the period following recorded meal entries.  </p> <p>The insulin counteraction effect is converted into an estimated carbohydrate absorption amount by using the current carbohydrate-to-insulin ratio and the insulin sensitivity factor at the time of the recorded meal entry.</p> \\[ AC[t] = ICE[t] \\times \\frac{CIR[t]}{ISF[t]} \\] <p>where AC is the number of carbohydrates absorbed (g/5min), ICE is the insulin counteraction effect, CIR is the carbohydrate-to-insulin ratio (g/U), and ISF is the insulin sensitivity factor (mg/dL/U) at time t.</p> <p>If multiple meal entries are active (i.e., still absorbing), the estimated absorption is split between each carbohydrate entry in proportion to each carbohydrate entry\u2019s minimum absorption rate. For example, if 72g carbohydrates with an expected absorption time of 4 hours was consumed at 12 pm, and another 72g of carbohydrates with an expected absorption time of 2 hours was consumed at 3 pm, then the minimum absorption rate (see MAR equation above) would be 12 g/hr and 6 g/hr respectively, or 1 g/5min and 0.5 g/5min.</p> \\[ MAR[t = 12pm] = \\frac{ 72g }{ 1.5 \\times 4hr } = 12 \\frac{ g }{ hr } = 1 \\frac{ g }{ 5min } \\] \\[ MAR[t = 3pm] = \\frac{ 72g }{ 1.5 \\times 2hr } = 24 \\frac{ g }{ hr } = 2 \\frac{ g }{ 5min } \\] <p>Examining just the simple linear carbohydrate effect of these two meals:</p> <p></p> <p>If we further expand this example, by assuming the following at 4pm:</p> <ul> <li>that there are still carbohydrates left to be absorbed from both meals,</li> <li>that the estimated insulin counteraction effect (ICE) is \\(+15 \\frac{mg/dL}{5min}\\), and</li> <li>the user\u2019s CIR is \\(10 \\frac{g}{U}\\) and the ISF is \\(50 \\frac{mg/dL}{U}\\),</li> </ul> <p>then the estimated amount of carbohydrates absorbed at 4pm would be 3g:</p> \\[ AC[t = 4pm] = 15 \\frac{mg/dL}{5min} \\times \\frac{10 \\frac{g}{U}}{50 \\frac{mg/dL}{U}} = 3 \\frac{g}{5min} \\] <p>Those 3g of carbohydrates would then be split amongst the meals proportional to their minimum absorption rates:</p> \\[ \\text{Proportion to Meal1} = \\frac{MAR_{meal1}}{MAR_{meal1} + MAR_{meal2}} = \\frac{12}{12+24}=\\frac{1}{3} = 33.3\\% \\] \\[ \\text{Proportion to Meal2} = \\frac{MAR_{meal2}}{MAR_{meal1} + MAR_{meal2}} = \\frac{24}{12+24}=\\frac{2}{3} = 66.6\\% \\] <p>resulting in 1g of absorption being attributed to Meal 1 and 2g attributed to Meal 2.</p>"},{"location":"operation/algorithm/prediction/#minimum-carbohydrate-absorption-rate","title":"Minimum Carbohydrate Absorption Rate","text":"<p>If the estimated carbohydrate absorption of a meal entry is less than what would have been absorbed using the minimum absorption rate, then the minimum absorption rate is used instead. This is to ensure that meal entries expire in a reasonable amount of time.</p>"},{"location":"operation/algorithm/prediction/#modeling-remaining-active-carbohydrates","title":"Modeling Remaining Active Carbohydrates","text":"<p>After the estimated absorbed carbohydrates have been subtracted from each meal entry, the remaining carbohydrates (for each entry) are then forecasted to decay or absorb using the minimum absorption rate. Loop uses this forecast to estimate the effect (active carbohydrates, or carbohydrate activity) of the remaining carbohydrates. The carbohydrate effect can be expressed mathematically using the terms described above:</p> \\[ \\Delta BG_{C}[t] = MAR[t] \\times \\frac{ISF[t]}{CIR[t]} \\]"},{"location":"operation/algorithm/prediction/#retrospective-correction-effect","title":"Retrospective Correction Effect","text":"<p>The retrospective correction effect allows the Loop algorithm to account for effects that are not modeled with the insulin and carbohydrate effects, by comparing historical predictions to the actual blood glucose.</p> <p>In addition to the modeled effects of insulin and carbohydrates, there are many other factors that affect blood glucose (e.g., exercise, stress, hormones, etc.). Many of these effects are active for a period of time. By observing its own forecast error, Loop can estimate the magnitude of these effects and, by assuming that they will continue for some short period of time, incorporate them into the forecast to improve forecast accuracy.</p> <p>To do this, Loop calculates a retrospective forecast with a start time of 30 minutes in the past, ending at the current time. Loop compares the retrospective forecast to the actual observed change in blood glucose, and the difference is used to determine a blood glucose velocity or rate of difference:</p> \\[ BG_{vel}=\\frac{1}{6} \\times \\left(BG[0] - RF[0]\\right) \\] <p>where BGvel is a velocity term (mg/dL per 5min) that represents the average blood glucose difference between the retrospective forecast (RF) and the actual blood glucose (BG) over the last 30 minutes. This term is applied to the current forecast from the insulin and carb effects with a linear decay over the next hour. For example, the first forecast point (t=5) is 100% of this velocity, the forecast point one-half hour from now is adjusted by approximately 50% of the velocity, and points from one hour or more in the future are not affected by this term.</p> <p>The retrospective correction effect can be expressed mathematically:</p> \\[ \\Delta BG_{RC}[t] = BG_{vel} \\times \\left(1-\\frac{t-5}{55}\\right) \\] <p>where BG is the predicted change in blood glucose with the units (mg/dL/5min) at time t over the time range of 5 to 60 minutes, and the other term gives the percentage of BGvel that is applied to this effect.</p> <p>The retrospective correction effect can be illustrated with an example: if the BGvel over the past 30 minutes was -10 mg/dL per 5min, then the retrospective correction effect over the next 60 minutes would be as follows:</p> Minutes relative to now (t=0) Percent of \\(BG_{vel}\\) Applied to RC Effect \\(\\Delta BG_{RC}[t]\\) 5 100% -10 10 91% -9.1 15 82% -8.2 20 73% -7.3 25 64% -6.4 30 55% -5.5 35 45% -4.5 40 36% -3.6 45 27% -2.7 50 18% -1.8 55 9% -0.9 60 0% 0 <p>The example below that shows the retrospective correction effect when the BGvel over the past 30 minutes was -3 mg/dL/5min.</p> <p></p>"},{"location":"operation/algorithm/prediction/#blood-glucose-momentum-effect","title":"Blood Glucose Momentum Effect","text":"<p>The blood glucose momentum effect incorporates a prediction component based on the assumption that recent blood glucose trends tend to persist for a short period of time. In other words, the best predictor of the future is the recent past.</p> <p>The blood glucose momentum portion of the algorithm gives weight or importance to recent blood glucose to improve the near-future forecast. Loop calculates the slope of the last 3 continuous CGM readings (i.e., the last 15 minutes) using linear regression. Using multiple points helps filter out noise in the CGM data while still responding fast to changing situations. That momentum slope (Mslope) is the approximate or average rate of change over the last 15 minutes, though it is normalized to 5 minutes so that the units are (mg/dL/5min).</p> <p>The momentum slope is then blended into the next 20 minutes of predicted blood glucose from the other effects (i.e., insulin, carbohydrates, and retrospective correction effects). This, in essence, makes the next 20 minutes of blood glucose prediction more sensitive to recent blood glucose trends. The blending of the recent trend slope into the next 20 minutes is weighted so that the first prediction point (5 minutes into the future) is highly influenced by the slope, and the influence of the slope gradually decays over the 20 minute time period. The momentum effect can be expressed mathematically as:</p> \\[ \\Delta BG_{M}[t] = M_{slope} \\times \\left( 1 - \\frac{t-5}{15} \\right) \\] <p>NOTE: The term \\(\\left(\\frac{t-5}{15}\\right)\\) is also applied to the combined insulin, carbohydrates, and retrospective correction effects to get the delta blood glucose prediction.</p> <p>The momentum effect can be illustrated with an example: if the last 3 blood glucose readings were 100, 103, and 106 mg/dL, then the slope would be 3 mg/dL per 5 minutes (0.6 mg/dL per minute). The amount of that recent trend or slope applied to the next 20 minutes of predictions (i.e., the next 4 predictions from the other effects) is roughly 100% (3 mg/dL per 5 min) at 5 minutes, 66% (2 mg/dL per 5 min) at 10 minutes, 33% (1 mg/dL per 5 min) at 15 minutes, and 0% (0 mg/dL per 5 min) at 20 minutes.</p> <p>Also, if the combined effect from the insulin, carbohydrates, and retrospective correction is assumed to be a constant 6 mg/dL/5min over the next 20 minutes, then the expected overall effect and the predicted blood glucose can be calculated as follows.</p> Minutes relative to now (t=0) Percent of Slope Applied to Momentum Effect Momentum Effect (3mg/dL/5min) Percent of Other Effects Applied Overall Effect Other Effects (Insulin, Carbohydrate, and Retrospective Correction) Overall Effect (mg/dL/5min) Predicted BG (mg/dL) 5 100% 3 0 6 3 109 10 66.6% 2 33.3%&lt; 6 4 113 15 33.3% 1 66.6% 6 5 118 20 0% 0 100% 6 6 124 <p>This example is illustrated in the figure below.</p> <p></p> <p>It is also worth noting that Loop will not calculate blood glucose momentum in instances where CGM data is not continuous (i.e., must have at least three continuous CGM readings to draw the best-fit straight line trend). It also will not calculate blood glucose momentum when the last three CGM readings contain any calibration points, as those may not be representative of true blood glucose momentum trends.</p>"},{"location":"operation/algorithm/prediction/#predicting-glucose","title":"Predicting Glucose","text":"<p>As described in the momentum effect section, the momentum effect is blended with the insulin, carbohydrate, and retrospective correction effects to predict the change in blood glucose:</p> \\[ \\Delta BG[t] = \\Delta BG_{M}[t] + \\left(\\Delta BG_{I}[t] + \\Delta BG_{C}[t]+ \\Delta BG_{RC}[t] \\right) \\times min\\left(\\frac{t-5}{15}, 1\\right) \\] <p>Lastly, the forecast or predicted blood glucose BG at time t is the current blood glucose BG plus the sum of all blood glucose effects BG over the time interval [t5, t]:</p> \\[ \\widehat{BG}[t] = BG[t_{o}] + \\sum_{i=5}^{t} \\Delta BG[t_{o+i}] \\] <p>Each individual effect along with the combined effects are illustrated in the figure below. As shown, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is lowering the current prediction, indicating that the recent rise in blood glucose was not as great as had been predicted in the recent past.</p> <p></p>"},{"location":"operation/algorithm/prediction/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/algorithm/temp-basal/","title":"Automated Adjustments","text":""},{"location":"operation/algorithm/temp-basal/#calculated-dose","title":"Calculated Dose","text":"<p>The Loop algorithm takes one of four actions depending upon the eventual blood glucose, predicted glucose, target range and glucose safety threshold when Closed Loop operation is enabled.</p> <p>The recommended insulin dose (positive or negative) is calculated first, then the Temp Basal or Automatic Bolus to be enacted is modified based on the recommended dose, dosing strategy, maximum Temp Basal and maximum Bolus settings. The automated dosing (increase or decrease) is updated with every CGM value - typically every 5 minutes.</p> <p>Dosing Strategy: Temp Basal Only</p> <p>All temporary basal rate commands are issued for 30 minutes, however they may be updated (re-issued) every 5 minutes. Said another way, Loop may enact a new temporary basal rate every 5 minutes. But, if communication with the pump is lost, the last issued temporary basal rate will last for at most 30 minutes before the pump reverts to the user\u2019s scheduled basal rates.</p> <p>Dosing Strategy: Automatic Bolus</p> <p>If the Looper has selected Automatic Bolus Dosing Strategy and an increase in insulin dose is recommended, then the Four Actions discussion below applies to the automatic bolus decision.</p>"},{"location":"operation/algorithm/temp-basal/#no-automatic-dosing","title":"No Automatic Dosing","text":"<p>If glucose is entirely below the correction range but above glucose safety level, no automatic increase in insulin delivery will be enacted. The Looper can tap on the manual bolus tool and get a recommendation, but no automatic bolus or high temp basal will be issued automatically until the glucose level is higher than the minimum value of the correction range.</p> <p>The Pre-Meal button or a named override can be configured with a correction range lower than the scheduled correction to assist in getting insulin delivered automatically after meals.</p>"},{"location":"operation/algorithm/temp-basal/#four-possible-actions","title":"Four Possible Actions","text":"<p>Loop implements one of four possible temporary basal actions: decrease, increase, suspend, or resume a scheduled basal rate.</p> <p>Automatic Bolus</p> <p>If you are using an Automatic-Bolus Dosing Strategy in closed Loop mode and Loop predicts you need an increase in insulin; this increase is provided as a percentage of the recommended bolus instead of an increased temporary basal. The default percentage is 40%.</p>"},{"location":"operation/algorithm/temp-basal/#decrease-basal-rate","title":"Decrease Basal Rate","text":"<p>If the eventual blood glucose is less than the correction range and all of the predicted glucose values are above the suspend threshold, then Loop will issue a temporary basal rate that is lower than the current scheduled basal rate to bring the eventual blood glucose up to the correction target.</p> <p></p>"},{"location":"operation/algorithm/temp-basal/#increase-basal-rate","title":"Increase Basal Rate","text":"<p>If the eventual blood glucose is greater than the correction range and all of the predicted glucose values are both above the suspend threshold and equal to or above the correction range, then Loop will issue a temporary basal rate that is higher than the current basal rate to bring the eventual blood glucose down to the correction target.</p> <p></p>"},{"location":"operation/algorithm/temp-basal/#suspend-basal-rate","title":"Suspend Basal Rate","text":"<p>If the minimum predicted blood glucose goes below the suspend threshold, then Loop will issue a temporary basal rate of zero units per hour, regardless of the eventual blood glucose.</p> <p></p>"},{"location":"operation/algorithm/temp-basal/#resume-basal-rate","title":"Resume Basal Rate","text":"<p>There are three situations where the Loop algorithm will resume the current scheduled basal rate.</p> <p>If the eventual blood glucose is within the correction range, and all of the predicted glucose values are above the suspend threshold, then Loop will resume the current scheduled basal rate.</p> <p></p> <p>If the eventual blood glucose is above the correction range, and the predicted glucose values have a temporary excursion below the correction range but still above the suspend threshold, then Loop will resume the current scheduled basal rate.</p> <p></p> <p>If the Loop algorithm does not have ALL of the data it needs to make a prediction, it will let the remaining temporary basal rate run its duration (maximum of 30 minutes), and then the basal rate will default back to the current scheduled basal rate, thus returning to the same therapy pattern that they would receive using a traditional insulin pump.</p>"},{"location":"operation/algorithm/temp-basal/#determining-the-temporary-basal-rate","title":"Determining the Temporary Basal Rate","text":"<p>To determine the corrective temporary basal rate to implement, Loop calculates a \u201cdose\u201d in the same way doses are calculated in both open-loop and traditional insulin pump therapy. It's also the same math many people on multiple-daily injection therapy use. The benefit of Loop (and all other close-loop algorithms) is that it does this math every 5 minutes, and is far less prone to error than humans doing the math. Loop also does its math based on predicting into the future, which traditional pumps and humans, do not always have the time or inclination to do.</p> <p>The amount of insulin needed, or dose, is calculated using the desired reduction in blood glucose and the user\u2019s ISF. For the Loop algorithm, the desired reduction in blood glucose is the delta between the eventual blood glucose and the correction target:</p> \\[ \\mathit{dose} = \\frac{\\mathit{BG_{eventual}} - \\mathit{BG_{target}}}{\\mathit{ISF}} \\] <p>Loop Dose Calculation</p> <p>A major difference between traditional pump therapy and how the Loop calculates dose is that in pump therapy the current blood glucose is used to estimate the dose, whereas in the Loop algorithm the eventual and minimum blood glucose predictions are also used in determining dosing decisions.</p> <p>Loop then converts the dose into a basal rate using the Loop\u2019s temporary basal rate duration of 30 minutes:</p> \\[ \\mathit{BR_correction} = \\frac{\\mathit{dose}}{30 \\mathrm{min}} = \\frac{\\mathit{dose}}{\\frac{1}{2} \\mathrm{hr}} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} \\] <p>where \\(\\mathit{BR_correction}\\) is the basal rate ( \\(\\mathrm{\\frac{U}{hr}}\\) ), which is the amount of insulin needed over the next 30 minutes to bring the eventual blood glucose to the correction target. The basal rate, however, is the amount of basal rate needed beyond the user\u2019s scheduled basal rate. As such, the required basal rate can be determined by:</p> \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} \\] <p>Finally, Loop compares the \\(BR_{required}\\) with the user-specified maximum temporary basal rate \\(BR_{max}\\) setting to determine the temporary basal to issue:</p> \\[ \\mathit{BR_temp} = \\max(\\min( \\mathit{BR_required}, \\mathit{BR_max} ), 0) \\] <p>After running the temporary basal calculation described above, Loop checks whether there is already an appropriate basal running with at least 10 minutes remaining. If so, Loop will not reissue the temporary basal. However, if the recommended temporary basal differs from the currently running temporary basal \u2014 or the current scheduled basal if no temporary is running \u2014  then Loop will replace the current basal rate with the recommended temporary basal rate.</p> <p>As mentioned at the beginning of this section, the process of determining whether a temporary basal should be issued is repeated every 5 minutes.</p>"},{"location":"operation/algorithm/temp-basal/#temporary-basal-rate-calculation-example","title":"Temporary Basal Rate Calculation Example","text":"<p>To illustrate how the Loop calculates the temporary basal rate to issue, consider the calculation for the following scenario:</p> <ul> <li>\\(\\mathit{BG_eventual} = 200 \\mathrm{\\frac{mg}{dL}}\\)</li> <li>\\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\)</li> <li>\\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\)</li> <li>\\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\)</li> <li>\\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\) (set by user in Loop)</li> </ul> <p>First, calculate the dose:</p> \\[ dose = \\frac{\\mathit{BG_eventual} - \\mathit{BG_target}}{\\mathit{ISF}} = \\frac{200 \\mathrm{\\frac{mg}{dL}} - 100 \\mathrm{\\frac{mg}{dL}}}{50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}} = 2 \\mathrm{U} \\] <p>Then, convert the dose into a basal rate to be issued for the next 30 minutes:</p> \\[ \\mathit{BR_correction} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} = \\frac{2 \\times 2 \\mathrm{U}}{\\mathrm{hr}} = 4 \\mathrm{\\frac{U}{hr}} \\] <p>Next, calculate the required basal rate:</p> \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} = 1 \\mathrm{\\frac{U}{hr}} + 4 \\mathrm{\\frac{U}{hr}} = 5 \\mathrm{\\frac{U}{hr}} \\] <p>Lastly, compare the required basal rate to the maximum temporary basal rate, and find that Loop will enact a temporary basal rate of \\(5 \\mathrm{\\frac{U}{hr}}\\) for 30 minutes since this temporary basal rate is below the maximum temporary basal rate of \\(6 \\mathrm{\\frac{U}{hr}}\\), which was set by the user in Loop app settings.</p> \\[ \\mathit{BR_{temp}} = \\max(\\min( \\mathit{BR_{required}}, \\mathit{BR_max}), 0) = \\max(\\min( 5 \\mathrm{\\frac{U}{hr}}, 6 \\mathrm{\\frac{U}{hr}} ), 0) = 5 \\mathrm{\\frac{U}{hr}}\\]"},{"location":"operation/algorithm/temp-basal/#more-examples","title":"More Examples","text":"<p>Consider the following values as fixed values for our calculation:</p> <ul> <li>\\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\)</li> <li>\\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\)</li> <li>\\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\)</li> <li>\\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\)</li> </ul> <p>The table below shows the \\(\\mathit{BR_temp}\\) for different \\(\\mathit{BG_eventual}\\). \\(\\mathit{BR_temp}\\) should never turn negative and should never be greater than \\(\\mathit{BR_max}\\).</p> \\(\\mathit{BG_eventual}\\) \\(\\mathrm{(\\frac{mg}{dL}})\\) \\(\\mathit{dose}\\) \\(\\mathrm{(U)}\\) \\(\\mathit{BR_correction}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_required}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_temp}\\) \\(\\mathrm{(\\frac{U}{hr})}\\) 300 4.0 8.0 9.0 6.0 200 2.0 4.0 5.0 5.0 100 0.0 0.0 1.0 1.0 90 -0.2 -0.4 0.6 0.6 75 -0.5 -1.0 0.0 0.0 50 -1.0 -2.0 -1.0 0.0"},{"location":"operation/algorithm/temp-basal/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/features/battery/","title":"MDT Pump Battery","text":""},{"location":"operation/features/battery/#medtronic-pump-battery","title":"Medtronic Pump Battery","text":"<p>One common confusion point for new Loop users is how to interpret their pump's battery levels and whether they need to change their pump batteries based on which pieces of information.</p>"},{"location":"operation/features/battery/#discharge-curves","title":"Discharge Curves","text":"<p>There are generally two different types of AAA batteries that we use in these Medtronic pumps; alkaline or lithium.</p> <p>To understand pump battery levels, you first need to know a little about battery discharge curves.  It's not a hard concept...basically how a battery dies over time as it is used or sits in a drawer.  More technically said, a battery discharge curve is the measure of volts that a battery puts out over time.  Batteries start at a higher voltage output and slowly that voltage output degrades over time (or use) until the battery no longer provides enough \"ummph\" to keep the electronic gadget going.  BUT, alkaline batteries and lithium batteries have different discharge curves due to the chemistry inside them, and the curves can be slightly different depending on the environment (temperature) and battery manufacturer.</p> <p>Alkaline batteries have a relatively steady voltage drop over time, as shown below.  Notice the shape of the curve has a significant amount of time in the 1.3 to 1.2 volts range, and a relatively smooth decline to about 1.2 volts.</p> <p></p> <p>Lithium batteries have a much steadier voltage output over time, as shown below.  Notice how the shape of the curve is relatively flat for a large portion of the battery life before suddenly off around 1.3 volts.</p> <p></p> <p>What does the above information mean in terms of Looping?  A lithium battery at 1.3v is going to have a much quicker time to death than an alkaline battery sitting at 1.3v.  You might only get a couple of hours of looping left when a lithium battery is at 1.3v, but an alkaline battery at 1.3v might go for several more days.  So when we talk about setting alarm levels in either system, your battery type is an important consideration.</p>"},{"location":"operation/features/battery/#medtronic-pump-battery-level-indicator","title":"Medtronic Pump Battery Level Indicator","text":"<p>If you read Medtronic's literature, it will tell you to use Energizer alkaline batteries in their pumps.  Why would that be?  Hint: the answer doesn't mean that Duracell batteries are inherently worse than Energizer or that lithium batteries won't work in Medtronic pumps.</p> <p>The answer is all about the accuracy of their little pump battery level indicator on their pump's screen.  Medtronic calibrated their pump battery level indicator to:</p> <ul> <li>Energizer alkaline batteries</li> <li>Normal (non-Loop) uses</li> <li>Temperatures between 37\u00b0F (3\u00b0C) to 104\u00b0F (40\u00b0C).</li> </ul> <p>In other words, Medtronic ran experiments to see exactly how long an Energizer alkaline battery will last in normal pump use and made their own discharge curve.  They programmed their pump battery level indicator to change from 4 bars to 3 bars to 2 bars to 1 bar based on that particular discharge curve.</p> <p>However, Loop users are slightly more demanding on the pump's battery/voltage than simply delivering insulin.  We are also asking for the pump to perform radio communications, in addition to delivering insulin.  Those radio communications need a slightly higher voltage than the typical \"normal\" pump use.  So while a non-Looper might be ok running their pump until a voltage of about 1.12 for insulin delivery, radio communications might stop at a voltage output of about 1.17.  If you experiment with your Looping pump, you'll find Loop will turn red from failed pump comms before the pump actually fails at insulin delivery.  This difference between \"failure\" voltages needs to be considered when determining how much useful battery life is left for a pump battery.</p> <p>In summary, that little pump battery indicator on the Medtronic pump screen is ONLY useful if you are:</p> <ul> <li>not using the pump for Looping,</li> <li>using Energizer alkaline batteries, and</li> <li>in the temperature environment similar to their testing.</li> </ul> <p>Loop users should not rely on their Medtronic pump screen's pump battery indicator, and instead use the Loop's pump battery level indicator.</p>"},{"location":"operation/features/battery/#loops-pump-battery-level-indicator","title":"Loop's Pump Battery Level Indicator","text":"<p>Keeping the information about battery discharge curves in mind, Loop developers tested various battery brands and types to develop discharge curves for Loop users.  These discharge curves form the basis of the pump battery level indicator found in the top right of the Loop's main display screen and the pump battery notifications provided by the Loop app.  The pump battery level indicator will also report in %.</p> <ul> <li>For x23 and x54 model users, the Loop's pump battery level will move in 25% increments.</li> <li>For x15 and x22 model users, the Loop's pump battery level will move in discrete % increments.</li> </ul> <p>Based on the battery type selected and the pump model being used, the Loop's pump battery level notifications are designed to give the user about 8 hours of notice before pump communications are likely to fail.  The Loop user should have some additional time after pump comms fail before actual insulin delivery would stop.</p>"},{"location":"operation/features/battery/#nightscout-pump-battery-display","title":"Nightscout Pump Battery Display","text":"<p>The Nightscout information regarding pump battery levels will depend on pump model being used.</p> <ul> <li>If you use an x23 or x54 pump and MySentry, the pump levels are reported as a percent to NS, because that's how MySentry reports the data to Loop.  The packets use 100%, 75%, 50%, and 25% increments, and the Loop's main display matches the NS pump display.</li> <li>If you use an x22 or x15 pump, the pump levels are reported as voltage readings to NS because Loop has to specifically request the voltage reading from the pump.  The Loop's main display will show pump battery level as discrete %, not the individual voltage measurement.</li> <li>No matter what pump you are using, you can always get the current pump battery's voltage by using the RileyLink's <code>Read Pump Status</code> command.</li> <li>The extra communications effort for non-MySentry model pumps will mean slightly shorter battery life vs. MySentry model pumps.</li> </ul>"},{"location":"operation/features/battery/#nightscout-pump-battery-alarms","title":"Nightscout Pump Battery Alarms","text":"<p>The Nightscout alarms are based on the Heroku settings that you have input specifically.  If you don't specifically set them, Nightscout will use the default settings for pump battery alerts as shown below:</p> <p></p> <p>Nightscout pump battery levels, if you leave things at default installation, will not trigger alarms.  If however you add a setting of <code>PUMP_ENABLE_ALERTS</code> to <code>true</code>, you will receive pump battery notifications according to the levels shown in the parenthesis above.  For example, your x23 pump is reporting its levels in percent, therefore you'd receive a yellow warning alarm at 30% and an urgent red alarm at 20%.  Your x22 pump however is reporting its levels at voltage readings, therefore you'd receive a warning yellow alarm at 1.35v and an urgent red alarm at 1.30v.</p> <p>Are the default NS alarm levels going to work for you?  The answer depends on what type of battery level you are using, what model pump you are using, and how much advance notification you want to receive before needing to change a pump battery.  There is a bit of personal preference and experimentation to finding what works for you.</p> <p>For x22 or x15 pump users, the NS alert settings that may need to be adjusted are the ones based on voltage.</p> <p>Generally speaking, for a x22 or x15 pump using alkaline batteries, the default NS alarm levels will be too early to be useful and lead you to change out your battery too frequently.  Alkaline batteries can go to low 1.2s or high 1.1s before Looping starts to have communication problems.  How much lower than the default voltage 1.35/1.30 alarm levels you want to go will depend on how far in advance you want to be warned about an upcoming battery change.</p> <p>If however, you are using a x22 or x15 pump with lithium batteries, the default 1.35v/1.30v alarm levels may be completely appropriate.  Remember how the lithium battery curves at the start of this discussion died off quickly around 1.3v?  You won't get hardly any heads-up notice for a lithium battery if you set the alarm below 1.3v.</p> <p>For x23 or x54 pump users, the NS alert settings that may need to be adjusted are the ones based on percentage settings.</p> <p>Alkaline and lithium batteries should have automatically had their percentage-remaining based on the correct battery type in your Loop settings.  So, generally speaking the default NS alert levels don't generally need adjusting.  However, if you are using lithium batteries, the drop off between 75% to 25% can be quite dramatic and not be easy to anticipate (especially if the drop happens overnight).</p> <p>As an alternative method of tracking pump battery changes, you could use the insulin age (IAGE) plug-in to anticipate your pump battery changes as well.  For example, after tracking pump battery life on my 723 using energizer batteries lithium batteries for the last several months, I know that we get about 15 days plus a handful of hours.  The amount of hours more beyond 15 days varies depending on how much we've interacted with the pump buttons directly, whether we've looped the full 15-days solid, and if the pump has been in extreme weather (cold weather can sap pump battery life).  By tracking the pump battery changes with NS's careportal \"insulin cartridge change\", I can see in advance if we are nearing an overnight on a 15 day battery and decide to change batteries before overnight to prevent any middle-of-night battery issues.</p> <ul> <li>Lithium batteries will get a significantly longer life than an alkaline battery.</li> <li>Experiment and track your particular pump model and battery type to understand what NS settings will work best for you.</li> <li>Do not rely on the pump's on-screen pump battery indicator, especially when using lithium batteries.</li> </ul>"},{"location":"operation/features/bolus/","title":"Bolus","text":""},{"location":"operation/features/bolus/#bolus","title":"Bolus","text":"<p>This page was updated with information for Loop 3.</p>"},{"location":"operation/features/bolus/#loop-2-and-3-differences","title":"Loop 2 and 3 Differences","text":"<p>Most of the information is the same for Loop 2.2.x and Loop 3. </p> <p>Loop 2 and 3 differences:</p> <ul> <li>Loop 3 uses the setting name of Glucose Safety Limit, which has the same meaning as Suspend Threshold in Loop 2</li> <li>With Loop 3.2 and later<ul> <li>Loop automatic delivery of insulin is limited when users IOB is two times the <code>Maximum Bolus</code> amount</li> </ul> </li> <li>Bolus Row: <ul> <li>With Loop 3.0 and later<ul> <li>The Recommended Bolus is provided AND the default for the Bolus is the recommended value</li> <li>If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry</li> </ul> </li> <li>With Loop 2.2.x<ul> <li>The Recommended Bolus is provided but the default for the Bolus value is 0</li> <li>If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row</li> </ul> </li> </ul> </li> </ul>"},{"location":"operation/features/bolus/#meal-bolus","title":"Meal Bolus","text":"<p>The Meal Bolus screen is entered following a carb entry or edit action, the active button might be Save and Bolus or, if no bolus was recommended, Save without Bolusing. </p> <p>The Save refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen (Loop 3 only).</p> <p>You can review the carb information at the Meal Entry link.</p> <p>Carbs are Saved in Meal Bolus Screen</p> <p>Carbs are saved when the <code>Save and Bolus</code> or <code>Save without Bolusing</code> button is tapped in Meal Bolus Screen. When the button is tapped, carbs are saved even if the bolus does not go through to the pump.</p> <p>If you see a <code>Bolus Issue</code> notification (Bolus in progress, etc) after saving a carb entry, check the state of Loop carb entries.</p> <p>Do not just add the carbs again.</p>"},{"location":"operation/features/bolus/#accept-recommendation","title":"Accept Recommendation","text":"<p>The graphic below shows the Meal Bolus screen after the user entered carbs and tapped continue:</p> <ul> <li>The left graphic shows a case where a bolus is recommended - tapping on the Save and Deliver button saves the carbs and delivers the bolus</li> <li>The right graphic shows a case where no bolus is recommended - tapping on the Save without Bolusing saves the carbs</li> <li>These graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the Recommended Bolus and Bolus rows</li> <li>For both graphics<ul> <li>Active Carbs and Active Insulin are displayed above the Glucose prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved)</li> <li>The Bolus Summary is presented below the Glucose prediction graph with three rows:<ul> <li>Carb Entry, the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the &lt; Carb Entry button at upper left</li> <li>Recommended Bolus displays what Loop recommends for that proposed Carb Entry</li> <li>Bolus default display is what Loop recommends, but user can edit that value</li> </ul> </li> </ul> </li> </ul> <p></p> <p>If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged.</p>"},{"location":"operation/features/bolus/#modify-bolus","title":"Modify Bolus","text":"<p>This section is a continuation of the information presented in the Accept Recommendation section above. In the graphic below, the user overrides the recommended bolus.</p> <ul> <li>The left side shows a modified bolus less than the recommended bolus</li> <li>The right side shows a modified bolus greater than the recommended bolus</li> <li>The Glucose prediction graph updates with changes to the Bolus value, giving the user the opportunity to accept or change their proposed value before tapping Save and Deliver</li> <li>At the next Loop cycle, the app modifies insulin delivery based on the saved information<ul> <li>For the example with bolus less than recommended amount:<ul> <li>Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the Correction range</li> <li>The recommendation to add insulin when the current glucose is below the Correction Range is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the Safety Threshold</li> </ul> </li> <li>For the example with bolus greater than recommended amount:<ul> <li>Loop will probably issue an automatic temp basal of 0 U/hr</li> <li>This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post meal spikes</li> </ul> </li> </ul> </li> <li>Remember - the Glucose prediction is what happens if you Save and Deliver and then no further adjustments are made to insulin delivery by Loop</li> </ul> <p></p>"},{"location":"operation/features/bolus/#manual-or-correction-bolus","title":"Manual (or Correction) Bolus","text":"<p>To start a bolus entry, tap on the double orange triangles (circled below) in the toolbar at the bottom of the Loop status screen.</p> <p></p> <p>The Loop app will open to the Bolus screen. This looks similar to the Meal Bolus screen without the Carb Entry row. Loop considers the Glucose Safety Limit and Predicted Glucose when determining the recommended bolus. </p> <p>In the graphic below, the current glucose is under the Correction Range. Loop allows you to dip below the correction range but its recommended bolus will be limited by the glucose prediction and the Glucose Safety Limit. Check back once your glucose starts to rise and there will probably be a bigger recommendation.</p> <p>This screen behaves differently for Loop 2.2.x and Loop 3. The graphics and instructions on this page are for Loop 3 version. Click on the Loop 2.2.x link above to view the Loop 2 version.</p> <p>When the Bolus screen is entered directly from the toolbar, the button choices are Enter Bolus if none is recommended, Deliver if a value is on the Bolus row or Cancel using the button on the upper left. The user can also tap on the value on the Bolus row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero.</p> <p>The two graphics below are examples of manual bolus screens. </p> <ul> <li>In the first graphic, no bolus was recommended<ul> <li>If you tap on the Enter Bolus button at the bottom, it brings up a screen to enable you to type in an amount and then Deliver it. </li> <li>Alternatively, you can tap the 0 amount in the Bolus row and perform the same action as the Enter Bolus button</li> <li>If you do not want to override the recommendation, hit the Cancel button at upper left.</li> </ul> </li> </ul> <p></p> <ul> <li>In the second graphic, a recommended amount is shown<ul> <li>If you tap on Deliver that recommended dose is delivered</li> <li>If you tap on the value on the Bolus row, you can override the amount</li> <li>The amount displayed on the Bolus row is modified to 0 U with the first tap - at that point, you may enter a new value or tap Cancel using the button at upper left of the screen</li> </ul> </li> </ul> <p></p>"},{"location":"operation/features/bolus/#recommended-bolus","title":"Recommended Bolus","text":"<p>Loop updates the glucose prediction every time a new glucose reading is detected, typically every 5 minutes. If Loop predicts your glucose will be above the high end of your Correction Range at the end of the Duration of Insulin Activity (DIA) and the predicted glucose is above the Glucose Safety Threshold, it will provide a Recommended Bolus. Loop will not give an alert when a bolus is being recommended, the bolus entry tool must be clicked to check for one. The Loop pill in Nightscout will display when Loop is recommending a bolus.</p> <ul> <li> <p>If your Dosing Strategy is set to Temp Basal (default)</p> <ul> <li>Loop will provide increased temporary basal rates until it has delivered enough insulin to bring predicted glucose into range</li> <li>The increased temporary basal rates are subject to your Delivery Limits.</li> </ul> </li> <li> <p>If your Dosing Strategy is set to Automatic Bolus</p> <ul> <li>Loop will recalculate the correction bolus at each successive loop interval, i.e., every 5 minutes</li> <li>Loop will then automatically deliver 40% of that new correction value</li> <li>Each automatic bolus is subject to your Delivery Limits</li> </ul> </li> </ul>"},{"location":"operation/features/bolus/#bolus-status-line","title":"Bolus Status Line","text":"<p>Lock Phone During Bolus</p> <p>Once the bolus has started, you should lock your phone to avoid inadvertently cancelling a bolus.</p> <p>When the phone is in portrait mode, a bolus status line will appear below the Heads Up Display when Loop has a bolus in progress. The \"starting bolus\" indicator is shown in the left screenshot above - this is when Loop is communicating with the RileyLink. Once the message has been sent to the RilyLink, even if a response from the pump did not make it back to Loop, the bolused xx of yy with the circle display begins, as shown in the right screenshot above. If you change your mind, just click on the bolus status line while the bolus is in progress to cancel your bolus, as shown in the screenshot below.  (Newer versions of Loop explicitly state: Tap to Stop on this line.) The amount bolused shown in this display is based on time.  Loop reconciles the bolus amount with messages received from the pump once the bolus completes.</p> <p></p> <p>If you see a 'pump is suspended notice' in the bolus status line after cancelling your bolus, just tap on it to resume pump operations.</p>"},{"location":"operation/features/bolus/#bolus-failure-notifications","title":"Bolus Failure Notifications","text":"<p>On occasion, you will receive a notification that a bolus may have failed. If your Dosing Strategy is set to Automatic Bolus, this can happen when an automatic bolus is in progress. In some of these cases, the bolus was delivered. On a Medtronic pump, you should check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.  Omnipod users can hear the clicks if the room is quiet enough.</p> <p>If you get an uncertain delivery message, you may still see the \"bolused xx of yy\" display continue for as long as it would have taken to actually deliver the bolus. This display is driven by a timer and logic on the phone. (Loop is not asking the pump repeatedly - \"are you done yet?\"). You may want to interrupt an uncertain bolus if it is large, evaluate status and then resume with a fresh bolus. Loop should update the status the next time it contacts the pump. It can determine whether that bolus actually went through or not and will update the screen.  Look at the Event History screen (accessed by tapping the Active Insulin or Insulin Delivery plots). Turn your phone to landscape orientation and you should see either \"Certain\" or \"Uncertain\" at the end of each Bolus record. (If you tap on the specific record, even more detail is displayed.)</p> <p>If an \"uncertain\" delivery is not resolved:</p> <ul> <li>Make sure the RileyLink compatible device is communicating properly</li> <li>You can try to turn off Bluetooth and then turn it back on again</li> <li>Quit the Loop app and restart it. (Note - this is different from a power cycle of the phone which remembers settings within an app that was running before the power cycle.)</li> </ul> <p>If that does not resolve the issue, please tap on Loop Settings, Issue Report and email it to yourself. Then post on Facebook or Zulipchat, explain what happened and say you have an Issue Report. Someone should reach out to you.</p> <p>There are other alert messages that might be displayed if the pump or CGM is not active.  Those are found on the Loop 3 Displays page.</p>"},{"location":"operation/features/bolus/#loop-2-bolus-screen","title":"Loop 2 Bolus Screen","text":"<ul> <li> <p>Loop 2.2.x shows the recommended bolus but the bolus row is initially set to 0</p> <ul> <li>You can tap on the Recommended line and that value will be transferred to the Bolus line</li> <li>OR </li> <li>You can tap on 0.0u on the Bolus row and type in your desired bolus amount</li> <li>As soon as a value is entered on the Bolus row, the Deliver button turns blue and can be tapped to deliver that amount via your pump.</li> </ul> <p></p> </li> </ul>"},{"location":"operation/features/carbs/","title":"Meal Entries","text":""},{"location":"operation/features/carbs/#meal-entry","title":"Meal Entry","text":"<p>This page was updated with information for Loop 3.</p>"},{"location":"operation/features/carbs/#loop-3-updates","title":"Loop 3 Updates:","text":"<ul> <li>Time: Loop 3 adds the +/- 15 minute buttons to adjust time for entry</li> <li>Food Type: emoji keyboard<ul> <li>Loop 3 initially displays Medium emojis and the association of some emojis with absorption time has been improved</li> <li>Loop 2.2.x initially displays Fast emojis</li> </ul> </li> <li>Absorption Time: values for fast, medium and slow<ul> <li>Loop 3 uses 30 minutes, 3 hr, 5 hr</li> <li>Loop 2.2.x uses 2 hr, 3 hr, 4 hr</li> </ul> </li> <li>Meal Bolus: Loop 3 fills in the Bolus row with Recommended Bolus</li> <li>Large Meal Warning<ul> <li>The warning limit of 99 g was chosen to assist in catching mistakes such as entering 115 grams instead of 15 grams</li> </ul> </li> <li>Override Active Warning<ul> <li>A warning is presented when entering carbs while an override with sensitivity other than 100% is active</li> </ul> </li> </ul>"},{"location":"operation/features/carbs/#meal-entry-fast-version","title":"Meal Entry - Fast Version","text":"<p>To start a new meal entry, tap on the green plate icon (circled below) in the toolbar at the bottom of the Loop status screen. Your Loop app will open to the Add Carb Entry screen.</p> <p></p> <p>Loop assumes carbs saved will be absorbed and Loop will adjust recommended insulin, and, when Closed Loop is enabled, Loop will adjust automated dosing based on those carbs.</p> <ul> <li>Loop updates the carb estimate dynamically based on your glucose while meal is active</li> <li>Approximate entry is \"good enough\"; better to underestimate carbs than to overestimate</li> <li>The Loop recommended bolus can be modified by editing the Bolus amount after tapping the Continue button on the Add or Edit Carb Entry screen.</li> </ul> <p>Beginner's Tip</p> <ul> <li>Add some amount of carbs when you normally would dose before or at a meal<ul> <li>Make sure the amount of insulin recommended is not more than you expect</li> <li>If the amount seems too large, you might need to reduce Amount Consumed entry or adjust settings</li> </ul> </li> <li>Accept the defaults as directed below</li> </ul>"},{"location":"operation/features/carbs/#meal-entry_1","title":"Meal Entry","text":"<p>The steps and graphics in this section are for users of Loop 3. To view the version used by Loop 2.2.x, click on this link.</p> <p>Tap the meal entry icon on the toolbar to open the Add Carb Entry screen:</p> <ol> <li>Enter number of grams of carbs in the Amount Consumed row (keyboard appears automatically)</li> <li>Tap continue to advance to the Meal Bolus screen (as shown in the graphic below)</li> <li>Tap Save and Deliver to Save the carbs and Deliver the recommended bolus</li> </ol> <p>The carbs are not saved until the Meal Bolus screen is completed.</p> <ul> <li>If no bolus is recommended in the Meal Bolus screen:<ul> <li>A No Bolus Recommended warning appears with the reason why</li> <li>The blue button on the Meal Bolus screen says Save without Bolusing</li> <li>In this case, carbs are saved when the Save without Bolusing button is tapped</li> </ul> </li> </ul> <p></p> <p>Carbs are Saved in Meal Bolus Screen</p> <p>Carbs are saved when the <code>Save and Bolus</code> or <code>Save without Bolusing</code> button is tapped in Meal Bolus Screen. When the button is tapped, carbs are saved even if the bolus does not go through to the pump.</p> <p>If you see a <code>Bolus Issue</code> notification (Bolus in progress, etc) after saving a carb entry, check the state of Loop carb entries.</p> <p>Do not just add the carbs again.</p> <p>By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals.</p>"},{"location":"operation/features/carbs/#meal-entry-row-by-row","title":"Meal Entry Row by Row","text":"<p>Do you want to know more? This section discusses each row in turn.</p>"},{"location":"operation/features/carbs/#amount-consumed","title":"Amount Consumed","text":"<p>When entering the Add Carb Entry screen, the number keypad is deployed and when you start typing, that value is entered into the Amount Consumed row.</p> <p>Tapping on any other row dismisses the number keypad. It can be restored by tapping on the Amount Consumed row.</p> <p>Some value must be entered into the Amount Consumed row to continue.</p> <p>Many Loopers increase the carbohydrate amount to cover the expected effect of protein and fat in their meal entry. For simplicity, the rest of this page only refers to carbs because all the figures show carbs or carbohydrates in the menus. You should consider the whole meal, including fat and protein, especially if you eat lower carb.</p> <p>Loopers who consume mostly carbs in a given meal, might do better entering just the carbs.</p>"},{"location":"operation/features/carbs/#time","title":"Time","text":"<p>Modifying the Time for a new meal entry from the default value of \"now\" is optional.</p> <ul> <li>Each tap on the \u2212 icon changes the time earlier in 15 minute increments</li> <li>Each tap on the + icon changes the time later in 15 minute increments</li> <li>Tap on the time to bring up a picker wheel for desired time</li> </ul> <p>The 15 minute increments, which are also available on the watch interface, can be handy if the Looper chooses to prebolus.</p> <p>Reasons to modify the time when entering a meal:</p> <ul> <li>Meal is planned for the future, e.g., prebolus now (optional)<ul> <li>If meal is planned more than 15 minutes from \"now\", it's a good idea to modify the time to the planned start time</li> <li>In Closed Loop, insulin dosing adjusts for planned carbs while maintaining the Glucose Safety Limit</li> </ul> </li> <li>Meal was eaten in the past but carbs were not entered<ul> <li>Loop does a better job with predictions if you enter the meal at the time it was eaten</li> <li>Entering a previous meal (now) makes Loop think the carbs will all be in the future (not some of them in the past) and can cause too much insulin to be recommended / delivered</li> </ul> </li> <li>Some foods, like pizza, may need entries to start later with a longer absorption time</li> </ul> <p>Limits for time entry of when meal was consumed:</p> <ul> <li>The carbs can be entered up to 12 hours earlier or 1 hour later<ul> <li>When editing, this limit applies to the time when the carb entry was previously saved</li> </ul> </li> </ul>"},{"location":"operation/features/carbs/#food-type","title":"Food Type","text":"<p>Food Type entries are optional.</p> <p>The information about the next row: Absorption Time is also important when discussing Food Type entries.</p> <ul> <li>The first touch of any icon sets the absorption time to the value associated with that icon<ul> <li>This includes the 3 icons (Lollipop, Taco, Pizza) on the Food Type row</li> <li>If you touch the plate icon (or the words Food Type), a new set of icons (food emoji) appear as shown in the graphic below<ul> <li>Each emoji is associated with Fast, Medium or Slow absorption time</li> <li>The first emojis presented are medium - scroll in either direction to view the fast and slow emojis or tap on the short-cut tabs at the bottom of the screen</li> <li>The emojis under Other have no effect on absorption time and they do not \"count\" as a first tap; e.g., wine followed by bacon updates absorption time to Slow.</li> </ul> </li> </ul> </li> <li>Any additional icon touches have no effect on selected absorption time</li> <li>At any time, the Absorption Time picker can be used to adjust the absorption time</li> </ul> <p></p> <p>Pro Tip</p> <ul> <li>If you want to enter food emojis<ul> <li>Verify food absorption time when you are done</li> <li>If you know you want to keep the 3 hour absorption time, tap the taco icon on the main screen before entering food emojis</li> </ul> </li> </ul> <p>Loop 3 Absorption Times</p> <p>If you switched to Loop 3 from Loop 2.2.x, please be aware that absorption times for the Lollipop, Taco, Pizza icons have been updated.</p> <ul> <li>Loop 3 uses 30 minute, 3 hours and 5 hours</li> <li>Loop 2.2.x used 2 hours, 3 hours and 4 hours</li> </ul> <p>Beware using Lollipop for Complex meals</p> <p>If you select the Lollipop icon for a large complex meal with Loop 3, you tell Loop to expect glucose to rise rapidly (30 min absorption). When that rapid rise does not materialize, Loop may predict an unexpectedly low glucose because the algorithm assumes something must be affecting glucose downward in a strong way.</p> <p>If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction.</p> <p>\ud83c\udf6d (Fast) is for simple foods often used for low treatments. Some Loopers use it for coffee.</p>"},{"location":"operation/features/carbs/#absorption-time","title":"Absorption Time","text":"<p>Modifying the Absorption Time from the default value of 3 hours is optional.</p> <ul> <li>If you touch any icon on the main entry or Food Type row, the absorption time associated with that icon becomes the new absorption time<ul> <li>Any additional icon touches have no effect on selected absorption time</li> </ul> </li> <li>At any time, the Absorption Time picker can be used to adjust the absorption time</li> </ul> <p>Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and to estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details.</p> <p>Loop assumes a specific model for how those carbs will be absorbed that is spread out over an interval that is 150% of the selected time. This allows for variations in actual absorption.  More information about this model is found in the prediction link above.</p> <p>Many meals can be entered with the medium (3 hour) default absorption time. Learn by experimenting and modify going forward. Evaluate the CR setting, as well as the entries for Amount Consumed and Absorption Time for adjusting meal entries. The amount of up-front insulin recommended is typically similar up through 3 hours absorption and then begins to decrease as absorption time is increased.</p> <p>Experiment for yourself - how much does Loop recommend compared to a straight Carbs/CR value? Try this at different times; especially when glucose is nominal and flat compared to low and dropping or high and rising.</p> <ul> <li>Enter an absorption time and hit continue</li> <li>Examine recommended bolus</li> <li>Tap the &lt; Carb Entry button at upper left</li> <li>Modify the absorption time and hit continue</li> <li>Repeat to get a feel for the up front bolus under different scenarios</li> </ul>"},{"location":"operation/features/carbs/#continue","title":"Continue","text":"<p>Carbs are not saved in the Add Carb Entry screen until the Continue button is pressed and the user saves those carbs in the Meal Bolus  screen, follow the link for details.</p>"},{"location":"operation/features/carbs/#large-meal-warning","title":"Large Meal Warning","text":"<p>If the <code>Amount Consumed</code> row exceeds 99 grams when the Continue button is tapped, the user is provided with a modal alert from which they can proceed to the Meal Bolus screen, or return to edit <code>Amount Consumed</code> if that was not the intended amount.</p> <p></p>"},{"location":"operation/features/carbs/#override-active-warning","title":"Override Active Warning","text":"<p>If you have an override active with insulin sensitivity value set to anything other than 100%, a warning message appears at the top of the Add Carb Entry screen.</p> <p></p>"},{"location":"operation/features/carbs/#automatic-bolus","title":"Automatic Bolus","text":"<p>Loopers who are using the Automatic Bolus Dosing Strategy should still prebolus and/or bolus for meals. The amount of <code>Recommended</code> insulin that will appear in the Meal Bolus screen will be the full amount of the bolus Loop recommends (not the 40% partial bolus delivered automatically). As discussed above, you can accept this recommendation or enter a different amount, however, and this is very important, if your Dosing Strategy is set to Automatic Bolus, by entering less than the recommended amount and tapping <code>Deliver</code> or tapping <code>Save Without Bolusing</code>, you are telling Loop to deliver the remaining recommended insulin in the future using 40% of the recommended bolus at each successive Loop interval.</p> <p>Carb Entry Leads to Insulin Delivery</p> <p>Note that this same automatic delivery of insulin in response to entered carbs occurs when Dosing Strategy is set to Temp Basal, but the delivery via temporary basal rates is slower, providing more time for an error to be noticed. By the same token, the Automatic Bolus Dosing Strategy responds more quickly to increases in blood glucose, helping to minimize food spikes.</p>"},{"location":"operation/features/carbs/#edit-meals","title":"Edit Meals","text":"<p>Adjusting a meal entry can be a particularly useful tool when:</p> <ul> <li>You did not finish an entire meal that you bolused for,</li> <li>You did not get to eat the meal at the time you originally expected,</li> <li>You ate more servings than originally entered, or</li> <li>You suspect your carb count was in error because BGs are rising more/less than expected.</li> </ul> <p>From the main Loop screen, tap on the Active Carbohydrates chart to view the Carbohydrates screen (see graphic below).</p> <p>To adjust an entry, simply tap on it (do not tap the <code>Edit</code> button at the top of the screen). You can change the time, modify carb amounts, or adjust absorption times (even mid-meal). To delete an entry, you first tap <code>Edit</code> and tap on the red circle to the left of the entry that you would like to delete. It is a little counterintuitive, but the <code>Edit</code> button lets you delete, but not edit an entry.</p> <p></p> <p>For more information on some of the details reported on this screen, review Dynamic Carb Absorption</p>"},{"location":"operation/features/carbs/#review-carb-absorption","title":"Review Carb Absorption","text":"<p>New Loopers, and even experienced Loopers with an unfamiliar meal or activity, should review how Loop reports absorption for the carbs you entered for a meal. If you have perfect dosing for your meal (the mythical flat line), then the carb absorption will match the model perfectly. But sometimes, there might be COB on the Active Carbohydrates Chart Loop 3 / Loop 2 that doesn't reflect your current situation, and you might need to make an adjustment. Note that while Loop is pretty forgiving on exact values and absorption time, you need to learn what works for you. Some common things to consider are listed below.</p> <ul> <li>Need to adjust value for carbs or account for fat/protein</li> <li>Need to adjust aborption time</li> <li>Need to review settings</li> <li>Settings, carbs and absorption time are good for this meal but there was more or less activity than normal</li> <li>Stress / Hormones / Exercise</li> <li>Other effects</li> </ul> <p>You can Edit previously saved carbs so Loop has a better idea of how to adjust predicted glucose moving forward. This can head off a low or a high.</p>"},{"location":"operation/features/carbs/#check-cob-before-adding-more","title":"Check COB Before Adding More","text":"<p>Loop works better when informed that carbs are coming, but if you have a lot of left-over carbs from an earlier entry - wait before adding more carbs for that next snack. If Loop thinks more carbs are expected, it will dose extra insulin to accommodate. Maybe set a timer and check back in half-an-hour or an hour to see if you really need to add more carbs.</p> <p>Dosing at a Party</p> <p>Example - at a party where Looper is eating small amounts at a time, get some carbs entered to get some insulin up front, but pay attention when clicking add carbs (especially when using the watch and accepting recommended dosing).</p>"},{"location":"operation/features/carbs/#avoid-double-meal-entries","title":"Avoid Double Meal Entries","text":"<p>Be Aware</p> <p>If you have accidentally made duplicate entries for the same meal, click on the Active Carbohydrates chart in the main Loop screen and tap <code>Edit</code> to delete the redundant entries. Deleting the meal entry will not impact the insulin that has already been delivered, but it will alert Loop to adjust your BG projection for purposes of calculating future insulin delivery.</p>"},{"location":"operation/features/carbs/#dynamic-carb-absorption","title":"Dynamic Carb Absorption","text":"<p>Loop observes the blood glucose impact of the meal within the 150% absorption time window. Loop calculates how many carbs have been absorbed (regardless of how many you entered) based on your BG pattern and your settings.</p> <p>You can watch the progression of  Loop's observations of your meal by tapping on the Active Carbohydrates chart at the bottom of Loop's main screen and watching the insulin counteraction effects (ICE) on the Carbohydrates screen. An example of the screen is on the left side of the figure below. An explanation of the dual lines for each entry and the color coding scheme is explained below the figure. Click on the ICE link for more details and an in-real-life example.</p> <p></p> <ul> <li>Top line of each entry for the graphic on the left (above)<ul> <li>Amount you entered, time of entry, absorption time entered</li> </ul> </li> <li>Bottom line of each entry (changes with each CGM reading)<ul> <li>Amount absorbed, estimated time when amount you entered will be absorbed</li> <li>Color codes while within the 150% absorption time window<ul> <li>Green: amount absorbed is less than 10% above the entered amount</li> <li>Yellow: amount absorbed exceeds 10% above the entered amount</li> </ul> </li> <li>Color codes after 150% absorption time window expires<ul> <li>Grey: amount absorbed is within 10% of the entered amount</li> <li>Yellow: amount absorbed is exceeds 10% above or below the entered amount</li> </ul> </li> </ul> </li> </ul> <p>The information available on the Carbohydrates screen disappears for any meals older than 12 hours, so if you're looking for details as to how a particular meal absorbed, you may need to screenshot or otherwise capture this information within that window. Previous entries can be modified or deleted through this screen.</p>"},{"location":"operation/features/carbs/#medtronic-warning","title":"Medtronic Warning","text":"<ul> <li>Do not enter carbs into your Medtronic pump<ul> <li>If you use your Medtronic pump bolus wizard or carb entry screen, the pump will give you insulin but Loop will not know about the carbs</li> <li>The Loop predictions will be off and next time Loop reads the reservoir history on the pump, it will probably command a temporary basal rate of 0.0 U/hr</li> </ul> </li> </ul>"},{"location":"operation/features/carbs/#nightscout-entries","title":"Nightscout Entries","text":"<p>With Loop 3, a caregiver can add remote carbs and perform remote bolus through Nightscout, but that requires set-up between the caregiver and Loopers phone and use of the Remote Carb and Remote Bolus entries in the Careportal.</p> <p>If you enter carbs (not remote carbs) into the Careportal, they are not read by Loop and will not be reflected in COB.</p> <ul> <li>There may be times you want to do this, e.g., you want to indicate a low treatment you don't want Loop to know about</li> </ul>"},{"location":"operation/features/carbs/#third-party-apps","title":"Third Party Apps","text":"<p>This is relevant for Loop 2.2.x versions. Loop 3 does not read carbs from Apple Health unless you modified the code.</p> <p>Please see Loop 2 Permissions.</p>"},{"location":"operation/features/carbs/#carb-absorption-model","title":"Carb Absorption Model","text":"<p>For more information about the way Loop models the effects of carbs, insulin, etc., see the algorithm page.</p>"},{"location":"operation/features/carbs/#loop-2-fast-meal-entry","title":"Loop 2 - Fast Meal Entry","text":"<p>This section is for users of Loop 2.2.x.</p> <p>Tap meal entry icon on toolbar</p> <ol> <li>Enter number of grams of carbs in the Amount Consumed row</li> <li>Tap continue to advance to the Meal Bolus screen</li> <li>Tap Recommended line to transfer the value to the Bolus line (Loop 2.2.x)</li> <li>Tap Deliver</li> </ol> <p>The carbs are not saved until the Meal Bolus screen is completed.</p> <p></p> <p>By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals.</p>"},{"location":"operation/features/ice/","title":"Meal Review","text":"<p>When on Loop main screen, tapping on the \"Active Carbohydrates\" graph will open up the \"Carbohydrates\" details page that tracks your carb entries for the last 12 hours and how they are absorbed. It can be helpful to review your meals when monitoring settings, troubleshooting past meal entries, and planning future meal entries.</p>"},{"location":"operation/features/ice/#insulin-counteraction-effects","title":"Insulin Counteraction Effects","text":"<p>What are Insulin Counteraction Effects (ICE for short)?</p> <p>Consider the possible effects that counteract insulin (in other words, make glucose levels go up):</p> <ul> <li>food</li> <li>stress</li> <li>illness</li> <li>site failure</li> <li>basal too low</li> <li>someone sat too close to you</li> </ul> <p>As we all know, this list can be long; but on \"normal\" days, food is the primary reason glucose levels go up. By \"normal\", we mean basal rates and settings are close to correct, illness is not an issue, and the site is good. We depend on the Loop dynamic carb absorption and other prediction effects to keep glucose in our desired range.</p> <p>When you have carbs on board, Loop always\u00a0assigns ICE to carbs, not just on a normal day.  This is how Loop looks at it.  Keep in mind that in situations where you have other positive ICE, like insulin resistance, and carbs on board, Loop will attribute all the positive ICE to carbs until all the entered carbs are considered absorbed.  At that point, ICE will start driving RC upward.</p> <p>Insulin Counteraction Effect (ICE) as explained in Dynamic Carbohydrate Aborption is one very important part of carb absorption as well as a foundational part of Loop Predictions.</p>"},{"location":"operation/features/ice/#glucose-change-display","title":"Glucose Change Display","text":"<p>The graph at the top of your \"Carbohydrates\" details page shows the effect Loop expects carbs to have on your glucose (gray bars) compared to the actual effect, or ICE. The units on the graph are mg/dL/5-min or mmol/L/5-min</p> <ul> <li>\u2b1c\ufe0f: The gray bars represent the effects of carbohydrates on your blood glucose that Loop is currently modeling.  </li> <li> <p>\ud83d\udfe9: As a meal is tracked by Loop, you'll see green bars of observed carb absorption (including ICE).</p> <p>How Loop thinks about carbs</p> <p>ICE is just one important component of how Loop thinks about carbs. The other parts are the user-entered data (amount of carbs, and absorption speed).</p> <p>Sometimes Loop falls back to a default absorption model when ICE is less than the minimum absorption rate.</p> <p>In the graphic below, early in the meal timeline, the green bars are below the grey bars. Loop uses the minimum absorption instead of estimating absorption from glucose change. For example, if a pre-bolus was \"perfect\" leading to a constant glucose after a meal, the ideal grey bars will be used by Loop throughout. </p> <p></p> </li> </ul> <p>When not to Use Glucose Change Display to Understand Meal Absorption?</p> <p>If you know that other non-carb effects are affecting your insulin sensitivity significantly (sickness, exercise, etc), all the info about carb absorption should be considered skewed, and not be used for trying to understand meal absorption.</p>"},{"location":"operation/features/ice/#practical-use","title":"Practical use","text":"<p>Some practical use of the ICE screen is provided in the Meal Entries: Review Carb Absorption section.</p> <p>Many ways to successfully use Loop</p> <p>You should choose what works for you.</p> <ul> <li>Some people plan ahead and try to get their carbs entries \"good enough\" to not worry about Loop or glucose after they make the initial entry</li> <li>Some people enter typical values for themselves for a given meal and let Loop handle the rest</li> <li>Some people guess and then carb surf if their glucose goes higher than they like</li> </ul> <p>The rest of this page was written by Katie DiSimone before the non-linear carb model was added to Loop in 2019. You may also want to review her blog post from 2017: Loop: Dynamic Carb Absorption.</p> <p>A lot of the information is still relevant although some of the Loop carb modeling and prediction details have been updated over the years.</p> <p>Let's take a look at an example day using the screenshot below.  </p> <p></p> <p>When you make a food entry originally, Loop will save your entry as you've made it.  On the line below your original entry, Loop will also start tracking your food entry assuming a 1.5 times longer carb absorption time.  This helps Loop track carbs that may actually be absorbing longer than you expected (part of that whole dynamic carb absorption modeling).  Loop will be updating that value of \"observed\" carb absorption time as well as absorbed carbs as your meal goes on.</p> <p>So how can we use this information to make our Looping experience better?  The answer is probably best illustrated using a real-world example.  Chinese food...in fact, this Chinese dish.  General Tso's chicken.  As you can see in the recipe, loads of fast carbs with ingredients like hoisin sauce, brown sugar, and cornstarch.  But also slower carbs like chicken.  Rice can be a difficult one because, for us, it acts fast but also seems to have a long tail.</p> <p></p> <p>It was a busy day and I really didn't want to count carbs.  Ok, even on the slow days I don't want to count carbs.  I just eyeballed the bowl of food and guessed.  As I entered the food in originally, I was still trying to come up with a good guess on the ratio of fast:slow carbs but kid was in a hurry to eat.  My initial guess around 3:30 pm was 70g of carbs at 5 hours absorption (note: it gets edited to 80g in a little bit), we bolused for that and she started to eat.  About 10 minutes later, I decided to add 10g of fast-acting carbs at 1-hour absorption to help with the sauce's speedy carbs.</p> <p></p> <p>Watching what was going on a little later...glucose levels were rising at a decent clip and I had a feeling I really didn't cover things super well...so I edited the original 70g entry, adding 10g and making it 80g instead.  (That's why there is a 2U bolus around 4:20 pm.)  And of course, around 5:40 pm there was a little bit of nibbling on the leftovers as we put them into the fridge.  We gave 10g for that.  Glucose levels climbed a bit more, not surprising given how we were underestimating fast carbs at this point...but still not so bad at 180 peak glucose.  (Anna gave 2 units of correction at the peak because there was dessert coming later that night and she wanted to be ready for it without too much pre-bolus.)</p> <p></p> <p>So, how can I use the \"Glucose Change\"  graph to make this meal better?  I can look at the observed carb information and the observed carb entry Loop has recorded to adjust my insulin bolusing the next time we eat this meal.</p> <p>For example, the biggest weakness I had in this (and suspected it even as I did the initial bolus) was that I underestimated the sauce's fast carbs.  I can see this in the observed carb absorption graph having the early green peaks after the meal, and in the way that the observed carb distribution was more like 7:2 vs my original guess of 8:1 (slow:fast carbs).  Overall, it appears that I guess on overall carb content pretty closely (90g vs. 89g observed).  Next time we have General Tso's chicken, I will likely bolus it as 70g at 5 hours and 20g at 2 hours.</p> <p></p> <p>Check Carbohydrates Page</p> <p>Remember to check your Carbohydrates page at the end of a meal's absorption.  By checking in on the meal's observed behaviors, you'll have a good starting point to fine-tuning any new or unknown carb breakdown.</p> <p>Note</p> <p>Remember this conversation is assuming you have basals fairly well set and are not sick.  If other factors could be significantly causing your glucose levels to swing that Loop doesn't know about (bad sites, illness, or basal rates that need to be adjusted), they may be attributed in part to ICE when they really aren't food-related.  In those cases, address the underlying cause and then use the Carbohydrates page when you've come back to \"normal\".</p>"},{"location":"operation/features/notifications/","title":"Loop Notifications","text":""},{"location":"operation/features/notifications/#loop-notifications","title":"Loop Notifications","text":"<p>Loop provides discrete notifications on the iPhone and Watch which will appear on the (locked) screen and vibrate, depending on your notification settings of Loop.</p>"},{"location":"operation/features/notifications/#loop-alert-unable-to-reach-pump","title":"Loop Alert - Unable to Reach Pump","text":"<p>With Loop 3, there is a new modal alert that halts all Loop activity until pump communication can be restored.</p> <p></p> <p>When you tap on the Learn More button, another screen appears. The only option allowed on the second screen is to give up and discard the pump (or pod) or continue to wait - tap the Back button. The second screen is there if you need to tell Loop you will not be able to restore communication and it should treat the last attempt to send a command as uncertain. Loop will then allow you to add a new pod or new Medtronic pump or switch to a different insulin delivery device. </p> <p>Only do this if bringing your phone and pump into close proximity, waiting a few minutes and then trying the Reset Loop-to-Pump Communications suggestions are not successful.</p> <p>Why Stop all Activity?</p> <p>When communication is interrupted at a critical moment in the communication cycle, Loop cannot provide a reliable calculation for IOB. When that happens a warning screen similar to the graphic above appears on your device. You cannot do anything but wait for Loop to restore communications or give up on that device.</p>"},{"location":"operation/features/notifications/#loop-app-expiration-notification","title":"Loop App Expiration Notification","text":"<p>Profile expiration notification was added with Loop 2.2.5.</p> <p></p> <ul> <li>When fewer than 20 days remain until profile expiration, you'll get a notification when you open the app but no more frequently than every 2 days</li> <li>When fewer than 24 hours remain, you'll get a notification when you open the app, once every hour at most</li> <li>Simply tap on the <code>More Info</code> button of the notification to go directly to the LoopDocs Updating page.</li> </ul>"},{"location":"operation/features/notifications/#free-7-day-loop-app-expiration-notification","title":"Free (7-day) Loop App Expiration Notification","text":"<p>The expiration notification pattern is the same as for the Paid Loop App. You may want to add an Expiration Notification Customization to modify the first appearance and frequency of the notification.</p>"},{"location":"operation/features/notifications/#loop-app-expiration-date","title":"Loop App Expiration Date","text":""},{"location":"operation/features/notifications/#for-loop-32x-and-newer-versions","title":"For Loop 3.2.x and newer versions","text":"<p>The expiration date is found in the App Profile section at the bottom of the Loop Settings screen.</p>"},{"location":"operation/features/notifications/#for-loop-225-through-loop-30","title":"For Loop 2.2.5 through Loop 3.0","text":"<p>If you want to see the expiration date at any time:</p> <ul> <li>Loop 2.2.5 through 2.2.9: tap on Settings, then tap on Issue Report</li> <li>Loop 3.x.x: tap on Settings, scroll down and tap on Support, then tap on Issue Report</li> </ul> <p>The expiration date is near the top of the report (to the right of <code>profileExpiration</code>).  If you don't see that, time to rebuild to get that feature. Once you've viewed the expiration date, tap Settings to back out of the Issue Report display. The time uses UTC, so adjust to your time zone if you procrastinated until the last minute.</p> <p></p>"},{"location":"operation/features/notifications/#omnipod-beeps","title":"Omnipod Beeps","text":"<p>Most pod beep alarms are disabled for a more discrete use of pods than is available with the PDM. Only the following audible acknowledgments or alarms are used. Some can be configured in Omnipod: Notification Settings:</p> <ul> <li>Pod activated acknowledgment when filling the pod with enough insulin when pairing a new Pod.</li> <li>Pod expiration advisory alarm, which you can configure between 48 and 72 hours (3 days)</li> <li>Pod low reservoir alert<ul> <li>Note that the pod may continue delivering after the reservoir reports 0 U</li> <li>The pod will continue until the pod runs out of insulin or 4 U is delivered, which ever comes first</li> <li>Loop will update the actual delivery amounts based on pod reported information</li> </ul> </li> <li>Pod deactivation acknowledgment</li> <li>Pod fault alarm (also called a screamer) when reaching the max life of the Pod: 80 hours (3 days + 8 hours), running out of insulin or a fault/occlusion happens<ul> <li>Screamers are silenced using the Replace Pod row on the pod settings page</li> <li>The one exception is if communications with the pod is lost and cannot be restored - in that case, you will be offered the chance to discard the pod from Loop but will still want to Silence the Pod</li> </ul> </li> </ul>"},{"location":"operation/features/notifications/#notification-settings-for-loop","title":"Notification settings for Loop","text":"<p>You can customize the way notifications of Loop are behaving in the Settings App of the iPhone:</p> <p></p> <p>Loop 3 Notifications Settings:</p> <p></p> <p>Mark Loop 3 notifications as time-sensitive and ask for immediate delivery:</p> <ul> <li>tick the <code>Immediate Delivery</code> so that notifications are delivered right away</li> <li>enable the <code>TimeSensistive Notifications</code> checkbox </li> </ul> <p>Notification Delivery</p> <p>You will see the <code>Notification Delivery</code> section only if you previously toggled on <code>Settings / Notifications / Scheduled Summary</code> in order to receive a summary of notifications at a certain time of the day. If this is not what you want, simply ignore it.</p> <p>Announce Notifications</p> <p>The <code>Announce Notifications</code> section is displayed only if you previously turned on the toggle <code>Settings / Notifications / Announce Notifications</code>. Use it if you want Siri to read Loop's notifications out loud on CarPlay, and AirPods...</p> <p>Make sure Loop notifications are allowed in your Focus mode. Edit the focus mode to:</p> <ul> <li>add <code>Loop</code> to the list of apps with allowed notifications</li> <li>enable the <code>Time Sensitive Notifications</code> toggle button</li> </ul>"},{"location":"operation/features/notifications/#taking-a-loop-break","title":"Taking a Loop Break","text":"<p>If you want to take a break from using Loop but want to keep the app on your phone, you'll want to disable Loop Notifications while you are not using Loop. Otherwise, the Loop Failure messages will drive you crazy. </p> <p>When you are ready to resume using Loop, the main screen will remind you to turn those notifications back on.</p> <p>Another time you might want to disable notifications is if you are testing with a simulated pump. When the app is closed or phone is locked, the simulated pump is inactive and you would get the Loop Failure notifications.</p>"},{"location":"operation/features/notifications/#loop-failure","title":"Loop Failure","text":"<p>At 20, 40, 60, and 120 minutes, there is a Loop Failure notification. This mostly happens when the connection is lost for a longer period of time between the CGM or the Rileylink and Loop.</p> <p></p>"},{"location":"operation/features/notifications/#bolus-failure","title":"Bolus Failure","text":"<p>If Loop detects that a bolus was not able to be delivered, it will provide a notification.  Bolus failures are usually due to stale pump data.  Try fetching recent history from the RileyLink menu to update pump data.  Loop will also notify of partial bolus deliveries.</p> <p></p>"},{"location":"operation/features/notifications/#low-reservoir","title":"Low Reservoir","text":"<p>Medtronic At 20% and 10% remaining reservoir volume, there is a Low Reservoir notification.</p> <p>Omnipod Select your desired notification level for low reservoir Omnipod: Notification Settings </p> <p></p>"},{"location":"operation/features/notifications/#empty-reservoir","title":"Empty Reservoir","text":"<ul> <li>Loop 2 will notify when the reservoir is empty.</li> </ul> <ul> <li>Loop 3 reports No Insulin on the Heads-Up-Display.</li> </ul> <p>Omnipod After the reservoir reports 0 U, the pod attempts to deliver insulin when requested.</p> <ul> <li>After 4 U are delivered, the pod alarms and must be changed</li> <li>If during the attempt to deliver the 4 U (below zero), the pod runs out of insulin, the pod alarms and must be changed</li> <li>In both cases, the pod reports it is out-of-insulin</li> </ul>"},{"location":"operation/features/notifications/#low-battery-medtronic","title":"Low Battery (Medtronic)","text":"<p>Loop will notify when battery levels have approximately 8-10 hours of battery life remaining.</p>"},{"location":"operation/features/notifications/#remote-notifications","title":"Remote Notifications","text":"<p>Loop does not have a remote notification to other devices.  If you are a remotely monitoring parent, you will want to read here about setting up pushover alerts using your Nightscout site if you want proactive notifications of looping related information.</p>"},{"location":"operation/features/notifications/#loop-follow","title":"Loop Follow","text":"<p>Many people use additional apps to assist in following a loved one or to support a loved one who needs help waking up to alarms. One of the more popular options is Loop Follow, written by a parent of a Looper. There are several features to assist in remote monitoring with a variety of options for the source of data.</p> <p></p> <p>For more information, please read the Loop Follow documentation. You can build Loop Follow using the same Build Select Script you used to build the Loop app or using the GitHub Browser Build Method.</p>"},{"location":"operation/features/overrides/","title":"Overrides","text":""},{"location":"operation/features/overrides/#new-loopers-please-read","title":"New Loopers - Please Read","text":"<p>Please do not use this feature until you understand it.</p> <p>Many new Loopers interpret Loop Overrides as a one-for-one replacement for manual pump options where a temporary basal was applied for a particular activity. Although Loop Overrides can help in a situation where you previously used a temporary basal rate, overrides are more powerful.</p> <p>Changing Overall Insulin Needs is NOT like Manual Pump Temp Basal Change</p> <p>Loop Overrides are not the same as adjusting temporary basal on a manual pump. The easiest way to restrict basal rates with an automated system is to raise your correction target temporarily. In some cases, you may need to also adjust insulin needs, but begin just by changing that target.</p> <p>When you modify insulin needs, you are affecting basal rates, carb ratios, and insulin sensitivity factors (ISF) for the duration of the override.</p> <p>A common mistake is to think selecting an override with 10% Overall Insulin Needs is like selecting 10% basal rate with a manual pump. With Loop, that selection modifies all your normal settings by a factor of 10!</p>"},{"location":"operation/features/overrides/#manual-temp-basal","title":"Manual Temp Basal","text":"<p>Sometimes you need to set a manual temp basal and you need it to keep working whether you are near your gear. There's a function for that with Loop 3.</p> <ul> <li>Pods: use the Manual Temp Basal setting</li> <li>Medtronic: select Open Loop and use your Medtronic pump temp basal feature</li> </ul>"},{"location":"operation/features/overrides/#how-overrides-work","title":"How Overrides Work","text":"<p>Overrides let Loop know selected settings are modified for the duration of the override. The override can change either the correction range or the overall insulin needs or both. When you set an override on insulin needs, the override adjusts basal schedule, ISF, and CR together. Examples where this can be helpful include hormone cycles, steroid medications, and/or exercise.</p> <p>Override presets are (1) optional and (2) can be configured within Loop's workout icon (the little blue heart icon in the Loop toolbar). Once override presets are created, they can be turned on/off by using the workout icon as well.</p> <p></p>"},{"location":"operation/features/overrides/#features-of-an-override","title":"Features of an Override","text":"<p>Overrides allow you to specify:</p> <ul> <li>an overall insulin needs adjustment</li> <li>a correction target range</li> <li>a duration in 15-minute increments (or indefinite)</li> <li>a start time</li> </ul> <p>The override only works when your Loop gear is with you. For example, if Loop sets a zero temporary basal rate based on an override and then you leave your gear behind; at the end of half an hour, your pump will resume scheduled insulin delivery.</p> <p></p> <p>The target range replaces the correction range target for the duration of the override.</p> <ul> <li>If the target range is left blank, your scheduled correction range continues to be in effect</li> <li>If the target range is specified, that range is used instead of your scheduled correction range</li> </ul> <p>The overall insulin needs is applied to your basal rates, insulin sensitivities and carb ratios for the duration of the override.</p> <ul> <li>If the insulin needs is left at 100%, no change is made to basal rates, ISF or CR</li> <li>If you set an overall insulin needs adjustment below 100%, you are telling Loop you are more insulin sensitive and need a lighter touch.<ul> <li>Loop uses basal rates decreased from scheduled rates</li> <li>Loop uses ISF and CR numbers increased from settings</li> </ul> </li> <li>If you set an overall insulin needs adjustment above 100%, you are telling Loop you are less insulin sensitive and need a heavier touch.<ul> <li>Loop uses basal rates increased from scheduled rates</li> <li>Loop uses ISF and CR numbers decreased from settings</li> </ul> </li> <li>While the override is active, the modified basal rates, ISF and CR are applied for every automated or manual insulin delivery and affect the calculation for future IOB while the override is active<ul> <li>Those ISF and CR numbers are associated with the carbs and/or insulin delivered during the override</li> <li>As the carbs and/or insulin \"ages\" during their absorption-time/duration-of-action, Loop maintains the sensitivity values associated with those during-the-override entries</li> </ul> </li> </ul> <p>For an override to be accepted:</p> <ul> <li>You must change either insulin needs or target range</li> <li>A named override can be saved and used again<ul> <li>To save the override, you must supply a name and an icon</li> <li>Named overrides can be set to occur at a scheduled time</li> </ul> </li> <li>A Custom override is used only once</li> <li>Any override can be edited while it is active</li> </ul>"},{"location":"operation/features/overrides/#future-override","title":"Future Override","text":"<p>When an override is scheduled to start in the future, it can have an effect earlier than you might think. The closed loop automated insulin increase or restriction at each cycle is calculated to map your predicted glucose to the desired target range over the duration of insulin action (6 hours). If the future override has a higher target, that higher target is factored into the Loop calculations.</p> <p>Example:</p> <ul> <li>At 10 pm, you set an override with a higher correction range target to start the following morning at 6 am</li> <li>At approximately midnight, Loop will begin taking that future target into account in the dosing for each Loop cycle</li> <li>By the time you awaken at 6 am, Loop should have your glucose in that higher target range</li> <li>The insulin needs modification, if any, associated with that override do not affect the Loop prediction until the scheduled start time for the override</li> </ul>"},{"location":"operation/features/overrides/#how-overrides-do-not-work","title":"How Overrides Do NOT Work","text":"<p>Overrides will work while you are Looping. Sounds obvious, right? But, the thing to remember is that the adjustments (multipliers) that overrides make are not saved back to your Medtronic pump or Omnipod. They only exist in the Loop app.</p> <p>If you walk away from iPhone and/or RileyLink...</p> <p>If you stop Looping (i.e., walk away from your gear or your glucose reading is stale), your existing temp basal will complete the remainder of whatever is left of its original 30 minutes and you will return to scheduled basal rates in your Therapy Settings. Your adjusted needs as set-up in any override will not continue if your Loop is not running properly. So you cannot set a 50% override and then hop in the ocean for a 2-mile swim without your iPhone and RileyLink and expect decreased basals of 50%. Just be aware that in situations where you need prolonged lower basals while away from Looping gear, you will need to edit your scheduled basals or use a Manual Temp Basal setting.</p>"},{"location":"operation/features/overrides/#avoid-extreme-insulin-needs-setting","title":"Avoid Extreme Insulin Needs Setting","text":"<p>There have been users who select a 10% overall insulin need. This is NOT the same as choosing a 10% temporary basal with the PDM. This changes your basal rates, ISF and CR by a factor of 10!</p> <p>Scenario for 10% Insulin Need</p> <ul> <li>User really wants insulin reduced and chooses 10% insulin need</li> <li>User doesn't think about the 10% and enters carbs while the override is active<ul> <li>Loop suggests a tiny bolus and the user accepts<ul> <li>User goes high because CR was 10 times higher than Therapy Setting Value</li> <li>User stays high because ISF is also 10 times higher than Therapy Setting Value<ul> <li>Automated corrections are 10% of typical corrections</li> <li>Basal supplied is 10% of the Therapy Setting value</li> </ul> </li> </ul> </li> <li>OR</li> <li>Loop suggests a tiny bolus and the user manually boluses the amount they know the food needs<ul> <li>User glucose may be normal BUT<ul> <li>Loop predicts a negative eventual glucose (prediction only - this will never happen)</li> <li>Loop immediately withholds all basal until prediction normalizes</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Instead of selecting 10%, raise your correction range with a moderate needs adjustment. Loop tends to suspend insulin delivery via temp basals with the next CGM reading.</p> <p>With Loop 3, there is now a warning message in the meal entry screen when an override is active with an overall insulin needs value other than 100%. The user can decide whether to proceed with the meal entry with the override active.</p> <p>If you feel the need to immediately halt insulin delivery, consider a Manual Temp Basal or suspend command to the pump. If you choose to suspend, be sure to pay attention to the reminder to resume insulin delivery later.</p> <p>Extreme Athletes</p> <p>There are athletes who do need those extreme overall insulin need changes and know how to use them appropriately. This typically involves extreme or prolonged exercise.</p>"},{"location":"operation/features/overrides/#create-an-override-preset","title":"Create an Override Preset","text":"<p>To create an override preset, tap on the workout icon. Then click the + sign in the upper right corner to start a new preset entry.</p> <p>You must select an emoji, name the preset and modify either the overall insulin needs or target range or both to save your new preset</p> <ul> <li>Pick an emoji</li> <li>Enter a name for the preset</li> <li>Optional: change insulin needs<ul> <li>Default is 100% - no change to your settings</li> <li>You may use the picker wheel or Select 1% Insulin Needs increments</li> </ul> </li> <li>Optional: enter a target range<ul> <li>If you do not enter a target range, Loop will use your existing scheduled target range</li> </ul> </li> <li>Select whether you want the override to run indefinitely or for a finite time</li> </ul> <p>When you've made your selections, save the preset using the \"Save\" button in the upper right corner.</p>"},{"location":"operation/features/overrides/#select-1-insulin-needs","title":"Select 1% Insulin Needs","text":"<p>Available with Loop 3.</p> <p>The selectable Overall Insulin Needs values are not limited by the default picker values of 10%.</p> <ul> <li>When adjusting Needs, press and hold the \"orange\" bar, highlighted by the red rectangle in the graphic below</li> <li>Move your finger left and right to adjust by 1%</li> <li>Release to select the desired level</li> </ul> <p></p>"},{"location":"operation/features/overrides/#activate-an-override","title":"Activate an Override","text":"<p>To enact your override preset, tap on the workout icon toolbar and select an override from your list of saved presets, create a new one or use the custom override for one-time use.</p> <p></p> <p>The heart will be highlighted in a blue square while active and the HUD Status Row will indicate the active override name. The Glucose Chart will show a darker blue bar indicating the active target range and duration.</p> <p></p>"},{"location":"operation/features/overrides/#schedule-an-override","title":"Schedule an Override","text":"<p>You can set up a future start time when selecting a saved override by tapping on the calendar icon to the right of the override. Adjust the \"Start time\" row. Tap the \"Enable\" button in the top right corner.</p> <p>A Future Override can be very helpful, for example, to set an exercise override the night before your workout. You'll wake up with less insulin on board and at your desired exercise targets.</p>"},{"location":"operation/features/overrides/#deactivating-an-override","title":"Deactivating an Override","text":"<p>Tap the heart icon to turn off your override at any time. This happens without confirmation, so be sure to lock your phone when you have an override running to avoid accidentally turning it off.</p> <p>Override presets with a finite duration will automatically deactivate when the duration is over.</p>"},{"location":"operation/features/overrides/#apple-watch","title":"Apple Watch","text":"<p>Saved overrides can be turned on and off by tapping on the blue heart icon on your watch.</p>"},{"location":"operation/features/overrides/#editing-an-active-override","title":"Editing an Active Override","text":"<p>Tap on the active override in the HUD Status Row with the phone in portrait orientation. This brings up a screen to edit the override currently running. This only affects this override during the current period. It is not saved to that named override. You can extend the duration or modify the needs value or target value based on a temporary situation.</p> <p>When you edit Overall Insulin Needs, then the Loop app recalculates some effects, such as IOB, over the duration of the override and if you also quit and restart the app, it recalculates all effects. See Recalculate When Needs Change for more information.</p> <p>Higher Priority Messages</p> <p>If the HUD Status Row is displaying a higher priority message, you must wait for that message to complete before you'll be able to edit an active override. If you want to edit an active override, you can choose to cancel an active bolus and edit the override immediately.  The edited override will then be in effect for the next Loop cycle or manual recommendation.</p> <p>HUD Status Row messages with higher priority:</p> <ul> <li>Bolus starting, in-progress or canceling</li> <li>Pump suspended</li> <li>No recent glucose</li> </ul>"},{"location":"operation/features/overrides/#recalculate-when-needs-change","title":"Recalculate When Needs Change","text":"<p>Here's a cool tip for more advanced users. Suppose you have an override running but you realize your overall insulin needs percent wasn't quite right. You can edit the override and force the Loop app to recalculate the effect from the beginning of the override. A change in IOB may show up immediately when you edit insulin needs in the override. If you also quit and restart the app, this forces a recalculation from the beginning of the override.</p> <p>This is demonstrated in the following set of graphics contributed by a user - note the change in the ICE graph for carbohydrates absorbed - this requires you to quit and restart the Loop app. These examples use extreme modifications to illustrate what happens - typically the modification of insulin needs would be much smaller.</p> <p>The first graphic is where the Overall Insulin need value was dramatically decreased (user much more sensitive).</p> <p></p> <p>The second graphic is where the Overall Insulin need value was dramatically increased (user much less sensitive).</p> <p></p> <p>Example</p> <p>I set my biking override to be longer than my expected ride. When I return, I edit the insulin needs from 65% (needed while I'm actively biking) back to 100%. My negative IOB typically doubles at that change. I then disable the override and take the full negative IOB as a bolus. This helps prevents a post-exercise high that often follows my ride.</p> <p>I do not enter any carbs while biking and almost always ride first thing in the morning while fasting, so i just edit the override. If no carbohydrates are active, there is not need to quit and restart the app.</p>"},{"location":"operation/features/overrides/#remote-overrides","title":"Remote Overrides","text":"<p>You can also use your Nightscout site to activate/deactivate your Loop's override presets. To accomplish this, you will need to do some legwork as outlined on this page for how to set up Remote Overrides in Nightscout and you will need to be using a paid Apple developer account. Remote overrides require Apple Push Notifications service, and that is only available on paid accounts.</p>"},{"location":"operation/features/premeal/","title":"Pre-Meal Target","text":""},{"location":"operation/features/premeal/#pre-meal-range","title":"Pre-Meal Range","text":"<p>The Loop toolbar's second icon from the left is a small clock with a knife and fork on the sides. This is the pre-meal tool.  The tool will be colored grey until you define a glucose range in Loop settings.  Once a pre-meal range is available in Loop Settings, the icon will be colored green and available for use. The background coloring of the Pre-Meal Range icon will turn green when active and there will be a dark blue line on the glucose chart indicating the pre-meal range.</p> <p>The pre-meal range can be used as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes. It's not designed to replace a traditional pre-bolus, but rather as a more gentle way to build up some pre-meal insulin activity.</p> <p>If your normal target is 100-110 mg/dL and pre-meal range is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually canceled... whichever comes first. Setting an override will also cancel pre-meal range.</p> <p>Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time.</p> <p>Other Uses</p> <p>Some people prefer to use this as an easy way to raise the correction range for an hour.</p>"},{"location":"operation/features/premeal/#how-to-adjust-pre-meal-range","title":"How to Adjust Pre-Meal Range","text":"<p>Loop 3:</p> <ul> <li>In Loop Settings, select Therapy Settings and then tap on Pre-Meal Range to adjust</li> <li>If you prefer not to have that icon active on the Toolbar, you can tap Delete in the upper right corner of the adjustment screen</li> </ul> <p>Loop 2.2.x:</p> <ul> <li>In Loop settings, find the Correction Range section.  The Correction Range sections stores all targets for Loop over the hours of the day, including Pre-Meal.</li> </ul>"},{"location":"operation/features/premeal/#assessing-the-impact-of-pre-meal","title":"Assessing the impact of pre-meal","text":"<p>The intent of the pre-meal icon on the toolbar is to provide an eating-soon mode in Loop. Do not set pre-meal limits to any hypoglycemic ranges that may require treatment.</p> <p>To mitigate the impact of unintentional pre-meal activation:</p> <ul> <li>If you are running Loop 3, you can delete the setting to deactivate the icon</li> <li>If you are running Loop 2.2.x, you can set the pre-meal range to the same value as your usual correction range</li> </ul> <p>Custom Pre-Meal Overrides</p> <p>Some loopers set up a custom override to use instead of the pre-meal icon.  This allows enabling the override remotely with Nightscout, permits specifying a custom duration, and will keep the override enabled after carbs are announced.</p>"},{"location":"operation/features/watch/","title":"Apple Watch","text":""},{"location":"operation/features/watch/#loop-with-apple-watch","title":"Loop with Apple Watch","text":"<p>The Loop user can directly enter carbs and boluses and turn on or off premeal or override settings from the watch, without needing to pull their iPhone out. There are some caveats when iPhone is not within Bluetooth range - the action requested by the watch will not be enacted until iPhone reconnects.</p> <p></p> <p>There are two screens in the Loop watch app, shown in the bottom half of the graphic above. By swiping left or right, the other screen is displayed. The eventual (predicted) glucose feature, shown on both screens in the graphic can be turned off as a feature in Loop 3, but requires the user to rebuild. It is on by default.</p> <p>The screen on the left side of the graphic shows Loop status, current glucose, trend arrow and eventual glucose with icons to enable carb entry, bolus entry, pre-meal and override selection. If necessary, use the crown (or swipe up and down) to see the full display.</p>"},{"location":"operation/features/watch/#watch-carb-bolus-overview","title":"Watch Carb / Bolus Overview","text":"<p>After tapping on the carb or bolus icons, you can adjust the entries using the crown to dial in more/less. See Meal Entry on Watch for more details.</p> <ul> <li>The watch carb entry screen allows you to choose the amount and absorption time, using the standard icons, and adjust the time the carbs were or are planned to be consumed. After tapping continue on the carb screen, the meal bolus screen is displayed - carbs are only saved after selecting Save or Save &amp; Bolus on the meal bolus screen.</li> <li>The watch bolus screen displays the recommended bolus. If you want to decrease/increase from the recommended amount, use the digital crown or tap on +/- icons to modify.</li> <li>Once the bolus button is tapped, the bolus command is only delivered after using the digital crown to Spin for Watch Bolus to align the two triangles.</li> <li>If you tap Save &amp; Bolus on the bolus screen when entered from the carb screen AND then fail to turn the digital crown to confirm the bolus or hit Cancel, that means the bolus was not delivered and the carbs might not saved - but check to be sure.</li> </ul>"},{"location":"operation/features/watch/#watch-graph-and-status","title":"Watch Graph and Status","text":"<p>If you swipe the Apple Watch Loop screen from right-to-left, a second screen, as displayed on the right side of the graphic above, is available.  This second screen displays a graph of recent glucose and predicted glucose data.  The display can be scrolled with a finger swipe or turn of the crown to display Active Insulin, Active Carbs, Net Basal Rate (with respect to scheduled rate) and in some cases Reservoir Units.  (A recently changed pod may show the reservoir level from the prior pod - just ignore that. It goes away within 24 hours.)</p> <ul> <li>Check the Recent Carbs List on Watch by tapping the Active Carbs row:<ul> <li>If a desired carb entry added by the watch is not present on the watch display, you are safe to try again</li> <li>If the carb entry is present on the watch display, do not enter it again</li> <li>If your phone is not in range of your watch, carbs entered on the watch will be added to the phone carb storage when you reconnect</li> </ul> </li> </ul>"},{"location":"operation/features/watch/#watch-graph-windows","title":"Watch Graph Windows","text":"<p>The windows for history and prediction available on the watch can be modified to suit your preference. The windows can be modified from 2 hours to 12 hours.</p> <ul> <li>Double tap on the graph to increase the windows</li> <li>Single tap on the graph to decrease the windows</li> </ul> <p>The selection for the window remains as selected until you change it.</p>"},{"location":"operation/features/watch/#loop-complication","title":"Loop Complication","text":"<p>A loop complication exists to show glucose on the watch face but the update rate is limited by Apple. If you have a Loop complication installed in the watch face, you can simply tap the complication to open the Loop watch app.</p> <p>In some positions and with some watch faces, the complication includes a graph.</p> <ul> <li>The windows for the Loop Complication history and prediction are fixed (not modified when you change the Watch Graph Windows)</li> </ul>"},{"location":"operation/features/watch/#loop-watch-features","title":"Loop Watch Features","text":""},{"location":"operation/features/watch/#spin-for-watch-bolus","title":"Spin for Watch Bolus","text":"<p>To prevent an accidental bolus from your Watch app, don't let your kids hold your watch. Just kidding, we've added an even better solution. After requesting a bolus or accepting a meal entry recommended bolus, the watch face displays a graphic like the one below. As you spin the digital crown, the two triangles will begin to merge. Once they merge, the bolus is confirmed through a little haptic and a white checkmark will appear on the watch screen.</p> <p></p>"},{"location":"operation/features/watch/#bolus-cancel-or-spin-fail","title":"Bolus Cancel or Spin Fail","text":"<p>At this point if you hit cancel, or fail to merge the two triangles, the bolus will not be delivered. You will feel a haptic and may hear a notification when Loop stops waiting. The watch display restores to the nominal screen.</p>"},{"location":"operation/features/watch/#meal-entry-on-watch","title":"Meal Entry on Watch","text":"<p>Tap on the Meal entry icon on the watch to view the watch carb entry screen as show in the graphic below.</p> <p></p> <p>The watch carb entry screen allows you to choose the amount and absorption time, using the standard icons, and adjust the time the carbs were or are planned to be consumed.</p> <ul> <li>While the Amount is highlighted, the + and - buttons add or subtract 5 g of carbs from the amount, or you can use the digital crown to adjust the amount</li> <li>Tap on the time and the + and - buttons add or subtract 15 minutes from the time when the meal was or will be consumed, or you can use the digital crown to adjust the time</li> <li>The default absorption time is 3 hours (taco), but the fast (30 minute, lollipop) or slow (5 hour, pizza) can be selected</li> </ul> <p>After tapping the Continue button on the carb screen, the meal bolus screen is displayed - carbs are only saved after selecting Save or Save &amp; Bolus on the meal bolus screen.</p>"},{"location":"operation/features/watch/#carb-entry-no-bolus","title":"Carb Entry, No Bolus","text":"<p>If you enter carbs from the watch and no bolus is recommended or selected, you will see a screen like the graphic below where the Save button is offered. You can choose to Save the carbs, or cancel the entry.</p> <p>If you choose to modify the zero bolus recommendation, the display changes to the option shown in the graphic in the following section.</p> <p></p> <p>If your phone is in communication with your watch, then when you hit the Save button, the carbs will be immediately saved to your phone record as well as your watch.</p> <p>If your phone is not in range of your watch, then when they are brought into communication later, the carbs will appear on the phone.</p>"},{"location":"operation/features/watch/#carb-entry-with-bolus","title":"Carb Entry, With Bolus","text":"<p>If you enter carbs from the watch and a bolus is recommended or selected, you will see a screen like the graphic below where the Save &amp; Bolus button is offered.</p> <p></p> <p>You may choose to leave that bolus at the recommended level, tap on the + or - buttons to add or subtract 0.5 U per tap or use the digital crown to adjust the value. Should the value go to zero, then the Save button appears as shown in the graphic in the previous section; but remember, Loop will begin adjusting automatic insulin delivery based on those newly entered carbs, even if you choose not to bolus.</p> <ul> <li> <p>If your phone is in communication with your watch</p> <ul> <li>When you hit the Save &amp; Bolus button, the carbs will be immediately saved to your phone record as well as your watch</li> <li>Your pump will be commanded to deliver the indicated dose (from your phone)<ul> <li>If the pump communication succeeds, the delivery begins</li> <li>If the pump communication fails, the bolus not delivered message will apear on the phone</li> <li>You might want to have confirmation beeps enabled so you can hear if the pump bolus starts</li> </ul> </li> </ul> </li> <li> <p>If your phone is not in range of your watch</p> <ul> <li>The carbs are saved in the watch carb storage</li> <li>When the watch reconnects with the phone, the carbs are added to the phone carb storage</li> <li>The bolus not delivered message will appear on the phone</li> </ul> </li> </ul>"},{"location":"operation/features/watch/#recent-carbs-list-on-watch","title":"Recent Carbs List on Watch","text":"<p>You can review the recent carb entries on the Apple Watch. Simply swipe left to see the blood glucose graph screen on the watch. Scroll down with your finger or the digital crown to the Active Carbs row beneath the graph, and tap that row. You can see the list of recent carb entries.</p> <p>If you enter carbs on your watch while not connected to the phone, they will appear on this display and, when the phone reconnects, will be transferred to the phone.</p> <p>Be Cautious - Avoid Double Entry</p> <p>If the phone and watch are not connected, someone could add entries to the phone manually or via remote commanding and the watch will not know about them. So be careful and check the phone carb record when the phone and watch reconnect. This is especially important if more than one caregiver is involved.</p>"},{"location":"operation/features/watch/#eventual-glucose-on-watch","title":"Eventual Glucose on Watch","text":"<p>One feature on the Watch app that can be turned on and off with Loop 3 is the eventual glucose display on the watch. That display is shown on the graphic above with current glucose on left, trend arrow beside it and eventual (from prediction) glucose on the right.</p> <p>If this is a feature you want turned off, please follow the directions on the Code Customization page (found under the Version tab): Build Time Features.</p>"},{"location":"operation/features/watch/#adding-a-watch-to-existing-loop","title":"Adding a Watch to Existing Loop","text":"<p>If you add an Apple Watch after building Loop using Xcode on a computer, you will need to pair your watch to your iPhone and then rebuild Loop to enable the Loop watch app to show up as an available watch app.</p> <p>If you use the new, Loop 3 only, Build Loop using GitHub Actions process that enables building without needing a Mac, the watch app should work so long as you have the watch paired to your phone when you install from TestFlight.</p>"},{"location":"operation/features/watch/#watch-hardware-and-os-requirements","title":"Watch Hardware and OS Requirements","text":"<p>Loop 2.2.9 and FreeAPS is currently supported with all released versions of the Apple Watch and Apple watchOS 4.1 and newer.</p> <p>Loop 3 requires newer versions of the watch and requires watchOS 8 as a minimum.</p> <p>The compatibility list below is copied from Apple. Note that some version of iOS require specific versions of watchOS. That level of detail is not captured here. Please review LoopDocs: Wikipedia Chart for Apple Versions.</p>"},{"location":"operation/features/watch/#watchos-8-compatibility","title":"watchOS 8 Compatibility:","text":"<p>watchOS 8 requires iPhone 6s or later with iOS 15 or later and one of the following Apple Watch models:</p> <ul> <li>Apple Watch Series 3.</li> <li>Apple Watch Series 4.</li> <li>Apple Watch Series 5.</li> <li>Apple Watch SE.</li> <li>Apple Watch Series 6.</li> <li>Apple Watch Series 7.</li> <li>Not all features are available on all devices.</li> </ul>"},{"location":"operation/features/watch/#watchos-9-compatibility","title":"watchOS 9 Compatibility:","text":"<p>watchOS 9 requires iPhone 8 or later with iOS 16 or later and one of the following Apple Watch models:</p> <ul> <li>Apple Watch Series 5.</li> <li>Apple Watch SE.</li> <li>Apple Watch Series 6.</li> <li>Apple Watch Series 7.</li> <li>Apple Watch Series 8.</li> <li>Apple Watch Ultra.</li> </ul>"},{"location":"operation/features/widget/","title":"iPhone Widget","text":""},{"location":"operation/features/widget/#widgets","title":"Widgets","text":"<p>The Loop app uses the new-style widgets. With the advent of iOS 16 and 17, you can add widgets that show up on the lock screen without need to swipe to view. But only some widgets can do this and there is very limited space for those lock screen widgets. You can add more widgets to the Today View, where you do need to swipe right from the Home View or Lock Screen.</p> <p>The released code, <code>main</code> branch, version 3.2.x does not work with these widgets. The fix is in the <code>dev</code> branch and will be part of the version 3.4 release.</p> <p>The example graphic below shows the Loop widget using the <code>dev</code> branch on the top row, with the LoopCaregiver widget next to a Scriptable widget that is fed from my Nightscout site on the middle row. Below that is the Dexcom G7 widget next to a weather widget. This Today View requires a swipe right from the Lock Screen or the Home screen. The scriptable widget is also on my lock screen. The update rate for these widgets is similar to watch complications, some will grey out when stale. If they are greyed out, tap on them to go to the app directly.</p> <p>The Scriptable widget includes the time of the last update, 11:25 am, so is 11 minutes old at the current time of 11:36 am.</p> <p></p> <p>New to Loop or never added a widget before</p> <ul> <li>There is a difference in behavior between \"new-style\" Widgets and \"old-style\" Widgets<ul> <li>New-Style Widgets: always appear at the top of your Today View, can be changed by long-pressing on one and then dragging around, or can be added with the + button in edit mode</li> <li>Old-Style Widgets used a different method to install and should be removed from your screen</li> </ul> </li> <li>Make sure your phone is unlocked, then swipe from the Home Screen to get to Today View<ul> <li>You can't edit the screen if you start from a locked phone</li> </ul> </li> <li>Start the Edit mode (where all of the icons are shaking), either by long-pressing on one of the new-style widgets, or by scrolling all the way to the bottom of Today View and pressing Edit.</li> <li>Scroll all the way to the bottom again to find and select the button labeled \"Customize\"</li> <li>Now you can configure (add, remove, rearrange) the \"old-style\" widgets for your screen.</li> <li>The Loop widget should appear in the list available there.</li> </ul>"},{"location":"operation/features/widget/#old-style-loop-widget","title":"Old-Style Loop Widget","text":"<p>Leave this here so you can see if you have an old-style widget.</p> <p>With newer versions of iOS, the old-style widgets cannot be moved to the top of the screen. Please convert to the new-style widgets.</p> <p>With older versions of iOS, the widget is available in the Today view of your iPhone.  Swipe right on your iPhone home screen and your widgets will be available.  The Loop widget may be at the bottom of your widget list.  Scroll down to the bottom of the screen and press the <code>edit</code> button.  That opens an \"Add Widgets\" screen.  If you hold and drag the three horizontal lines on the Loop widget row, you can drag it up to the order you'd like it to appear on your widget list.</p> <p></p> <p></p>"},{"location":"operation/loop/close-loop/","title":"Closed Loop","text":""},{"location":"operation/loop/close-loop/#closed-loop","title":"Closed-Loop","text":"<p>After you learn what you need from open-loop, this page provides suggestions to smooth the transition to closed loop.</p>"},{"location":"operation/loop/close-loop/#timing","title":"Timing","text":"<p>Consider transitioning in steps.  Some loopers start closed-loop when there are fewer distractions, possibly on weekends. It can be easier to transition at a time that does not involve food, possibly overnight.</p>"},{"location":"operation/loop/close-loop/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>When starting closed-loop, it is important to be conservative. Start with the \"Temp Basal Only\" dosing strategy and limit the maximum basal rate.  If your Meal Entries or Therapy Settings (basal rates, CR, ISF) are incorrect, this approach limits the risk of getting too much insulin. Typically, experienced loopers set their max closed-loop basal rate at no more than 3-4 times their average basal rate.  Wait until you are comfortable with the slower corrections in \"Temp Basal Only\" before transitioning to \"Automatic Bolus\".</p> <p>Temp Basal Only vs Automatic Bolus</p> <p>Both Dosing Strategy methods update the prediction with each CGM or glucose reading, typically every 5 minutes, and use the updated prediction to generate a recommended bolus or recommended dosing restriction.</p> <ul> <li>\"Temp Basal Only\" provides no more than 17% (per 5 minute interval) of that recommended bolus using temporary basal</li> <li>\"Automatic Bolus\" mode provides 40% of that recommended bolus as an immediate bolus</li> <li>When Loop recommends restricting insulin, both methods use temporary basals that are less than the scheduled basal, often commanding a temp basal of 0 U/hr</li> </ul>"},{"location":"operation/loop/close-loop/#glucose-correction-range","title":"Glucose Correction Range","text":"<p>If your basal, ISF, or carb ratios are not correct, Loop may give you more insulin than you need to reach the correction you selected. Setting the correction range slightly higher at first helps prevent unexpected low glucose as you adjust your settings.</p>"},{"location":"operation/loop/close-loop/#watch-the-iob","title":"Watch the IOB","text":"<p>Watch whether Loop accumulates positive or negative IOB while holding your glucose steady when no food is present.  If you consistently have positive or negative IOB, review whether to adjust your basal rate or ISF.</p> <p>Expert Tip</p> <p>In the absence of food, glucose trends should flatten out when positive or negative IOB trends to zero.</p> <ul> <li>If glucose drops below the correction range and continues to drop while IOB goes negative, basal rates may be too high</li> <li>If glucose remains above the correction range while IOB remains positive, basal rates may be too low</li> </ul> <p>The ISF is also important, but basal should be evaluated first.</p>"},{"location":"operation/loop/close-loop/#meals","title":"Meals","text":"<p>Start with meals that you know well. If Loop suggests less or more insulin than expected as a bolus before the meal - consider why this may be true.</p> <ul> <li>If glucose is trending down, Loop may be trying to prevent a low glucose event</li> <li>If glucose is trending up, Loop may be trying to add a correction to the meal dose</li> <li>In any case:<ul> <li>You can adjust the absorption time and carb amount to see if that modifies the suggested bolus</li> <li>You can override the Loop suggestion</li> <li>Do not be surprised if Loop immediately suspends basal</li> <li>Loop needs to see glucose start to rise before deciding you need more insulin after the initial meal bolus recommendation</li> <li>Loop will not automatically provide more insulin until your glucose is above the lower range of the correction range (but will recommend a manual bolus)</li> </ul> </li> </ul> <p>This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.</p>"},{"location":"operation/loop/close-loop/#automated-dosing","title":"Automated Dosing","text":"<p>Loop calculates a predicted glucose curve based on your programmed settings for carb ratio (CR) and insulin sensitivity factor (ISF), using your glucose, insulin and carb history.</p> <p>Two scenarios are given below to help illustrate the closed-loop automatic actions of Loop. A more typical scenario is to enter carbs and then use Loop's recommendation for an appropriate bolus.</p> <ol> <li>Enter a bolus with no carb entry</li> <li>Enter a carb entry without a bolus</li> </ol>"},{"location":"operation/loop/close-loop/#bolus-with-no-carbs","title":"Bolus with No Carbs","text":"<p>If you enter a bolus without entering carbs, the prediction will be for your glucose to go low. (The Loop model calculates a negative number for recommended bolus.) For this case, Loop issues a Temp Basal to prevent the low, typically 0.0 U/hr but always less than your scheduled basal rate.</p> <p>COB and IOB</p> <ul> <li><code>COB</code> is the carbohydrates (g) that Loop expects to be absorbed</li> <li><code>IOB</code> is the current active insulin (above or below the scheduled basal rate)</li> </ul>"},{"location":"operation/loop/close-loop/#carbs-with-no-bolus","title":"Carbs with No Bolus","text":"<p>If you enter carbs and select <code>Save without bolusing</code>, you have COB without associated IOB. In that case, Loop predicts your glucose will start rising and updates the recommended bolus, which includes consideration of your <code>Glucose Safety Limit</code>, <code>Correction Range</code> and <code>Maximum Bolus</code> . If that recommended bolus is positive, Loop might deliver some part of that bolus automatically - the exact percentage and timing of that delivery depends on your <code>Dosing Strategy</code>. At each loop cycle (new glucose reading), Loop updates the prediction and calculates a new recommended bolus. When you enter carbs without bolusing, Loop may start delivering some insulin, but if your glucose doesn't start rising as Loop expects, it revises the recommended bolus with each new glucose value.</p>"},{"location":"operation/loop/close-loop/#when-does-automatic-dosing-happen","title":"When does Automatic Dosing Happen","text":"<p>Automatic dosing only happens when <code>Closed Loop</code> is enabled in the settings screen.</p> <p>The Loop app generates a glucose prediction over the next 6 hours (the duration of insulin action), which is why the predicted glucose plot is included on the bolus screen. The Loop app considers glucose prediction with respect to your scheduled <code>Correction Range</code> over the full DIA, weighting closer predictions more than later predictions, when calculating Recommended Bolus.</p> <p>It is actually easier to answer when Loop will not automatically increase insulin delivery.</p> <p>In the situations listed below, the prediction at the end of the DIA can be significantly higher than your <code>Correction Range</code> but no automatic increase in insulin delivery will occur:</p> <ul> <li>If at any time in the next 3 hours, the Loop app predicts glucose below <code>Glucose Safety Limit</code>, <code>Temp Basal</code> is immediately set to 0.0 U/hr and recommended bolus is set 0 U</li> <li>If the prediction dips below the low-end of your <code>Correction Range</code>, there is no automatic increase over scheduled basal</li> <li>If the current glucose is less than the low-end of your <code>Correction Range</code>, there is no automatic increase over scheduled basal</li> <li>If the current IOB is greater than or equal to two times the <code>Maximum Bolus</code> setting, there is no automatic increase over scheduled basal</li> </ul> <p>Even in cases where Loop does not automatically increase insulin delivery, the recommended bolus might be positive, which you see if you tap on the bolus icon manually.</p>"},{"location":"operation/loop/looptips/","title":"Loop Tips","text":""},{"location":"operation/loop/looptips/#loop-tips","title":"Loop Tips","text":"<p>These docs are a great resource for the technical aspects of building your Loop app.  However, they don't really cover in detail a lot of the frequently asked questions about USING Loop.</p> <p>Things such as:</p> <ul> <li>How to enter low treatments while using Loop?</li> <li>What to discuss with your Endo?</li> <li>What data reports might be useful?</li> <li>How to deal with failed sites?</li> <li>What about pizza boluses?</li> <li>What do I do when I shower or swim?</li> </ul> <p>All of those usability questions and more are addressed over in the companion site called LoopTips.</p> <p>Please head over to Looptips in order to read some really helpful tips to make your Looping easier.</p> <p></p>"},{"location":"operation/loop/open-loop/","title":"Open Loop","text":""},{"location":"operation/loop/open-loop/#open-loop-introduction","title":"<code>Open Loop</code> Introduction","text":"<p><code>Open Loop</code> is the best place to start with Loop.</p> <ul> <li>Become familiar with the Loop app by watching it operate with <code>Closed Loop</code> disabled.</li> <li>Take it slow and safe to become a successful Looper.</li> </ul> Menus do not include all Manual Pump Features (Click to learn more) <p>The Loop app is built around the concept of <code>Closed Loop</code> performance.</p> <p>If you use a Medtronic pump and want to use a feature not found in the Loop app, simply disable <code>Closed Loop</code> and control delivery with your Medtronic Controller.</p> <p>If you use an Omnipod pump, keep reading:</p> <p>There may be a feature, like extended bolus, that you used with an Omnipod Personal Device Manager (PDM) that is not in the Loop app.</p> <p>Please refer to Extended Bolus.</p> Practice with Simulators (Click to learn more) <p>You can build the Loop app without connecting it to any hardware.</p> <ul> <li>You can use your phone, a partner's phone or a simulated phone on the computer</li> <li>You can practice with a simulated CGM and / or a simulated pump.</li> <li>You can use Dexcom Share or Nightscout as a CGM to follow your own glucose.</li> <li>You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions.</li> </ul>"},{"location":"operation/loop/open-loop/#glucose-prediction","title":"Glucose Prediction","text":"<p>Pay attention to the prediction in the Glucose Chart. Practice with the user interface while you manually control your insulin delivery. Compare the recommended insulin after entering carbs for a familiar meal. Be sure you understand the predictions and recommendations before you enable <code>Closed Loop</code>. You may need to adjust settings or learn more about how the app works. The Loop app tries to keep predicted glucose in the Correction Range and, more importantly, above your Glucose Safety Limit.</p> <p>There's a lot to learn and understand. New loopers may need to adjust the following Therapy Settings, typically in this order:</p> <ol> <li>Basal Rates</li> <li>Insulin Sensitivity Factor (ISF)</li> <li>Carb Ratios (CR)</li> </ol> <p>Using an algorithm that updates glucose predictions and adjusts insulin delivery every 5 minutes requires accurate settings. Entering carbs and absorption time is a new skill that takes time to master.</p>"},{"location":"operation/loop/open-loop/#eventual-glucose","title":"Eventual Glucose","text":"<p>Watch the eventual glucose, current glucose and prediction curve in the Glucose Chart to understand recommendations for insulin delivery adjustment. The Loop app is looking at current glucose, glucose momentum, carbs on board, insulin on board, and retrospective trends to predict an eventual glucose. Its current decisions are based on actual, predicted and eventual glucose. Predictions for the first three hours of insulin duration of activity are given more emphasis than later predictions when deciding how much insulin should be recommended or withheld from basal.</p> <p>If there is a dip in the predicted glucose below the Glucose Safety Limit, the Loop app will not recommend insulin even if the eventual glucose is above your Correction Range.</p> <ul> <li>In <code>Closed Loop</code> mode, the Loop app automatically decreases insulin delivery using a temp basal of 0 U/hr until the predicted glucose exceeds the Glucose Safety Limit</li> <li>When you tap on the Bolus icon in the Toolbar, the Loop app recommends insulin delivery only after predicted glucose is above Glucose Safety Limit</li> <li>In <code>Closed Loop</code> mode, the Loop app automatically increases insulin delivery only after predicted glucose is above the bottom of the Correction Range</li> </ul> <p>If the Loop predictions don't match your experience, your settings may need to be adjusted.</p> <p>If you want to issue a manual temp basal, this is done on the pump for Medtronic or using the Manual Temp Basal feature for Omnipod.</p>"},{"location":"operation/loop/open-loop/#testing","title":"Testing","text":"<p><code>Open Loop</code> mode shows you glucose trends without the influence of temporary basal or automatic bolus. This is particularly helpful if you haven't used Medtronic sites/pumps or Omnipod before. You may find that your basal rates and carb ratios can change significantly coming from other brands of pumps or from multiple daily injections (MDI).</p> <p>The suggestions below work for most people. You need to adjust for your own situation.</p> <p>Take the time to establish a good basal profile while in <code>Open Loop</code> mode using the pump you plan to use for the Loop app. When using an algorithm, your basal rates needs to be neutral; in other words your glucose, in the absence of food and exercise, should be stable. (When you do basal testing, you should aim to stay at a glucose that is steady within 35 mg/dL (2 mmol/L).)</p> <p>If you previously ran a high basal rate during the day to cover meals, you may need to adjust your CR (to a smaller value) after your basal rate is adjusted to be neutral.</p> <p>Test your insulin sensitivity factor (ISF) during <code>Open Loop</code> after your basal rates are established. The Loop app uses your ISF every 5 minutes to update predictions, so it's worth testing before turning on automated insulin dosing with <code>Closed Loop</code> mode. You may need a different, probably higher value, than what you used as a correction factor with manual pumping or MDI.</p> <p>The algorithm uses the ratio of ISF/CR as part of the prediction while meals are being absorbed. That ratio is approximately how much a single gram of carbohydrate raises your glucose. Experiment by taking a small fast-acting \"low treatment\" when stable with no other food or exercise. </p> <p>Assume ISF is 75 mg/dL and CR is 15 g/U. When a 4 g glucose tablet is consumed, you expect to see a sharp rise in glucose by about 20 mg/dL over the next half hour to an hour. (Your ISF/CR ratio times the grams eaten should be within a factor of two of how much rise you see in glucose.)</p>"},{"location":"operation/loop/open-loop/#meal-entry","title":"Meal Entry","text":"<p>Loop recommends increased insulin dosing as soon as you save carbs.</p> <p>Meal Entry is an important concept - there's a whole page devoted to it later in the docs - but here's a quick summary. You tap on the plate icon in the Toolbar before you meal to show the Add Carb Entry screen.</p> <p></p> <ul> <li>In the Add Carb Entry screen, you must enter Amount Consumed, defaults are ok for other rows</li> <li>The meal entry is not saved when you tap continue - the Loop app takes you to the Meal Bolus screen</li> <li>In the Meal Bolus screen, you can save the carbs and accept or override the recommended bolus</li> <li>Review the recommended bolus for the meal entry<ul> <li>Does the recommendation make sense based on your prior experience</li> <li>Pay attention to the glucose prediction chart embedded in the Meal Bolus tool</li> <li>Practice modifying when the carbs are expected and how long they are expected to last</li> <li>Practice modifying the bolus recommendation - note how the prediction changes</li> <li>When you are confident, you can save the carbs and deliver the bolus</li> </ul> </li> </ul>"},{"location":"operation/loop/open-loop/#carb-absorption","title":"Carb Absorption","text":"<p>Loop uses carb absorption as a component to every meal entry. Most people are successful with the default absorption time of 3 hours. Remember the Loop app updates the prediction every 5 minutes and will adjust if you get the amount or absorption time wrong, as long as you are close.</p> <ul> <li>For low-glucose treatment, you can enter using the 30-minute (lollipop) icon</li> <li>For high-fat meals, you can try the 5-hour (pizza) icon</li> </ul> <p>The Active Carbohydrate chart displays how the app thinks your meal is being aborbed. This is affected by your basal rates, ISF and CR. If it looks wrong, examine your settings.</p> <p>Depending on the type of food you eat, you may increase the carb entry to include some protein or fat.</p>"},{"location":"operation/loop/open-loop/#manual-or-correction-bolus","title":"Manual (or Correction) Bolus","text":"<p>At any time, you can enter a bolus using the Bolus (double orange triangles) icon in the Toolbar. The Loop app offers a recommendation if the glucose prediction supports one. Review the Eventual Glucose section above to understand when the app will recommend a bolus. The Loop recommendation can be modified by editing the Bolus amount.</p> <p>If you tap on the Bolus button (on the Toolbar), does the app recommend more insulin? </p> <p></p> <ul> <li>If so, you can choose to accept if it looks reasonable to you</li> <li>If not, look at the prediction plot to understand the decision</li> </ul> <p>Ask if this is the same decision you would make. This effort will help smooth the transition to <code>Closed Loop</code>.</p>"},{"location":"operation/loop/open-loop/#troubleshooting","title":"Troubleshooting","text":"<p>If you use a RileyLink, determine how far the link can be from your phone and pump, and plan where to carry the link. DASH Omnipod users do not need the RileyLink but should determine how far their phone can be from the pod without communication problems.</p> <p>Learn to troubleshoot Red Loops and the cause of potential loop issues. You'll be less frustrated starting on closed loop if you know how to address these issues.</p> <p>Familiarize yourself with the Bolus Failure Notifications.</p>"},{"location":"operation/loop/open-loop/#caregiver-training","title":"Caregiver training","text":"<p>Caregivers for Loopers should learn how to use the Loop app. School staff or your child need to know how to handle a site change or CGM failure at school. Consider preparing an individualized quick info sheet for your child.</p> <p>Learn to observe the Nightscout site while your child is with you and you can look at their phone. This will help you help your child if they have problems when they are not with you.</p> <p>For more reading, there's a whole set of pages on using Nightscout with the Loop app and setting up a secure method for you to provide bolus or carb entries via remote commands.</p>"},{"location":"operation/loop/open-loop/#apple-health-in-open-loop","title":"Apple Health in <code>Open Loop</code>","text":"<p>If you are using the Apple Health app to examine insulin given while in <code>Open Loop</code>, basal delivery is not recorded in the Health app promptly. You can force an update from the Loop app to Health by suspending and then resuming the pump. If you do this, keep watching the app to make sure delivery did resume.</p>"},{"location":"operation/loop/open-loop/#extended-bolus","title":"Extended Bolus","text":"<p>A menu item to set an extended bolus is not a feature provided by the Loop app at this time. You can make your own extended bolus using the <code>Manual Temp Basal</code> feature with Omnipod.</p> <p>During the time the <code>Manual Temp Basal</code> command is running, the Loop app will make no automated changes to dosing even if the <code>Closed Loop</code> slider is selected as enabled.</p>"},{"location":"operation/loop/open-loop/#extended-bolus-equations","title":"Extended Bolus Equations","text":"<p>This section was added at user request. Once you switch to <code>Closed Loop</code> mode, you should not need this. But before you are ready for that step, you may want to use a tested method for a known meal.</p> <p>Consider a desired total bolus \\((BolusTotal)\\) given over an extended time with a prompt amount \\((PromptAmount)\\) now and the balance \\((Balance)\\) delivered over the next \\((H)\\) hours with a current scheduled basal rate \\((BR)\\).</p> <p>First the equations to calculate the desired rate \\((MTB)\\) to enter into the <code>Manual Temp Basal</code> menu and then an example.</p> \\[ Balance = BolusTotal - PromptAmount \\] \\[ MTB = Balance / H + BR \\] <ol> <li>Turn on a <code>Manual Temp Basal</code> to value of \\(MTB\\) units/hour for \\(H\\) hours</li> <li>Tap the bolus icon on the main toolbar and enter a bolus for \\(PromptAmount\\) units</li> </ol> <p>The order is important. Sending the <code>Manual Temp Basal</code> request to the pod is a single command and then the Loop app is available for the next command to be entered. The Loop app (and pod) will not respond to any pod commands until the bolus finishes delivering; this takes about 40 seconds per unit requested.</p>"},{"location":"operation/loop/open-loop/#specific-example","title":"Specific Example","text":"<p>For this example:</p> <ul> <li>\\(BolusTotal\\) is 3 U</li> <li>\\(PromptAmount\\) is 1 U</li> <li>Time in hours, \\(H\\), is 1.5</li> <li>Scheduled basal rate, \\(BR\\), is 0.5 U/hr</li> </ul> \\[ Balance = 3 U - 1 U = 2 U \\] \\[ MTB = (2 / 1.5) U/hr + 0.5 U/hr = 1.55 U/hr \\] <p>You have your choice of rounding \\(MTB\\) up or down to the nearest \\(0.05 U/hr\\). For this example, the quantity of \\((2/1.5)=1.333\\) was rounded up to \\(1.35 U/hr\\).</p> Why isn't there a menu item? (Click to see more) <p>Each item provided by the Loop app needs a volunteer to decide it is important and develop a method to provide that item. If a volunteer steps up to do this work, there is a long process of discussion and code review before such a modification is considered for the development branch.</p> <p>Most Loopers go to <code>Closed Loop</code> quickly and this feature is not an option at this time.</p>"},{"location":"operation/loop-settings/cgm/","title":"Loop 2 Add CGM","text":""},{"location":"operation/loop-settings/cgm/#add-cgm","title":"Add CGM","text":"<p>Now we need to add a CGM source so that Loop has glucose data. From the Loop settings screen, select <code>Add CGM</code>.</p> <p></p> <p>The standard selections are:</p> <ul> <li>Dexcom G6 (use this for Dexcom ONE)</li> <li>Dexcom G5</li> <li>Dexcom G4</li> <li>Dexcom Share</li> </ul> <p>If you added a compatible Medtronic pump earlier in the setup process, then you will also see an option for the compatible Medtronic sensor that works with that same pump. If you are using a compatible MDT sensor, select that option and the CGM data will be uploaded to Loop when pump status is updated.</p>"},{"location":"operation/loop-settings/cgm/#about-dexcom-share-credentials","title":"About Dexcom Share credentials","text":"<p>You do NOT need your Share account info listed in Loop settings if you are using a G4, G5, or G6 system. The transmitter ID is sufficient. In fact, the recommendation is that you leave your Share account empty so that you don't accidentally become internet-dependent for CGM data when you forget to update your transmitter ID when you start a new transmitter. Just leave the Share credentials blank.</p> <p>If you need to use Dexcom Share</p> <p>If the dexcom is on another phone and you choose to use Share (not advised), here is some information.</p> <p>For all selections, the Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. For G4 users, the Share account is found in the account tab on the app. For G5/G6 users, unfortunately, there is no information in the app displaying what your account name is. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress.</p> <p>If you do not enter your Share credentials correctly, you will get an error when Loop tries to access your Share account to backfill CGM data. That error message will look like below. If you see that message, delete your Share account from Loop settings and try again...or just leave it out and depend on your transmitter ID.</p> <p></p>"},{"location":"operation/loop-settings/cgm/#dexcom-g5-g6-one","title":"Dexcom G5, G6, ONE","text":"<p>The Dexcom G5 and G6 options only require the addition of the active transmitter ID, and the matching Dexcom app to be running on the Loop iPhone. Use the G6 options if you are using a Dexcom ONE CGM.</p> <p>When you change transmitters, you will need to select the <code>Delete CGM</code> button at the very bottom of the CGM info page in Loop. Then you will select your Dexcom system again and add the new transmitter ID. You cannot just tap on your old transmitter ID to update it.</p> <p>If you don't update your transmitter ID when you change active transmitters, your Loop will not get CGM data from the Dexcom app.</p> <p>If you did add Share credential, Loop will get data from your Dexcom Share server and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the glucose reading in Loop and should tip you off that maybe you forgot to update your transmitter ID.</p>"},{"location":"operation/loop-settings/cgm/#dexcom-g4","title":"Dexcom G4","text":"<p>Dexcom G4 users will need the Dexcom G4 Share2 app active on their iPhone and paired to their Dexcom G4 Share receiver.</p>"},{"location":"operation/loop-settings/cgm/#dexcom-share","title":"Dexcom Share","text":"<p>The Dexcom Share selection is primarily for people who wish to test Loop function without a local CGM source and who are not running the Dexcom app on their Loop iPhone. This selection will require login access to a Dexcom Share account with live data and active internet connection in order to work.</p> <p>Dexcom Share is not available for Dexcom ONE CGM.</p>"},{"location":"operation/loop-settings/cgm/#libre-and-other-cgm","title":"Libre and Other CGM","text":"<p>Loop 2 does not natively support Libre CGM. </p> <p>If you switch to Loop 3, there are additional CGM options:</p> <ul> <li> <p>If you choose to build Loop-dev, Libre support has been added.</p> </li> <li> <p>If you can upload your CGM to Nightscout, Loop 3 offers the option to use Nightscout as a CGM source.</p> </li> <li> <p>You can choose to download the Loop with patches option when building with the script.</p> <ul> <li>As a prerequisite, you must interface your iPhone to the Libre</li> <li>Please read Libre Support for Loop 3.2.x Code</li> </ul> </li> </ul>"},{"location":"operation/loop-settings/cgm/#next-step-loop-2-configuration","title":"Next Step: Loop 2 Configuration","text":"<p>Now that you have added your CGM source, we need to complete the configuration and settings in your Loop. Please head over to the Loop 2 Configuration page for guidance with this important part of Loop's setup.</p>"},{"location":"operation/loop-settings/configurations/","title":"Loop 2 Configuration","text":""},{"location":"operation/loop-settings/configurations/#configuration","title":"Configuration","text":"<p>This page will cover two general parts of the Loop app settings for Loop 2.2.x versions. The sections documented are circled in red in the screenshot below. The headings will match the flow of the screen, top to bottom.</p> <ul> <li> <p>The first circled section covers closed/open loop status and how to issue a Loop Report.</p> </li> <li> <p>The second circled section is the configuration section. This section contains a lot of really important settings that control how your Loop will calculate your predicted glucose curve. Given the importance of your predicted glucose curve to Loop's actions, please make sure you read over this page carefully to know how to navigate the selections and entries.</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/configurations/#closedopen-loop","title":"Closed/Open Loop","text":"<p>The user can select closed loop or open loop using this slider. When you first start Loop, we encourage you to leave this slider disabled and become familiar with the app using Open Loop mode.</p> <p>As soon as Closed Loop is enabled, Loop will begin automatic adjustment of insulin dosing. Please ensure the settings you entered are appropriate for the Loop algorithm.</p>"},{"location":"operation/loop-settings/configurations/#open-loop-mode","title":"Open Loop Mode","text":"<p>When the Closed Loop switch is in the (Off) position, Loop WILL NOT modify insulin dosing automatically.</p>"},{"location":"operation/loop-settings/configurations/#closed-loop-mode","title":"Closed Loop Mode","text":"<p>When the Closed Loop switch is in the (On) position, Loop WILL automatically modify insulin dosing on the configured insulin pump. This is known as closed loop. Typically, Loop will show the recommended temp basal or automatic bolus just above the blood glucose graph prior to automatically enacting it. It may take a few seconds for Loop to connect to the pump to enact the modified dose.</p>"},{"location":"operation/loop-settings/configurations/#issue-report","title":"<code>Issue Report</code>","text":"<p>If you run into problems or errors with your Loop, a Loop Report, generated by tapping on the <code>Issue Report</code> row can be used to help identify where the problem is occurring. The Loop Report can be sent to yourself via text or email. You can then post it on Zulipchat to ask for help.</p> <p>Frequently, if you seek help with a technical problem, a Loop Report will provide insight for the developers and troubleshooters. Please email yourself a Loop Report anytime you are questioning Loop actions or displays. Acquiring a screenshot of the phone is also useful. You can use the report and graphics later to ask for help or discard them if you figure it out on your own.</p>"},{"location":"operation/loop-settings/configurations/#select-glucose-units","title":"Select Glucose Units","text":"<p>Before you continue further, a word about glucose units</p> <p>Entries into the configuration section will be available in mg/dL or mmol/L automatically, based upon how your blood glucose values are received. By default they are set to mg/dL, however once CGM values arrive in mmol/L these Loop settings can be entered in mmol/L. If you are planning to use mmol/L, be sure to wait to set your entries until after you have started to receive CGM values in Loop. If you do these in the wrong order, then your charts and entries may have incorrect units.</p>"},{"location":"operation/loop-settings/configurations/#correction-range","title":"Correction Range","text":"<p>The correction range is your blood glucose range that you would like Loop to correct to. Correction range is not necessarily the same target blood glucose range that you have discussed with your endocrinologist; generally the doctor's range may be much wider. For example, you may keep a correction target of 100-110 for Loop to aim to, but use a desired glucose target range of 80-180 when discussing things with your endo about \"time in range\".</p> <p></p> <p>Click the + in the upper right corner to add correction glucose range(s). You can have multiple ranges based on time of day, but the first setting of the day needs to begin at midnight.</p> <p>Correction ranges can be a single number, such as 100-100 mg/dL, or a range such as 100-120 mg/dL. Generally speaking, if you choose to use a range, keeping the range between about 10-30 mg/dL between the lowest and highest value is a good starting place.</p>"},{"location":"operation/loop-settings/configurations/#pre-meal-range","title":"Pre-Meal Range","text":"<p>Below the Correction Range entry is a section called \"Overrides\" with a Pre-Meal setting. While active, the pre-meal targets will replace the usual correction range for Loop's temp basal recommendations. If a pre-meal range is not entered in this section, the icon will remain grey and unusable on the main screen's toolbar.</p> <p>The pre-meal override target can be used as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes.</p> <p>If your normal target is 100-110 mg/dL and pre-meal target is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal target, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first.</p> <p>Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time.</p>"},{"location":"operation/loop-settings/configurations/#suspend-threshold","title":"Suspend Threshold","text":"<p>The suspend threshold must be set up for successful configuration of Loop. Your Loop will not turn green without setting this value. This value affects both bolus and basal recommendations by Loop.</p>"},{"location":"operation/loop-settings/configurations/#bolus","title":"Bolus","text":"<ul> <li>If you are trying to bolus a meal while any part of the predicted glucose curve is below this suspend threshold value, Loop will not recommend a bolus.  Instead, you will need to wait until your prediction curve is above the suspend threshold value in order to bolus.</li> </ul>"},{"location":"operation/loop-settings/configurations/#basal","title":"Basal","text":"<ul> <li>If your current or any point on your predicted glucose curve is below the suspend threshold, Loop will always recommend a temporary basal rate of 0 U/hr.</li> </ul> <p>Reasonable settings for suspend threshold will depend on user preference, but recommended not set lower than 65 mg/dL.</p>"},{"location":"operation/loop-settings/configurations/#basal-rates","title":"Basal Rates","text":"<p>Note: You cannot enter basal rates until you first add a pump in Loop settings. Your basal rates will be initially populated when you walk through the <code>Add Pump</code> part of the setup at the beginning of this setup guide.  </p> <p>Only one basal schedule may be set in each Loop app. The basal increments are available according to the increments of the particular pump/pod you are using. Not all pumps provide the same increments for basal deliveries. Basal schedule must start at midnight and cannot contain rates of 0 U/hr.</p> <p>To edit a line in your basal schedule, tap the line and adjust the time and/or amount.  To remove a line, select Edit in the top right and delete it.  If tapping the line doesn't work, try closing and re-opening the app.  When finished editing, click on the <code>Save to Pump...</code> or <code>Sync With Pod</code> button, depending on which pump you are using.</p> <p>If you make any basal edits and use the <code>Cancel</code> button to go back to the menu without successfully saving/syncing to pump/pod, the changes you made will not be saved. Loop makes saving/syncing to pump a mandatory step to successfully editing basal rates. If you get an error message while trying to save/sync the edited basal rates, please retry until successful.</p>"},{"location":"operation/loop-settings/configurations/#delivery-limits","title":"Delivery Limits","text":"<p>The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits. This section will have been initially populated when you finished the <code>Add Pump</code> part of the setup previously. For safety, similar to basal schedule, you must keep these values the same on both the Loop app and within the pump/pod settings. If you edit these settings in Loop app, always use the <code>Save to Pump...</code> or <code>Sync With Pod</code> button, depending on which pump you are using.</p>"},{"location":"operation/loop-settings/configurations/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>Maximum basal rate will cap the maximum temporary basal rate that the Loop is allowed to enact to meet your correction range. Typically, Loop users set their maximum basal rate around 3-4 times their highest scheduled basal rate. When you are first beginning to use Loop, it is wise to start conservative (low) in setting your maximum basal rate. If your settings are incorrect in other areas (basal rates, insulin sensitivity, carb ratio, etc), you may need time to identify where settings need to be adjusted. This process is easier if Loop is given less latitude to set high basal rates. Gradually increase your maximum basal rate as your comfort and confidence in Loop increases. If you need help with your settings adjustment, head over to LoopTips for some initial settings help</p>"},{"location":"operation/loop-settings/configurations/#maximum-bolus","title":"Maximum Bolus","text":"<p>Enter your desired single bolus maximum here. For safety, don't set a maximum bolus limit any higher than your typical large meal bolus.</p>"},{"location":"operation/loop-settings/configurations/#insulin-model","title":"Insulin Model","text":"<p>There are four insulin models to choose from with Loop 2.x; Walsh, Rapid-Acting Adults, Rapid-Acting Children, and Fiasp. If you want to read the nitty-gritty discussion that went into the development of the Rapid-Acting and Fiasp curves (collectively called \"exponential insulin models\"), you can see that in GitHub here.</p> <p>Loop 3 Insulin Type</p> <p>Loop 3 drops the Walsh model and, by default, does not include the concept of child versus adult for \"rapid\" acting insulin, i.e., Humalog, Novalog and Apidra.</p> <ul> <li>Insulin Type is selected when the user adds a pump</li> <li>The user can choose to customize Loop 3 to Enable Child Model</li> </ul> <p>We highly recommend selecting one of the exponential insulin models for Loop 2.2.x (in other words, not the Walsh model).</p> <p>A common new Loop user error is to select Walsh model in order to easily shorten their insulin duration (DIA) to one like they used prior to Looping. This almost invariably leads to insulin stacking. If you would like to read more about why the duration of insulin action is important in Loop vs how you've traditionally used it, please click here to read a blog post about the subject. In summary, choosing Walsh curve just to shorten your DIA will lead to insulin stacking and less than desired bolusing recommendations.</p> <p>You can click on each model and see what each model's insulin activity curve looks like, active one selected in blue.</p> <p></p> <p>The differences between the three exponential models (two Rapid-Acting and Fiasp) models has to do with the timing of the peak insulin activity timing. Not surprising, since Fiasp is marketed as the \"faster acting\" insulin. Currently all the exponential models are defaulted to an insulin duration of 6 hours, but the peak activity of the curves differs:</p> <ul> <li>Rapid-acting adult curve peaks at 75 minutes</li> <li>Rapid-acting child curve peaks at 65 minutes</li> <li>Fiasp peaks curve peaks at 55 minutes</li> </ul>"},{"location":"operation/loop-settings/configurations/#dosing-strategy","title":"Dosing Strategy","text":"<p>This configuration setting gives you the ability to select the Dosing Strategy. (If you do not see this setting, then you are running Loop v2.2.4 or older.) If you tap on that Dosing Strategy, it reveals a selection screen, shown in the graphic below, with some explanation.  Note that this Dosing Strategy feature was available for more than a year in the automatic-bolus branch.  Users who have been using the automatic-bolus feature should update as soon as possible to get the other improvements recently added, Loop Releases.</p> <p></p> <p>The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged.</p> <p>Both Temp Basal Only and Automatic Bolus strategies restrict basal rates to reduce the amount of insulin delivered when appropriate.</p>"},{"location":"operation/loop-settings/configurations/#temp-basal-only","title":"Temp Basal Only","text":"<ol> <li>When your glucose is at or above target, Loop determines the amount of Recommended Bolus based upon your settings.  Subject to your Delivery Limits, Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB. This decision is re-evaluated during every Loop interval.</li> <li>When your glucose is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB. This decision is also re-evaluated during every Loop interval.</li> </ol> <p>You can manually bolus at any time by pressing the Bolus icon in the center of Loop\u2019s Main Screen.</p>"},{"location":"operation/loop-settings/configurations/#automatic-bolus","title":"Automatic Bolus","text":"<p>When you are first starting Loop, we encourage you to leave automatic boluses disabled until you are sure your settings are dialed in.  To enable automatic boluses, click on Settings \u2013 Dosing Strategy \u2013 Automatic Bolus.  This Automatic Bolus checkbox turns-off positive temporary basal so that:</p> <ol> <li>When your glucose is at or above target, you receive 40% of the Recommended Bolus at every Loop interval.</li> <li>When your glucose is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB. This decision is re-evaluated during every Loop interval (same as with the Temp Basal Only dosing strategy).</li> </ol> <p>As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen.  Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus.</p>"},{"location":"operation/loop-settings/configurations/#carb-ratios","title":"Carb Ratios","text":"<p>Click the + in the upper right to add carb ratios for various times of day. Loop works best if you have tested and optimized your carb ratio settings for accuracy.</p> <p>Beware of other apps writing carbs to Health app</p> <p>If you are using a third-party app (such as Spike or MyFitness) that can write carbohydrates to the phone's Health app, you will need to double-check permissions to make sure Loop doesn't read those carb entries.  Confirm Loop permissions in Health to only <code>write</code> and not <code>read</code> carbs.  See see Loop Permissions.</p>"},{"location":"operation/loop-settings/configurations/#insulin-sensitivities","title":"Insulin Sensitivities","text":"<p>Insulin Sensitivity Factor (ISF) is the same term as Correction Factor used in some clinics and endocrinology offices. ISF represents the drop in blood glucose levels expected from one unit of insulin. Click the + in the upper right to add insulin sensitivities for various times of day. Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF.</p> <p>Incorrectly set ISF is the most common cause of roller coaster glucose for new Loop users. You will need to raise (increase) your ISF value/number to help smooth a roller coaster glucose trend. You can read about that topic more over in LoopTips here.</p>"},{"location":"operation/loop-settings/configurations/#loop-2-services-optional","title":"Loop 2 Services (Optional)","text":"<p>You are not required to use services, although many Loopers use Nightscout. If you do not yet have Nightscout configured and want to add it later, just return to this page when you are ready. This can be added at any time. The same is true for the other services. For more details, click on Loop 2 Services.</p> <p></p>"},{"location":"operation/loop-settings/configurations/#next-step-loop-2-displays","title":"Next Step: Loop 2 Displays","text":"<p>Proceed to the Loop 2 Displays page. Understanding the Loop displays can be a valuable tool to understanding your Loop's actions, and also for troubleshooting, if you are having issues.</p>"},{"location":"operation/loop-settings/displays/","title":"Loop 2 Displays","text":""},{"location":"operation/loop-settings/displays/#loop-displays","title":"Loop Displays","text":"<p>This section of the docs describes the Loop displays available and what information they offer.  Information about Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app. (Page last updated for Loop v2.2.4.) For Loop 3, refer to Loop 3 Displays.</p>"},{"location":"operation/loop-settings/displays/#status-screen","title":"Status Screen","text":"<p>The Status Screen is the main root navigation screen in Loop. It is broken up into 3 main display areas; Heads Up Display (HUD), Charts, and Toolbar. The HUD is the top area of the screen. This shows the status of the last time loop ran, current BG Reading, current temp basal, and current pump information. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates. The final display area is the toolbar which has buttons for Carbs, Pre-Meal, Bolus, Overrides, and Settings.</p> <p></p>"},{"location":"operation/loop-settings/displays/#heads-up-display","title":"Heads Up Display","text":"<p>The Heads Up Display (HUD) is a very useful quick reference guide to your Loop's status. Every 5 minutes, Loop updates CGM and pump/pod data. Loop timestamps the HUD data with the last data point that came in. If a timestamp goes older than 5 minutes old, that is a valuable indicator to where your Loop is failing to get the needed information. The HUD's first three icons, from left to right, are the same no matter whether you are using a Medtronic pump or Omnipod; status of the last time loop ran, current BG Reading, and current relative temp basal. The last two icons will change depending on what type of pump you are using.</p> <p>Medtronic users: The last two icons are the most recent (1) pump/reservoir status and (2) pump percentage battery remaining. Details below</p> <p></p> <p>Omnipod users: The last two icons are the most recent (1) pod status and (2) hours of pod use. Details below</p> <p></p>"},{"location":"operation/loop-settings/displays/#loop-status","title":"Loop Status","text":"<p>The Loop Status is the colored circle in the upper left corner of the main Loop display.  There are four colors that are typically displayed.</p> A grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop.  When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed.  It needs CGM data to be gathered, so be patient.  When it finally completes its first loop, the circle will turn green.  If you can't get your grey loop to turn green, please see the Yellow and Red Loop troubleshooting page  for tips. A green circle indicates the Loop has been successfully completed within the last 5 minutes.  The time since the loop last completed will be displayed under the circle. A yellow circle indicates the Loop has not completed in the last 5-15 minutes.  It is not unusual to have a few instances of yellow circles throughout a day of looping.  They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such.  Generally, most yellow circles will self-resolve without needing any special troubleshooting. A red circle indicates the Loop has not completed in over 15 minutes.  This is not a typical state, and you should troubleshoot why Loop is not completing.  Please review the Yellow and Red Loop troubleshooting page for tips on how to get your green Loop back.  Clicking on the red circle will also pop-up the last error message to help guide your troubleshooting. When the circle is notched and not complete, that means the Loop is operating in \u201copen-loop\u201d mode.  When the \u201cclosed-loop\u201d setting is turned on, the loop status will show a completed circle. <p>Fun Fact</p> <p>The loop status icon will pulse slightly when Loop is communicating with the pump.  The pulsing will stop when the communication has completed (green loop) or given up (yellow or red loop).</p>"},{"location":"operation/loop-settings/displays/#glucose","title":"Glucose","text":"The current BG reading from the CGM will display, including trending arrow and time the reading was taken.  If the BG is being read straight from the G5/G6 transmitter or G4 receiver, no special symbols will appear. If the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading.  Internet access is required to run in this mode. When you first start Loop, there may be a small yellow alert next to the BG.  This should go away within a short period of time (around 5 minutes or less).  If the yellow alert remains, something may be wrong with fetching BG data.  You can try restarting the Loop app (double tap home button, up-swipe on the app to close it) to see if BG data will resume.  Special note for Dexcom G5/G6 users&gt;, a yellow alert will appear when calibration is needed.  The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5/G6 calibration."},{"location":"operation/loop-settings/displays/#temp-basal","title":"Temp Basal","text":"The temp basal will display the enacted temp basal change relative to the scheduled basal.  So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U, as shown in the graphic to the left."},{"location":"operation/loop-settings/displays/#reservoir-medtronic-users","title":"Reservoir (Medtronic Users)","text":"The reservoir icon will remain grey and plain until insulin volume decreases.  At 25% reservoir volume remaining, the reservoir icon will turn yellow.  At 10% reservoir volume remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds."},{"location":"operation/loop-settings/displays/#battery-medtronic-users","title":"Battery (Medtronic Users)","text":"For x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does.  As the battery level decreases, the icon will turn from grey to yellow to red.  For x22, x23 pumps, the battery icon will read discrete % values.  The warning colors/levels on Loop's battery indicator work in conjunction with the type of battery selected.  If you change battery types, please make sure to update your battery selection in the Loop app settings.   The pump's on-screen battery indicator is not a good indicator of remaining battery life for the purposes of looping.  Loop's pump communications will fail from low battery levels sooner than the insulin delivery will fail.  The Loop's battery level warnings are designed to give you approximately 8 hours of notice before the pump battery will need changing."},{"location":"operation/loop-settings/displays/#reservoir-omnipod-users","title":"Reservoir (Omnipod Users)","text":"The pod icon will remain grey and plain until insulin volume decreases.  At 50 units or less insulin remaining, the reservoir icon will turn yellow. At 20 units or less remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds. When the reading is 0 units, there may be up to 4 units of insulin available but don't count on it. If the pod senses insulin can no longer be delivered, the pod will have a sustained audible alarm (the scream). Tapping Replace Pod in Loop-&gt;Pod-&gt;Settings should silence the alarm."},{"location":"operation/loop-settings/displays/#pod-age-omnipod-users","title":"Pod Age (Omnipod Users)","text":"The pod's age, typically a 3-day lifespan, is represented by three equal segments of the pod age icon. As the pod ages, the segments are converted to a darker grey color. At 54 hours old, the pod age icon will turn yellow. At 72 hours old, the pod age icon will turn red, the pod will begin the periodic warning beep, and the pod age icon will show a \"replace pod\" message in the HUD. When you reach 80 hours of pod use, the pod will have a sustained audible alarm (the scream) and stops all insulin delivery. Tapping Replace Pod in Loop-&gt;Pod-&gt;Settings should silence the alarm."},{"location":"operation/loop-settings/displays/#charts","title":"Charts","text":"<p>There are several charts that help you navigate your Loop actions.  Clicking on each of the charts will also open up additional information.</p>"},{"location":"operation/loop-settings/displays/#glucose-chart","title":"Glucose Chart","text":"<p>The glucose chart displays BG values in your preferred units. (If not, quit and restart Loop app on your phone.) The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart.</p> <p>The horizontal axis is set to go forward from the current time until your DIA (insulin duration) forward (so you can see what Loop thinks BG will be eventually). It then goes back in time as far as it can, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time.</p> <p>The BG correction range is shown as a blue bar on the glucose chart.  Single-value range BG range (such as 100-100 mg/dL), will have a narrower blue range.  When a temporary override range is enabled, a darker blue bar where the overrides are set will be displayed, as well as the normal correction range in lighter blue.</p> <p>If you have a crazy negative prediction - it is likely that you set an override with a tiny Overall Insulin Needs setting. Don't do that again. Best approach: Do not panic - this is a prediction only; not reality. Open the loop until the prediction settles down. In future, do not choose a tiny Overall Insulin Needs setting to force less insulin, simply increase the correction range in your override - Loop will reduce your basal rate at the next cycle (within 5 minutes).</p> <p>The eventual BG displayed on the right side of the chart does NOT take into account a recently enacted temp basal.  In other words, if you are above BG range and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal.  Loop waits until the insulin has actually been delivered before it \"uses\" the insulin in its calculations for BG impacts.  If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG.</p> <p>If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below.</p>"},{"location":"operation/loop-settings/displays/#predicted-glucose-chart","title":"Predicted Glucose Chart","text":"<p>The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG.</p> <p></p> <p>The graph at the top of this view will match your Glucose Chart. Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation used. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines.</p> <p>Note - these elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects.</p>"},{"location":"operation/loop-settings/displays/#active-insulin-chart","title":"Active Insulin Chart","text":"<p>The Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive and negative IOB.  Negative IOB results from the suspension of normally scheduled basals.  The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the (for Medtronic) pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered). The opposite is true for Omnipods. If a message is sent from Loop, it assumes the pod got the message and enacted it - even if the acknowledgement is not received.  Later, when communication is restored, if a command was not enacted by the pod, the Event History is updated.</p> <p>Medtronic Only: So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB.</p>"},{"location":"operation/loop-settings/displays/#insulin-delivery-chart","title":"Insulin Delivery Chart","text":"<p>The Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as <code>+0 units</code> would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin, is given in the upper right corner of the graph.</p> <p>Please be patient for a bolus delivery to appear.  There is a lag time from when you press the \u201cdeliver\u201d bolus button to when the orange triangle is drawn sometimes.  The insulin has to be delivered and then the (Medtronic Only) pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added.  Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event.  This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart in the equivalent of a high temp basal rate.</p>"},{"location":"operation/loop-settings/displays/#reservoir-and-event-history","title":"Reservoir and Event History","text":"<p>Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are two viewing options; Reservoir or Event History.  </p> <ul> <li> <p>Reservoir: Omnipod users should not worry about the reservoir display. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. If your pod has more insulin than that - you'll see the reservoir history from the previous pod - ignore that. Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues.</p> </li> <li> <p>Event History: Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability.</p> </li> </ul>"},{"location":"operation/loop-settings/displays/#active-carbohydrates-chart","title":"Active Carbohydrates Chart","text":"<p>The Carbohydrate chart displays the carbs used by Loop to predict BG changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen.  Please read the Carb Entry page for more information about editing carb entries.</p> <p></p> <p>For more information about the Insulin Counteraction Effects information found in the Carb History, please see here.</p>"},{"location":"operation/loop-settings/displays/#tool-bar","title":"Tool Bar","text":"<p>The toolbar is where your inputs to the Loop behavior take place.  The individual components of the toolbar are, left to right:</p> <ul> <li> <p>Carb entry tool- click on this tool to enter carbs into the Loop app.  Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the carb entry tool in Loop app in order to have carbs accounted for by the Loop.  Detailed info regarding how to enter, save, and edit carb entries can be found in the Carb Entry page.</p> </li> <li> <p>Pre-meal range - click this tool to set the Pre-Meal temporary override range. (If you have not configured a pre-meal range under Loop Settings, this icon will be inactive - some people prefer this to avoid accidently tapping it.) This range will remain in effect (1) for 60 minutes, (2) until a carb entry is saved, or (3) until the range is toggled off manually or by tapping on the override icon, whichever comes first.  The background coloring of the Pre-Meal range will turn green when active and there will be a dark blue line on the BG chart indicating where the override range is enabled.</p> </li> <li> <p>Bolus tool - click on this tool to bring up the bolus tool.  Normally, this screen will automatically open on its own and function as a bolus wizard when a meal is saved on the carb entry tool screen.  But you can click on this icon anytime to manually bolus. During rapidly rising BGs, where Loop doesn't have an adequate temp basal rate to cover the pace at which BGs are rising, you may try clicking on the bolus tool to see if Loop is recommending a correction bolus to help control the BG spike. Or if you want to trade bolus now for basal later (super bolus), you can enter a bolus greater than Loop recommends - Loop will set zero Temp Basal next cycle. For more information about the Bolus tool features and use, see the Bolus page.</p> </li> <li> <p>Overrides - click this tool to set an Override.</p> </li> <li> <p>Loop Settings - click on this tool to make changes to any of your Loop settings.</p> </li> </ul>"},{"location":"operation/loop-settings/displays/#next-step-pump-settings","title":"Next Step: Pump Settings","text":"<p>The pump attached to Loop has a screen to display status and command options. For Loop 2, these are documented in Loop 2 Pump Settings.</p>"},{"location":"operation/loop-settings/mdt-pump/","title":"Loop 2 Add Medtronic","text":""},{"location":"operation/loop-settings/mdt-pump/#medtronic-pump-users","title":"Medtronic Pump Users","text":"<p>Your Loop app will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Medtronic pump, you can follow along for the rest of this page. If you are using an Omnipod pump, please head over to Loop 2 Add Omnipod instead.</p>"},{"location":"operation/loop-settings/mdt-pump/#prepare-medtronic-pump","title":"Prepare Medtronic Pump","text":"<p>Before you begin the rest of the setup process, there are several steps on your Medtronic pump that you will need to complete prior to moving on with Loop setup. DO NOT SKIP THESE STEPS OR YOUR LOOP WILL NOT WORK.</p> <ol> <li>Turn off Patterns under the basal menu settings. This will force Loop to use your \"Standard\" basal rate schedule.</li> <li>Make sure your standard basal rate schedule is up-to-date and accurate. Loop will automatically import your pump's existing standard basal rate schedule when you add your pump in the subsequent parts of this page. If you change basal rates later...make sure to make those changes in the Loop app and use Loop to save the changes back to the pump.  If you make changes directly in the pump, Loop will not automatically know about those changes and you will cause a mismatch.</li> <li>Set your pump's <code>Temp Basal Type</code> to <code>Insulin Rate (U/hr)</code>. Do NOT use percentage. Your Loop will not run unless your temp basal type is set to units/hour.</li> <li>Make sure your maximum basal rate and maximum bolus (those are particular settings in the pump) are reasonably set for your particular needs. For new Loop users, a maximum basal rate equal to approximately 2-4 times your highest scheduled basal rate is a good starting point as you learn Loop and dial in your other settings. You can adjust as your comfort and use of Loop develop.</li> <li>Set Remote Devices to <code>ON</code> and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn <code>ON</code> the Remote Options.</li> <li>Cancel any currently running extended or dual wave boluses.  Loop cannot loop with those running.</li> <li>Make sure the other settings in your pump, such as bolus wizard settings, are up-to-date so that if you stop using Loop, those settings will be accurate for non-Loop traditional pump use.</li> </ol>"},{"location":"operation/loop-settings/mdt-pump/#select-pump-type","title":"Select Pump Type","text":"<p>Let\u2019s start by clicking on the Loop Settings button in the tool bar at the bottom of your Loop app. It looks like a little sprocket. On the settings screen that opens, click on <code>Add Pump</code> and select the Medtronic pump option that appears.</p> <p></p>"},{"location":"operation/loop-settings/mdt-pump/#connect-pump-to-loop","title":"Connect Pump to Loop","text":"<p>New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \"RileyLink\" name...go ahead and switch that toggle. The default device name will appear after that toggle is green.</p> <p>You can later personalize the default device name once it is connected to Loop.</p> <p></p> <p>Continue with these steps to connect your Medtronic pump to Loop.  </p> <ol> <li>Make sure your RileyLink is turned on and nearby, then you will see a RileyLink listed in this area of the settings.  Actually, you will see a list of any RileyLinks that are in the nearby area. Slide on the toggle for just one RileyLink.</li> <li>Add your pump's region, color, and serial number. <ul> <li>Note that some Canadian pumps use <code>CM</code> instead of <code>CA</code> for the region code.  Just select <code>CA</code> in the dropdown menu.</li> </ul> </li> <li>Click the <code>Continue</code> button to finish the addition of your pump. </li> </ol> <p></p> <p>For x23 and x54 Medtronic pump users only</p> For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process.Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app.Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the <code>Continue</code> button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app.This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. <p>Now that your pump is paired with Loop, you will be finishing these steps:</p> <ol> <li>Change your pump time using the Loop app (and read all the info on that screen)</li> <li>Import your pump's basal rate schedule, maximum basal rate, and maximum bolus (maximums are collectively called \"delivery limits\" in Loop)</li> <li>Select your pump's battery type (lithium or alkaline)</li> <li>Leave the Preferred Data Source on Event History</li> </ol> <p>Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History.</p> <p></p>"},{"location":"operation/loop-settings/mdt-pump/#change-time-zone","title":"Change Time Zone","text":"<p>Loop automatically prompts you to set your pump time using the Loop app as part of initial Loop setup. There will be other times you need to change the time - traveling or daylight savings time start and end. It is important that you use Loop to change time on your pump; do not adjust time on your pump directly once it is attached to Loop.  </p> <p>If you are traveling through time zones, Loop continues to work - just be aware that your basal rate and other configuration settings will be in the original time zone. To change time zones, please follow the Change Time Zone instructions.</p> <p>Always use the Loop -&gt; Pump -&gt; Change Time command to change pump time. Do not use the Medtronic pump menus to change your pump's time when Looping.</p>"},{"location":"operation/loop-settings/mdt-pump/#next-step-add-cgm","title":"Next Step: Add CGM","text":"<p>Congrats! You've added your Medtronic pump to your Loop app. Now, click on the settings button in the upper left corner to take you back to Loop's settings menu. Your next step is to Loop 2 Add CGM to your Loop app. After all, without CGM data, your Loop won't loop.</p>"},{"location":"operation/loop-settings/omnipod-pump/","title":"Loop 2 Add Omnipod","text":""},{"location":"operation/loop-settings/omnipod-pump/#omnipod-users","title":"Omnipod Users","text":"<p>Your Loop app will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Omnipod pump, you can follow along for the rest of this page. If you are using a Medtronic pump, please head over to Loop 2 Add Medtronic Pump page instead.</p>"},{"location":"operation/loop-settings/omnipod-pump/#select-pump-type","title":"Select Pump Type","text":"<p>Let\u2019s start by clicking on the Loop Settings button in the toolbar at the bottom of your Loop app. It looks like a little gear. On the settings screen that opens, click on <code>Add Pump</code> and select the Omnipod option.</p> <p></p>"},{"location":"operation/loop-settings/omnipod-pump/#select-rileylink","title":"Select RileyLink","text":"<p>New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \"RileyLink\" name...go ahead and switch that toggle. The default device name will appear after that toggle is green.</p> <p>You can later personalize the default device name once it is connected to Loop.</p> <p></p> <p>A list of all RileyLink compatible devices in the nearby area will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue <code>Continue</code> button at the bottom of the screen. If your RileyLink does not appear, make sure it is charged and turned on: slide the recessed switch toward the case's keyring.</p>"},{"location":"operation/loop-settings/omnipod-pump/#delivery-limits-and-basals","title":"Delivery Limits and Basals","text":"<p>The next screen will offer two areas where you will need to enter information:</p> <ul> <li> <p>Delivery Limits: Tapping on Delivery Limits presents a screen where you enter your Maximum Basal Rate and your Maximum Bolus.</p> <ul> <li>Your Maximum Basal Rate limits how aggressive your Loop app can be in setting temporary basal rates to treat high blood glucose.</li> <li>The recommended value for new users is about 3 times their highest scheduled basal rate.</li> <li>Your Maximum Bolus entry limits the size of a single bolus.</li> <li>The recommended value for new users is the largest bolus typically used for meals.  </li> </ul> </li> <li> <p>Basal Rates: Enter your scheduled basal rates, beginning at midnight. Consistent with Omnipod use, the scheduled basal rates have a maximum of 24 entries, no 0 u/hr entries are allowed, and the rate increments are 0.05 u/hr.</p> <ul> <li>Start by tapping the + at the top right of the Basal Rates screen to enter the first value.  </li> <li>Tap + to add rows as needed.</li> <li>When you are done, hit the <code>Back</code> button at the upper left.</li> <li>Note - once a pod is paired to the Loop app, you will press <code>Sync to Pod</code> instead of <code>Back</code> to save your basal rates - you only see <code>Back</code> when no pod is paired.</li> <li>To delete a basal rate or rearrange the order, first tap <code>Edit</code> on upper right and then use standard Apple gestures (for your phone iOS) to delete or move rows.</li> <li>You will not be able to move or delete the row for midnight.</li> <li>You will not be able to add another row if the last row is for 11:30 pm</li> </ul> </li> </ul> <p></p> <p>When you finish entering these values, press the blue <code>Continue</code> button on the bottom of the Pod Settings screen to continue with the next steps of Pod setup.</p>"},{"location":"operation/loop-settings/omnipod-pump/#pair-pod","title":"Pair Pod","text":"<p>Max Fill is 200 Units</p> <p>When you fill the Pod do not exceed 200 units.</p> <p>If you overfill the pods, you may get a pod fault right after priming.</p> <p>Pod Filling and Insertion</p> <p>The Pod filling and insertion instructions are the same with the Loop app as they are for the PDM.  These videos: Filling a Pod with Insulin and Inserting the Cannula, may be useful.  You will use your phone and RileyLink compatible device instead of the PDM.  Be sure to keep the phone and RileyLink close during pairing and insertion because the Pod uses a low-power mode during these activities.</p> <ol> <li>Fill the Pod with insulin until it beeps (minimum fill is 80 units)</li> <li>Place the Pod about 6 inches from the RileyLink compatible device with the phone within a few feet</li> <li>Click the <code>Pair</code> button</li> <li>Loop checks on the radio signal strength (RSSI) reported by the pod when it starts to pair and if it is not within the optimum range, it will ask you to move the RileyLink closer or further away and try again.</li> <li>Wait while the progress bar for priming completes</li> <li>Press the <code>Continue</code> button when the blue checkmark confirms priming is complete</li> </ol> <p></p>"},{"location":"operation/loop-settings/omnipod-pump/#insert-cannula","title":"Insert Cannula","text":"<ol> <li>Prepare your insertion site</li> <li>Remove the Pod's needle cap and adhesive backing</li> <li>If the cannula is safely tucked away, apply the Pod to your desired infusion site. If cannula is sticking out, press <code>cancel</code> in the upper right corner of the screen and try a new Pod. (Report this issue to Insulet; it is a Pod problem.)</li> <li>Press the <code>Insert Cannula</code> button.</li> <li>Listen to the clicks filling the cannula, wait for insertion and the progress bar to complete. The number of clicks to insertion is not consistent. The cannula will deploy before the progress bar is completed.</li> <li>Confirm cannula has deployed: you should feel it and there is a pink slide that can be seen on the outside of the pod as shown in this video: Inserting the Cannula.</li> <li>Proceed to the Expiration Reminder screen to accept or modify the default reminder.</li> </ol>"},{"location":"operation/loop-settings/omnipod-pump/#expiration-reminder","title":"Expiration Reminder","text":"<p>Finish the setup using the default expiration reminder time (2 hours before a full 3-days of usage). You can modify that expiration reminder at any time, see Expiration Reminder. The notification will come from Loop; your Pod will not beep at this time. Setup is complete and your Pod is ready for use when you press the <code>Continue</code> button.</p> <p>Range</p> <p>Now that the priming and insertion steps are complete, the Pod is in normal power mode, so the range between the Pod and RileyLink compatible device is increased.</p> <p></p>"},{"location":"operation/loop-settings/omnipod-pump/#pod-settings","title":"Pod Settings","text":"<p>After the Pod setup is complete, you will be on the Pod Settings screen. The information on this screen is described in Omnipod Pump Commands.</p>"},{"location":"operation/loop-settings/omnipod-pump/#next-step-add-cgm","title":"Next Step: Add CGM","text":"<p>Congrats! You've added your Pod to your Loop app. Now, click on the <code>Done</code> button in the upper right corner of your Pump Settings screen to take you back to Loop Settings. Your next step is to Loop 2 Add CGM to your Loop app. After all, without CGM data, your Loop app won't loop.</p>"},{"location":"operation/loop-settings/pump-commands/","title":"Loop 2 Pump Settings","text":""},{"location":"operation/loop-settings/pump-commands/#pump-settings","title":"Pump Settings","text":"<p>To bring up the Pod/Pump Settings display, tap on the reservoir icon in the Heads Up Display or the image of the pump in the Loop settings screen.</p> <p>Omnipod Eros vs DASH</p> <p>With the addition of DASH pods with Loop 3, you will notice all reference to Eros pods continue to say Omnipod in both the documentation and the code.</p> <p>Documentation and screens in the app indicate DASH explicitly.</p>"},{"location":"operation/loop-settings/pump-commands/#change-time-zone","title":"Change Time Zone","text":"<p>The schedules for the basal rates, correction ranges, insulin sensitivity factors and carb ratios stay at the pump time even if the user and their phone change time zones or when daylight savings time occurs.  To bring the pump into the same time zone as the phone, use this command in Loop. (Medtronic users - do NOT adjust time on your pump - always go through Loop.)</p> <p>Select the Pod/Pump Settings display, scroll down to the Change Time Zone line, example shown in the graphic below.  You can leave the time zone offset unchanged or touch it to change to the current time zone.  Note that the 24 hour configuration pattern for basal rates, insulin sensitivity factor, carb ratio and correction range are aligned with the time zone shown on this line.</p> <p></p> <p>Once the Change Time Zone command is tapped, Loop no longer shifts the 24 hour configuration pattern to the old time zone. Some behavior depends on whether the pump is an Omnipod or Medtronic.</p>"},{"location":"operation/loop-settings/pump-commands/#omnipod-commands","title":"Omnipod Commands","text":"<p>To bring up the Pod Settings display, tap on the Pod Age icon on the Heads Up Display or the image of the Omnipod in the Loop settings display to reach the Pod Settings display.</p> <p>This screen provides important information about your Pod and allows you to issue some commands to the Pod through Loop. There were some recent modifications made to the layout and underlying information for some of the rows.</p> <ul> <li> <p>Enable/Disable Confirmation Beeps: moved up to the Configuration section; beeps for all manual pod operations; uses a more efficient implementation</p> </li> <li> <p>Suspend/Resume: Pod will beep every 5 minutes when suspended; the beeps can be silenced by tapping on the Alarms line</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/pump-commands/#pod-information","title":"Pod Information","text":"<p>The first section has the (72 hour) Pod expiration date/time and how long the Pod has been active. These are determined when the Pod is activated by injecting insulin into the reservoir and uses pod active time.</p>"},{"location":"operation/loop-settings/pump-commands/#bolus-delivery","title":"Bolus Delivery","text":"<p>This line reports the % progress of any ongoing bolus. This line reports <code>None</code> unless a bolus is actively being delivered when you enter Pod Settings. This line may not update until you tap on the refresh symbol to the right of the Pod image, or exit and re-enter the Pod Settings screen.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#basal-delivery","title":"Basal Delivery","text":"<p>This line reports</p> <ul> <li>schedule for scheduled basals</li> <li>U/hour for a 30 minute Temporary Basal</li> <li>suspended if the Pod is suspended</li> </ul> <p></p>"},{"location":"operation/loop-settings/pump-commands/#alarms","title":"Alarms","text":"<p>This line displays Alerts or Alarms; tapping on it, or on the accompanying banner displayed in the HUD, acknowledges the alert</p> <ul> <li>If your Pod is beeping an alert, this line will display information about the alert. Tapping on the alert clears or \"snoozes\" the alert status.</li> <li>If your Pod is screaming, it's time to change it.  Tapping on this line stimulates an immediate reading of the actual error (normally this happens at the next CGM reading).</li> <li>There was overwhelming preference during initial testing to minimize the \"beeping\" of Pods. You can turn on additional beeps by enabling Confirmation Beeps. These are the Loop Notifications and Pod beeps you should expect with the default (confirmation beeps disabled) setting:<ul> <li>Expiration Reminder - Loop notification only, no Pod beeps</li> <li>72 Hours Expiration - Loop notification and Pod beeps (Pod beeps continue  once per hour until alert is acknowledged)</li> <li>79 Hour Alert - Loop notification and Pod beeps (Pod beeps continue every 15 minutes until alert is acknowledged)</li> <li>Pod Suspended (v2.2.5 or later): Pod beeps once per 5 minute unless this alarm is cleared</li> </ul> </li> </ul> <p></p>"},{"location":"operation/loop-settings/pump-commands/#reservoir","title":"Reservoir","text":"<p>Pods do not report the volume of insulin remaining in the reservoir until there are less than 50 units remaining. So, typically you will see \"50+ U\" in this line for quite a while with a new Pod.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#insulin-delivered","title":"Insulin Delivered","text":"<p>This line is the basal and bolus insulin delivered by the Pod since the cannula was inserted. It is obtained by taking the reported Pod insulin delivery and subtracting the amount used to prime the Pod and fill the cannula upon insertion (about 3\u00a0U).</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#pod-commands","title":"Pod Commands","text":"<p>This section contains commands the typical user will use.</p>"},{"location":"operation/loop-settings/pump-commands/#suspend-delivery","title":"Suspend Delivery","text":"<p>This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say <code>Resume Delivery</code>. (If the display does not update, tap the refresh screen icon at the top of the screen to the right of the Pod image.)</p> <p></p> <p>A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended. Unless you are running v2.2.4 or earlier, a pod beep is initiated with a frequency of every 5 minutes.  This can be silenced by acknowledging the alarm.</p> <p></p> <p>You will need to press <code>Tap to Resume</code> in the banner or the <code>Resume Delivery</code> button in the Pod Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed.</p> <p>When you resume delivery, the 24 hour Pod basal rate schedule is sent to the Pod. Be sure the Phone, RileyLink and Pod stay close until the message exchange is complete.  </p>"},{"location":"operation/loop-settings/pump-commands/#enable-confirmation-beeps","title":"Enable Confirmation Beeps","text":"<p>This turns confirmation beeps on for the Pod. The Pod beeps when you enable this, but is silent when you disable it.</p> <ul> <li>Bolus Acknowledgement - the Pod beeps when it has received and accepted the bolus command from Loop (manual or automatic) and then beeps again when the bolus is completed.</li> <li>Other - all the manual commands you can issue to the Pod will have an associated confirmation beep when the message is received by the pod, such as updating the basal rate, requesting Pod status, canceling a bolus, suspending or resuming delivery.</li> </ul>"},{"location":"operation/loop-settings/pump-commands/#expiration-reminder","title":"Expiration Reminder","text":"<p>With the Expiration Reminder you can set a convenient time to get a notification to replace your Pod. Loop sets the default to 70 hours, i.e., two hours before the full 3 days that Insulet guarantees. The allowed range of values is between 1 hour and 24 hours prior to the Pod expiration at 72 hours of Pod life. If you select a date/time outside this range, Loop will modify your selection to the closest allowed value.</p> <p>As with the PDM, Loop allows the Pod to continue operating after expiration until it reaches the maximum allowed 80 hours of life, at which time, the Pod shuts down and alarms.  Loop detects this message the next time it tries to communicate with the Pod. In the event your Pod runs out of insulin before that time, then you will get a \"Pod empty\" notification.</p> <p>The glitch in setting the Expiration Reminder in v2.2.4 is now fixed.</p> <p>Loop v2.2.4 has a \"glitch\" in setting the Expiration Reminder.  Tap on the line (can't change time), scroll the entire display up or down until the line no longer is visible and then scroll it back. The Expiration Reminder display should now look like the graphic below. The expiration reminder time can now be selected.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#change-time-zone_1","title":"Change Time Zone","text":"<p>Use the <code>Change Time Zone</code> command to align your configuration settings with the current time zone. Note that this updates your basal schedule on your Pod. If you start a new Pod session without modifying the time zone here, the original time zone will be used for the new Pod. Please wait until you see <code>Succeeded</code> appear on the page to ensure the command has successfully been received by the Pod.</p> <p>Make sure the phone, RileyLink compatible device and Pod are kept in close proximity until this command has completed. The time zone is updated by Loop issuing the 24-hour basal rate schedule to the Pod based on the current time.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#replace-pod","title":"Replace Pod","text":"<p>This command deactivates a Pod prior to replacing it. Once you tap <code>Replace Pod</code>, another screen appears for you to confirm that you mean it.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#devices","title":"Devices","text":"<p>This allows access to the RileyLink screen for each connected RileyLink compatible device.</p>"},{"location":"operation/loop-settings/pump-commands/#pod-diagnostics","title":"Pod Diagnostics","text":"<p>This section is labeled Diagnostics, but many Pod users make use of this section.</p>"},{"location":"operation/loop-settings/pump-commands/#read-pod-status","title":"Read Pod Status","text":"<p>This command requests the status of the Pod and reports some of the returned information.</p> <ul> <li> <p>The line labeled <code>Pulses</code> reports the total number of pulses of insulin delivered by that Pod since activation (adding insulin to the reservoir). To convert this to units of insulin, multiply by 0.05 units/pulse. If you compare this report (for your Pod) to the <code>Insulin Delivered</code> line in Pod settings, for your Pod at the same time, the difference is the insulin used to prime the Pod and fill the cannula at insertion.</p> </li> <li> <p>The line label <code>RSSI</code> reports the Received Signal Strength Indicator (RSSI) between the RileyLink compatible device and the Pod. The RSSI is a positive number with a larger number indicating a stronger signal strength detected by the Pod.</p> <p></p> </li> </ul>"},{"location":"operation/loop-settings/pump-commands/#play-test-beeps","title":"Play Test Beeps","text":"<p>This command requests the Pod emit a beep pattern. If you hear it, you know the commands are getting to the Pod. A message appears on your screen to indicate Loop got or did not get an acknowledgment from the Pod.</p>"},{"location":"operation/loop-settings/pump-commands/#read-pulse-log","title":"Read Pulse Log","text":"<p>This command reads the pulse log (diagnostic), displays it on the screen and saves the result in the log file. It takes some time, so keep your gear close until command completes. This can be extracted by sending the pulse log to yourself using the send-to icon at the top right of the screen.  It is also included in the Issue Report. If you are having communication issues, you can provide this report to an expert who may be able to provide assistance. Post for help in either zulipchat or a Facebook group to request assistance and you'll get information about how to get that log file submitted.</p>"},{"location":"operation/loop-settings/pump-commands/#test-command","title":"Test Command","text":"<p>This verifies communication with the Pod. Loop reports success or failure.  Use Get Pod Status if you want to see the some of the information returned from the Pod.</p>"},{"location":"operation/loop-settings/pump-commands/#pod-details","title":"Pod Details","text":"<p>This section provides some Pod identifying information. The Lot number and TID number are the tiny number stamped on the Pod that Insulet might ask you to report if you happen to call in this Pod for an appropriate failure.</p>"},{"location":"operation/loop-settings/pump-commands/#medtronic-commands","title":"Medtronic Commands","text":"<p>Medtronic commands are found in the Pump Settings screen shown in the graphic below. The top section is configured at the time the pump is connected to Loop and can only be modified by deleting the pump and adding a pump. This screen is the same as for earlier versions with the addition of the <code>Use MySentry</code> row.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#suspend-delivery_1","title":"Suspend Delivery","text":"<p>This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say <code>Resume Delivery</code>.</p> <p>A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended.</p> <p>You will need to press <code>Tap to Resume</code> in the banner or the <code>Resume Delivery</code> button in Pump Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed.</p>"},{"location":"operation/loop-settings/pump-commands/#change-time-zone_2","title":"Change Time Zone","text":"<p>During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time-zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to <code>Change Time Zone</code> and accounts for time zones when performing insulin delivery accounting.</p>"},{"location":"operation/loop-settings/pump-commands/#pump-battery-type","title":"Pump Battery Type","text":"<p>The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump.</p>"},{"location":"operation/loop-settings/pump-commands/#preferred-data-source","title":"Preferred Data Source","text":"<p>Leave the Preferred Data Source set to on Event History for proper functioning of Loop.</p> <p>Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History.</p>"},{"location":"operation/loop-settings/pump-commands/#use-mysentry","title":"Use MySentry","text":"<p>This is a new option. If you don't see this row, consider updating your Loop app.  Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly.  This option allows you to turn off MySentry within the Loop app.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#devices_1","title":"Devices","text":"<p>This allows access to the RileyLink screen for each connected RileyLink compatible device.</p>"},{"location":"operation/loop-settings/rileylink/","title":"RileyLink Display","text":""},{"location":"operation/loop-settings/rileylink/#rileylink","title":"RileyLink","text":"<p>The RileyLink (or compatible device) screen is accessed by clicking on the image of your connected pump in Loop settings or the pump icon in the Heads Up Display to bring up the associated pump screen. From that screen, scroll down to the section labeled <code>DEVICES</code> to view the list of connected RileyLink compatible device(s) and tap on the name with a green slider that you want to display. An example is shown in the graphic below.</p> <p></p>"},{"location":"operation/loop-settings/rileylink/#signal-loss","title":"Signal Loss","text":"<p>If there is a problem communicating with that RileyLink compatible device, tapping on the line will show out-of-date or missing information. Go to Troubleshoot: Red Loop: Reset Loop-to-Pump Communications for suggestions.</p> <p>With Loop 3</p> <ul> <li>The Pump Devices display will show the signal loss icon instead of reporting dB as shown in the graphic below. </li> <li>If the problem persists, you'll start to see some Error Messages as well.</li> </ul> <p></p>"},{"location":"operation/loop-settings/rileylink/#rileylink-status-and-commands","title":"RileyLink Status and Commands","text":"<p>Tapping on a name with a green slider takes you to the RileyLink Status and Commands screen for that device.</p> <p>The name at the top center is whatever you named your RileyLink compatible device. The RileyLink screen is the same regardless of the pump you are using.</p> <ul> <li>The three graphics below match the display for Loop 3. </li> <li>For Loop 2.2.x - the displays are almost identical when the patch mentioned below the graphic is applied.</li> <li>The firmware displayed is specific to each device. </li> </ul> <p></p> <p>Patch Required for Loop 2.2.x</p> <p>Some devices have features not available with other devices.  With Loop 2.2.6 some features were added to the OrangeLink, but there is a mismatch of reported hardware for some versions of OrangeLink firmware which prevents the Find Device row from showing up for OL Pro. The EmaLink extra features did not make it into the Loop v2.2.6 release.</p> <ul> <li>With Loop 2.2.x, to see the displays shown in the graphics below, please follow instructions in the EmaLink and OrangeLink Feature and Patch sections.</li> </ul>"},{"location":"operation/loop-settings/rileylink/#device","title":"Device","text":"<p>The lines under the Device section provide information on the device. The two most important lines are the Connection Status and Signal Strength.</p> <ul> <li> <p>The Connections Status should say <code>connected</code> if the device is connected to the iPhone's Bluetooth. If the status says <code>connecting</code> or <code>disconnected</code> then you should toggle the iPhone's BT and/or power cycle the device to help reconnect.</p> </li> <li> <p>The Signal Strength is the strength of the Bluetooth signal between the iPhone and the device.  It is not the signal strength of the radio communications with the pump/pod.  </p> </li> <li> <p>The phone to device Signal Strenth is reported as a negative number so a -50\u00a0dB signal is stronger than -80\u00a0dB. As you move the device and iPhone closer/farther apart, you will be able to see the signal strength change. In a pinch, this can be used to help locate a lost device in the house or at the park after dark.</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/rileylink/#personalize-device","title":"Personalize Device","text":"<p>As soon as you connect the RileyLink compatible device initially - it is strongly encouraged that you rename it from the default name for that device, e.g., RileyLink or OrangeLink or EmaLink.</p> <p>Once you display the RileyLink Status and Commands screen:</p> <ul> <li>Tap on the Name line</li> <li>Enter your desired name</li> <li>Wait a few seconds before doing anything<ul> <li>The new name needs to be transferred and saved in the device</li> <li>If you return to the Pump screen too soon, it might not happen - just repeat the process</li> <li>The device must be connected and on to change its name</li> </ul> </li> </ul>"},{"location":"operation/loop-settings/services-v2/","title":"Loop 2 Services","text":""},{"location":"operation/loop-settings/services-v2/#loop-services","title":"Loop Services","text":"<p>Near the bottom of your Loop settings screen is a section called \"Services\".</p> <p>Sevices are Optional</p> <ul> <li>Loop will work whether you use these or not.</li> <li>Nightscout is highly recommended by experienced Loopers but can be added later - you don't need it to get started.</li> </ul> <ul> <li> <p>For Loop 2.2.x, the services listed in the graphic below can be added by clicking on the <code>Tap to set</code> arrow.</p> </li> <li> <p>Click for Loop 3 Services</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/services-v2/#nightscout","title":"Nightscout","text":"<p>There is a whole section in LoopDocs about Nightscout. Please follow this link to the Using Nightscout with Loop section of LoopDocs. That also has the links you might need to the official Nightscout Documentation (different website).</p> <p>If you have an existing Nightscout site, it's still a good idea to review that section, but here's a quick summary of how to add your Site URL and API_SECRET to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API_SECRET, it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites).</p> <p>The two most common errors in filling out this section are:</p> <ol> <li>Failure to use <code>https://</code>  in the site URL.  If you use <code>http://</code> (see how that doesn't have the \"s\" at the end?), you will get an error message about an App Transport Security policy.</li> <li>Having a trailing slash on the end of the URL (or an embedded space). If you copy and paste from a web browser, make sure to delete the trailing slash on the URL entry.</li> </ol> <p>More Tips about Nightscout</p> <ul> <li>One family had an app configured to block some websites for their child's phone and accidentally blocked their Nightscout URL - took them a while to figure out that mistake.</li> </ul>"},{"location":"operation/loop-settings/services-v2/#loggly","title":"Loggly","text":"<p>Loggly is a free logging service. If you sign up for an account, you'll need to go under Source Setup and then Customer Tokens. Copy and paste your customer token into your Loop App settings for Loggly.</p> <p></p>"},{"location":"operation/loop-settings/services-v2/#amplitude","title":"Amplitude","text":"<p>Amplitude is a remote event monitoring service and can be used to quickly identify errors and events with Loop. Amplitude stores the events and allows you to view those events as points in time. To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues. If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.</p> <p></p>"},{"location":"operation/loop-settings/services-v2/#next-step-loop-displays","title":"Next Step: Loop Displays","text":"<p>Great job, almost finished! Now that you have completed your services, let's move onto understanding your Loop Displays.</p> <ul> <li> <p>Loop 2.2.x - click on this link for Displays</p> </li> <li> <p>Loop 3 - click on this link for Displays. </p> </li> </ul> <p>Loop displays is a valuable tool for understanding your Loop and a great page to review when troubleshooting.</p>"},{"location":"troubleshooting/loop-crashing/","title":"Loop App Crashes","text":""},{"location":"troubleshooting/loop-crashing/#loop-crashes-upon-opening","title":"Loop Crashes Upon Opening","text":"<p>If your Loop app crashes immediately upon opening, you have a problem that needs to be fixed. What do I mean by \"crashes\"? Your Loop app immediately turns to a white (light mode) or black (dark mode) screen and then shuts itself down, landing you back at your iPhone's main screen. No amount of tapping will let you keep your Loop app open.</p> <p>The most likely reason is Your Loop App Expired. But there can be other reasons.</p> <ul> <li>If you just updated your phone from iOS 16 to iOS 17 (or a similar major phone update), Apple spends a lot of time indexing your Apple Health data<ul> <li>Many people report 5 to 30 minutes during which they cannot open the Loop app but they also cannot open Apple Health<ul> <li>Wait until you can open Apple Health and then try to open the Loop app again</li> </ul> </li> </ul> </li> <li>If you still can't stop the crashes, see Other Reasons and be sure to save the crash log</li> </ul>"},{"location":"troubleshooting/loop-crashing/#your-loop-app-expired","title":"Your Loop App Expired","text":"<p>Your Loop app has an expiration date. The expiration date will depend on the build method and may also depend on the type of developer account that signed the app.</p> <ul> <li>If you build with Browser Build, your app will expire after 3 months</li> <li>If you build with a Mac using a paid account, your app will expire after 12 months</li> <li>If you build with a Mac using a free account, your app will expire after 7 days</li> </ul>"},{"location":"troubleshooting/loop-crashing/#browser-build","title":"Browser Build","text":"<p>With the current version, 3.2.3, you unfortunately do not get prior warning that the app is about to expire, although you can look in the TestFlight app and it will tell you. An in-app warning will be added to the next release.</p> <p>Please follow these steps to ensure you can build the app again. How to Update or Rebuild</p>"},{"location":"troubleshooting/loop-crashing/#mac-using-a-paid-account-1-year","title":"Mac using a Paid account (1 year)","text":"<p>When your app expires after a year, you need to follow the steps on the Build Updating page. Your phone will probably have a new iOS that may require an updated version of Xcode that may require an updated Mac operating system.  All this is explained in the link above.  Give yourself time before expiration to prepare yourself.</p> <p>To make it easy to build when you have to, practice building every 3 to 6 months. This makes the process much lower stress. Also, each time you build, when you follow the link above, you give yourself another full year before rebuilding is required. Please review the Updating FAQS.</p>"},{"location":"troubleshooting/loop-crashing/#mac-using-personal-team-7-day","title":"Mac using Personal Team (7 day)","text":"<p>When your app expires, you simply need to open Xcode, reopen the project: File-&gt;Open Recent, plug your phone back into the computer and select it in Xcode and press the play button on your project again. This will rebuild. If you want to change to a paid signing team before rebuilding, please make sure to double-check which signing team is selected before building again.</p>"},{"location":"troubleshooting/loop-crashing/#switching-from-free-to-paid","title":"Switching From Free to Paid","text":"<p>If you started with a free account and switched to a paid account:</p> <p>Many people accidentally build with their old free account</p> <ul> <li>How can you tell which you're signing with?</li> <li>The free signing team has the <code>(Personal Team)</code> listed after your name in the signing team</li> </ul> <p>Remember that switching from free to paid changes the developer name incorporated into your Loop App</p> <ul> <li>A separate Loop app is created - see Switching from Free to Paid Membership for more details</li> <li>Did you select the new app and enter all your settings into it and then delete the 7-day app?</li> <li>The new app issue only happens if you change developer name</li> <li>As long as you stick with the same developer ID, updated Loop apps are built over existing apps and all your settings should be maintained</li> </ul>"},{"location":"troubleshooting/loop-crashing/#other-reasons","title":"Other reasons","text":"<p>If you experience a crash for any other reason, please gather all the information you can about what was happening before the crash and report it to your favorite Loop Social Media help site - you will need to get some personalized help. Please - choose one site for your post and wait for someone to get back to you.  While you are waiting, search on any of the sites and, if on Facebook, read all the announcements.</p>"},{"location":"troubleshooting/loop-crashing/#save-and-submit-your-crash-logs","title":"Save and Submit your Crash Logs","text":"<p>If you have continuous crashes, please save the crash logs so the developers can look at it. If you can, log into Zulipchat and post it directly.</p> <ul> <li>The crash logs can be found under Settings --&gt; Privacy &amp; Security --&gt; Analytics &amp; Improvements --&gt; Analytics Data</li> <li>Scroll to find the file Loop_<code>DateTime</code>.ips for crash reports</li> </ul>"},{"location":"troubleshooting/omnipod-faults/","title":"Omnipod Faults","text":""},{"location":"troubleshooting/omnipod-faults/#screamers","title":"Screamers","text":"<p>Pod faults are typically noticed by hearing a high-pitched continuous tone coming from the pod.</p> <p>Loop will pick up the fault the next time it exchanges messages with the pod:</p> <ul> <li>every 3 minutes for DASH</li> <li>every 5 minutes for Eros</li> </ul> <p>Once Loop detects the fault, you will get a Critical Pod Error modal message on the screen that you must acknowlege along with a <code>Pod Error</code> indicator shown in the HUD:</p> <p></p> <p>Normal High-Pitched Tone</p> <p>There are 2 cases in which you hear the high-pitched continuous tone that are not Faults.</p> <ol> <li>Modal Alert says <code>Empty Reservoir</code>, Pod icon displays <code>No Insulin</code></li> <li>Modal Alert says <code>Pod Expired</code>, Pod icon displays <code>Pod Expired</code></li> </ol>"},{"location":"troubleshooting/omnipod-faults/#stop-that-noise","title":"Stop that Noise","text":"<p>The first action people want to take is to make that noise stop. </p> <ul> <li>Tap on the Pod icon and then the <code>Replace Pod</code> row and deactivate the pod<ul> <li>The <code>Replace Pod</code> row is highlighted in red in the graphic below</li> <li>Once the pod has been dealt with and you have a new one in place, it's time to get the details for the Pod Fault</li> </ul> </li> </ul>"},{"location":"troubleshooting/omnipod-faults/#capture-the-fault","title":"Capture the Fault","text":"<ul> <li>Tap on the Pod icon and scroll all the way down and tap on the <code>Previous Pod Information</code> row, highlighted in dashed-blue in the graphic below<ul> <li>If there was a Fault, the information is found at the bottom of the screen</li> <li>For any pod, the information about that pod is always available</li> </ul> </li> </ul>"},{"location":"troubleshooting/omnipod-faults/#report-the-fault","title":"Report the Fault","text":"<p>Faults should be reported to Insulet. They may not give you a replacement, but it is important they be informed so they can determine if certain lots are having more failures than others. This helps them improve the quality of the pods.</p> <ul> <li>Take a screen shot of the Fault Information</li> <li>Insulet needs the following:<ul> <li>The <code>Lot number</code> (Eros found on the screen, DASH is different)<ul> <li>The DASH lot number needed by Insulet is the one found on both the box the pod came from and the paper cover from the pod tray</li> <li>The electronic lot number reported by DASH pods to Loop is not helpful to Insulet</li> </ul> </li> <li>The <code>Sequence number</code> (also on the pod in tiny print)</li> <li>The <code>Active time</code> (how long you wore the pod)</li> <li>The <code>Ref code</code> - for the example above, the Ref code is: 19-00805-00551-064</li> <li>They will also ask where on your body the pod was placed</li> </ul> </li> </ul> <p>Extra Information</p> <p>The extra information, e.g., <code>Fault Event Code 0x40: Encoder count too high</code>, is only useful for the curious or the developers. Do not report that to Insulet.</p> <p>The <code>0x40</code> is the hex version of the <code>-064</code> decimal value found at the end of the Ref code.</p>"},{"location":"troubleshooting/omnipod-faults/#report-049-0x31-to-developers-not-insulet","title":"Report 049 (0x31) to Developers, Not Insulet","text":"<p>The sole exception to reporting to Insulet is if you get a fault ending in <code>049</code> in the Ref code or with the notation <code>Fault Event Code 0x31: Incorrect pod state for command</code>. That particular fault is only seen if there is a mistake in Loop. This happened rarely in earlier versions but should be fixed by the time version 3.4.0 is released. If you do get an 0x31 (049) fault - report that to the Loop developers and include a Loop Report (Loop, Settings, Support, Issue Report).</p>"},{"location":"troubleshooting/omnipod-faults/#known-pod-fault-codes","title":"Known Pod Fault Codes","text":"<p>The currently known pod faults are listed here on the openomni wiki page: Pod Fault codes</p>"},{"location":"troubleshooting/omnipod-faults/#ways-to-reduce-likelihood-of-a-fault","title":"Ways to Reduce Likelihood of a Fault","text":"<p>The Loop app will put a higher battery load on a pod than the PDM due to its regular and repeated communications. A pod with lower battery level appears to be more likely to fault for conditions like static electricity and occlusions/pump issues the Loop app is not directly causing, like decimal fault codes 052, 061, 064 and 066. Pods always perform safety checks and if a potential problem is found, the pod will end itself by screaming and halt all insulin delivery.</p> <p>DASH pods have additional Fault Codes associated with the pod Bluetooth communications. The <code>0xCB</code>, <code>-203</code> decimal, seems to be pretty common. These should be reported to Insulet for their records.</p> <p>None of the ways listed here are guaranteed to prevent a screaming pod, but they could be worth considering.</p> <ul> <li>Keep the Loop app up to date; newer versions might include improvements to reduce pod battery load</li> <li>Maintain a wider correction range (10 to 20 mg/dL; 0.5 to 1.1 mmol/L) instead of a single number</li> <li>Loop Version 3, for Eros pods when used with a RileyLink Device that has a lot of communication errors, will send many repeated messages trying to resolve uncertain communications<ul> <li>Make sure your RileyLink Device is working well</li> <li>Use a 433 Mhz RileyLink for Eros Pods and ensure the antenna is not loose or pinched</li> </ul> </li> </ul>"},{"location":"troubleshooting/omnipod-faults/#replacement-pod-situations","title":"Replacement Pod Situations","text":"<p>Help Insulet Improve their Quality Control</p> <p>Insulet is aware that pods are used by the DIY community. You can be honest about your use and might receive replacement pods. If your pod fails early, it is worth informing Insulet for their troubleshooting records even if you do not get a replacement.</p> <p>You can always call Insulet tech support if a pod has a clear failure on the pod, such as:</p> <ul> <li>A cannula was sticking out when the end cap was removed.</li> <li>Visual inspection of the pod's cannula window indicating the cannula insertion was not successful.</li> <li>Leaking or kinked cannula was causing insulin delivery issues.</li> <li>The adhesive was not working properly when trying to place it on your body.</li> <li>The pod begins to scream during filling, pairing, priming or insertion</li> </ul> <p>If the pod fails during use with Loop, a replacement might still be possible. The software which communicates with the pod isn't developed or supported by Insulet. Generally speaking, asking for replacement for failed pods on the third day of pod life is a bit of a reach for the DIY community. We acknowledge that Looping may be a contributor in certain faults, especially by the third day.</p>"},{"location":"troubleshooting/overview/","title":"Troubleshooting Overview","text":"<p>After you have been using Loop for a while, there's a potential that you will run across a behavior or issue that you wonder if it is normal or intended.  When that happens, there are a few things that we'd recommend doing to resolve the issue.</p>"},{"location":"troubleshooting/overview/#use-automatic-time-on-loop-phone","title":"Use Automatic Time on Loop Phone","text":"<p>If you have modified the Loop time (not changed time zone, but turned off automatic time and manually changed the time), please read: Loop Phone Must be on Automatic Time.</p>"},{"location":"troubleshooting/overview/#gather-information","title":"Gather information","text":""},{"location":"troubleshooting/overview/#screenshots","title":"Screenshots","text":"<p>Take a screenshot of your Loop main display screen, or other screens such as the display when you touch a red loop icon that may help you or troubleshooters better understand your issue.  A lot of times a picture is worth a thousand words.  Being able to see recent Loop basal adjustments, predicted BG curve and carb entries really help fill in the full story of the current Loop status.  If you didn't manage to get a screenshot when the issue was happening, you can also go to Nightscout and scroll back over the previous 48 hours to obtain much of the same information.  Try to capture a Nightscout screen from the time period in question.</p>"},{"location":"troubleshooting/overview/#check-the-docs","title":"Check the Docs","text":"<p>Loop docs are updated regularly.  If you built your Loop app awhile ago, chances are good that more information has been updated and changed since you last read them.  Please use the search tool - if there's an error message - search for it. Scan the topics in the <code>Troubleshoot</code> tab of LoopDocs and look for a page that may be applicable.  The FAQs pages are definitely worth reviewing too.</p>"},{"location":"troubleshooting/overview/#issue-report","title":"<code>Issue Report</code>","text":"<p>Use the <code>Issue Report</code> Loop 3 / Loop 2 command under Loop Settings to generate a Loop Report. This has a lot of detailed information that may help you or a mentor understand your problem.</p> <p>The Loop Report (a text file) contains important information about actions and status that can be very useful for troubleshooters...particularly with unexplained behaviors.  The upper right corner of the Loop Report includes a button so that you can email the Loop Report to yourself (or others).</p>"},{"location":"troubleshooting/overview/#check-resources","title":"Check Resources","text":""},{"location":"troubleshooting/overview/#github-issues","title":"GitHub Issues","text":"<p>Check the current list of GitHub Loop Issues for known issues.  Many times other users have noticed the same issue previously and opened an Issue so that more information can be added to help develop a solution.  If you see the same issue has already been reported, please add it to the open issue instead of creating a new one.</p> <p>There is a nice search feature on GitHub issues - type a keyword into the box next to Filters: where it says \"is:issue is:open\" in the graphic and the display will show just those open issues that contain the keyword in the title.</p> <p></p>"},{"location":"troubleshooting/overview/#zulipchat-and-facebook","title":"Zulipchat and Facebook","text":"<p>Search in Zulipchat, Looped Facebook Group or LoopandLearn Facebook Group.  Quite possibly someone else has already posted about the same issue and perhaps a resolution has already been provided.  </p>"},{"location":"troubleshooting/overview/#ask-for-help","title":"Ask for Help","text":"<p>If you can't find any information in LoopDocs, GitHub Issues, Zulipchat, or Facebook...PLEASE post and ask for help.  GitHub Issues list is an EXCELLENT place to post issues of unexpected Loop behavior (that you believe are errant or need improvement).  However, if you are just seeking clarifications on Loop, but don't necessarily expect that there's a problem with the underlying code, then Facebook and Zulipchat are a better place.  For example, Zulipchat and Facebook are great for asking about bolus strategies or exercise target use...those aren't really code issues.</p> <p>When you post, provide a description along with any screenshots of the issue you are having and include the version of Loop you are running and the iOS on your device.  (Tap on Loop-Settings and look at the top of the screen to get the Loop version number).  You don't necessarily have to tag any particular person, the community is fairly active in replying to messages.</p> <p>Post in only one place - the same volunteers monitor various sites.</p>"},{"location":"troubleshooting/pod-pairing/","title":"Pod Pairing Failures","text":""},{"location":"troubleshooting/pod-pairing/#pod-not-found","title":"Pod Not Found","text":"<p>Have you seen an error message during the pairing process for a new pod? The most common message is <code>No pods found</code>, as shown below. Make sure no other active pods are anywhere near the phone. Reposition the pod and the phone and if using one, the RileyLink, and then try again.</p> <p></p> <p>The instructions in the graphic say fill with U-100 insulin. That is the strength of your insulin, 100 U per mL of solution. The Insulet directions say to inject between 85 and 200 U of insulin. In other words, between 0.85 and 2.0 mL of fluid.</p> <p>There have been a large number of fixes and improvements to reduce various pairing problems and to automatically recover from them when they do occur. </p> <p>Update regularly to take advantage of  improvements</p> <p>Make sure you stay on top of Loop updates to take advantage of these code improvements.  It is strongly recommended to update to a modern stable version (i.e., the current Loop release).</p>"},{"location":"troubleshooting/pod-pairing/#the-app-crashed-after-pairing-started-and-before-cannula-insertion","title":"The app crashed after pairing started and before cannula insertion","text":"<p>Sometimes the app will crash while the pod is priming. This is rare but can happen.</p> <ol> <li>Wait for the clicking to stop<ul> <li>It takes a full minute for the pod to finish priming once it starts</li> <li>If the crash occurs while the pod is still priming - it is best to wait 30 seconds after clicks stop before reopening the app</li> </ul> </li> <li>As soon as you resume the app, it will inform you that you did not complete the process<ul> <li>If you did not wait, you might be given the Insert Cannula screen before the pod is ready</li> <li>Wait 30 seconds after clicking (priming) stops before attempting to insert the cannula</li> </ul> </li> <li>In most cases, the cannula will insert as expected and you can use the pod</li> </ol>"},{"location":"troubleshooting/pod-pairing/#why-do-pod-pairings-fail","title":"Why do pod pairings fail?","text":"<p>When the pod is paired to a new device, the pod is using low-power mode. That's one reason why placement is important. And you can only have one pod that is not yet paired in the room. Try to get your new pod working before giving up and trying a new one.</p> <p>Sometimes it is the pod, so if you do need to try a new one, move the one that did not pair far away from your phone.</p> <p>Move Logically</p> <p>Let's walk through the pod pairing/replacement process from the very beginning to make sure that we have all the important steps clearly identified even before you attempt to press that Pair button.</p>"},{"location":"troubleshooting/pod-pairing/#step-0-check-your-loop-version","title":"Step 0: Check your Loop version","text":"<p>You can check which version of Loop you are running by pressing the gear icon (\u2699\ufe0f) in the bottom right-hand corner of the Loop home screen and then looking at the line under the header. </p> <p>Upgrade Loop if version prior to v3.2.x</p> <p>If you are running a version of Loop prior to v3.2.x, it is recommended to update to the current Loop release.</p>"},{"location":"troubleshooting/pod-pairing/#step-1-verify-the-rileylink-eros-pods-only","title":"Step 1: Verify the RileyLink (Eros Pods Only)","text":"<p>For DASH pods, skip ahead to Deactivate old Pod.</p> <p>For Eros pods, let's make sure everything is ok as far as the RileyLink goes:</p> <ol> <li>RileyLink is charged and nearby, and</li> <li>RileyLink has a green LED light lit (indicating a Bluetooth connection with your iPhone), and</li> <li>Try toggling the RileyLink off/on at its physical switch if the green light is not on.</li> </ol>"},{"location":"troubleshooting/pod-pairing/#step-2-deactivate-old-pod","title":"Step 2: Deactivate old Pod","text":"<p>Make sure old pod was deactivated. If you cannot communicate with the old pod in order to deactivate it, try the steps in Reset Loop to Pump Communications.</p> <p>If you were not able to deactivate the old pod, you need to Discard the old pod. After several failures to deactivate, Loop offers to Discard the pod. This just tells Loop that the pod is no longer connected to the app.</p> <p>You must still get that pod (that would not deactivate) away from your vicinity. Put it in a microwave or throw it over the fence into the neighbor's backyard (kidding, obviously...but outside trashcan is a good idea).</p> <p>Eros Pods Only: If you had issues deactivating your pod, review Step 1.</p>"},{"location":"troubleshooting/pod-pairing/#step-3-start-new-pairing-process","title":"Step 3: Start new pairing process","text":"<p>You've deactivated your old pod successfully...great! As the first part of pairing a new pod, Loop will prompt you to fill the new pod with insulin. Once a new pod is powered-up by the insertion of at least 85 units of insulin, the pod will emit reminder beeps every 5 or 10 minutes until the entire pod pairing process has completed. This pairing process must be completed within 60 minutes of beeps starting, or the pod will give up and never pair. These activation reminder beeps do not actually indicate that any pod communication is being attempted, just that the activation has not yet been completed and your 60 minute timer is counting down.</p> <p>Max Pod fill is 200 U</p> <p>If you put more than 200 U in a pod, you will probably get a pod fault during priming.</p> <p>Hopefully, your pod pairing continues uneventfully at this point. You'll press the <code>Pair</code> button and the pod pairs, primes, and the cannula insertion is successful. BUT, if not...you'll want to keep reading Steps 4-5 to find out how to recover.</p> <p>One beeping pod at a time, please</p> <p>It is very important to not have two pods giving reminder beeps at the same time as this can cause even more confusion for you and for Loop. Continue to work with a single pod at a time, retrying the <code>Pair</code> attempts multiple times if needed as described in Step 4. </p> <p>If you cannot get the pairing to complete with the single beeping pod (after trying the procedures described below a few times with multiple <code>Pair</code> attempts during each try), then you should completely abandon that pod before attempting to use another pod. \"Completely abandon\" means move that failed-to-pair-no-matter-what-you-tried pod far, far away from you or put it in a not-turned-on-but-door-is-closed microwave. You do not want that beeping-but-not-pairing pod to be able to plague your next pod's communications with Loop during the fresh pairing process.</p>"},{"location":"troubleshooting/pod-pairing/#step-4-check-the-pod-placement","title":"Step 4: Check the Pod Placement","text":"<p>Pod pairing failed?</p> <p>Ok, so you've pressed that Pair button and received an error message like shown at the top of the web page? It's time to start the stepwise process of seeing if we can get it to recover successfully.</p>"},{"location":"troubleshooting/pod-pairing/#dash","title":"DASH","text":"<p>The DASH pod can be left in the tray and placed right next to the phone. If the first attempt to pair shows the \"No pods found\" message, place the tray on top of the phone or move the pod a little further away from the phone, then try again.</p> <p>If you see the Pairing exception message as shown in the graphic below, you need to toggle Bluetooth on the phone:</p> <ul> <li>In your phone settings, turn off Bluetooth</li> <li>Turn on Bluetooth</li> <li>Try again</li> </ul> <p></p> <p>Still not working, reboot the phone and try again.</p> <p>If none of those steps work, it may be the pod. But try everything one more time before giving up.</p>"},{"location":"troubleshooting/pod-pairing/#eros-with-rileylink","title":"Eros with RileyLink","text":"<p>The placement of the pod and the RileyLink relative to each other is a critical variable because the pod operates in a low-power radio mode during pairing which can lead to a number of potential faulty and half-paired pod situations, particularly with earlier versions of Loop.</p> <p>How close should they be? Most people assume \"the closer the better\", but it has been measured that if the RileyLink and pod are too close together, the RileyLink may not be able to pick up the pairing response. The current recommendation is for the RileyLink to be placed a few inches to the side of the pod being paired.</p> <p></p> <p>If Pair fails, move a bit and RETRY</p> <ul> <li>If the Pair operation is not succeeding, try repositioning the relative placement of the RileyLink and the pod multiple times. A little closer together if you had them far apart? A bit farther apart if they were really close? RileyLink on its side? Try standing it up with the antenna pointed to the ceiling.</li> <li>If the pairing is still unsuccessful with multiple repositioning attempts, move yourself, the RileyLink, and the pod to another area/room (preferably away from other radio frequency signals that might be interfering), and try Pair again. Again don't be shy to try repositioning the RileyLink and pod's relative position, if needed, in this new area/room too.</li> <li>If you have another available RileyLink, you can also try pairing using that RileyLink instead.</li> </ul>"},{"location":"troubleshooting/pod-pairing/#step-5-eros-pod-pairing-recovery","title":"Step 5: Eros Pod Pairing Recovery","text":"<p>When you have a pod that continues to appear non-responsive after several retried Pair attempts, it may be possible to recover by forcing Loop to start the pairing process from the beginning.</p> <p>This section is for Eros pods</p> <ul> <li>This section was last updated for Loop version 2.2.x</li> <li>The error messages may be different and some steps might not be effective</li> <li>This section remains for reference, with no guarantees.</li> </ul> <p>To start we will have to press the Cancel button in the upper right corner of the pairing screen. Depending on which state the pod is stuck at in the pairing process...you'll see one of two screens after you select the Cancel button. Follow the directions (Step 5A vs Step 5B) for whichever screen corresponds to what you see after pressing Cancel.</p> <ul> <li>Step 5A \"<code>Switch from Omnipod Pumps</code>\":     You press <code>Cancel</code> and Loop will send you back to the Pod Settings screen to do the \"<code>Switch from Omnipod Pumps</code>\" method</li> <li>Step 5B \"Deactivate\":     You press <code>Cancel</code> and Loop will display a screen giving the option to \"<code>Deactivate</code>\"</li> </ul>"},{"location":"troubleshooting/pod-pairing/#step-5a-switch-from-omnipod-pumps","title":"Step 5A \"Switch from Omnipod Pumps\"","text":"<p>If you press the <code>Cancel</code> button and see a screen like below, you're going to select Switch from Omnipod Pumps in red. While this appears to confirm that you want to stop using the Omnipod, we will be adding pods back soon. Don't worry.</p> <p></p> <p>Don't fret. None of your Loop settings including the basal schedule and delivery limits, will be lost deleting the Omnipod pump. Select <code>Delete Omnipod</code> to proceed which will take you back to the Loop home screen.  From here, select the gear icon at the bottom right to go to the Loop <code>\u2699\ufe0f Settings</code> page. Then select <code>Add Pump</code> in blue and then select <code>Omnipod</code> from the <code>Add Pump</code> list displayed.</p> <p></p> <p>Verify that the green LED on the RileyLink goes on and off as you touch the switch for RileyLink you are using indicating a successful Bluetooth connection between the RileyLink and your iPhone. Leave the RileyLink enabled with its green LED and slider turned on, and then touch the Continue button on the bottom. The Pod Settings screen should have the previous Basal Rates and Delivery Limits in effect from your previous run which can be verified at this time. Once ready, select <code>Continue</code> at the bottom of the screen.</p> <p></p> <p>Finally, you will be back to the <code>Pod Pairing</code> screen.</p> <p></p> <p>Instead of filling a new pod with insulin, attempt to pair again using the original pod which was previously filled but unable to complete the pairing process successfully. That pod should still be occasionally giving reminder beeps. Place the RileyLink a few inches to the side of the pod and press the <code>Pair</code> button at the bottom of the screen and hopefully, Loop will be able to successfully pair this time after starting from a fresh slate. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally.</p>"},{"location":"troubleshooting/pod-pairing/#step-5b-deactivate-pod","title":"Step 5B \"Deactivate pod\"","text":"<p>If you press the Cancel button and see an option for \"<code>Deactivate pod</code>\", we're going to do a little differently than Step 5A.</p> <p>You might lose your pod by attempting this procedure</p> <p>This is a point of no return for certain pod pairing situations and it is possible that the pod will be lost by attempting this procedure depending on the pod state. Some will recover fine, others may not. Since you can't know in advance if you might lose the pod, it is important to have already exhausted other possibilities described above in Steps 1-4 to try pairing. Specifically, (1) attempting to pair several times using varied relative positions of the RileyLink and pod (2) trying the pairing again but in a different room/location that might have less wireless interference, and (3) verifying your RileyLink is connected and functioning correctly.</p> <p>For this next part, we want to make sure that the pod doesn't accidentally receive the deactivation command we are about to use. We want Loop to do the command...we just really don't want the pod to hear it. There are two ways we can keep the pod from hearing it, either (1) prevent the RileyLink from hearing Loop's command (and thus the command cannot reach the pod) or (2) prevent the pod from hearing the command from RileyLink. To accomplish our keep-the-pod-ignorant goal, you can try either option like so:</p> <ol> <li>Prevent RileyLink from hearing: Turn your RileyLink off temporarily at its physical switch. Some people worry about accidentally breaking their RileyLink switch, and if that's you...you can instead put the RileyLink far away from your iPhone or put the RileyLink in the microwave. That will keep the RileyLink from hearing the Loop's deactivate pod command. If RileyLink can't hear it, then your pod won't receive it.</li> <li>Prevent the pod from hearing: Move the beeping pod to a place where the pod is incapable of hearing the command. There are several options depending on what works for you:<ul> <li>Put the beeping pod far away...\"shouldn't be able to hear those beeps anymore\" kind of distance.</li> <li>Put the pod in a not-turned-on-but-door-is-closed microwave.</li> <li>Put the pod in a Faraday bag, if you own one.</li> </ul> </li> </ol> <p>Ok. Have the pod nice and ignorant? Good. Now press the \"<code>Deactivate Pod</code>\" button. It will take a few attempts, and you will see some failure messages about how the deactivation failed (of course it did...we hid the pod!) Eventually, you'll be given a \"<code>Continue</code>\" button that you'll want to use.</p> <p></p> <p>Press the \"<code>Continue</code>\" button. The instructions start with \"<code>fill a new pod with insulin</code>\"...BUT DO NOT!  Instead, bring that beeping pod back to the hearing range. Turn that RileyLink back on if you turned it off. Once you get the RileyLink on and the pod back in range, you'll just press the Pair button and hopefully you'll find success with the process. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally.</p> <p></p>"},{"location":"troubleshooting/pod-pairing/#step-6-help-improve-pod-pairing-process","title":"Step 6: Help improve pod pairing process","text":"<p>To help fix pairing bugs, some improvements have also been made in our ability to save the communications between the pods and Loop app during the pairing process. So, please help us leverage these new improvements and better squash bugs.</p> <p>If you run into any pairing problems, which required Step 5A or Step 5B to be able to pair, or you had a pod that had to be abandoned, it would be helpful to generate an \"Issue Report\" after you finally get a pod paired (whether it was the original pod or if a different pod) and then post the resulting \"Loop Report\" on Zulipchat here with a short explanation of what happened.</p>"},{"location":"troubleshooting/pod-pairing/#what-about-other-pod-start-up-failures","title":"What about other pod start-up failures?","text":"<p>If you have a pod that has already started the priming operation and then has problems either finishing the priming operation or the cannula insertion, review the app crashed after pairing started and before cannula insertion to see if you can save the pod.</p> <p>If a pod begins to alarm (has a fault) during priming or cannula insertion, the pod is no good and it should be deactivated and disposed of properly.</p>"},{"location":"troubleshooting/pod-pairing/#what-about-that-insulin","title":"What about that insulin?","text":"<p>If you have the misfortune of losing a pod during pairing, you can opt to not waste the insulin in that pod. Simply use the same syringe and same fill port on the pod to suck the insulin OUT of the loser pod.</p> <p>If you do that, good practice is to make sure that you get that loser pod far away from the process as you go forward. Mark a big \"X\" on the failed pod and put it in a microwave, or very far away from you, so that it can't interfere with subsequent pod pairing attempts.</p>"},{"location":"troubleshooting/pump-errors/","title":"MDT Pump Errors","text":""},{"location":"troubleshooting/pump-errors/#medtronic-pump-errors","title":"Medtronic Pump Errors","text":"<p>The Medtronic pumps are used and typically not under warranty.  Use this section at your own risk.  However, that said, some of the most common pump errors are repairable, or not actually a real problem.</p>"},{"location":"troubleshooting/pump-errors/#a21-error","title":"A21 error","text":"<p>This error message is common when a pump has been stored for some time without a battery.  Most pumps will show an A21 error when you first purchase them on the used market.  Not a big deal.  Press the down arrow (it also has the symbol of a light bulb on it) and the pump screen message will scroll down to let you know how to clear that error message (press ESC then ACT).  If the message is coming up on a pump that hasn't been in storage, pull the battery out and replace it with a fresh, new battery.  Chances are your battery or battery cap is old.  Look for signs of dirt or rust in the battery cap, give it a little cleaning.</p> <p>Display Tip</p> <p>When the pump screen has a little black/white bar on the right side, that is a scroll bar.  Use the arrow keys on the right of the pump screen to scroll and see the additional information.</p> <p></p>"},{"location":"troubleshooting/pump-errors/#batt-out-limit","title":"Batt Out Limit","text":"<p>This error message \"battery out of limits\" has to do with the internal pump battery, not the AAA battery you replace.  The internal battery cannot be replaced, and unfortunately also has a finite lifespan.  The error message is more of an annoyance than a true problem.  You can try to change the AAA battery faster.  But, the worst-case scenario is that you'll have to re-enter the time and date when you get this message more often.  (Don't forget to use RileyLink to set the time after you get this message.)</p> <p></p>"},{"location":"troubleshooting/pump-errors/#button-error","title":"Button Error","text":"<p>The Button Error message usually happens from water, moisture, or dust getting under the pump's button pad and causing button(s) to fail.  The fix luckily is quite straight-forward and takes less than 30 minutes.  Check out the fix here for a YouTube video or here for photo gallery. There is also a detailed page in the OpenAPS docs.</p> <p></p> <p>The solution involves simply prying up the button pad's sticker face to expose the layers beneath.</p> <p></p> <p>You can see some evidence of crud/rust on the underside of this button pad which caused the button error.</p> <p></p> <p>After you finish your fix, another excellent idea is to make sure you add a length of clear packing tape across the front face of the pump to prevent errant water or dirt from having easy access to the button pad seams.</p> <p></p>"},{"location":"troubleshooting/pump-errors/#crackmissing-piece-repairs","title":"Crack/Missing Piece Repairs","text":"<p>Another common issue on these Medtronic pumps are cracks and/or missing bits of plastic near the battery cap or reservoir sleeve. You can repair these fairly easily. For filling small cracks, Testor's plastic cement or Gorilla epoxy are good choices.</p> <p>For more extensive repairs to replace missing chunks of plastic, Gorilla epoxy or Sugru are excellent choices.  </p> <p>You can use teflon thread tape on the battery cap to make sure the epoxy or Sugru don't stick to the battery cap, but still recreate the threads.  The first photos are of a Sugru repair and second set of photos are Gorilla epoxy repair.</p> <p></p> <p></p>"},{"location":"troubleshooting/pump-errors/#motor-error","title":"Motor error","text":"<p>Often a motor error is the result of a poorly seated reservoir or tubing cap.  If you get a motor error, the first thing you should do is detach from your infusion site.  Remove and reseat the reservoir, prime again, and see if the motor error resolves.  If it does not, try replacing the tubing cap on the reservoir (new tubing).  If that does not resolve the motor error, also replace the entire reservoir.</p> <p></p>"},{"location":"troubleshooting/pump-errors/#a33-error","title":"A33 error","text":"<p>Safety warning</p> <p>If you get this error, DO NOT push on the bulged-out end cap.  Always detach your tubing from your infusion set before addressing this error message.  If you push on the end cap in an attempt to get it back flush, you may deliver a dangerous amount of insulin mistakenly.</p> <p>This error is a bit more involved to repair.  The problem is that there is a loose drive support cap.  Most of the time this error message will appear during a priming event as the end cap of the drive will slip, releasing the ability of the reservoir plunger to get pressure to deliver insulin.  The pump senses the lack of pressure and delivers the A33 error.</p> <p></p> <p></p> <p>The solution is to UNHOOK from your site.  See the warning above.  Remove the reservoir and put your finger inside the reservoir sleeve.  Push on the drive so that the end cap is pushed out the most possible.  This will give you the most surface area possible to place the super glue GEL that you will use.  (don't use regular super glue...it must be gel.)  Remove the sticker that covers the end cap, and save it for later because you can reattach it when the repair is completed.</p> <p>With the end cap pushed out, take some glue gel with the toothpick and apply it on the outside of the popped-out cap. Be generous cause you can do this only once. Once you are done take a napkin and press hard the cap toward the pump so it can go back inside and keep it pressed for a few seconds. Then remove all the small parts of the napkin that has glued to the pump. Leave the pump to dry for about 10-15 minutes.</p> <p></p> <p>Now to test whether the pump was glued well. You have already waited about 10-15 minutes so put your finger back in and press hard the plunger.  If you glued it well, the end cap will not move.  If the cap goes out again, you have to glue it one more time. If all looks well, put some glue back on top of the pump cap and reattach the sticker that was removed to start.</p>"},{"location":"troubleshooting/pump-errors/#a32-and-e22-error-loop","title":"A32 and E22 error loop","text":"<p>From what we know, this set of error codes seems like a pump killer.  A call to Medtronic support gave this less-than-hopeful information:</p> <p>A32 - failure of flash memory E22 - software re-installation is necessary</p> <p>We don't have any reports of a good fix for these error codes.  When seen, usually the E22 error comes up and as soon as it is cleared, the A32 error comes up.  And the loop continues with a pump restart.</p>"},{"location":"troubleshooting/red-loop/","title":"Red Loop","text":""},{"location":"troubleshooting/red-loop/#red-loop-overview","title":"Red Loop Overview","text":"<p>This page provides help if your Loop icon is red and Loop is not working or only working sometimes.</p> <p>With Loop 3 - clicking on the Loop icon on the main screen tells you the last time Loop completed, but you need to look at the Pump Status Icon and the Glucose Status Icon for more information. For example, when Glucose is stale (more than 15 minutes old), the Glucose icon shows \"- - -\". For example, when the Pump is having a communication issue, you will see a No Signal icon.</p> <p>With Loop 2.2.x - clicking on the Loop icon on the main screen provides an error message. If you understand it, great...that should help you fix the problem. If not, grab a screenshot so you can ask for help from a mentor.</p> <p>Omnipod Users</p> <p>Do not pull a pod when there is a red loop. </p> <ul> <li>Usually the problem is with Loop, not the pod</li> <li>A new pod won't fix a Loop (Bluetooth or RileyLink communication problem)</li> </ul> <p>There are a few times when it is the pod - but try all the steps on this page first.</p> <p>Medtronic Users</p> <p>You must select Insulin Type on your pump settings screen after updating from Loop 2 to Loop 3 and completing the onboarding. Without an insulin type, closed loop will not work.</p> <p>A Red Loop icon means that Loop has not completed a cycle for 15-minutes or more and this is normally because of a communication break-down with one of the systems listed below.</p>"},{"location":"troubleshooting/red-loop/#typical-causes-for-red-loop","title":"Typical Causes for Red Loop","text":"<p>Some of the reasons listed below cause Loop to go Red and stay Red until you fix it.  Others will cause intermittent Red Loops that come and go.</p> <ol> <li>Reset Loop-to-Pump Communications</li> <li>Continuous Glucose Monitor (CGM)</li> <li>Apple Health</li> <li>Background App Refresh is not enabled for Phone, Loop and/or CGM</li> <li>Nightscout (optional service)</li> <li>Phone Storage is Full</li> <li>Lost Pod Information If running Loop 2.2.x or FreeAPS, read this section first</li> </ol>"},{"location":"troubleshooting/red-loop/#lost-pod-information","title":"Lost Pod Information","text":"<p>We think this was fixed with Loop 3. If you are running Loop 2.2.x or FreeAPS:</p> <ul> <li>Before attempting to resolve a red-loop with a phone reboot; please review this section. It can affect the stored CGM information as well as the stored pump information.</li> </ul> <p>Be Careful with Phone Reboots with Loop 2 or FreeAPS</p> <p>If you are using an Omnipod, then before rebooting the phone, make sure it is absolutely necessary - try all other methods first. Be prepared to check that the pod is still communicating with Loop following the reboot. If this rare event happens to you, please report it, save and post a Loop Report and be prepared to put on a new pod and possibly re-enter your CGM information.</p> <p>This could happen to someone using a Medtronic pump, but the consequence is less of a concern because the pump information is not modified as frequently as for Omnipod users.</p>"},{"location":"troubleshooting/red-loop/#reset-loop-to-pump-communications","title":"Reset Loop-to-Pump Communications","text":"<p>If the indication is one of these (or something similar), it can probably be fixed by resetting the Loop-to-Pump communication. For DASH, this is Bluetooth only. For Eros or Medtronic, it is a combination of Bluetooth and the RileyLink compatible device.</p> <ul> <li>pump history is too old</li> <li>no rileylink could be found</li> <li>pod cannot be reached</li> <li>the <code>Unable to Reach Pump</code> modal screen is visible</li> </ul> <p>Do these steps until one of them fixes the issue:</p> <ul> <li>Turn off Bluetooth on your phone and then turn it right back on again.</li> <li>Close your Loop app (upswiping it in the iPhone's app selector) and reopen it.</li> <li> <p>Eros or Medtronic: Turn your RileyLink off/on at its physical power switch located on the side of the RileyLink.</p> <ul> <li>If you have a different device, make sure you know how to power-cycle the device.</li> <li>For RileyLink (without wireless charging) use a small pointy object to carefully move the slider away from the charging port and then back up towards the charging port. A paperclip on the keyring can provide the help you need to reach the switch in the recessed case, and double as a screaming pod silencer tool.</li> </ul> <p></p> </li> </ul> <p>This should restore a green Loop within 5 minutes. If you're impatient and are using pods, you can tap on Play Beeps. With Medtronic, you can attempt to suspend/resume the pump. If this is successful, you've established communication again.</p> <p>Last thing to try is:</p>"},{"location":"troubleshooting/red-loop/#power-cycle-your-phone","title":"Power cycle your phone.","text":"<ul> <li>This suggestion is last because of a rare, intermittent issue (with iOS 15 and Loop 2.2.x) in which power cycling the phone does not load the latest version of Loop information</li> <li>This was fixed with Loop 3</li> <li>Click on the Lost Pod Information link for more information</li> </ul> <p>If this was not successful, check out the Pump is Not Responding section.</p>"},{"location":"troubleshooting/red-loop/#cgm-values-are-not-being-collected-by-loop","title":"CGM Values Are Not Being Collected by Loop","text":""},{"location":"troubleshooting/red-loop/#new-transmitter","title":"New Transmitter","text":"<p>If you recently changed a transmitter, you need to also update your Loop settings to reflect the new transmitter ID. Go to the CGM section of Loop settings and <code>Delete CGM</code> (it's a button on the bottom of that page). Then use the <code>Add CGM</code> in Loop settings to include the new transmitter ID.</p> <p>If you fail to update your Transmitter ID in Loop and you also left Share Credentials in Loop (not recommended), you will see messages such as: <code>Failed to decode SGV</code> when the Share server cannot be reached. That's your notice to update the Transmitter ID (or if you think you already did - check for typos in data entry).</p>"},{"location":"troubleshooting/red-loop/#delete-share-account","title":"Delete Share Account","text":"<p>Finally, we see a lot of errors reported because people have problems with their Share server information in Loop app. Please delete your Share account information from within Loop settings. In other words, the credentials portion of the Share account info, as shown in the screenshot below, should say <code>Tap to Set</code> and not have your account info. It is unnecessary to have this portion filled out as local, non-internet spying of a transmitter is the preferred CGM source anyways. In fact, by leaving this information out, it will help you remember to change your transmitter ID when you change transmitters because CGM data won't appear in Loop. By not including Share account in Loop, you will prevent yourself from accidentally becoming internet dependent.</p> <p></p>"},{"location":"troubleshooting/red-loop/#firefly-style-transmitter","title":"Firefly-style Transmitter","text":"<p>Leaving this in for historical interest only. It illustrates the need to keep Loop up-to-date.  Who knows what the next hardware change will be. Enough time has passed that everyone's Loop code should be newer.</p> <p>In July 2019, we started to see a new style of Dexcom G6 transmitters on the market. These new transmitters required a rework of some of the Loop's code to continue to \"spy\" on the transmitter. Without that update, your Loop can not get CGM data unless it is pulling from Share servers (which is not a recommended mode of operation). So, download fresh code for your Loop app if you have a new transmitter type and haven't downloaded since July 2019.</p>"},{"location":"troubleshooting/red-loop/#apple-health","title":"Apple Health","text":"<p>Make sure both the Loop app and the Dexcom app have permission to write to Apple Health by checking the Apple Health Permissions</p> <p>In the early days of iOS 14, there were problems with the Apple HealthKit.  The consequence is that some people's database was corrupted.  If you tap on the Heart Icon on your phone to go to Apple Health and display data and it is very slow to respond - or never responds, you probably need to get rid of a corrupted database and start fresh.  Be sure to go Open Loop if this is needed. Please get help from your favorite Loop Social Media group or from Apple support in this case.</p>"},{"location":"troubleshooting/red-loop/#background-app-refresh","title":"Background App Refresh","text":"<p>If you have not enabled background app refresh on your phone, then Loop is likely to stop communicating as soon as the phone is locked.</p> <ol> <li>Phone Settings -&gt; General -&gt; Background App Refresh -&gt; enable</li> <li>Then scroll down until you find Loop and make sure the green slider is enabled</li> <li>While you are there - check your CGM app as well</li> </ol> <p>For iOS 15, there is a new feature described by Dexcom</p> <ol> <li>Phone Settings -&gt; Screen Time -&gt; choose Always Allowed -&gt; select an app, tap the plus icon to add to Always Allowed list<ul> <li>add Dexcom</li> <li>add Loop</li> </ul> </li> </ol>"},{"location":"troubleshooting/red-loop/#nightscout","title":"Nightscout","text":"<p>If you added your Nightscout URL to Loop and are uploading information to Nightscout, make sure the communication is working properly.  For short-term interruptions, Loop will store information to upload to Nightscout later.  But if too much information builds up, Loop can slow down and in some cases have a Red Loop.</p> <ol> <li>Check to see that internet service (WiFi or Cell) is operating</li> <li>Check that Nightscout database size isn't full (more details below)</li> <li>If Red Loops are resolved by removing the Nightscout URL from Loop; you need to figure out if it's the connection or the database or some other issue</li> </ol> <p>If you opted for the free DIY Nightscout, you will need to clean your database once or twice a year. Follow the Nightscout Database cleanup steps. Make sure you are periodically checking your database size (and that the dbsize keyword is in your ENABLE list and cleaning it.</p>"},{"location":"troubleshooting/red-loop/#phone-storage-is-full","title":"Phone Storage is Full","text":"<p>This was reported by a user in November 2021. His phone storage was almost full and the reported error messages for Loop was:</p> <ul> <li><code>Sqlite Error: A Sqlite Error Occurred: (13) Database or Disk is Full</code></li> </ul> <p>The error message from Dexcom was not as helpful.  If you see this, check your phone storage:</p> <ul> <li><code>The Dexcom G6 app has stopped working. Please delete the app from your device and redownload it from the App Store</code></li> </ul> <p>Solution: clear up space on your phone.</p>"},{"location":"troubleshooting/red-loop/#other-reasons-for-red-loop","title":"Other Reasons for Red Loop","text":""},{"location":"troubleshooting/red-loop/#pump-is-not-responding","title":"Pump is Not Responding","text":"<p>The first step is to make sure the phone and if needed, the RileyLink compatible device, is not so far away from the pump or pod that they cannot communicate. Assuming you've addressed this, then you can move on to other steps.</p> <p>Omnipod Loopers:</p> <p>If the pod is screaming, it should still be able to communicate with Loop, but sometimes you need to restore communication so you can deactivate the pod and quiet it. Follow the steps below, just do it with the added \"noise\".</p> <p>The Reset Loop-to-Pump Communications steps almost always fix the issue. It is possible that the pod really had stopped communicating, but try everything else before burning another pod.</p> <p>Medtronic Loopers: If the pump is not responding with \"decoding\" errors or various other messages about pump responses. Try the following:</p> <ol> <li>Change pump battery. Low pump battery will cause radio communications to fail.</li> <li>Use the <code>Change Time</code> command in the pump menu to update the pump's clock. If you've accidentally changed the pump's time in the pump itself or if the pump time has drifted, this will get the Loop app and pump time back in sync.</li> <li>If using a x23 or x54 pump, try deleting all the IDs under the \"Other Devices\" submenu in the pump's \"Connect Devices\" menu.  Then go to the RileyLink menu and use the MySentry pairing command to get a fresh ID issued. Follow the directions listed in the MySentry pairing command's screen to scan for devices. A fresh ID can help prevent recurring red loops for x23 and x54 users, particularly if they started to occur after a recent Loop update.</li> <li>Make sure the following are checked in the pump:<ul> <li>Your pump cannot be suspended.  Resume insulin deliveries.</li> <li>Temp basal type must be set to unit/hour, not percent, in pump's Basal menu.</li> </ul> </li> </ol>"},{"location":"troubleshooting/red-loop/#resolving-frequent-red-loops","title":"Resolving Frequent Red Loops","text":"<p>Here's some things to check if you have frequent red loops:</p> <ul> <li> <p>Try deleting your Nightscout account from Loop settings and see if your Loop stops having red loops. If it does, then you'll need to assess what's going wrong in your Nightscout site and fix it. Most of the time, your database is getting too big and cleanup is required.</p> </li> <li> <p>Is your RileyLink battery plugged in all the way on the board? One Looper recently posted that her RileyLink battery connection needed to be reseated after several years of service.</p> </li> <li> <p>Has your RL been fully charged? Try charging your RL for an hour or two, make sure the red light comes on while charging. Try a new charger or cable.</p> </li> <li> <p>Oddly, some people have found that turning off Siri integrations for Loop and Dexcom apps in your iPhone settings has helped. This may be coincidental, but if you're still having trouble, you might want to try it.</p> </li> <li> <p>Check for sources of wireless interference. If you have a certain environment that seems to have more drops than others, it is likely that there is a source of wireless communication interfering with your Loop. Lots of Medtronic Loopers in a room together will often interfere with each other and get \"cross-talk\" red loop error messages. If it is a bedroom at night causing problems, try moving other wireless devices such as routers or baby monitors farther away from where you and your RileyLink compatible device.</p> </li> <li> <p>In some cases, you may need to clean out Apple Health, or even reset your phone to factory defaults and reload all your personal information and then rebuild the Loop app. Before you do this, you may want to Post for Help (next section).</p> </li> </ul>"},{"location":"troubleshooting/red-loop/#posting-for-help","title":"Posting for Help","text":"<p>Before you post on Looped group for help with a red loop, please make sure you've reset the RileyLink / Phone.</p> <p>Before you post for help, please also check your Nightscout status including database size. This step is often overlooked and yet solves a lot of problems.</p> <p>When posting for help, include two screenshots of Loop's main screen; one with the red loop's error message and the other just the plain Loop main screen. Include a detailed description of what you have tried doing from the troubleshooting list above. For example, state if you've double checked the transmitter ID, deleted the Share account info from Loop settings so that we can rule out some of the causes of CGM issues.</p>"},{"location":"troubleshooting/red-loop/#what-else","title":"What Else?","text":"<p>There are a few other things to consider:</p> <ul> <li>RileyLink is broken</li> <li>Battery has failed</li> <li>OrangeLink has firmware 2.6</li> </ul>"},{"location":"troubleshooting/red-loop/#rileylink-is-broken","title":"RileyLink is Broken","text":"<p>How can you tell if your RileyLink has a problem? The answer is mostly within the LED lights that display on the board. Some information is listed below, but also review the FAQs at getrileylink.org.</p> <p>If you have a different RileyLink compatible device, please check the appropriate site for troubleshooting help.</p> <p>Red light: comes on during charging and will turn off/on periodically, while still plugged in, after charge is complete.</p> <p>Green light: Indicates an active BT connection with the phone. You want the green light to stay on all the time on the RileyLink. If the green light is not on, then make sure your iPhone's bluetooth is still switched on.</p> <p>Blue light: The blue light will flash off/on periodically when the RileyLink and pump are actively communicating...it should NOT be always on. If your blue light is stuck on, that is an indication of a problem on the board. Try looking for signs of damage or debris that may be causing a short on the board. Clean the board with rubbing alcohol (unplug the battery first). If you still can't get the blue light off, then contact GetRileyLink for help or check out RileyLink Compatible Devices for replacement options.</p>"},{"location":"troubleshooting/red-loop/#battery-has-failed","title":"Battery has Failed","text":"<p>Both RileyLink and EmaLink use LiPo batteries.  If they stop holding charge for as long as they used to, or if they swell (often first noticed as bowing of the case), stop using the battery and replace it as soon as possible.</p> <p>OrangeLink uses regular batteries, so just change them out.</p>"},{"location":"troubleshooting/red-loop/#orangelink-firmware","title":"OrangeLink Firmware","text":"<p>One version of the OrangeLine firmware did not communicate well with Loop (or Android APS).</p> <p>If you have FW 2.6 on your OrangeLink or OrangeLink Pro, please upgrade to FW 3.2 as soon as possible.</p>"},{"location":"version/build-dev/","title":"Build Dev","text":""},{"location":"version/build-dev/#building-development-code","title":"Building Development Code","text":"<p>No matter the method used to build Loop-dev: GitHub actions or git commands, you are testing development code. Please read this link now before continuing.</p> <ul> <li>What's going on in the <code>dev branch</code></li> </ul> <p>There are several methods to build Loop-dev. First review the general information on this page then choose the link for the method of your choice:</p>"},{"location":"version/build-dev/#update-frequently","title":"Update Frequently","text":"<p>While Loop-dev is under active development, you should monitor zulipchat and update frequently. Sometimes the <code>dev</code> branch is quiet for a month or more and other times it gets updated daily. Please pay attention.</p> <p>Checking for updates every week is a good idea. Also - subscribe to all the streams on Loop Zulipchat to make sure you don't miss critical information.</p>"},{"location":"version/build-dev/#loop-dev-version","title":"Loop-dev Version","text":"<p>The version of code that shows up under the Loop Settings screen does not change when the <code>dev branch</code> is modified.</p> <p>If you need help with your app, the mentors need more information. Please issue a Loop Report when asking for help. Refer to Support for how to issue a Loop Report. If you want to keep track yourself, refer to Identify Loop-dev Version</p> <ul> <li><code>Loop</code> Version Numbering</li> </ul>"},{"location":"version/build-dev/#identify-loop-dev-version","title":"Identify Loop-dev Version","text":"<p>The version of code that shows up under the Loop Settings screen will remain fixed until Loop-dev is released. In order to identify which version of dev you have on your phone, you need the commit.</p> <p>The commit is identified by a 7-digit alphanumeric code.  That code was also appended to the folder name of the downloaded code under Downloads/BuildLoop as shown in the graphic above.  You can use finder to view the folder name after the script completes. It also appears in the Loop Report, refer to Support for instructions on issuing a Loop Report. After you issue the Loop Report, look at the workspaceGitRevision number near the beginning of the report.</p>"},{"location":"version/build-dev/#build-loop-dev","title":"Build <code>Loop</code> <code>dev</code>","text":"<ol> <li>For the Build with Browser method<ul> <li>Build dev with Browser</li> </ul> </li> <li>For the Build with Mac method:<ul> <li>Build dev with Mac</li> </ul> </li> </ol>"},{"location":"version/build-time-flag/","title":"Build-Time Flag","text":""},{"location":"version/build-time-flag/#overview","title":"Overview","text":"<p>Build-time features are not available with Loop 2.2.x.</p> <p>With Loop 3, some features are enabled or disabled by default but can be modified by adding a \"flag\" in the LoopConfigOverride.xcconfig file.</p> <p>If you use Build with Browser, these build-time features can be added to your copy of the LoopConfigOverride.xcconfig file. Use the pencil icon in that file on your copy of LoopWorkspace and then commit the change.</p> <p>If you use the Build with Mac Method, this is the same file used to automatically sign all your targets. You can edit the version in your LoopWorkspace folder (it shows up as the top item in the Xcode folder view) - or - if you use the build script, you can edit the copy found in ~/Downloads/BuildLoop after the first time you use the script. For that second case, the \"flags\" you add in ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig are applied to all downloads created with the script.</p> <p>These flags are always upper case with underscore separating words for clarity, for example <code>MY_EXAMPLE_FLAG</code>. If you have more than one flag, they are separated by a space. Do not enter a line break between selections; in other words, do not hit return or enter. Xcode will automatically word-wrap the line for clarity. All values need to be on a single line.</p> <p>New Instructions</p> <p>The instructions are more robust than earlier instructions that had you editing a line instead of adding new ones.</p> <p>Copy the text below, add it to the end of your LoopConfigOverride.xcconfig file and then insert the desired flags in place of <code>MY_EXAMPLE_FLAG</code>. If you want more than one flag, separate them by a space.</p> Lines to add to end of file<pre><code>// Add Build-Time features to compilation conditions\nSWIFT_ACTIVE_COMPILATION_CONDITIONS = $(SWIFT_ACTIVE_COMPILATION_CONDITIONS) MY_EXAMPLE_FLAG\n</code></pre> <p>Code Before Modification</p> <pre><code>// Put your team id here for signing\n//LOOP_DEVELOPMENT_TEAM = UY678SP37Q\n</code></pre> <p>The example below is for someone who is using a Free Developer ID - which does not support Siri.</p> <p>Code After Modification</p> <pre><code>// Put your team id here for signing\n//LOOP_DEVELOPMENT_TEAM = UY678SP37Q\n\n// Add Build-Time features to compilation conditions\nSWIFT_ACTIVE_COMPILATION_CONDITIONS = $(SWIFT_ACTIVE_COMPILATION_CONDITIONS) SIRI_DISABLED\n</code></pre> <p>List of some flags and what they do:</p> FLAG PURPOSE SIRI_DISABLED Required to build Loop from Xcode with a free developer account ADULT_CHILD_INSULIN_MODEL_SELECTION_ENABLED The choice for Child Model is enabled in Therapy Settings. Please read Enable Child Model. REMOTE_OVERRIDES_DISABLED Remote commands: override, carbs or boluses will not be accepted even if all the Remote Command requirements are configuredIf you do configure this and later try to set up remote commands, they will not work and there is no error message. Remote Errors: Loop REMOTE_OVERRIDES_DISABLED OBSERVE_HEALTH_KIT_CARB_SAMPLES_FROM_OTHER_APPS_ENABLED Turns on ability for Loop to read third party carb entries. You must also make sure Health permissions allow Loop to read carbs from Health. Be vigilant if you select this; added carbs lead to added insulin dosing when closed loop is enabled SHOW_EVENTUAL_BLOOD_GLUCOSE_ON_WATCH_DISABLED The Apple Watch screens show current glucose, trend arrow and eventual glucose by default. This flag disables the display of eventual glucose on the watch if you find the display distracting. PREDICTED_GLUCOSE_CHART_CLAMP_ENABLED Chart Clamp ALLOW_ALGORITHM_EXPERIMENTS dev branch onlyThis is enabled by default to show Algorithm Experiments below the Therapy Settings row. This enables the user to separately enable or disable Glucose Based Partial Application and Integral Retrospective Correction"},{"location":"version/build-time-flag/#chart-clamp","title":"Chart Clamp","text":"<p>What the heck is a chart clamp? It means the range displayed will not be smaller than the clamp but it can be bigger.</p> <p>Loop automatically scales the glucose charts based on the history shown. Some people don't like to see the vertical axis changing, so they turn on the \"clamp\".</p> <p>When the <code>PREDICTED_GLUCOSE_CHART_CLAMP_ENABLED</code> build time flag is added:</p> <ul> <li>the range shown is never smaller than <code>glucoseChartDefaultDisplayBoundClamped</code></li> <li>80 to 240 mg/dL (4.4 to 13.3 mmol/L)</li> </ul> <p>When you do not add that build time flag:</p> <ul> <li>the range shown is never smaller than <code>glucoseChartDefaultDisplayBound</code></li> <li>100 to 175 mg/dL (5.6 to 9.7 mmol/L)</li> </ul> <p>If glucose within the display history is outside of the bound, the graph range expands to include that glucose level. This prevents glucose readings from being \"hidden\".</p> <p>You can customize chart display settings if you want. The original lines of code are shown below. You will need to read the rest of this page to figure out how to modify these to meet what you prefer. If you can't figure this out - reach out for help.</p> <ul> <li>Module: Loop</li> <li>Loop 3<ul> <li>Folder: Loop/Models</li> <li>File: LoopConstants.swift</li> <li>Lines: 32 to 45</li> </ul> </li> </ul> <pre><code>    // MARK - Display settings\n\n    static let minimumChartWidthPerHour: CGFloat = 50\n\n    static let statusChartMinimumHistoryDisplay: TimeInterval = .hours(1)\n\n    static let glucoseChartDefaultDisplayBound =\n        HKQuantity(unit: .milligramsPerDeciliter, doubleValue: 100)...HKQuantity(unit: .milligramsPerDeciliter, doubleValue: 175)\n\n    static let glucoseChartDefaultDisplayRangeWide =\n        HKQuantity(unit: .milligramsPerDeciliter, doubleValue: 60)...HKQuantity(unit: .milligramsPerDeciliter, doubleValue: 200)\n\n    static let glucoseChartDefaultDisplayBoundClamped =\n        HKQuantity(unit: .milligramsPerDeciliter, doubleValue: 80)...HKQuantity(unit: .milligramsPerDeciliter, doubleValue: 240)\n</code></pre>"},{"location":"version/build-time-flag/#enable-child-model","title":"Enable Child Model","text":"<p>Loop 3, by default, does not include the concept of child versus adult for rapid-acting insulin, i.e., Humalog, Novalog and Apidra.</p> <ul> <li>The child model can be enabled following the directions above, adding ADULT_CHILD_INSULIN_MODEL_SELECTION_ENABLED to the LoopConfigOverride.xcconfig file and rebuilding</li> <li>Insulin Model is then found in the Therapy Setting section of Loop 3 with Adult selected by default</li> <li>Insulin Type continues to be associated with the pump and can be modified in the Pump Settings screen</li> </ul>"},{"location":"version/code-custom-edits/","title":"Custom Edits","text":""},{"location":"version/code-custom-edits/#build-then-customize","title":"Build then Customize","text":"<p>For new Loopers, please build the code before you make any changes. Start with Open Loop and familiarize yourself with the interface.  Later, you can make the customization(s) you desire and build again.  The second build will be much easier than your first build.</p> <p>These customizations require you modify the Loop app code and then build the app after making these customizations. This page supports version 3 and greater for the Loop app.</p>"},{"location":"version/code-custom-edits/#customization-options","title":"Customization Options","text":"<p>Read about the customizations on this page before applying them.</p> <p>You take responsibility</p> <p>You are responsible when you decide to use customizations.</p> <p>Be sure to report what changes you made if you need to ask for assistance with your app.</p> <p>Some customizations are the same for everyone and have been prepared for easy use. Refer to the build method that you use for information about applying these prepared changes - the same set is available for both build methods.</p> <ul> <li>Customize with Browser</li> <li>Customize with Mac</li> </ul> <p>Other customizations require that you create your own personalized version.</p> <ul> <li>On this page are instructions for what modifications are required to your code to achieve a personalized customization (regardless of build method)</li> <li>On Version: Build-Time Flag are details about how to change the default settings for the build-time flags by editing the <code>LoopConfigOverride.xcconfig</code> file.</li> </ul>"},{"location":"version/code-custom-edits/#instructions-for-finding-the-lines","title":"Instructions for Finding the Lines","text":"<p>The instructions on this page identify the module, <code>Key_Phrase</code> or file and line numbers required to locate the code you need to modify.</p> <p>Why do I have to jump between pages?</p> <ul> <li>The code changes are defined on this page</li> <li>The method to make code changes depends on build method and are found at:<ul> <li>Custom Edits with Browser</li> <li>Custom Edits with Mac</li> </ul> </li> </ul> <p>Line numbers may change</p> <p>Every effort will be made to update the line numbers as the code is updated, but there may be times where the screenshots and line numbers differ from the current version of Loop code.</p> <ul> <li> <p>You may notice some customizations list line numbers for different branches</p> </li> <li> <p>If you cannot identify a line that looks exactly like the example - do not guess - go to your favorite social media group and ask for help</p> </li> <li> <p>Sometimes there is a bigger change than just line numbers. The git software is really good about finding the \"right\" code that is just at a different line number. When you see the notation <code>Stable: Changed on date</code>, that means you must select the correct version when making your personal customization depending on which version you are modifying.</p> </li> </ul> <p>This page is broken into two halves:</p> <ul> <li> <p>Custom Edits Required:</p> <ul> <li>The first half of this page is for customizations that require you to edit your own code</li> </ul> </li> <li> <p>Custom Edits Optional:</p> <ul> <li>The second half of this page provides instructions for some of the prepared customizations included in the Loop and Learn: Customization Select Script</li> <li>Some people prefer to make all their own edits</li> </ul> </li> </ul> <p>For each customization, you will be given landmarks to find the correct location in the code. You can choose to search using the <code>Key_Phrase</code> or navigate to the file in the folder structure and look for the line number. </p>"},{"location":"version/code-custom-edits/#key_phrase","title":"Key_Phrase","text":"Example of a Key_Phrase<pre><code>use the copy button at right, paste into search\nThe copy button for this exampe is just for practice\nDo not paste the result anywhere\n</code></pre> <p>To search using the <code>Key_Phrase</code> (see graphic above for an example):</p> <ul> <li>A copy button is available when you hover your mouse in the right-hand side of the block below the title <code>Key_Phrase</code>;  click on it to copy the phrase into your paste buffer</li> <li>You can paste this into the search function of the tool you are using if desired (warning, you may have to hit back-space to remove a return character from the pasted text)</li> <li>Alternatively, navigate to the required file using Module, Folder, File and line number</li> </ul>"},{"location":"version/code-custom-edits/#module-folder-file","title":"Module, Folder, File","text":"<p>Stability Information Added</p> <p>If a customization needs to be modified to work with the <code>dev</code> branch, that will be noted. This means a change that is more than a line number. Instead it is a change that requires a new customization.</p> <p>For those using the Browser Build method for <code>main</code> branch, this means you will need to use Create <code>branch</code> if needed to create a special branch to prepare a new version of this customization. If you already created a personal customization earlier (before the date noted), you can keep using that customization with <code>main</code>.</p> <p>For your convenience, see Not Stable List.</p> <p>Each customization provides the Module, Folder and File bullet below the key phrase.</p> <ul> <li>Module: Loop</li> <li>Folder: Loop/subfolder1/subfolder2/etc.</li> <li>File: filename.swift, line number(s)</li> <li>Stable: \"Yes\" or \"Changed on date\"</li> </ul> <p>The customizations below show the original line of code that you will be changing. </p> <p>There may be a figure illustrating the change.</p> <p>Below the figure, the original, and in some cases, the modified code will be displayed as text.</p> <ul> <li>Sometimes that line is long and you may need to use the scroll bar to see the entire line in LoopDocs</li> <li>In most cases, an example customization is shown to assist you in deciding how to edit the line to meet your needs</li> </ul>"},{"location":"version/code-custom-edits/#not-stable-list","title":"Not Stable List","text":"<p>This list indicates personalized customization that differ between <code>main</code> and <code>dev</code></p> <ul> <li>2024 Feb 19: Glucose Guardrails</li> <li>2023 May 29: Adjust Future Carbs Time Interval</li> </ul>"},{"location":"version/code-custom-edits/#custom-edits-required","title":"Custom Edits Required","text":""},{"location":"version/code-custom-edits/#default-carb-absorption-times","title":"Default Carb Absorption Times","text":"<p>Loop\u2019s default carb absorption times are based on the high, medium, and low glycemic index absorption curves presented in Think Like A Pancreas by Gary Scheiner.  In prior versions of the Loop app, for example version 2.2.x, the lollipop (fast) icon was set for 2 hours, taco (medium) icon for 3 hours, and pizza (slow) icon for 4 hours. This is modified for <code>Loop 3</code> to 30 minutes, 3 hours and 5 hours respectively. Some people prefer different values. </p> Do you want to know more? (Click to open/close) <p>The developers did this because they expect fast to only be used for rapid-acting low treatments. The medium and slow values are for moderate and higher-fat or large meals.</p> Key_Phrase<pre><code>defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/LoopCore</li> <li>File: LoopCoreConstants.swift</li> <li>Line: 19</li> <li>Stable: Yes</li> </ul> <p>For example, if you wanted to change <code>fast</code> to be slightly longer, the edit would be as follows:</p> <p>_Code Before Modification</p> <pre><code>public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .minutes(30), medium: .hours(3), slow: .hours(5))\n</code></pre> <p>_Code After Modification</p> <pre><code>public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .hours(1.5), medium: .hours(3), slow: .hours(5))\n</code></pre> <p>Note that if you change <code>fast</code> from 30 minutes to 1.5 hours, you must also change the indication before the parentheses.</p>"},{"location":"version/code-custom-edits/#adjust-maximum-iob-for-automatic-dosing","title":"Adjust Maximum IOB for Automatic Dosing","text":"<p>With version 3.2.0, a new safety feature was added. This limits automatic dosing so IOB is no more than two times the \\(\\mathit{maximumBolus}\\) set in your Delivery Limits. (The term automatic dosing refers to insulin the app automatically delivers above your scheduled basal rate.) Manual Bolus, where you initiate the bolus yourself, is not subject to this limit. Please read How do Delivery Limits Affect Automatic Dosing? for detailed information on how this safety feature works.</p> <p>The default value (\\(\\mathit{2*maximumBolus}\\)) used for this feature is good for the majority of people who use the app. However, there are some individuals who might need to limit the size of any single bolus independent from the maximum IOB they want to set for their app. This is particularly true for those who find large boluses give rise to tunneling and the insulin leaks out along the cannula.</p> Key_Phrase<pre><code>automaticDosingIOBLimit = maxBolus\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/Managers</li> <li>File: LoopDataManager.swift, line: 1690 (main), 1796 (dev)</li> <li>Stable: Yes</li> </ul> <p>The following example is for someone who limits a single bolus to 5 U but frequently needs to achieve an IOB of 15 U for meals. They want that level of IOB to be reached with automatic bolusing. In that case, they may want to modify the factor used to calculate \\(\\mathit{automaticDosingIOBLimit}\\).</p> <p>Original Code: <pre><code>let automaticDosingIOBLimit = maxBolus! * 2.0\n</code></pre></p> <p>Modified Code Example: <pre><code>let automaticDosingIOBLimit = maxBolus! * 3.0\n</code></pre></p> <p>Because the automatic bolus amount is also limited by the partial application factor, it still takes a few cycles to reach the higher IOB of \\(\\mathit{3*maximumBolus}\\); but they can get there without manual intervention.</p>"},{"location":"version/code-custom-edits/#adjust-percent-bolus-for-automatic-bolus","title":"Adjust Percent Bolus for Automatic Bolus","text":"<p>If you are mostly happy with the Dosing Strategy of Automatic Bolus but wish it delivered more or less insulin during every Loop interval, then this customization is for you.</p> <p>This customization changes the percent of the recommended bolus used for automatic delivery. The method for calculating that recommendation is not changed by this modification.  The default value is 40% (0.4).  It is recommended you take small changes of 0.1 at a time.  Once you modify it once and try it out for a while, it\u2019s easy to go back and change it again.</p> <p>Change just the number and double check that the value is less than 1.</p> Key_Phrase<pre><code>let bolusPartialApplicationFactor\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/Loop/Models</li> <li>File: LoopConstants.swift</li> <li>Line: 53</li> <li>Stable: Yes</li> </ul> <p>Code Before Modification</p> <pre><code>static let bolusPartialApplicationFactor = 0.4\n</code></pre> <p>Code After Modification to 50% of recommended insulin</p> <pre><code>static let bolusPartialApplicationFactor = 0.5\n</code></pre> <p>Do not exceed 1.0</p> <p>This number should never be bigger than 1 (you\u2019d be getting more than Loop recommends). If you think you need more than 1, consider your settings and meal entries.</p>"},{"location":"version/code-custom-edits/#pods-add-extra-insulin-on-insertion","title":"Pods: Add Extra Insulin on Insertion","text":"<p>The default value is 0.0 U of extra insulin.  If you use this customization, start with a small number and work your way up. If you are coming from manual podding and routinely gave yourself an extra bolus with your PDM at pod change time, you may not need nearly as much with Loop - be conservative.</p> <p>Note that Loop does not include the amount of insulin in the prime or insertion steps in your IOB. The pod reports every pulse that it delivers to Loop. If you look in the Pod Settings insulin delivered row, that is the total delivered by the pod minus the (prime plus insertion) amounts. The only way to know that you successfully made this change is to count the clicks.  Normal insertion is 0.5 U (0.5 U / 0.05 U per click = 10 clicks). So if you add 0.35 U to the \"extra\" value, you should get 0.35 / 0.05 = 7 extra clicks. In other words, 17 total clicks after you press insert.</p> <p>This code change is found in one location for Eros Pods (called Omnipod throughout the app) and DASH Pods (called Omnipod Dash throughout the app). I tend to change both files, but if you're only using one kind of pod, that is really not necessary.</p> Key_Phrase<pre><code>let cannulaInsertionUnitsExtra\n</code></pre> <ul> <li>Module: OmniBLE (DASH) or OmniKit (Eros)</li> <li>DASH or Eros Pod (Loop 3 only)<ul> <li>Folder: OmniBLE/OmniBLE/OmnipodCommon (DASH)</li> <li>Folder: OmniKit/OmniKit/OmnipodCommon (Eros)</li> <li>File: Pod.swift, Line 82 (DASH); Line 87 (Eros); </li> </ul> </li> <li>Stable: Yes</li> </ul> <p>Code Before Modification</p> <pre><code>public static let cannulaInsertionUnitsExtra = 0.0 // edit to add a fixed additional amount of insulin during cannula insertion\n</code></pre> <p>Code After Modification to add 0.35 U</p> <pre><code>public static let cannulaInsertionUnitsExtra = 0.35 // edit to add a fixed additional amount of insulin during cannula insertion\n</code></pre>"},{"location":"version/code-custom-edits/#modify-the-guardrails","title":"Modify the Guardrails","text":"<p>The Therapy Setting Guardrails are for Loop 3 only.</p>"},{"location":"version/code-custom-edits/#glucose-guardrails","title":"Glucose Guardrails","text":"<p>If you build Loop 3 over a version of Loop 2.2.x or FreeAPS where the Correction Range is lower than the default value of 87 mg/dL (4.8 mmol/L), your app requires you to satisfy the new guardrail before you can save that Therapy Setting when you onboard.</p> Key_Phrase<pre><code>Guardrail(absoluteBounds:\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/Extensions</li> <li>File: Guardrail+Settings.swift</li> <li>Line: 12 for suspendThreshold</li> <li>Line: 26 for correctionRange</li> <li>Stable: Changed on 2024 Feb 19 Version after Update</li> </ul>"},{"location":"version/code-custom-edits/#version-before-update","title":"Version before Update","text":"<p>Code Before Modification</p> <pre><code>static let suspendThreshold = Guardrail(absoluteBounds: 67...110, recommendedBounds: 74...80, unit: .milligramsPerDeciliter, startingSuggestion: 80)\n</code></pre> <p>and</p> <pre><code>static let correctionRange = Guardrail(absoluteBounds: 87...180, recommendedBounds: 100...115, unit: .milligramsPerDeciliter, startingSuggestion: 100)\n</code></pre> <p>Modify the absoluteBounds to change the allowed ranges or the recommendedBounds to change the color of the numbers on the picker wheel.</p> <p>Loop automatically converts from mg/dL to mmol/L. So you must enter values reasonable for mg/dL (18 times higher than for mmol/L).</p>"},{"location":"version/code-custom-edits/#version-after-update","title":"Version after Update","text":"<p>This update, merged into <code>dev</code> on 2024 Feb 19 was part of a larger fix to a problem when glucose units were mmol/L. The user could not select two values (min and max) that were the same and equal to the reported absolute range. This was a rounding problem going between mmol/L and mg/dL that has now been resolved. Part of the resolution was to modify the mg/dL absolute ranges to preserve the previously reported mmol/L absolute ranges.</p> <p>Code Before Modification</p> <pre><code>static let suspendThreshold = Guardrail(absoluteBounds: (66.1)...(110.9), recommendedBounds: (73.1)...(80.9), unit: .milligramsPerDeciliter, startingSuggestion: 80)\n</code></pre> <p>and</p> <pre><code>static let correctionRange = Guardrail(absoluteBounds: (86.1)...(180.5), recommendedBounds: (99.1)...(115.9), unit: .milligramsPerDeciliter, startingSuggestion: 100)\n</code></pre> <p>Modify the absoluteBounds to change the allowed ranges or the recommendedBounds to change the color of the numbers on the picker wheel.</p> <p>Loop automatically converts from mg/dL to mmol/L. So you must enter values reasonable for mg/dL (18 times higher than for mmol/L).</p>"},{"location":"version/code-custom-edits/#modify-guardrails-for-insulin-sensitivity-factor-isf","title":"Modify Guardrails for Insulin Sensitivity Factor (ISF)","text":"<p>Similar to the instructions for glucose guardrails above, but use this <code>Key_Phrase</code> and modify the absoluteBounds row, next line.</p> Key_Phrase<pre><code>static let insulinSensitivity = Guardrail(\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/Extensions</li> <li>File: Guardrail+Settings.swift, line: 81</li> <li>Stable: Yes</li> </ul>"},{"location":"version/code-custom-edits/#modify-guardrails-for-carb-ratio-cr","title":"Modify Guardrails for Carb Ratio (CR)","text":"<p>Similar to the instructions for glucose guardrails above, but use this <code>Key_Phrase</code> and modify the absoluteBounds row, next line.</p> Key_Phrase<pre><code>static let carbRatio = Guardrail(\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/Extensions</li> <li>File: Guardrail+Settings.swift, line: 88</li> <li>Stable: Yes</li> </ul>"},{"location":"version/code-custom-edits/#adjust-future-carbs-time-interval","title":"Adjust Future Carbs Time Interval","text":"<p>Loop 3 limits to 1 hours the amount of time in the future that carbs can be entered.</p> <ul> <li>The Loop and Learn: Customization Select Script has a customization that changes this to 4 hours in the future</li> <li>If you want something other than 1 hour or 4 hours, you must create a personal customization</li> </ul> <p>The customization varies depending on whether you are building <code>dev</code> or <code>main</code>.</p> <ul> <li>Module: Loop</li> <li>Stable: Changed on 2023 May 29</li> </ul> <p>The <code>main</code> branch:</p> <ul> <li>Folder: Loop/Loop/View Controllers</li> <li>File: CarbEntryViewController.swift, Line 438</li> </ul> <p>The <code>dev</code> branch:</p> <ul> <li>Folder: Loop/Loop/Models</li> <li>File: LoopConstants.swift, Line 28</li> </ul> <p>The changes required for this customization have changed several time for <code>dev</code>. The code provided in Version after Update is for the latest <code>dev</code> code, as of 2023 Aug 20.</p>"},{"location":"version/code-custom-edits/#version-before-update_1","title":"Version before Update","text":"Key_Phrase<pre><code>cell.datePicker.maximumDate = date.addingTimeInterval\n</code></pre> <p>Default shown below (for maximum and minimum):</p> <p>Code Before Modification</p> <pre><code>cell.datePicker.maximumDate = date.addingTimeInterval(.hours(1))\ncell.datePicker.minimumDate = date.addingTimeInterval(.hours(-12))\n</code></pre> <p>Change the maximumDate to the number of hours in the future you desire. Remember that Loop may increase insulin dosing for future carbs - make sure that they actually arrive. </p> <p>The minimumDate is how far back in the past you can modify time.  The default is 12 hours in the past.</p>"},{"location":"version/code-custom-edits/#version-after-update_1","title":"Version after Update","text":"Key_Phrase<pre><code>static let maxCarbEntryFutureTime\n</code></pre> <p>Default shown below:</p> <p>Code Before Modification</p> <pre><code>static let maxCarbEntryFutureTime = TimeInterval(hours: 1)\n</code></pre> <p>Change the maxCarbEntryFutureTime to the number of hours in the future you desire. Remember that Loop may increase insulin dosing for future carbs - make sure that they actually arrive. </p>"},{"location":"version/code-custom-edits/#adjust-the-watch-crown-sensitivity","title":"Adjust the Watch Crown Sensitivity","text":"<p>The rate of change of the carb and bolus entry pickers when using the digital crown can be altered as can the rotation required to confirm a bolus on the watch. If you are running an older series watch - you may want to make these customizations. When I switched from Series 3 to Series 7 watch - it was amazing. I got a graph on the main watch screen I didn't even know existed and the bolus acceptance was a breeze!</p> <ul> <li>The Loop 3 customization is provided from code inspection and one test - use with care.</li> </ul>"},{"location":"version/code-custom-edits/#loop-3-digital-crown-adjustments","title":"Loop 3 Digital Crown Adjustments","text":"<p>These are new instructions and the user should take care - and please report back if you have problems.</p> <p>First - try it with no customization. Then make small changes.</p> <p>This key phrase will indicate three different files in the same folder as shown in the graphic below - you can adjust each in turn as you desire. When you click on the line, the quantity you change is a few lines below where you find the <code>Key_Phrase</code>, except for the CarbAndDateInput file.</p> Key_Phrase<pre><code>.digitalCrownRotation\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/WatchApp Extension/Views/Carb Entry &amp; Bolus</li> <li>Stable: Yes</li> </ul> <p></p>"},{"location":"version/code-custom-edits/#modify-bolus-confirmation-motion","title":"Modify Bolus Confirmation Motion","text":"<ul> <li>File: BolusConfirmationView.swift, line 59</li> <li>Initial Value for <code>scalingRotationBy</code> is 4</li> <li>Decrease to require less motion to confirm bolus (use whole numbers only), start with 3</li> </ul>"},{"location":"version/code-custom-edits/#modify-bolus-picker-sensitivity","title":"Modify Bolus Picker Sensitivity","text":"<ul> <li>File: BolusInput.swift, line 53</li> <li>Initial Value for <code>rotationsPerIncrement</code> is 1/24</li> <li>A change to 1/12 increases the change in picker value for a given motion</li> </ul>"},{"location":"version/code-custom-edits/#modify-carb-and-time-picker-sensitivity","title":"Modify Carb and Time Picker Sensitivity","text":"<ul> <li>File: CarbAndDateInput.swift, line 68</li> <li>Initial Value for <code>rotationsPerIncrement</code> is 1/24</li> <li>A change to 1/12 increases the change in picker value for a given motion</li> </ul>"},{"location":"version/code-custom-edits/#expiration-notification-customization","title":"Expiration Notification Customization","text":"<p>An expiration notification feature has been added to Loop. You get a notification when you open the Loop app to alert you that the expiration is approaching.</p> <ul> <li>Read Loop App Expiration Notification to see the expiration reminder</li> <li>Read Loop App Expiration Date if you have an older version of Loop</li> </ul> <p>If you prefer a different notification time and frequency, there are two lines you can modify:</p> <ul> <li>Module: Loop</li> <li>Folder: Loop/Managers</li> <li>File: ProfileExpirationAlerter.swift<ul> <li>Line 16: modify how long before expiration you get the FIRST notification</li> <li>Line 28: modify how frequently you will be notified</li> </ul> </li> <li>Stable: Yes</li> </ul> Key_Phrase<pre><code>expirationAlertWindow: TimeInterval\n</code></pre> Key_Phrase<pre><code> minimumTimeBetweenAlerts: TimeInterval\n</code></pre> <p></p> <p>Default code for line 16: <pre><code>    static let expirationAlertWindow: TimeInterval = .days(20)\n</code></pre></p> <p>Example modifications to First Notification:</p> <ul> <li>30 days: change <code>.days(20)</code> to <code>.days(30)</code></li> <li>12 hours: change <code>.days(20)</code> to <code>.hours(12)</code></li> </ul> <p>Default code for line 28:</p> <pre><code>    let minimumTimeBetweenAlerts: TimeInterval = timeUntilExpiration &gt; .hours(24) ? .days(2) : .hours(1)\n</code></pre> <p>Modify Frequency of Repeated Notifications (Three Values):</p> <ul> <li>This phrase: <code>&gt; .hours(24) ? .days(2) : .hours(1)</code></li> <li>Rewritten as: <code>&gt; Time_A ? Frequency_A : Frequency_B</code>, means:<ul> <li>Use Frequency_A if there is more time between now and the expiration date than Time_A</li> <li>Use Frequency_B if there is less time between now and the expiration date than Time_A</li> </ul> </li> </ul> <p>You can enter Time or Frequency as <code>.days(value)</code>, <code>.hours(value)</code> or <code>.minutes(value)</code>.</p> <p>Free App Users:</p> <p>An example change that a Free Loop App user (who has to build once a week) might choose is:</p> <p><pre><code>     &gt; .hours(4) ? .days(10) : .hours(2)\n</code></pre> Combined with an <code>.hours(12)</code> on line 16, they would get notified at 12 hours, 4 hours and 2 hours before expiration on the day of expiration and only when the app is opened. Since you'll be building once a week, you can play around with these values until you are happy.</p>"},{"location":"version/code-custom-edits/#enable-child-model","title":"Enable Child Model","text":"<p>Please see the Build-Time Flag page for this customization.</p>"},{"location":"version/code-custom-edits/#insulin-model-customization","title":"Insulin Model Customization","text":"<p>Each exponential model has 3 parameters that can be adjusted:</p> <ul> <li>actionDuration: Duration of insulin activity (minutes)</li> <li>peakActivity: Peak of insulin activity (minutes)</li> <li>delay: Delay before insulin begins to acts after delivery starts (minutes)</li> </ul> <p>Please read the nitty-gritty discussion that went into the development of the \"exponential insulin models\" in this Comment.</p> <p>If you wish to customize these values, please make sure you know what you are doing.  This is not a modification recommended for Loop novices.</p> Key_Phrase<pre><code>MARK: - Model generation\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/LoopKit/Insulin/ &lt;&lt; NOTE new location</li> <li>File: ExponentialInsulinModelPreset.swift</li> <li>Lines:<ul> <li>actionDuration (19 to 32)</li> <li>peakActivity (34 to 47)<ul> <li>delay (49 to 62)</li> </ul> </li> </ul> </li> <li>Stable: Yes</li> </ul> <p></p> <p>This Loop 3 table of default values is provided for convenience. The times are all in minutes.</p> Model DIA Peak Delay rapidActingAdult 360 75 10 rapidActingChild 360 65 10 fiasp 360 55 10 lyumjev 360 55 10 afrezza 300 29 10"},{"location":"version/code-custom-edits/#loop-logo","title":"Loop Logo","text":"<p>Mac Instructions</p> <p>This can be done with Build with Browser but the instructions might need to be adjusted for that case.</p> <p>If you want an app logo other than the default green circle for your Loop app, you can easily customize this.  To make it easy to generate the correct sizes of icons, you can use a site like appicon.build or appicon.co and just drag and drop your source image. The source image needs to be 1024 pixels x 1024 pixels.  The site will email you a zip file or automatically download a set of files.  Highlight and copy the contents of the Appicon.appiconset that you are sent, including the Contents.json file</p> <ol> <li>Navigate to the LoopWorkspace folder</li> <li>Open the OverrideAssetsLoop.xcassets folder</li> <li>Open the AppIcon.appiconset folder</li> <li>Delete the contents of the Appicon.appiconset and copy/paste your new images and Contents.json file.</li> <li>Rebuild your app</li> </ol> <p>You may see a yellow warning that there are \u201cunassigned children\u201d depending on the images the app icon generator tool produced. The unassigned children alert will not prevent your app from building, it\u2019s simply because there are more sizes of images than Loop app uses.  You can just leave the unassigned children alone (wow...how often do you get to say that phrase?).</p> <p>And now you'll be the proud new owner of a custom Loop icon.</p>"},{"location":"version/code-custom-edits/#custom-edits-optional","title":"Custom Edits Optional","text":""},{"location":"version/code-custom-edits/#disable-authentication-for-bolusing","title":"Disable Authentication for Bolusing","text":"<p>Depending on your iPhone Settings and model, you may have Face ID or Touch ID enabled.  Those security features will also be used to authenticate bolus delivery in Loop.  You can choose to disable authentication (i.e., not require Face ID, Touch ID, or passcode for bolusing) through the following code customization.</p> <p>Safety Measure</p> <p>If you disable this, you are removing an important safety feature.</p> <p>In addition to authenticating every manual bolus, this helps to protect against sleep bolusing and pocket bolusing.</p> <p>For Loop 3, this controls the authorization requirement to modify Therapy Settings as well as to confirm bolus delivery.</p> Key_Phrase<pre><code>canEvaluatePolicy(.deviceOwnerAuthentication\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/LoopKitUI/Extensions/</li> <li>File: Environment+Authenticate.swift, Line 20</li> <li>Stable: Yes</li> </ul> <p>Code Before Modification</p> <pre><code>if context.canEvaluatePolicy(.deviceOwnerAuthentication, error: &amp;error) {\n</code></pre> <p>Code After Modification</p> <pre><code>if false &amp;&amp; context.canEvaluatePolicy(.deviceOwnerAuthentication, error: &amp;error) {\n</code></pre>"},{"location":"version/code-custom-edits/#modify-override-insulin-needs-picker","title":"Modify Override Insulin Needs Picker","text":"<p>Some people want finer settings on the override insulin needs picker (5% instead of 10%) and may want to limit the overall range for overrides \u2013 especially for children.</p> <p>1% Settings Available without Customization</p> <p>With the advent of Loop 3, the Override Insulin Needs values are not limited by the default picker values of 10%.</p> <ul> <li>Select 1% Insulin Needs</li> </ul> <p>Any override more than a factor of 2 from 100% can cause Loop predictions to be wrong \u2013 especially if a carb count is entered. (An override is NOT the same as a manual temp basal - it changes insulin sensitivity factor and carb ratio in addition to the basal rate needed for zero change in IOB for the duration of the override.)</p> <p>A Sensitivity of 0% is NOT Valid</p> <p>Do not set the lower level of the sensitivity range to be 0%.</p> <p>If you configure to allow that and someone chooses it, they will be telling Loop to divide by zero in some of the calculations. They will see NaN (not a number) in Loop predictions until that override is removed and will continue to see that for the full duration of insulin action (6 hours).</p> <p>This example customization changes the lower bound for sensitivity to 50% (factor of 2 smaller than 100%) and provides 5% steps. This is the same as the prepared customization offered by the Loop and Learn team.</p> Key_Phrase<pre><code>let allScaleFactorPercentages\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/LoopKitUI/Views</li> <li>File: InsulinSensitivityScalingTableViewCell.swift, Line 19</li> <li>Stable: Yes</li> </ul> <p>Code Before Modification</p> <pre><code>private let allScaleFactorPercentages = Array(stride(from: 10, through: 200, by: 10))\n</code></pre> <p>Code After Modification to 50% to 200% by steps of 5%</p> <pre><code>private let allScaleFactorPercentages = Array(stride(from: 50, through: 200, by: 5))\n</code></pre>"},{"location":"version/code-custom-edits/#modify-maximum-and-warning-carb-entry","title":"Modify Maximum and Warning Carb Entry","text":"<p>Version 3.x of the Loop app has both a <code>maxCarbEntryQuantity</code> and a <code>warningCarbEntryQuantity</code>, found adjacent to each other in the code. The warning value is the level at which you are asked if you really meant to enter that amount:</p> Key_Phrase<pre><code>let maxCarbEntryQuantity =\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/Loop/Models</li> <li>File: LoopConstants.swift, line 18</li> <li>Stable: Yes</li> </ul> <p>Code Before Modification</p> <pre><code>static let maxCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 250) // cannot exceed this value\n\nstatic let warningCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 99) // user is warned above this value\n</code></pre>"},{"location":"version/code-custom-edits/#low_carb_limit","title":"<code>\"low_carb_limit\"</code>","text":"<p>This first example might be used by a parent for a child with very small carb entries. It is provided as one of the prepared customizations supplied by the Loop and Learn Customization as <code>\"low_carb_limit</code>\".</p> <p>Code After Modification to enable the warning at lower levels and limit maximum</p> <pre><code>static let maxCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 99) // cannot exceed this value\n\nstatic let warningCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 49) // user is warned above this value\n</code></pre>"},{"location":"version/code-custom-edits/#high_carb_limit","title":"<code>\"high_carb_limit\"</code>","text":"<p>This second example might be used by a person who routinely enters large meals and does not want to be warned with every meal. It is provided as one of the prepared customizations supplied by the Loop and Learn Customization as <code>\"high_carb_limit</code>\".</p> <p>Code After Modification to warn if entry is between 201 and 300g</p> <pre><code>static let maxCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 300) // cannot exceed this value\n\nstatic let warningCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 200) // user is warned above this value\n</code></pre>"},{"location":"version/development/","title":"Loop Development","text":""},{"location":"version/development/#overview","title":"Overview","text":"<p>The early history of the Loop app was touched on in the introductory LoopDocs Overview: Development History section.</p> <p>The Loop Releases page lists releases since version 2.0 in reverse chronological order.</p> <p>The next version of the Loop app is developed using branch(es), independent of the released Loop version, which is found in the <code>main</code> branch. The <code>dev</code> branch is used by the developers to push out changes for users to test. You should only test a development branch if you are willing to be both an active participant with the developers to monitor announcements and provide feedback and to build frequently to obtain the latest feature or bug-fix that is being tested. If you are willing to help out - this is the way the next release of Loop is improved.</p> <p>If you choose to use <code>dev</code>, you accept that this code is not released.</p> <p>Please read this entire page before using any version of Loop other than the released code.</p>"},{"location":"version/development/#updates-in-dev","title":"Updates in dev","text":"<p>This section is an early look at what has been added to <code>dev</code> since Loop 3.2.x\u00a0and will probably be in the next release. After the release, some of the content and graphics in this section will move to the Releases page or the appropriate documentation section.</p> <ul> <li>Support for Libre Sensors</li> <li>Modified Simulator Interface</li> <li>Algorithm Experiments<ul> <li>Glucose Based Partial Application\u00a0 Factor</li> <li>Integral Retrospective Correction</li> </ul> </li> <li>Favorite Foods</li> <li>Updates to Omnipod User Experience<ul> <li>Insert Cannula Slider</li> </ul> </li> <li>TestFlight Expiration Warning</li> <li>GitHub Browser Build\u00a0 Updates</li> <li>Miscellaneous Code Fixes</li> </ul>"},{"location":"version/development/#support-for-libre-sensors","title":"Support for <code>Libre</code> Sensors","text":"<p>LibreTransmitter support was merged into the <code>dev</code> branch in July 2023.</p> <p>If you are using the GitHub / Browser Build method, please review: </p> <ul> <li>Browser Build: One-Time Changes: New steps and dates at which the new steps were added</li> </ul>"},{"location":"version/development/#modified-simulator-interface","title":"Modified Simulator Interface","text":"<p>The simulators for the Pump and CGM, for the <code>dev</code> branch show a new format when first selected. The initial view is a demonstration screen showing a typical CGM or Pump display. In order to view behind the scenes, modify settings, and delete the simulator, you must press and hold (long-press) on the top of the display. Anywhere in the top third works for the long-press, but I like to touch the card as shown in the pump example below. If you've counted to 10 and the display has not updated yet, then return to the main screen, go back to the simulator screen, and try again.</p> <p></p>"},{"location":"version/development/#algorithm-experiments","title":"Algorithm Experiments","text":"<p>Two algorithm experiments have been added to <code>dev</code>. These are \u00a0Glucose Based Partial Application\u00a0 and \u00a0Integral Retrospective Correction. They can be viewed on the Loop Settings screen just below Therapy Settings and Usage Data Sharing as shown in the graphic below:</p> <p></p>"},{"location":"version/development/#glucose-based-partial-application-gbpa","title":"Glucose Based Partial Application\u00a0 (<code>GBPA</code>):","text":"<ul> <li>Originally proposed in Pull-Request 1988 for Loop.</li> <li>It is only used when <code>Automatic Bolus</code> (AB) is selected for <code>Dosing Strategy</code></li> <li>This modification does not affect the recommended dose, only how quickly the recommended dose is automatically delivered</li> </ul> <p>When <code>AB</code> is selected and <code>GBPA</code> is enabled, the percentage of the recommended dose delivered per cycle of \u00a0Loop\u00a0 ranges from 20% to 80% based on glucose level and user-selected correction range. (Without <code>GBPA</code> enabled, <code>AB</code> uses a fixed 40% percentage regardless of glucose level.)</p> <ul> <li><code>Partial Application</code> = 20% when glucose is at or below the users correction range lower value (including overrides) plus 10 mg/dL (0.6 mmol/L)</li> <li><code>Partial Application</code> increases linearly from 20% to 80% up to a glucose level of 200 mg/dL (11.1 mmol/L)</li> <li><code>Partial Application</code> is 80% when the glucose level is above 200 mg/dL (11.1 mmol/L)</li> </ul>"},{"location":"version/development/#insulin-delivery-using-gbpa","title":"Insulin Delivery Using <code>GBPA</code>","text":"<p>Loop makes a prediction and recommends an insulin dose based on your settings and your glucose, insulin and carb history. The selected <code>Dosing Strategy</code> (<code>Automatic Bolus</code> with or without <code>GBPA</code> or <code>Temp Basal Only</code>) only changes how quickly that recommended dose is delivered.</p> <p>This example assumes Loop recommends 1 U (at time 0) and future glucose values match Loop's prediction for each successive 5-minute update. In other words, over half an hour, Loop provides about 1 U of insulin above that delivered by the scheduled basal rate.</p> <p>The tables below show <code>Automatic Bolus</code> patterns, using a pump minimum bolus increment of 0.05 U, for several application factors. When using <code>GBPA</code>, the application factor can vary with glucose, but that is ignored for this simplified example.</p> <p>The first table shows the bolus delivered each Loop cycle for several application factors. Higher application factors start with higher boluses, but go to zero (indicated by a dash) more quickly.</p> <p>Incremental Dose for several application factors when initial recommendation is 1 U</p> Minutes 20% 40% 60% 80% 0 0.20 0.40 0.60 0.80 5 0.15 0.25 0.25 0.15 10 0.15 0.15 0.10 0.05 15 0.10 0.10 0.05 - 20 0.10 0.05 - - 25 0.05 - - - 30 0.05 - - - <p>The second table shows the cumulative delivery. A dash shows recommended dose was delivered. Remember, this is a simplified example.</p> <p>Cumulative Dose for several application factors when initial recommendation is 1 U</p> Minutes 20% 40% 60% 80% 0 0.20 0.40 0.60 0.80 5 0.35 0.65 0.85 0.95 10 0.50 0.80 0.95 1.00 15 0.60 0.90 1.00 - 20 0.70 0.95 - - 25 0.75 0.95 - - 30 0.80 0.95 - - <p>The 20% and 40% application factor columns did not reach 1 U in 30 minutes because the requested dose is smaller than this pump will deliver. The 60% application factor only reached 1 U because tiny doses down to 0.03 U were rounded up to 0.05 U.</p> <p>The <code>Temp Basal Only</code> <code>Dosing Strategy</code> provides about 17% of the recommended bolus each 5-minute interval. The minimum <code>GBPA</code> application factor of 20% was selected to be similar to that rate for lower glucose values. Initially, an application factor of 20% delivers insulin more quickly than <code>Temp Basal Only</code>, but by the end of 30 minutes, the basal program inside the pump keeps track of how much is delivered to reach the rate requested, achieving the full 1 U (for this example).</p>"},{"location":"version/development/#integral-retrospective-correction-irc","title":"Integral Retrospective Correction\u00a0 (<code>IRC</code>):","text":"<ul> <li>Originally proposed in Loop Issue 695<ul> <li>This was tested in a few <code>forks</code> but not included into <code>dev</code> until recently</li> <li>Initial merge into dev: Loop PR 2008</li> </ul> </li> <li>Updated with a modification to limit stacking of <code>IRC</code> with Glucose <code>Momentum</code>: Loop PR 2028</li> <li>Integral Retrospective Correction, when enabled:<ul> <li>changes the Loop app prediction model and thus can affect the recommended dose</li> <li>applies to both <code>Dosing Strategies</code>: <code>Temp Basal</code> or <code>Automatic Bolus</code></li> </ul> </li> </ul> <p>Referring to the <code>Algorithm: Prediction</code> page:</p> <ul> <li>When <code>IRC</code> is disabled (default), the equation used to predict glucose continues to be:</li> </ul> \\[ BG[t] = Insulin[t] + Carb[t] + RetrospectiveCorrection[t] + Momentum[t] \\] <ul> <li>When <code>IRC</code> is enabled that equation changes to:</li> </ul> \\[ BG[t] = Insulin[t] + Carb[t] + IntegralRetrospectiveCorrection[t] + Momentum[t] \\] <p>Note that the Momentum\u200b term does not just add to the other effects; it is actually more complicated (and also more challenging to describe in simple math terms).</p> <p>The <code>Retrospective Correction</code> section of the Predicted Glucose Chart is updated when <code>IRC</code> is enabled, as shown in the graphic below. The <code>Integral effect</code>, inside the lower blue rectangle, is the difference between the <code>IRC</code> and <code>RC</code> calculations.</p> <p></p> <p>The <code>IRC</code> term is described in this (updated) comment including plots and equations. Some of the information in that comment is repeated below: Important points about <code>IRC</code>.</p> <p>If you want to look at the code, the version (as of 14-Aug-2023) is found in <code>LoopKit/LoopKit</code>:</p> <ul> <li><code>RetrospectiveCorrection</code> code: <code>StandardRetrospectiveCorrection.swift</code></li> <li><code>IntegralRetrospectiveCorrection</code> code: <code>IntegralRetrospectiveCorrection.swift</code></li> </ul>"},{"location":"version/development/#important-points-about-irc","title":"Important points about <code>IRC</code>","text":"<ol> <li> <p>Known risk factors compared to standard Loop: </p> <ul> <li>With <code>IRC</code> turned on, Loop will likely increase insulin corrections in response to persistent discrepancies between observed and predicted glucose motion, which may increase the risks of hypoglycemia</li> <li><code>IRC</code> may also lead to increased oscillations (\"roller-coaster\") in glucose responses</li> <li>Both of these risk factors are higher if the user's setting value for Insulin Sensitivity (ISF) is too low</li> <li>Increasing <code>ISF</code> setting value tends to mitigate these risks but it is impossible to offer any guarantees for anything around T1D</li> </ul> </li> <li> <p>Compared to standard <code>RC</code>, <code>IRC</code> is more likely to improve glucose control in the following scenarios:</p> <ul> <li>Glucose remaining high or decreasing slower than expected due to temporarily reduced insulin sensitivity or poor site absorption</li> <li>Glucose trending low faster than expected due to temporarily higher insulin sensitivity</li> <li>Glucose spikes due to unannounced meals</li> <li>Glucose remaining high (or trending low) on tail ends of meals where carbs entered were underestimated (or overestimated)</li> <li>Glucose remaining elevated due to unannounced protein+fat effects</li> <li>Glucose staying above (or below) the correction range due to too low (or too high) basal rate settings</li> </ul> </li> <li> <p>In some scenarios <code>IRC</code> does not differ from standard Loop <code>RC</code></p> <ul> <li>Regardless of the current glucose level, neither RC nor IRC is adding to the glucose forecast during the times when the absorption rate of announced carbs is greater than the minimum absorption rate.</li> <li>Neither RC nor IRC effects depend on glucose level; both depend on discrepancies between predicted and actual glucose responses.</li> </ul> </li> <li> <p>Please do not expect immediate or very substantial improvements in blood glucose control. A one-time success after turning <code>IRC</code> on does not really mean that <code>IRC</code> \"works\" - this could just as well be a temporal coincidence. Some ways to decide if <code>IRC</code> could be safe and effective for you include:</p> <ul> <li>Responses to unannounced meals - spikes should in general be somewhat lower than those with standard Loop, but there should also be no follow-up lows</li> <li>Nighttime responses over a few weeks - highs or lows should be less frequent compared to the standard <code>Loop</code>; at the wake-up time blood glucose should, in general, be closer to the correction range.</li> </ul> </li> </ol>"},{"location":"version/development/#favorite-foods","title":"Favorite Foods","text":"<p>This feature allows you to save Favorite Foods.</p> <p>A new row on the\u00a0Loop\u00a0app Settings screen, see graphic below, provides access to create and edit your \u00a0Favorite Foods.</p> <p></p> <p>In the example meal entry shown below:</p> <ol> <li>The Favorite Food row (at the bottom) is tapped</li> <li>The desired Favorite Food is selected</li> </ol> <p>At this point the meal can be saved by tapping the Continue button, or the user can modify the time (typical) or any other of the carb entry rows before tapping Continue.</p> <p></p>"},{"location":"version/development/#testflight-expiration-warning","title":"TestFlight  Expiration Warning","text":"<p>The\u00a0Loop\u00a0app has been updated to detect whether the build was uploaded through  TestFlight, which implies a 90-day limit until the app expires.</p> <p>The usual\u00a0Loop\u00a0expiration notification system alerts the user when within 20 days of expiration. In addition to that modal alert, the user can examine the bottom of the Settings screen at any time to see the expected expiration date and time.</p> <p></p>"},{"location":"version/development/#github-browser-build-updates","title":"GitHub Browser Build\u00a0 Updates","text":"<p>The <code>dev</code> branch has several updates merged that make it easier to find errors in configuration and that make the \u00a0GitHub Browser Build\u00a0 automatic.</p> <p>Note that the automatic build feature is opt-out. In other words, unless you take specific steps, the \u00a0GitHub Browser Build\u00a0 for\u00a0Loop\u00a0will:</p> <ul> <li>Automatically build a new version once a month, with automatic update included</li> <li>Automatically update your fork of LoopWorkspace once a week if updates are available</li> </ul> <p>It is suggested that all users of the released code (main branch), maintain this automatic schedule so they are never without a valid and up-to-date\u00a0Loop\u00a0in their  TestFlight  app.</p> <p>For users of the <code>dev</code> branch, it is not uncommon to disable the automatic update portion so they can choose when to update their development version, but should probably keep the monthly build portion of the process.</p> <ul> <li>Configure GH_PAT</li> <li>Modify Scheduled Building and Synchronization</li> </ul> <p>In addition to the easier to read error messages found with these updates, these additional simplifications include:</p> <ul> <li>Actions are broken into logical components, each of which provides an easy to understand error message if it fails which includes a suggested fix</li> <li>A new builder no longer needs to create the \u00a0Match-Secrets repository<ul> <li>If it does not exist, one is created for you</li> <li>Only the App Group ID must be added to the Identifiers; all other App services are    automatically added</li> </ul> </li> <li>For new builders and current 3.2.2 users updating to the next release<ul> <li>The \u00a0alive branch needed to enable automatic building is created automatically</li> <li>If their GH_PAT does not have <code>repo, workflow</code> permission, a prominent message is displayed with each Action completed</li> </ul> </li> </ul> <p>These sections are still useful for version 3.3.0 <code>dev</code> users:</p> <ul> <li>Browser Build for dev: How to use \u00a0GitHub Browser Build\u00a0 for <code>dev</code> branch</li> <li>Browser Build: One-Time Changes: New steps and dates at which the new steps were added</li> </ul>"},{"location":"version/development/#miscellaneous-code-fixes","title":"Miscellaneous Code Fixes","text":""},{"location":"version/development/#g7-sensors-duplicate-cgm-values","title":"G7 Sensors: Duplicate CGM Values","text":"<p>Fixed with PR 16: Fix parsing of age field of message</p> <ul> <li>Most sensors report the time with very little offset between time of arrival and time of sensing</li> <li>If the time discrepancy is large, the error (using one byte instead of two for age of the reading) could cause CGM values to appear as duplicate readings in Loop</li> </ul>"},{"location":"version/development/#remote-services-update","title":"Remote Services Update","text":"<p>The code that feeds Loop data to remote services like Tidepool and Nightscout have been improved to be more robust.</p>"},{"location":"version/development/#what-are-git-branches","title":"What are Git Branches?","text":"<p>There is a lot of discussion about branches with Loop but the concept is simple. Basically, they are all slightly different versions of Loop...kind of like different edits of the same book.</p> <p>To really understand what branches are, we should probably explain a little more about the software and how development works.  You can watch a 30-minute long, classic Katie DiSimone video explanation about branches created when Loop Version 2.0 was newly released. Keep in mind while watching the video that <code>master</code> was the old name for the <code>main</code> branch. The information in this video is still generally useful with the last half focused on automatic-bolus - the automatic-bolus dosing strategy has now been incorporated into Loop <code>main</code> branch. Loop has moved on to using only one stable branch (<code>main</code>), with <code>dev</code> suggested for developers/testers.</p>"},{"location":"version/development/#loop-github-information","title":"<code>Loop</code> GitHub Information","text":"<p>Loop developers own an account in GitHub called LoopKit.  Within that account, the developers have several <code>repositories</code> that support Loop in particular. A repository\u200b is like a book...let's think of it like a cookbook for now. Within the <code>LoopKit</code> account, there are <code>repositories</code> for Loop\u200b itself, LoopDocs, and various other supporting \"frameworks\" that are helper \u200brepositories\u200b for Loop to build correctly. For example, Loop's \u200brepository\u200b has a lot of info about the app itself; the outward-facing things that you interact with. How information is put to you and taken in from you...that's in Loop <code>repository</code> code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. <code>CGMBLEkit</code>\u00a0 for some of the transmitter parts of Loop, <code>RileyLink_ios</code> for the pump managers (talking to the pumps and decoding their information), <code>LoopKit</code> for the algorithm about carbs and insulin curves, etc.</p> <p>When you build Loop, in the background, Loop pulls those other frameworks (7 in total) into the build process using <code>Carthage</code>.  <code>Carthage</code>\u00a0  is like a personal shopper. You give it a shopping list (the cart file in Loop code is that shopping list) and it goes and fetches that for you during the build process. Sometimes your computer has an old shopping list...and that can cause build errors. Hence the <code>carthage update</code> fix in the Build Errors page...that command updates the shopping list to get the right versions of those frameworks.</p> <p></p> <p>Anyways...so now you know about the general structure of Loop and LoopKit in GitHub. Now we can discuss Loop itself a little deeper.</p> <p>So let's imagine Loop as a cookbook. The developers are the authors/chefs of the recipes (code) in the cookbook. The authors spend countless hours testing new recipes, taste testing, and documenting improvements. They send the drafts to the editor, who makes suggestions and eventually, the cookbook is finalized. There are no grammar issues, and no typos, the photos are beautiful and the recipes are yummy. They publish the book and you see a gorgeous final product on the shelves. That is called a release\u200b, and it is the <code>main</code> branch. This book has been well-tested and is super stable. Every time you cook with those recipes, you know exactly what you're getting and lots of people have had a chance before you to make sure that it all tastes good. The <code>main</code> branch is stable and tested.</p> <p>But then...the chefs/developers go on a trip. They are inspired by new cuisine and want to add new recipes to the old cookbook. (Things like Omnipod\u200b support and the overrides are new \"recipes\" that were developed since the last <code>main</code> release, for example.) But, the process of developing a recipe is arduous. There was a lot of trial and error involved. Lots of tweaking ingredients (code). The editors try out the new recipes and offer feedback (similar to the Issues List on GitHub). While the recipes are being developed, they have a version of the old cookbook that gets marked up...edited in pencil a lot. Scribbles and notes in the side. Revisions happen frequently because that's what testing new recipes is all about. These marked-up versions of the cookbook are called the <code>dev</code> branch. Short for \"development\" branch. Like the name sounds...this is where new developments are happening, new recipes, and tweaks.</p> <p>After much testing and tweaking, eventually, the recipes get the flavors right (bugs in code are squashed) and enough people have provided feedback and careful observations of results...that the book goes to the publishing house for the next printing. The cookbook is republished with an updated edition number and new recipes are highlighted. When this happens in Loop,  Loop's <code>main</code> branch is updated with the new features coming from <code>dev</code> (aka, the <code>dev</code> branch is merged into the <code>main</code> branch). When that happens, the <code>main</code> branch gets another <code>release</code> version. At this point, <code>dev</code> and <code>main</code> are identical. They remain so until the development team for Loop\u00a0 starts working on the next batch of improvements, which could be in the next hour or even days later, but then the cycle starts again.  The developers will start editing the code again and dropping those edits in the <code>dev</code> branch for further development.</p>"},{"location":"version/development/#whats-going-on-in-the-dev-branch","title":"What's going on in the <code>dev</code> branch?","text":"<p>The <code>dev</code> branch, currently v3.3.0, is where the next version of Loop is being developed and tested.</p> <p>If you choose to build Loop using a <code>dev</code> branch, you need to be aware that the <code>dev</code> branch may update code frequently and unannounced in the traditional sense that most users in the  Looped group or Instagram would see. Developers are not helped by people being in a <code>dev</code> branch if those users mistakenly think of it as a stable <code>main</code> branch with lots of detailed docs to go with it. People should only use a <code>dev</code> branch build if they EDUCATE themselves on the expectations and how to properly manage <code>dev</code> information and updates. People using the <code>dev</code> branch should also have regular access to a computer to be able to rebuild quickly if a new bug/fix is identified.</p> <p>If you choose to use a <code>dev</code> build, you can stay abreast of developments in a number of ways...but they will all require you to do some legwork and keep yourself informed. This is not a situation where you should expect a fancy Loopdocs page updated regularly with current \"<code>dev</code> updates\"...that's just not the way the <code>dev</code> branch works (at least normally).</p>"},{"location":"version/development/#subscribe-to-the-zulipchat-channels","title":"Subscribe to the Zulipchat channels","text":"<p>Use Zulipchat forums for Loop. This forum has several streams of conversations (<code>streams</code>) depending on interest. I highly recommend following all the streams so you do not miss conversations.  You can select by stream and by topic within a stream to focus on a given conversation.  </p> <p>Zulip Chat Streams</p> <ul> <li>If you are using the dev branch, you must be in the #development stream.  </li> <li>If you want to know when LoopDocs gets updated, follow the #documentation stream.  </li> <li>Code changes are called commits in GitHub.   The #github stream will have an automated post whenever a new commit is made and it will give a brief line description of the commit.</li> </ul> <p></p> <p>You can also go directly to the git commit history for each of the branches if you'd like.</p> <ul> <li><code>Loop</code> <code>main</code> branch: git commit history</li> <li><code>Loop</code> <code>dev</code> branch: git commit history</li> </ul> <p>If you click on the commit, you can see exactly what changes to the code were made. It's an interesting learning experience. In red is the old code, and in green is the updated code. The line numbers and file names of the edited code are also there to help.</p> <p></p> <p>I don't expect many of you would understand exactly what the edits mean, or how the new code might function. However, I bring up the topic of git commit history so that you can use that to realize just how often the <code>dev</code> branch is updated. Go ahead and look at the number and frequency of commits in that branch.  That's why no one would want to maintain a documentation list of the changes in the <code>dev</code> branch. It's just too much of a moving target.</p>"},{"location":"version/development/#watch-the-loop-repository-and-issues-list","title":"Watch the <code>Loop Repository</code> and <code>Issues List</code>","text":"<p>Open the <code>Loop repository</code> and subscribe to the <code>Issues</code>. </p> <p>You can choose to watch the <code>repository</code> so that you get emails when new <code>Issues</code> are reported. This is a good way to find out if other people are reporting odd behavior that you are wondering about. If you use <code>dev</code> and wonder about something you are seeing in Loop, you can check <code>Issues</code> list to see if others are noticing the same. If so, you can help by capturing information and reporting it. Not super helpful to just say \"Yeah, me too...\" but better if you can attach screenshots, <code>Issue Reports</code> from Loop settings, and a thorough description of the problem you are seeing. Be a part of the solution by thoughtfully providing information to help debug.</p> <p></p>"},{"location":"version/development/#keep-checking-looped-group","title":"Keep checking <code>Looped</code> group","text":"<p>Keep watching <code>The Looped Group</code> on  Facebook. Major concerns/issues are brought up there...so it doesn't hurt to scroll through and see what's going on there.</p>"},{"location":"version/development/#become-familiar-with-your-data-sources","title":"Become familiar with your data sources","text":"<p>Another useful thing if you'll be on <code>dev</code> branches undergoing a lot of active change...know how Loop works and where to look for additional information about what you are seeing. For example, if you see an IOB value that looks odd, you should know to look at the insulin deliveries stored in the Health app.</p>"},{"location":"version/development/#generate-an-issue-report","title":"Generate an Issue Report","text":"<p>Know how to generate an <code>Issue Report</code> when you see a problem so you can provide that if asked. An <code>Issue Report</code> is a log file generated by the Loop app that has a lot of information the developers can parse to figure out what Loop was doing when you were having a problem.</p> <ul> <li>Loop v2.2.9\u00a0 and earlier:<code>Loop Settings -&gt; Issue Report</code></li> <li>Loop 3\u00a0 and later: <code>Loop Settings -&gt; Support -&gt; Issue Report</code></li> </ul> <p>Do not confuse this with reporting an issue with Loop.  That is done by logging into GitHub and going to the <code>Issue</code> page to report a new issue.  You can read about existing issues without logging in, but to report a new one, you must log in to GitHub.</p>"},{"location":"version/development/#create-a-debug-report","title":"Create a Debug Report","text":"<p>This 6-minute long, classic Katie DiSimone video shows how to capture debugging logs. If you are testing a new branch, this is a valuable skill to assist developers in identifying problems. In addition to showing you how to generate and save the debug text information, the video explains how to create a <code>gist</code> with the debug information using your GitHub account and file an official Issue on the Loop GitHub <code>repository</code>. This may be required in some cases.  But start by chatting directly on Zulipchat with the developer. What you are experiencing may already be known. If the developers need you to open a new <code>Issue</code>, they will say so on Zulipchat.</p>"},{"location":"version/development/#repositories-and-code","title":"<code>Repositories</code> and Code","text":"<p>If you're a developer looking for direct links to the code and documentation in GitHub:</p> <ul> <li><code>Loop</code></li> <li><code>LoopDocs</code></li> </ul> <p>For more information on how to contribute code to the Loop project, please review:</p> <ul> <li>How to Contribute to Open Source</li> <li>the LICENSE</li> <li>the  CODE_OF_CONDUCT</li> </ul> <p>If you want to contribute code improvements, please join Loop Zulipchat and be sure to subscribe to all the channels. Meet the developers and testers who make this app, and learn about what is coming next.</p>"},{"location":"version/loopworkspace/","title":"LoopWorkspace","text":""},{"location":"version/loopworkspace/#loop-workspace","title":"Loop Workspace","text":"<p>This page is for the advanced user. It is a short introduction for folks interested in testing code before it is released, or contributing to that code.</p> <p>If you wandered over here meaning to build the latest Loop release, the rest of this page might be interesting but you should not follow any of the steps. Head back over to Build Loop App when you are ready to build the app.</p> <p>LoopWorkspace is now used for all Loop Builds</p> <ul> <li>With the release of Xcode 13, Loop builds require LoopWorkspace</li> <li>Loop old-timers may remember the zip-download method - it is no longer available</li> <li>For all Loopers who want the latest<ul> <li>Loop Release</li> <li>Follow the step-by-step instructions found at Build Loop App</li> </ul> </li> </ul> <p>The typical user who wants to build Loop does not need to know the level of detail on the rest of this page.</p>"},{"location":"version/loopworkspace/#new-way-to-sign","title":"New Way to Sign","text":"<p>One of the recent changes to LoopWorkspace is the addition of the file: <code>LoopConfigOverride.xcconfig</code> to the LoopWorkspace folder. The contents of this file are shown in the graphic below.</p> <p></p> <p>There are several ways to use this to sign the targets automatically.</p> <ol> <li>Edit the line highlighted by the red rectangle to remove the comment marks (<code>//</code>) from the beginning of the line and replace the indicated TeamID (UY678SP37Q) with your own Team ID</li> <li>For developers who may have more than one clone for various testing, note the first line of that file, highlighted by the blue-dashed rectangle<ul> <li>If a <code>LoopConfigOverride.xcconfig</code> exists up two levels from the current LoopWorkspace folder, it will be included</li> <li>Use a directory structure for clones similar to the example shown in the graphic below where clones were created under ~/Downloads/ManualClones.</li> <li>Make a copy of the <code>LoopConfigOverride.xcconfig</code> in the ~/Downloads/ManualClones folder (from any LoopWorkspace folder) and edit that version with your TeamID</li> <li>All future clones created in this directory grouping are then automatically signed</li> </ul> </li> <li>For users of the Build Select Script, the script automatically generates the copy of  <code>LoopConfigOverride.xcconfig</code> in the ~/Downloads/BuildLoop folder the first time the script is run, guides the user into adding their TeamID and then, in subsequent downloads, uses that previously created file</li> </ol> <p></p>"},{"location":"version/loopworkspace/#team-id","title":"Team ID","text":"<p>Your Apple Developer ID is the 10-character Team ID   found on the Membership page after logging into your account at:    https://developer.apple.com/account/#!/membership.</p>"},{"location":"version/loopworkspace/#what-is-git","title":"What is git?","text":"<p>Git is a system of \"distributed version control\" that allows remotely (as in not located in the same place) collaborating people to work on one project and still track their changes to the same place. For example, if I sent 5 people one document to proof-read at the same time...it is quite possible that the edits I will get back from those 5 people would conflict with each other. Bob may have entirely deleted a sentence while Mary would have added words to that sentence. Git lets these remotely collaborating people deal with \"resolving conflict\" between versions more easily and merging suggestions (pull requests) into a coordinated space.</p> <p>So, in using git, we can do things with \"git commands\". Like \"Hey git...make me an exact copy of that guy's work over there.\" or \"Hey git, I'd like to compare my version of this page with Joe's version of the same page.\" Or using my old cookbook analogy...\"Hey git, I'd like to start a new cookbook called Italian Desserts.\"</p> <p>But yes, git commands take awhile to properly use. And they are not plain English-friendly.</p>"},{"location":"version/loopworkspace/#what-is-loopworkspace","title":"What is LoopWorkspace?","text":"<p>There is more information in Loop Development that is not repeated here.</p> <p>The important fact for this discussion on LoopWorkspace is that Loop developers own an account in GitHub called <code>LoopKit</code>.  Within that account, the developers have several <code>repositories</code> that support Loop in particular. A <code>repository</code> is like a book...let's think of it like a cookbook for now. Within the <code>LoopKit</code> account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of info about the app itself; and the outward-facing things that you interact with. How information is put to you and taken in from you...that's in Loop <code>repository</code> code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. <code>CGMBLEkit</code> for some of the transmitter parts of Loop, <code>RileyLink_ios</code> for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc.</p> <p>When you build Loop from <code>LoopWorkspace</code>, each of those repositories is downloaded to your computer.  This is slower than the old zip-download as far as downloading Loop - but it is much faster when you build Loop because all the files are already on your computer.</p> <p><code>LoopWorkspace</code> uses submodules to define how the frameworks are coordinated for building. The graphic below shows the dev branch at a particular point in time.  The precise version, or commit, of each submodule is defined by 7-character hexadecimal codes (look up SHA-1) with the repository for each submodule defined in a text file called <code>.gitmodules</code>.</p> <ul> <li>Several key <code>git</code> and other operating system commands will be provided later to assist you</li> <li>These commands will not be explained in detail</li> <li>If you want to know more, search the internet for documentation</li> <li>Often a series of commands is shown on one line, separated by semicolons</li> </ul> <p>The commit identifier for each submodule is important because that repository can be modified after things are set up and working with Loop.  When you download the code from that repository you want the exact version that was tested.</p> <ul> <li>Later on there will be information about determining your <code>git branch</code> for a given submodule</li> <li>You'll see language: <code>(HEAD detached at #)</code></li> <li>That <code>#</code> is the <code>commit</code> identifier for the submodule</li> </ul> <p>The <code>commit</code> for the <code>LoopKit</code> submodule is highlighted by the red rectangle in the graphic below. Advanced users testing the dev branch (or other branches or forks) need to know how to tell if their current download is up-to-date.</p> <p></p>"},{"location":"version/loopworkspace/#clone-loopworkspace","title":"Clone LoopWorkspace","text":"<p>To get that <code>LoopWorkspace</code> code to your computer, first open a terminal. Make sure your current path name does not have any embedded spaces.  If it does, you will get errors on your build.</p> <p>If you don't know how to open a terminal and navigate to a directory, reconsider whether you are ready for this page.</p> <p>You need to use a <code>git clone</code> command LIKE THIS (but not exactly the same...you're going to edit the <code>branch-name</code> part in there):</p> <p><code>git clone --branch=branch-name --recurse-submodules https://github.com/LoopKit/LoopWorkspace</code></p> <p>Now...look carefully and notice two things...that command (1) is getting the version of <code>LoopWorkspace</code> found in the <code>LoopKit</code> repository and (2) selects the branch you want to start working with when the clone is done.</p> <p>So, you will need to edit that <code>branch-name</code> before using the command so that you are getting started with the branch you want. If you want to clone from a different <code>fork</code>, the <code>LoopKit</code> will be replaced with the name of the GitHub site for the <code>fork</code>. For example, to test the <code>dev</code> branch (which is under development and has some cool new architecture and features), you would copy/paste:</p> <pre><code>git clone --branch=dev --recurse-submodules https://github.com/LoopKit/LoopWorkspace\n</code></pre>"},{"location":"version/loopworkspace/#start-xcode-using-command-line","title":"Start Xcode using command line","text":"<p>If you want to start the build from the command line, enter the following 2 lines into the terminal.</p> <pre><code>cd LoopWorkspace\nxed .\n</code></pre> <p>Remember the warning - if you build the <code>dev</code> branch on your phone from <code>Loop main</code>, it should work fine. Going backward, please delete the app from your phone and enter all your settings again to return to <code>main</code>.</p>"},{"location":"version/loopworkspace/#start-xcode-using-finder","title":"Start Xcode using Finder","text":"<p>The cloned version of the <code>LoopWorkspace</code> will go into the current directory in the Terminal app when you execute the command. Terminal app opens in your User account home directory by default when you first open it. Unless you changed to a different directory, check your home directory for the <code>LoopWorkspace</code> folder.</p> <p>How can you find your home directory?</p> <ol> <li>In <code>Terminal</code>, if you use <code>cd</code> that will take you there automatically.</li> <li>In <code>Finder</code>, Shift+Cmd+H will open your home folder.</li> </ol> <p></p> <p>There are a lot of cloned things in this home directory that involve Loop. You may have fewer...but be aware, you can always delete and reclone if you are in doubt or confused. You can also set up a special directory to hold the cloned code - just make sure there are no embedded spaces in the full path name.</p> <p>For this graphic, the cloned <code>LoopWorkspace</code> is in the home directory.</p> <p>Loop to <code>LoopWorkspace</code> in <code>dev</code></p> <p>Note that the directory <code>Loop.xcworkspace</code> has been renamed to <code>LoopWorkspace.xcworkspace</code> in the <code>dev</code> branch. This change makes <code>LoopWorkspace</code> the default target to simplify the build process.</p> <p>The words will be updated with the next release. It may take more time for the figures to be updated.</p> <ol> <li>Open <code>Finder</code> and navigate to the location that has <code>LoopWorkspace</code></li> <li>Open the <code>LoopWorkspace</code> folder</li> <li>Search for and double-click on the <code>LoopWorkspace.xcworkspace</code> folder - this automatically opens the Workspace in <code>Xcode</code></li> </ol> <p></p> <ul> <li>Enter your Apple Developers ID in the <code>LoopConfigOverride.xcconfig</code> file that now appears in the top of the folder list (not shown in this graphic)</li> <li>This automatically signs the 5 targets required for the <code>dev</code> branch</li> <li>Choose your device</li> <li>Tap on the build (play) button to build to your selected device</li> </ul>"},{"location":"version/loopworkspace/#updating-loop-using-loopworkspace","title":"Updating Loop using <code>LoopWorkspace</code>","text":"<p>When it's time to update the copy of <code>LoopWorkspace</code> on your computer - you have choices. You can use the method below or redo the whole cloning process.</p> <p>Be sure your terminal is in the correct location using Open a Terminal in <code>LoopWorkspace</code> Folder</p> <ol> <li>Make sure you are in the correct branch using this git command:     <pre><code>git branch\n</code></pre></li> <li>If you are not in the correct branch, for example, <code>dev</code>, then issue this git command (suitably modified for the desired branch)     <pre><code>git checkout dev\n</code></pre></li> <li>Use the following git commands in the LoopWorkspace folder of your terminal:     <pre><code>git fetch\ngit pull --recurse\n</code></pre></li> </ol> <p>If you are testing the LoopKit dev branch, you need to be on zulipchat and subscribe to at least the #development and #github streams. (It's a good idea to subscribe to all the streams.) When you see repository updates similar to the graphic below, there may also be an announcement in the #development channel that LoopWorkspace is updated and ready to test. If not you can check the commits in LoopWorkspace and see if they've been updated. It's a good idea to wait 24 hours. My procedure is to build dev to my backup phone and then put it on my \"real\" phone. Otherwise, wait for someone else to do it and give the all-clear in zulipchat.</p> <p></p>"},{"location":"version/loopworkspace/#updating-loop-to-a-specific-loopworkspace-commit","title":"Updating Loop to a Specific LoopWorkspace commit","text":"<p>Sometimes, you know a feature you want was added at a specific commit number; however, you know there are other changes later than that commit which you do not want to test. There is a solution.</p> <p>Be sure your terminal is in the correct location using Open a Terminal in LoopWorkspace Folder. First you have to bring down all the latest dev commits. Then you will back up to the one you want.</p> <ol> <li>Make sure you are in the correct branch using this git command:     <pre><code>git branch\n</code></pre></li> <li>If you are not in the correct branch, normally the desired branch is <code>dev</code>, then issue this git command (suitably modified for the desired branch)     <pre><code>git checkout dev\n</code></pre></li> <li>Use the following git commands to bring down all the newer commits to your copy:     <pre><code>git fetch\ngit pull --recurse\n</code></pre></li> <li> <p>Now you want to \"backup\" to the desired commit:</p> <ul> <li>You will need to figure out what that commit should be - there is no copy button here - you need to create this line yourself with the correct commit:</li> </ul> <pre><code>git checkout &lt;desired commit here&gt;\n</code></pre> <ul> <li>Once you have checked out the correct commit, assuming there were no errors, you need to update all the submodules to that commit with this command (which you can copy and paste)</li> </ul> <pre><code>git submodule update\n</code></pre> </li> <li> <p>Assuming there were no errors, see Local Modifications Conflict, in the process above, you can now build that commit.</p> </li> </ol>"},{"location":"version/loopworkspace/#build-following-update","title":"Build Following Update","text":"<p>Sometimes there is a change to the Workspace scheme in Xcode that interferes with building following an update to your local clone. In those cases, these steps typically work. Try the first one, and if that doesn't work, try the first two, etc.  Only after trying all three should you post asking for help on zulipchat.</p> <ol> <li>In Xcode Menu, select Product-&gt;Clean Build Folder</li> <li>In Xcode Menu, select File-&gt;Close Workspace and then File-&gt;Open Recent and select top line (one you just closed)</li> <li>Quit Xcode and delete derived data, then reopen Xcode (you may need to resolve package versions again)</li> </ol>"},{"location":"version/loopworkspace/#delete-derived-data","title":"Delete Derived Data","text":"<p>This command deletes derived data stored across all workspaces and projects by Xcode on your computer. If you have multiple clones locally, it deletes derived data from all of them. The derived data will be regenerated next time you build with Xcode using that clone.</p> <p>Copy and paste this command into a terminal window.</p> Copy and Paste to Delete Derived Data<pre><code>rm -rf ~/Library/Developer/Xcode/DerivedData\n</code></pre>"},{"location":"version/loopworkspace/#compare-your-local-clone-to-loopworkspace","title":"Compare your local clone to LoopWorkspace","text":"<p>In an ideal world, LoopWorkspace has the most recent compatible submodule identifiers revised at the same time the submodules are updated.  You will notice the commit identifiers for the updated submodules are different from the ones you have locally.</p> <p>You can check your current submodules with the <code>git submodule status</code> command in the LoopWorkspace folder of your terminal:</p> <p></p> <p>What are those super-long numbers?  Those are the actual SHA-1 (remember - look it up) for the commits.  But the first 7 characters are sufficient to uniquely identify the commit you need for the repository and branch identified in <code>.gitmodules</code>.  So compare the first 7 characters to the LoopKit / LoopWorkspace number and you know whether you need to update or not.</p> <p>To determine the commit for a single submodule on your computer, use the following commands in the LoopWorkspace folder:</p> <pre><code>  cd &lt;submodule-name&gt;; git branch; cd ..\n</code></pre> <p>The response will be similar to this exchange:</p> <pre><code>  cd rileylink_ios; git branch; cd ..\n</code></pre> <pre><code>  * (HEAD detached at 2541c1c)\n    dev\n</code></pre> <p>The asterick indicates the branch that is currently checked out (active).</p> <p>The phrase <code>* (HEAD detached at #)</code> allows you to compare your local version with the commit identifier on github.</p>"},{"location":"version/loopworkspace/#loopworkspace-unchanged","title":"LoopWorkspace Unchanged","text":"<p>What happens if you update (<code>git pull --recurse</code>) and there are no changes at the LoopWorkspace repository? There will be no change to your current clone on your computer.</p> <ul> <li>You'll see a series of responses saying:<ul> <li><code>Fetching submodule submodule-name</code> for each submodule-name</li> <li>followed by <code>Already up to date.</code></li> </ul> </li> </ul>"},{"location":"version/loopworkspace/#loopworkspace-updated","title":"LoopWorkspace Updated","text":"<p>What happens if you update (<code>git pull --recurse</code>) and there are changes at the LoopWorkspace repository? The changes will be brought down to your clone on your computer.</p> <p>You'll need to build Loop again to get these changes incorporated in the app on your phone.</p> <ul> <li>You'll see a series of responses saying:<ul> <li><code>Fetching submodule submodule-name</code> for each submodule-name</li> <li>One or more will show changes and specify which submodules were changed<ul> <li>followed by <code>Submodule path submodule-name: checked out</code> new SHA-1</li> </ul> </li> </ul> </li> </ul>"},{"location":"version/loopworkspace/#update-locally","title":"Update Locally","text":"<p>It has happened that you notice changes in one or more repository (in the #github stream) followed by an announcement in the #development stream that changes have been committed and please test.  But you get the response shown in the LoopWorkspace Unchanged scenario. You can make a comment in zulipchat, saying please update LoopWorkspace and then wait, or you can download the appropriate commit. If you are a new tester - you probably want to wait.</p> <p>If you want to go on and test, you can update to the correct commit without waiting for LoopWorkspace to get updated.</p> <p>First, in zulipchat, in the #github stream of the commit, click on the word <code>pushed</code> and that will take you to the commit. For example, clicking on pushed in zulipchat from the graphic shown above, goes to this website:</p> <p><code>https://github.com/ps2/rileylink_ios/compare/8ff4bca2bc5f...2541c1c899a9</code></p> <p>This indicates the final commit of that push for rileylink_ios is identified as <code>2541c1c</code>.</p> <p>At this point, the commands to get that commit locally on your computer are as follows, starting from the LoopWorkspace folder:</p> <p><code>cd rileylink_ios; git fetch; git checkout 2541c1c; cd ..</code></p> <p>If you got an error message the # you requested <code>did not match any file(s) known to git</code>, you either typed it incorrectly or you forgot the <code>git fetch</code> command. The fetch command brings down information from github to your computer but doesn't make changes to what you have checked out.</p>"},{"location":"version/loopworkspace/#local-modifications-conflict","title":"Local Modifications Conflict","text":"<p>If you have modified anything in a submodule folder on your computer, it might be in conflict with the latest commit.</p> <p>If you get a message such as this:</p> <pre><code>  error: Your local changes to the following files would be overwritten by checkout:\n    Loop/Models/LoopConstants.swift\n  Please commit your changes or stash them before you switch branches.\n  Aborting\n</code></pre> <p>The easiest fix is to type commands similar to the following, where you modify Loop to be whichever folder(s) had the conflict. If more than one folder had a conflict, then issue the stash for each folder. The submodule update command will continue to show errors until you stash all local changes that interfere with the new code:</p> <pre><code>  cd Loop; git stash; cd ..\n  git submodule update\n</code></pre> <p>After stashing and updating with no errors, you can try to restore your changes: <pre><code>  cd Loop; git stash pop; cd ..\n</code></pre></p> <p>If you see errors indicating you cannot use <code>pop</code>, that means you need to manually add your customizations back.</p> <p>You will need to repeat this for each submodule that has a conflict. Use the lines above (for Loop submodule) as a template to resolve conflict(s) other submodule(s).</p>"},{"location":"version/loopworkspace/#checking-out-different-branches-within-a-loopworkspace","title":"Checking out different branches within a LoopWorkspace","text":"<p>More advanced users...I'm not going to explain this in quite so much detail, but yes, you can individually change the branches in a LoopWorkspace.</p> <p>There are 2 main ways to do this.</p> <ol> <li> <p>If you're already familiar with git, the easiest way is to <code>cd</code> into the appropriate repository (like <code>cd rileylink_ios</code>) and <code>checkout</code> the desired branch.</p> </li> <li> <p>If you're not as familiar with git, if you edit your .gitmodules directory in LoopWorkspace, you can specify other repos to use (and add a line to specify branches, too). Then if you do a <code>git submodule sync</code> the workspace will sync to new submodules. Then <code>git submodule update --init --recursive --remote</code> will update all the submodules to the right branches and get HEADs detached correctly, etc. Note that the HEADs will be detached at the top of the branch (most recent commit) based off of <code>.gitmodules</code>.</p> </li> </ol> <p></p>"},{"location":"version/loopworkspace/#branch-tutorial","title":"Branch Tutorial","text":"<p>This tutorial is pretty nice.</p> <p>Git Tutorial</p> <p>When I first started using git, my adult son answered all my questions very politely and then started sending me links to this tutorial instead.</p> <ul> <li>Learn Git Branching</li> </ul> <p>There's a section called <code>Main</code> that goes over commands in your local copy (clone) of the code. There's a section called <code>Remote</code> that goes over fetching, pulling, and pushing to remote copies.</p> <p>For Open Source Software, you might fetch and pull from the LoopKit repositories, but you will only push to your fork.</p> <ul> <li>You may need to add <code>git remote add &lt;name&gt; &lt;your-fork-repo&gt;</code> and <code>git push --set-upstream &lt;name&gt; &lt;branch&gt;</code> to your vocabulary.</li> </ul>"},{"location":"version/loopworkspace/#non-loopkit-clones","title":"Non-LoopKit clones","text":"<p>Average Loopers can skip this whole section...it's for Developers mostly</p> <p>This whole section about non-LoopKit workspace clones is something almost every Looper can totally skip over. I'm only writing up this section for people who are interested in dabbling in code collaborations/customizations that they would want to maintain separately from LoopKit proper.</p> <p>Scenario: You have a friend named DeveloperBob who has his own version of LoopWorkspace that he's customized. DeveloperBob wants you to look at his code customizations and collaborate with him. You need to change the \"git clone\" command to get DeveloperBob's version, not LoopKit's version. And, you'd want to make sure you specify the branch that the new feature is on, too. DeveloperBob should usually include the branch name when he posts/shares. So, the command line might be edited to something like:</p> <p><code>git clone --branch=new-features --recurse-submodules https://github.com/DeveloperBob/LoopWorkspace</code></p> <p>So...if you are trying to grab someone's LoopWorkspace to use it, you'll need to make sure you get the command correct if they don't specify it for you. You can't clone multiple \"LoopWorkspaces\" into the exact same home directory (because they will have the same name), so you may want to create a subdirectory to put them in. Like you could make a folder called \"DeveloperBob\" and then move into that directory in Terminal before you clone DeveloperBob's LoopWorkspace.</p> <p>How would you do that? Simple <code>cd &amp;&amp; mkdir DeveloperBob</code> would make the new folder in your home directory. And then <code>cd DeveloperBob</code> would move your Terminal app to be working inside the new DeveloperBob folder. So if you wanted to clone DeveloperBob's LoopWorkspace, that would be a good way to keep track of where the code came from.</p> <p>If you ever get in doubt and can't remember where your code was cloned from, you can <code>cd LoopWorkspace</code> to get into the directory and then use <code>git remote -v</code> to tell you where it came from.</p>"},{"location":"version/loopworkspace/#pushing-commits-from-loopworkspace","title":"Pushing commits from LoopWorkspace","text":"<p>So you've got a great idea for a new feature, made those changes to your LoopWorkspace, and want to get them into GitHub. Awesome!</p> <p>To understand how to do this, we'll need to understand a bit more about how git keeps track of changes. In git, developers can have different \"branches\" (see What are Git Branches? on the Loop Development page for more details about what a branch is). There are two different types of branches: remote and local. If you were to fork Loop on GitHub, then the branches that you can see on GitHub are \"remote\" branches - they're hosted on the GitHub server. On the other hand, you can also create \"local\" branches that are stored directly on your computer by \"checking out\" the remote branch. You'll need to \"commit\" your changes to the local branch, and then \"push\" those changes to the remote branch in order to be able to see them in GitHub. There are specific commands that you can type into the command line to do all of these actions, but I'm not going to go into detail because there are different ways and everyone has their own preference.</p> <p>It's a little easier to think about this with an analogy. Let's say you're working at a company that's creating a cookbook. There's a centralized, production-ready version of the cookbook on their website that all the employees can view. Think of the website version of this cookbook as being like the remote branch. You're assigned to change the pancake recipe in the cookbook. Since the company doesn't want employees to make changes directly to the version of the cookbook that the customers see, you need to make a copy of it on your computer so you can make your changes to the pancake recipe. When you make the personal copy on your computer, it's like \"checking out\" the remote branch. Your copy is like the local branch - you can make whatever changes you want without having to worry about customers accidentally seeing them. When you make an important change to the recipe (like adding a photo or changing the ingredients), you might want to make a note in the edit history so that you can go back to that version of the recipe in case you accidentally make unintended changes - those notes you make would be \"commits\". Once you're happy with the recipe, you'll add it back into the production version of the cookbook on the website, which is similar to what you're doing when you \"push\" your changes.</p> <p>Where do the submodules fit in? Each submodule is actually a branch, so when you make changes to multiple submodules, you'll need to commit those changes to their respective branches. Let's say you've made changes to Loop and LoopKit. You'll need to go into Loop and commit and push the changes, then go into LoopKit and commit and push the changes.</p> <p>There are a few different ways to keep track of all these different branches. Some people like using the command line (which is what you're using when you do commands like <code>git clone</code>) because it's very customizable and has the largest variety of commands. Others like to use graphical Git editors, which make it easier to see changes and be able to do a variety of common actions (like cloning, committing, and pushing) with the push of a button. Everyone has their own preferences, but some methods that Loop contributors have used in the past include the command line, Gitkraken, and SourceTree.</p>"},{"location":"version/overview-version/","title":"Version Overview","text":""},{"location":"version/overview-version/#version-overview","title":"Version Overview","text":"<p>The Version tab of LoopDocs contains information about releases (versions), code customization and development.</p> <p>Map to this section:</p> <ul> <li>Releases<ul> <li>Description of the current released version of the Loop app including when it was released</li> <li>Reverse chronology of earlier releases</li> </ul> </li> <li>Information needed to Personalize (Customize) your app (regardless of build method)<ul> <li>Custom Edits</li> <li>Build-Time Flag</li> </ul> </li> <li>Simulator Build<ul> <li>Considerations when using a simulator</li> </ul> </li> <li>Loop Development<ul> <li>Description of the development process for Loop</li> <li>Information you need if you want to participate</li> </ul> </li> <li>Build Dev<ul> <li>Considerations when using the dev branch</li> <li>Links to the two build methods</li> </ul> </li> <li>LoopWorkspace<ul> <li>If you are interested in development, this page goes into more detail</li> <li>The primary focus is on techniques for using git</li> </ul> </li> </ul>"},{"location":"version/releases/","title":"Releases","text":""},{"location":"version/releases/#loop-releases","title":"Loop Releases","text":"<p>The new features added with each Loop release (starting with Loop version 2.0) are provided for reference.</p>"},{"location":"version/releases/#loop-3-compatibility","title":"Loop 3 Compatibility","text":"<p>Be aware that Loop 3 is forward compatible:</p> <ul> <li>You can build Loop 3 over older versions of Loop and maintain therapy settings as well as your configuration for CGM and pump (including a pod)</li> <li>You can build Loop 3 using a browser on any computer (no Mac required) with Build with Browser</li> <li>Your phone must be running at least iOS 15.1 (although some people report they needed newer iOS than that when building with GitHub Browser Build)</li> </ul> <p>Loop 3 is NOT backwards compatible.\u00a0Once you build Loop 3 or later on your phone, you cannot return to Loop 2.2.x or FreeAPS without some additional work.</p> <ul> <li>Be prepared to enter all your settings again and start a new pod</li> <li>If you use Loop Follow, you do not need to delete Loop Follow</li> <li>When downgrading to an older version of Loop from Loop 3, you have to delete all apps with a shared app group ID<ul> <li>For more information, click on Remove Apps with Shared App Group</li> </ul> </li> </ul>"},{"location":"version/releases/#current-release","title":"Current Release","text":"<p>The current released version for the Loop app is 3.2.3. The dates and contents for releases are summarized below in reverse chronological order (so newest release information comes first).</p>"},{"location":"version/releases/#what-version-do-i-have","title":"What Version Do I Have?","text":"<p>Tap on the Settings icon at the toolbar of the Loop app and look at the version information at upper left. This graphic was generated with an older version.</p> <p></p>"},{"location":"version/releases/#is-the-released-version-newer","title":"Is the Released Version Newer?","text":"<p>Release information is always found on the GitHub LoopKit/Loop\u00a0release page.</p> <p>Additional information including links is found here, but be aware that updates to\u00a0LoopDocs\u00a0may take some time after a new release comes out.</p>"},{"location":"version/releases/#loop-version-numbering","title":"<code>Loop</code> Version Numbering","text":"<p>With the release of <code>Loop 3</code>, there is a new pattern for identifying the releases as distinct from the development work.</p> <p>Each release uses 3 numbers: Major.Minor.Patch</p> <ul> <li>Major is reserved for a significant change in the code, such as occurred going from <code>Loop 2.2.9</code> to <code>Loop 3.0.0</code></li> <li>Minor is used when the development branch is released for general use</li> <li>Patch typically indicates a modification to support external events like an Xcode or iOS version update with no feature changes in Loop</li> </ul> <p>To prevent confusion between versions used for development and versions used for release (<code>main</code> <code>branch</code>), the Minor values are even for released code. The Minor value for the development <code>branch</code> (<code>dev</code>) is incremented as part of the release process and is always odd.</p> <p>For example:</p> <ul> <li><code>Loop 3.0.0</code> was the first released version of <code>Loop 3</code><ul> <li><code>Loop 3.1.0</code> was the development version before <code>Loop 3.2.0</code> was released</li> </ul> </li> <li><code>Loop 3.2.0</code> was the next released version<ul> <li><code>Loop 3.2.1, 3.2.2 and 3.2.3</code> are patches to <code>Loop 3.2.0</code> without changes to the features of <code>Loop 3.2.x</code></li> <li><code>Loop 3.3.0</code> is the current development version</li> </ul> </li> </ul>"},{"location":"version/releases/#loop-3-version-history","title":"Loop 3 Version History","text":""},{"location":"version/releases/#loop-v323","title":"Loop v3.2.3","text":"<p>Loop v3.2.3 was released on September 19, 2023.</p> <p>This patch release was required for those who build using the Mac method.</p> <ul> <li>There are no changes to app functionality</li> <li>Version 3.2.2 and earlier cannot be built using Xcode 15, see Cycle Inside Loop</li> </ul>"},{"location":"version/releases/#loop-v322","title":"Loop v3.2.2","text":"<p>Loop v3.2.2 was released on April 24, 2023.</p> <p>This is a patch release to fix archiving with Xcode 14.3.</p>"},{"location":"version/releases/#loop-v321","title":"Loop v3.2.1","text":"<p>Loop v3.2.1 was released on March 20, 2023.</p> <p>This is a patch release primarily dealing with localization updates.</p> <ul> <li>G7 Plugin localization fixed: was defaulting to Spanish in some cases.</li> <li>Updated translations from translators on Lokalise.</li> <li>Many behind-the-scenes fixes for how strings are tracked in the various frameworks that Loop uses, fixing a large number of broken/missing translations.</li> </ul>"},{"location":"version/releases/#loop-v320","title":"Loop v3.2.0","text":"<p>Loop v3.2.0 was released on March 17, 2023.</p> <p>There are some important bug fixes and new features, so please rebuild to this version as soon as possible.</p> <p>Pete's announcment:</p> <p>Loop 3.2 Is released! This contains some very important bug fixes for everyone. If you are running latest dev, you do not need to update, but everyone else running older 3.x versions of Loop should consider upgrading as soon as you can.</p> <p>https://github.com/LoopKit/Loop/releases/tag/v3.2.0</p> <p>Bug Fixes (Please update ASAP):</p> <ul> <li>Omnipod bolus tracking issue fixed: link</li> <li>Medtronic temp basal tracking issue fixed: link</li> <li>Crashes caused by large updates from Apple Health fixed</li> <li>Automatic refresh timers for Omnipod (both Dash and Eros) have been removed, to reduce load on pods and reduce frequency of failed pods.</li> </ul> <p>Updates and new Features:</p> <ul> <li>Missed Meal Notifications. If you want, Loop will detect situations where it looks like you may have consumed carbs but did not enter them into Loop, and will notify you with an easy option to enter the amount, and the time of eating already estimated for you. Find this option in the Alert Management section of Loop settings.</li> <li>Tidepool Service added. This lets you upload your diabetes data from Loop to Tidepool! It is in early stages, so there may be issues. Please report any issues you have with this integration on DIY Loop forums, like Zulip, GitHub, or the Looped group.</li> <li>Translations! Loop now has very good coverage for several languages, including German, Spanish, Italian, French, Danish, Polish, Dutch, Norwegian, Russian, Turkish, and Romanian!<ul> <li>Warning - a few items got overwritten by Spanish - if you can't figure it out, try Google translate</li> </ul> </li> <li>A new safeguard restricts automatic dosing to keep your IOB below a limit of 2 times your max bolus. Manual dosing can still be delivered to put your IOB above this amount. link</li> <li>Add missing X-Large watch complications. link</li> <li>\u201cDeactivate Pod\u201d button on some screens changed to not be so alarming, as it doesn\u2019t actually deactivate the pod, but takes you to a screen where you can, and has an option to cancel: link</li> </ul>"},{"location":"version/releases/#loop-v300","title":"Loop v3.0.0","text":"<p>After several years of development and a lot of testing, Loop 3 is here!</p> <p>Loop v3.0.0 was released on January 14, 2023.</p> <p>Link to release notes for Loop 3.0</p> <p>Use Script not Zip</p> <p>If you follow that link above, there is an <code>Assets</code> section with a zip link</p> <ul> <li>Do not try to build from the zip link</li> <li>For Browser Build, refer to: GitHub Overview</li> <li>For Build with Mac refer to:<ul> <li>Updating</li> <li>Build the Loop App</li> </ul> </li> </ul> <p>Branch Name Change</p> <p>The branch name associated with the latest Loop release is <code>main</code>.</p> <ul> <li>All new Git <code>repositories</code> on GitHub will be named <code>main</code> instead of <code>master</code> starting October 1, 2020</li> <li>GitHub provides tools to assist in modifying existing <code>repositories</code> to use main</li> </ul>"},{"location":"version/releases/#remove-apps-with-shared-app-group","title":"Remove Apps with Shared App Group","text":"<p>The storage of data with Loop 3 is not backward compatible. In other words, if you attempt to build Loop 2.2.x (or FreeAPS) on a phone which has been upgraded to Loop 3, you will not be able to run that app. You can successfully build the app, which will overwrite Loop 3 on the phone, but the app will crash and you will not be able to Loop.</p> <p>At this point, you can restore your Loop 3 build on your phone and continue using Loop 3 or you delete all apps on your phone with a shared app group. This list includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app.</p> <p>If you tried to delete \"all\" the apps and still have something causing an issue; you can follow the directions to Review Provisioning Profiles and then delete the profiles for all the apps by using the - sign. </p> <p>You do not need to delete Loop Follow, so if you use Loop Follow - do not delete that provisioning profile.</p>"},{"location":"version/releases/#loop-2-version-history","title":"Loop 2 Version History","text":""},{"location":"version/releases/#loop-v229","title":"Loop v2.2.9","text":"<p>This release updates Loop to handle Dexcom Share server changes for how glucose trend is parsed. Dexcom used to provide integers that mapped to the meaning for the arrows.  They changed that to strings, like \"Flat\" or \"FortyFiveUp\".</p> <p>Loop v2.2.9 was released on April 4, 2022.</p>"},{"location":"version/releases/#loop-v228","title":"Loop v2.2.8","text":"<p>This is a hotfix (no features were modified in the Loop app) to enable the app to be built with Xcode 13.3.</p> <p>Loop v2.2.8 was released on March 16, 2022.</p>"},{"location":"version/releases/#loop-v227","title":"Loop v2.2.7","text":"<p>This is a fix (no features were modified in the Loop app) to enable the app to be distributed via TestFlight.</p> <p>Loop v2.2.7 was released on Jan 11, 2022.</p>"},{"location":"version/releases/#loop-v226","title":"Loop v2.2.6","text":"<p>Several users reported issues with IOB accounting in Loop v2.2.5, where IOB was being under-reported, which could cause Loop to continue recommending increases in insulin delivery. A fix was made and provided as Loop v2.2.6. </p> <p>This is a serious issue, so updating to this release is strongly recommended for anyone currently running v2.2.5. If you tap on Loop Settings and look at the top, and see LOOP V2.2.5, then rebuild ASAP. The time window when you would have built v2.2.5 is from Aug 22 through Sep 6, 2021.</p> <p>The issue appears to be the result of a failure to write to Apple HealthKit, which may occur if the Health app on your phone is having problems, or if you have turned off Loop's ability to write Insulin data to HealthKit. The fix involves reverting a change made in v2.2.5.  This change was an attempt to reduce overlaps of Reservoir and Pump Event reconciliation which intermittently over estimate insulin delivery. Instead, that issue will be fixed in the next major release of Loop.</p> <p>Thanks to all who helped with reporting, digging, and testing this quickly. It's great to have such a strong community of people eager to help.</p> <p>Loop v2.2.6 was released on September 6, 2021.</p>"},{"location":"version/releases/#loop-v225","title":"Loop v2.2.5","text":"<p>This is an interim release as we prepare for the major changes currently in development. If you are running an older version of Loop, such as v2.2.4 (master or automatic-bolus branch) or an older version, it is recommended that you update to v2.2.6 to get all these new features. A summary of modifications with respect to Loop v2.2.4 is listed below.</p> <p>Loop v2.2.5 was released on August 22, 2021.</p>"},{"location":"version/releases/#new-features","title":"New Features:","text":"<p>Automatic Bolus (Experimental) Dosing Strategy</p> <ul> <li>Users may select Dosing Strategy</li> <li>Default Dosing Strategy continues to be Temp Basal Only</li> <li>Automatic Bolus Dosing Strategy is marked experimental<ul> <li>If you used Loop v2.2.4 automatic-bolus branch, this release will behave the same</li> <li>If you used Loop v2.2.4 master branch, approach this feature with caution; it may require changes to settings</li> <li>Tracking automatic vs manual boluses is not yet implemented in the code and databases</li> </ul> </li> </ul> <p>Provisioning Profile Expiration Notifications:</p> <ul> <li>User gets notified when Loop app expiration date nears</li> <li>Expiration date is included in the issue report</li> </ul> <p>RileyLink Compatible Devices:</p> <ul> <li>The RileyLink compatible device displays are pump independent</li> <li>OrangeLink Support added for connection monitoring, battery level alerting, find device, and light/vibration controls</li> <li>Medtronic Pump Settings screen updated with option to disable MySentry use; user can trade Medtronic pump battery for longer RileyLink compatible device battery life</li> </ul> <p>Omnipod Features:</p> <ul> <li>Pod Settings layout: improved layout and functionality</li> <li>Fault Codes: PDM style Ref code displayed for pod faults</li> <li>Confirmation beeps: improved and more uniform implementation</li> <li>Pod Suspended: pod beeps once every 5 minutes until delivery is resumed or alarm cleared</li> </ul>"},{"location":"version/releases/#code-fixes","title":"Code Fixes:","text":"<p>Omnipod Code Fixes:</p> <ul> <li>Make insertion more robust (LoopKit issue #1369)</li> <li>Fix \u201cPod already primed\u201d errors when priming cancelled (rileylink_ios issue #661)</li> <li>Prevent 049 pod faults during setup (rileylink_ios issue #627)</li> <li>See RileyLink Pull Request 676 for additional details.</li> </ul> <p>(REMOVED) Insulin Accounting:</p> <ul> <li>Reduced occurrences of overlaps in accounting for insulin via reservoir and dose history, which causes temporary overestimation of IOB</li> <li>See Loop Pull Request 344 for details</li> <li>This modification (in v2.2.5) was removed for v2.2.6<ul> <li>It worked as advertised during testing, but . . .</li> <li>If the user's phone had trouble communicating with the Apple HealthKit app, this could cause IOB to be under-reported and cause Loop to provide more insulin than needed</li> </ul> </li> </ul> <p>Dexcom Non-US Share:</p> <ul> <li>Dexcom Share URL for non-US users has been fixed.</li> </ul> <p>For community support, please use one of the Loop Social Media help sites.</p>"},{"location":"version/releases/#loop-v224","title":"Loop v2.2.4","text":"<p>Released October 3, 2020 with \"fixes\" introduced without renumbering the version number. Last change was on January 19, 2021.</p> <ul> <li>Revert to previous date pickers (Thanks @novalegra!)</li> <li>Pod fault handling improvements (Thanks @itsmojo!)</li> <li>Fix issue with pod status screen not allowing new pod pairing or continuing of interrupted pairing.</li> <li>October 22, 2020, update travis to make it work with Xcode 12</li> <li>January 19, 2021, pin the carthage to 0.36.0.  Users no longer required to install homebrew or carthage</li> </ul>"},{"location":"version/releases/#loop-v223","title":"Loop v2.2.3","text":"<p>Released September 25, 2020</p> <p>Warning - Rebuild ASAP for Pods</p> <ul> <li>A bug was introduced in this version, quickly fixed in v2.2.4.</li> <li>If you use pods, please rebuild using v2.2.6.</li> </ul> <ul> <li>Fetch pump and cgm data on manual loop retry (when Loop icon is red or yellow)</li> <li>Re-arranged pod status screen to prioritize needed information and actions.</li> <li>Pod pairing fixes for more edge cases.</li> <li>Translation updates.</li> <li>Fix share server integration, pointing to share2.</li> <li>Report RSSI and low gain in Read Pod Status command.</li> <li>Report failure properly when Play Test Beeps command fails.</li> <li>Carthage build fix for Xcode 12.0.1</li> </ul>"},{"location":"version/releases/#loop-v221","title":"Loop v2.2.1","text":"<p>Released August 9, 2020</p> <ul> <li>Include pending insulin in:<ul> <li>forecast uploaded to Nightscout</li> <li>status extension forecast</li> </ul> </li> <li>Updated translations, fixes for temp override translations, new Arabic translations.</li> <li>Omnipod integration fixes:<ul> <li>Avoid suspending during deactivation if pod has a fault, is in setup, or already suspended.</li> <li>Show the correct expected address in invalid address error</li> <li>Reuse same address during attempts to pair with same pod</li> <li>Fix for Medtronic only: when a bolus issued via the Loop interface was canceled by issuing a suspend on the pump itself, Loop will incorrectly track the bolus as if the full amount were delivered</li> <li>Updates for omnipod packet parser</li> <li>Suggest moving RileyLink to new area on multiple pairing failures</li> </ul> </li> <li>Minimed updates:<ul> <li>Detect temp basal cancellation performed on pump</li> </ul> </li> </ul>"},{"location":"version/releases/#loop-v22","title":"Loop v2.2","text":"<p>Released April 17, 2020</p> <ul> <li>Updated carb/bolus screens. Thanks @mpangburn!<ul> <li>Carbs and boluses are now entered together, which is a more familiar model to many caregivers.</li> <li>Forecast preview while entering bolus allows you to see potential impact of your bolus before delivering.</li> </ul> </li> <li>Improvements in Watch updates; sleep data being used to update complications when you are awake. Thanks @novalegra!</li> <li>Omnipod pairing improvements. Bug fixes, and better error messaging. Thanks @itsmojo!</li> <li>Many performance improvements, especially effecting long time Loop users. Delays in rendering graphs during app launch should be fixed.</li> <li>New device communication logging facility- Additional logging across pod swaps, and logging of CGM communication.</li> <li>Rendering fixes to prevent insulin graph from drawing outside of bounds.</li> <li>Bug fix to align use of 10m insulin delay in dose computation and forecast.</li> <li>Include current bg in suspend threshold evaluation.</li> </ul>"},{"location":"version/releases/#loop-v20","title":"Loop v2.0","text":"<p>Released December 31, 2019.</p> <p>For Reference Only</p> <p>Enough time has passed that this version should no longer be on anyone's phones (the one-year expiration time should take care of that).</p> <p>There is a lot more detail provided in the Loop v2.0 section because it constituted a significant change to parts of Loop from prior releases. This section and the Omnipod-Testing branch sections are left here for historical interest.</p>"},{"location":"version/releases/#what-was-new-in-loop-v20","title":"What was new in Loop v2.0?","text":"<p>This is a highlights reel comparing Loop v2.0 to v1.9.6.</p>"},{"location":"version/releases/#uploading-of-bgs-to-nightscout","title":"Uploading of BGs to Nightscout","text":"<p>Loop v2.0 has an option to upload your BG data to Nightscout directly. It is a new slider under the CGM configuration section for Dexcom users. After you add your CGM transmitter ID, go back into the CGM info and you'll see a new slider called \"Upload Readings.\"  Technically, Loop's dev branch had that feature for a hot minute before Loop v2.0 was released...but for almost everyone this will be a brand new feature they haven't had before. This feature can help if/when Dexcom's Share servers ever go through another large outage like we had before. If that happens, you can turn on the \"Upload Readings\" switch and your CGM data will now be in Nightscout even without Share servers working properly. Good practice would be to temporarily disable your Share bridge in Nightscout while Loop is responsible for CGM uploading so that you don't get duplicate data. You can disable Share bridge by logging into your Heroku account, going to the Settings tab, clicking on \"reveal config vars\" and then deleting the word \"bridge\" from the ENABLE line.</p>"},{"location":"version/releases/#a-fix-for-settings-loss","title":"A fix for settings loss","text":"<p>iOS 13 brought about a quirky little bug where you could suddenly lose settings in Loop. But, it wasn't just limited to Loop, sometimes people lost Dexcom app settings too. The issue is most common when the phone goes through a power cycle, but it has happened at other times, too. There's a fix for that new bug in Loop now...so that's a good reason to update. (If you encounter that bug before you have a chance to update your Loop app, simply restart the Loop app and your settings should reappear.)</p>"},{"location":"version/releases/#confirmation-beeps-expanded","title":"Confirmation beeps expanded","text":"<p>Confirmation beeps have been expanded based on user feedback...we heard parents and school nurses really appreciate hearing a beep for not just boluses, but also for suspend/resume commands and editing basal schedule (so you are sure it saved properly). So, confirmation beeps are now for boluses, suspend/resume, and basal schedule edit saves.</p>"},{"location":"version/releases/#read-pod-status-added","title":"Read Pod Status added","text":"<p>There's a new command in the RileyLink menu for \"Read Pod Status\" that is analogous to the existing command for Medtronic users. You can query your Pod for its current status info using that command.</p>"},{"location":"version/releases/#nightscout-profile-uploading-introduced","title":"Nightscout profile uploading introduced","text":"<p>Loop will upload your basal schedule, ISFs, carb ratios, and override presets from Loop settings to your Nightscout profile. If you ever lose your phone and need to setup Loop brand new...your settings will be easy to find in Nightscout now.</p>"},{"location":"version/releases/#non-linear-carb-model-introduced-as-default","title":"Non-linear carb model introduced as default","text":"<p>All branches (master and dev) now use a \"non-linear\" carb model, so let's give some info about the change.</p> <p>Previously, the carb model Loop used had a linear absorption predicted with dynamic carbs adjustments. What this means is that food absorption was modeled as a flat, even effect (like the straight grey graph that you'll see in the Insulin Counteraction Effects chart after you added a carb entry. But looking at large groups of meals' datasets (and supported by personal, anecdotal experiences), food really has a bit more of a non-linear absorption. Meaning, we usually see more of a food impact up-front than the old carb model in Loop predicted.</p> <p>What did that mismatch mean for us if the model predicts a linear absorption, but the meal actually behaves differently?</p> <ol> <li>Bolusing: You've probably seen smaller upfront boluses for meals than you would have preferred. This is because the insulin was predicted to over-power the linear (slower) carb model soon after a bolus is given.</li> <li>Early low temp basals: You've also probably seen a tendency to have early zero basal or low basals set by Loop for the first 30-60 minutes after a meal bolus if you don't have a significant blood glucose spike immediately after the carb entry. This might have been even more obvious for those of you who are regularly waiting to eat after a bolus, too.</li> </ol> <p>With a non-linear absorption model, the carb absorption will more closely match observed blood glucose impacts we've seen after meals. And when the model is more closely matching actual experience, that means the predicted blood glucose curves will do a better job at providing more upfront bolus and not having the tendency to have overly conservative temp basals soon after a meal.</p>"},{"location":"version/releases/#overrides-introduced","title":"Overrides Introduced","text":"<p>Loop v2.0 marks the first time Loop master branch has overrides included. Additionally, this release moves overrides setup from the configurations area of Loop settings to the workout icon in the Loop toolbar. There has also been bug squashing in dev branch for overrides over the recent past, so updating is a good idea even if you already have overrides on your current build. Want to learn more about overrides? Read about them here.</p>"},{"location":"version/releases/#retrospective-correction-always-on","title":"Retrospective Correction always on","text":"<p>Retrospective correction used to be an optional toggle in the algorithm. It is now on by default all the time. It is an important part of the algorithm (helps Loop look at how good/bad its recent prediction curve has been vs reality), and leaving it on made sense anyways.</p>"},{"location":"version/releases/#omnipod-support-in-released-code","title":"Omnipod support in Released Code","text":"<p>Yes, most of you are already using Omnipod with your Loop...but this is the first time that Loop master branch supports Omnipod users. Please update if you have been using Omnipod-testing branch especially...it's time to get all the bug fixes that we've done in Loop.</p>"},{"location":"version/simulator/","title":"Simulator Build","text":""},{"location":"version/simulator/#simulator-build","title":"Simulator Build","text":"<p>There are 2 main types of simulators users may want to build. Each of these require less up-front acquisition of hardware and may be desirable as a first step towards becoming a Looper.</p> <p>Please, review all the Intro and Build pages, even if you will not complete them yet.</p>"},{"location":"version/simulator/#simulator-using-browser-build","title":"Simulator using Browser Build:","text":"<ul> <li>No Mac computer required</li> <li>Must have a paid Apple Developer ID ($99/year)</li> <li>Must have a compatible phone</li> </ul> <p>Follow the normal instructions to build with browser, install the app on a compatible phone and explore the app using the Pump Simulator, CGM Simulator or both.</p>"},{"location":"version/simulator/#simulator-using-build-with-mac","title":"Simulator using Build with Mac:","text":"<ul> <li>Must have a Mac computer (or virtual machine, Intel chips only)</li> <li>Can build the simulator with a free Apple Developer ID<ul> <li>Build to Mac (no phone required) or</li> <li>Build to a Compatible Phone using Mac Build</li> </ul> </li> </ul>"},{"location":"version/simulator/#build-to-a-simulated-phone-on-mac-computer","title":"Build to a Simulated Phone on Mac Computer","text":"<p>This simulator requires access to a Mac or virtual computer, see Compatible Computer</p> <ul> <li>Build pages to review, but complete later<ul> <li>Apple Developer Program (can use a free account)</li> </ul> </li> <li>Follow Xcode Version</li> <li>Follow Xcode Settings but can skip the <code>Add Apple ID</code> section</li> <li>Follow Build the Loop App but with the following variation:<ul> <li>Skip the section on Developer Mode (that is only when building to a phone)</li> <li>Download the code as directed</li> <li>Choose to Sign Manually in the Signing Targets section</li> <li>Continue with the Build Free Loop page<ul> <li>Select a simulator (not your phone) when told to do so</li> <li>Complete the Build to a Simulator section</li> </ul> </li> </ul> </li> <li>Use the simulated iPhone that will appear on you Mac and set up the app as desired</li> <li>This gives you a feel for the interface, but the simulator on the Mac has limitations</li> </ul>"},{"location":"version/simulator/#build-to-a-compatible-phone","title":"Build to a Compatible Phone","text":""},{"location":"version/simulator/#build-to-a-compatible-phone-using-browser-build","title":"Build to a Compatible Phone using Browser Build","text":"<p>You don't need to do anything special when you build the app using the Build with Browser instructions. Install the app on your phone from TestFlight. Then select the CGM and/or Pump simulator desired. You must have a paid developer account.</p>"},{"location":"version/simulator/#build-to-a-compatible-phone-using-mac-build","title":"Build to a Compatible Phone using Mac Build","text":"<p>When building to a real phone using a Mac, you must have access to a Compatible Computer and a Compatible Phone.</p> <ul> <li>You can use a Free Apple Developer account</li> <li>Follow Xcode Version</li> <li>Follow Xcode Settings<ul> <li>If you have a developer ID, use it in the <code>Add Apple ID</code> step and follow the normal build directions</li> <li>If you do not have a developer ID, use the Free Developer Account instructions in the <code>Add Apple ID</code> section</li> </ul> </li> <li>Follow Build the Loop App using the Free Account instructions<ul> <li>If your phone is running iOS 16 or newer, you must enable Developer Mode</li> <li>Download the code as directed</li> <li>Choose to Sign Manually in the Signing Targets section</li> <li>Continue with the Build Free Loop page</li> </ul> </li> <li>Once the App is on your phone<ul> <li>Follow the set up the app instructions on your phone but choose a simulated pump</li> <li>If you have a compatible CGM on this phone, you can select that or you can use the simulated CGM or enter glucose values on the main Loop screen</li> </ul> </li> </ul>"},{"location":"version/simulator/#what-to-expect","title":"What to Expect","text":"<p>Locked Phone or App in Background</p> <p>Loop will not work in the background without either a real CGM or a real pump to \"wake\" it up.</p> <p>The app will only work in the background in these special cases:</p> <ul> <li>Loop is on on the same phone as a CGM and you've added that CGM information to Loop</li> <li>Loop is attached to a pump (Pod or Medtronic)<ul> <li>You can configure the pump to drip water (instead of being attached to your body)</li> </ul> </li> </ul> <p>In all other cases, the phone must be open and unlocked for you to test the app.</p> <p>These CGM and pump options work to provide glucose readings or accept pump commands while the app is open, but will not \"wake\" the app when in the background or phone is locked:</p> <ul> <li>Dexcom Share</li> <li>Nightscout Remote CGM</li> <li>CGM Simulator</li> <li>Pump Simulator</li> </ul> <p>Disable Notifications</p> <p>When you have the Loop app on your phone to test as a simulator, you may want to disable notifications when you are not actively using it. Even if you quit the app, you will get Loop not Looping notifications while the app is on your phone.</p> <p>To Disable Notifications:</p> <ol> <li>Tap on iOS Settings -&gt; Notifications -&gt; Loop</li> <li>Disable <code>Allow Notifications</code></li> </ol> <p>The Loop app, when open, will be quite aggressive at warning you that you have disabled Notifications, so you can reverse those directions to enable notifications when actually using the app.</p>"}]}