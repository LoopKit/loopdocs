{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-loop","title":"Welcome to Loop","text":"<p>Welcome to the \"LoopDocs\" website where you can learn about Loop.</p> <p>This site shows you step-by-step how to build, set up and operate the Loop app.</p> <p>You do not need a technical or computer background to do this.</p> <p>Loop requires a substantial time commitment.</p> <p>In order to become a proficient looper, you need to learn the information on this site and follow the steps carefully. Consider doing this over a period of time and reviewing the materials more than once.</p> <ul> <li>You will need to test and perhaps adjust your settings to be successful with Loop, or any hybrid closed-loop system</li> <li>You will find links as you read to a robust volunteer support community</li> </ul> <p>Once you are looping, you should regularly follow one or more support forums for important updates on Loop. Spending this time is important for success in building and operating Loop safely.</p> <p>This website is updated regularly to keep pace with Loop developments and Apple releases.</p>"},{"location":"#what-is-loop","title":"What is Loop?","text":"<p>Loop is an app you build and load on an iPhone (or iPod).</p> <p>After building the Loop app:</p> <ul> <li>You enter your personal therapy settings (e.g., carbohydrate ratio, basal rates, insulin sensitivity)</li> <li>You enter the carbs you eat</li> <li>Loop uses this information, your insulin on board (IOB) and glucose data, to determine how much insulin you need to bring your blood glucose within the target range you set</li> <li>You can choose to have Loop automatically control insulin dosing (closed-loop mode) or have Loop recommend insulin that you manually accept or modify (open-loop mode)</li> </ul> <p> </p>"},{"location":"#what-is-loop-video","title":"What is Loop Video","text":"<p>If you have never used Loop, click on links below for an introduction.</p> <p>Loop Video</p> <ul> <li>This What is Loop video with associated pdf deck was created by the Loop and Learn Team</li> <li>Special thanks to Tina and Reese Hammer for the terrific video</li> <li>Special thanks to Matthew Fouse for the generous use of his beautiful graphics</li> </ul>"},{"location":"#important-disclaimer","title":"Important Disclaimer","text":"<p>Please consult with your health care professional regarding your diabetes management.</p> <ul> <li>The Loop app is an open source project used by many, but it is not approved for therapy by any government organization.</li> <li>You take full responsibility for building and running this system and do so at your own risk.</li> </ul>"},{"location":"#volunteer-community","title":"Volunteer Community","text":"<p>Loop has been, and continues to be, developed and supported by volunteers. From the code to this website, you are able to loop because many volunteers have given their personal and family time.</p> <p>Please add your time by reading this website thoroughly before embarking on your Loop journey.</p>"},{"location":"translate/","title":"Translation","text":""},{"location":"translate/#google-translate-links","title":"Google Translate Links","text":"<p>Click on a language from the list below to turn on Google's automatic translation.</p> <ul> <li>Every LoopDocs page gets automatically translated to the selected language as do links to other websites from LoopDocs</li> <li>The Google Translate Tool will appear at the top of each page<ul> <li>LoopDocs how-to: Google Translate Tool Instructions</li> <li>Google how-to: Google Translate Help Link</li> </ul> </li> </ul> <p>Automatic Translation</p> <p>These links connect this site to the Google Translation service.</p> <ul> <li>No human has reviewed the translated information for accuracy</li> <li>Please use the translation with care</li> <li>Not available in all regions</li> <li>Some links might not work as expected</li> <li>Any \"code\" not protected by blocks may not appear correctly - be sure to click on Original to make sure you a viewing code properly</li> </ul>"},{"location":"translate/#language-list","title":"Language List","text":"<p>\u0639\u0631\u0628\u064a</p> <p>\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438</p> <p>\u010ce\u0161tina</p> <p>Deutsch</p> <p>Dansk</p> <p>\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac</p> <p>Espa\u00f1ol</p> <p>\u65e5\u672c</p> <p>Suomi</p> <p>Fran\u00e7ais</p> <p>\u05e2\u05d1\u05e8\u05d9\u05ea</p> <p>Hrvatski</p> <p>Italiano</p> <p>\ud55c\uad6d\uc5b4</p> <p>Norsk</p> <p>Nederlands</p> <p>Polski</p> <p>Portugu\u00eas</p> <p>Rom\u00e2n\u0103</p> <p>\u0420\u0443\u0441\u0441\u043a\u0438\u0439</p> <p>Sloven\u010dina</p> <p>Svenska</p> <p>Turkish</p> <p>\u4e2d\u6587\uff08\u7b80\u4f53)</p> <p>\u4e2d\u6587\uff08\u7e41\u9ad4)</p>"},{"location":"translate/#google-translate-tool-instructions","title":"Google Translate Tool Instructions","text":"<p>Once Google Translate has been turned on, clicking on a link above shows a \"Google Translate: Can't translate this page error\".</p> <ul> <li>To modify the language for a single page, use the Google Translate tool</li> <li>To modify the language for the entire site, see Change Language</li> </ul> <p>The graphic below shows the Google Translate Tool when maximized (default) for a browser and mobile display. The tool can be minimized by tapping on the up/down carets at the right of the tool. This is very useful if the tool obstructs part of the original screen. Additional options can be selected with the three-dot menu as shown in the graphic.</p> <p></p>"},{"location":"translate/#change-language","title":"Change Language","text":"<p>To modify the language choice for the whole site, copy the line below and paste it into the URL and then choose the desired language from the list</p> <pre><code>https://loopkit.github.io/loopdocs/translate\n</code></pre> <p>OR</p> <p>Use the Google Translation three-dot menu and select <code>Go to Original URL</code> while on the Translation page.</p>"},{"location":"build/build-free-loop/","title":"Build Free Loop","text":""},{"location":"build/build-free-loop/#prepare-to-sign","title":"Prepare to Sign","text":"<p>This page is not stand-alone. You typically get here after choosing to Sign Manually after a successful download using the Build Select script.</p> <p>Normally this option is chosen by people building the app with the Free option or if you want to build to a simulator on your computer.</p> <p>If you have a paid developer account and are building Loop 3, you are far better off choosing to configure the permanent override file with your Apple Developer ID. Refer to Sign Targets.</p> <p>The instructions found on this page are for the first build.  With the Free version, you need to build every week. Refer to Build Again with this Download.</p>"},{"location":"build/build-free-loop/#select-the-loop-folder","title":"Select the Loop Folder","text":"<p>Don't touch that button!</p> <p>You will be told exactly where on each screen you should click. Please only click in the designated places.</p> <p>Follow the directions and compare your Xcode screen to the graphics as you walk through the steps.</p> <p>As shown in the GIF below:</p> <ul> <li>Frame 1: This is what the Xcode screen looks the very first time it is opened after a fresh download<ul> <li>You need to click on the indicated Loop folder icon two times</li> </ul> </li> <li>Frame 2: After the 2 clicks, the middle pane of the Xcode window should be similar (for Loop 3.2.x and newer, the top middle bar will show LoopWorkspace, not Loop)</li> </ul> <p></p>"},{"location":"build/build-free-loop/#select-your-phone","title":"Select Your Phone","text":"<p>If this is the First Time your phone or watch has been connected to Xcode, you will need to tell the phone and watch to \"Trust this Computer\".</p> <p>The GIF (not updated for Loop 3.2.x) below shows:</p> <ul> <li>Frame 1: Same as end of previous GIF<ul> <li>There's a red rectangle around the dropdown menus</li> <li>The menu on the left says \"LoopWorkspace\" for 3.2.x and newer</li> </ul> </li> <li>Frame 2: Same as Frame 1 with a zoomed inset of the red rectangle<ul> <li>Ignore Frame 2 and 3 for Loop 3.2.x and newer which already shows LoopWorkspace</li> <li>You can see Loop has a check mark beside it</li> <li>Loop (Workspace) is one line below</li> <li>Select Loop (Workspace)</li> </ul> </li> <li>Frame 3: Zoomed inset after selecting Loop (Workspace)</li> <li>Frame 4: Desired result should show LoopWorkspace and your phone</li> </ul> <p></p> <p></p> <p>I don't see my phone</p> <ul> <li>If you don't see your phone in the Devices section, unplug and plug in again</li> <li>Still don't see your phone - reboot the phone - and if that doesn't work - reboot the computer</li> <li>Still don't see your phone - try a different cable or USB slot</li> </ul>"},{"location":"build/build-free-loop/#build-to-a-simulator","title":"Build to a Simulator","text":"<p>Skip this section if building to a phone and proceed to Select Signing &amp; Capabilities Tab.</p> <p>If you want to build to a simulator, follow the directions in this section and skip the rest of this page.</p> <ul> <li>Simply choose one of the iOS Simulators instead of a phone and build to it<ul> <li>The iOS simulator you choose does not need to be the same model as your phone</li> </ul> </li> <li>With a simulator, you do not need to sign targets:</li> <li>After a successful build, a simulated phone will appear on your computer and you can interact with the app on that simulated phone</li> <li>Follow this link to Start Build</li> </ul>"},{"location":"build/build-free-loop/#select-signing-capabilities-tab","title":"Select Signing &amp; Capabilities Tab","text":"<p>What does Signing Targets Mean?</p> <p>\"Signing Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone without signing each target associated with that app.</p> <p>The graphic below indicates in red the three places you need to click in order to begin signing targets.</p> <ul> <li>First, click on the tab labeled <code>Signing &amp; Capabilities</code></li> <li>Second, click on the icon labeled <code>Loop</code> under the word <code>TARGETS</code></li> <li>Third, click on the dropdown menu (red circle) by the word <code>Team</code></li> </ul> <p>Click Only where Instructed</p> <ul> <li>Make sure <code>All</code>, indicated by dashed blue oval, is selected<ul> <li>If <code>Debug</code> or <code>Release</code> is accidentally tapped, you will not be able to build</li> </ul> </li> <li>Make sure <code>Automatically manage signing</code>, indicated by dashed blue rectangle, is checked</li> </ul> <p></p>"},{"location":"build/build-free-loop/#sign-the-targets","title":"Sign the Targets","text":"<p>It is time to Sign the Targets with your Apple ID.</p> <p>If you chose to sign manually but have a paid account, you can skip the Free Account steps below.</p> <p>You will be building multiple targets to make a complete app and must sign each one. With Loop 2.2.x, there are 4 targets. With Loop 3, there are 5 targets.</p> <p>Start with the Loop target, the first one on the target list. Choose your Apple ID.</p> <p></p>"},{"location":"build/build-free-loop/#free-account","title":"Free Account","text":"<p>This section is required if you are using the free account.</p> <p>Some features of Loop are not available with the Free option, so as you sign, you will need to remove features that are not supported.</p> <ol> <li>You must remove unsupported capabilities from 2 targets, this is best done as you sign each target:<ul> <li>Loop Target: Push Notifications; Siri and Time Sensitive Notifications</li> <li>Watch App Extension Target: Siri</li> </ul> </li> <li>Add the keyword <code>SIRI_DISABLED</code> to the LoopConfigOverride.xcconfig file<ul> <li>Click on the filename in the left pane of Xcode and view it in the Xcode editor</li> <li>Examine the file and find the line that starts with <code>SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited)</code></li> <li>Insert the new keyword (separated by a space) anywhere after <code>$(inherited)</code> and before the slashes near the end of the line</li> <li>When done, that line should be similar to:<code>SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited) SIRI_DISABLED</code></li> </ul> </li> </ol> <p>Details about removing unsupported capabilities:</p> <ul> <li>You must disable Push Notification, Siri and Time Sensitive Notifications<ul> <li>If the target you are signing does not use one of these attributes, no error message will appear when you select (personal team) for that target</li> <li>If the target you are signing does use one of these attributes, an error message will appear when you select (personal team) for that target</li> </ul> </li> <li>The Xcode error message starts with \"Cannot create . . .\" with a list of all the attributes not supported.<ul> <li>Scroll down and click on the little trash can icon next to each unsupported attribute</li> </ul> </li> <li>Scroll up and both the \"Cannot create . . .\" and \"No profiles for . . .\" error messages are gone</li> <li>You are done with this target</li> <li>Proceed to the next target</li> </ul>"},{"location":"build/build-free-loop/#end-of-free-account-steps","title":"End of Free Account Steps","text":"<p>Click on each of the three remaining targets shown in the red box below, and repeat the signing steps by choosing the same team name as you selected in the first target. The targets that must be signed prior to building are Loop, Loop Status Extension, Watch App, and WatchApp Extension for Loop 2.2.x, with the addition of Loop Intent Extension for Loop 3.</p> <p></p> <p>After signing the targets, click on the Loop icon under the <code>PROJECTS</code> heading. (Refer to the bright blue box in graphic above - click on that Loop icon.)</p> <ul> <li>If you skip this step, you may get an \"Entitlements\" Build Error for either Loop or WatchApp<ul> <li>Follow this procedure to fix the error: Entitlements Error</li> <li>Much easier to just click on Loop under <code>Projects</code></li> </ul> </li> </ul>"},{"location":"build/build-free-loop/#signing-complete","title":"Signing Complete","text":"<p>Now that you have signed your app, return to the Build Loop page at Start Build.</p>"},{"location":"build/build_errors/","title":"Oh dear! Build errors?","text":""},{"location":"build/build_errors/#build-errors","title":"Build Errors","text":"<p>Important</p> <p>These are only relevant when building with a Mac and Xcode. For GitHub (Browser Build) errors, please see: GitHub Errors</p> <p>There are two types of build indications that may be seen: they are warnings (yellow or purple icons) and red errors. You'll see the warnings and errors in the left-hand column of the Xcode window.</p> <p> Yellow and  Purple warnings do not cause the build to fail, those are just warnings.  You will often see yellow and purple icons. Ignore those. Do not try to do anything to fix those.</p> <p> Red errors will have to be resolved before you can successfully build the Loop app. The steps below explain how to resolve them based on the messages you are seeing.</p>"},{"location":"build/build_errors/#xcode-not-responding","title":"Xcode Not Responding","text":"<p>Sometimes, Xcode stops responding. You have to fix this before any of the other steps on this page will help.  The signature is that Xcode shows a colorful spinning icon and does not respond to anything you do.</p> <p>This can happen sometimes. You just need to force quit Xcode. Sometimes rebooting the Mac may be required, but start with force quit. Then just open up Xcode again and keep going.</p> <ul> <li>Hold down these 3 keys Option+Cmd+Esc (or Alt+Cmd+Esc),  until the <code>Force Quit</code> menu appears (should be fast)</li> <li>Select <code>Xcode</code> and tap on the <code>Force Quit</code> button</li> </ul> <p></p>"},{"location":"build/build_errors/#start-with-the-obvious-error-causes","title":"Start with The Obvious Error Causes","text":"<p>New Loop Builders</p> <p>This page contains build error help for people updating their Loop app as well as brand new Loop app builders. Review the \"obvious\" errors causes first. If that doesn't help, then, skim the page until you reach Find Your Error Message or search the page (Cmd+F) or search LoopDocs for your error. Once you've identified your error message, try to resolve it.  Still stuck? Read Posting for Help</p> <p>Before you start trying to resolve your red errors, start with the most obvious things that can cause a red error message:</p> <ol> <li> <p>For older builds, before 3.2.0, you had to select Loop(WorkSpace) The first time you build after downloading new code, you had to manually select Loop (Workspace) instead of Loop in Xcode.</p> <ul> <li>Starting with Loop 3.2.0 and newer versions, the target name and xcworkspace file names are now automatically LoopWorkspace - no special action needed when building.</li> </ul> </li> <li> <p>Did you check that you have the minumum Xcode version for your iOS? This is critical. If you are updating your Loop app, please review the iOS driven requirements for minimum version of macOS and Xcode.</p> </li> <li> <p>Did you check your Apple developer account for new license agreement? Periodically, Apple will release a new developer license agreement that you need to sign before you can build new apps. You will get a build failure if there is a pending license agreement to sign. Login to your Apple developer account to check if there's a new license agreement.</p> </li> <li> <p>Do you have a new computer, never used to build Loop? Did you Add Apple ID to Xcode?</p> </li> <li> <p>Did you reboot, i.e., restart, your computer after updating Xcode? You should reboot following Xcode installation or update and you must make sure your command line tools match the version of Xcode you just installed. Xcode Command Line Tools</p> </li> <li> <p>Did you get a fresh download of Loop code? If you tried to build with an old download that you used a long time ago, that old version may not be compatible with the new iOS and Xcode versions. Check also, that you are actually using the new download in Xcode.  When you use the Build Select Script, it automatically opens Xcode using the new download.</p> <p>If you want to build using a recent download, this section tells you how to Find My Downloaded Loop Code.</p> </li> <li> <p>Are you are using a free developer account? Make sure you finished the removal of Siri and Push Notification capabilities described in the Free Account link.</p> </li> <li> <p>DO NOT USE BETA VERSIONS  If you are using an iOS beta version or an Xcode beta version, Loop might not build. Deleting iOS beta from a phone is a pain...so don't install it unless you know what you are doing.</p> </li> </ol>"},{"location":"build/build_errors/#fix-95-of-errors","title":"Fix 95% of errors","text":"<p>If you have checked all those steps above and think you have a true build error, here's a tip that resolves 95% of all build errors when updating Loop code.</p> <ol> <li>Open your project in Xcode as normal. Then go to the menu bar at the top of the screen and find the <code>Product</code> menu item. Use the drop down selection for <code>Clean Build Folder</code> or press Shift+Cmd+K. Either will work the same. Wait for the clean to finish before trying to build again.</li> <li>On the far right, next to the name Full Path is the folder name that Xcode will be using to build. Make sure it is the new code you just downloaded and not an older folder.</li> <li>If you are updating Loop and did not Delete Old Provisioning Profiles, do it now</li> <li>Return to Xcode and try building your app again.</li> <li>Still failing for phone or watch or both? Try the Unpair and Reboot procedure.</li> </ol>"},{"location":"build/build_errors/#unpair-and-reboot","title":"Unpair and Reboot","text":"<p>This is reported to fix a variety of watch building errors and <code>cannot prepare phone for development</code> errors:</p> <ol> <li>Open Xcode (if not already open)</li> <li>Plug phone into computer and make sure it is unlocked</li> <li>Using the Xcode menu, select<ul> <li>Windows</li> <li>Devices and Simulators</li> <li>On left side, Right-Click (or Control-Click) on your phone</li> <li>Choose Unpair Device</li> </ul> </li> </ol> <p>It may not be necessary, but the suggestion is to reboot phone, (watch) and Mac - in other words, you can try to build without rebooting, but if that fails, repeat the steps and reboot before trying again.</p> <p></p> <p>The next time you plug this phone into your computer, you will be asked to trust the computer on the phone (and watch).  Note this is unpairing the device from Xcode and your computer, not the same as, and much faster than, unpairing your watch from your phone.</p> <p>If the build fails again, look through the list below and see if you can match your error message with one of the error messages listed later in this page. If you really can't find your solution, then post for help. But help us help you.</p> <ul> <li>Ignore yellow and purple warning messages - those are not errors - do not try to fix them</li> <li>Confirm it really is an error not already on this page; read this page carefully, including all the circled bits in the images in the Specific Error Messages section</li> <li>Follow the steps in the Posting for Help section</li> <li>WE CANNOT HELP without version numbers and screenshots</li> <li>Do not take pictures of your computer screen with your phone, use screenshots</li> </ul>"},{"location":"build/build_errors/#new-with-xcode-14","title":"New with Xcode 14","text":"<p>This may change, but for now, the watchOS simulator is not automatically included with the Xcode 14.x download and install. Some version of the watchOS simulator is required to build Loop, independent of whether you use a watch.</p> <p>You will be asked if you want to download &amp; install.   Make sure <code>watchOS</code> is selected.</p> <p></p> <p>If you are getting watch errors or having trouble with your watch, try this:</p> <p>Tap on the Xcode name on the menu bar and select Settings (used to be called Preferences).</p> <p>Choose the Platform tab. If there is a missing watchOS simulator that you think might help, then download it using the <code>GET</code> button. Use the minus icon (bottom left) to remove simulators that are no longer being used. (The watchOS 9.0 is required to build with Xcode 14.0.1. The watchOS 9.1 was downloaded with a release candidate for Xcode 14.1 - your screens may look different.)</p> <p></p>"},{"location":"build/build_errors/#posting-for-help","title":"Posting for help","text":"<p>STOP!!  Read this section! Important!</p> <p>Before you post in a Loop Social Media site asking for help with build errors, do your work first.  The build errors listed below (and the checks listed above) will fix most of the problems you may encounter.  </p> <p>PLEASE READ THIS PAGE. The volunteers answering questions online would love to spend more time helping people use Loop and less time answering questions that can be addressed by using this page.</p> <p>Therefore, try to resolve your build error yourself. Then, if you need to post for help, please include enough information with the post so the volunteers know where you are in your troubleshooting attempts.</p> <p>Your Post Must Include:</p> <ul> <li>The version of Xcode you are using</li> <li>The version of Loop you are building with</li> <li>The version of iOS on your Loop iPhone</li> <li>Free or paid account, and if free, confirmation that you deleted Siri and Push Notification capabilities</li> <li>Confirmation that you are not using an Xcode beta or iOS beta version (so we don't have to ask, please actually type \"I am not using beta versions\")</li> <li>Screenshots of your WHOLE Xcode window and/or Terminal window showing your error and any messages you've seen while working through the build errors/solutions.  Do NOT use phone photographs of your computer screen.  See below for instructions on how to capture a screenshot.</li> <li>State which fixes from the list below you have already tried AND post the screenshots of the results of those fix attempts.</li> </ul>"},{"location":"build/build_errors/#screenshots","title":"Screenshots","text":"<p>Please take screenshots of your issue and use them in your posts. On an Apple computer, press Shift+Cmd+4 keys at the same time followed by pressing the space bar Space and then click on the window of interest. The screenshot will be saved to your desktop with a file name starting with the name \"Screen Shot\". Use screenshots instead of cell phone images or words whenever possible. Screenshots are higher resolution and easier to read.</p> <p>Use the whole Xcode window screenshot when posting for build help.</p>"},{"location":"build/build_errors/#find-your-error-messages","title":"Find Your Error Message(s)","text":"<p>To begin fixing the error, use the Report Navigator view to find your error message.</p> <p></p> <p>The key is to (1) READ THE ERROR MESSAGE and then (2) FIND YOUR MESSAGE IN ONE OF THE TOPICS BELOW.</p> <p>Here's a super tip: Merely seeing the \"exit code\" in Xcode is not enough information to discern what error is causing your build to fail; some exit codes have multiple causes. Look at the detailed message to guide your search for the matching solution.</p> <p>Notice the screenshots below have red circles highlighting certain error messages.  Read your error message(s) from your screen, being guided by the red circles in the screenshots. Once you find your error message (hint: not \"exit code\"), you can either:</p> <ul> <li> <p>Take the error message from your Xcode screen and use LoopDoc's search function to enter in some of that phrase to bring up the appropriate solution topic, or</p> </li> <li> <p>Take the error message from your Xcode screen and read through EACH OF THE TOPICS BELOW. Check each of the red circles to see if you have a match. Kind of like a matching puzzle.</p> </li> </ul> <p>For example, if you see \"Invalid active developer path (/Library/Developer/CommandLineTools)\" in your error message, use the search tool in LoopDocs with \"invalid active\". You will get a couple of links and one is the Command Line Tools fix for that error message. Click on the link and you'll find the solution.</p> <p></p>"},{"location":"build/build_errors/#specific-error-messages","title":"Specific Error Messages","text":""},{"location":"build/build_errors/#no-devices-from-which-to-generate-a-provisioning-profile","title":"No devices from which to generate a provisioning profile","text":"<p>Error Message: This error occurs during the <code>Build target WatchApp</code> or <code>Build target WatchApp Extension</code>.</p> <p><code>Communication with Apple failed: Your team has no devices from which to generate a provisioning profile. Connect a device to use or manually add device IDs in Certificates, Identifiers &amp; Profiles. https://developer.apple.com/account/</code></p> <p><code>No profiles for 'com.XXX.loopkit. Loop. LoopWatch' were found: Xcode couldn't find any iOS App Development provisioning profiles matching 'com.XXX.loopkit.Loop.LoopWatch'.</code></p> <p></p> <p>Solution:</p> <ul> <li>Close Xcode </li> <li>Reopen Xcode</li> <li>Press the build button (<code>\u25b6\ufe0f</code>) again</li> </ul>"},{"location":"build/build_errors/#run-destination-is-not-valid-failed-to-prepare-the-device","title":"Run Destination is Not Valid; Failed to Prepare the Device","text":"<p>Error Message:</p> <p>The run destination for name's phone is not valid for running the scheme \"Loop (Workspace)\"</p> <p></p> <p>Solution:</p> <p>First make sure your Xcode version is new enough to work with your phone iOS version and make sure developer mode is turned on for iOS 16 or newer. If so, then try this procedure:</p> <ul> <li>Follow the link for the Unpair and Reboot procedure.</li> </ul>"},{"location":"build/build_errors/#packageresolved-file-corrupted-or-malformed","title":"Package.resolved file corrupted or malformed","text":"<p>Error Message:</p> <p>Package.resolved file is corrupted or malformed; fix or delete the file to continue: unsupported schema version 2</p> <p></p> <p>This error is new with Loop 3, which uses Package Dependencies.</p> <p>There are 2 problems shown here</p> <ol> <li>The version of Xcode is out of date</li> <li>The graphic was acquired using a camera instead of a screenshot, and yes - that was a joke - using a camera does not cause a build error</li> </ol> <p>Solution:</p> <p>Update Xcode, which may require you to update macOS.</p>"},{"location":"build/build_errors/#couldnt-get-revision-for-package-dependency","title":"Couldn't Get Revision for Package Dependency","text":""},{"location":"build/build_errors/#many-search-143-for-this-error","title":"Many Search 1.4.3 for this Error","text":"<p>This error is new with Loop 3, which uses Package Dependencies.</p> <ul> <li>If you notice a red x in Xcode (as circled in the graphic below)<ul> <li>Click on the red x to show the error in the left pane</li> <li>Alternatively, you can click on the icon shown with the red square to see the same information</li> </ul> </li> </ul> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li>Uncategorized<ul> <li>Couldn't get revision . . .</li> </ul> </li> </ul> <p>Solution:</p> <p>Refer to the graphic below</p> <ol> <li>Click on the folder icon (indicated by red square)</li> <li>Hold down the Control-Key and click the <code>Package Dependencies</code> row to display the dropdown menu (shown in the inset)</li> <li>Select Reset Package Caches from the dropdown menu and wait for Xcode to finish the reset process</li> <li>Once the package reset completes (updates in upper right of xcode will stop or say indexing), the red x should vanish</li> <li>You can start the build as soon as the Indexing message appears</li> </ol> <p></p>"},{"location":"build/build_errors/#unable-to-read-included-file","title":"Unable To Read Included File","text":"<p>This error has been seen with Loop 3. The permanent xcconfig file, created by the build script and used to sign targets, is written to a folder where the user does not have read permission.</p> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li>unable to read included file <code>path inserted here</code></li> </ul> <p>Solution:</p> <p>No need to quit Xcode. If your build script terminal is still open, use it. Otherwise, open a new terminal window.</p> <p>Copy the lines below that start with <code>ls -l</code> by hovering the mouse near the right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to add read permissions to xcconfig file<pre><code>ls -l ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\nchmod +r ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\nls -l ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>Paste the lines into the terminal. The response to the first line will be something like this:</p> <pre><code>--w-------  1 marion  staff  490 Nov  8 04:58 /Users/marion/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>There will be no response after the second line - although if an error is reported, please grab a screen shot.</p> <p>The response to the last line will be something like this:</p> <pre><code>-rw-r--r--  1 marion  staff  490 Nov  8 04:58 /Users/marion/Downloads/BuildLoop/LoopConfigOverride.xcconfig\n</code></pre> <p>The addition of <code>r</code> where there used to be <code>-</code> on the left side, means you now have permission to read that file.</p> <p>Final step is to return to Xcode and clean the build folder. Otherwise Xcode remembers it could not read the file and it won't try again.</p> <ol> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>Press the Build Button (play icon)</li> </ol>"},{"location":"build/build_errors/#cycle-dependency","title":"Cycle Dependency","text":"<p>This error is new with Xcode 13.3 (late Sep 2021) which has a new requirement</p> <ul> <li>For those who care: the new requirement is that for a certain type of instruction file, the line with the <code>Headers</code> keyword must be located before the line with the <code>Sources</code> keyword</li> <li>There used to be many repositories that did not have lines in that order</li> <li>If you are seeing this error, you are building with an older copy and should consider updating</li> </ul> <p>Error Message:</p> <p></p> <p>Text in error:</p> <ul> <li> <p>Left window (the exact target names are not important):</p> <ul> <li>Cycle in dependencies between targets . . .</li> </ul> </li> <li> <p>Middle window:</p> <ul> <li>Target build order preserved because \"Build Order\" is set to \"Manual Order\" in the scheme settings</li> </ul> </li> </ul> <p>Solution:</p> <p>No need to quit Xcode - follow these steps using the Xcode Menu bar. (It's possible that only Step 1 is required, but sometimes all steps are needed.)</p> <ol> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>From the <code>File</code> menu, select <code>Close Workspace</code></li> <li>From the <code>File</code> menu, select <code>Open Recent</code> and choose the top line</li> <li>Press the Build Button (play icon)</li> </ol>"},{"location":"build/build_errors/#entitlements-error","title":"Entitlements Error","text":"<p>Error Message:</p> <p></p> <p>Text in error message can be either of these:</p> <p>Entitlements file \"WatchApp Extension.entitlements\" was modified . . .</p> <p>or</p> <p>Entitlements file \"Loop.entitlements\" was modified . . .</p> <p>Solution:</p> <p>No need to quit Xcode - follow these numbered steps as indicated in the graphic below.</p> <ol> <li>Click on the Loop icon under PROJECT</li> <li>From the <code>Product</code> menu (of Xcode), select <code>Clean Build Folder</code></li> <li>Press the Build Button (play icon)</li> </ol> <p></p> <p>It turns out that</p> <ul> <li>You can start building before indexing completes - just make sure it has started</li> <li>The behavior causing this in Xcode has been reported to Apple</li> </ul>"},{"location":"build/build_errors/#compileassetcatalog-error","title":"CompileAssetCatalog Error","text":"<p>This error is found when there is a space embedded in the path name to your LoopWorspace folder. The good news is that LoopWorkspace seems to be able to build from an iCloud or Dropbox drive.</p> <p></p> <p>Text in error message:</p> <p>Command CompileAssetCatalog failed with a nonzero exit code. . .</p> <p>Solution:</p> <p>This is very similar to the steps for the WatchApp Entitlements Error but you need to repeat it for 2 targets: <code>Loop</code> and <code>WatchApp</code> - the graphic below matches the step numbers in the list.</p> <ol> <li>Click on <code>Loop</code> folder</li> <li>Click on <code>Loop</code> target</li> <li>Click on the <code>General</code> tab</li> <li>Click on the <code>App Icons Source</code> dropdown menu</li> <li>Click on the item already selected (the line will change from red to blank)</li> </ol> <p></p> <ul> <li>Repeat the <code>App Icons Source</code> dropdown menu selection for the <code>WatchApp</code> target</li> <li>(Optional) Clear the Build Error (Menu at top of Xcode: Select Product-&gt;Clean Build Folder)</li> <li>Press build</li> </ul>"},{"location":"build/build_errors/#carthage-error","title":"Carthage Error","text":"<p>For older builds only. With Loop 3.2.0 and newer, the default selection is already LoopWorkspace.</p> <p>You should not see carthage errors, but if you do, you probably did not select Loop (Workspace) at the top of the Xcode window. Review the graphic from the Prepare to Build Instructions.</p> <p>Or maybe you are trying to build using an old download; some older versions did require carthage. Best practice is to download new code.</p> <p>Error Message:</p> <p>Wrong Version of Carthage Error</p> <p>Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: one of -create, -thin , -extract , -remove , -replace  , -verify_arch  \u2026 , -archs, -info, or -detailed_info must be specified. <p>Solution: Download fresh code with Build Select Script.</p>"},{"location":"build/build_errors/#could-not-locate-device-support-files","title":"Could Not Locate Device Support Files","text":"<p>Error Message: \"Could not locate device support files.\" That message is telling you that your iOS on the Loop phone requires you to get a newer version of Xcode to be able to build Loop onto that phone.</p> <p>Solution: Update your Xcode version; this may also require a macOS update. Please review the phone iOS driven requirements for Xcode and macOS.</p> <p></p>"},{"location":"build/build_errors/#no-such-module-loopkit-or-similar-message","title":"No Such Module 'LoopKit' or Similar Message","text":"<p>Error Message: If you see a Cartfile failure and several other red errors (in particular saying there is \"no such module 'LoopKit'\").</p> <p>Solution: Read the Carthage Error section above.</p>"},{"location":"build/build_errors/#developer-license-update-pla-update","title":"Developer License Update (PLA Update)","text":"<p>Error message: <code>The Apple Developer Program License Agreement has been updated,  In order to access certain membership resources, you must accept the latest license agreement</code>. Or you may see <code>Unable to process request - PLA Update available. You currently don't have access to this membership resource. To resolve this issue, agree to the latest Program License Agreement in your developer account.</code></p> <p>Solution: You'll need to log onto your Apple Developer account at developer.apple.com and accept the latest license agreement.</p> <p></p>"},{"location":"build/build_errors/#could-not-get-a-container-directory-url","title":"Could Not Get a Container Directory URL","text":"<p>Error message: \"Could not get a container directory URL. Please ensure App Groups are set up correctly in entitlements.\"</p> <p></p> <p>Solution: To resolve this error, you will need to click on the Loop target's signing area and then the plus-sign in the App Groups area under the signing. Copy and paste the bundle indentifier into the new container that starts with <code>group.</code> and then add <code>Group</code> to the end of the name. Click OK to save. Note, the line will start with lower case <code>group.</code> followed by your bundle identifier and an upper case <code>Group</code> added to the end of the bundle identifier.</p> <p></p> <p>The final App Group should now have a blue check box, the name should start with <code>group</code> and end with <code>LoopGroup</code>. See the screenshot as an example. Click the build button after your App Group is setup similarly and you should be good.</p> <p></p>"},{"location":"build/build_errors/#missing-command-line-tools","title":"Missing Command Line Tools","text":"<p>Error message:  \"Invalid active developer path (/Library/Developer/CommandLineTools)\"</p> <p></p> <p>Solution: Go to your Xcode -&gt; Preferences (or Settings) and under the Locations tab, select your Xcode version (the figure shows 14.0.1 - yours should match your Xcode version) in the dropdown menu for Command Line Tools.</p> <p></p>"},{"location":"build/build_errors/#device-management-could-not-launch-loop","title":"Device Management Could Not Launch Loop","text":"<p>Error message: \"Could not launch \"Loop\". Verify the Developer App certificate for your account is trusted on your device. Open Settings and navigate to General -&gt; Device Management, then select your Developer App certificate to trust it.\"</p> <p></p> <p>New Solution First try the Unpair and Reboot process above. If that doesn't work, then try the solution listed below.</p> <p>Solution: If you get this message and are unable to find the Device Management option in your phone settings, then we need to do a little extra step to clear out some old info.</p> <ol> <li>Plug the phone into the computer and open Xcode</li> <li>Click the \"Window\" menu item in Xcode and then choose \"Devices and Simulators\"</li> <li>Right click your phone on the left and pick \"Show Provisioning Profiles\"</li> <li>Delete all of the items in the list that have Loop in the name</li> <li>Go to your four signing targets and change the signing team back to \"None\" for a quick bit, and then change back to your regular signing team name again.</li> <li>Rebuild Loop</li> </ol> <p>That should clear the out, problematic profiles and allow a successful build.</p> <p>If your problem persists after that, then you might need to do total reset of your phone to clear out the pesky problem. Before you do this, you may want to Post for Help to make sure it is really necessary:</p> <ol> <li>Wipe the iPhone clean and set it up as a new device<ul> <li>FIRST - write down or screenshot all your settings</li> <li>Pod users - you will have to start a fresh pod after this</li> <li>If you want your old pod to continue giving you basal rate, don't replace the pod before wiping your phone.  Once the phone is reset and a new Loop app is added, you must start a new pod.  The old pod should have the sound connection broken before being discarded because you won't be able to deactivate the pod.</li> </ul> </li> <li>Delete all certificates from your Developer account (you'll need to login to your Developer account to do that)</li> <li>Delete your old Loop code download and get a new one.</li> <li>Rebuild Loop on the phone with the new download of Loop code.</li> <li>Start a new pod with the new Loop app on the reset phone.</li> </ol>"},{"location":"build/build_errors/#pending-certificate-request","title":"Pending Certificate Request","text":"<p>Error message: \"You already have a current iOS Development certificate or a pending certificate request.\"</p> <p></p> <p>Solution: This error message has recently started to appear for some new Loop builders. To resolve the issue, please log in to your Developer account at developer.apple.com and then click on \"Certificates, Identifiers &amp; Profiles\".  Under that screen, you will see \"Development\" under the \"Certificates\" section in the column on the left.  You will need to click on the certificates, and choose \"revoke\" from the options that show after you click on the certificate. Confirm the warning message that will appear asking \"Do you want to revoke the certificate?\"</p> <p></p> <p>After you do that, return to Xcode and open up Xcode -&gt; Preferences (or Settings) and choose the Accounts tab. Highlight your Apple ID and click on the minus sign to delete your Apple ID.</p> <p></p> <p>Re-enter your Apple ID (yes...add that account right back that you literally just deleted), return to your Loop's target signing areas in Xcode and your error message should have resolved as a new certificate will have been issued and a provisioning profile should have been created automatically.</p> <p>You can verify the iOS development certificates are working by clicking on \"Manage Certificates\" in Xcode -&gt; Preferences (or Settings), Accounts tab and viewing the iOS Development Certificates.  You should have one for your account that has a clean status similar to the screenshot below.</p> <p></p>"},{"location":"build/build_errors/#command-codesign-failed","title":"Command CodeSign Failed","text":"<p>Error message: \"errSecInternalComponent,  Command CodeSign failed with a nonzero exit code\"</p> <p></p> <p>Solution:  This error message is likely due to inadvertently saying \"no\" to allowing Keychain Access or changing your computer or AppleID password. Regardless, the solution is as follows:</p> <ol> <li>Close Xcode</li> <li>Open your Keychain Access application (found in Applications within the Utilities folder)</li> <li>In the upper left corner of keychain access, make sure you have the keychain <code>login</code> highlighted and then right-click the lock next to the <code>login</code>.  Click the lock closed, and then click the lock to open it again. You will be prompted for a password.  Enter your computer admin password.  Close Keychain Access app.</li> </ol> <p></p> <ol> <li>Open your Loop project again in Xcode.</li> <li>In the main Xcode menu (grey menu bar at the very top of your Apple display area), select <code>Product</code> and then select the option for <code>Clean</code>.  (Keyboard shortcut is Shift+Cmd+K)</li> <li>Now try rebuilding your Loop app.  If you ever get prompted again to allow Xcode access to Keychain, make sure to click on the option to Always Allow.</li> </ol>"},{"location":"build/build_errors/#unrecognized-arguments","title":"Unrecognized Arguments","text":"<p>Error message: \"Unrecognized arguments: --cache-builds\"</p> <p></p> <p></p> <p>Solution: This is a homebrew / carthage error, so I don't think you'll see this. If you do, download a fresh copy of Loop code and try again. If it repeats, it is time to request assistance. Please read Posting for Help.</p>"},{"location":"build/build_errors/#abort-with-payload","title":"Abort with Payload","text":"<p>Error message: \"Abort with payload\"  Your app will only open briefly with a white screen and then close, if you build with this error.</p> <p></p> <p>Solution: This error message is caused by having the Loop download folder in an iCloud mapped drive when doing the zip download.  Move your Loop download folder back to the Downloads folder, then rebuild. LoopWorkspace builds with Xcode 13 appear to work fine with an iCloud drive.  You may run into the spaces in your path name problem - which has a different solution.</p>"},{"location":"build/build_errors/#apple-watch-issues","title":"Apple Watch Issues","text":""},{"location":"build/build_errors/#apple-watch-loop-app-not-appearing","title":"Apple Watch: Loop App Not Appearing","text":"<p>Error: Apple watch app is not appearing.</p> <p>Solution: This error usually appears because you have not updated the watchOS prior to building Loop, or you didn't have your Apple watch paired at the time of building Loop.</p> <p>Don't forget to open the iPhone's Watch app, select My Watch tab on the bottom left, scroll all the way down, and click <code>Install</code> for the Loop app listed at the very bottom under \"available apps\".</p>"},{"location":"build/build_errors/#apple-watch-loop-app-not-installing","title":"Apple Watch: Loop App Not Installing","text":"<p>Before trying this solution, see if the Unpair and Reboot procedure works.</p> <p>Error: The Loop app appears on the list of apps available to install on the watch, but when you press \"install\", and it goes through the animation of filling in the circle while it's installing, but then at the end it just toggles back to saying \"INSTALL\".</p> <p>Solution:  Plug your iPhone into the computer and start Xcode.  On your watch, look for a prompt that says \"Trust this computer\".  Scroll down on the watch face and select the \"Trust\" button. In Xcode, go to the top menu bar and select \"Clean Build Folder\" from the Product menu option, and then rebuild your Loop app.</p> <p>If the watch app still fails to install properly, the next section should work.</p>"},{"location":"build/build_errors/#apple-watch-loop-app-not-running-on-watch","title":"Apple Watch: Loop App Not Running on Watch","text":"<p>Error: Tapping the Loop app icon on the watch results in flash of the watch screen and then return to the Loop app icon or a brief display of the watch interface and then return to the Loop app icon.</p> <p>Solution: Plug in your iPhone, with the watch already paired, into the computer and start Xcode with your current build folder.  In Xcode, from the list of schemes where you normally choose Loop (Workspace) (with Loop 3.2.x and newer, LoopWorkspace is the default), choose the WatchApp scheme (near the bottom of the list) and then select your watch (not a simulator) from the device list, see the graphics below. Press the play button to build and deploy the WatchApp directly to your watch. It will launch correctly and will not crash when you subsequently launch it from the complication or your watch Home Screen..</p> <p></p> <p></p> <p>Warning: Make sure your watchOS is up to date with respect to your phone iOS. If not, you may need to update to be successful. On pressing clicking build/play, some people report receiving an error stating \u201ciPhone/Apple Watch are ineligible because the OS on the watch doesn\u2019t support WatchKit App Products\u201d or similar wording. This is a known issue with some Mac USB ports. Fixes in preference order are: 1) swap which USB port is in use;  2) unplug and replug the USB cable from both the iPhone and Mac; or 3) as a last resort, reboot the iPhone and Mac.</p> <p>Don't forget to select Loop(Workspace) after building to the watch before trying to build to a phone.</p>"},{"location":"build/code_customization/","title":"Customize Your Loop","text":""},{"location":"build/code_customization/#build-then-customize","title":"Build then Customize","text":"<p>For new Loopers, please build the code before you make any changes. Start with Open Loop and familiarize yourself with the interface.  Later, you can make the customization(s) you desire and build again.  The second build will be much easier than your first build.</p> <p>These customizations require you to build the Loop app onto your iPhone, they cannot be done from within the app itself.</p>"},{"location":"build/code_customization/#customization-options","title":"Customization Options","text":"<p>Read about the customizations on this page before applying them.</p> <p>You take responsibility</p> <p>You are responsible when you decide to use customizations.</p> <p>Be sure to report what changes you made if you need to ask for assistance with your app.</p> <p>Some customizations are the same for everyone and have been prepared for easy use. </p> <ul> <li>Mac-Xcode builders can use the Loop and Learn: Loop Customizations script<ul> <li>This script automatically finds the most recent download and when you are done selecting customizations, opens Xcode to that download</li> <li>Even if you don't want to apply customizations, you can use this script as a easy way to find and open your download</li> </ul> </li> <li>GitHub builders can use Loop and Learn: Customization: Single Customization List</li> </ul> <p>Other customizations require that you create your own personalized version.</p> <ul> <li>Mac-Xcode builders: all the information required is on this page</li> <li>GitHub builders: read this page and use LoopDocs: GitHub Customization</li> </ul> <p>For GitHub Browser Build, you can skip over the Mac-Xcode specific section and skip ahead to Build-Time Features.</p> <p>When applying a customization using Mac-Xcode, the downloaded code should be fairly recent. If you are not sure, get a fresh download. If you know your downloaded code is the Current Release, you can skip the download and use the same folder as last time.</p>"},{"location":"build/code_customization/#find-my-downloaded-loop-code","title":"Find My Downloaded Loop Code","text":"<p>Refer to the graphic below.  The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom.</p> <p>Loop to LoopWorkspace</p> <p>Note that the directory <code>Loop.xcworkspace</code> has been renamed to <code>LoopWorkspace.xcworkspace</code> in the released code. For experienced builders - you realize this is good because the build process is easier.</p> <p>The words were updated, but it will take time for the graphics to be updated.</p> <ul> <li>Open Finder</li> <li>Navigate to Downloads/BuildLoop and look for your download by name and date</li> <li>Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145, and inside that folder open the LoopWorkspace folder</li> <li>Inside the Downloads/BuildLoop/Loop-220803-1145/LoopWorkspace folder, double-click on LoopWorkspace.xcworkspace (graphic not updated yet)</li> <li>Xcode automatically opens to that particular download</li> <li>You can then make the customizations and build to your phone</li> </ul> <p></p> <p>Experienced Builders</p> <p>Experienced builders will often build a fresh download to a simulator for their phone iOS (not their phone) to ensure download is good and is compatible with macOS, Xcode and phone iOS. Once the build is successful, they apply their customizations and build again to the simulator. Last step is to build the customized version to their real phone.</p> <p>Be sure to read the Instructions for Finding the Lines.</p> <p>Line numbers may change</p> <p>Every effort will be made to update the line numbers as the code is updated, but there may be times where the screenshots and line numbers differ from the current version of Loop code.</p> <ul> <li> <p>You may notice some customizations list line numbers for different branches</p> </li> <li> <p>If you cannot identify a line that looks exactly like the example - do not guess - go to your favorite social media group and ask for help</p> </li> </ul> <p>Loop 2.2.x vs Loop 3</p> <ul> <li>Loop 3 has been released but there are some people using older code.</li> <li>The labels below indicate Loop 2.2.x or Loop 3, if they are different</li> <li>Users of Loop 2.2.9 (or earlier) or FreeAPS should refer to the Loop 2.2.x examples.</li> <li>Some 2.2.x customizations will be removed as time goes on</li> <li>Users of Loop 3 should refer to the Loop 3 examples.<ul> <li>Note that some changes are in a different file for Loop 3 (part of the architecture upgrade for the app).</li> </ul> </li> </ul>"},{"location":"build/code_customization/#build-time-features","title":"Build-Time Features","text":"<p>Build-time features are not available with Loop 2.2.x.</p> <p>With Loop 3, some features are enabled or disabled by default but can be modified by adding a \"flag\" to a particular line in the LoopConfigOverride.xcconfig file.</p> <p>If you use the GitHub Build Method, these build-time features can be added to your copy of the LoopConfigOverride.xcconfig file. Use the pencil icon in that file on GitHub and then commit the change to your fork.</p> <p>If you use the Mac-Xcode Build Method, this is the same file used to automatically sign all your targets. You can edit the version in your LoopWorkspace folder (it shows up as the top item in the Xcode folder view) - or - if you use the build script, you can edit the copy found in ~/Downloads/BuildLoop after the first time you use the script. For that second case, the \"flags\" you add in ~/Downloads/BuildLoop/LoopConfigOverride.xcconfig are applied to all downloads created with the script.</p> <p>These flags are always upper case with underscore separating words for clarity. They are inserted anywhere after the word <code>$(inherited)</code> and before the <code>//</code>. The <code>//</code> indicates the flags to the right are not included. In the line shown below, simulators are enabled but debug features are turned off. Each flag is separated by a space. Do not enter a return between selections - Xcode will word-wrap the line for clarity, but all values need to be on a single line.</p> <p>Code Before Modification</p> <pre><code>// Features\nSWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited) SIMULATORS_ENABLED //DEBUG_FEATURES_ENABLED\n</code></pre> <p>The example below is for someone who is using a Free Developer ID - which does not support Siri.</p> <p>Code After Modification</p> <pre><code>// Features\nSWIFT_ACTIVE_COMPILATION_CONDITIONS = $(inherited) SIRI_DISABLED SIMULATORS_ENABLED //DEBUG_FEATURES_ENABLED\n</code></pre> <p>List of some flags and what they do:</p> FLAG PURPOSE SIRI_DISABLED Required to build Loop from Xcode with a free developer account ADULT_CHILD_INSULIN_MODEL_SELECTION_ENABLED The choice for Child Model is enabled in Therapy Settings. Please read Enable Child Model. REMOTE_OVERRIDES_DISABLED Remote commands: override, carbs or boluses will not be accepted even if all the Remote Command requirements are configured OBSERVE_HEALTH_KIT_CARB_SAMPLES_FROM_OTHER_APPS_ENABLED Turns on ability for Loop to read third party carb entries. You must also make sure Health permissions allow Loop to read carbs from Health. Be vigilant if you select this; added carbs lead to added insulin dosing when closed loop is enabled SHOW_EVENTUAL_BLOOD_GLUCOSE_ON_WATCH_DISABLED The Apple Watch screens show current glucose, trend arrow and eventual glucose by default. This flag disables the display of eventual glucose on the watch if you find the display distracting."},{"location":"build/code_customization/#instructions-for-finding-the-lines","title":"Instructions for Finding the Lines","text":"<p>The instructions on this page were originally prepared for the Mac-Xcode method. </p> <p>The GitHub Browser Build method instructions are similar, but each one is used to edit your fork of the particular Module in your GitHub account as instructed on the Customize with GitHub page.</p> <p>For each customization, you will be given landmarks to find the correct location in the code. You can choose to search using the <code>Key_Phrase</code> or navigate to the file in the folder structure and look for ( Cmd+L # ) the line number. </p> <p>Some customizations are the same for all users, and do not require personalization. See Loop and Learn: Customization: Single Customization List.</p> <p>For Mac-Xcode builders:</p> <ul> <li>Either Key_Phrase or Module, Folder, File  can be used to find the lines</li> <li>Be sure to save the file when you make a change - otherwise the modification does not get built into your app</li> <li>Some folder icons show different names in Xcode, see Folders and Icons</li> </ul> <p>For GitHub Browser builders;</p> <ul> <li>Some customizations can be copied from the Loop and Learn: Customization: Single Customization List</li> <li>Otherwise, create your own customization for the Module identified under Module, Folder, File as instructed on the Customize with GitHub page</li> </ul>"},{"location":"build/code_customization/#key_phrase","title":"Key_Phrase","text":"Example of a Key_Phrase<pre><code>use the copy button at right, paste into search\nThe copy button for this exampe is just for practice\nDo not paste the result anywhere\n</code></pre> <p>To search using the <code>Key_Phrase</code> (see graphic below for clarification):</p> <ul> <li>A copy button is available when you hover your mouse in the right-hand side of the block below the title <code>Key_Phrase</code>;  click on it to copy the phrase</li> <li>In Xcode, tap the Find menu item and select <code>Find in Workspace</code></li> <li>Paste the text into the Find search-box that opens on upper left of Xcode screen and hit enter<ul> <li>If you don't see the phrase in the box, hit backspace - your system copied an extra return</li> </ul> </li> <li>You should see a message <code>1 result in 1 file</code> (for most cases)<ul> <li>Some customizations will show more than one result, but that will be explained in the directions for that customization</li> </ul> </li> <li>The file in which the line is located is reported showing the line in that file containing the <code>Key_Phrase</code></li> <li>Click on the one you think is correct and it will display in the main middle window of Xcode with the Keyword highlighted on the line you selected<ul> <li>The <code>Key_Phrase</code> was selected to limit the search to just the relevant line (if possible)</li> <li>In some cases, the <code>Key_Phrase</code> gets you close but not exactly on the line where you need to make the modifications - please read carefully</li> </ul> </li> </ul> <p></p>"},{"location":"build/code_customization/#module-folder-file","title":"Module, Folder, File","text":"<p>Each customization will also show Module, Folder and File bullet below the key phrase.</p> <ul> <li>Module: Loop</li> <li>Folder: Loop/subfolder1/subfolder2/etc.</li> <li>File: filename.swift, line number(s)</li> </ul>"},{"location":"build/code_customization/#customizations","title":"Customizations:","text":"<p>The customizations below show the original line of code that you will be changing.</p> <p>There may be a figure illustrating the change.</p> <p>Below the figure, the original, and in some cases, the modified code will be displayed as text.</p> <ul> <li>Sometimes that line is long and you may need to use the scroll bar to see the entire line in LoopDocs</li> <li>In most cases, an example customization is shown to assist you in deciding how to edit the line to meet your needs</li> </ul>"},{"location":"build/code_customization/#disable-authentication-for-bolusing","title":"Disable Authentication for Bolusing","text":"<p>Depending on your iPhone preferences and model, you may have Face ID or Touch ID enabled.  Those security features will also be used to authenticate bolus delivery in Loop.  You can choose to disable authentication (i.e., not require Face ID, Touch ID, or passcode for bolusing) through the following code customization.</p> <p>Safety Measure</p> <p>If you disable this, you are removing an important safety feature.</p> <p>In addition to authenticating every manual bolus, this helps to protect against sleep bolusing and pocket bolusing.</p> <p>For Loop 3, this controls the authorization requirement to modify Therapy Settings as well as to confirm bolus delivery.</p> Key_Phrase<pre><code>canEvaluatePolicy(.deviceOwnerAuthentication\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Loop 3<ul> <li>Folder: LoopKit/LoopKitUI/Extensions/</li> <li>File: Environment+Authenticate.swift, Line 20</li> </ul> </li> </ul>"},{"location":"build/code_customization/#loop-3","title":"Loop 3","text":"<p>Code Before Modification</p> <pre><code>if context.canEvaluatePolicy(.deviceOwnerAuthentication, error: &amp;error) {\n</code></pre> <p>Code After Modification</p> <pre><code>if false &amp;&amp; context.canEvaluatePolicy(.deviceOwnerAuthentication, error: &amp;error) {\n</code></pre>"},{"location":"build/code_customization/#loop-22x","title":"Loop 2.2.x","text":"<ul> <li>Loop 2.2.x<ul> <li>Folder: Loop/View Controllers</li> <li>File: BolusViewController.swift, Line 529</li> </ul> </li> </ul> <p>The screenshot below was taken with Loop v2.0 when the line number was 201; with Loop 2.2.x versions, that same code is found at line 529. Add the <code>false &amp;&amp;</code> as shown in the screenshot below:</p> <p></p> <p>Code Before Modification</p> <pre><code>if context.canEvaluatePolicy(.deviceOwnerAuthentication, error: nil) {\n</code></pre> <p>Code After Modification</p> <pre><code>if false &amp;&amp; context.canEvaluatePolicy(.deviceOwnerAuthentication, error: nil) {\n</code></pre>"},{"location":"build/code_customization/#default-carb-absorption-times","title":"Default Carb Absorption Times","text":"<p>Loop\u2019s default carb absorption times are based on the high, medium, and low glycemic index absorption curves presented in Think Like A Pancreas by Gary Scheiner.  With Loop 2.2.x, the lollipop (fast) icon is set for 2 hours, taco (medium) icon for 3 hours, and pizza (slow) icon for 4 hours. This is modified for Loop 3 to 30 minutes, 3 hours and 5 hours respectively.</p> Key_Phrase<pre><code>defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes\n</code></pre> <ul> <li>Module: Loop</li> <li> <p>Loop 3</p> <ul> <li>Folder: Loop/LoopCore</li> <li>File: LoopCoreConstants.swift</li> <li>Line: 16</li> </ul> </li> <li> <p>Loop 2.2.x</p> <ul> <li>Folder: Loop/LoopCore</li> <li>File: LoopSettings.swift</li> <li>Line: 16 (2.2.4 master), 41 (2.2.4 AB), 50 (2.2.5 and later)</li> </ul> </li> </ul> <p>For example, if you wanted to modify Loop 2.2.9 so that lollipop represents a 30 minute absorption and pizza a 5 hour absorption, the edit would be as follows:</p> <p>Code Before Modification for Loop 2.2.x</p> <pre><code>public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .hours(2), medium: .hours(3), slow: .hours(4))\n</code></pre> <p>Code After Modification or default for Loop 3</p> <pre><code>public static let defaultCarbAbsorptionTimes: CarbStore.DefaultAbsorptionTimes = (fast: .minutes(30), medium: .hours(3), slow: .hours(5))\n</code></pre> <p>Note that if you change from 2 hours to 30 minutes, you must also change the indication before the parentheses.</p>"},{"location":"build/code_customization/#adjust-percent-bolus-for-automatic-bolus","title":"Adjust Percent Bolus for Automatic Bolus","text":"<p>If you are mostly happy with the Dosing Strategy of Automatic Bolus but wish it delivered more or less insulin during every Loop interval, then this customization is for you.</p> <p>This customization changes the percent of the recommended bolus used for automatic delivery. The method for calculating that recommendation is not changed by this modification.  The default value is 40% (0.4).  It is recommended you take small changes of 0.1 at a time.  Once you modify it once and try it out for a while, it\u2019s easy to go back and change it again.</p> <p>Change just the number and double check that the value is less than 1.</p> Key_Phrase<pre><code>let bolusPartialApplicationFactor\n</code></pre> <ul> <li>Module: Loop</li> <li>Loop 3<ul> <li>Folder: Loop/Loop/Models</li> <li>File: LoopConstants.swift</li> <li>Line: 53</li> </ul> </li> </ul> <p>Code Before Modification</p> <pre><code>static let bolusPartialApplicationFactor = 0.4\n</code></pre> <p>Code After Modification to 50% of recommended insulin</p> <pre><code>static let bolusPartialApplicationFactor = 0.5\n</code></pre> <p>Do not exceed 1.0</p> <p>This number should never be bigger than 1 (you\u2019d be getting more than Loop recommends). If you think you need more than 1, consider your settings and meal entries.</p>"},{"location":"build/code_customization/#modify-override-insulin-needs-picker","title":"Modify Override Insulin Needs Picker","text":"<p>Some people want finer settings on the override insulin needs picker (5% instead of 10%) and may want to limit the overall range for overrides \u2013 especially for children.</p> <p>1% Settings Available without Customization</p> <p>With the advent of Loop 3, the Override Insulin Needs values are not limited by the default picker values of 10%.</p> <ul> <li>Not available in Loop 2.2.x</li> <li>Not available in FreeAPS (based off Loop 2.2.x)</li> <li>Select 1% Insulin Needs</li> </ul> <p>Any override more than a factor of 2 from 100% can cause Loop predictions to be wrong \u2013 especially if a carb count is entered. (An override is NOT the same as a manual temp basal - it changes insulin sensitivity factor and carb ratio in addition to the basal rate needed for zero change in IOB for the duration of the override.)</p> <p>A Sensitivity of 0% is NOT Valid</p> <p>Do not set the lower level of the sensitivity range to be 0%.</p> <p>If you configure to allow that and someone chooses it, they will be telling Loop to divide by zero in some of the calculations. They will see NaN (not a number) in Loop predictions until that override is removed and will continue to see that for the full duration of insulin action (6 hours).</p> <p>This example customization changes the lower bound for sensitivity to 50% (factor of 2 smaller than 100%) and provides 5% steps.</p> Key_Phrase<pre><code>let allScaleFactorPercentages\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/LoopKitUI/Views</li> <li>File: InsulinSensitivityScalingTableViewCell.swift, Line 19</li> </ul> <p>Code Before Modification</p> <pre><code>private let allScaleFactorPercentages = Array(stride(from: 10, through: 200, by: 10))\n</code></pre> <p>Code After Modification to 50% to 200% by steps of 5%</p> <pre><code>private let allScaleFactorPercentages = Array(stride(from: 50, through: 200, by: 5))\n</code></pre>"},{"location":"build/code_customization/#modify-maximum-and-warning-carb-entry","title":"Modify Maximum and Warning Carb Entry","text":""},{"location":"build/code_customization/#loop-3-carb-entry-variables","title":"Loop 3 Carb Entry Variables","text":"<p>Loop 3 has both a maxCarbEntryQuantity and a warningCarbEntryQuantity, found adjacent to each other in the code. The warning value is the level at which you are asked if you really meant to enter that amount:</p> Key_Phrase<pre><code>let maxCarbEntryQuantity =\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/Loop/Models</li> <li>File: LoopConstants.swift, line 18</li> </ul> <p>Code Before Modification</p> <pre><code>static let maxCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 250) // cannot exceed this value\n\nstatic let warningCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 99) // user is warned above this value\n</code></pre> <p>This first example might be used by a parent for a child with very small carb entries.</p> <p>Code After Modification to enable the warning at lower levels and limit maximum</p> <pre><code>static let maxCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 99) // cannot exceed this value\n\nstatic let warningCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 49) // user is warned above this value\n</code></pre> <p>This second example might be used by a person who routinely enters large meals and does not want to be warned with every meal.</p> <p>Code After Modification to warn if entry is between 201 and 300g</p> <pre><code>static let maxCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 300) // cannot exceed this value\n\nstatic let warningCarbEntryQuantity = HKQuantity(unit: .gram(), doubleValue: 200) // user is warned above this value\n</code></pre>"},{"location":"build/code_customization/#loop-22x-max-carb-entry","title":"Loop 2.2.x Max Carb Entry","text":"<p>Users of Loop 2.2.9 and earlier or FreeAPS must use the following method for modifying maximum carb entry:</p> <p>Some people want to limit the maximum number of carbs that can be entered in one entry \u2013 especially for children or folks who eat lower carb. This helps prevent accidental typos, e.g., entry of 115 g instead of 15 g for a meal.</p> Key_Phrase<pre><code>maxQuantity =\n</code></pre> <p>As shown in the graphic below, this phrase shows up in 2 places, only the first one should be modified.</p> <p></p> <ul> <li>Loop 2.2.x<ul> <li>Folder: Loop/Loop/View Controllers</li> <li>File: CarbEntryViewController.swift, Line 33 (Loop 2.2.x)</li> </ul> </li> </ul> <p>Code Before Modification</p> <pre><code>var maxQuantity = HKQuantity(unit: .gram(), doubleValue: 250)\n</code></pre> <p>Code After Modification to limit carb entry to 99 g</p> <pre><code>var maxQuantity = HKQuantity(unit: .gram(), doubleValue: 99)\n</code></pre>"},{"location":"build/code_customization/#pods-add-extra-insulin-on-insertion","title":"Pods: Add Extra Insulin on Insertion","text":"<p>The default value is 0.0 U of extra insulin.  If you use this customization, start with a small number and work your way up. If you are coming from manual podding and routinely gave yourself an extra bolus with your PDM at pod change time, you may not need nearly as much with Loop - be conservative.</p> <p>Note that Loop does not include the amount of insulin in the prime or insertion steps in your IOB. The pod reports every pulse that it delivers to Loop. If you look in the Pod Settings insulin delivered row, that is the total delivered by the pod minus the (prime plus insertion) amounts. The only way to know that you successfully made this change is to count the clicks.  Normal insertion is 0.5 U (0.5 U / 0.05 U per click = 10 clicks). So if you add 0.35 U to the \"extra\" value, you should get 0.35 / 0.05 = 7 extra clicks. In other words, 17 total clicks after you press insert.</p> <p>This code change is found in one location for Eros Pods (called Omnipod throughout the app) and DASH Pods (called Omnipod Dash throughout the app). I tend to change both files, but if you're only using one kind of pod, that is really not necessary.</p> Key_Phrase<pre><code>let cannulaInsertionUnitsExtra\n</code></pre> <ul> <li>Module: OmniBLE (DASH) or OmniKit (Eros)</li> <li>DASH or Eros Pod (Loop 3 only)<ul> <li>Folder: OmniBLE/OmniBLE/OmnipodCommon (DASH)</li> <li>Folder: OmniKit/OmniKit/OmnipodCommon (Eros)</li> <li>File: Pod.swift, Line 82 (DASH); Line 87 (Eros); </li> </ul> </li> <li>Loop 2.2.x: Eros Pod (still configured in rileylink_ios - use Key_Phrase)</li> </ul> <p>Code Before Modification</p> <pre><code>public static let cannulaInsertionUnitsExtra = 0.0 // edit to add a fixed additional amount of insulin during cannula insertion\n</code></pre> <p>Code After Modification to add 0.35 U</p> <pre><code>public static let cannulaInsertionUnitsExtra = 0.35 // edit to add a fixed additional amount of insulin during cannula insertion\n</code></pre>"},{"location":"build/code_customization/#modify-the-guardrails","title":"Modify the Guardrails","text":"<p>The Therapy Setting Guardrails are for Loop 3 only.</p>"},{"location":"build/code_customization/#glucose-guardrails","title":"Glucose Guardrails","text":"<p>If you build Loop 3 over a version of Loop 2.2.x or FreeAPS where the Correction Range is lower than the default value of 87 mg/dL (4.8 mmol/L), your app requires you to satisfy the new guardrail before you can save that Therapy Setting when you onboard.</p> Key_Phrase<pre><code>Guardrail(absoluteBounds:\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/Extensions</li> <li>File: Guardrail+Settings.swift</li> <li>Line: 12 for suspendThreshold</li> <li>Line: 26 for correctionRange</li> </ul> <p>Code Before Modification</p> <pre><code>static let suspendThreshold = Guardrail(absoluteBounds: 67...110, recommendedBounds: 74...80, unit: .milligramsPerDeciliter, startingSuggestion: 80)\n</code></pre> <p>and</p> <pre><code>static let correctionRange = Guardrail(absoluteBounds: 87...180, recommendedBounds: 100...115, unit: .milligramsPerDeciliter, startingSuggestion: 100)\n</code></pre> <p>Modify the 67 for suspendThreshold or 87 for correctionRange to the desired value.  Loop automatically converts from mg/dL. So you must enter values reasonable for mg/dL (18 times higher than for mmol/L).</p>"},{"location":"build/code_customization/#modify-guardrails-for-insulin-sensitivity-factor-isf","title":"Modify Guardrails for Insulin Sensitivity Factor (ISF)","text":"<p>Similar to the instructions for glucose guardrails above, but use this <code>Key_Phrase</code> and modify the absoluteBounds row, next line.</p> Key_Phrase<pre><code>static let insulinSensitivity = Guardrail(\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/Extensions</li> <li>File: Guardrail+Settings.swift, line: 81</li> </ul>"},{"location":"build/code_customization/#modify-guardrails-for-carb-ratio-cr","title":"Modify Guardrails for Carb Ratio (CR)","text":"<p>Similar to the instructions for glucose guardrails above, but use this <code>Key_Phrase</code> and modify the absoluteBounds row, next line.</p> Key_Phrase<pre><code>static let carbRatio = Guardrail(\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Folder: LoopKit/Extensions</li> <li>File: Guardrail+Settings.swift, line: 88</li> </ul>"},{"location":"build/code_customization/#adjust-future-carbs-time-interval","title":"Adjust Future Carbs Time Interval","text":"<p>Loop 3 limits the future time change allowed to 1 hour.</p> Key_Phrase<pre><code>cell.datePicker.maximumDate = date.addingTimeInterval\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/Loop/View Controllers</li> <li>File:CarbEntryViewController.swift, Line 438</li> </ul> <p>Default shown below (for maximum and minimum):</p> <p>Code Before Modification</p> <pre><code>cell.datePicker.maximumDate = date.addingTimeInterval(.hours(1))\ncell.datePicker.minimumDate = date.addingTimeInterval(.hours(-12))\n</code></pre> <p>Change the maximumDate to the number of hours in the future you desire. Remember that Loop may increase insulin dosing for future carbs - make sure that they actually arrive. </p> <p>The minimumDate is how far back in the past you can modify time.  The default is 12 hours in the past.</p>"},{"location":"build/code_customization/#adjust-the-watch-crown-sensitivity","title":"Adjust the Watch Crown Sensitivity","text":"<p>The rate of change of the carb and bolus entry pickers when using the digital crown can be altered as can the rotation required to confirm a bolus on the watch. If you are running an older series watch - you may want to make these customizations. When I switched from Series 3 to Series 7 watch - it was amazing. I got a graph on the main watch screen I didn't even know existed and the bolus acceptance was a breeze!</p> <p>There are a number of places where you need to make changes (2 for sensitivity and 2 for bolus confirmation for Loop 2.2.x), so walk though them one at a time. For the <code>Watch Crown Sensitivity</code>, the 1/24 value is the ratio of rotations of the crown to the amount of change in the value. Changing it to 1/12 would mean that half as many turns would be needed for the same amount of carb or bolus entry.</p> <ul> <li>The Loop 2.2.x customizations are throughly tested by many users.</li> <li>The Loop 3 customization is provided from code inspection and one test - use with care.</li> </ul>"},{"location":"build/code_customization/#loop-22x-sensitivity","title":"Loop 2.2.x Sensitivity","text":"Key_Phrase<pre><code>let rotationsPerIncrement\n</code></pre> <ul> <li>Folder: Loop/WatchApp Extension/Controllers</li> <li>File: AddCarbsInterfaceController.swift, Line: 249</li> <li>Initial Value: 1/24; try 1/12 to increase change in picker value for a given motion</li> </ul> Key_Phrase<pre><code>let rotationsPerValue\n</code></pre> <ul> <li>Folder: Loop/WatchApp Extension/Controllers</li> <li>File: BolusInterfaceController.swift, Line: 191</li> <li>Initial Value: 1/24; try 1/12 to increase change in picker value for a given motion</li> </ul>"},{"location":"build/code_customization/#loop-22x-bolus-confirmation","title":"Loop 2.2.x Bolus Confirmation","text":"<p>In order to reduce the amount the user has to spin the watch crown to confirm a bolus, there are 3 numbers on 2 lines that must be modified. You will be working in the same file you just used to modify the watch sensitivity to adjusting the bolus amount, BolusInterfaceController.swift.</p> <p>For example to change rotation required to 70% of the default, change 1.0 to 0.7 in 3 places on those 2 lines. This <code>Key_Phrase</code> returns 3 lines, the second 2 of which are the ones in that file where the change is required:</p> Key_Phrase<pre><code>abs(accumulatedRotation)\n</code></pre> <ul> <li>Folder: Loop/WatchApp Extension/Controllers</li> <li>File: BolusInterfaceController.swift, Lines: 311 and 360</li> <li>Initial Value: 1.0; try 0.7 to decrease how much is needed to confirm bolus</li> </ul>"},{"location":"build/code_customization/#loop-3-digital-crown-adjustments","title":"Loop 3 Digital Crown Adjustments","text":"<p>These are new instructions and the user should take care - and please report back if you have problems.</p> <p>First - try it with no customization. Then make small changes.</p> <p>This key phrase will indicate three different files in the same folder as shown in the graphic below - you can adjust each in turn as you desire. When you click on the line, the quantity you change is a few lines below where you find the <code>Key_Phrase</code>, except for the CarbAndDateInput file.</p> Key_Phrase<pre><code>.digitalCrownRotation\n</code></pre> <ul> <li>Module: Loop</li> <li>Folder: Loop/WatchApp Extension/Views/Carb Entry &amp; Bolus</li> </ul> <p></p>"},{"location":"build/code_customization/#modify-bolus-confirmation-motion","title":"Modify Bolus Confirmation Motion","text":"<ul> <li>File: BolusConfirmationView.swift, line 59</li> <li>Initial Value for <code>scalingRotationBy</code> is 4</li> <li>Decrease to require less motion to confirm bolus (use whole numbers only), start with 3</li> </ul>"},{"location":"build/code_customization/#modify-bolus-picker-sensitivity","title":"Modify Bolus Picker Sensitivity","text":"<ul> <li>File: BolusInput.swift, line 53</li> <li>Initial Value for <code>rotationsPerIncrement</code> is 1/24</li> <li>A change to 1/12 increases the change in picker value for a given motion</li> </ul>"},{"location":"build/code_customization/#modify-carb-and-time-picker-sensitivity","title":"Modify Carb and Time Picker Sensitivity","text":"<ul> <li>File: CarbAndDateInput.swift, line 68</li> <li>Initial Value for <code>rotationsPerIncrement</code> is 1/24</li> <li>A change to 1/12 increases the change in picker value for a given motion</li> </ul>"},{"location":"build/code_customization/#expiration-notification-customization","title":"Expiration Notification Customization","text":"<p>An expiration notification feature has been added to Loop. You get a notification when you open the Loop app to alert you that the expiration is approaching. (Not available with version v2.2.4 and earlier.)</p> <ul> <li>Read Loop App Expiration Notification to see the expiration reminder</li> <li>Read Loop App Expiration Date if you have an older version of Loop</li> </ul> <p>If you prefer a different notification time and frequency, there are two lines you can modify:</p> <ul> <li>Module: Loop</li> <li>Folder: Loop/Managers</li> <li>File: ProfileExpirationAlerter.swift<ul> <li>Line 16: modify how long before expiration you get the FIRST notification</li> <li>Line 28: modify how frequently you will be notified</li> </ul> </li> </ul> Key_Phrase<pre><code>expirationAlertWindow: TimeInterval\n</code></pre> Key_Phrase<pre><code> minimumTimeBetweenAlerts: TimeInterval\n</code></pre> <p></p> <p>Default code for line 16: <pre><code>    static let expirationAlertWindow: TimeInterval = .days(20)\n</code></pre></p> <p>Example modifications to First Notification:</p> <ul> <li>30 days: change <code>.days(20)</code> to <code>.days(30)</code></li> <li>12 hours: change <code>.days(20)</code> to <code>.hours(12)</code></li> </ul> <p>Default code for line 28:</p> <pre><code>    let minimumTimeBetweenAlerts: TimeInterval = timeUntilExpiration &gt; .hours(24) ? .days(2) : .hours(1)\n</code></pre> <p>Modify Frequency of Repeated Notifications (Three Values):</p> <ul> <li>This phrase: <code>&gt; .hours(24) ? .days(2) : .hours(1)</code></li> <li>Rewritten as: <code>&gt; Time_A ? Frequency_A : Frequency_B</code>, means:<ul> <li>Use Frequency_A if there is more time between now and the expiration date than Time_A</li> <li>Use Frequency_B if there is less time between now and the expiration date than Time_A</li> </ul> </li> </ul> <p>You can enter Time or Frequency as <code>.days(value)</code>, <code>.hours(value)</code> or <code>.minutes(value)</code>.</p> <p>Free App Users:</p> <p>An example change that a Free Loop App user (who has to build once a week) might choose is:</p> <p><pre><code>     &gt; .hours(4) ? .days(10) : .hours(2)\n</code></pre> Combined with an <code>.hours(12)</code> on line 16, they would get notified at 12 hours, 4 hours and 2 hours before expiration on the day of expiration and only when the app is opened. Since you'll be building once a week, you can play around with these values until you are happy.</p>"},{"location":"build/code_customization/#exponential-insulin-curve","title":"Exponential Insulin Curve","text":""},{"location":"build/code_customization/#enable-child-model","title":"Enable Child Model","text":"<p>Loop 3, by default, does not include the concept of child versus adult for rapid-acting insulin, i.e., Humalog, Novalog and Apidra.</p> <ul> <li>The child model can be enabled following the directions in Build-Time Features, adding ADULT_CHILD_INSULIN_MODEL_SELECTION_ENABLED to the LoopConfigOverride.xcconfig file and rebuilding</li> <li>Insulin Model is then found in the Therapy Setting section of Loop 3 with Adult selected by default</li> <li>Insulin Type continues to be associated with the pump and can be modified in the Pump Settings screen</li> </ul>"},{"location":"build/code_customization/#insulin-model-customization","title":"Insulin Model Customization","text":"<p>Each exponential model has 3 parameters that can be adjusted:</p> <ul> <li>actionDuration: Duration of insulin activity (minutes)</li> <li>peakActivity: Peak of insulin activity (minutes)</li> <li>delay: Delay before insulin begins to acts after delivery starts (minutes)</li> </ul> <p>Please read the nitty-gritty discussion that went into the development of the \"exponential insulin models\" in this GitHub Issue Comment.</p> <p>If you wish to customize these values, please make sure you know what you are doing.  This is not a modification recommended for Loop novices.</p> Key_Phrase<pre><code>MARK: - Model generation\n</code></pre> <ul> <li>Module: LoopKit</li> <li>Loop 3<ul> <li>Folder: LoopKit/LoopKit/Insulin/ &lt;&lt; NOTE new location</li> <li>File: ExponentialInsulinModelPreset.swift</li> <li>Lines:<ul> <li>actionDuration (19 to 32)</li> <li>peakActivity (34 to 47)</li> <li>delay (49 to 62)</li> </ul> </li> </ul> </li> <li>Loop 2.2.x<ul> <li>Folder: Loop/LoopCore/Insulin</li> <li>File: ExponentialInsulinModelPreset.swift</li> <li>Lines:<ul> <li>actionDuration (20 to 29)</li> <li>peakActivity (31 to 40)</li> <li>effectDelay (42 to 51)</li> </ul> </li> </ul> </li> </ul> <p></p> <p>This Loop 3 table of default values is provided for convenience. The times are all in minutes.</p> Model DIA Peak Delay rapidActingAdult 360 75 10 rapidActingChild 360 65 10 fiasp 360 55 10 lyumjev 360 55 10 afrezza 300 29 10"},{"location":"build/code_customization/#loop-logo","title":"Loop Logo","text":"<p>Mac-Xcode Instructions</p> <p>This can be done with GitHub but the instructions might need to be adjusted for that case.</p> <p>If you want an app logo other than the default green circle for your Loop app, you can easily customize this.  To make it easy to generate the correct sizes of icons, you can use a site like appicon.build or appicon.co and just drag and drop your source image. The source image needs to be 1024 pixels x 1024 pixels.  The site will email you a zip file or automatically download a set of files.  Highlight and copy the contents of the Appicon.appiconset that you are sent, including the Contents.json file</p> <p>Use Finder to Navigate to the LoopWorkspace folder. These instructions assume you used the Build Select Script - if your files are in a different folder, make the appropriate adjustment.</p> <p>For Loop 2.2.x:</p> <ol> <li>Use Finder to navigate to Downloads / BuildLoop and open the folder with the most recent date (e.g., Loop-Master-211006-0524)</li> <li>Double-click on the LoopWorkspace folder</li> <li>Double-click on the AdditionaAssets.xcassets folder</li> <li>Double-click on the CustomLoopIcon.appiconset folder</li> <li>Delete the contents of the CustomLoopIcon.appiconset folder and copy/paste your new images and Contents.json file.</li> <li>Rebuild your app</li> </ol> <p>For Loop 3:</p> <ol> <li>Make sure Xcode is closed</li> <li>Use Finder to navigate to Downloads / BuildLoop and open the folder with the most recent date (e.g., Loop-230114-1153)</li> <li>Double-click on the LoopWorkspace folder</li> <li>Double-click on the OverrideAssetsLoop.xcassets folder</li> <li>Double-click on the AppIcon.appiconset folder</li> <li>Delete the contents of the Appicon.appiconset and copy/paste your new images and Contents.json file.</li> <li>Rebuild your app</li> </ol> <p>You may see a yellow warning that there are \u201cunassigned children\u201d depending on the images the app icon generator tool produced. The unassigned children alert will not prevent your app from building, it\u2019s simply because there are more sizes of images than Loop app uses.  You can just leave the unassigned children alone (wow...how often do you get to say that phrase?).</p> <p>And now you'll be the proud new owner of a custom Loop icon.</p>"},{"location":"build/code_customization/#additional-customizations-for-loop-3","title":"Additional Customizations for Loop 3","text":"<p>If you want to add these customizations: CustomTypeOne LoopPatches and clients for xDrip4iOS and GlucoseDirect, which assist those using Libre sensors, you can add them yourself (with either Mac-Xcode or GitHub browser build method) or use a prepared fork that already contains them.</p> <p>These customizations are only for Loop 3:</p> <ul> <li>Some are already added to the released version of Loop in a fork of LoopWorkspace for your convenience, Loop and Learn: Loop with Patches</li> </ul>"},{"location":"build/code_customization/#open-a-terminal-in-loopworkspace-folder","title":"Open a Terminal in LoopWorkspace Folder","text":"<p>Refer to the graphic below.  The Downloads folder in Finder is highlighted on the upper left. The full path to Loop.xcworkspace is highlighted along the bottom. Double clicking on that file opens Xcode; but to apply customizations, you need to type commands in the terminal.</p> <ul> <li>Open Finder</li> <li>Navigate to Downloads/BuildLoop and look for your download by name and date</li> <li>Open that folder, for example, Downloads/BuildLoop/Loop-220803-1145</li> <li>Find the LoopWorkspace folder icon (dashed-blue rectangle)</li> <li>Hold down the CTRL key and click (or right-click) LoopWorkspace</li> <li>A menu appears - select <code>New Terminal at Folder</code> (near the bottom of the list)</li> </ul> <p>This new terminal window is ready to accept commands as needed when the instructions say to start a terminal in the LoopWorkspace folder.</p> <p>To confirm you are in the correct location, type <code>pwd</code> and return in the terminal. The response must end in LoopWorkspace. For example, using the graphic below, the response to <code>pwd</code> should be similar to:</p> <p><code>/Users/marion/Downloads/BuildLoop/Loop-20220803-1145/LoopWorkspace</code></p> <p></p>"},{"location":"build/code_customization/#custom-type-one-looppatches","title":"Custom Type One LoopPatches","text":"<p>Several items have been consolidated into a set of patches known as CustomTypeOne LoopPatches. The easiest way to get CustomTypeOne LoopPatches is to use the Loop and Learn: Customization Select Script.</p> <p>Please read the documentation and test any patch that you enable. These patches don't have the nice guardrails found in Loop 3 and must be configured at the iOS Settings, Loop interface. They cannot be adjusted inside the Loop app.</p> <p>The CustomTypeOne LoopPatches are included in Loop and Learn: Loop with Patches.</p>"},{"location":"build/code_customization/#add-libre-app-to-loop-phone","title":"Add Libre App to Loop Phone","text":"<p>This method only works for Loop 3 and only for some Libre sensors. The US versions for Libre 2 cannot be read with an iPhone.</p> <p>There are several options for code that will read the raw Libre values and convert them into glucose readings. You must do your own research to decide which code to use. Be aware that you must perform careful calibrations to maintain accurate glucose estimates.</p> <p>These are the Libre iOS app options.</p> <ul> <li>xDrip4iOS: Documentation<ul> <li>Check to see if your sensor is compatible</li> <li>To use this code with Loop, you must \"build it yourself\" with the same developer ID as you use with Loop<ul> <li>You can use the Loop and Learn: Build Select Script and choose Option 2: Build Related Apps and then select xDrip4iOS</li> </ul> </li> <li>If you use the TestFlight installation method with someone else's apple developer id, you will need an internet connection to Loop</li> </ul> </li> <li>GlucoseDirect: README file on github repository<ul> <li>To use this code with Loop, you must \"build it yourself\" with the same developer ID as you use with Loop<ul> <li>You can use the Loop and Learn: Build Select Script and choose Option 2: Build Related Apps and then select GlucoseDirect</li> </ul> </li> <li>If you use the TestFlight installation method with someone else's apple developer id, you will need an internet connection to Loop</li> </ul> </li> <li>LibreTransmitter for Loop: README file on github repository<ul> <li>LibreTransmitter is incorporated into Loop directly, so no separate app is required</li> <li>Refer to LibreTransmitter</li> </ul> </li> </ul> <p>Once you have chosen the desired app, you need to install it on your Loop phone using the same developer ID as was used for the Loop app and then you must modify the Loop 3 code that you previously downloaded or use Loop and Learn: Loop Customization.</p>"},{"location":"build/code_customization/#modify-loop-to-use-libre","title":"Modify Loop to use Libre","text":"<p>The Loop and Learn: Loop with Patches version of Loop has both xDrip4iOS and GlucoseDirect clients. If you choose to add them yourself and not use that fork, then follow the steps below.</p> <p>For your selected app to read the Libre, you must also add a client to Loop 3 to interface with the \"reader\" app. You only need to add the client for the app you've chosen for accessing your Libre sensor. However, you may find watching the video for GlucoseDirectClient and reading the step-by-step instructions for xdrip-client-swift or LibreTransmitter may together give you a better idea how to incorporate your preferred app with Loop 3.</p> <p>Add a client that interfaces with xDrip4iOS:</p> <ul> <li>Add xdrip-client-swift to Loop 3<ul> <li>Note - there are extra details visible when you click on the black arrow icons in this file</li> <li>zulipchat converstation</li> </ul> </li> </ul> <p>Add a client that interfaces with GlucoseDirect:</p> <ul> <li>Add GlucoseDirectClient<ul> <li>zulipchat conversation</li> <li>The instructions are in the video on the GlucoseDirectClient repo page</li> </ul> </li> </ul>"},{"location":"build/code_customization/#libretransmitter","title":"LibreTransmitter","text":"<p>Add LibreTransmitter to Loop as a plugin:</p> <ul> <li>LibreTransmitter for Loop: README file on github repository<ul> <li>LibreTransmitter is incorporated into Loop directly, so there not a separate app to be installed</li> <li>zulipchat conversation</li> <li>There is a development branch, libre, that has this incorporated</li> <li>See BuildLoopDev Script</li> </ul> </li> </ul>"},{"location":"build/code_customization/#limit-loop-for-faster-cgm","title":"Limit Loop for Faster CGM","text":"<p>Loop 3 enables higher rates of CGM updates. One consequence of this can be increased usage of pump batteries. This can contribute to pod faults with Eros pods or even DASH pods when using a Libre sensor with 1-minute CGM updates. Medtronic pumps are very unhappy with faster Loop cycles and should not be subjected to this.</p> <p>This modification limits the period for Loop cycles to 4.8 minutes or longer. See also Loop and Learn: Single Customization List.</p> <p>Meant for Libre Users</p> <p>This customization is suggested for Libre Users who need to limit how frequently Loop modifies dosing commands to preserve pod batteries.</p> <p>The Loop 3 code was modified when adding support for DASH pods. The DASH pods have a 3-minute heartbeat and it was discovered that with Dexcom (5-minute update rate) and DASH, the Loop could switch to a DASH heartbeat and not be triggered by the next CGM reading. Loop works much better when each Loop cycle is triggered by the CGM.</p> <p>The preferred solution is to have the CGM manager decide when to send updated glucose values to Loop.</p> Key_Phrase<pre><code>let timeSinceLastLoop\n</code></pre> <ul> <li>Folder: Loop/Loop/Managers/</li> <li>File: LoopDataManager.swift, Line: 841</li> </ul> <p>The Key_Phrase gets you near where you will insert new code.</p> <p>Code Before Modification</p> <p>The line above the Key_Phrase is:</p> <pre><code>if let lastLoopCompleted = self.lastLoopCompleted {\n</code></pre> <p>You can copy the lines below and replace the one line above with this new code.</p> <p>Code After Modification</p> <pre><code>// Limit Loop frequency to 4.8 minutes\nif let lastLoopCompleted = self.lastLoopCompleted, Date().timeIntervalSince(lastLoopCompleted) &lt; TimeInterval(minutes: 4.8) {\n    self.logger.default(\"Skipping loop attempt as last loop completed at %{public}@\", String(describing: lastLoopCompleted))\n    return\n} else if let lastLoopCompleted = self.lastLoopCompleted {\n</code></pre>"},{"location":"build/code_customization/#folders-and-icons","title":"Folders and Icons","text":"<p>The folders listed in the code customization steps are the actual directory names as stored on your computer.  However, a shortened name is used for some folders when being displayed as icons in Xcode. Some people prefer to search through the folder icons to find a file instead of using the <code>Find in Workspace</code> feature.</p> <p>In the graphic below, the user searched for an item found for both Eros and DASH pods (in two different files).  The top part of the graphic shows the result of the search with user clicking on one instance.  On the right side of the top graphic (highlighted by red rectangle) is the name of the selected file on the computer with the full directory name.</p> <ul> <li>Inset 1: User clicked on the folder icon (highlighted by red square) to see the list of icons for folders included in the LoopWorkspace</li> <li>Inset 2: User opens folders under RileyLink icon to open OmniKit, then OmnipodCommon to find the Pod.swift file (NOTE - the Eros information is in a different Module now, OmniKit, but the graphic has not been updated.)</li> </ul> <p></p> <p>These folder icon names are different from the directory names on the computer:</p> Folder Icon Name Directory Name ShareClient dexcom-share-client-swift RileyLink rileylink_ios Amplitude Amplitude-iOS <p>All other icons and directory names match.</p>"},{"location":"build/health/","title":"Loop 2 Health Permissions","text":""},{"location":"build/health/#health-data","title":"Health Data","text":"<p>The Loop app uses the Health app to record blood glucose, insulin, and carbohydrate data. The blood glucose, insulin, and carbohydrate data stored in the Health app can also be accessed and uploaded by the Tidepool Mobile app which enables display on of your data on the Tidepool web-based display tool. Please review the settings below to ensure you have the proper settings.</p>"},{"location":"build/health/#loop-permissions","title":"Loop Permissions","text":"<p>You need to set up Loop's permissions to read and write some data in the Health app. When you finish building your first Loop app, the Health app screen for Loop permissions automatically appears. (People who have been looping a while should be aware that the permissions are slightly different now.) Do not enable permission for Loop to read carbohydrates from the Apple Health app.</p> <p>You can also get to this screen (for iOS 15) by iPhone -&gt; Settings -&gt; Health (heart icon) -&gt; Data Access &amp; Devices -&gt; Loop.</p> <p>New Instructions</p> <p>Loop does not need to read carbohydrates from the Health app.</p> <p>The old instructions suggested turning on all switches.  This is NOT necessary for carbohydrates and can be dangerous if</p> <ol> <li>A different app writes carbohydrates to the Health app</li> <li>If two Loopers use the same Apple ID - PLEASE - do not do this; Loopers need their own Apple ID</li> </ol> <p></p> <p>Blood Glucose: Permission to Write and Read</p> <ul> <li>Loop eavesdrops on the Bluetooth communication of the Dexcom G4/G5/G6 CGM and writes the values to the Health app for the first 3 hours</li> <li>After 3 hours, the Dexcom CGM app allows other apps (including the Health app) access to its CGM data, so Loop needs to read the older Blood Glucose from the Health app</li> <li>During times when there is no CGM data, the user can enter a finger stick value into the Health app Blood Glucose (BG) screen and Loop will read it, e.g., during sensor warmup</li> </ul> <p>Carbohydrates: Permission to Write ONLY</p> <ul> <li>Loop has its own carbohydrate data store and does not need to read carbs from the Health app</li> <li>Once Loop records a carbohydrate entry, it will start to dose insulin to accommodate the expected rise in blood glucose from the carbohydrates consumed</li> <li>If any other app writes carbohydrates to the Health app, you do not want Loop to add them to what you've already entered into the Loop app (resulting in duplicate entries)</li> </ul> <p>Insulin Delivery: Permission to Write and Read</p> <ul> <li>Loop writes basal and bolus doses to the Health app</li> <li>Loop reads any manual insulin added to the Health app, e.g., insulin taken by injection</li> </ul> <p>Sleep: Permission to Read</p> <ul> <li>Loop uses Sleep information to decide which times of day to use the limited daily allocation from Apple for updates to the Loop watch complication.</li> </ul>"},{"location":"build/health/#dexcom-permissions","title":"Dexcom Permissions","text":"<p>You also need to enable your Dexcom Mobile app to write to the Health app. The steps shown in the figure below are valid for iOS 12.</p> <p>For iOS 13/14, the menu items are: iPhone -&gt; Settings -&gt; Health (heart icon) -&gt; Data Access &amp; Devices -&gt; Dexcom app. Make sure Dexcom has permission to write Blood Glucose (after the 3 hour delay).  If you do not do this, you will have a maximum history of 3 hours displayed in the Loop Glucose screen.</p> <p></p>"},{"location":"build/overview/","title":"Mac-Xcode Build Overview","text":""},{"location":"build/overview/#mac-xcode-build-requirements","title":"Mac-Xcode Build Requirements","text":"<p>The complete requirements for building Loop with a Mac and Xcode are given in the next two sections. The first list contains the common requirements that are the same regardless of build method. The second list contains the additional requirements for building with a Mac and Xcode.</p> <p>Each requirement in the list is linked to the LoopDocs pages with more information.</p>"},{"location":"build/overview/#common-requirements","title":"Common Requirements","text":"<ol> <li>Compatible iPhone/iPod Touch</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device (not needed for Omnipod DASH)</li> <li>Apple Developer Membership (not needed if you rebuild weekly using the Mac-Xcode method)</li> </ol>"},{"location":"build/overview/#mac-xcode-build-additional-requirements","title":"Mac-Xcode Build Additional Requirements","text":"<ol> <li>Compatible Computer</li> <li>Xcode (a free Apple application)</li> </ol> <p>If building to a Simulator to try things out, the only requirements are a computer and Xcode.</p>"},{"location":"build/overview/#getting-ready-to-build","title":"Getting Ready to Build","text":"<p>Review the Common Requirements pages, listed above.</p> <p>Then review the Build pages for the method you have chosen. Read the top three boxes on each page: icons for those boxes are displayed below for reference. On a desktop, you can use <code>n</code> for next and <code>p</code> for previous.</p> <p>Time Estimate</p> <p>Summary</p> <p>FAQs</p> <p>Next, read pages completely and skim Oh dear! Build errors?. Most of the mistakes you can make when building with Xcode and a Mac have already been made. The Build Errors page shows how to fix them.</p> <p>When you are ready to proceed, complete the tasks on each page.  You can do one a day, take a week per page or blaze through them quickly.  Just be sure to read carefully and if you are confused - reach out for help: How to Find Help.</p> <p>After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app.</p>"},{"location":"build/overview/#what-if-i-get-stuck","title":"What if I get stuck?","text":"<p>Try to:</p> <ul> <li>Scroll back in the directions and see if you missed a paragraph or step.</li> <li>Compare your screen's display with the graphics in the step. Is something different or does yours have an error message? If you have an error message, does it guide you to the problem and solution?</li> <li>If you are still stumped - reach out for help: How to Find Help.</li> </ul>"},{"location":"build/step1/","title":"Compatible Computer","text":""},{"location":"build/step1/#compatible-computer","title":"Compatible Computer","text":"<p>Time Estimate</p> <p>If you are building with a Mac and Xcode:</p> <ul> <li>5 minutes, if you have a Mac with Ventura (macOS 13.x) or higher</li> <li>30-60 minutes, if you need to install macOS updates</li> </ul> <p>Hint: OS stands for Operating System</p> <p>New Method (Loop 3):</p> <p>If you do not have a Mac, you can build Loop 3 with any computer using a browser. If you want to use that method, review this list and head over to Browser Build.</p> <ul> <li>You need a paid ($99/year) Apple Developer Account</li> <li>You need an account (free) with github</li> <li>You need a compatible phone to install the app from TestFlight</li> <li>You need a compatible Pump and CGM if you want to actually Loop (and not just explore the app)</li> </ul> <p>Summary</p> <p>Your computer, iPhone and Xcode must have compatible versions to build Loop with the Mac-Xcode method.</p> <ul> <li>A summary list of Compatible Versions is found on this page with more detail in a later page</li> </ul> <p>If you are buying a Mac specifically to use the Mac-Xcode build method, chose one with Ventura operating system and at least 256 GB (512 GB is better). The Browser Build method does not have the same requirements.</p> <p>FAQs</p> <ul> <li>\"Do I need a Mac or Virtual Machine?.\" Not any more! You can build Loop 3 with any browser on any computer.</li> <li>\"I want to use the Mac-Xcode build method. Can I use a PC or Windows computer? I don't own an Apple computer.\" Yes, you can. Please read this FAQ about using a Virtual Machine.</li> <li>\"How often do I need to use the computer if I choose the Mac-Xcode build method?\" Computer access is required when<ul> <li>Initially installing the Loop app</li> <li>Loop app expires (Annually for a paid account or weekly for a free account)</li> <li>Updating to a newer Loop release</li> <li>You do NOT need access to an Apple computer to update your phone iOS, troubleshoot or change Loop settings</li> </ul> </li> </ul> <p>If you have access to a computer with MacOS 13.0 or newer, you can skip ahead to Check Space Available.</p>"},{"location":"build/step1/#compatible-versions","title":"Compatible Versions","text":"<p>With the release of Loop 3:</p> <ul> <li>Mac operating system of Ventura, macOS 13.x must be used if running on a phone with iOS 16.4 or newer</li> <li>Minimum Mac operating system is Monterey, macOS 12.5 or higher for phones running iOS 15.x or 16.3.1 or older</li> </ul> <p>The Loop and Learn Version Updates page posts an update every time a new iOS is released and tested. That page is typically updated faster than LoopDocs and reports changes, if any, to the minimum Xcode or macOS.</p> <ul> <li> iOS 16.4 or newer, the minimum macOS is Ventura (13.0)</li> <li> iOS 15.x or 16.3.1 or older, the minimum macOS is Monterey (12.5)</li> <li>Loop 3, the minimum macOS is Monterey (12.5)</li> </ul> <p>If your macOS does not meet the minimum, check to see if you can update your macOS or consider using the Browser Build method, which works on any computer.</p> <p>iOS Dictates Your Computer Needs</p> <p>The more up-to-date you keep your phone iOS, the more up-to-date your computer and macOS needs to be to build Loop with the Mac-Xcode build method. A new build is required at least once a year. More information on iOS is in Download Xcode.</p> <p>Do not use any of the beta macOS versions. (If you don't know what that means, you aren't using one.)</p>"},{"location":"build/step1/#check-your-macos-version","title":"Check Your macOS Version","text":"<p>To find your macOS version, click on the Apple icon in the computer's upper left corner and select <code>About this Mac</code>. The graphic below highlights the macOS version with a red rectangle. Your computer can be a MacBook, iMac, macMini, etc. It will work to build Loop if it has the minimum required macOS version and enough storage.</p> <p>With the Ventura macOS version, the <code>About this Mac</code> display changed. The left side of the graphic shows Monterey (or earlier) and the right side shows Ventura. Both styles of display indicate the macOS on this screen (red rectangle). For Ventura, when you tap on the <code>More Info</code> icon, it opens the General -&gt; About screen from the System Settings menu. This is very similar to the phone Settings -&gt; General -&gt; About screen.</p> <p></p> <p>If you do not have the required minimum macOS version</p> <ul> <li>For macOS 12.6.1 or earlier, check the <code>Software Update</code> button on the screen shown above</li> <li>For macOS 13.0 or later, click on the Apple and choose <code>System Settings</code><ul> <li>Select <code>General</code> and <code>Software Update</code>, just like you would on the phone interface</li> </ul> </li> </ul> <p>Apple says upgrading to macOS Monterey or Ventura requires 26 GB of available storage.</p>"},{"location":"build/step1/#check-the-space-available","title":"Check the Space Available","text":"<p>You need to have 50 GB free space in order to install Xcode in Download Xcode. At the top of the menu on the graphic above, click on the Storage Tab highlighted with a red rectangle, or, if running Ventura, tap on More Info to open the About screen (under System Settings-&gt;General), which includes storage at the bottom of the display.</p> <p>To free up space, move things like photos to an external drive. The Xcode application cannot be run from an external drive.</p> <p>If you are evaluating a used computer, it's best to have at least 256 GB total disk space (more is better).</p>"},{"location":"build/step1/#which-macs-are-compatible-with-macos-ventura","title":"Which Macs Are Compatible with macOS Ventura?","text":"<p>Ventura is required for building Loop on a phone running iOS 16.4 or higher with the Mac-Xcode method. You can install Ventura on the following:</p> <ul> <li>MacBook Pro introduced in 2017 or later</li> <li>MacBook Air introduced in 2018 or later</li> <li>MacBook introduced in 2017 or later</li> <li>Mac mini introduced in 2018 or later</li> <li>iMac introduced in late 2017 or later</li> <li>iMac Pro</li> <li>Mac Studio</li> <li>Mac Pro introduced in 2019 or later</li> <li>get the full list from Apple for Ventura</li> </ul>"},{"location":"build/step1/#which-macs-are-compatible-with-macos-monterey","title":"Which Macs Are Compatible with macOS Monterey?","text":"<p>Monterey can be used for building Loop with the Mac-Xcode method when building to a phone at iOS 16.3.1 or older. You can install Monterey on the following:</p> <ul> <li>MacBook Pro, early 2015 or newer</li> <li>MacBook Air, early 2015 or newer</li> <li>MacBook, early 2016 or newer</li> <li>Mac Mini, late 2014 or newer</li> <li>iMac, 2015 or newer</li> <li>iMac Pro, 2017 or newer</li> <li>Mac Pro, late 2013 or newer</li> <li>get the full list from Apple for Monterey</li> </ul>"},{"location":"build/step1/#older-macs","title":"Older Macs","text":"<p>Several experienced Loopers have reported success using OpenCore-Legacy-Patcher to enable older Macs computers to use new versions of the operating system. Use this link at your own risk. This is not suggested for novice Mac users.</p> <ul> <li>OpenCore Legacy Patcher</li> </ul> <p>Or - look into building with GitHub Actions - no Mac computer required, no need to worry about versions for Mac OS or Xcode - all done for you on GitHub (some configuration required).</p>"},{"location":"build/step1/#next-step","title":"Next Step:","text":"<p>If you already have an Apple Developer ID or you are using a free ID, next step is Download Xcode.</p> <p>Free ID</p> <p>The free ID method only works when using the Mac-Xcode build method. The Browser Build method requires a paid developer ID ($99/year) but does not require a Mac computer.</p>"},{"location":"build/step10/","title":"Test Settings","text":""},{"location":"build/step10/#test-settings","title":"Test Settings","text":"<p>Time Estimate</p> <ul> <li>2 hours to read the rest of LoopDocs (particularly the \"Set Up\", \"Operate\", and \"FAQ\" sections) and LoopTips thoroughly and thoughtfully</li> <li>If you like quizzes, this older quiz has not been updated for Loop 3, but the questions are still really good and the \"scoring\" provides extra insight into why your answer was right or wrong<ul> <li>15 minutes to take this quiz to confirm you understand Loop's expected behavior</li> <li>With Loop 3: you can remote bolus and you can set a manual temp basal rate and DASH pods can be used without a RileyLink</li> </ul> </li> <li>1-3 days to test settings for safety and to get the most out of Loop<ul> <li>This step can be done after you build Loop, just stay in Open Loop while you test</li> </ul> </li> </ul> <p>Summary</p> <ul> <li>Before you use Closed Loop mode, test and validate your basal rates, ISF (correction factor), and CR (carb ratios)</li> <li>You may need to adjust your settings for Loop</li> <li>Accurate settings are vital for success</li> </ul> <p>FAQs</p> <ul> <li>\"My endo chose my pump settings, so do I need to test them?\" Yes. Your endo chose your settings in a  different context, with different constraints. What is safe and ideal in traditional pump therapy, may not be the best selection for the Loop app. Testing your settings, even for just a couple days, makes a big difference.</li> <li>\"I have great control, why would I need to test my settings?\"  \"Great control\" may be due to lots of adjustments - bumps and nudges of insulin or carbs. Those bumps and nudges may be covering for underlying settings that need adjustment. If you are coming from a treatment style that involves memorizing your insulin doses for meals, you may not know your actual CR or ISF. Testing is key to success with Loop.</li> <li>\"I can't basal test with my 2-year-old. What can I do?\" That is pretty tough. Consult your endo, watch your patterns, and do the best you can...little kiddos are a difficult group to test settings. Once you become comfortable with Loop, there are tricks to adjust settings while staying in closed loop as long as settings are fairly close.</li> </ul> <p>Loop is just a fancy calculator underneath the hood. The math problems it solves depend on the settings you provide. So test settings before using Loop.</p>"},{"location":"build/step10/#basal-rates","title":"Basal Rates","text":"<p>Correct basal rates keep your blood glucose steady without food present. The standard method is to test your basal by having a relaxing 4-6 hours without eating at least two hours before you begin the test. Does your blood sugar stay steady? Or do you climb and need a correction? Or do you go low and need to eat? Setting basal is a crucial step to setting yourself up for Loop success. It determines how much of the insulin delivered (from basal and bolus) is counted as insulin on board (IOB).</p> <p>Basal Tricks</p> <p>Loop keeps track of how much more or less insulin than your scheduled basal rates are required to keep glucose in target. Once you become a proficient looper, you can tune your basal by looking at IOB overnight or when food and exercise are not involved.</p>"},{"location":"build/step10/#insulin-sensitivity-factor","title":"Insulin Sensitivity Factor","text":"<p>The Insulin Sensitivity Factor (ISF), sometimes called Correction Factor, is how much one unit of insulin will bring down your glucose. The higher the value of this setting, the more sensitive to insulin you are. An ISF of 30 (1.65) means one unit of insulin lowers your glucose 30 mg/dL (1.65 mmol/L) in the absence of food or activity, when basal rates are correct.</p> <p>Test ISF after you test and determine your basal rates. Simply bring yourself to a higher glucose with a glucose tab or choose a time when you are \"stuck\" higher than your target.</p> <ul> <li>Calculate how much insulin is required to lower your glucose to target, take it and observe if your glucose flattens out at your target within 3 hours<ul> <li>Do not do this test if you have recently eaten, recovered from a low glucose, engaged in physical activity, are sick or under stress</li> </ul> </li> <li>A starting point for ISF is to take total daily dose and divide that into 1800<ul> <li>This is just a starting point, many people have higher or lower ISF than this formula suggests</li> <li>Example, you take 30 U a day and have no idea what your ISF should be<ul> <li>Start with 60 mg/dL (3.2 mmol/L) and test it</li> </ul> </li> </ul> </li> </ul>"},{"location":"build/step10/#carb-ratio","title":"Carb Ratio","text":"<p>The Carb Ratio (CR) is the amount of carbs covered by one unit of insulin. Ideally, a good carb ratio will restore your glucose close to its starting point within 3 hours of the meal. (High fat/protein meals may cause glucose to be impacted longer.)</p> <p>If you are spiking higher than you\u2019d like after a meal, but still coming back to the starting glucose, consider pre-bolusing your meal earlier (maybe by 15-20 minutes) rather than changing the carb ratio.</p>"},{"location":"build/step10/#other-resources","title":"Other Resources","text":"<p>Check the companion site LoopTips. Several direct links to discussions are provided below:</p> <ul> <li>How to check settings </li> <li>Why settings are important</li> <li>What to do when you need to change settings which covers short term and long term reasons</li> </ul> <p>If you\u2019re fascinated by this topic, read the book 'Think Like A Pancreas' by Gary Scheiner for a really great discussion.</p>"},{"location":"build/step10/#next-step-make-plans-for-loop-data","title":"Next Step: Make Plans for Loop Data","text":"<p>Now you are ready to make plans for Loop Data.</p>"},{"location":"build/step11/","title":"Loop Data","text":""},{"location":"build/step11/#make-plans-for-your-loop-data","title":"Make Plans for your Loop Data","text":"<p>Time Estimate</p> <ul> <li>Apple Health: 0 minutes, already a part of your system</li> <li>Tidepool: 30 minutes to set up an account and add Tidepool Mobile to your phone</li> <li>Nightscout:<ul> <li>1-2 hours to build it yourself if you've never done it before</li> <li>1 hour to choose and sign up for a service if you want to pay someone</li> </ul> </li> </ul> <p>Summary</p> <ul> <li>Review the three major systems that can store and show your Loop data.</li> <li>Set up either Tidepool or Nightscout prior to your next endo appointment to provide Looping data to review.</li> </ul> <p>FAQs</p> <ul> <li>Do I have to set one of these up? Apple Health is already built into your iPhone and used by Loop, so there's no setup involved.</li> <li>Do I need all three? No, you can choose what suits you best. You can add a data system later.</li> <li>Why do I need any of these? With Loop use, your PDM (Omnipod) is not used or your pump (Medtronic) does not have sufficient memory for all the Loop commands. Your endo will have nothing to download at your next visit. You need to provide them with the information.</li> <li>Is it worth the time to setup Nightscout? I feel like I'm already doing so much outside my comfort zone. Yes. Loopers find it is definitely worth the time investment.  Nightscout provides essential data for evaluating settings and useful alarms and alerts.  Some Facebook help sites require Nightscout data to diagnose and suggest steps to address problems. There are fee-based services that will set up Nightscout for you, if you don't want to build it yourself.</li> </ul>"},{"location":"build/step11/#data-options","title":"Data Options","text":"<p>Take some time to familiarize yourself with these data options and choose your preferred system(s). Many Loopers use all three for various aspects.</p> <ul> <li>Apple Health app<ul> <li>Great resource to view on the Loop phone</li> <li>Not so great for showing your endo</li> </ul> </li> <li>Tidepool<ul> <li>Some endo offices will use your Tidepool website when you provide them with an invitation</li> <li>Many users of the mobile app like the note taking ability<ul> <li>The mobile app also uploads Apple HealthKit data to Tidepool</li> </ul> </li> </ul> </li> <li>Nightscout:<ul> <li>LoopDocs: Nightscout section of LoopDocs, has Loop-centric information about Nightscout</li> <li>LoopTips: Nightscout link to LoopTips page on Nightscout</li> <li>Nightscout: Documentation official Nightscout site with lots of information about building and using Nightscout</li> <li>Nightscout has a lot of useful alarms and alerts, provides a care portal and detailed reports</li> <li>For those who assist someone who is Looping, Nightscout enables the caregiver to provide remote commands to the Looper's phone<ul> <li>Loop 2 allows overrides to be enabled or disabled remotely</li> <li>Loop 3 allows remote commands for carbs, bolus or overrides</li> <li>The LoopCaregiver app is under development, but already has sufficient capabilities to be useful for caregivers to monitor and provide remote commands to their Looper's phone</li> </ul> </li> </ul> </li> </ul> <p>Nightscout options include free or nominal cost sites you build yourself or there are several Nightscout as a Service vendors who provide turn-key sites for a monthly fee. Links to the options are found in the Nightscout: Documentation - note that link takes you to a different site.</p> <p>Nightscout is the most useful day-to-day for some of its capabilities such as plotting IOB and providing a secure, real-time Dashboard of Loop status visible to anyone with access codes and the internet.</p>"},{"location":"build/step11/#next-step-meet-the-community","title":"Next Step: Meet the Community","text":"<p>Now you are ready to Meet the Community.</p>"},{"location":"build/step12/","title":"Meet the Community","text":""},{"location":"build/step12/#meet-the-community","title":"Meet the Community","text":"<p>Time Estimate</p> <ul> <li>Read about your Social Media Options: 5 minutes</li> <li>Join one or more groups: 10 minutes</li> </ul> <p>Summary</p> <ul> <li>Learn how to use the search tools explained in How to Ask for Help</li> <li>Learn the motto \"Help us help you\".</li> <li>Learn what information helps in solving a problem in building or in using Loop</li> </ul> <p>FAQs</p> <ul> <li>\"I'm worried I'll ask a stupid question\" Don't worry. All the mentors started out as novices. Focus instead on asking a thorough question. A thorough question explains what you've already tried or read, has screenshots of what you are confused by, and any other details you can provide.</li> </ul>"},{"location":"build/step12/#online-groups","title":"Online Groups","text":"<p>There's a wonderful community of Loopers who are willing to help you through the process. This link on Social Media Options walks you through those groups and how to join.</p> <p>Volunteers provide the Loop help found at these sites. None of the people are paid to answer questions or spend time troubleshooting. They simply want to help others. Please decrease their support burden by doing your homework and providing the information they need when requesting help. Please click the image below to watch this video full of tips to make the most of your online resources.</p> <p>Please watch this video (just under 7 minutes) to learn about using announcements and searches in Facebook groups and the LoopDocs pages.</p> <p>Note, the LoopDocs menus were reorganized after this video was prepared to make it easier to progress through the pages.   </p> <p></p>"},{"location":"build/step12/#screenshots","title":"Screenshots","text":"<p>Please take screenshots of your issue and include them in your posts. On an Apple computer, press Shift+Cmd+4 keys at the same time and a little crosshairs tool will appear. Click-and-drag across the area you'd like to include in the screenshot. When you let go of the button, the screenshot will be saved to your desktop with a file name starting with the name <code>Screen Shot</code>. To capture an entire window, press Shift+Cmd+4 keys at the same time followed by pressing Space (the  space bar) and then click on the window of interest.</p> <p>Use screenshots instead of cell phone images whenever possible. Screenshots are higher resolution and easier to read.</p> <p>Take a wide screenshot (full window capture) when asking for help with settings or Xcode build errors. Nightscout and Xcode have lots of valuable information off-to-the-side that can be valuable for troubleshooters.</p>"},{"location":"build/step12/#descriptive-language","title":"Descriptive Language","text":"<p>Use descriptive language - the most accurate, detailed words possible - when asking for help. Try to avoid the word \"it\" and instead use details and information to explain why you're asking for help, what you've already tried, and what happened when you tried those things (including screenshots). Let's illustrate with a couple of examples.</p>"},{"location":"build/step12/#example-1","title":"Example 1","text":"<p>Loop no longer allows you to enter your correction range in the wrong order, i.e., 110 to 90; but it once did and Loop would stop working. We're using that problem as an example below. </p> <p>Bad: \"<code>It's not working.</code>\" &lt;----makes me wonder what \"it\" is? What part of \"it\" isn't working exactly? The app? The glucose control? The pump integration? Alarms? Bolusing? CGM</p> <p>Ok: \"<code>My Loop app won't open.</code>\" &lt;---- Ok, so now I know the Loop app itself seems to be the problem, but still don't know if this is a build error or an error that has happened after building. The solutions might be different.</p> <p>Better: \"<code>My Loop app was working yesterday just fine, and now today it's not doing the things like I expect.</code>\" &lt;----- Getting closer. Now, I know this is not a build error and that it sounds like a more recent issue. I'm starting to narrow down the potential causes. This is about as much detail as it takes for me, as a volunteer, to consider helping. I might not have to ask 42 questions, but instead only 4 questions to find the remaining information for troubleshooting. If there were more details, it would save time.</p> <p>Awesome: \"<code>My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments and ever since it just turns white and closes no matter what I try.</code>\" &lt;---- DEFINITELY getting closer. Now I have a strong suspicion about where the bug is happening and can help with a couple links.</p> <p>GOLD MEDAL WORTHY: \"<code>My Loop app was working yesterday. Around lunch time, I went into the settings screen and made some adjustments to correction ranges. Ever since I did that, the app immediately turns white and shuts down. I have tried restarting my phone, but it has not fixed the problem. I tried searching the docs for 'loop closing' but didn't see results that matched my issue.</code>\" &lt;----- This person is doing an outstanding job of describing the problem. Lots of good details. Has shown initiative to try to use the resources already. This person did an excellent job of helping all of us help him/her.</p>"},{"location":"build/step12/#example-2","title":"Example 2","text":"<p>This example is not quite as old, but it refers to older Loop and iOS versions. It exemplifies the details needed to assist someone with a build error.</p> <p>Bad: \"<code>My Loop app won't build.</code>\" &lt;----- What step are you on? What is the iOS on your phone? What kind of computer are you using? What macOS? What Xcode version? Have you built successfully before or is this new?</p> <p>Ok: \"<code>I'm trying to update my Loop app and am getting a few errors that I don't understand.</code>\" &lt;----- Wow, sure would be nice to know what those error messages are. Are they red or yellow? A screenshot sure would help here.</p> <p>Awesome: \"<code>I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code that I don't understand. I've tried everything in the docs and nothing worked.</code>\" &lt;---- While I'm super happy they \"tried everything\", I'm no closer to knowing what the exact error message is nor which \"stuff\" exactly they tried. But all the version numbers are included.</p> <p>GOLD MEDAL WORTHY: \"<code>I have a macOS Big Sur 11.5.3 computer with Xcode 12.5.1 and my phone is running iOS 14.7.1. Downloaded Loop-master (2.2.6) this morning and I'm getting some red errors about an exit code 645 that I don't understand. Here's the screenshot of the error message. I tried searching the docs for \"exit code 645\" and didn't see any responses that helped.</code>\" &lt;---- This is the kind of detail that will get you to an answer very fast.</p>"},{"location":"build/step12/#be-ok-with-links","title":"Be OK with Links","text":"<p>Often, the best answer to your question is sending a link to the answer in LoopDocs or LoopTips.  This provides you a quick, accurate and complete answer. We understand that there is so much information in these sites that it can be hard to find answers.  Mentors know the docs well, are experts at using the search tools and will send direct links to the sections that best answer your question.</p> <p>If you've searched the docs and read relevant info already, please include that in your post or your reply. That way you don't get linked back to the part you are confused about. And if you have already read the specific section a mentor just linked, be specific about why your problem is not addressed by that link.  Or just say \"I'm confused when the doc says this\". Letting us know when these docs can be improved is very useful.</p>"},{"location":"build/step12/#next-step","title":"Next Step","text":"<p>Now you are ready to build or continue with setting up the Loop app.</p>"},{"location":"build/step12/#return-to-set-up","title":"Return to Set Up","text":"<p>If you are a new looper who got to these pages from the Set Up app page - congratulations. Now that you've reviewed these introductory pages, please continue with the Brand New Loopers section of the Set Up Overview page.</p>"},{"location":"build/step12/#browser-build","title":"Browser Build","text":"<p>Click here if you want to build with github build actions: Browser Build</p>"},{"location":"build/step12/#mac-xcode-build","title":"Mac-Xcode Build:","text":"<p>Click here if you want to build on a Mac using Xcode: Mac-Xcode Build</p>"},{"location":"build/step14/","title":"Build Loop","text":""},{"location":"build/step14/#summary","title":"Summary","text":"<p>Time Estimate</p> <ul> <li>60-80 minutes for first time builders</li> <li>10-15 minutes for repeat builders</li> </ul> <p>Summary</p> <p>You will:</p> <ul> <li>Run the Build Select Script to download Loop code</li> <li>Prepare to build the Loop app</li> <li>Press the Xcode Build Button to build Loop</li> <li>Watch in awe as you build your very own Loop app</li> </ul> <p>FAQs</p> <ul> <li>Why does Xcode show a colorful spinning icon and not respond to me? Unfortunately, sometimes Xcode gets confused and you need to force quit the application. See Xcode Not Responding for instructions.</li> <li>Many more FAQs for building Loop are in-line with the steps that trigger the questions.</li> </ul>"},{"location":"build/step14/#build-video","title":"Build Video","text":"<p>The Loop and Learn team prepared this YouTube video showing how to build Loop 2.2.x including the steps required to update if you previously built. The steps are different now. The video may be worth watching, but once you've reviewed it, work through the new build process described on this page.</p> <p>If you do watch this video, please note that you no longer are required to delete provisioning profiles as a separate step and the overall building process is streamlined.</p>"},{"location":"build/step14/#github-build-loop","title":"GitHub Build Loop","text":"<p>If you previously used GitHub Build to install Loop on this phone, you must make sure that automatically install is disabled in TestFlight, or you will not be able to install on that phone with Xcode.</p>"},{"location":"build/step14/#developer-mode","title":"Developer Mode","text":"<p>If you are running iOS 15 or watchOS 8 and earlier, you do not have developer mode and can skip ahead to Download Loop.</p> <p>New with iOS 16 and watchOS 9, you must enable Developer Mode to run or build Loop. (This is true for any app created by Xcode directly on your device.) If you want to know more, click on this Apple Link about Developer Mode.</p> <p>Loop will not run until you enable Developer Mode for iOS 16.</p>"},{"location":"build/step14/#prepare-your-phone-and-watch","title":"Prepare your Phone and Watch","text":"<ul> <li> <p>If you are running Loop and update to iOS 16 and watchOS 9; Loop will no longer run until you enable Developer Mode and you will see a message similar to the next graphic</p> </li> <li> <p>If you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available.</p> <p></p> </li> <li> <p>If your device uses iOS 16 (and watchOS 9); you must enable Developer Mode to build an app on that device using Xcode or it will show up as an \"Unavailable Device\" under Xcode</p> <p></p> </li> </ul>"},{"location":"build/step14/#developer-mode-on-ios-16-device","title":"Developer Mode on iOS 16 Device","text":"<p>To determine if Developer Mode is enabled, go into your phone settings, choose Privacy &amp; Security, scroll to the bottom of the screen and tap on the Developer Mode row and examine the Developer Mode slider.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, you will be asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"build/step14/#developer-mode-on-watchos-9-device","title":"Developer Mode on watchOS 9 Device","text":"<p>Build, Enable, Build</p> <p>Reports from users indicate that when you are building to a new Apple Watch - you must first build the app with Xcode before the developer mode will be available. So plan to build with Watch paired, and then enable Developer Mode and build again.</p> <p>This must be configured on the watch itself (not the watch app on the iPhone). To determine if Developer Mode is enabled, look at the watch face icons and find the Settings icon. Tap on it and scroll to and tap the Privacy &amp; Security icon. Then scroll to the bottom and tap on Developer Mode.</p> <ul> <li>If Developer Mode is enabled, the slider will be green and no further action is required</li> <li>If Developer Mode is not enabled, the slider will be blank<ul> <li>Move the slider so it is green</li> <li>Reboot the device when asked</li> <li>After the reboot, if you are asked if you want to turn on Developer mode</li> <li>Tap on the <code>Turn On</code> option</li> </ul> </li> </ul>"},{"location":"build/step14/#download-loop","title":"Download Loop","text":"<p>This page has the detailed steps to run the Build Select Script to download the Loop code, prepare your computer and build Loop.</p> <p>Every attempt was made to put messages directly in the script for each step. The next few sections of this page walk you through what you will see when you run the script.</p>"},{"location":"build/step14/#open-terminal","title":"Open Terminal","text":"<p>Go to the Finder app, click on Applications, then open the Utilities folder.  Locate the Terminal app and double-click Terminal to open a terminal window. The terminal window is very plain looking when you open it. That is normal.</p>"},{"location":"build/step14/#build-select-script","title":"Build Select Script","text":"<p>With the release of Loop 3, the build process is different and simpler</p> <ul> <li>Please read each step as if you are a new builder</li> <li>Don't assume you know what you are doing</li> <li>FreeAPS is no longer supported by the Build Select Script</li> <li>Loop 3 with Patches is provided instead</li> </ul> <p>These instructions show each step needed to download Loop using the Build Select Script.</p> <p>New Menu for Build Select Script</p> <p>The Build Select Script has been updated with more menu options. It can do more than just assist in building the Loop app.</p> <p>Please review Loop and Learn: Build Select Script for more information.</p> <p>You may notice some graphics on this page shows red font to emphasize some items. The script now only shows red font for an error. Bold font is used for emphasis. Not all graphics were updated.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to start the Build Select Script<pre><code>/bin/bash -c \"$(curl -fsSL \\\nhttps://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildSelectScript.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: Cmd+V ; or Ctrl click and select from menu or <code>Edit</code>-<code>Paste</code> at top of Mac screen.)</p> <ul> <li>Please read what is on the screen as you progress</li> <li>You can increase font size by holding down Cmd and hitting +</li> </ul> <p>You will be informed of the menu options as shown in the graphic below. You will choose Option <code>1</code> to Build Loop.</p> <p></p> <p>You will be informed that you are downloading open source software. Type <code>1</code> and return if you understand the warning and agree.</p> <p></p> <p>Next you are asked which version of Loop you would like to build. Type 1 and return to build Loop (as shown in the graphic below) or 2 for the fork of Loop with added Libre CGM options, CustomTypeOne patches and a custom logo.</p> <p></p>"},{"location":"build/step14/#wait-for-download-to-complete","title":"Wait for Download to Complete","text":"<p>This download can take from 3 minutes to 30 minutes depending on your download speed.  You can leave the room and return later to check on progress. When you read the words in the terminal, as the script runs, you may see terminology you do not understand - don't worry - you do not need to understand enumeration or submodule or cloning.  You only need to review the display to look for any error messages. </p> <p>New Feature</p> <p>The Build-Script automatically reports when the download is successful.</p> <p>The next graphic shows terminal messages for the beginning of a successful download.</p> <p></p> <p>If the download was successful, your terminal will be similar to the following graphic. Continue with the Download was Successful section.</p> <p></p> <p>If you see a failure message, scroll up in the terminal to find the error message(s) and go to Xcode Errors with Build-Select.</p> <p></p>"},{"location":"build/step14/#download-was-successful","title":"Download was Successful","text":"<p>If there are no errors, hit return to continue. The next step involves signing the targets.</p>"},{"location":"build/step14/#sign-targets","title":"Sign Targets","text":"<p>What does Sign Targets Mean?</p> <p>\"Sign Targets\" in Xcode identifies who built the app. You cannot deploy an app to a phone if you do not sign each target associated with that app.</p> <p>Experienced Builders</p> <p>This replaces several of the steps that used to be required to build Loop.</p> <p>If you have never built an Xcode app using your developer ID on this computer, then the first time you use the script, you will be asked how you want to sign the targets.</p> <p>I did not get this question</p> <p>The script searches for your developer ID for you and skips this question if it finds it.</p> <ul> <li>You have previously built an app on this computer with your developer ID</li> <li>You have previously run this script</li> </ul> <p>Skip ahead to Review LoopConfigOverride.xcconfig.</p> <p>The next question, as shown in graphic below, is whether you will (1) Sign Automatically or (2) Sign Manually.</p> <ul> <li>If you are building with a paid developers account, choose option 1, and continue on this page</li> <li>If you are building with a Free option or plan to build to a simulator on your computer, choose option 2 and click on Build Free Loop to move to the page with those instructions</li> </ul> <p></p>"},{"location":"build/step14/#paid-developer-account","title":"Paid Developer Account","text":"<p>Continue with this page only if you have a paid developer account.</p> <ul> <li>You need to switch to the Loop Free Build page for a free account.</li> </ul>"},{"location":"build/step14/#create-permanent-loopconfigoverridexcconfig","title":"Create Permanent LoopConfigOverride.xcconfig","text":"<p>The following graphics show the terminal display after selecting option 1 to use Apple Developer ID.</p> <ul> <li>Graphic below:<ul> <li>User is presented with instructions for getting Team ID from the Membership page<ul> <li>After review, the user hits return</li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>Graphic below:<ul> <li>The instructions remain on the screen for reference</li> <li>The developer.apple.com web page (not shown) opened automatically in the browser after user hit return<ul> <li>User obtains ID</li> </ul> </li> <li>User enters ID in terminal and then hits return</li> </ul> </li> </ul> <p></p> <p>After hitting return, the user can verify the entry.</p>"},{"location":"build/step14/#review-loopconfigoverridexcconfig","title":"Review LoopConfigOverride.xcconfig","text":"<p>Once the permanent signing file is configured, the review step is the same each time.</p> <ul> <li>Graphic below:<ul> <li>The developer ID stored in the permanent file is displayed for review</li> <li>After review, enter 1 to continue</li> <li>OR - enter 2 to modify the ID in the file, see Problem with the ID?</li> </ul> </li> </ul> <p></p>"},{"location":"build/step14/#problem-with-the-id","title":"Problem with the ID?","text":"<p>If there is a problem with the ID that is stored on your computer, you can modify it before continuing.  The instructions, shown in the terminal message if you select option 2, Editing Instructions, are repeated here:</p> <p>To edit the LoopConfigOverride.xcconfig file with a different developer ID:</p> <ol> <li>Open finder, navigate to Downloads/BuildLoop</li> <li>Locate and double click on LoopConfigOverride.xcconfig<ul> <li>This will open that file in Xcode</li> </ul> </li> <li>Edit in Xcode and save file</li> </ol> <p>You can now return to the terminal and hit return for the next step.</p>"},{"location":"build/step14/#ensure-a-year","title":"Ensure a Year","text":"<p>The next question asks if you want to ensure a year with your new app. Unless you have a good reason, you should enter 1 and continue.</p> <p></p>"},{"location":"build/step14/#build-loop","title":"Build Loop","text":"<p>Build to Simulator</p> <p>If you are an experienced builder and plan to build to a simulator on your Mac before building to your phone, you do not need to plug in your phone yet. You will need to select a simulator manually once Xcode opens.</p> <p>For first time builders - go on and build to your phone.</p>"},{"location":"build/step14/#plug-in-your-phone","title":"Plug in Your Phone","text":"<p>Refer to the graphic below. The messages in the terminal instruct you to:</p> <ul> <li>Unlock your phone</li> <li>Plug Phone into the computer<ul> <li>(Optional) If you have an Apple Watch that has never had Loop on it<ul> <li>Make sure watch is paired, unlocked and on your wrist</li> </ul> </li> <li>If you have never \"Trusted\" this computer with these device(s), do so now<ul> <li>A screen will pop up on your phone (and watch) asking if you trust the computer</li> <li>Select \"Trust\"</li> <li>After trusting phone and watch, phone should remain plugged in, but watch does not need to stay in proximity of the phone</li> </ul> </li> </ul> </li> <li>Now you are ready to hit return in the terminal window</li> </ul> <p></p> <p>The next action of the script is to </p> <ul> <li>Open Xcode</li> </ul> <p>It is suggested that you wait until you've successfully built the app before closing the terminal.</p>"},{"location":"build/step14/#initial-xcode-screens","title":"Initial Xcode Screens","text":"<p>Refer to the graphic below. Your intial Xcode screen should be similar.</p> <ul> <li>Wait for packages to download (see messages upper right - blue dashed rectangle)<ul> <li>You might see the words downloading or copying</li> <li>Package download is complete when you see the words Indexing or Ready (upper right)</li> </ul> </li> <li>Make sure your phone (or simulator if you prefer) is selected in the upper middle</li> </ul> <p></p>"},{"location":"build/step14/#start-build","title":"Start Build","text":"<p>If there is a red x in the dashed-blue rectange region on your Xcode screen you need to click over to the Build Error page</p>"},{"location":"build/step14/#first-time","title":"First Time","text":"<p>The first time you build, there will be steps that will not be required for subsequent builds. These are clearly marked in the intructions with the word First-Time. Do not get confused when you are asked to enter your password multiple times, see Codesign / Keychain Access. Be sure to enter your Mac login password and select <code>Always Allow</code> every time it is requested.</p>"},{"location":"build/step14/#all-builds","title":"All Builds","text":"<p>Refer to the GIF below:</p> <ul> <li>Frame 1: Packages are downloaded<ul> <li>Xcode is Indexing as seen in dashed-green rectangle region<ul> <li>Indexing makes searching faster; it does not need to complete before building</li> </ul> </li> <li>Click the \"Play\" button highlighted by red rectangle to start the build</li> <li>First-Time for this Phone: A Device isn't registered screen appears, as shown in the graphic below the GIF<ul> <li>This happens for any phone not registered to the selected Developer ID</li> <li>You must be connected to the internet so the device can be registered</li> <li>Click register and then the build will continue (as shown in the GIF)</li> </ul> </li> </ul> </li> <li>Frame 2: Build has started<ul> <li>Xcode is Building as seen in dashed-green rectangle region</li> <li>First-Time on This Computer: <ul> <li>Follow the Always Allow Instructions the first time this Developer ID is used on this computer</li> <li>Never hit Deny</li> </ul> </li> </ul> </li> <li>Frame 3: Build succeeded<ul> <li>App is running as seen in dashed-green rectangle region</li> <li>If your phone locked during the build process, you will see a message to unlock your phone, as shown in the graphic below the GIF<ul> <li>Simply unlock your phone and Xcode does the rest</li> <li>If you tapped on <code>Cancel Running</code>, just hit the build button again</li> </ul> </li> <li>First-Time for this Phone: You may also see a \"Could Not Launch Loop\" message<ul> <li>Follow the Update Settings for Developer</li> </ul> </li> </ul> </li> </ul> <p></p> <p> </p> <p>If the app opened on your phone, the next two sections for first-time builders are not needed.  Skip ahead to Successful Build.</p> <p>If you got red error messages, skip ahead to Build Failed?</p>"},{"location":"build/step14/#codesign-keychain-access","title":"Codesign / Keychain Access","text":"<p>First Time Using Developer ID on Computer</p> <p>During your first build with a given Developer ID on your computer, you will see a codesign/keychain access prompt, as shown in the graphic below. Enter the same password you use to log in to the mac, select \"Always Allow\" and then do it again each time you are asked.</p> <p></p> <p>It is normal for this prompt to come up repeatedly even after you enter the correct password (once for each target Loop needs to sign).</p> <p>In frustration, people think the prompt must be broken because it keeps reappearing and press deny or cancel. Don't press deny. Keep entering your computer password and pressing the \"Always Allow\" button as many times as it takes. The build will then continue.</p> <p>FYI: codesign is for code sign - nothing to do with design.</p>"},{"location":"build/step14/#update-settings-for-developer","title":"Update Settings for Developer","text":"<p>First Time Building on a New Device?</p> <p>If this is the first time you have installed an app on your iPhone using a free account, you will see warnings in both Xcode and on your phone after a successful build and install on your phone.</p> <p>Don't worry, dismiss the messages and do this extra step on the phone. These instructions are valid for iOS 15:</p> <ul> <li>Open Phone Settings</li> <li>Select General</li> <li>Select VPN &amp; Device Management</li> <li>Under the Developer App section, tap on icon</li> <li>Tap on Trust</li> <li>You should now be able to open the app</li> </ul> <p></p> <p></p>"},{"location":"build/step14/#build-failed","title":"Build Failed?","text":"<p>No red error messages? Skip ahead to Successful Build.</p> <p>Red Errors</p> <p>If you get a message that your build failed and see RED ERROR messages:</p> <ul> <li>Go to the Build Errors page to find the steps to fix your build error</li> <li>(Optional) Follow the Clear the Error Message process</li> <li>Return to Start Build to try again</li> </ul> <p>FAQ: But what about those yellow or purple warnings that remain in Xcode? Should I worry about them?</p> <p>If you see yellow or purple warnings after your build is done...those are not an issue. Don't try to resolve them or fret about them. They mean nothing to the successful use of your Loop app.</p> <p>NOTE: purple warnings are still warnings and can be ignored.</p> <p></p>"},{"location":"build/step14/#clear-the-error-message","title":"Clear the Error Message","text":"<p>Once you've resolved a build error and start the build process again, Xcode will continue to show a red indicator on the top line from the previous failure.  If you don't like seeing that, clean the build folder to clear the error.  Otherwise, as long as the steps of the build are showing across the top line, Xcode is still working on the build.  When the build succeeds, the red circle will disappear.</p> <p>Clean Build Folder</p> <ul> <li>In Xcode menu, select Product, then Clean Build Folder</li> <li>Wait for cleaning to complete: you'll see a \"Clean Finished\" message</li> </ul>"},{"location":"build/step14/#successful-build","title":"Successful Build","text":"<p>After you see the Loop app open on your phone, you can unplug your phone and acknowledge the Xcode message: <code>Lost connection to the debugger on . . .</code>.  The square icon next to the play button goes away as soon as you unplug your phone from Xcode.</p> <p>The Loop app on your phone closes (but does not quit) when you unplug the phone. Open the Loop app on your phone just to be sure.</p> <p>Congratulations!</p> <p></p> <p>If you plan to build again on a backup phone, or want to try a customization, easiest for you to leave Xcode open. Otherwise, you can quit out of Xcode now.</p>"},{"location":"build/step14/#protect-that-app","title":"Protect that App","text":"<p>Protect Against Deletion</p> <p>Prevent your Loop app from being deleted accidentally.</p> <p>If you, or a child, deletes the app from the home screen, it is gone - you have to rebuild and reenter all settings and start a new pod or add back in your Medtronic pump.</p> <p>The steps vary depending on iOS. With iOS 15 and 16, it is under Screen Time, Content &amp; Privacy Restrictions, iTunes &amp; App Store Purchases, Deleting Apps. Choose Don't Allow. If those steps don't help, do an internet search like this, where you use your current phone iOS version number:</p> <ul> <li>\"turn off app deletion iOS ##\"</li> <li>\"iOS ## prevent app deletion\"</li> </ul> <p>Follow the instructions to prevent deletion of what is now a critical medical app.</p>"},{"location":"build/step14/#important-safety-reminder","title":"IMPORTANT SAFETY REMINDER","text":"<ul> <li>STAY IN OPEN LOOP UNTIL YOU UNDERSTAND THE SYSTEM</li> <li>Do NOT skip the Set Up and Operate material; at least skim it.</li> <li>Keep reviewing LoopDocs - some material will be more impactful once you have the app in your hands.</li> <li>Ask questions if you are confused.</li> <li>Learn to use the LoopDocs search feature</li> </ul>"},{"location":"build/step14/#new-to-loop-3","title":"New to Loop 3","text":"<p>If this is your first build with Loop 3, head to the Set Up tab starting here: Loop 3 Overview.</p> <p>Pro Tip: Read Along in LoopDocs as you Onboard</p> <p>One of the goals for Loop 3 is to make the app robust even if you don't read the documentation, but a lot of questions may be resolved if you read along in LoopDocs as you onboard.</p> <p>All those mentors who answer questions are volunteers.</p> <p>Even if you don't read all the pages under the Set Up tab now, these links are important.</p> <ul> <li>New Looper: Onboarding</li> <li>Building Loop 3 over Loop 2.2.x or FreeAPS: Experienced Looper Onboarding</li> </ul> <p>Add a Calendar Reminder</p> <ul> <li>It is good practice to add a reminder to your calendar when the app will expire</li> <li>Be sure to add an alert to that reminder so you have enough time to do all the Loop Updating steps to build the app again before it expires</li> <li>Even better, practice building every 3 to 6 months so you don't forget and keep that expiration date far in the future</li> </ul>"},{"location":"build/step14/#optional-steps","title":"Optional Steps","text":""},{"location":"build/step14/#code-customizations","title":"Code Customizations","text":"<p>New Loop users: Customizations are not a required part of any Loop build. As you gain experience using your Loop app, you may want to customize some of the features. First time builders are encouraged to build with the standard, default code. You can always update your Loop app to add customizations at a later time, using the same download. Subsequent build time is much faster than the initial build for a given download.</p> <p>Pro Tip</p> <p>With a fresh download of code, it's always best to build to a simulator without customization to ensure the build works without errors. Then add the customizations and check the build again. Now you are ready to build to your phone to update your existing app.</p> <p>To add custom configurations to your Loop or Loop Apple Watch apps, follow the step-by-step instructions on the Code Customizations page and then build the app again.</p>"},{"location":"build/step14/#apple-watch","title":"Apple Watch","text":"<p>Existing Apple Watch users: Please update your watchOS prior to building the Loop app. The minimum iOS for Loop 3 is iOS 15.1, which means watchOS 8.1. When running iOS 16.x, you will need a watchOS of 9.x.</p> <p>New Apple Watch users: If you have an Apple watch and want to use it with Loop, first pair the watch with the iPhone before continuing to the next steps.  If you get a new watch after building the Loop app, you'll need to redo your Loop build.</p> <p>For more information, please see Operate: Apple Watch</p>"},{"location":"build/step14/#build-again-with-this-download","title":"Build Again with this Download","text":"<p>Follow the Find My Downloaded Loop Code instructions if you later wish to build with this same dowload. Plug in an unlocked phone and start at the Start Build section of this page. You may need to select the phone you just plugged in. Everything else should be ready for you the start the build process.</p> <p>Don't use a really old download</p> <p>Do not use a really old download.</p> <p>Check the date of your download against the latest Current Release date and decide whether to get a fresh download instead.</p>"},{"location":"build/step14/#xcode-errors-with-build-select","title":"Xcode Errors with Build-Select","text":"<p>The errors shown below should be prevented - the script will attempt to correct them automatically - follow the directions in the script.</p> <p>If this is not successful, the script told you the download failed and exited. Scroll up in the terminal to find the error message(s):</p> <ul> <li>Read the error message</li> <li>Try to figure out the problem</li> <li>If you need help, reach out to your favorite Loop Social Media site</li> </ul> <p>WARNINGS</p> <p>If you see errors like these . . .</p> <ul> <li><code>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</code></li> <li><code>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</code></li> <li><code>xcode-select: error: tool 'xed' requires Xcode</code></li> </ul> <p>You missed one of these steps:</p> <ul> <li>Install Xcode</li> <li>Xcode command line tools</li> </ul>"},{"location":"build/step2/","title":"Compatible iPhone/iPod","text":""},{"location":"build/step2/#compatible-iphone-or-ipod-touch","title":"Compatible iPhone or iPod touch","text":"<p>Time Estimate</p> <ul> <li>5 minutes, to check your device and iOS</li> <li>20 minutes, if need to update your compatible device to a new iOS</li> <li>10 minutes, if you need to order a compatible device from Apple website</li> <li>0 minutes, if you own an Android and won't buy Apple products; check out AndroidAPS Documention</li> </ul> <p>Summary</p> <ul> <li>Check your iPhone/iPod touch against the device compatibility list<ul> <li>For all devices, the newest iOS is strongly recommended</li> </ul> </li> <li>Make sure the phone has good battery life</li> <li>Turn off automatic updates</li> </ul> <p>FAQs</p> <ul> <li>\"Can I use an android?\" No. Check out AndroidAPS Documention.</li> <li>\"Can I use an iPad?\" No. iPads do not support Apple Health and Loop uses Apple Health.</li> <li>\"Does my iPhone need a cell plan?\" No. Loop works using communication on your phone with your CGM and your pump; no internet connection required. However, if access to Dexcom Follow or Nightscout monitoring of Loop is a priority, then a cell plan may be desired.</li> <li>What watches work with Loop? Only Apple watches work with Loop. With Loop 3, some of the older Apple watch series are no longer compatible. See: Watch Hardware and OS Requirements</li> </ul>"},{"location":"build/step2/#which-devices-are-compatible","title":"Which Devices Are Compatible?","text":"<p>Loop requires an iPhone or iPod touch. Loop uses the Apple Health app to store and retrieve your blood glucose and insulin data and to store your carbohydrate records. iPads do not have the Apple Health app, so iPads will not work with Loop.</p> <p>You need a minimum version of the mobile operating software, called the phone's \"iOS\", to be installed on your iPhone or iPod touch. Loop is compatible with iPhone and iPod touch devices with iOS 15.1 or newer.</p>"},{"location":"build/step2/#compatible-devices","title":"Compatible Devices","text":"<p>These devices are compatible with iOS 15.1 and newer iOS.</p> <ul> <li>iPhone 14, all variants</li> <li>iPhone 13, all variants</li> <li>iPhone 12, all variants</li> <li>iPhone 11, all variants</li> <li>iPhone X, all variants</li> <li>iPhone 8, all variants</li> <li>iPhone SE (3rd generation or later model; 2022 first release)</li> <li>iPhone SE (2nd generation; 2020 first release)</li> </ul> <p>These devices are compatible with Loop 3, which requires iOS 15.1, but cannot be upgraded to iOS 16.</p> <ul> <li>iPhone 7, all variants</li> <li>iPhone 6s, all variants - but note the \"s\"</li> <li>iPhone SE (1st generation; 2016 first release)</li> <li>iPod Touch, 7th generation</li> </ul>"},{"location":"build/step2/#find-your-devices-ios","title":"Find Your Device's iOS","text":"<p>Your phone's iOS version can be found under the phone Settings -&gt; General -&gt; About display as shown below. The iOS number is found on the <code>Software Version</code> line.</p> <p></p> <p>Do not use any of the beta iOS versions. (Don't worry...if you don't know what that means, then you aren't using one.)</p>"},{"location":"build/step2/#developer-mode-mac-xcode-build-only","title":"Developer Mode - Mac-Xcode Build Only","text":"<p>With iOS 16 and watchOS 9, Apple added a feature. If you want to know more, click on this Apple Link about Developer Mode.</p> <p>When you build Loop on your phone from Xcode directly and then transition to or start with iOS 16, you need to have Developer Mode enabled. This is also a requirement to use the Loop app on a watch paired to your phone running watchOS 9. You will be told to enable it in the Build Loop App: Prepare your Phone and Watch instructions.</p> <p>When you build Loop using the new Browser Build method GitHub Overview, Developer Mode is not required.</p> <p>Developer Mode with iOS 16, watchOS 9</p> <p>If you already have Loop, built with Xcode on a Mac, on your phone/watch when you update to iOS 16/watchOS 9, you will be told that Loop requires Developer Mode to run.</p> <p>You will not be able to run Loop on your phone (or watch) until you have enabled Developer Mode on the device(s).</p> <p></p>"},{"location":"build/step2/#battery-health","title":"Battery Health","text":"<p>Make sure the battery on your phone is solid. Your phone will become a critical health device - you want it to keep working.</p> <ul> <li>Make sure a charger and cord are in your diabetes supplies</li> <li>Consider buying a battery pack, keep it charged and add it to your travel bag</li> </ul> <p>Low Power Mode</p> <p>With newer iOS (15 and 16), some people have reported Loop continues working in the background (phone locked) even in Low Power Mode. Others, have reported they still get red loops. You can experiment to determine if your phone/iOS/app is able to maintain green loops in low power mode.  Otherwise, best practice is to avoid Low Power Mode.</p>"},{"location":"build/step2/#turn-off-automatic-updates","title":"Turn Off Automatic Updates","text":"<p>Apple provides updates regularly to the iOS.  Often, these updates include critical security patches in addition to improved new features.</p> <p>Please be proactive - install updates as soon as the \"Loop\" all-clear is given.</p> <p>If a limitation on your Mac prevents you from updating your phone to the latest iOS, consider using the Browser Build method; start with this link: GitHub Build Overview.</p>"},{"location":"build/step2/#why-turn-off-automatic-updates","title":"Why Turn off Automatic Updates?","text":"<ul> <li>Once you accept an iOS phone update, you cannot go backwards<ul> <li>Some iOS updates require updates to Xcode and macOS before people can build Loop on that device again</li> <li>It is rare, but iOS updates have caused Loop to stop working until other updates were made and Loop was rebuilt on that phone</li> </ul> </li> <li>Turn off automatic updates so you can choose when to update your phone and avoid being caught without a working Loop app</li> <li>Google the instructions for your device:<ol> <li>Configure your phone to automatically download the updates</li> <li>Choose to perform the installation of the updates manually</li> </ol> </li> </ul> <p>When iOS updates are released, the Loop and Learn Version Updates page is typically updated faster than LoopDocs. Check to see if a new update is causing an issue with Loop or your CGM before accepting the update from Apple.</p> <p>Within a few days, the \"All-Clear\" or \"WAIT there's a problem\" will be posted.</p>"},{"location":"build/step2/#next-step-compatible-pump","title":"Next Step: Compatible Pump","text":"<p>Now you are ready to check if you have a Compatible Insulin Pump.</p>"},{"location":"build/step3/","title":"Compatible Pump","text":""},{"location":"build/step3/#compatible-pump","title":"Compatible Pump","text":"<p>Time Estimate</p> <ul> <li>Omnipod users: 3 seconds to remember which PDM you've been using.</li> <li>Medtronic users: 10 minutes to put a battery in and look at model and firmware</li> <li>Other pump users: 5 days to email friends asking them to check closets for their old Medtronic pump or call your insurance to start prior authorization for Omnipod</li> </ul> <p>Summary</p> <ul> <li>If you have a Medtronic pump, check the Medtronic Pump Version list to ensure compatible model/firmware</li> <li>If you use Omnipod - check which kind</li> </ul> <p>FAQs</p> <ul> <li>\"How can I find a compatible Medtronic pump?\" Refer to Finding a Medtronic Pump</li> <li>\"What are the differences between Medtronic pump models?\" This question is also answered in the Extra Details section</li> <li>\"But what about the other types of pumps?\" No other pumps work with Loop at this time  <ul> <li>There are other open-source closed loop options such as AAPS: Android Artificial Pancreas System and OpenAPS that support other pumps.</li> </ul> </li> <li>\"Can I change the firmware of my Medtronic pump?\" No.</li> </ul>"},{"location":"build/step3/#pumps-compatible-with-loop","title":"Pumps Compatible with Loop","text":"<p>There are three types of pumps compatible with Loop.</p> <ul> <li>Older Medtronic pumps</li> <li>Omnipod Eros pumps</li> <li>Omnipod DASH pumps</li> </ul>"},{"location":"build/step3/#check-medtronic-pump-version","title":"Check Medtronic Pump Version","text":"<ul> <li>Medtronic 515 or 715 (any firmware)</li> <li>Medtronic 522 or 722 (any firmware)</li> <li>Medtronic 523 or 723 (firmware 2.4 or lower)</li> <li>Medtronic Worldwide Veo 554 or 754 (firmware 2.6A or lower)</li> <li>Medtronic Canadian/Australian Veo 554 or 754 (firmware 2.7A or lower)</li> </ul> <p>If you have one of the pumps listed above, you are good to go on Loop! Congrats!</p>"},{"location":"build/step3/#extra-details-on-medtronic","title":"Extra Details on Medtronic","text":"<p>There are a number of Medtronic insulin pumps manufactured between 2006 \u2013 2012 which are Loop compatible.  Compatibility has two requirements: (1) pump model and (2) firmware.</p>"},{"location":"build/step3/#medtronic-pump-model","title":"Medtronic Pump Model","text":"<p>To determine your pump model, look at the backside of your pump.  There should be a sticker on the underside of the pump.  On the right-hand side of the sticker, it says REF MMT-XXXXXX</p> <p></p> <ul> <li>MMT ---&gt; Pump Manufacturer Model (MiniMed Medtronic)</li> <li>722 ---&gt; Pump Model Number</li> <li>NA ---&gt; Pump Region (NA=North America, CA=Canada/Australia, WW=Worldwide)</li> <li>S ---&gt; Pump Color (S=Smoke, L=Clear/Lucite, B=Blue, P=Pink/Purple)</li> </ul> <p>Some pumps may have an \u201cL\u201d or \u201cS\u201d or \"R\" before the pump region, e.g. a model number like MMT-722LNAS.  This does not affect Loop compatibility.</p>"},{"location":"build/step3/#medtronic-pump-firmware","title":"Medtronic Pump Firmware","text":"<p>A pump\u2019s firmware is the internal software that runs your pump.  Older Medtronic firmware allows Loop to act as a \u201cremote control\u201d to set temp basals and report back pump data.  Newer firmware disabled that \u201cremote control\u201d access and therefore cannot be used with these DIY closed-loop systems.  There is currently no ability to downgrade a pump\u2019s firmware or replace it with older firmware.  Before you buy a used pump, make sure you are getting one with compatible firmware.</p> <p>The firmware on all 515/715 and 522/722 model Medtronic pumps is compatible with Loop. You will only need to check the firmware version for 523/723 and 554/754 model Medtronic pumps.</p> <ul> <li>Medtronic 515 or 715 --&gt; any firmware</li> <li>Medtronic 522 or 722  --&gt; any firmware</li> <li>Medtronic 523 or 723 --&gt; firmware 2.4 or lower</li> <li>Medtronic Worldwide Veo 554 or 754 --&gt; firmware 2.6A or lower</li> <li>Medtronic Canadian/Australian Veo 554 or 754 --&gt; firmware 2.7A or lower</li> </ul> <p>To find your pump\u2019s firmware you will need to power it on. If the pump has not been powered on for some time (i.e., has been in storage without a battery for a while), it will run through a start-up count and the firmware version will appear on the bottom right of the pump\u2019s screen.  Don\u2019t turn away, as the version number will only be displayed for a little while before the screen moves onto other information displays.  </p> <p>If the pump has been active recently or has a reservoir installed, follow these steps:</p> <ol> <li> <p>Press the  button on your pump.  </p> </li> <li> <p>Scroll down with the  button to the bottom of the status display.  </p> </li> <li> <p>Read the bottom line of the display.</p> </li> </ol> <p></p>"},{"location":"build/step3/#medtronic-pump-differences","title":"Medtronic Pump Differences","text":"<p>If you are in the position of being able to shop around for different pump models, there are some slight differences between the Loop-compatible Medtronic pumps.</p> <p>500 vs 700:  The difference between the Medtronic 500 series and the 700 series pumps is the size of the insulin reservoirs.  The 500 series pumps use a 180 unit reservoir, and the 700 series pumps use a 300 unit reservoir (or smaller 180 unit reservoir, if you want).</p> <p>x15/x22 vs x23/x54:  The differences noteworthy between the x15 and x22 pumps versus the x23 and x54 series pumps are:</p> <ul> <li>The x23/x54 pumps will allow for smaller insulin deliveries in certain situations, if the smaller scroll rate is selected in the Bolus&gt;Setup&gt;Scroll Rate menu.  Loop will have the insulin delivery automatically rounded by the pump to the units available in the pump model, and any smaller adjustments (to make up for the rounding) will be made through Loop\u2019s use of temp basals.  If you want the smaller increments of basal rates, you can still enter those values in the Loop app's settings and Loop will use those values for the purposes of insulin delivery calculations.</li> </ul> Pump Model Basal increments Bolus increments Range 515/715and522/722 0.050.1 0.10.1 deliveries of less than 10 unitsgreater than 10 units 523/723and554/754 0.0250.050.1 0.025 0.05 0.1 between 0.025 to 0.975 unitsbetween 1 to 9.95 unitsgreater than 10 units <ul> <li> <p>Additionally, because of the way Loop fetches information from the pump, the x23/x54 series of pumps are slightly better at conserving battery life through the use of the MySentry packets to collect information from the pump.  x22 pumps do not use MySentry.</p> </li> <li> <p>The x23/x54 series pumps are also faster at delivering boluses greater than 10 units.  On an x23 pump, a 13-unit bolus takes 5:00 minutes to complete.  On an x22 pump, a 13-unit bolus takes 8:40 minutes to complete.</p> </li> </ul>"},{"location":"build/step3/#finding-a-medtronic-pump","title":"Finding a Medtronic Pump","text":"<p>Finding a compatible Medtronic pump is probably the most difficult part for most new Loopers.  Our suggestions:</p> <ul> <li> <p>Talk to friends in the diabetic community.</p> </li> <li> <p>Ask your endocrinologist.  </p> </li> <li> <p>Ask at a local JDRF chapter meeting if someone has an old backup pump they'd be willing to donate to you.  </p> </li> <li> <p>Join diabetic supply groups on Facebook; both for-trade and for-sale groups.  </p> </li> <li> <p>Check Craigslist often and be willing to expand your search area to include larger cities.</p> </li> <li> <p>Check out the HelpAround, NextDoor, OfferUp, and/or LetGo apps for pumps.</p> </li> <li> <p>Looping in a time of covid</p> </li> </ul> <p>The most success appears to come from either one-on-one discussions with fellow diabetics/doctors or using apps (Craigslist, NextDoor, LetGo, HelpAround).  If you are using Craigslist, you may wish to use an app on your iPhone to make the searching easier.  There are apps to search multiple cities at once for your keywords and set up alerts.</p> <p></p>"},{"location":"build/step3/#safe-purchasing","title":"Safe Purchasing","text":"<p>If you choose to purchase from a remote or unknown seller, here are some tips for safe purchasing:</p> <ul> <li> <p>Use PayPal and purchase using the \"Goods and Services\" payment option. This costs nothing for the buyer, but the seller will lose 2.95% of the sale to PayPal fees. PayPal offers some protection for both buyer and seller in the event of fraud.  </p> </li> <li> <p>Ask for photos of the pump. Check to make sure the serial number of the pump on the backside matches the serial number of the pump showing in the display menu. Ask for a short video of the pump, or at least a photo of the pump turned on, so that you can see the pump's firmware and model number. Cracks and some wear on these pumps are expected. These pumps are not usually free of marks. Many people are successfully looping on pumps that have cracks and rub marks, but you may want to ask if you are concerned about any you see in photos.</p> </li> <li> <p>Beware if the bottom of the reservoir/motor sleeve has the drive support cap pushed out, as shown here. Those pumps will generally not work (or only work intermittently), however some people have successfully repaired those pumps as shown in that link. Just be aware that it should be checked in advance.</p> </li> <li> <p>Repairs to cracks or missing bits of plastic on battery cap area and reservoir caps are possible and not very difficult in most situations. You can read more about how to repair those here.</p> </li> <li> <p>Ask for shipping that includes a tracking number. USPS Priority Mail's smallest box is a great option.  It's only $7.20 domestically in the US and includes tracking. Ask the seller to add a small bit of packing protection such as bubble wrap around the pump to keep it safe during shipping. Make sure you get a tracking number within a reasonable period of time after you have paid.  </p> </li> </ul> <p>Red flags that may indicate a scam:</p> <ul> <li> <p>Asking for payment through \"friends and family\" on PayPal, especially if you don't know the person or have any solid references for them. Paying in that way offers you no buyer protection. It's just like giving the seller cash, so you had better trust the seller.  </p> </li> <li> <p>Offering an \"almost new\" pump is a big red flag. These pumps should be at least 5-years-old by now. Do you really think a 5 year old pump should be unused and sitting in shrink wrap at this point? This seems highly suspicious. There are some out there, but they are very infrequent.  </p> </li> <li> <p>Not able to provide new pictures of the pump when requested. Sure they posted some pictures with the ad, but what if they just downloaded them from other people's ads? The seller should be able to furnish a couple of \"new\" photos at your request. A good one to ask for is the battery and reservoir tops so you can see the condition of those.</p> </li> </ul>"},{"location":"build/step3/#pump-supplies","title":"Pump Supplies","text":"<p>Medtronic will not typically sell pump supplies directly to customers who have not previously purchased a registered Medtronic pump. Ask your insurance about purchasing pump supplies through a durable medical equipment (DME) provider. Typically, the DME provider will coordinate with your insurance and doctor's office to get the necessary insurance approval and prescriptions for the supplies. If you are brand new to Medtronic infusion sites, you may want to ask for help from friends to try a variety of infusion sets before purchasing a full 90-day supply of any type in particular.</p>"},{"location":"build/step3/#omnipod-pumps","title":"Omnipod Pumps","text":"<p>Reminder and Disclaimer</p> <p>The use of Omnipod pumps with Loop is not supported by Insulet, although they are aware it is happening. Do not call Insulet asking for help with your Loop build, setup, or operation. You are fully responsible for your use of Loop and do so at your own risk. Please read these documents and familiarize yourself with Loop before using.</p>"},{"location":"build/step3/#omnipod-eros","title":"Omnipod Eros","text":"<p>Eros pods (also known as Gen 3) were launched in 2013 and continue to be sold by Insulet. Insulet has announced they will stop providing Eros pods in the US in December 2023. As far as we know, there are no timelines announced for the discontinuation of Eros pods for other countries. Insulet doesn't specifically call these \"Eros\" anymore, they just use the term \"omnipod system\". For clarity, from Insulet's webpage:</p> <p>Alternative Names for Omnipod Eros Pump and Pods</p> <p>Eros pump is also known as Classic, or UST400, or Omnipod Insulin Management System.  </p> <p>Pharmacy sites sometimes may refer to the Eros pods as Gen 3 but they are the same exact pods. </p> <p>Eros system has a big PDM that does not look like a phone.</p> <p></p>"},{"location":"build/step3/#omnipod-dash","title":"Omnipod DASH","text":"<p>Insulet has announced their DASH system as an eventual replacement for the Eros/Omnipod System. The DASH system has the newer, slimmer locked-android PDM and built-in BLE communications in the pod, so there is no requirement for a RileyLink compatible device. </p> <p>Loop 3.0 and later works with DASH pods. If your version of Loop is 2.2.9 or earlier, you cannot use DASH pods.</p> <p></p>"},{"location":"build/step3/#omnipod-5","title":"Omnipod 5","text":"<p>Loop does not support Omnipod 5 pods.</p>"},{"location":"build/step3/#next-step-compatible-cgm","title":"Next Step: Compatible CGM","text":"<p>Now you are ready to check if you have a Compatible CGM.</p>"},{"location":"build/step4/","title":"Compatible CGM","text":""},{"location":"build/step4/#compatible-cgm","title":"Compatible CGM","text":"<p>Time Estimate</p> <ul> <li>10 minutes to read this page</li> </ul> <p>Summary</p> <p>Loop is compatible with:</p> <ul> <li>Dexcom G4 Share, G5, G6 or ONE CGM systems<ul> <li>Dexcom ONE is available in some countries</li> </ul> </li> <li>Dexcom G7</li> <li>Medtronic sensors connected to a Loop-compatible Medtronic pumps</li> </ul> <p>FAQs</p> <ul> <li>\"What about Libre sensors?\" A fork of Loop is available with added Libre support</li> <li>\"What about Eversense?\" Refer to CGMs Not Supported in Loop</li> </ul>"},{"location":"build/step4/#continuous-glucose-monitor-cgm","title":"Continuous Glucose Monitor (CGM)","text":"<p>Loop uses your CGM glucose readings, carbohydrate input and therapy settings, to model your current glucose trend, predict future glucose and automatically adjust insulin dosing. A compatible CGM is essential to operation of the Loop app.</p>"},{"location":"build/step4/#dexcom-g5-g6-and-one-cgm","title":"Dexcom G5, G6 and ONE CGM","text":"<p>The Dexcom G5, G6 and ONE CGM transmits data directly to the Dexcom app on your iPhone via Bluetooth.</p> <p>The Dexcom ONE, available in some countries, acts just like the G6 as far as Loop is concerned. The Dexcom ONE app does not provide some features, such as Dexcom Share, that come with the G6. When you set up Loop, select Dexcom G6 as your CGM to use Dexcom ONE CGM with the Dexcom ONE app installed on your phone.</p> <p>If the Dexcom app is on the same device as Loop, Loop can function without an internet connection. See Offline Use below.</p> <p>Dexcom G5 Support</p> <p>Dexcom has stopped supporting the G5 system in the US. In the US, and some other countries, the G5 is not available for download from the Apple Store. There are countries in which Dexcom does supply and support G5. The G5 capability will continue to be supported in Loop.</p> <p>There are third party apps, which interface with G4 and G5 transmitters, supported by some forks of Loop. The version of Loop supported by these documents only works with the Dexcom apps.</p>"},{"location":"build/step4/#dexcom-g7-cgm","title":"Dexcom G7 CGM","text":"<p>Dexcom G7 is supported with Loop 3.</p>"},{"location":"build/step4/#medtronic-cgm","title":"Medtronic CGM","text":"<p>The Minimed Enlite CGM, available with the Medtronic 522/722, 523/723, and 554/754, wirelessly sends glucose readings to the pump. Loop can read the Medtronic CGM data directly from the pump using a RileyLink compatible device.</p>"},{"location":"build/step4/#offline-use","title":"Offline Use","text":"<p>\"Offline Use\" means using Loop when there is no cell data or internet available. Loop does not require any special setup to operate offline.</p> <p>For offline Loop use, the iPhone's Bluetooth still needs to be active; and for Dexcom users, the G5, G6 or G7 app also needs to be running on your Loop phone. If you put your iPhone into Airplane mode, remember to turn Bluetooth back on to keep your Loop running. If your offline use is failing, chances are you have forgotten to update your transmitter ID in Loop settings when you changed transmitters.</p>"},{"location":"build/step4/#dexcom-share","title":"Dexcom Share","text":"<p>Loop can download Dexcom Share data for use in modeling glucose. However, this is not a typical configuration and requires internet connection for both the phone with the Dexcom app and the phone with the Loop app.  The Loop Set Up Steps for adding a CGM explain that you usually enter the Dexcom transmitter ID and leave the Dexcom Share setting blank.</p> <p>Dexcom ONE</p> <p>The Dexcom ONE app does not support Share.</p>"},{"location":"build/step4/#nightscout-as-a-remote-cgm","title":"Nightscout as a Remote CGM","text":"<p>Loop 3 can use Nightscout as a remote source for CGM data. This requires cell or WiFi connection.</p>"},{"location":"build/step4/#cgms-not-supported-in-loop","title":"CGMs Not Supported in Loop","text":"<p>Loop does not directly support some CGM such as Libre, Eversense and Medtronic Guardian.</p> <ul> <li>A fork of Loop is available with added Libre support<ul> <li>GitHub Build: Refer to the link above for instructions to build this fork</li> <li>Mac-Xcode Build: Select the Loop with Patches option in the Build Select Script</li> </ul> </li> </ul> <p>With Loop 3.0 and later, any sensor that can be uploaded to Nightscout can be used with Loop if internet service is available.</p> <p>To use some Libre sensors with Loop 3 without need for internet service, you will need to install the version with patches (option 2 in the Build Select Script) and install your chosen app with the same Apple Developer ID. This uses the Shared App Group to share glucose. Not ideal but it works until Libre support is added to Loop.</p> <p>Currently, there are no solutions for Eversense or Guardian CGM to be used directly with Loop, but some Uploaders to Nightscout are available using an Android phone. Loop 3.0 and later allows the use of Nightscout as a CGM source.</p>"},{"location":"build/step4/#next-step","title":"Next Step","text":"<p>If your compatible pump is Medtronic or Omnipod (not DASH)</p> <ul> <li>Next step is to Order a RileyLink Compatible Device</li> </ul> <p>If your compatible pump is Omnipod DASH</p> <ul> <li>Next step is to enroll in the Apple Developer Program.</li> </ul>"},{"location":"build/step5/","title":"RileyLink","text":""},{"location":"build/step5/#order-a-rileylink-compatible-device","title":"Order a RileyLink Compatible Device","text":"<p>Not needed for DASH</p> <p>Time Estimate</p> <ul> <li>15-20 minutes to read about RileyLink compatible devices</li> <li>15 minutes to order a device</li> </ul> <p>Summary</p> <ul> <li>Decide what kind of RileyLink compatible device to buy</li> <li>Order your compatible device</li> </ul> <p>FAQs</p> <ul> <li>What is a RileyLink Compatible Device? RileyLink refers to both the communication protocol and the name of the original device. Other DIY Loopers have created RileyLink Compatible Devices that use the RileyLink protocol. At the current time, RileyLink, OrangeLink and EmaLink devices are available for purchase and all can be used interchangeably with Loop.</li> <li>Do I have to buy one? These are open-source hardware devices, but it takes special skills to build them yourself. It is recommended you buy one (or two).</li> <li>\"What happens if I lose my RileyLink compatible device or walk away from it?\" Within a half hour, your pump returns to normal scheduled basal rate</li> <li>\"Can I swap out RileyLink compatible devices at any time?\" Yes, you can. You do not need to start a new pod or rebuild the Loop app. Tap on the pump menu in Loop settings to search for new devices and enable Loop to create a Bluetooth connection. You can swap between RileyLink, OrangeLink, EmaLink or some future RileyLink compatible device.</li> <li>\"How close does the RileyLink compatible device need to be to me? Do I have to carry it with me?\" See RileyLink Compatible Device Range.</li> </ul>"},{"location":"build/step5/#what-is-a-rileylink-compatible-device","title":"What is a RileyLink Compatible Device","text":"<p>The RileyLink compatible device is required to allow your phone to talk to Compatible Medtronic and Omnipod Pumps.</p> <p>Details for RileyLink</p> <p>The RileyLink compatible device is an open-source hardware device that can bridge Bluetooth Low Energy (BLE) to the radio-frequency wireless communication used by select Medtronic and Omnipod pumps.</p> <p>Loop 3 has Omnipod DASH support, among other new features. When using Omnipod DASH, the RileyLink compatible device is not necessary.  If you are using Medtronic or Omnipod (Eros, not DASH), you still need the device regardless of which version of Loop you are running.</p> <p>Medtronic and Omnipod Eros pumps require a RileyLink compatible device.</p> <p></p>"},{"location":"build/step5/#rileylink-compatible-devices","title":"RileyLink Compatible Devices","text":"<p>The RileyLink protocol defines a specific bluetooth interface and way of opening a Sub-GHz radio channel to pumps. All RileyLink compatible devices follow the RileyLink protocol.</p> <p>There used to be just one option, the original RileyLink. Now there are more options, so you have to make a decision. Depending on your choice, be sure to have the correct charger and cables or batteries handy and add spare compatible supplies to your diabetes go-bag.</p> <ul> <li>A Comparison Chart is provided by the GetRileyLink organization for all the RileyLink compatible devices listed below</li> <li>RileyLink<ul> <li>Designed by Pete Schwamb</li> <li>Rechargable battery (max 36 hours per charge)</li> <li>No longer available new, check these Facebook Groups for used ones:<ul> <li>Loop Resale</li> <li>Looping in a time of covid</li> </ul> </li> </ul> </li> <li>OrangeLink<ul> <li>Designed by Vic Wu, available from GetRileyLink</li> <li>Uses 2 AAA batteries, batteries typically last weeks or more, depending on batteries/pump type</li> <li>Works with either Omnipod or Medtronic</li> <li>Uses new chipsets, reported to have longer range</li> <li>Matches Apple Airpod form factor, so you can use airpod cases</li> </ul> </li> <li>EmaLink<ul> <li>Designed by Sorin Kupas-Spunei to increase range, offer smaller sizes</li> <li>Rechargable battery (various case/battery sizes available)<ul> <li>Micro/Nano: 2 to 3 days</li> <li>Standard: 6 to 7 days</li> <li>Maxx: 12 to 14 days</li> </ul> </li> <li>Must order either Omnipod or Medtronic version</li> <li>This EmaLink Information includes photos of various EmaLink configurations as well as photos showing relative sizes of EmaLink, OrangeLink and RileyLink</li> <li>In North America, available from EmaLink.us</li> </ul> </li> </ul>"},{"location":"build/step5/#more-information","title":"More information","text":"<p>There is an entire FAQs page on RileyLink Compatible Devices.</p> <p>Sections of interest include:</p> <ul> <li>Firmware Update information on the OrangeLink</li> <li>Ema and Orange Patch to see extra features on the Loop 2.2.x app screens</li> </ul>"},{"location":"build/step5/#waiting-for-your-rileylink-compatible-device","title":"Waiting for your RileyLink Compatible Device","text":"<p>While you are waiting for the RileyLink compatible device to arrive, you can proceed with these build directions and can try one of the Simulated Loop options. After that, unless you are using Omnipod DASH, you'll have to wait for your device.</p> <p>The population of DIY loopers (Loop and Android APS) has grown enough that you might be able to find someone local to loan you their spare.</p>"},{"location":"build/step5/#next-step-enroll-in-apple-developer-program","title":"Next Step: Enroll in Apple Developer Program","text":"<p>Now you are ready to enroll in the Apple Developer Program.</p>"},{"location":"build/step6/","title":"Apple Developer Program","text":""},{"location":"build/step6/#enroll-in-apple-developer-program","title":"Enroll in Apple Developer Program","text":"<p>Time Estimate</p> <ul> <li>15-20 minutes to complete the enrollment forms</li> <li>up to 2 days to wait for confirmation email that enrollment has been activated</li> </ul> <p>Summary</p> <p>There are two options: Paid ($99/year) or Free (re-build weekly, Xcode only)</p> <ul> <li>Paid Developer Account: Go to the Apple Developer website to enroll in an individual account.</li> <li>Free: No action required at this time.<ul> <li>Free requires you to use the Mac-Xcode build method</li> </ul> </li> </ul> <p>FAQs</p> <ul> <li>\"Can I use someone else's Apple Developer account?\" Please refer to this Answer.</li> <li>\"Do I use my Apple ID or my child's Apple ID to enroll in the Apple Developer program?\" The Apple ID you use to enroll in the developer program must be associated with an adult. It does not need to be the same Apple ID as the Looper uses on their iPhone. For example, a parent installing Loop on their child's iPhone should configure a separate Apple ID for their child, but should use their own Apple ID to build the Loop app for that child.</li> <li>\"How long does it take to have my Apple Development account active after I enroll?\" After you enroll, make sure you look for a confirmation email. Apple says it can take up to 24-48 hours to confirm and setup a new Apple developer account. However, some people have had the process take minutes. One SURE way to make it take longer is to use a different credit card to pay for the Apple Developer account enrollment than is already associated with that Apple ID. When you do that, finishing the enrollment process may be a hassle.</li> </ul>"},{"location":"build/step6/#loopers-need-their-own-apple-id","title":"Loopers Need Their Own Apple ID","text":"<p>The Apple ID is DIFFERENT than the Apple Developer ID.</p> <p>Apple ID</p> <p>Parents should set up a different Apple ID for each of their looper children and looper children should not use the parent Apple ID. Use Apple's Instructions for Create an Apple ID for your child.</p> <p>The Apple Health record is a convenient record of blood glucose, insulin and carbohydrates and should be associated with only one individual.</p> <p>Sharing an Apple ID among two or more loopers can cause safety issues. You don't want Sally to be dosed for Joe's lunch in addition to her own and vice versa.</p> <ul> <li>The recommendation for Health Permissions for Loop 2.2.x has changed to no longer provide permission to read Carbohydrates from Apple Health</li> <li>Loop 3 does not read Carbohydrates from Apple Health by default, but if you need that feature, you can modify your feature flags.</li> </ul>"},{"location":"build/step6/#developer-account","title":"Developer Account","text":"<p>To build the Loop app on a phone, you must use an Apple developer account associated with an adult (minimum age of 18). This Apple developer account is tied to the email address associated with your Apple ID. You can build apps on phones for everyone in your family with a single Apple Developer Account tied to the Apple ID of an adult.</p> <p>You have two options for an individual account: free or paid.</p>"},{"location":"build/step6/#free-developer-account","title":"Free Developer Account","text":"<p>If you decide to use a FREE developer account, here's what you need to know:</p> <ol> <li>You must use the Mac-Xcode Build method to build Loop.</li> <li>Loop apps signed with a free developer account will expire after 7 days.  On the 7th day, your Loop app will simply turn white when you open it and then immediately close. To rebuild the Loop app, you will have to find a computer and rebuild the app onto your iPhone again. You cannot rebuild the app on day 5 (when it is convenient, for example), hoping to reset the 7-day clock.  The app will still expire on the 7th day from when it was first signed and created.</li> <li>If you decide to switch to a paid account after trying out the free account, you will need to rebuild your Loop app to sign it with the new paid account. Furthermore, switching from a Free to a Paid account requires entering all the settings again (and starting a fresh pod).</li> <li>You will have to do an extra step during the build process to remove Siri and Apple Push capabilities to build with free accounts. Because free accounts do not have access to Apple Push notifications, you will also not be able to use Remote Commands through Nightscout.</li> </ol>"},{"location":"build/step6/#paid-developer-account","title":"Paid Developer Account","text":"<p>If you decide to use a PAID developer account, here's what you need to know:</p> <ol> <li>The paid developer account is $99 per year. The default setting is to auto-renew annually. You can change that selection in your developer account settings at any time.</li> <li>If your household has multiple Loop users, only one developer account is needed.  That one developer account can be used to build Loop on multiple phones.</li> <li>If you use the GitHub (Browser) Build method<ul> <li>You must Update the build once every 90 days</li> <li>You must have a Paid Developer account</li> </ul> </li> <li>If you use the Mac-Xcode Build method<ul> <li>If you have a paid developer account, you must build at least once a year</li> <li>If you have a free account, you must build every 7 days</li> </ul> </li> </ol>"},{"location":"build/step6/#switching-from-free-to-paid-memberships","title":"Switching from Free to Paid Memberships","text":"<p>You can try a free account first before buying a paid developer account. If you start with a free account, you'll build a Loop app (let's call it FreeLoop). When you switch to a paid account, you'll be building a totally new and separate Loop app onto your phone (let's call it PaidLoop). </p> <p>The two apps will look identical on your phone and they will both have the name Loop with the same icon, but they will be functionally separate from each other. Make sure you are successful building the PaidLoop app before deleting the FreeLoop app from your phone. Use the search feature on your phone to find both apps.  One will have your configuration settings (FreeLoop), the other will not (PaidLoop).</p> <p>Before deleting the FreeLoop, either record all the settings or take screen shots of all the relevant settings screens.</p> <p>PaidLoop will know nothing about the settings and information you had stored in FreeLoop, so you will need to re-enter all your settings (basal rates, ISF, carb ratios, etc.) and configurations into the new PaidLoop. It will also not connect or control any pods you are currently using with the old FreeLoop app. The one exception is Nightscout credentials, which are stored in your keychain. If you entered your Nightscout credentials into FreeLoop, they will persist across app removal and be used by PaidLoop.</p> <p>With Loop 3, if you use Nightscout, you can import settings that were uploaded to Nightscout by FreeLoop into PaidLoop, so that simplifies the transition. </p> <p>Once PaidLoop is working, delete the FreeLoop instance from your phone to avoid confusion. If you followed the directions when building, you may have configured your phone to prevent deletion of Loop.  Head over to Protect that App, reverse the steps, delete FreeLoop, then do the steps again to protect PaidLoop.</p>"},{"location":"build/step6/#enrolling","title":"Enrolling","text":"<p>To enroll in an individual paid Paid account, go to the Apple's Developer Program website Apple Developer website.</p> <p>Be sure to use the credit card already associated with the email you are using for the developer account. If you switch credit cards, it can cause delays.</p> <p>If you choose to use the free account, you don't have to do anything on that website. You'll just wait for the instructions on the Xcode Preferences page and get your free account then.</p>"},{"location":"build/step6/#next-steps","title":"Next Steps:","text":"<p>Take the time to read the next three articles. You will be reminded again when you begin to set up your app.</p> <ul> <li>Test Settings</li> <li>Loop Data</li> <li>Meet the Community</li> </ul>"},{"location":"build/step8/","title":"Download Xcode","text":""},{"location":"build/step8/#download-xcode","title":"Download Xcode","text":"<p>Time Estimate</p> <ul> <li>45 minutes to 2 hours, depending on internet connection...but you don't need to babysit the download.</li> <li>0 minutes if you decide to use the GitHub Browser Build method to build Loop</li> </ul> <p>Summary</p> <ul> <li>Check iPhone/iPod iOS version<ul> <li>The iOS version determines minimum Xcode version</li> <li>The minimum Xcode version determines minimum macOS version</li> <li>If necessary, update macOS first and then return to this step</li> </ul> </li> <li>Download (or update) Xcode from your computer's App Store application</li> </ul> <p>FAQs</p> <ul> <li>\"Why isn't my Xcode installing?\" The two most common reasons are:<ol> <li>Lack of internet connection, or</li> <li>Not enough space on your hard drive<ul> <li>Xcode is a large download, and needs at least 50GB of space to properly unpack and install itself</li> <li>If you do not have enough space on your hard drive, you will have installation failures</li> <li>Check the Space Available</li> <li>Although the download takes a long time, the good news is you can walk away once the download starts. If your laptop goes to sleep when you close the lid or when the screen saver starts, disable the screen saver and leave the laptop open.</li> <li>After Xcode has finished downloading (looks like the progress bar is almost completed), it takes a long time to unpack and install, be patient</li> </ul> </li> </ol> </li> <li>\"Can I install Xcode on an external drive?\" Unfortunately, no. Xcode needs to be on the Mac hard drive. But other things--like photos and documents--can be moved to an external drive to make room for macOS and Xcode updates.</li> </ul>"},{"location":"build/step8/#what-is-xcode","title":"What is Xcode?","text":"<p>Xcode is a free application for Apple computers. You will use Xcode to turn the \"raw\" Loop source code into an iOS application and install it onto your iPhone/iPod.  Which version of Xcode you install on your computer depends on the iOS version you have on the iPhone/iPod you are going to be installing Loop on and the macOS version you have on your computer. </p> <p>Because of the complexity of these dependencies, please read this entire page.</p> <p>Or - look into building with GitHub Actions - no Mac computer required, no need to worry about versions for Mac OS or Xcode - all done for you on GitHub (some configuration required).</p>"},{"location":"build/step8/#which-version-of-xcode-do-i-need","title":"Which version of Xcode do I need?","text":"<p>First, choose a version of Xcode appropriate for your iOS device. Then, determine the minimum macOS version required for that Xcode version. Update to at least that minimum macOS version. Then follow the instructions to download and install Xcode (or update an existing installation):</p> <ul> <li>Open the App Store on your computer and search for \"Xcode\"</li> <li>If the version number you need is bigger than what is shown in the App Store, you need to first update your macOS<ul> <li>Do not rely on the version number in this graphic</li> </ul> </li> </ul> <p></p>"},{"location":"build/step8/#version-relationship-overview","title":"Version Relationship Overview","text":"<p>Have you turned off automatic updates on your iOS device?</p> <p>Loop and iOS Updates</p> <p>Please Read: Turn Off Automatic Updates</p> <p>Before manually accepting an iOS update, be sure you have compatible versions of Xcode and MacOS.  </p> <p>Minimum Xcode Version</p> <p>The minimum version of Xcode you need depends on the iOS version you have on your phone.</p> <p>Please Read: Minimum Version List</p> <p>Can't find the required Xcode version</p> <ul> <li>If your computer is not running the required minimum macOS, the App Store won't show the required minimum Xcode version</li> <li>You must use iOS to determine which Xcode, which determines which macOS</li> <li>Update your computer to at least that minimum macOS first</li> </ul> <p>Don't be the person who posts for help saying, \"I'm trying to update my Loop app but am getting errors.\" When asked what Xcode version they have and if they've updated, they respond, \"I don't have any Xcode updates available in the App Store, so I must be running the most current version.\"</p> <p>Actually, they forgot to check for macOS updates and therefore cannot see the needed Xcode update yet.</p>"},{"location":"build/step8/#after-update-reboot","title":"After Update - Reboot","text":"<p>After any update of macOS or Xcode, it is always a good idea to reboot your computer.</p>"},{"location":"build/step8/#how-do-all-the-minimum-versions-relate-to-each-other","title":"How do all the minimum versions relate to each other?","text":"<p>The list below contains the minimum versions of macOS and Xcode you'll need based on your iOS version. The highlighted sections, coordinated by <code>color</code> and <code>linestyle</code> in the graphic below, tie together the operating system nomenclature in the following bullets. The graphic is not updated as frequently as the words.</p> <p>Newer versions of Xcode are always OK and should be used if your computer will accept the upgrade.</p> <ul> <li>Xcode 14.3 or higher and Ventura (macOS 13.0 or higher) is required for<ul> <li>iOS 16.4 and newer</li> </ul> </li> <li>Xcode 14.2 or higher is required for<ul> <li>iOS 16.2 through 16.3.x</li> </ul> </li> <li>Xcode 14.1 or higher is required<ul> <li>iOS 15.1 is minimum version for phone but 15.7.1 is better (for older phones)</li> <li>iOS 16.0 through 16.1.x is supported</li> </ul> </li> </ul> <p>When using a Mac-Xcode build and an iOS 16 device, you must turn on developer mode for both the phone, and if paired, the watch.</p>"},{"location":"build/step8/#wikipedia-chart-for-apple-versions","title":"Wikipedia Chart for Apple Versions","text":"<p>This graphic (copied from Wikipedia and last updated March 2023) is not updated with every iOS update - use it as a map to read the minimum requirements.  Every attempt will be made to update the words in the Minimum Version List promptly - that's much easier than updating a graphic.</p> <p>Follow this link to Wikipedia and scroll down to the the current version of this figure - the graphic shown below is a map of how to read the current version of this figure at Wikipedia.</p> <p></p>"},{"location":"build/step8/#what-happens-if-you-try-using-too-old-of-xcode","title":"What happens if you try using too old of Xcode?","text":"<p>It isn't some catastrophic failure if you try to build with an outdated Xcode without realizing it. If the build fails, nothing happens to your phone (or Loop on your phone if you are rebuilding).  Nothing is copied from the computer to the phone until after you see the Build Succeeded message. You'll see a pretty obvious error message during your Loop build that says \"Could not locate device support files.\" With newer versions of Xcode, the message will include words like \"Could not prepare the device\". That messages is telling you that your iOS on the phone requires you to get a newer version of Xcode to be able to build Loop onto that phone.</p> <p></p> <p>So, if you see that error message, realize you may have to update your macOS to be able to see the newest Xcode version that you will need. Make sure to check that chart to see what your minimum versions are for the iOS you are running on your iPhone.</p> <p>With Loop 3, you may see another error when the Xcode version does not support the phone iOS. You may see Package.resolved file corrupted or malformed</p>"},{"location":"build/step8/#next-step-xcode-preferences","title":"Next Step: Xcode Preferences","text":"<p>Now you are ready to set up Xcode Preferences.</p>"},{"location":"build/step9/","title":"Xcode Preferences","text":""},{"location":"build/step9/#xcode-preferences-or-settings","title":"Xcode Preferences (or Settings)","text":"<p>Time Estimate</p> <ul> <li>about 10-15 minutes to install the Command Line Tools</li> <li>5 minutes to add your Apple ID, assuming you remember your password</li> </ul> <p>Summary</p> <p>ALERT: the Xcode menu structure has changed:</p> <ul> <li>For Xcode 13.x and earlier: Xcode-&gt;Preferences</li> <li>For Xcode 14.x and later: Xcode-&gt;Settings</li> </ul> <p>The LoopDocs instructions have been updated to Preferences (or Settings). Choose that one that matches your version of Xcode.</p> <ul> <li>Verify that Command Line Tools are installed: Xcode-&gt; Preferences (or Settings) -&gt; choose Locations tab.</li> <li>Add your Apply ID:  Xcode-&gt; Preferences (or Settings) -&gt; choose Accounts tab.</li> </ul> <p>FAQs</p> <ul> <li>\"I still only see an account with <code>(personal team)</code> beside it even though I enrolled in the paid Developer Account program...what should I do?\" You should check your spam email box in case Apple sent you an email there. Make sure you've waited the 48 hours that Apple says it may take to get your account approved. If it's been 48 hours and you still don't see anything in your email, contact Apple support and ask them about the status of your enrollment. It may be held up by something on their end.</li> </ul>"},{"location":"build/step9/#xcode-version","title":"Xcode Version","text":"<p>Open Xcode from your Applications folder. If it offers to start a new project with you, just close that window.</p> <p>Click on the Xcode-&gt;About Xcode menu item. The version number is displayed.</p>"},{"location":"build/step9/#watchos-simulators","title":"watchOS Simulators","text":"<p>Yes, watchOS simulators are required to build Loop. If Xcode asks if you want to download them - say yes. It's slow but you cannot build Loop without the simulator.</p> <ul> <li>Tap on New with Xcode 14 for more information</li> </ul>"},{"location":"build/step9/#command-line-tools","title":"Command Line Tools","text":"<p>The very first time you open Xcode it may install a package of command line tools. Wait patiently until it finishes.  The command line tools may have installed without asking.</p> <ul> <li>Check that your Command Line Tools installed correctly.<ul> <li>First, open Xcode Preferences (or Settings)<ul> <li>Click on the word <code>Xcode</code> in the top menu bar (just to the right of the Apple icon in the upper-left corner) and select <code>Preferences</code>  (or <code>Settings</code>) in the drop-down menu</li> </ul> </li> <li>Then select the <code>Locations</code> tab in the Preferences (or Settings) window to see the dropdown menu for Command Line Tools.  Make sure the Xcode version listed matches what you just installed (not the version in this graphic)</li> </ul> </li> <li>If it's blank, use the blue arrows to the right of the Command Line Tools row to select it</li> </ul> <p></p>"},{"location":"build/step9/#add-apple-id","title":"Add Apple ID","text":"<p>Go to the Xcode Preferences (or Settings) window from above, click on the <code>Accounts</code> tab and then press the + in the lower-left corner to add an Apple ID account.</p> <p></p>"},{"location":"build/step9/#xcode-accounts-tab","title":"Xcode Accounts Tab","text":"<p>The Xcode Accounts Tab, shown in the graphic (from Xcode 13) below allows you to have more than one account available to choose from when you sign your targets (another new term that is explained later).  Normally, you would only have one.</p> <p>In the graphic, whichever item is selected on the left side (highlighted by Xcode in blue) shows up with more details on the right side of the display. If the Free account had been selected, the information shown in the red inset would have been displayed.</p> <p>Free and Paid</p> <p>The graphic below shows examples for a paid account and a free account. You will only see one.</p>"},{"location":"build/step9/#free-developer-account","title":"Free Developer Account","text":"<p>If you want to use a free developer account, you will simply enter your Apple ID in this section and Xcode will automatically enroll your Apple ID in the free developer program. It will show up with the <code>(Personal Team)</code> and <code>User</code> indication.</p>"},{"location":"build/step9/#paid-developer-account","title":"Paid Developer Account","text":"<p>If you enrolled in the paid account already and have confirmation that your account is active, enter the Apple ID of the paid developer account. It will show up with just your name and the <code>Admin</code> indication. If you have enrolled and are waiting, the <code>(Personal Team)</code> and <code>User</code> indication shows up until the paid account is confirmed by Apple.</p> <p>Description</p> <p>The description line is initially empty. You can add your own description or just leave the line blank. Text added to the decription line shows up in two places: To the left, just above the email address and to the right once that Apple ID is selected.</p> <p></p> <p>You are now done setting up Xcode.  Great job!  You will not need to redo the account setup steps on any subsequent builds or updates of your Loop app.  Xcode will remember these settings.</p>"},{"location":"build/step9/#next-step-build-loop","title":"Next Step: Build Loop","text":"<p>Now you are ready to Build Loop.</p>"},{"location":"build/testflight-xcode/","title":"TestFlight from Xcode","text":""},{"location":"build/testflight-xcode/#introduction","title":"Introduction","text":"<p>There are several different methods for making use of TestFlight:</p> <ul> <li>Test an app someone else is developing</li> <li>Use the GitHub Browser Build method to build and distribute your own Loop app</li> <li>Use TestFlight as a remote distribution (and backup) for an app you build using Xcode</li> </ul> <p>This guide can also be followed to install other apps you build with Xcode via TestFlight. Examples include LoopFollow, LoopCaregiver, xDrip4iOS and GlucoseDirect.</p> <p>Some useful features of using TestFlight to install Loop:</p> <ul> <li>You don't need to plug your phone into your computer</li> <li>You can update Loop on your kid's phone while they're away at college</li> <li>Reinstalling Loop on the fly is quick and easy from your phone, even if you accidentally delete the app, see Protect that App, or need to install Loop on a brand new phone</li> </ul> <p>Since apps built with TestFlight expire after 90 days, it is recommended you also setup a build using the GitHub Browser Build method even if you don't plan on using it. The GitHub build can be updated in a few minutes from any browser and is an extra layer of protection in these scenarios if you do not have access to your Mac for a rebuild:</p> <ul> <li>Your Xcode built Loop in TestFlight expires</li> <li>An urgent update to Loop is released</li> </ul> <p>In all cases, except accidental deletion of Loop or loss of phone, the Loop you install from TestFlight builds over your existing app and you keep all your settings including your pump.</p>"},{"location":"build/testflight-xcode/#build-to-testflight-via-xcode","title":"Build to TestFlight via Xcode","text":""},{"location":"build/testflight-xcode/#initial-steps","title":"Initial Steps","text":"<p>Before creating or uploading to a TestFlight, use the Mac-Xcode Build guide to sign your targets and build Loop to a simulator phone in Xcode. This checks to ensure the app you upload to your TestFlight will work as expected.</p>"},{"location":"build/testflight-xcode/#archive-the-project","title":"Archive the Project","text":"<p>Change the build target to from building to a simulated phone to LoopWorkspace &gt; Any iOS Device (arm64) like the image below.</p> <p></p> <p>Now go to the top menu and choose Product &gt; Clean Build Folder. Once it's done, it should say \"Clean Finished\".</p> <p></p> <p>Go back to the top menu and choose Product &gt; Archive. This will build Loop into a file rather than a phone or simulator. It should take about the same amount of time as building to a phone or simulator does.</p>"},{"location":"build/testflight-xcode/#upload-the-archive","title":"Upload the Archive","text":"<p>Once the archive finishes building, it should automatically open the Archives window. If you want to open this window without re-archiving, click the following in the top menu: Xcode &gt; Window &gt; Organizer.</p> <p></p> <p>Select the archive and click Distribute App. If you've archived the project before, be sure to select the archive you intend to upload - most likely the one with the most recent Creation Date. </p> <p>On the next screen, App Store Connect is selected by default. Click Next.</p> <p></p> <p>On the next screen, Upload is selected by default. Click Next.</p> <p></p>"},{"location":"build/testflight-xcode/#first-time-archive-upload","title":"First-Time Archive Upload","text":"<p>If you have already created a TestFlight for Loop via Xcode or the GitHub Build method, the next screen will not be shown, so skip ahead to Subsequent Archive Upload.</p> <p>If this is the first time you're creating a TestFlight for Loop, enter the following on the next screen and click Next:</p> <ul> <li>Name: Enter a name that is unique. Most people just use \"Loop\" followed by their initials, so James Kirk would use \"LoopJK\". If he gets an error that the name is already taken, he might try something like \"LoopJTK\" or \"Loop_JTK_1701\".</li> <li>SKU: This can be anything, but it can't be the same SKU that you've used for a different app that you've created a TestFlight for. Ideally, just leave it as the autofilled bundle id.</li> <li>Primary Language: Set this to your primary language.</li> <li>Bundle Identifier: This should already be autofilled. If it's not, it should be \"com.YOUR_TEAM_ID.loopkit.Loop\". Make sure you replace YOUR_TEAM_ID with your actual TEAM ID, which you can find at developer.apple.com/account.</li> </ul> <p></p>"},{"location":"build/testflight-xcode/#subsequent-archive-upload","title":"Subsequent Archive Upload","text":"<p>On the next screen, leave everything checked and click Next.</p> <p></p> <p>On the next screen, leave it set to Automatically manage signing and click Next. You will see a few messages as it performs some tasks. Be patient.</p> <p></p> <p>When you see the next screen, click Upload.</p> <p></p> <p>Wait until uploading is finished. Don't be alarmed if you see the following screen, just click Done.</p> <p></p>"},{"location":"build/testflight-xcode/#deploy-app","title":"Deploy App","text":"<p>Now that it's uploaded to TestFlight, it will take a little bit before it finishes processing and becomes available for installation on your iPhone. You can check appstoreconnect.apple.com/apps to find it's progress by clicking Test Flight and then iOS under Builds in the upper left. Once it no longer says \"Processing\" and instead says \"Ready to Submit\" next to the build's number, it should be available and ready to install on your iPhone.</p> <p></p> <p>To install Loop from TestFlight onto your iPhone, follow the instructions on the GitHub Deploy page.</p>"},{"location":"build/testflight-xcode/#update-app","title":"Update App","text":"<p>Apps installed via TestFlight are only valid for a maximum of 90 days, so you must upload a new build to TestFlight at least every 90 days.</p> <p>To update, simply repeat all the steps on this page.</p> <p>Add a Calendar Reminder</p> <p>Note that the built-in Loop Notification for expiration has not been modified to read TestFlight expiration, yet.</p> <p>So, please add a calendar reminder.</p>"},{"location":"build/updating/","title":"Updating/Rebuilding","text":""},{"location":"build/updating/#updating-loop","title":"Updating Loop","text":"<p>This page is only relevant when building with a Mac and Xcode.</p> <p>For GitHub (Browser Build) updates, please see: GitHub Update</p> <p>Time Estimate</p> <ul> <li>25 minutes, if Xcode and macOS are already updated to support the current or desired iOS</li> <li>up to 2 days, if need to install macOS and / or Xcode update(s)</li> </ul> <p>Summary</p> <p>Summary of tasks to prepare for and update your app:</p> <ul> <li>Determine required macOS and Xcode version based on your phone iOS<ul> <li>If necessary, update first macOS and then Xcode</li> </ul> </li> <li>Check your Developer Account</li> <li>Download Updated Loop code and Build Loop</li> </ul> <p>In each of the sections below, follow links to sections of other build pages then hit the back button on your browser to return to this page.</p> <p>FAQs</p> <ul> <li>\"What is an update?\" Anytime you want to change versions or if the app is about to expire, follow the instructions on this page.</li> <li>\"Do I delete my old Loop app first?\" Definitely not! If you keep your Loop app on your phone, your Loop settings (and existing pod) will continue to work the same after the update. Seamless.</li> <li>\"Do I need to start a new pod when I update?\" No. Your existing pod session will continue seamlessly if you are using the same Developer Account to sign the Loop app targets as you did the last time you built.</li> <li>\"What if I'm using a new/different developer account?\" If you aren't building with the same developer account used when your existing app was built (this includes going from free to paid), then you will be installing a brand new (second) Loop app on your phone. Your existing pod won't work with the new app, so you might want to time this transition when you are due to change pods. Delete the old app once you get the new one all set up.</li> <li>\"What if it is a new computer but the same developer account?\" No big deal...use the Updating Steps to check that your new computer has the required compatible versions and then build your app. This will include installing Xcode, configuring Xcode preferences, and adding your Developer ID to Xcode: refer to What about a New Computer?. There is no need to delete provisioning profiles on a brand new computer, but no harm comes from following the instruction.</li> </ul>"},{"location":"build/updating/#when-to-update-loop","title":"When to Update Loop","text":"<p>Under ordinary circumstances, you do not have to update your Loop app until it expires (1 year for a paid account). However, we encourage regular updates when a new version of iOS, or of Loop, is released because they often contain bug fixes or improvements which may increase operational stability.</p>"},{"location":"build/updating/#ios-updates","title":"iOS Updates","text":"<p>Under ordinary circumstance, updating the iOS on your phone does not require a rebuild of the app on your phone. However, it's important to be prepared in case of an emergency, such as a lost phone.</p> <p>Best Practice</p> <p>It is good practice to first check if your computer (macOS or Xcode) will require an update to support building Loop to your phone BEFORE applying an iOS update to your Looping phone.</p> <p>Follow these \"safe Looping\" steps for updating your iOS:</p> <ol> <li>Check which version of macOS and Xcode is required for the phone iOS you intend to install.</li> <li>Update macOS / Xcode if needed</li> <li>Check Loop: Current Release status - if there is new code, you should download it</li> <li>Build app to your iPhone</li> <li>Then update your iPhone iOS</li> </ol> <p>Loop Releases provides information about current and previous Loop versions.</p> <p>Updating to iOS 16 (watchOS 9) requires enabling Developer Mode. Your existing app will not open until you take this step. Once enabled, the app opens again. A rebuild is not required.</p>"},{"location":"build/updating/#loop-is-no-longer-available","title":"\"Loop\" is No Longer Available","text":"<p>The apps built and signed by you in Xcode with a paid developer account will last for 12 months; then they expire and must be rebuilt. At least once per year you will have to rebuild your app and go through this update process. If you do not update and the \"provisioning profile\" on your phone expires, you will see the \"Loop\" is No Longer Available message. You will be given multiple Loop App Expiration Notifications on the Loop phone, but might miss them if you are a caregiver.</p> <p>When you see \"Loop\" is No Longer Available on your phone, the only solution is to rebuild the app.  All of your settings are still present on your phone, but your \"provisioning profile\" expired and you need to generate a new one. Once you build Loop on your phone, following the instructions on this page, all your settings will be maintained - assuming you build with the same Apple Developers ID that was used initially.</p>"},{"location":"build/updating/#macos-and-xcode-versions","title":"macOS and Xcode Versions","text":""},{"location":"build/updating/#determine-required-xcode-and-macos-versions","title":"Determine Required Xcode and macOS Versions","text":"<p>Between Loop app builds, there's a high likelihood that Apple has updated one or more of the systems involved in your Loop app. If you don't have the minimum Xcode version required for your phone iOS, you cannot build on that phone. Sometimes you must also update the macOS version to allow you to use the required Xcode version.</p> <p>Based on the iOS on your phone, or the iOS you plan to install on your phone, determine the required macOS and Xcode versions. Click on this  link versions for iOS, macOS and Xcode to determine the versions needed and then hit the back button in your browser to finish the steps on this updating page.</p> <p>If you are tired of the macOS and Xcode version update requirements, check out the Browser Build option.</p> <p>First macOS and Then Xcode</p> <p>Your macOS must meet the minimum requirement for the Xcode version you need to support your current iOS as detailed in that link above.</p> <ul> <li>If the macOS is too old, the Xcode version will not appear in the App Store</li> <li>You might think you don't need to update Xcode (but you do)</li> <li>Your build will fail and mentors might need to help you</li> </ul> <p>Don't be that person. Follow the directions.</p> <p>Minimum means you need to have at least that version - newer versions build just fine.</p>"},{"location":"build/updating/#verify-update-macos","title":"Verify / Update macOS","text":"<ul> <li>Click on this link Check your macOS Version and follow the instructions on that page if an update is required.</li> <li>After you've reviewed that section, hit the back button on your browser to return here</li> </ul>"},{"location":"build/updating/#verify-update-xcode","title":"Verify / Update Xcode","text":"<p>Click on this link Check your Xcode Version to find your Xcode version number.</p> <p>If you need to update your Xcode, follow the instructions at this link Install Xcode and continue through Xcode Preferences.</p> <p>Advanced users: If you are finding installation of Xcode from the App Store incredibly slow, try the alternate method of Direct Download of Xcode.</p> <p>Direct Download</p> <ul> <li>If you previously did a direct download of Xcode, it might not show up in the App Store.</li> <li>Either do another direct download or follow these directions in the Direct Download section to reconfigure so it will show up in the App Store.<ul> <li>Direct Download of Xcode</li> </ul> </li> </ul>"},{"location":"build/updating/#what-about-a-new-computer","title":"What about a New Computer?","text":"<p>Make sure your new computer has the macOS and Xcode required by your phone iOS. Be sure Xcode Command Line Tools are installed and that you Add Apple ID to Xcode.</p>"},{"location":"build/updating/#missing-xcode-or-command-line-tools","title":"Missing Xcode or Command Line Tools","text":"<p>WARNING</p> <p>If you fail to have Xcode or Xcode Command Line Tools installed, you will get one of these errors (or something similar) when you attempt to run the Build Select Script:</p> <ul> <li>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</li> <li>xcrun: error: active developer path (\"/Applications/Xcode.app/Contents/Developer\") does not exist</li> <li>xcode-select: Failed to locate 'git', requesting installation of command line developer tools</li> <li>xcode-select: error: tool 'xed' requires Xcode</li> <li>Scripting Bridge could not launch application . . .</li> </ul> <p>Follow Xcode Preferences page after updating Xcode<p>Make sure to restart your computer after updating Xcode and follow the instructions on the Xcode Preferences page. There's a known issue that happens often enough to be frustrating if you skip those steps. It's not always required...but this is a good easy ounce of prevention step.</p> </p>"},{"location":"build/updating/#check-your-developer-account","title":"Check your Developer Account","text":"<p>Apple updates its License Agreement for the Developer Program frequently. You need to login to your developer account to manually check if there is a new agreeement to accept.  If you see a big red or orange banner across the top of your Developer Account announcing a new license agreement like shown below...please read and accept it before building Loop.</p> <p></p>"},{"location":"build/updating/#ready-to-build-loop","title":"Ready to Build Loop","text":"<p>As long as there are no errors, you are now ready to proceed to Build the Loop App: Developer Mode</p> <p>After building the new app, you may choose to return to this page and follow the instructions to Delete Old Copies. This is optional, but cleans up space on your computer.</p>"},{"location":"build/updating/#delete-old-copies","title":"Delete Old Copies","text":"<p>This step is optional, but if your computer is low on space, it helps to clean up old downloads your are no longer using.</p> <p>There is an easy way to do this. The Build Select Script used to download and build Loop provides Maintenance Utilities to help free up disk space.</p> <p>Please review Loop and Learn: Build Select Script for more information.</p> <p>Copy the line below that starts with <code>/bin/bash</code> by hovering the mouse near the bottom right side of the text and clicking the copy icon (should say <code>Copy to Clipboard</code> when you hover over it). When you click the icon, a message that says <code>Copied to Clipboard</code> will appear on your screen.</p> Copy and Paste to start the Build Select Script<pre><code>/bin/bash -c \"$(curl -fsSL \\\nhttps://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildSelectScript.sh)\"\n</code></pre> <p>Paste the line of text into Terminal. Be sure to click anywhere in the terminal before trying to paste. (Ways to paste: Cmd+V ; or Ctrl click and select from menu or <code>Edit</code>-<code>Paste</code> at top of Mac screen.)</p> <ul> <li>Please read what is on the screen as you progress</li> <li>Choose Option 3. Run Maintenance Utilities</li> </ul> <p>If you prefer to clean up old downloads yourself, keep reading.</p> <p>Where is the old folder?</p> <p>Assuming you used the Build Select Script, your downloads are in the ~/Downloads/BuildLoop folder as shown in the graphic below. If you are tight on space, the older folders can be deleted.  Best practice, download fresh and build Loop; and then go back and delete all but the most recent copy.  The nice thing about the Build Select script is it automatically generates the folder name with the date and time of the download. Delete each unwanted folder, one at a time.</p> <p>If you see a file (not a folder) in ~/Downloads/BuildLoop called LoopConfigOverride.xcconfig, keep that around. If you delete it, you'll need to recover it from the trash, regenerate it (if you know how) or sign your targets manually for your current download.</p> <p>The Scripts folder can also be left alone, but if you delete it, it is regenerated with the next use of the Build Select Script.</p> <p></p>"},{"location":"build/updating/#background-information","title":"Background Information","text":"<p>New Loopers do not need to read the rest of this page.</p> <p>Experienced Loopers may wonder what happened to deleting derived data.</p> <ul> <li>Each workspace folder has a unique folder for storing derived data</li> <li>Deleting derived data across all Xcode workspaces and projects for a brand new download is not required to ensure a year for a given build</li> <li>The Clean Derived Data option in the Utilities menu can be required for some special cases, but you probably won't need it</li> </ul>"},{"location":"build/updating/#frequent-builder","title":"Frequent Builder","text":"<p>If you build frequently, you do not have to delete the profiles every time. One user reported deleting profiles gave a Revoke Certificate message - follow the link to see other reasons why that might happen. When the build script asks if you want to \"Ensure a Year?\", you can skip that step.</p>"},{"location":"build/updating/#revoke-certificate-issue","title":"Revoke Certificate Issue","text":"<p>What does it look like if you run into the Revoke Certificate message? When you prepare to Sign the Targets with Xcode, you'll see the message highlighted in the figure below.</p> <p> </p> <p>More information is shown in the orange box below.</p> <p>Revoke certificate</p> <p>The important part of this message is:</p> <ul> <li>\". . . signing certificate . . . private key is not installed in your keychain . . .\"</li> </ul> <p>WAIT - You might not need to revoke your certificate</p> <ol> <li>You might get this if you logged in as a different user, have a new computer or if your computer had to undergo a factory reset<ul> <li>You can transfer your keychain to your new computer (or just revoke and keep going)</li> <li>To transfer your keychain, check this Apple Documentation Link</li> </ul> </li> <li>Your version of Xcode is way out-of-date<ul> <li>Mentors have seen this with people trying to build with Xcode 11.4 or earlier</li> <li>Update Xcode to the most recent version</li> </ul> </li> </ol> <p>If you revoke and keep going:</p> <ul> <li>If you do hit Revoke Certificate, you'll be given a new one</li> <li>Even with the new certificate, your Apple Developer ID is not affected</li> <li>You can re-build on the existing Loop app on your device(s) and maintain all your settings with the new certificate.</li> </ul> <p>Be aware that you will have to rebuild to every device that used the certificate you just revoked and if you have other apps built with this certificate, they will stop working too.</p>"},{"location":"build/updating/#direct-download-of-xcode","title":"Direct Download of Xcode","text":"<p>Many people find updating Xcode from the App Store to be incredibly slow - especially when a new version has just been released.  This method still takes time and enough space on your disk, but is faster than going through the App Store.  Depending on your internet speed, this download can be done in about an hour. Then once it is downloaded, expect another fifteen minutes to several hours (depending on the speed of your computer) for the \"xip\" file to \"expand\".</p> <p>The instructions do not hold your hand.</p> <ul> <li>Your macOS must be at the minimum verion (or newer) to support the version of Xcode you're about the download</li> <li>You need to know how to log into your Apple Developer account and navigate those menus</li> <li>You need to know how to use Finder to navigate to Downloads</li> <li>You need to know how to drag the Xcode icon into your Applications folder (after download and expand completes)</li> <li>After you have done a direct download, the App Store will not show you updates<ul> <li>Either repeat the Direct Download or</li> <li>Delete Xcode from Applications folder<ul> <li>Open the App Store and search for Xcode</li> <li>Install fresh</li> <li>After you use the App Store for a download, then Updates will show in the future</li> </ul> </li> </ul> </li> </ul> <p>Here are the different steps you need to follow doing the Direct Download instead of the App Store method:</p> <ol> <li>Login to your Apple developer account<ul> <li>Examine the menus (on my computer there are buttons on the left hand side)</li> <li>Click on Downloads (under Additional Resources)</li> <li>Look at menu items (on my computer there are buttons at the top) that say Beta, Release, Profiles and Logs, and More</li> <li>Click on More</li> <li>Scroll down until you find the item you want (for example, Xcode 13)</li> <li>Click on View Details and click on the Download button for the \"xip\" file</li> </ul> </li> <li>Wait for Download to complete</li> <li>Expand the file by clicking on it in Finder</li> <li>Move the Xcode icon to Applications after the expansion completes</li> <li>Check the Command Line Tools setting under Xcode-&gt;Preferences<ul> <li>The selection cannot be blank or Build-Script will fail to open Xcode automatically</li> <li>It should be the same version as your Xcode</li> </ul> </li> <li>Reboot the computer</li> </ol>"},{"location":"faqs/FAQs/","title":"Loop FAQs","text":""},{"location":"faqs/FAQs/#what-do-i-need-to-loop","title":"What do I need to Loop?","text":"<p>Please click on the Requirements link.</p>"},{"location":"faqs/FAQs/#can-i-download-loop-from-the-app-store","title":"Can I download Loop from the App store?","text":"<p>No. Loop is not available for download. You must build your own Loop app. Loop app will not be available in the Apple App store because that would be distribution of a medical device, and we are not in that \"business\".  You can build yourself, but we are not distributors.</p> <p>Each step needed to successfully build your Loop app is found in these docs. The harder part will be having the patience to read all the documents before you start. New Loop users are so excited to get started that they often skip reading all the great info that these docs contain. As you begin the build...please include time to read the documents that follow what happens after you successfully build your Loop app.</p> <p>If you have any questions, use the Search feature to find topics in LoopDocs.</p>"},{"location":"faqs/FAQs/#can-i-use-an-android-phone-or-ipad-for-loop","title":"Can I use an android phone or iPad for Loop?","text":"<p>No, this is purely iPhone or iPod touch. The iPad does not support Apple Health which is required for Loop.</p> <p>There is open source software that runs on Android phones. Check out AndroidAPS Documention.</p>"},{"location":"faqs/FAQs/#do-i-have-to-be-tech-smart-to-build-loop","title":"Do I have to be \"tech-smart\" to build Loop?","text":"<p>No. You do not need any experience in code or computers to build Loop. If you have already owned an Apple computer and iPhone, you already have the required level of experience. Beyond that, simply read the directions slowly and diligently...all the information you will need are in these documents.</p> <p>Often times the non-tech people do better than the tech people in building Loop. Why? Because the non-tech people take the time to read slowly and look at the screenshots in the directions. The tech people often skim read and miss sentences...which then leads to build errors that have to be retraced and fixed.</p>"},{"location":"faqs/FAQs/#is-there-a-cheat-sheet-for-a-school-nurse-to-use","title":"Is there a cheat sheet for a school nurse to use?","text":"<p>Sure, you can give this one a try. School nurse's cheat sheet download</p>"},{"location":"faqs/FAQs/#how-long-does-it-take-to-build-loop","title":"How long does it take to build Loop?","text":"<p>The answer is varied, but a few hours from start to finish, depending on where you are starting and how comfortable you are with your computer.</p> <p>If you'd rather break it up into several shorter bits of effort, the <code>Build App</code> section is divided into convenient stopping points with Time Estimates for each page. You can do one or more pages at a time, depending on what kind of time you have available.</p>"},{"location":"faqs/FAQs/#does-loop-cost-money","title":"Does Loop cost money?","text":"<p>Yes, there are some costs, beyond the obvious costs of owning a pump and CGM.</p> <ul> <li>If you have a pump the requires a RileyLink Compatible Devices, expect to spend $150 each (or find a used one). You should have two, one as a spare.</li> <li>Most people use a paid Apple Developer Account ($99/year)<ul> <li>With a paid developer account, you can build using the Browser Build; no Mac required</li> </ul> </li> <li>If you build on a Mac using Xcode Mac-Xcode Build, you need a Mac or a PC with Intel chips on which you include a virtual Mac</li> </ul> <p>There are no other costs, ongoing or initial, to use Loop beyond what you already pay for your CGM, pump supplies and insulin.</p>"},{"location":"faqs/FAQs/#rileylink-options","title":"RileyLink Options","text":"<p>This is not required for DASH users.</p> <p>There are several options for the RileyLink Compatible Devices at this time.  They typically cost around $150. This is a one-time cost and the devices should last for years (unless it goes swimming, goes through the wash, gets run over by a car, etc.). It's fine to buy one device and make sure you want to Loop, but if you can afford it, go on and get two or get two different kinds. Once you Loop, you'll want a backup. Because some of the newer versions have features some people prefer, you may find posts on The Looped Facebook Group offering to sell their RileyLink for a reduced cost.</p>"},{"location":"faqs/FAQs/#free-developer-account-options","title":"Free Developer Account Options","text":"<p>The Apple Developer License can be done for free, however, you will have to rebuild your Loop app every 7 days and you must use a computer with Xcode, Mac-Xcode Build. That could get very tedious. The $99 annual Apple Developer program enrollment is an excellent investment.</p>"},{"location":"faqs/FAQs/#do-i-need-to-own-my-own-apple-computer","title":"Do I need to own my own Apple computer?","text":"<p>You no longer need to own an Apple computer - see Browser Build.</p> <p>If you chose Mac-Xcode Build, then you still don't have to own an Apple computer, but you do need to at least borrow one - or you can build using a virtual Mac if you have a PC with Intel chips (see next section).</p> <p>If you are borrowing an Apple computer, look at the required minimum settings associated with your iPhone Compatible Computer and Xcode Version. It would be really good to have longer term ability to borrow that computer again for updating Loop later, when needed.</p>"},{"location":"faqs/FAQs/#can-i-use-a-pc-or-windows-computer-to-build","title":"Can I use a PC or Windows computer to build?","text":"<p>You can build Loop using just a browser on any device: Browser Build.</p> <p>If you want to use Mac-Xcode Build, there is a hacked way of installing macOS on a Windows computer called a Virtual Machine. This link provides some helpful information. This Virtual Machine method will not work on PCs that have AMD processors, only Intel. Double check that your computer uses an Intel processor before attempting the virtual machine method. If you want to try this, there are mentors on The Looped Facebook Group who can assist.</p>"},{"location":"faqs/FAQs/#how-often-do-i-need-to-get-on-the-computer-for-loop","title":"How often do I need to get on the computer for Loop?","text":"<p>When you use the Browser Build method, you need to access a browser at least once every 90 days to Update the Browser Build. This is simple enough to do that you can do the steps on your phone in just a few minutes. Several people are already working on automated methods so that won't be required, but a manual Build Actions step is required for now.</p> <p>When you use Mac-Xcode Build: the short answer is (1) when you first build and (2) once per year minimum after that. (If you decide to use a free Apple Developer Account, you will need to get on the computer every 7 days.)</p> <p>Loop code is updated periodically to include new features and bug fixes. When those updates are released, you'll need access to a browser or an Apple computer again to update your Loop app.  </p> <p>Loop updates are not available through the iPhone's app store...instead you do the app update yourself</p> <ul> <li>If using Mac-Xcode build: use this link: update instructions</li> <li>If using Browser build: use this link: GitHub Build Update </li> </ul> <p>In general, there are updates to Loop released a few times a year - these can occur more frequently after a major release.</p>"},{"location":"faqs/FAQs/#will-i-need-to-build-a-new-loop-if-i-switch-between-medtronic-and-omnipod","title":"Will I need to build a new Loop if I switch between Medtronic and Omnipod?","text":"<p>No. Loop lets you move between different pump types from within the same Loop app.</p>"},{"location":"faqs/FAQs/#can-i-use-my-apple-developer-account-to-build-for-others","title":"Can I use my Apple Developer account to build for others?","text":"<p>If there is more than one Looper in the family, you only need to have one Apple Developer ID and only one annual payment. The adult who builds can use their Apple Dev ID to put the app on the Looper's phone.  The limit is 99 devices (phone and watch both count).  Unless it's a very large family, you should have no problem supporting everyone in your family. Building Loop on the second phone is much faster than the first one. It's a good idea to let someone else in the family know how to build and have access to your Apple password in case you're out of town. It's also a good idea to build Loop on a backup phone especially for travel. The Apple Developer ID and the Apple ID are two different things. PLEASE read this: Loopers Need Their Own Apple ID.</p> <p>If you used the Browser Build method, you just add each Looper to your TestFlight test group and they get updates whenever you issue a new Build Action on github.</p>"},{"location":"faqs/FAQs/#what-happens-when-i-switch-apple-developer-id","title":"What happens when I switch Apple Developer ID?","text":"<p>The Loop app on the phone is different if the build uses a different Apple Developer ID from the one currently on the phone. So if the Apple Developer ID used for a new Loop build is different from the one used for the existing Loop app, there will be two Loop apps on the phone.  The Looper will have to on-board the new app, enter all the settings again and delete the old app.</p>"},{"location":"faqs/FAQs/#can-i-use-someone-elses-apple-developer-account","title":"Can I use someone else's Apple Developer account?","text":"<p>It's best that you build your own Loop app using your own Apple Developer ID.</p> <p>One developer account can only be \"linked\" to a limited number of devices. So one person \"loaning out\" their developer license to a lot of people will quickly exceed the number of allowed devices. In those cases, that person will be told they need to revoke the certificates on some devices (essentially dropping old ones to make room for new ones). If they revoke your device certificate (and they can do that without you knowing through their developer portal), your Loop app will immediately stop working and not even open.</p> <p>Your Loop app will also die immediately if their developer account is not renewed or expires.</p> <p>Moral of the story, out of all the ways to save money...borrowing someone's developer account is not a good place to save money. You don't want your Loop app to suddenly stop working.</p>"},{"location":"faqs/FAQs/#how-can-i-find-a-compatible-pump-supplies","title":"How can I find a compatible pump? supplies?","text":"<p>There is a whole page with detailed information about Medtronic pumps; how to find them, how to find supplies, and assessing whether your Medtronic pump is compatible. Please check out that page for more info.</p> <p>You can use some Omnipod pumps with Loop. You do not need the Omnipod Personal Diabetes Manager (PDM), just the pod supplies. Your insurance or pharmacy coverage may cover some of the cost.</p> <p>Check your app version by tapping on Loop settings and reading it from the top of the screen.</p> <ul> <li>Version 2.2.x or earlier supports Omnipod Eros pumps and some older Medtronic pumps</li> <li>Version 2.3 or later supports Omnipod Eros and DASH pumps and some older Medtronic pumps</li> </ul> <p>Alternative Names for Omnipod Eros Pump and Pods</p> <p>Eros pump is also known as Classic, or UST400, or Omnipod Insulin Management System.  </p> <p>Pharmacy sites sometimes may refer to the Eros pods as Gen 3 but they are the same exact pods. </p> <p>DASH pumps do not require a RileyLink compatible device.</p> <p>Omnipod 5 is not supported by any version of Loop.</p>"},{"location":"faqs/FAQs/#can-i-pay-someone-else-to-do-this","title":"Can I pay someone else to do this?","text":"<p>We do not know whether someone who builds the app for you incurs legal responsibility if something goes wrong while you are using a version they built for you.</p> <p>There are a few companies that provide Loop as a service.</p> <p>Best Practice: Learn to Build</p> <p>You are strongly encouraged to build Loop for yourself. </p> <ul> <li>No links to providers who build Loop as a service  are found in LoopDocs</li> <li>If you choose to use such a service, before you begin, you should:<ul> <li>Read all of LoopDocs</li> <li>Know how to Set up, Operate and Troubleshoot Loop</li> <li>These steps are important for your safety</li> </ul> </li> </ul>"},{"location":"faqs/FAQs/#what-if-i-lose-my-rileylink-compatible-device","title":"What if I lose my RileyLink Compatible Device?","text":"<p>For Medtronic users, you simply go back to old school pump use until you get a new RileyLink compatible device. You can either let your temp basal finish by itself (30 minutes or less) or cancel the temp basal on the pump's menu. For bolusing, you'd go back to using the pump's bolus commands. When you get a device (either finding your old one or getting your backup device out) and Loop running again, you'll want to do one thing. Enter in any carbs to Loop that you may have eaten in the recent past that could still be affecting blood glucose. While Loop will read whatever insulin deliveries had happened while the RileyLink compatible device was missing, it will not read any carbs you entered into the pump...so make sure to add those to Loop and backdate them to the time they were eaten. That will help make the transition back to closed loop smoother.</p> <p>For Pod users, your Pod will finish any currently running temporary basal rate (maximum of 30 minutes) and then revert back to your scheduled basal rate. Without a RileyLink compatible device, you will be receiving normal basals, but will need to pull out pens/syringe for boluses. If you have a backup device, you can simply connect to the new device on the same Loop app and it will work with the existing pod session. If you don't have a backup device, you'll have to remove the pod and start a new pod paired with your PDM until you get a new device.</p>"},{"location":"faqs/FAQs/#what-if-i-lose-or-get-a-new-iphone","title":"What if I lose or get a new iPhone?","text":"<p>If you lose your phone - follow the same dosing protocol as if you lost your rileylink.</p> <p>When you get a new iPhone, you can plan ahead. The information found in the Update FAQs page, What if I'm Changing Phones section has more information.</p>"},{"location":"faqs/FAQs/#what-about-other-pumps-when-will-they-loop","title":"What about other pumps? When will they Loop?","text":"<p>Hey now...let's be grateful for what we have first. The ability to use Loop is the result of tremendous amounts of effort, time, and sacrifice by volunteers. Cracking the pumps for Loop use is a large undertaking. If and when another set of people spend a large amount of time figuring out other pumps, then they could conceivably be added to Loop. But you don't need to let us know that you'd love to see more pumps compatible with Loop. There is just an awful lot of work that needs to happen and it is neither quick nor easy.</p> <ul> <li>Tandem pumps are not Loop compatible.</li> <li>Omnipod DASH pods will be Loop compatible (when Loop 3 is released).</li> <li>Omnipod 5 pods are not Loop compatible.</li> <li>Newer Medtronic pumps are not Loop compatible.</li> </ul>"},{"location":"faqs/FAQs/#can-i-have-more-than-one-loop-app-on-a-phone","title":"Can I have more than one Loop app on a phone?","text":"<p>Yes, this is technically possible. You can have multiple Loop apps built onto the same iPhone. However, having multiple Loop apps on a single phone may lead to unexpected conflicts that can negatively affect your Loop's ability to stay green (keep looping). Additionally, your Pod will only work on one Loop app at a time anyways. So for smooth looping, just keep one Loop app on any phone for looping use.</p>"},{"location":"faqs/FAQs/#will-i-be-able-to-loop-on-a-plane-or-in-the-mountains","title":"Will I be able to Loop on a plane? Or in the mountains?","text":"<p>Yes. Loop does not require internet or cell coverage to work. So long as the Loop user has Bluetooth turned on on the iPhone (or iPod touch), then the Dexcom and RileyLink will still be able to do their work with Loop and your pump/Pod.</p> <p>One exception - if you've chosen to use a CGM source that does require the internet, you will need to have cell or internet coverage. This ability is provided as a service to folks who cannot get their CGM data any other way. It is also a convenience for people testing the code.</p>"},{"location":"faqs/FAQs/#what-happened-to-freeaps","title":"What happened to FreeAPS?","text":"<p>FreeAPS hasn't really had an owner to develop it for several years, but many depended on it. Because of that, the Loop and Learn team kept it on life-support. It has been updated to include DASH, but that is the last expected improvement.</p> <p>Many features people used with FreeAPS are now included in Loop 3 or can be added with customization. There is a specific fork that can be built with some of these customizations. However, with the exception of libre support, all the customizations can be added using the Loop and Learn: Customization Select Script. That script can be run stand-alone or selected as an option as part of the Build Select Script when doing a Mac-Xcode build.</p> <p>Please do not blindly apply customizations. You should first read LoopDocs: Customize Your Loop and then Loop and Learn: Code Customization. The special fork mentioned above, with build instructions below, includes a subset of the customizations available with the Customization Select script.</p> <p>For those who need Libre support, there are several options. If you want to use xDrip4iOS or GlucoseDirect, you must add the interface to one of these apps to Loop. The Loop with Patches selection in the Build Select Script uses the fork mentioned above that provides support for those two CGM apps. You will also need to build and install xDrip4iOS or GlucoseDirect on your phone using the same Apple Developer ID as was used for Loop.</p> <ul> <li>The customizations included in the fork (mentioned above) are described in Loop and Learn: Summary of Loop with LnL Patches<ul> <li>For Browser Build, follow the direction at Loop and Learn: GitHub Browser Build for Loop with Patches</li> <li>For Mac-Xcode build, choose the Loop with Patches selection in the Build Select Script.</li> </ul> </li> </ul>"},{"location":"faqs/algorithm-faqs/","title":"Algorithm FAQs","text":""},{"location":"faqs/algorithm-faqs/#does-loop-learn-or-detect-changes-in-your-insulin-needs","title":"Does Loop \"learn\" or detect changes in your insulin needs?","text":"<p>The answer is both Yes and No.</p> <p>Yes in that:</p> <ul> <li>There is a short-term retrospective analysis built into Loop which will apply a weighted-correction based on the past 60 minutes of blood glucose changes.</li> <li>Loop works best if you enter an estimate of carbs and absorption time for meals, but it also is fairly forgiving<ul> <li>There are discussions on Insulin Counteraction Effect (ICE) on a number of pages within LoopDocs:<ul> <li>Dynamic Carb Absorption</li> <li>Carbohydrate Effect</li> <li>Insulin Counteraction Effect</li> </ul> </li> </ul> </li> </ul> <p>No in that:</p> <ul> <li>Loop assumes the settings you've provided are correct.<ul> <li>Loop does not adjust or \"learn\" the Therapy Settings portion of Loop parameters directly<ul> <li>It keeps those fixed and user controlled, separate from the dynamic part of the Loop algorithm, which does learn based on short-term patterns</li> <li>If outside factors (such as hormones, illness, exercise, medications, etc) affect your underlying Therapy Settings you may need to manually adjust those settings.</li> </ul> </li> </ul> </li> <li>This LoopTips 3-page section on Settings is recommended.</li> </ul> <p>Perhaps in subsequent versions of Loop, auto-adjustment of settings or machine learning could be incorporated. Until then, you will need to tell Loop if your underlying settings change or make temporary adjustments for short term issues.</p> <p>The use of Overrides can be quite helpful for short-term changes.</p>"},{"location":"faqs/algorithm-faqs/#what-does-negative-active-insulin-mean","title":"What does negative Active Insulin mean?","text":"<p>When Loop withholds or suspends some of your scheduled basal insulin, that starts an accumulation of insulin deficit. If you have a kinked cannula and insulin is not delivered, you'd call yourself \"lacking insulin\" (negative IOB).</p> <p>When Loop reports negative IOB, it is a sign that Loop has been actively helping you prevent a low blood sugar. If you find significant negative IOB regularly, you probably need to adjust/test your settings. Glucose that continues to decrease (away from a meal) when IOB goes negative is typically a sign that the scheduled basal rate is too high.</p> <p>Developer Notes</p> <p>Scheduled basal rates are meant to counteract your endogenous glucose production. Another way of saying this is that Loop expects your body to be producing an amount of glucose at a rate that is handled by your basal insulin settings.</p> <p>Your body doesn't really produce glucose at a fixed rate, but that's how it's modeled in Loop.</p> <p>\"All models are wrong, but some are useful.\" (Quote attributed to British statistician George E. P. Box.)</p>"},{"location":"faqs/algorithm-faqs/#how-is-iob-calculated","title":"How is IOB calculated?","text":"<p>Insulin on board (IOB) is calculated from the amount of insulin delivered above or below the scheduled basal rate. For each dose of insulin, the insulin model is used to determine how much of that insulin is active over time. Loop is adding up all the amounts over the full Duration of Insulin Action (DIA). The DIA is 6 hours for most rapid insulin in the models used by Loop.</p> <p>IOB is plotted on the Active Insulin Chart in the main Loop display.</p>"},{"location":"faqs/algorithm-faqs/#more-algorithm-information","title":"More Algorithm Information","text":"<p>There is more detail about the Loop Algorithm at the bottom of the Operate tab.</p> <ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Automatic Adjustments</li> </ul> </li> </ul>"},{"location":"faqs/apple-health-faqs/","title":"Apple Health FAQs","text":""},{"location":"faqs/apple-health-faqs/#how-does-loop-use-apple-healthkit","title":"How does Loop use Apple HealthKit?","text":"<p>Loop uses Apple HealthKit as long term storage for glucose, insulin and carbohydrates.  But there is more going on than simple storage.</p> <p>It is important that permissions for Loop be properly configured for the Health app.</p> <ul> <li>Loop 2.2.x: See Health Permissions</li> <li>Loop 3: See Apple Health Permissions</li> </ul> <p>To view the list of data stored in Health</p> <ul> <li>Tap on the Health  icon to open the app</li> <li>Tap on Blood Glucose, Carbohydrates or Insulin</li> <li>Scroll all the way to the bottom</li> <li>Tap on Show All Data</li> </ul> <p>To Set Blood Glucose, Carbohydrates and Insulin as Favorites</p> <ul> <li>Tap on the Health  icon to open the app</li> <li>There's a toolbar at the bottom of the screen (always visible in the app)</li> <li>Tap on the Browse icon (bottom right of toolbar)</li> <li>Tap on<ul> <li>Other Data for Blood Glucose and Insulin</li> <li>Nutrition for Carbohydrates</li> </ul> </li> <li>Tap each item, scroll down to Options section and tap on Add to Favorite</li> <li>Repeat until all three are added</li> <li>Tap on the Summary (bottom left icon of toolbar); Favorites show up first</li> </ul>"},{"location":"faqs/apple-health-faqs/#healthkit-plots","title":"HealthKit Plots","text":"<p>The health app on the Loop phone provides useful plots of data since you started to Loop with that Apple ID. Examples for insulin delivery and carbohydrates are shown in the graphic below. New versions of iOS modified details of the display with the same or improved capabilities. </p> <p></p>"},{"location":"faqs/apple-health-faqs/#healthkit-details","title":"HealthKit Details","text":""},{"location":"faqs/apple-health-faqs/#glucose-and-apple-healthkit","title":"Glucose and Apple HealthKit","text":"<p>For Dexcom users with the Dexcom app on the Loop phone, the Dexcom app writes the value to Health with a 3-hour delay.</p> <p>Loop reads the Dexcom information at the same time the Dexcom app gets the reading from the transmitter. It uses the glucose value to update predictions and stores it in Health.</p> <p>If you look at your Health glucose readings, you'll notice the Loop icon for the last 3 hours and the Dexcom icon for times earlier than that.</p> <p>All other CGM readings are reported with the Loop icon and there is no transition after 3 hours.</p> <p>You may also notice that the Dexcom numbers get smoothed out. For example, the Dexcom readings, when they first are read from the transmitter may bounce up and down a bit. The Dexcom app will retrospectively smooth the numbers, changing what is displayed in their app compared to the original reading. The last 3 hours of data from Loop does not show that smoothing - it reports the value sent by the transmitter. If you suspect a sensor is not behaving well, check the Loop glucose plots compared to the Dexcom plots to assist in your evaluation. It might be time to confirm glucose with a fingerstick meter as well.</p>"},{"location":"faqs/apple-health-faqs/#carbohydrates-and-apple-healthkit","title":"Carbohydrates and Apple HealthKit","text":"<p>In Loop 2.2.x, if you set Apple Health app permissions to allow it, Loop will read carbohydrates from the Health app. If you give a third-party app permission to store carbohydrate data in Health, and do not realize that Loop reads that information, you might get unexpected insulin delivery based off those carbs. To avoid that unanticipated behavior, the directions tell you to set permissions to allow Loop to write to carbohydrate storage but not read.</p> <p>In Loop 3, the option to read from Health carbohydrates is explicitly disabled and can only be enabled by setting up special parameters when you build the app. The insructions for the code customization are not in LoopDocs yet. If it is important to you to use a third-party app to record carbohydrates and have Loop read the information and automatically dose with insulin, ask for help in zulipchat.</p>"},{"location":"faqs/apple-health-faqs/#insulin-and-apple-healthkit","title":"Insulin and Apple HealthKit","text":"<p>The relationship between Loop and Apple HealthKit is very important to understand if you ever need to do one of these actions:</p> <ul> <li>Dose insulin from another source (injection, smart pen)</li> <li>Remove insulin that wasn't really given (failed site or forgot to reattach a tubed pump)</li> </ul> <p>Be Cautious</p> <p>Allowing users to delete events is fairly risky. If a user deletes a dose accidentally, or does not understand the IOB impact while in Closed Loop, then Loop may start giving insulin that is not needed.</p> <p>One method to deal with insulin that wasn't given is to go Open Loop for 3 to 6 hours. However, if you take care, you can remove insulin from Loop.</p> <p>Developer Notes: Pump Events and Insulin Delivery</p> <p>Loop stores Pump Events separately from Insulin Delivery. With permissions set to allow Loop to read insulin from Health (recommended), the Insulin Delivery store contains doses entered from Health as well as the subset of pump events that represent doses.</p> <p>Pump Events are displayed by tapping an insulin chart on the main screen and viewing the Event History tab.</p> <p>When you delete a pump event using the Event History interface in Loop, the associated entry in Insulin Delivery is not deleted.</p>"},{"location":"faqs/apple-health-faqs/#bolus","title":"Bolus","text":"<ul> <li>When Loop commands the pump to provide a bolus, either manual or automatic, it is shown in the Loop Event History and in the Health app insulin data list<ul> <li>It may take a Loop Cycle or two to show up in Health, but it will appear</li> </ul> </li> <li>When you add insulin, such as from an injection, to the Health app, Loop reads it and adds it to IOB<ul> <li>It will not be added to the Event History because this is not a pump event</li> <li>Loop 3 adds a new feature that allows you to add non-pump insulin from within the app instead of requiring you to add it inside the Health app</li> </ul> </li> <li>If you delete an entry from the Loop Event History list, but leave that same entry in Health, Loop reads it back from Health<ul> <li>It will not show up in the Event History, but it will still contribute to IOB</li> <li>You must delete a pump event from both Loop Event History and Health data; it is best if you do this within one Loop Cycle</li> <li>If that dose showed up in Event History but you could not find it in Health, look again after the next Loop cycle</li> </ul> </li> <li>If you delete an entry from Health, but leave that same entry in Loop Event History, Loop reports it to Health again<ul> <li>You must delete a pump event from both the Loop Event History list and Health data; it is best if you do this within one Loop Cycle</li> </ul> </li> </ul> <p>Pro Tip</p> <p>Write on a piece of paper the times and values you think you should delete.</p> <p>Look at those values in both Loop Event History and Health Insulin data list.</p> <p>Record what Loop is reporting as IOB.</p> <p>Review the values one more time, and then delete those entries in both places. Review IOB again. If you made a mistake, you can refer to that written list and adjust appropriately.</p>"},{"location":"faqs/apple-health-faqs/#basal","title":"Basal","text":"<p>Loop keeps track of how much basal is delivered so the IOB is properly reported. In older versions of Loop, there may be occasional display glitches, but the internal accounting is correct and updates every Loop Cycle.</p> <p>Developer Notes: Scheduled Basal is Not a Pump Event</p> <p>Scheduled basal is not a pump event so you will not see it listed in the Event History tab.</p> <p>Scheduled basal does not affect IOB when delivered as scheduled.</p> <p>The Insulin Delivery store keeps track of the insulin delivered via scheduled basal.</p> <p>Loop updates the amount of insulin delivered through basal (both scheduled and temporary) to Health at regular intervals - this does not happen every Loop Cycle when basal rates are not changing. The updates to Health happen:</p> <ul> <li>At midnight</li> <li>When the scheduled basal rate changes</li> <li>When a temporary basal rate changes</li> </ul> <p>A simple example to illustrate this - for a pump with smallest insulin delivery of 0.05 U:</p>  Schedule  Temp Basal (TB)  Health Explanation 12:00 AM0.4 U/hr --- --- Start of Day / Start of Example 06:00 AM0.5 U/hr --- 06:00 AMBasal2.4 U Loop reports insulin delivered by basal for the last 6 hours when the scheduled basal rate has a new entry --- 07:15 AM0.0 U/hr 07:15 AMBasal0.6 U Loop reports insulin delivered by basal since last report up to time TB starts --- 07:45 AMTB expires 07:45 AMBasal0 U No insulin was delivered during TB 08:00 AM0.4 U/hr --- 08:00 AMBasal0.1 U Loop reports insulin delivered by basal since last report; the scheduled basal rate has a new entry"},{"location":"faqs/apple-health-faqs/#tidepool-and-apple-healthkit","title":"Tidepool and Apple HealthKit","text":"<p>If you have a Tidepool account and use the Tidepool uploader on your Loop phone, the data in Health is uploaded to your Tidepool database where you can view displays with the Tidepool web browser tool.</p>"},{"location":"faqs/apple-health-faqs/#how-do-i-modify-apple-healthkit-permissions","title":"How Do I Modify Apple HealthKit Permissions","text":"<p>You can review the Apple HealthKit permissions screen at any time.  </p> <p>Simply open the Apple Health app ( icon)</p> <ul> <li>Find the toolbar at the bottom that says Sharing</li> <li>Scroll to the bottom of Sharing</li> <li>Select Apps</li> <li>Select Loop</li> </ul> <p>At this point, you can review and modify the settings.</p>"},{"location":"faqs/apple-health-faqs/#how-do-i-change-glucose-units","title":"How Do I Change Glucose Units?","text":"<p>The glucose units (mg/dL or mmol/L) Loop uses match what is in Apple Health. Once you connect a device that reports glucose to the phone, make sure the units match the device. Note - you can change units for Dexcom Share and it translates units for you - not sure about other devices.</p> <ul> <li>These instructions to change Blood Glucose units are for iOS 15<ul> <li>Select the Health app (Heart icon)</li> <li>There's a toolbar at the bottom - select Browse</li> <li>Scroll to find Vitals</li> <li>Select Blood Glucose</li> <li>Scroll to the bottom and select Unit</li> <li>Tap on Unit, if it isn't right, and select the correct units</li> <li>While you are there - go on and select Blood Glucose as a Favorite - it will be easier to find next time</li> </ul> </li> </ul>"},{"location":"faqs/cgm-faqs/","title":"CGM FAQs","text":""},{"location":"faqs/cgm-faqs/#what-cgms-does-loop-work-with","title":"What CGMs does Loop work with?","text":"<p>Loop 3 supports G5, G6, G7, Dexcom ONE, Dexcom Share, Nightscout and the Medtronic CGM systems compatible with Looping pumps. Loop and Learn: Loop Customization can be used which adds support for some Libre sensors.</p> <p>Loop 2.2.x supports Dexcom G4 with share, G5, G6, Dexcom ONE, Dexcom Share and the Medtronic CGM systems compatible with Looping pumps.</p> <p>There are more details on the Compatible CGM page.</p>"},{"location":"faqs/cgm-faqs/#do-i-need-wait-for-a-new-sensor-session-to-start-loop","title":"Do I need wait for a new sensor session to start Loop?","text":"<p>No, you can start Looping mid-sensor session. There's no need to do anything special with regards to your CGM session when starting or ending Loop use.</p>"},{"location":"faqs/cgm-faqs/#what-do-i-do-when-sensor-is-in-warm-up","title":"What do I do when sensor is in warm-up?","text":"<p>Loop will stop automatically adjusting insulin when the most recent glucose value is older than 15 minutes.  This is indicated by seeing three dashes in place of the glucose reading on the HUD.</p> <ul> <li> <p>With Loop 2.2.x or Loop 3, enter a fingerstick glucose value in Apple Health to enable Loop to provide updated projections and loop briefly</p> </li> <li> <p>With Loop 3, a HUD status row message of <code>No Recent Glucose</code> is displayed, making it easier to add the fingerstick value directly in Loop, which also saves it in Apple Health</p> </li> </ul> <p>With no recent glucose readings, your pump returns to the scheduled basal delivery (within 30 min or less).</p> <p>Loop continues to accept manual bolus commands. With Loop 3 only, Manual Temp Basal can also be commanded.</p>"},{"location":"faqs/cgm-faqs/#what-do-i-do-when-i-switch-dexcom-transmitters","title":"What do I do when I switch Dexcom transmitters?","text":"<p>When you change transmitters (prior to Dexcom G7), you will need to update the transmitter ID in your Loop settings. The instructions for Dexcom are provided below:</p> <ul> <li>In Loop, select the <code>Delete CGM</code> button at the very bottom of the CGM info page<ul> <li>You cannot just edit the line with your old transmitter ID</li> </ul> </li> <li>It's a good idea to go into your phone Bluetooth settings and delete the old Dexcom transmitter<ul> <li>The transmitter starts with Dexcom and ends with the last 2 characters of your old transmitter ID</li> <li>Tap on the (i) next to <code>Not Connected</code> and select <code>Forget This Device</code></li> </ul> </li> <li>Follow the Dexcom instructions for pairing the new transmitter</li> <li>After pairing completes with Dexcom:<ul> <li>In Loop, add CGM and select the Dexcom system again</li> <li>Enter the new transmitter ID</li> <li>If you're unsure where to find your transmitter ID, see Where to get the Transmitter ID for Dexcom G6?</li> </ul> </li> </ul> <p></p> <p>If you don't update your transmitter ID when you change active transmitters, and you included your Dexcom share credentials, then Loop uses your Dexcom Share server to get your CGM data and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the BG reading in Loop and should tip you off that maybe you forgot to update your transmitter ID. It's best not to enter Share Credentials. This makes it really obvious that you need to update the CGM settings in Loop at transmitter change time.</p>"},{"location":"faqs/cgm-faqs/#dexcom-g7","title":"Dexcom G7","text":"<p>With Dexcom G7, Loop automatically picks up the active sensor/transmitter pair from the Dexcom G7 app on the phone. Once Dexcom G7 is added to Loop as the CGM, the Looper does not need to do anything to Loop after selecting the new sensor/transmitter pair in the Dexcom G7 app.</p>"},{"location":"faqs/cgm-faqs/#dexcom-g5-g6-and-one","title":"Dexcom G5, G6 and ONE","text":"<p>The diagram below illustrates the steps needed to switch transmitters on Dexcom G5, G6, and ONE. This typically needs to be done every three months when a new transmitter is started.</p> <pre><code>sequenceDiagram\n    actor       user     as User\n    participant dexcom   as Dexcom App\n    participant loop_app as Loop App\n\n    autonumber\n    user     -&gt;&gt;  loop_app: Delete CGM\n    user     -&gt;&gt;  dexcom:   Stop old Sensor\n    activate      dexcom\n    Note over     dexcom:   Switching sensors and transmitters... \u23f1\ufe0f\n    user     --&gt;&gt; user:     Remove old Sensor and old Transmitter\n    user     -&gt;&gt;  dexcom:   Enter/Scan new Transmitter ID\n    user     -&gt;&gt;  dexcom:   Enter/Scan new Sensor Code\n    user     --&gt;&gt; user:     Insert new Sensor then attach new transmitter\n    user     -&gt;&gt;  dexcom:   Pair then Start new Sensor\n    deactivate    dexcom\n    dexcom   --&gt;&gt; user:     New Sensor warming up... \n    activate      dexcom\n    Note over     dexcom:   New sensor warmup... \u23f1\ufe0f\n    user     -&gt;&gt;  loop_app: Add CGM\n    user     -&gt;&gt;  loop_app: Enter new Transmitter Serial Number\n    dexcom   --&gt;&gt; user:     New Sensor operational\n    deactivate dexcom</code></pre>"},{"location":"faqs/cgm-faqs/#can-i-use-libre-sensors-with-a-reader-like-miao-miao","title":"Can I use Libre sensors with a reader like Miao Miao?","text":"<p>If you want to use a Libre sensor you will need to modify Loop to accomplish that use. Loop code does not natively support that sensor, nor readers.</p> <p>With Loop 3, a customization can be used to support some Libre sensor CGM.</p> <p>Please refer to Loop and Learn: Loop 3 with Customization</p>"},{"location":"faqs/cgm-faqs/#can-i-use-eversense","title":"Can I use Eversense?","text":"<p>Eversense does not write to Apple Health. The BT communications protocol been not been reverse engineered as was done with Dexcom. There is a method to upload Eversense to Nightscout using an Android phone.</p> <p>With Loop 3, you can use Nightscout as a CGM to Loop with Eversense, but that requires internet access.</p>"},{"location":"faqs/cgm-faqs/#can-loop-read-cgm-data-from-nightscout","title":"Can Loop read CGM data from Nightscout?","text":"<p>The released version of Loop can read CGM data from Nightscout.</p> <p>The older Loop 2.2.x does not read CGM data from Nightscout.</p>"},{"location":"faqs/cgm-faqs/#what-other-cgm-apps-can-be-used-to-loop","title":"What other CGM apps can be used to Loop?","text":"<p>You can add xDrip4iOS and GlucoseDirect as a CGM option to Loop by applying a code customization. This customization is included in Loop with Patches, which is offered as an option in the Build Select Script.</p> <p>Please read the docs for xDrip4iOS and Glucose Direct. You must build these apps yourself to Loop; you cannot use the TestFlight pre-built versions.</p> <p>If you are willing to build a development version of Loop, there is a libre branch that incorporates LibreTransmitter into the Loop app itself. Please read about Loop Development before building the libre branch.</p>"},{"location":"faqs/glossary/","title":"Glossary","text":"<p>Each item in the glossary is also a Tooltip.</p> <p>A Tooltip is visible as a dashed underline word or phrase.</p> <p>If you hover your mouse or tap on a mobile device, the phrase associated with each word is displayed.</p> <p>Actions: a custom application for the GitHub Actions platform that performs a complex but frequently repeated task; specifically used to build Loop from a browser</p> <p>Activated: for Omnipod: time at which insulin was injected into pod and 2 beeps were heard</p> <p>Anchor Links: any header on a LoopDocs page can be used as a link, tap on the paragraph symbol at the end of the header to view the link in the URL</p> <p>API_SECRET: password (min 12 characters) needed to access Nightscout Site</p> <p>API: Application Programming Interface</p> <p>APN: Apple Push Notification service, required for issuing remote command via Nightscout</p> <p>App Group: a unique identifier that Apple users for a given app, yours has your TEAMID embedded in it, group.com.TEAMID.loopkit.LoopGroup</p> <p>Automatic Bolus: provide a fraction of the recommended insulin automatically with each updated CGM reading (default 40%)</p> <p>BAGE: pump battery age on Nightscout site</p> <p>Big Sur: older version for operating system for Mac, macOS 11.x</p> <p>BLE: Bluetooth low energy, used for communication by phones, CGM and some pumps</p> <p>Build Select Script: by running a command in your terminal, this menu-driven tool assists in building Loop</p> <p>branch: version of code within a single repository or workspace repository</p> <p>CAGE: cannula (or pump site) age on Nightscout site</p> <p>carthage: a program that used to be required to build Loop - no longer needed</p> <p>Catalina: older version for operating system for Mac, macOS 10.x</p> <p>Certificate: Apple certificate is used to sign your iOS or Mac apps - tied to but different from your permanent Developer ID</p> <p>CGM: continuous glucose monitor, wearable medical device that measures and reports glucose in interstitial fluid</p> <p>Closed Loop: Loop will make automated adjustments of insulin delivery using predictions based off user entries, settings, IOB and COB</p> <p>clone: create a copy of a repository on your computer including revision history and ability to update using git commands</p> <p>COB: Carbs on Board, affects automated insulin delivery: the g of carbohydrates that Loop expects to be absorbed and uses for glucose prediction</p> <p>commit: a formal change to files in a repository; each commit has an alphanumeric identifier (SHA-1)</p> <p>Config Vars: configuration parameters for a Nightscout Site</p> <p>Correction Factor: how many points your blood sugar will drop for each unit of insulin; Loop calls this Insulin Sensitivity Factor (ISF)</p> <p>Correction Range: Loop recommends changes to basal and / or bolus to bring glucose predictions into this range</p> <p>CR: Carb Ratio; how many grams of carbs are covered by one unit of rapid-acting insulin</p> <p>Delivery Limits: max bolus and max basal rates allowed by your therapy settings</p> <p>DIA: Duration of Insulin Action, the full time insulin is active including a long, low-level tail</p> <p>DIY: Do it yourself, a common acronym for the open-source software community (and the maker community)</p> <p>Dosing Strategy: chosen method for increased insulin dosing: (1) High Temp Basal or (2) Automatic Bolus with scheduled basal</p> <p>dynos: used to reboot a Nightscout Site</p> <p>EmaLink: radio-frequency device Loop uses to control Eros pods (aka. Gen 3) and older Medtronic pumps</p> <p>Event History: record of pump events (bolus or temp basal) reported and used by Loop</p> <p>Expiration Date: your Loop app has a finite life, the app warns you starting 3 weeks before the expiration date</p> <p>fastlane: used as part of the github Build Action method that enables building Loop without a Mac computer or Xcode</p> <p>Finder: graphical folder and file display on Mac</p> <p>fork: a copy of code in a github repository other than the original</p> <p>GIF: Graphics Interchange Format (GIF) can be used for small animations and low-resolution video clips</p> <p>git: a tool for version control</p> <p>GitHub: an online service for storing repositories, accessible from a browser</p> <p>github.com: an online service for storing repositories, accessible from a browser</p> <p>GitHub Personal Access Token: used to enable Browser Build of Loop</p> <p>Glucose Chart: Display of measured and predicted glucose values</p> <p>Glucose Safety Limit: Loop will not suggest insulin delivery when glucose prediction (in next 3 hours) goes below this limit; in Loop 2 this was called Suspend Threshold</p> <p>GMT: Greenwich Mean Time is mean (average) solar time at 0 degrees longitude, see UTC</p> <p>Guardrails: limits in the code for user selected settings, recommended and absolute limits are provided</p> <p>Hamburger Menu: three parallel lines that, when tapped, open a new menu</p> <p>HUD: Heads-Up Display at top of Loop main screen, phone in portrait mode</p> <p>ICE: Insulin Counteraction Effect - Loop models the expected glucose change based on carbs entered, absorption time and your settings; and adjusts based on measured glucose</p> <p>Identifiers: names of modules found on your Apple Developer Identifiers page that are required for GitHub build method</p> <p>IOB: Insulin on Board, affects automated insulin delivery: the current active insulin (above or below the basal rate) that Loop calculates and uses for glucose prediction</p> <p>iOS: operating system used by Apple Mobile devices (iPhone, iPod)</p> <p>ISF: Insulin Sensitivity Factor; how many points your blood sugar will drop for each unit of insulin; sometimes called Correction Factor</p> <p>Issue: On github - a formal method to report a problem, either code behavior or documentation</p> <p>JSON: JavaScript Object Notation; a standard data interchange format that is text-based and human readable</p> <p>macOS: operating system for Mac computer</p> <p>Lock your Phone: click the button on the side of the phone to lock it - prevent accidental touch, i.e., accidental Loop command</p> <p>Loop 3: Latest release with major updates</p> <p>Loop Cycle: typically 5 minutes: new CGM reading, prediction update, pump update and, if in Closed Loop, dosing update if needed</p> <p>Match-Secrets: a private repository you must create in your github account, stores keys required to build with github Build Actions</p> <p>MTB: Manual Temp Basal: user initiated temporary basal, Omnipod Common feature</p> <p>MDT: common abbreviation for Medtronic pumps</p> <p>modal: message or alert appearing in front of app that must be acknowledged to return to app</p> <p>Modules: the Loop code uses a number of modules to handle different components of the entire app</p> <p>Monterey: operating system for Mac, macOS 12.x</p> <p>Onboarding: familiarize new, and existing, Loop users with settings in Loop 3 and ensure the Therapy Settings are all entered and are within safety guardrails</p> <p>Omnipod: Insulet tubeless insulin pump; Loop supports Eros (with RileyLink) and DASH.  Eros is also known as Classic, UST400, and System.</p> <p>Open Loop: Loop will not make automated adjustments of insulin delivery but all prediction and recommendation features are available</p> <p>OrangeLink: radio-frequency device Loop uses to control Eros pods (aka. Gen 3) and older Medtronic pumps</p> <p>OTP: one-time password, this is used to enable caregivers to securely execute remote commands to a Looper's phone</p> <p>Override: a modification to Loop settings that can change the correction range, the sensitivity (basal, ISF and CR) or both</p> <p>Package Dependencies: packages that must be downloaded by Xcode (once) to build the app after downloading the LoopWorkspace to your computer</p> <p>pill: on Nightscout, small boxes with information, tap for extra details</p> <p>PR: Pull Request - a formal method to request changes to a repository</p> <p>prebolus: take some or all of a meal bolus before eating</p> <p>Pre-Meal Range: modify the correction range for up to one hour by tapping on an icon in the toolbar</p> <p>Provisioning Profile: associates your app with your Developer ID and limits app lifetime to 1 year (paid) or 1 week (free)</p> <p>Pull Request: formal method to request changes to a repository</p> <p>Quit the Loop App: quit out of the app - different from closing the app - typically you swipe up in the app switcher</p> <p>repository: contains project files and each file's revision history</p> <p>RileyLink: radio-frequency device Loop uses to control Eros pods (aka. Gen 3) and older Medtronic pumps</p> <p>SAGE: sensor age on Nightscout site</p> <p>Secrets: a method to securely embed personal information into your fork of LoopWorkspace to enable GitHub to have access required to build Loop</p> <p>TEAMID: One of 6 Secrets: Apple Developer account member number</p> <p>FASTLANE_ISSUER_ID: One of 6 Secrets: the issuer ID is associated with your Apple Developer ID and never changes</p> <p>FASTLANE_KEY_ID: One of 6 Secrets: Key ID provided when you create an API key in App Store Connect; it is associated with the FASTLANE_KEY</p> <p>FASTLANE_KEY: One of 6 Secrets: Really long key (several lines); it and FASTLANE_KEY_ID are generated together</p> <p>GH_PAT: One of 6 Secrets: Generated with your GitHub account; set it to never expire</p> <p>MATCH_PASSWORD: One of 6 Secrets: password you make up but must save and cannot change without deleting the Match-Secrets repository</p> <p>SHA-1: Secure Hash Algorithm 1; used to generate an alphanumeric code for commits in git (github)</p> <p>Sign Targets: associate a Developer ID with an app; must sign all targets for a given app</p> <p>submodules: for Loop, submodules are repositories defined in the Workspace repository that are required to build the app</p> <p>Table of Contents: (TOC) is the list of level 2 and 3 headers on a given page; the title at the top of the page is a level 1 header</p> <p>Temp Basal Only: provide the recommended insulin automatically using an increase in temp basal over half an hour (limited by max temp basal)</p> <p>Terminal: interface for entering commands to the computer</p> <p>TestFlight: a method to distribute apps without direct connection</p> <p>Therapy Settings: Basal Rates, ISF, CR, correction and safety ranges and delivery limits</p> <p>Tokens: on Nightscout, configure access permissions using tokens</p> <p>Tooltip: brief definitions provided for important terms and abbreviations on the website</p> <p>URL: website address (Uniform Resource Locator)</p> <p>UTC: Coordinated Universal Time is a time standard for civil time and time zones worldwide</p> <p>Ventura: operating system for Mac, macOS 13.x</p> <p>watchOS: Apple watch operating system; must be compatible with phone iOS</p> <p>workflow: a set of instructions to GitHub to perform an action; the instruction files are found in the .github/workflows folder of the repository</p> <p>Workspace: a grouping of several repositories into a complete package</p> <p>Xcode Preferences: older name for Xcode Settings</p> <p>Xcode Settings: as of Xcode 14, Xcode menu uses Settings instead of Preferences</p> <p>Xcode: program used to build an app</p>"},{"location":"faqs/omnipod-faqs/","title":"Omnipod FAQs","text":""},{"location":"faqs/omnipod-faqs/#is-omnipod-supported-on-loop","title":"Is Omnipod supported on Loop?","text":"<p>Yes.</p>"},{"location":"faqs/omnipod-faqs/#which-pods-work-with-loop","title":"Which pods work with Loop?","text":"<p>You can use some Omnipod pods with Loop. You do not need the Omnipod Personal Diabetes Manager (PDM), just the pod supplies. Your insurance or pharmacy coverage may cover some of the cost.</p> <p>Check your app version by tapping on Loop settings and reading it from the top of the screen.</p> <ul> <li>Version 2.3 or newer supports Omnipod Eros and DASH pumps (and some older Medtronic pumps)</li> <li>Version 2.2.x or earlier supports Omnipod Eros pumps (and some older Medtronic pumps)</li> </ul> <p>Alternative Names for Omnipod Eros Pump and Pods</p> <p>Eros pump is also known as Classic, or UST400, or Omnipod Insulin Management System.  </p> <p>Pharmacy sites sometimes may refer to the Eros pods as Gen 3 but they are the same exact pods. </p> <p>DASH pumps do not require a RileyLink compatible device.</p> <p>Omnipod 5 is not supported by any version of Loop.</p>"},{"location":"faqs/omnipod-faqs/#what-about-tidepool-loop","title":"What about Tidepool Loop?","text":"<p>Tidepool Loop was approved by the FDA in Jan 2023, but at the current time there are no announced pump or CGM partners. What does this mean?</p> <p>Tidepool Loop, cleared by the FDA, is the first:</p> <ul> <li>App that provides automated insulin dosing and is configured to be fully interoperable with pump and CGM partners</li> <li>App that originated as a patient-led intiative</li> </ul> <p>With this approval, there is now an FDA approved pathway for independent selection of an app, a pump and a CGM. Stay tuned for updates at https://tidepool.org/tidepool-loop.</p>"},{"location":"faqs/omnipod-faqs/#do-i-still-need-a-pdm-with-omnipod-loop","title":"Do I still need a PDM with Omnipod Loop?","text":"<p>No, pods are monogamous little creatures. They will pair with only one device at a time for safety reasons...so a pod is either paired with a PDM or your Loop app on your iPhone. In other words, your PDM can stay in the diabetes closet while you are Looping. You cannot use the PDM for a pod that has been activated with Loop. That doesn't mean you should get rid of your PDM. Instead, keep it for backup situations if you lose your phone. See below for what to do if you lose your phone or RileyLink.</p>"},{"location":"faqs/omnipod-faqs/#can-i-cancel-a-bolus","title":"Can I cancel a bolus?","text":"<p>Yes, you can cancel a bolus in progress. In fact, because it is very easy to cancel, make sure your phone is locked prior to being put away to avoid inadvertently cancelling a bolus. (This behavior is very similar to the Insulet PDM - which also needs to be locked once a bolus has started.)</p> <p>As soon as a bolus is initiated, look at your phone in portrait orientation.  You will see a bolus message indicating the progress of the bolus. This message is highlighted with a red rectangle in the graphic below. If you tap on this part of the display, the bolus is immediately cancelled.</p> <ul> <li>The displayed amount <code>Bolused</code> is based on the time since the bolus was started</li> <li>Loop will present that graphic for the entire time the bolus is in progress with the delivery amount updated based on time</li> <li>Once the bolus completes, Loop updates the actual delivery amount based on communication with the pod (taking into account any interruption of that bolus from the user or a pod error)</li> </ul> <p></p>"},{"location":"faqs/omnipod-faqs/#can-i-cancel-a-temp-basal","title":"Can I cancel a temp basal?","text":""},{"location":"faqs/omnipod-faqs/#cancel-temp-basal-with-loop-3","title":"Cancel Temp Basal with Loop 3","text":"<p>With Loop 3, disabling the setting for Closed Loop immediately restores the basal rate on the pump to the scheduled basal rate, which effectively cancels the temp basal.</p> <p>You can tap on disable Closed Loop and then immediately tap on enable Closed Loop if all you want to do is cancel the current temp basal. If you do restore Closed Loop, then Loop will resume automatic insulin delivery adjustments within 5 minutes.</p> <p>Bolus in progress</p> <p>Even if a bolus is in progress, you can still switch to Open Loop and restore scheduled basal. The current bolus continues unless you separately cancel the bolus.</p>"},{"location":"faqs/omnipod-faqs/#cancel-temp-basal-with-loop-v22x","title":"Cancel Temp Basal with Loop v2.2.x","text":"<p>If you are running Loop v2.2.x, the method for canceling a temp basal is to suspend the pump and then resume delivery. This also interrupts any bolus that might be in progress.</p> <p>Be sure to follow the suspend with the resume command. Otherwise, all insulin delivery is stopped and remains stopped until the user either clicks on the \"Tap to Resume\" command from the main screen or the \"resume delivery\" command accessed in the pump settings display. The resume insulin delivery command returns insulin delivery to your scheduled basal rate.</p> <p>If a bolus was interrupted, the bolus will not resume.</p> <p>As long as you are in closed loop mode, Loop will resume automatic insulin delivery adjustments within 5 minutes.</p>"},{"location":"faqs/omnipod-faqs/#can-i-set-my-own-temp-basal-on-loop","title":"Can I set my own temp basal on Loop?","text":"<p>Loop 3 provides a Manual Temp Basal feature.</p> <p>Loop 2.2.x does not allow you to pick your own temp basal rate.</p>"},{"location":"faqs/omnipod-faqs/#what-if-i-lose-my-phone-or-rileylink","title":"What if I lose my phone or RileyLink?","text":"<p>For pod users, your pod will finish any currently running temporary basal rate and then revert back to your scheduled basal rate. Without a phone or RileyLink, however, you will not be able to affect any pod use; no basal change, suspend, cancel, or bolus. To do anything other than let basals continue, you will need to take action depending on the situation.</p> <ul> <li> <p>Lost RileyLink only: You can replace your missing RileyLink with one from your backup supplies. No problem to switch out to a different Rileylink mid-pod session. If you don't have a backup RileyLink to use, then you will need to remove the pod and put on a new pod paired with your PDM until you can get a new RileyLink. In the interim, you are still getting basal from the pod. If you are taking bolus insulin via injection, just add it to Apple Health under insulin. Loop will read it and keep making predictions for you. Once you inject, then add the carbs that go with that injection into Loop.</p> </li> <li> <p>Lost iPhone only: You will need to remove the pod and put on a new pod paired with your PDM until you can get a new phone and Loop app built onto it. In the interim, the pod will continue to deliver your scheduled basal until the pod reaches 80 hours. See Updating FAQs for New Phone for more information.</p> </li> <li> <p>Lost both RileyLink and phone: You're having a really bad day. You'll need a hug and to follow the same directions as if you lost the phone as shown in the bullet above.</p> </li> </ul>"},{"location":"faqs/omnipod-faqs/#is-there-an-increase-in-pod-failures-on-loop","title":"Is there an increase in pod failures on Loop?","text":"<p>There is more communication between the pod and the controller (your Loop phone) than is typical with the PDM (Insulet provided controller), which increases the load on the pod battery. Most people have no increase in pod failures, but there are steps to take to limit \"extra pod battery use\". Every time the Loop app requests an update of the pod state or issues a command (bolus, basal schedule, temp basal), messages are exchanged with the pod.</p> <ul> <li>Set your correction range to be 10 to 20 mg/dL (0.5 to 1.1 mmol/L) instead of a single number<ul> <li>The number of commands will be reduced</li> </ul> </li> <li>Keep your Loop app in the background or your phone locked when possible<ul> <li>This protects against accidentally issuing a command</li> <li>When phone is unlocked and Loop is in the foreground:<ul> <li>Loop 3 updates the pod state every 30 sec (DASH) or 60 sec (Eros) in the foreground, compared to every 3 (DASH) or 5 (Eros) minutes in the background</li> <li>Loop 2.2.x updates the pod state when CGM updates (approximately 5 minutes) - same as when app is in the background</li> </ul> </li> <li>Use an alternate display method such as Nightscout or Loop Follow instead of keeping the Loopers phone unlocked with Loop app open</li> </ul> </li> </ul>"},{"location":"faqs/omnipod-faqs/#what-do-i-do-if-a-pod-fails-to-pair","title":"What do I do if a pod fails to pair?","text":"<p>If you get a pod that is failing to pair, please see this page for steps on how to fix the problem. Follow these steps before filling and trying another pod. If the pod is not screaming, you can probably recover it.</p>"},{"location":"faqs/omnipod-faqs/#what-do-you-do-to-stop-a-screaming-pod","title":"What do you do to stop a screaming pod?","text":"<p>Screaming pods indicate the pod is out of insulin or out of time (80 hours) or there has been a critical pod fault.  In all these cases, there is no more delivery of insulin.</p> <p>The first step is to use your phone to <code>Deactivate</code> the pod. You may need to go to the pod settings and tap on the Replace Pod row or the app may take you to the screen with a Deactivate button directly. This only works if the app is able to communicate with the pod.  Sometimes this is not possible. After you attempt to deactivate two times, the app will \"discard\" the pod as active if communication fails and enable you to pair a new pod. But you still need to make that noise go away.</p> <p>If you are not successful at deactivating a pod and you've tried the steps at Reset-Loop-to-Pump-Communications, make sure the old pod is removed from the area before trying to connect a new pod. (Placing it in a microwave temporarily prevents the phone from detecting that pod.) The paperclip trick (next paragraph) only breaks the sound connection, the pod electronics is still active.</p> <p>Once you have removed the screaming pod, it can be silenced using a paperclip. Simply put the paperclip in the small hole that is on the bottom (the side opposite where the cannula is) of the pod as shown. Push the paperclip in until you hear a little click, that click is breaking the circuit that connects the speaker to the electronics.</p> <p></p>"},{"location":"faqs/overview-faqs/","title":"FAQs Overview","text":""},{"location":"faqs/overview-faqs/#frequently-asked-questions-faqs-overview","title":"Frequently Asked Questions (FAQs) Overview","text":"<p>The FAQs tab of LoopDocs contains pages with safety tips, frequently asked questions and the Glossary.</p> <p>Map to this section:</p> <ul> <li>Safety Tips</li> <li>Loop FAQs</li> <li>Time Change FAQs</li> <li>Omnipod FAQs</li> <li>CGM FAQs</li> <li>Update/Rebuild Loop FAQs</li> <li>RileyLink FAQs</li> <li>Algorithm FAQs</li> <li>Apple Health FAQs</li> <li>Glossary</li> </ul>"},{"location":"faqs/rileylink-faqs/","title":"RileyLink FAQs","text":""},{"location":"faqs/rileylink-faqs/#rileylink-compatible-device-faqs","title":"RileyLink Compatible Device FAQs","text":"<p>A RileyLink compatible device is a required part of Loop for Medtronic and Omnipod (Eros not DASH) pumps. The device uses the RileyLink protocol to communicate information to/from your pump by radio communications and to/from your iPhone using Bluetooth. You will need the device within range of your phone and pump so that these communications can happen. Put it in a purse, pocket, SPIbelt. Clip it to a backpack, belt, or bra...but please do bring it with you..</p> <p>Purchase information for these devices is found in RileyLink Compatible Devices</p>"},{"location":"faqs/rileylink-faqs/#adding-or-changing-rileylink","title":"Adding or Changing RileyLink","text":"<p>You can add or change the RileyLink compatible device in use without affecting the pump that is connected to the Loop app.  You can even have more than one connected, although only one will be used at a time.</p> <p>If you are connecting to a new Medtronic pump or switching between Medtronic and Omnipod, please follow the Modify Pump instructions under Set up App.</p> <p>Change Connected Devices:</p> <ul> <li>Open the Pump Menu for your connected pump</li> <li>Scroll down to the DEVICES section</li> <li>There should already be at least one device listed</li> <li>Power on your new device and look for a new device to appear in the list</li> <li>If this device has never been connected before, it might appear as a blank line with a slider beside it - if so, slide the slider to turn it green and then the device name should appear</li> <li>You can now turn sliders on or off to select which device you want to use with your connected pump</li> <li>Refer to the RileyLink Menu for instructions on personalizing your device name</li> </ul> <p></p>"},{"location":"faqs/rileylink-faqs/#using-more-than-one-device","title":"Using More Than One Device","text":"<p>You can have more than one RileyLink compatible device turned on and connected. Loop only uses one device at a time. Remember - if you do have two devices in use, make sure they are both charged (or have batteries).</p> <p>Example of using more than one device:</p> <ul> <li>One device is kept in the bedroom and another in the kitchen</li> <li>Loop will automatically switch to the device that is within Bluetooth range at the next cycle (Loop stays green)</li> <li>Caveats:<ul> <li>The phone needs to be close enough to get the CGM update</li> <li>Do NOT forget to pick up one RileyLink device and take it with you when you leave the house</li> </ul> </li> </ul>"},{"location":"faqs/rileylink-faqs/#communications","title":"Communications","text":"<p>All the RileyLink compatible devices communicate with the pump through radio frequency communications and with the phone through Bluetooth.</p> <p>Bluetooth (BT) Troubleshooting</p> <p>If your iPhone has BT issues, your Loop will have failures. There have been reports of BT audio devices (such as BT pairings in your car or home audio BT speakers) interfering with the Loop. If you are finding Loop failures frequently happening at a particular location, you may try to troubleshoot if there are BT problems in the area.</p> <p>Your BT signal strength can be seen in the Loop settings, Pump settings, Device menu, on the <code>Signal Strength</code> line. As you move closer and further away from your phone, you can watch that number dynamically change. This line is not displaying the signal strength of your pump RF communications, just BT between the RileyLink compatible device and the phone.</p> <p>You will notice the Signal Strength is a negative number and in units of dB. Remember that number line from elementary school?  A signal strength of -50\u00a0dB is a stronger signal than  -80\u00a0dB.</p> <p></p>"},{"location":"faqs/rileylink-faqs/#range","title":"Range","text":"<p>The range at which RileyLink compatible devices will function is dependent on the environment that you are in and the specific device design. Both the OrangeLink and some sizes of the EmaLink have reported longer ranges than RileyLink (typically 10 to 20 ft) - but they still need to be \"near enough\".</p> <p>What influences this distance for a given device? The biggest external influences are (1) body-blocking and (2) \"noisy\" environments. The human body is a lot of water, and water is an excellent blocker of wireless communication. So, sleeping on a pod and smothering it entirely with your body can decrease the ability of the device to communicate with the pod. Environments with a high concentration of wireless signals can also interfere with device communications and make closer proximity a benefit. Where might those kinds of situations happen? Concerts, conferences, and sporting arenas are pretty prone to interference.</p> <p>Many people keep their device on the same side of their body as their pump during the day. They use a pocket, carabiner, lanyard, SPIbelt - the options are endless. What you don't want to do is put it in a blocking bag that has RFID blocking (some travel fanny packs have that).  </p>"},{"location":"faqs/rileylink-faqs/#what-happens-if-loop-loses-communication","title":"What happens if Loop loses communication?","text":"<p>While you are out of the communication range for your RileyLink compatible device(s), any running temp basal will keep going until it finishes (the longest temp basal that Loop sets are for 30 minutes duration...so within 30 minutes or less your pump would go back to your regularly scheduled basal). When you come back into range of your device, Loop will pick back up within 5-10 minutes without you needing to do anything.</p>"},{"location":"faqs/rileylink-faqs/#are-these-devices-waterproof","title":"Are these devices waterproof?","text":"<p>The electronics are not waterproof but there are waterproof cases available and some have wireless charging available. Check with the manufacturer.</p> <p>RileyLink Compatible Device Information</p>"},{"location":"faqs/rileylink-faqs/#firmware-version","title":"Firmware version","text":"<p>In Loop settings, tap on your pump, find your device (RileyLink or other) and tap on that menu. The figure below shows firmware specific to the RileyLink. If you have another type of device, the firmware value reported will be different. (Note - the displays for Ema, Orange and Riley have been updated to include device-specific features as shown in the RileyLink Display page.  The graphic below shows the original RileyLink display.)</p> <p></p> <p>With RileyLink, the firmware displayed should match or be a higher version number than what is shown in the figure above, e.g., <code>subg_rfspy 2.2/ble_rfspy 2.0</code>. (If you are running with a very old RileyLink from pre-Aug 2018, it might be a lower number.) Check it when the device is working well and make a note of what it says. If you're having Red Loops, you might want to check firmware and connected state. Make sure, after power cycling your device, that the correct firmware is displayed AND that there are two items shown.  </p> <ul> <li>In the example above:<ul> <li><code>subg_rfspy 2.2</code> is the sub-gigahertz radio frequency firmware that talks to the insulin pump (if this does not show up, the device will talk to the phone but not the pump)</li> <li><code>ble_rfspy 2.0</code> is the Bluetooth firmware that talks to the phone (if this is not working, you will not even see the device in the list)</li> </ul> </li> </ul> <p>HINT: You might need to quit the Loop app.  (Don't just close it, actually quit.) Then do the power cycle on the RileyLink compatible device to attempt to have both sets of firmware boot up.  When you restart the Loop app, it may show the correct firmware. Don't give up after one failure, try several times.</p> <p>If several power cycles do not make the correct firmware show up, contact the manufacturer for assistance.</p>"},{"location":"faqs/rileylink-faqs/#orangelink-firmware","title":"OrangeLink Firmware","text":"<p>The OrangeLink devices allow the user to update the firmware on the device using an app on the phone itself (available for iPhone 7 and later devices).</p> <ul> <li>OrangeLink Firmware Update</li> </ul> <p>A number of OrangeLink Pro devices were shipped with FW2.6 and for people who already had OrangeLink devices, a version of FW2.6 was offered for download. However, this firmware did not work well with Loop (or AndroidAPS).  </p> <ul> <li>If you are having communication issues, update to the latest firmware FW3.2 using the link above</li> <li>If you are not having communication issues, the update is optional<ul> <li>For OrangeLink (not Pro, HW version 1.0), FW2.5 or FW3.2 are OK</li> <li>For OrangeLink Pro (HW version 1.1), FW1.0 or FW3.2 are OK</li> <li>See link above to check if versions newer than FW3.2 have been released, LoopDocs might not have the latest information</li> </ul> </li> </ul> <p>Firmware/Hardware Labeling</p> <p>Earlier versions of the OrangeLink firmware did not put the hardware (HW) version and the firmware version (FW) in the \"correct\" location to hand off to Loop for interpretation. Do not worry if you are running on any FW version 1.x or 2.x and your HW version number doesn't say 1.0 or 1.1. This has been fixed for FW versions 3.x.</p>"},{"location":"faqs/rileylink-faqs/#emalink-and-orangelink-features","title":"EmaLink and OrangeLink Features","text":"<p>Some of the features of the OrangeLink were added to the RileyLink Display with Loop 2.2.x. However, as mentioned above, the FW and HW information in some OrangeLink firmware was inconsistent in earlier versions. The consequence is that the OrangeLink Pro screen does not show the Find Device feature that many people want to use with the versions of firmware that provide good communication with Loop. The patch listed below fixes this issue.</p> <p>The EmaLink features were not added with Loop 2.2.x. The patch listed below adds some EmaLink features.</p>"},{"location":"faqs/rileylink-faqs/#emalink-and-orangelink-patch","title":"EmaLink and OrangeLink Patch","text":"<p>A patch was developed to update the RileyLink screen of the Loop app that detects the OrangeLink hardware for all versions of the OrangeLink firmware and adds the battery level reporting and notification to the EmaLink screen. Click on the link below. There are detailed instructions on how to use this patch for Loop 2.2.x.</p> <ul> <li>EmaLink and OrangeLink Patch</li> </ul>"},{"location":"faqs/rileylink-faqs/#rileylink-information","title":"RileyLink Information","text":"<p>Since the RileyLink version of the communication link device has been around the longest, some additional information about that device has been added to LoopDocs throughout the years. The rest of this page is specific just to the RileyLink device.</p>"},{"location":"faqs/rileylink-faqs/#rileylink-assembly","title":"RileyLink Assembly","text":"<p>Your RileyLink will come with the Lithium-ion Polymer (LiPo) battery disconnected and the parts not already inside the case. It will be up to you to put the RileyLink in the case and attach the battery.</p> <p>Make sure the LiPo battery is well-plugged into the connection. Line up the little ridge appropriately, and push fairly firmly to get the connection tight. Poor battery cable connection can make the Loop communications fail. See photos below, for example.</p> <p>Common new user errors</p> <p>The most common two errors for new RileyLink owners are (1) not fully pushing in the LiPo battery cable connection and (2) failing to charge the RileyLink. Compare your LiPo battery cable with the photos; it takes a bit of oomph to push that plug fully in like the photos shown below. Remember to charge your RileyLink each night.</p> <p></p> <p>Loose battery cable on left. Proper battery cable on right</p> <p>Finally, the board and the battery fit into the slim case fairly tightly as well. Click on the image below to watch a helpful assembly video.</p> <p></p>"},{"location":"faqs/rileylink-faqs/#rileylink-lights","title":"RileyLink Lights","text":"<p>The RileyLink has several lights that you may notice from time to time. There is no 'power' light. If you suspect that your RileyLink is not being powered, try turning it off and on using the small sliding switch. You should see lights in the middle of the board flash when you do this. If they flash, that means the board has power.</p> <ul> <li> <p>Red light: Charging light. The red light will remain on while RileyLink is charging, and it will turn off when charging is complete. You may notice the red light turn on periodically even after charging is complete...it's just \"topping off\".</p> </li> <li> <p>Green light: Bluetooth connection light. The green light will remain on while you have a BT connection with your iPhone. If that green light fails to stay on, you should troubleshoot your BT connections. Try restarting BT on your iPhone and/or turning the RileyLink off/on by its power switch.</p> </li> <li> <p>Blue light: Pump communications. If you have an older firmware on your RileyLink, some of the blue lights will flash periodically as it communicates with the pump. It's just letting you know that it is busy talking and collecting info. You will also see increased blue flashes if you have \"Enabled Diagnostic LEDs\" for Medtronic users that have the RileyLinks with updated firmware (shipping since late August 2018).</p> </li> </ul> <p>A solid blue light that consistently remains lit on the board could mean one of two things:</p> <ul> <li> <p>A temporary issue that can be resolved by rebooting the RileyLink physically (turning the switch off/on), or</p> </li> <li> <p>An electrical short or damage to the board. Sweat and moisture are most likely culprits, so try to keep case free from those environments. Don't keep RileyLink in sports bras or waistband next to skin, for example, while exercising.</p> </li> </ul> <p>If your blue light remains on despite trying a restart, it is time to pull out your backup RileyLink.</p>"},{"location":"faqs/rileylink-faqs/#rileylink-charging","title":"RileyLink Charging","text":"<p>The battery that comes with RileyLink is not charged completely when it is shipped, so be sure to charge it up before initial use. RileyLink takes about 2 hours to fully charge (the red light will turn off when fully charged, read note above about red light patterns) and should easily last at least a full day of constant Loop use. Typically, it can go into the 30-hour range without any problems. Most people charge their RileyLink each night when they are sleeping. You don't have to worry about leaving the RileyLink plugged in \"too long\" for charging. It will automatically stop charging the battery when it is fully charged.</p> <p>Since the best practice is to charge your RileyLink overnight while you sleep, and the battery lasts safely over 24 hours, there is no battery level indicator for the RileyLink. The RileyLink's charge level is not viewable on Nightscout, nor within the Loop app. If you forget to charge your RileyLink overnight, you can recharge it with a portable USB battery in a pinch. A short mini-USB cable could be a good addition to a small gear bag.</p>"},{"location":"faqs/rileylink-faqs/#what-are-the-differences-between-the-rileylink-medtronic-and-omnipod-antennas","title":"What are the differences between the RileyLink Medtronic and Omnipod Antennas?","text":"<p>There are two types of antennas for RileyLinks; each antenna is optimized for the pump you are using. Otherwise they are identical. See RileyLink Compatible Devices for other devices.  The OrangeLink has both antennas included in its design and can talk to either Medtronic or Omnipod.  The EmaLink requires selection for type of pump.</p> <p>The color of the RileyLink circuit board in the photos below is irrelevant.</p> <p></p>"},{"location":"faqs/rileylink-faqs/#what-will-happen-if-your-rileylink-has-the-wrong-antenna","title":"What will happen if your RileyLink has the wrong antenna?","text":"<p>You can technically use that RileyLink with either pump on Loop. But, you will have significant frustrations and probably a lot of red loops. With mismatched antenna/pump, the device needs to be very close (think inches) and in clear line-of-sight to pump/pod. This makes everyday living (and sleeping) a bit hard. If you use the appropriate-antenna-for-your-pump device, the distances the pump/pod and RileyLink can tolerate from each other is much more \"real world\" friendly and stable. The OrangeLink contains both antennas so will work with either pump. This may be a good choice if you like to switch between Medtronic and Omnipod.</p> <p>In a pinch, if you have a RileyLink that you used with a Medtronic pump and have switched to Omnipod, it might work as a backup, but you won't love it.</p>"},{"location":"faqs/rileylink-faqs/#how-long-will-my-rileylink-go-between-charging","title":"How long will my RileyLink go between charging?","text":"<p>RileyLinks can go about 30-36 hours on a single charge. There is no way to see the remaining charge level, so most people just get into the habit of charging overnight while they sleep. The actual time to fully recharge is about 1 or 2 hours; you'll know it is fully charged when the red light turns off. After a full charge, the red light will turn off and then periodically turn on for short times while it \"tops off\" while still on a charger.</p>"},{"location":"faqs/rileylink-faqs/#how-can-i-tell-how-much-charge-my-rileylink-has","title":"How can I tell how much charge my RileyLink has?","text":"<p>You can't. There is no charge level indicator. Just charge it nightly, and you won't have a problem. Full battery charge should last about 30-36 hours depending on battery health. Charging takes less than 2 hours.</p>"},{"location":"faqs/rileylink-faqs/#how-long-will-my-rileylink-battery-last","title":"How long will my RileyLink battery last?","text":"<p>Eventually, Lithium-ion Polymer (LiPo) batteries will lose charging capacity. You would want to replace if you notice the battery not lasting the full day. Many people report using their battery for more than 2 years without issue.</p> <p>Be aware that if a battery is failing, it may swell. If you notice that the RileyLink battery is swollen, remove the swollen battery from your home and place in a fire-safe area and recycle it properly.  Either order a new battery or pull out your spare.</p> <p>After a year of use (and a year of being dropped), the antenna may no longer be securely soldered. If you are getting a lot of red loops, it might be a poor antenna connection instead of a failing battery. Check the solder joint at the antenna. The solder should be shiny and the antenna base should be firmly attached to the board.</p>"},{"location":"faqs/rileylink-faqs/#rileylink-battery","title":"RileyLink Battery","text":"<p>Keep your RileyLink and its Lithium-ion Polymer (LiPo) battery protected from damage. LiPo batteries are unsafe when damaged or punctured, so the case is an important part of safe Looping. If your battery is damaged in some way, please disconnect it immediately, and dispose of it (they should be recycled). You can order new RileyLink batteries on the GetRileyLink website</p>"},{"location":"faqs/rileylink-faqs/#rileylink-battery-removal","title":"RileyLink Battery Removal","text":"<p>To remove the LiPo battery from the RileyLink, please do so slowly and patiently. Work the battery connection side to side slowly to loosen it from the plug. Some people have reported success using small, curved needle-nose pliers such as hemostats. Others have used small flathead screwdrivers as shown in this video.</p> <p></p>"},{"location":"faqs/safety-faqs/","title":"Safety Tips","text":""},{"location":"faqs/safety-faqs/#beware-the-medtronic-easy-bolus-button","title":"Beware the Medtronic Easy Bolus button","text":"<p>Medtronic's easy bolus button has been the cause of several accidental boluses when the pump has been carried in a pocket. Best practice would be to disable the Easy Bolus button since you will be doing boluses from the phone anyways.</p>"},{"location":"faqs/safety-faqs/#health-app-permissions","title":"Health app permissions","text":"<p>Do not let other apps, such as Spike App or MyFitnessPal, on your iPhone write carbohydrates to Health app. Loop could read those carbohydrates and you could be dosed for those carbohydrates. Check your Health permissions.</p>"},{"location":"faqs/safety-faqs/#finish-your-medtronic-priming","title":"Finish your Medtronic priming","text":"<p>After a site change and reservoir rewind, Medtronic's pump will have a menu on the pump screen related to finishing your prime. Make sure you complete that screen and always return to the main menu. Medtronic's pump won't resume basal insulin delivery until that priming screen is completed.</p>"},{"location":"faqs/safety-faqs/#know-your-settings","title":"Know your settings","text":"<p>Do not enter in settings that you are unsure of. For example, if you haven't any idea what your carb ratio is, please don't enter a zero or a wild guess. Instead, test your settings and talk to your health care provider about what your appropriate settings should be.</p>"},{"location":"faqs/safety-faqs/#how-to-cancel-carbs","title":"How to Cancel Carbs","text":"<p>Once carbohydrates are entered into Loop, the algorithm will begin to dose insulin to anticipate those carbs.</p> <p>If you entered carbs and then changed your mind on the amount or the time at which they were eaten, use these instructions to delete or edit them. This will make Loop better able to predict blood glucose and adjust insulin delivery appropriately.</p> <p>Make sure Health permissions are set for Loop to <code>Write</code> but not <code>Read</code> carbs. This avoids a scenario where Loops reads entries from a third-party app. These carbs cannot be edited within Loop.</p>"},{"location":"faqs/update-faqs/","title":"Update/Rebuild Loop FAQs","text":""},{"location":"faqs/update-faqs/#updatingrebuilding-loop-faqs","title":"Updating/Rebuilding Loop FAQs","text":"<p>First, please take a minute to understand what the words mean.</p> <ul> <li> <p>\"Updating Loop\" is the process of downloading a new version of Loop code </p> </li> <li> <p>\"Rebuilding Loop\" is the process of building the same version of Loop code</p> </li> </ul> <p>In both cases, you build the code to install over an existing app on your phone or onto a new device.</p> <ul> <li>If you use the Mac-Xcode build method:<ul> <li>First make sure your Mac operating system and Xcode version are compatible with your iPhone version, and then</li> <li>Easiest method is to use the build select script which automatically downloads the latest released version of the code every time</li> <li>See note below if your download speed or your Mac is very slow</li> </ul> </li> <li>If you use the GitHub Browser build method:<ul> <li>Update your fork if needed to get the new released version</li> <li>Use the GitHub Action on your fork to Build Loop</li> <li>Within an hour that new build should be available via TestFlight to install on your phone</li> </ul> </li> </ul> <p>Slow Download or Mac?</p> <p>If you have a very slow download speed or if you do a lot of customizations, it may be worth your time to decide if you need a new download.</p> <ul> <li>Use Finder to check the date of your last download by looking in the Downloads/BuildLoop folder</li> <li>Check the date of the last Loop release at GitHub LoopKit/Loop release page</li> <li>If the date in Finder is after the release date, follow Find my Downloaded Loop Code<ul> <li>Double click on the Loop.xcworkspace file in that folder</li> <li>This opens Xcode and you can just plug in your phone and build with your existing download</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#when-should-i-update","title":"When Should I Update?","text":"<ul> <li>Best Practice<ul> <li>Build if a serious bug-fix is reported</li> <li>Build, two to four times a year so that it becomes easier and you are ready in case of an emergency</li> <li>Each time you build, the app expiration date is bumped out a full year for Mac-Xcode build method and 90-days for GitHub Browser build</li> </ul> </li> <li>Required<ul> <li>When your expiration date forces you</li> <li>Do not wait until the app expires - it will stop working; see Loop is No Longer Available</li> <li>Hint - start a few weeks early and take your time</li> </ul> </li> <li>Optional<ul> <li>A new version of Loop is released and you want to install it</li> <li>You want to try a different branch or fork of Loop</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#steps-to-update","title":"Steps to Update","text":"<p>Updating Loop is the same idea as what happens to your other apps on your iPhone when you update them from the App Store on the phone. A refreshed version of the same app appears on the phone, simply updating-in-place the same Loop you were using with an updated version.</p> <ul> <li>Do NOT delete your current app from your phone - even if it says \"Loop is No Longer Available\"</li> <li>There are files stored on your phone that will be read in as soon as the new Loop app is installed</li> <li>If you deleted your app, then you have to enter all your settings again<ul> <li>This is a good time to configure your phone to avoid accidental deletion</li> <li>Do an internet search like this: \"iOS 15.4 prevent app deletion\" where you use your current phone iOS version number and follow the instructions</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#typical-apple-update-schedule","title":"Typical Apple Update Schedule:","text":"<ul> <li>Each September, Apple releases a major iOS version which typically works with the current macOS but requires a new Xcode version</li> <li>Each September, Apple releases a major macOS version (but doesn't require you to update your Mac, yet)</li> <li>Each March, you must update to the current macOS (major version) to continue building applications</li> </ul>"},{"location":"faqs/update-faqs/#where-should-i-start-when-i-want-to-update-my-loop","title":"Where should I start when I want to update my Loop?","text":""},{"location":"faqs/update-faqs/#check-your-developer-account","title":"Check your Developer Account","text":"<p>Regardless of build method, always check your Apple Developer Account status.</p> <p>Apple updates its License Agreement for the Developer Program frequently. You need to login to your developer account to manually check if there is a new agreeement to accept.  If you see a big red or orange banner across the top of your Developer Account announcing a new license agreement like shown below...please read and accept it before building Loop.</p> <p></p>"},{"location":"faqs/update-faqs/#updates-with-the-github-browser-build-method","title":"Updates with the GitHub Browser build method:","text":"<p>Go to GitHub Update and follow the instructions.</p>"},{"location":"faqs/update-faqs/#updates-with-the-mac-xcode-build-method","title":"Updates with the Mac-Xcode build method:","text":"<p>ALWAYS start with the Update Loop page before any new Mac-Xcode build that you'd be doing. That page is important because it will offer information on the updates you may need for your Mac and Xcode before building.</p> <p>Do not simply build with your old downloaded folder from months ago. There is a high likelihood that your original code from awhile ago is outdated and might not build with the current phone iOS. Grab new code and you will get the compatible version that has all the latest and greatest features and bug fixes.</p>"},{"location":"faqs/update-faqs/#will-i-have-to-delete-my-old-loop-app","title":"Will I have to delete my old Loop app?","text":"<p>No. Do not delete your old Loop. In fact, that is a bad idea as you will lose your currently paired pod and/or settings if you do that. So, don't delete.</p> <p>The exception to the rule is if you build Loop 3 on your phone and want to return to Loop 2.2.x or any FreeAPS fork.</p> <ul> <li>Refer to What if I change the branch or fork?</li> </ul>"},{"location":"faqs/update-faqs/#does-updating-make-a-separate-second-loop-app","title":"Does updating make a separate, second Loop app?","text":"<p>No. Loop is simply updated in-place, written right over the old version.</p> <p>The only exception to this is if you update/build using a different developer signing team than your current Loop app.</p> <ul> <li>The app's identity on your phone is defined by the developer ID.</li> <li>If you change that unique ID, your phone interprets that as a unique app as well...giving you two Loop apps on the phone.<ul> <li>Therefore, if changing developer accounts...you will get a new Loop app, and you would need a new Pod.</li> <li>You'll need to transfer your settings manually to the new app and delete your old app.</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#will-my-settings-be-saved-when-i-update","title":"Will my settings be saved when I update?","text":"<p>Yes. That's why we don't delete the app. Your settings will be saved so long as you use the same developer ID.</p>"},{"location":"faqs/update-faqs/#will-my-pod-still-work-when-i-update","title":"Will my pod still work when I update?","text":"<p>Yes. So long as you use the same developer ID as you originally built the app with before.</p>"},{"location":"faqs/update-faqs/#how-can-i-confirm-what-version-was-installed","title":"How can I confirm what version was installed?","text":"<p>The Loop version is given at the top of the Loop settings page.</p> <p>There is more detailed information about how the Loop app was built at the top of the Issue Report (Loop -&gt; Settings -&gt; Issue Report) as shown in the graphic in the next section.</p>"},{"location":"faqs/update-faqs/#how-can-i-confirm-xcode-version-i-used","title":"How can I confirm Xcode version I used?","text":"<p>The information in the graphic below includes the Xcode version number used for the build. In this case, the major version for Xcode is 12 and the minor version is 5 (E is the 5th letter of the English alphabet).  The main thing to notice for this example is the Loop app was built with Xcode version 12.5. If this phone was subsequently upgraded to iOS 15, the Loop app would continue to work.</p> <p>DO NOT INSTALL iOS 15 if the Xcode version on your Loop build is 12D or earlier - the Loop app will immediately stop working and you will have to rebuild Loop.</p> <p></p> <p>Profile Expiration</p> <ul> <li>The profile expiration will not be shown for Loop v2.2.4 or earlier.</li> <li>For this example, the profile expires much sooner than 12 months after the Loop app was built<ul> <li>Updating: Delete Provisioning Profiles provides instructions to delete your old provisioning profile when building your Loop app - this gives you a full year after you build</li> </ul> </li> </ul>"},{"location":"faqs/update-faqs/#what-if-i-change-the-branch-or-fork","title":"What if I change the branch or fork?","text":"<p>Does not matter. Changing the branch and even the fork is an \"updating Loop\" action. Nothing about the information above changes with the following exception.</p> <p>The exception to the rule is if you build Loop 3 on your phone and want to return to Loop 2.2.x or any FreeAPS fork.</p> <ul> <li>In this case, the database storage is different between Loop 3 and Loop 2.2.x</li> <li>Loop 3 can read the data stored by Loop 2.2.x, but the reverse is not true</li> <li>If you are downgrading from Loop 3 to FreeAPS, you need to first record settings, delete the old app and then build the desired app, enter your settings and add your pump (new pod required for Omnipod)</li> </ul>"},{"location":"faqs/update-faqs/#what-if-im-changing-phones","title":"What if I'm changing phones?","text":"<p>Changing phones is a little different than just updating.</p> <p>New Phone Checklist</p> <ul> <li>When you change phones, Apple will force you to the latest iOS version</li> <li>Make sure you can build to that iOS version before trying to transfer Loop to the new phone</li> <li>You can use the old phone as your looping phone until you get the new one ready<ul> <li>When turning the old phone in for a rebate, you typically have a week or two before you have to turn it in</li> <li>When you transfer information from your old phone to your new phone, all the Loop settings files get copied to the new device including information about the pod (if one is running)</li> <li>You then need to build Loop on the new phone and it remembers those settings</li> <li>It's a good idea to do this at pod change time, just in case, and to record (or screenshot) all your settings</li> </ul> </li> <li>Once the transfer is completed check all your settings and all your permissions on the new phone</li> </ul> <p>You can find the instructions written up in this article.</p>"},{"location":"faqs/update-faqs/#how-long-does-it-take","title":"How long does it take?","text":"<p>Assuming your macOS and Xcode updates are done, then plan on about 30 minutes.</p>"},{"location":"gh-actions/gh-customize/","title":"Customize with GitHub","text":""},{"location":"gh-actions/gh-customize/#hot-topics","title":"Hot Topics","text":"<p>Pro Tip</p> <p>The method on this page allows you to create a set of personalized customizations that you can use in addition to the Loop and Learn: Prepared Customizations. You can use (and re-use) your customizations with either GitHub Browser Build or Mac-Xcode builds so you don't have to repeat the customization with every update.</p> <ul> <li>If you are building with Mac-Xcode method, you can use the same lines prepared for GitHub Browser method and simply paste them in your terminal at the LoopWorkspace folder to customize your code</li> </ul> <p>Modules vs Submodule</p> <p>This page has instructions to set up your own fork for the Modules associated with LoopWorkspace that are needed for a selected customization.</p> <p>The technical term for the Modules is submodule when you are using git commands. Each Module has its own repository and you will be working with your fork of that repository at https://github.com/username/Module.</p> <ul> <li>You can often use the same customization for several releases</li> <li>If a customization that you prepared for an older release says \"does not apply\" when you use it, you'll need to prepare a new one</li> </ul>"},{"location":"gh-actions/gh-customize/#do-not-make-a-pull-request","title":"Do Not Make a Pull Request","text":"<p>Ignore GitHub Pull Request Prompts</p> <p>Please do not click on boxes that GitHub might show you that ask if you want to Compare &amp; Pull Request.</p> <p>This would be an attempt to merge changes from your fork back to LoopKit. These changes are for your fork only. Ignore those prompts.</p>"},{"location":"gh-actions/gh-customize/#overview","title":"Overview","text":"<p>Time Estimate</p> <ul> <li>About half an hour to an hour per Module<ul> <li>Typically 1 or 2 Modules</li> </ul> </li> <li>Ten minutes to add patch lines to your build_loop.yml file</li> <li>One minute to start the build</li> <li>An hour before the TestFlight build shows up on your phone</li> </ul> <p>Summary</p> <ul> <li>Prepare Customization (One Time):<ul> <li>Once you have prepared a given customization, you can use it again with each update</li> <li>If there is an update (new release) and the customization is no longer valid - you will get a clear error message<ul> <li>Just follow the steps on this page again to replace the customization that did not work</li> </ul> </li> <li>If there is an update (new release) and the customization applies with no errors, then you do NOT need to create an update</li> </ul> </li> <li>LoopDocs: Decide on Modules to modify using the LoopDocs: Code Customization page<ul> <li>You only need to create your own customization if what you want is not provided at Loop and Learn: Single Customization List</li> </ul> </li> <li>GitHub (each Module):<ol> <li>Fork Module (if needed)</li> <li>Sync the Module (if needed)</li> <li>Make the desired modification(s) using the GitHub pencil tool</li> <li>Save (commit) your changes to your fork</li> <li>Prepare lines needed for each customization and save</li> </ol> </li> <li>GitHub (LoopWorkspace)<ol> <li>You will use the GitHub pencil tool to edit build_loop.yml in your fork</li> <li>Add customization lines to the file</li> <li>Save (commit) your changes</li> <li>Action: Build Loop</li> </ol> </li> <li>Phone: Install Loop with TestFlight</li> </ul> <p>FAQs</p> <ul> <li>Do I need a Mac computer? No. This can be done on any browser, although it will be easier using a computer.</li> <li>Should I build without customizations first? Yes. Make sure the build process works without customizations. You don't need to install the build on your phone, just make sure it builds without errors before you start modifying.</li> </ul>"},{"location":"gh-actions/gh-customize/#how-to-customize-a-github-build","title":"How to Customize a GitHub Build","text":"<p>You do not need a Mac, you can still do this using any browser on a computer.</p> <p>There is some background information at the bottom of this page starting at LoopWorkspace if you want to know what you are doing. Otherwise, just follow the steps like a cookbook.</p>"},{"location":"gh-actions/gh-customize/#decide-which-modules-you-want-to-modify","title":"Decide Which Modules You Want to Modify","text":"<p>Decide which LoopDocs: Code Customization changes you want to make. Each customization lists a Module name. You will want a fork for each Module you wish to modify.</p> <ul> <li>DASH Pods: Use OmniBLE</li> <li>Eros Pods: Use OmniKit</li> <li>Other Modules are Loop and LoopKit<ul> <li>Do not get confused later: LoopKit is both a username and a Module name</li> <li>Refer to the Fork Table when directed</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-customize/#outline-of-what-happens-in-the-module","title":"Outline of What Happens in the Module","text":"<p>Review Only</p> <p>Review this section so you know what to expect. The actual steps will come later, starting with Create a Fork for Selected Module or Edit Module in GitHub.</p> <p>In the next sections, the exact process for making changes will be documented. But the steps may feel confusing. This section tries to explain what you will be doing once you start editing with a given Module.</p> <ol> <li>Make a fork if you don't have one</li> <li>Change the line(s) of code desired for your customization(s)</li> <li>Save (commit) the change(s) using descriptive comments into a separate branch (each will be called username-patch-# and the number will increment)</li> <li>Repeat until done with this Module</li> </ol> <p>Later, you will use information from your fork and the patch-# branches to create your customizations. (Suggestion - use same file as your Secrets, or at least keep the customization file in the same folder). Details are found at the Prepare the Customizations section.</p>"},{"location":"gh-actions/gh-customize/#create-a-fork-for-selected-module","title":"Create a Fork for Selected Module","text":"<p>Choose your link:</p> <ul> <li>New Fork: if you do not have a fork of this Module</li> <li>Code Updates: if you are returning after a new release</li> <li>Existing Fork for Module: if you have a fork but need guidance on whether it is the right fork</li> </ul>"},{"location":"gh-actions/gh-customize/#code-updates","title":"Code Updates","text":"<p>New Release</p> <p>If you have previously used this process for a prior release, use the same Modules you already forked.</p> <p>You can often reuse customizations that you created earlier even with a new release. Attempt to use your existing patches before creating new ones.</p> <p>If a customization did not work, then</p> <ol> <li>Go to the branch for each Module (dev or main) that is the default branch in the Branch Table</li> <li>Sync that branch</li> </ol> <p>Skip ahead to Edit Module in GitHub.</p>"},{"location":"gh-actions/gh-customize/#new-fork","title":"New Fork","text":"<p>If you want a modification that uses a particular Module, you must fork that module to your GitHub account. You will repeat the Fork and Modify steps for each module.</p> <ol> <li>Log into your GitHub account</li> <li>Right click (or control click) on the URL in the Fork Table</li> <li>This opens a new browser tab at the URL of the repository you need to fork</li> <li>Tap on Fork, your fork will show up in the tab</li> </ol>"},{"location":"gh-actions/gh-customize/#fork-table","title":"Fork Table","text":"<p>This table lists all the modules referred to on the Code Customization page linked above:</p> Module Fork From Loop https://github.com/LoopKit/Loop LoopKit https://github.com/LoopKit/LoopKit OmniBLE (for DASH) https://github.com/LoopKit/OmniBLE OmniKit (for Eros) https://github.com/LoopKit/OmniKit <p>Remember - you can only have a single fork of a given repository. If you already have a fork, you don't need another one; but it must be a fork from the URL listed the Fork Table.</p> <p>I already have a fork</p> <p>Go to Existing Fork for Module and follow the directions there.</p>"},{"location":"gh-actions/gh-customize/#branch-table","title":"Branch Table","text":"<p>When you fork a repository, the default branch is the one that is forked. That is ok. Only include that default branch when forking.</p> username/Repository Default Branch LoopKit/Loop dev LoopKit/LoopKit dev LoopKit/OmniBLE dev LoopKit/OmniKit main <p>Loop with LnL Patches</p> <p>Some Loop users build with the loopnlearn version of LoopWorkspace using the main_lnl_patches branch. Initially, this process involved making your LoopWorkspace fork from loopnlearn instead of LoopKit. You have the option of deleting that fork and starting over with LoopKit, adding your 6 Secrets to your new fork of LoopWorkspace and apply those same patches in the build-loop.yml file of your new fork, see Loop and Learn: GitHub Browser Build for Loop with Patches.</p> <p>The process for creating your own customizations is the same as those using the released code.</p>"},{"location":"gh-actions/gh-customize/#edit-module-in-github","title":"Edit Module in GitHub","text":"<p>Open your browser to your https://github.com/username/Module fork. Be sure to sync your fork if it shows it is behind the LoopKit repository.</p> <p>Navigate to the file you need to modify (using the instructions to find the lines from the LoopDocs: Customization Page)</p> <p>Pro Tip</p> <p>Look at the files you want to change - if more than one change is desired for a single file - do them at the same time.</p> <p>This section provides the steps to make a single customization for the Module. If you need more than one, just repeat the process and make additional \"patch\" branches.</p> <p>You will be using the \"pencil\" tool that comes with GitHub in your fork while logged into your username.</p> <p>Are there detailed instructions?</p> <p>For more information about editing with GitHub:</p> <ul> <li>GitHub Docs: Editing Files</li> </ul> <ul> <li>Once you make the change to a given file, tap on Commit changes (upper right)</li> <li>Tap in the Commit message box and replace the default \"Update filename\" with a comment about what the customization does</li> <li>Click on the \"Create a new branch for this commit\" option<ul> <li>Note: when you do the LoopWorkspace modifications, you will not choose this option</li> </ul> </li> <li>Click on the Propose changes button</li> <li>As soon as you do this, a new branch is automatically created with a name like username-patch-#, where the number increments each time</li> <li>The next screen allows you to create a pull request - you do NOT want to do this</li> <li>At this point, click on the Code tab (upper left)</li> </ul> <p>Once you've tapped on Code, you see there is still an opportunity to \"Compare &amp; pull request\" - ignore that.</p>"},{"location":"gh-actions/gh-customize/#do-not-make-a-pull-request_1","title":"Do Not Make a Pull Request","text":"<p>Ignore GitHub Pull Request Prompts</p> <p>Please do not click on boxes that GitHub might show you that ask if you want to Compare &amp; Pull Request.</p> <p>This would be an attempt to merge changes from your fork back to LoopKit. These changes are for your fork only. Ignore those prompts.</p> <p></p> <p>Just below that message, there is an icon showing branches. Click on that instead.</p> <p>The screen shows all the branches available - find the one(s) you just created.</p> <ul> <li>Tap on username-patch-1</li> <li>Tap on the Clock icon to the right</li> <li>The top line is the last commit (your customization)</li> <li>You need to record the very long alphanumeric number associated with this commit</li> <li>There is a copy icon to the right of the commit - click on it and save it in your text file along with a comment about the customization and record which module you used for the customization</li> </ul> <p>For example:</p> <pre><code># Loop: Filename: Modify this value to that value\nSHA-1 = 5e9f4f407ff5544663f496d2e3a5ed8aa4f32a68\n</code></pre> <p>Later on, you will create the actual command needed to insert into build_loop.yml so you can add this customization when running the GitHub Build step.</p> <p>Repeat this process until you've done all your customizations for this Module and then move on to the next Module.</p>"},{"location":"gh-actions/gh-customize/#prepare-the-customizations","title":"Prepare the Customizations","text":"<p>Once you prepare the commands, then you will edit the build_loop.yml file of your LoopWorkspace fork.</p> <p>For each commit that has a customization you want to include, create a pair of patch lines consisting of the comment (must start with a #) followed by the curl statement pointing to the commit that has the customization.</p> <p>Save the customization lines in your text file for later use in the build_loop.yml file.</p> Customization Template:<pre><code># Module: File: code customization description\ncurl https://github.com/username/Module/commit/SHA-1.patch | git apply -v --directory=Module\n</code></pre> <p>where:</p> <ul> <li><code>curl</code> means copy from URL</li> <li>username is your GitHub username</li> <li>Module is where you made the customization (Module is in multiple places)</li> <li>SHA-1 is the full identifier for the commit that has the change; there is a copy button to make this easy</li> <li>the <code>.patch</code> after the SHA-1 is GitHub magic that formats that code change into a patch</li> </ul> <p>To view the exact code change associated with that patch, open a browser at the URL of <code>https://github.com/username/Module/commit/SHA-1</code>.</p>"},{"location":"gh-actions/gh-customize/#update-loopworkspace","title":"Update LoopWorkspace","text":"<p>The final step is to update your LoopWorkspace fork to apply these customizations by adding those customization lines into the build_loop.yml file.</p> <p>Return to your GitHub fork for LoopWorkspace and make sure to sync it if needed.</p> <ul> <li>Find the folder .github/workflows and click on it</li> <li>Find the file build_loop.yml and click on it</li> <li>Tap on the pencil (so you can edit this file)</li> <li>Locate line 31, which is just above the words:<ul> <li><code># Patch Fastlane Match to not print tables</code></li> </ul> </li> <li>Paste the contents of the block below so it comes before that section</li> </ul> Paste into build_loop.yml<pre><code>      # Customize Loop: Download and apply patches\n      - name: Customize Loop\n        run: |\n\n          # For each patch, edit comment line (keep the #) then update curl (and remove the #)\n\n          # Submodule Loop patches:\n          # Loop: Filename: customization details\n          #curl https://github.com/username/Loop/commit/SHA-1.patch | git apply -v --directory=Loop\n\n          # Submodule LoopKit patches:\n          # LoopKit: Filename: customization details\n          #curl https://github.com/username/LoopKit/commit/SHA-1.patch | git apply -v --directory=LoopKit\n\n          # Submodule xxxxx patches: Follow prototype above\n</code></pre> <p>Open the text file in which you saved the customization lines.</p> <p>For a given submodule, paste the comment / curl command as indicated in the template above.</p> <p>The indenting needs to match, so tab or (shift-tab) to line up the patches.</p> <p>Once you are done with all the edits for build_loop.yml you will commit the changes to your fork directly.</p> <ul> <li>Once you have finished the edits for build_loop.yml</li> <li>Tap on Commit changes (upper right)</li> <li>Tap in the larger box below the \"Update build_loop.yml\" and indicate a summary of the customizations you added</li> <li>Click on the option to \"Commit directly to your branch\" if it is not already selected<ul> <li>NOTE: for LoopWorkspace - commit directly to your default branch</li> </ul> </li> <li>Click on Commit changes</li> <li>You can make as many changes to build_loop.yml in your fork as you want</li> </ul> <p>When you are ready, it's time to build Loop with your customizations.</p>"},{"location":"gh-actions/gh-customize/#build-loop","title":"Build Loop","text":"<ul> <li>Click on Action: Build Loop<ul> <li>Click on Run workflow on the right side</li> <li>Then click on the green Run Workflow button</li> </ul> </li> </ul> <p>Wait about 2 minutes before walking away to make sure there are no errors. If you get an error, then look for the first \"did not apply\" error message and fix the customization right before that line.</p> <p>In about 1 hour, your customized Loop will be available for installation on your phone via TestFlight.</p>"},{"location":"gh-actions/gh-customize/#special-cases","title":"Special Cases","text":""},{"location":"gh-actions/gh-customize/#existing-fork-for-module","title":"Existing Fork for Module","text":"<p>What if you already have a fork of one of the modules?</p> <p>Your existing fork is from a username other than LoopKit</p> <ul> <li>If you know this is a fork you do not care about, you can delete the repository.</li> <li>If you care about this fork, you are probably experienced enough to know how to solve the issue.</li> </ul> <p>Instructions to delete a repository are found at GitHub Docs</p> <p>Once deleted, go to Create a Fork for Selected Module.</p>"},{"location":"gh-actions/gh-customize/#background-information","title":"Background Information","text":""},{"location":"gh-actions/gh-customize/#loopworkspace","title":"LoopWorkspace","text":"<p>The LoopWorkspace repository is the umbrella organization holding all the pieces needed to build the Loop app. Part of what LoopWorkspace provides is a list of pointers to a specific commit for each of the Modules used in the workspace.</p> <ul> <li>A commit is a specific version of code in a repository</li> <li>A workspace is a grouping of several repositories (Modules) into a complete package</li> <li>The workspace includes a list of the specific commit for each repository</li> </ul> <p>You will be adding one or more code changes to the released (or dev) branch of LoopWorkspace using patch commands in the build_loop.yml file. Each patch repeats the small code change associated with each commit your make to your fork of a given Module.</p>"},{"location":"gh-actions/gh-deploy/","title":"GitHub Deploy","text":""},{"location":"gh-actions/gh-deploy/#deploy-using-testflight","title":"Deploy Using TestFlight","text":"<p>This is only available with Loop 3 and Loop development branches.</p> <p>You must build Loop every 90 days when you use this method.</p> <p>After building Loop using GitHub Build Loop, you are ready to deploy to as many phones as you and your family members need.</p> <ul> <li> <p>If you later need to add an adult family member to your list, refer to Set Up Users and Access (TestFlight).</p> </li> <li> <p>Children (under 13 in US, varies by country) cannot use TestFlight with their ID. If you plan to Install TestFlight Loop for Child, you will need to use your ID on their phone (not the whole phone - just the Media &amp; Purchase portion), so send the TestFlight invitation to the email associated with your ID.</p> </li> </ul>"},{"location":"gh-actions/gh-deploy/#install-testflight","title":"Install TestFlight","text":"<p>If you already have the TestFlight app installed on your phone, skip ahead to Install Loop with TestFlight.</p> <p>In order to install Loop, the TestFlight app must be installed on the phone:</p> <ul> <li>Open the App Store and Search for TestFlight (see GIF below)</li> <li>Choose TestFlight and Install or Download to that phone<ul> <li>Hint on child's phone, do this while logged in as yourself for Media &amp; Purchase</li> <li>Logging in as an adult is explained in Install Loop for Child</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-deploy/#install-loop-with-testflight","title":"Install Loop with TestFlight","text":"<p>Once the GitHub Build completes (either green check mark on GitHub or you got an email), you can install Loop on your phone.</p> <p>Loop 3 requires iOS 15.1 or higher</p>"},{"location":"gh-actions/gh-deploy/#first-time-on-phone","title":"First Time on Phone","text":"<p>The first time you use TestFlight on any phone associated with a given email, you must <code>Redeem</code> the code sent to that email inviting you to test the app. The GIF below is for someone who has never used TestFlight.</p> <ul> <li>Initial screen indicates there are no Apps available to test, tap on Redeem</li> <li>Enter your code and tap redeem to enter it</li> <li>Click on OK to acknowledge</li> <li>Click on Install</li> </ul> <p></p> <p>If you already have the Loop app on the phone, you'll see the warning shown in the next GIF. Go ahead with the installation.</p>"},{"location":"gh-actions/gh-deploy/#subsequent-times-on-phone","title":"Subsequent Times on Phone","text":"<ul> <li>Open TestFlight and find the name you used for your Loop app in the Create Loop App in App Store Connect step</li> <li>Tap on Install<ul> <li>If you already have Loop installed on this phone, you will be warned that the app already exists on your phone and that you might lose the app's data.</li> <li>Click Install again (your pump connection and all your data will be fine)</li> </ul> </li> <li>Choose Open</li> <li>Make sure the Loop app is operating as expected</li> <li>If you are building Loop 3.x over Loop 2.x, you will be required to go through Onboarding</li> </ul>"},{"location":"gh-actions/gh-deploy/#testflight-automatic-updates","title":"TestFlight Automatic Updates","text":"<p>Go back to the TestFlight app on your phone and tap on your Loop app name in the list to see an expanded screen similar to the graphic below. The row to enable or disable automatic updates is highlighted in the graphic. For this example, this feature is disabled.</p> <ul> <li>You should choose the option you prefer</li> <li>If you leave automatic update enabled (default), then whenever you issue the Actions: Build Loop command on from GitHub on your LoopWorkspace fork, the new build will be installed on that phone as soon as the build completes.</li> <li>WARNING: If you later want to build using Xcode, you must first disable automatic update or Xcode will not be able to install to your phone.</li> </ul> <p></p> <p>If you tap on the bottom row that says <code>Previous Builds</code>, you can view and choose an older build (as long as it has not expired).</p>"},{"location":"gh-actions/gh-deploy/#install-testflight-loop-for-child","title":"Install TestFlight Loop for Child","text":"<p>The adult (Apple Developer Account owner) can log into Media &amp; Purchase (see steps below) without affecting the child Apple ID associated with a phone (and thus their health records used by Loop). After the adult installs or updates Loop using TestFlight, they probably should reverse those steps to remove their credentials from Media &amp; Purchase.</p> <p>Media &amp; Purchase affects access to the App Store, Books, Music and Podcasts.</p> <p>On the Looper's phone:</p> <ul> <li>Tap on Settings</li> <li>At the very top of Settings, tap on the Name of the phone, for example, <code>my kids phone</code></li> <li>Apple ID Screen appears<ul> <li>Tap on Media &amp; Purchases</li> <li>Tap on Sign Out, and confirm</li> <li>Reboot the phone</li> </ul> </li> <li>After phone reboots, repeat the process and sign in with the adult (Apple Developer Account owner) Apple ID and password</li> <li>Install or Update Loop from TestFlight on child's phone</li> <li>Repeat the process to sign out the adult and (if needed) sign back in the child</li> </ul>"},{"location":"gh-actions/gh-deploy/#change-the-app-store-connect-name","title":"Change the App Store Connect Name","text":"<p>Suppose you really don't like the name you picked initially for the Loop app that shows up in the TestFlight app.</p> <p>You can change it.</p> <p>Open this link: App Store Connect Apps and log in as needed.</p> <ul> <li>Click on your app name.</li> <li>Click on App Information on the left side (make browser wider if you don't see this).</li> <li>Modify the Name under Localizable Information and click on the Save button (upper left)</li> <li>If you chose a name that is in use, you'll see the warning screen - try again</li> </ul>"},{"location":"gh-actions/gh-errors/","title":"GitHub Errors","text":""},{"location":"gh-actions/gh-errors/#github-build-method-errors","title":"GitHub Build Method Errors","text":"<p>This method is fairly new so new errors are being captured as people use this method. Each time a new error is discovered, we try to update LoopDocs to make it easier for the next person to succeed without errors.</p> <p>If you've been around Loop for a while, you know the mantra about screenshots. Well, for GitHub Build Action failures, screenshots are close to useless. If you get an error with a GitHub Action, you should use the search feature for known diagnosis strings. If you are still stuck, then post your request for help along with your GitHub username. Mentors can go to your public <code>LoopWorkspace</code> fork - check that your branch is up to date and then view your <code>GitHub Action</code> log files directly.</p> <p>But first - try to diagnose it yourself using this page.</p>"},{"location":"gh-actions/gh-errors/#most-common-mistakes","title":"Most Common Mistakes","text":"<p>These are some of the most common errors to date.</p> <ul> <li>Make a spelling error when adding Secrets<ul> <li>Each secret must be spelled exactly the way it is presented in the instructions</li> </ul> </li> <li>Save your Secrets, as directed, but use a smart editor instead of a text-only editor<ul> <li>It only takes one letter to be changed from lower-case to upper-case by your smart editor to ruin your day</li> <li>The alpha-numeric values used for <code>GH_PAT</code>, <code>FASTLANE_ISSUER_ID</code> and <code>FASTLANE_KEY</code> contain both upper and lower-case characters and all the values are case-sensitive</li> </ul> </li> <li>When entering <code>TEAMID</code>, make a spelling error in the value - please copy and paste instead of typing what you think you see<ul> <li>If you type in your <code>TEAMID</code> as <code>0123498989</code> when it is really <code>012349B989</code>, you may not notice<ul> <li>Hint: what should have been the letter <code>B</code>, got typed as the number <code>8</code></li> </ul> </li> <li>The incorrect <code>TEAMID</code> will show up in your identifiers as the <code>Bundle ID</code> but . . .<ul> <li>You will not be able to <code>Create Certificates</code> or <code>Build Loop</code> because your <code>TEAMID</code> does not match the <code>Bundle ID</code></li> </ul> </li> </ul> </li> <li>Run the actions out of order or skip one</li> </ul>"},{"location":"gh-actions/gh-errors/#find-your-error","title":"Find Your Error","text":"<p>There is a separate section for each step in the process. First, you must follow the Examine the Error instructions to view the record of the failed action. Then go to the section for the Action you were trying to complete to look for possible error strings to copy into the search box.</p> <ol> <li>Action: <code>Verify Secrets</code></li> <li>Action: <code>Add Identifiers</code> Errors</li> <li>Action: <code>Create Certificates</code> Errors</li> <li>Action: <code>Build Loop</code> Errors before a successful build</li> <li>Repeat <code>Build Loop</code> Errors after a successful build</li> </ol> <p>If you discover a new error, please reach out to help us update the documentation.</p>"},{"location":"gh-actions/gh-errors/#examine-the-error","title":"Examine the Error","text":"<p>It doesn't matter which action you are running; after the action completes, you will either see a green check mark  for success or a red x mark  for failure. The graphic below shows an example for the <code>Add Identifiers</code> action.</p> <p></p> <p>If you click on the action name, it opens a secondary screen as shown below.</p> <p></p> <p>Click on the top link to view the record of the failed action as shown in the graphic below. You will be pasting strings into the search box (highlighted with a green rectangle) to look for a documented error. Please read the instructions below the graphic.</p> <p></p> <ul> <li>Paste in a possible error string (copy it exactly); repeat until you find a match</li> <li>If the possible error string is found - follow the directions for that error</li> <li>Still stuck?<ul> <li>Post for help including your GitHub username</li> <li>With that, mentors can diagnose your problem - or at least make a good guess at what you need to try</li> <li>Please do NOT post a screenshot</li> </ul> </li> </ul> <p>Where to find my GitHub username?</p> <p>You can find it:</p> <ul> <li>either in the URL of your fork of <code>Loopworkspace</code>, after <code>github.com</code> in between the forward slashes (<code>/</code>).    https://github.com/username/Loopworkspace</li> <li> <p>or on the GitHub website</p> <p> </p> <p></p> </li> </ul> <p>As your GitHub <code>username</code> is case-sensitive, use copy and paste.</p>"},{"location":"gh-actions/gh-errors/#action-verify-secrets-errors","title":"Action: <code>Verify Secrets</code> Errors","text":"<p>A new action was added with Loop 3.1 to provide better error messages if something is wrong with your Secrets. In addition, the Actions are numbered to match the order in which they should be applied.</p> <p></p> <p>To generate the graphic below, some items were deliberately set to be incorrect in the Secrets list. Representative error messages are shown when running the validate secrets action.</p> <p></p>"},{"location":"gh-actions/gh-errors/#action-add-identifiers-errors","title":"Action: <code>Add Identifiers</code> Errors","text":"<p>Use the Examine the Error instructions to find your error message.</p> <p>There are two errors that we are familiar with at this point. Look for text matching what is listed below and view what has caused this error to be seen.</p>"},{"location":"gh-actions/gh-errors/#authentication-credentials-are-missing-or-invalid","title":"<code>Authentication credentials are missing or invalid</code>","text":"<p>If you see:</p> <pre><code>Authentication credentials are missing or invalid. - Provide a properly configured and signed bearer token, and make sure that it has not expired. Learn more about Generating Tokens for API Requests https://developer.apple.com/go/?id=api-generating-tokens`\n</code></pre> <p>This can be caused by an error in the value (or spelling) of one of these keys:</p> <ul> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> <li><code>GH_PAT</code></li> </ul> <p>Use a Text-Only Editor</p> <p>If you used a \"smart\" editor when saving your Secrets in an archive file before pasting them into the repository <code>Secrets</code>, it might have changed a lowercase letter to an uppercase letter.</p> <p>If even one character is capitalized when it should not be, you will not succeed at the Add Identifiers step.</p>"},{"location":"gh-actions/gh-errors/#invalid-curve-name","title":"<code>Invalid curve name</code>","text":"<p>If you see:</p> <pre><code>invalid curve name\n</code></pre> <p>This was caused by an error in the format of the value entered for the <code>FASTLANE_KEY</code>.</p> <p>Make sure you copy in a text editor from the first hyphen to the last hyphen.</p>"},{"location":"gh-actions/gh-errors/#action-create-certificates-errors","title":"Action: <code>Create Certificates</code> Errors","text":"<p>Use the Examine the Error instructions to find your error message.</p>"},{"location":"gh-actions/gh-errors/#wrong-teamid-in-secrets","title":"Wrong TEAMID in <code>Secrets</code>","text":"<p>Copy the words on the line below and paste them into the search function for your text editor.</p> <pre><code>error: No profile for team '***' matching 'match AppStore\n</code></pre> <p>If that phrase is found, then:</p> <ul> <li>You probably do not have the correct <code>TEAMID</code> entered in your <code>Secrets</code></li> <li>The rest of these instructions assume:<ul> <li>You have already created a Loop App in the App Store with that incorrect <code>TEAMID</code></li> <li>This is true if you completed the steps after running Action: <code>Add Identifiers</code> and before Action: <code>Create Certificates</code></li> </ul> </li> </ul> <p>Follow these steps:</p> <p>Open each link below in a separate tab</p> <p>It is best to open each link below in a separate tab so you can return to this list and keep using the links in each step.</p> <ol> <li> <p>Delete all the identifiers that you can, following the steps in First Time: Delete Identifiers</p> <ul> <li>You will not be able to delete the Loop identifier with the wrong <code>TEAMID</code>, but don't worry about it</li> </ul> </li> <li> <p>Enter your <code>TEAMID</code> correctly in the repository <code>Secrets</code></p> <ul> <li>Make sure you use copy and paste from your Apple Developer Membership page for that <code>TEAMID</code>.</li> <li>Follow the update instructions here (this example is for <code>GH_PAT</code>, you'll do the same but for <code>TEAMID</code>) Update Secrets</li> </ul> </li> <li> <p>Run Action: First Time: <code>Add Identifiers</code> again</p> </li> <li> <p>Follow all the steps in this section with the correct <code>TEAMID</code> First Time: Configure Identifiers for Loop but when you get to the First Time: Create Loop App in App Store Connect, you need to return to this page and follow the instructions below to remove the app and add a new one.</p> </li> </ol> <p>The first time through, you created an app with a <code>Bundle ID</code> that does NOT include your <code>TEAMID</code>.</p> <p>You will remove that app and create a new one.</p>"},{"location":"gh-actions/gh-errors/#remove-app-with-incorrect-teamid","title":"Remove App with Incorrect <code>TEAMID</code>","text":"<p>Go to <code>App Store Connect / Apps</code> and follow the numbered steps in the graphic below.</p> <ol> <li>Find the Loop app you created earlier and click on it</li> <li>On the left side, under <code>General</code>, click on <code>App Information</code><ul> <li>Confirm that the value listed under <code>Bundle ID</code> is the incorrect one</li> <li>The <code>Bundle ID</code> says: <code>com.NOT_YOUR_TEAMID.loopkit.Loop</code></li> </ul> </li> <li>Scroll to the bottom of the page and tap on <code>Remove App</code></li> <li>The dialog box, similar to the one in the graphic below, should appear and you tap <code>Remove</code><ul> <li>After the App is removed, you'll see a very similar screen, where you can tap on <code>Restore App</code></li> </ul> </li> <li>But since you want that App removed, tap on <code>Apps</code> at the very top of the screen and proceed to the next step</li> </ol> <p></p> <p>That App with the wrong <code>Bundle ID</code> remains in the App store but it is hidden so it won't confuse you.</p>"},{"location":"gh-actions/gh-errors/#add-app-with-correct-teamid","title":"Add App with Correct <code>TEAMID</code>","text":"<p>Now click on the <code>Add Apps</code> button or the  (plus sign) if you have other apps in the App Store.</p> <p>Follow the First Time: Create Loop App in App Store Connect directions with these additions:</p> <ul> <li>You must come up with a new name for your Loop App</li> <li>Triple-check that the <code>Bundle ID</code> you choose is for Loop and contains your <code>TEAMID</code>, it should look like: <code>com.TEAMID.loopkit.Loop</code></li> <li>You must come up with a new <code>SKU</code> for your Loop App (try <code>1234</code>, if you used <code>123</code> before)</li> </ul>"},{"location":"gh-actions/gh-errors/#create-certificates","title":"Create Certificates","text":"<p>You should be able to continue with the First Time Steps to <code>Create Certificates</code> and then <code>Build Loop</code> and keep going.</p>"},{"location":"gh-actions/gh-errors/#missing-repository-access","title":"Missing Repository Access","text":"<p>Copy the words on the line below and paste them into the search function for your text editor.</p> <pre><code>Error cloning certificates git repo, please make sure you have access to the repository - see instructions above\n</code></pre> <p>or </p> <pre><code>Error cloning certificates repo, please make sure you have read access to the repository you want to use\n</code></pre> <p>If you see this phrase, the <code>fastlane</code> package that is utilized during the <code>3. Create Certificates</code> action cannot access your repository to create certificates for your Loop app. This is due to insufficient repository access rights that were not granted during the creation of your <code>GH_PAT</code> token.</p> <p>To fix this error:</p> <ul> <li>Open this link: https://github.com/settings/tokens/</li> <li>Here you will see your personal access token (<code>Fastlane Access Token</code>) that was created during First Time: Setup GitHub: Create GH_PAT</li> <li>Note that <code>Tokens (classic)</code> is highlighted in the menu on the left</li> <li>Click on the token name (should be bold, blue <code>Fastlane Access Token</code> ) to open its detail page</li> <li>None of the checkboxes under <code>Select Scopes</code> will be checked\u00a0\u2013 this is what's causing the issue.</li> <li>Add a check beside the <code>repo</code> permission scope (see the red circled checkbox in the graphic)</li> <li>Scroll all the way to the bottom and click <code>Update token</code> (it's a long way, ignore all other settings, do not check anything else)</li> </ul> <p></p> <p>After you have clicked <code>Update token</code> you should see the token overview again with the message <code>Some of the scopes you\u2019ve selected are included in other scopes. Only the minimum set of necessary scopes has been saved.</code> (You can dismiss the message using the <code>X</code> near the upper right side if it appears).</p>"},{"location":"gh-actions/gh-errors/#create-certificates_1","title":"Create Certificates","text":"<p>You should be able to continue with the First Time Steps to <code>Create Certificates</code> and then proceed from there with <code>Build Loop</code> and keep going.</p>"},{"location":"gh-actions/gh-errors/#action-build-loop-errors","title":"Action: <code>Build Loop</code> Errors","text":"<p>Run <code>Create Certificates</code> First</p> <p>You must run Action: <code>Create Certificates</code> before attempting to run Action: <code>Build Loop</code></p> <p>Use Examine the Error</p> <ul> <li>Download the log archive file and unzip it</li> <li>Open the <code>1_build.txt</code> file</li> <li>Search for the phrase below</li> </ul> <p>For each <code>Build Loop</code> Error section below, copy the phrase into the search function of your text editor. If you find it, solve that error. If not, move on to the next one.</p>"},{"location":"gh-actions/gh-errors/#could-not-find-an-app-on-app-store-connect","title":"<code>Could not find an app on App Store Connect</code>","text":"<p>Copy the words on the line below and paste them into the search function for your text editor.</p> <pre><code>Could not find an app on App Store Connect\n</code></pre> <p>If that phrase is found, then:</p> <ul> <li> <p>Make sure you completed the Create Loop App in App Store Connect Step</p> <ul> <li>Once you've resolved that step, run these Actions again:<ul> <li><code>Create Certificates</code></li> <li><code>Build Loop</code></li> </ul> </li> </ul> </li> <li> <p>This can also be caused if you correctly created the Loop App but entered an incorrect value for the <code>TEAMID</code>.</p> <ul> <li>If you have the incorrect <code>TEAMID</code>, check this link: Certificates, Identifiers &amp; Profiles for entries with the incorrect <code>TEAMID</code> embedded</li> <li>For example, if your <code>TEAMID</code> is <code>0123456789</code>, but you entered <code>000123</code>, you may see both of these in your identifiers list<ul> <li><code>com.0123456789.loopkit.Loop</code></li> <li><code>com.000123.loopkit.Loop</code></li> </ul> </li> <li>Delete the \"bogus\" identifier version, fix your <code>TEAMID</code> and rerun all three steps:<ul> <li><code>Add Identifier</code></li> <li><code>Create Certificates</code></li> <li><code>Build Loop</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"gh-actions/gh-errors/#error-provisioning-profile","title":"<code>Error: Provisioning Profile</code>","text":"<p>Copy the words on the line below and paste them into the search function for your text editor.</p> <pre><code>error: Provisioning profile \"match AppStore\n</code></pre> <p>If that phrase is found one, or more times, it means you missed a step when configuring the Loop identifier or missed associating your Loop App Group with one or more identifiers.</p> <p>For example, if you see:</p> <p><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop\" doesn't include the com.apple.developer.usernotifications.time-sensitive entitlement.</code></p> <p>Go back to First-Time: Add or Review Configuration for Loop Identifier and make sure you enabled the <code>Time-Sensitive notification</code> for Loop.</p> <p>For example, you might see:</p> <ul> <li><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop.SmallStatusWidget</code></li> <li><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop.statuswidget</code></li> <li><code>error: Provisioning profile \"match AppStore com.***.loopkit.Loop.Loop-Intent-Extension</code></li> </ul> <p>Return to Add App Group to Other Identifiers and fix the missing items.</p> <p>You must create certificates again before you can build Loop:</p> <ul> <li>Action: <code>Create Certificates</code></li> <li>Action: <code>Build Loop</code></li> </ul>"},{"location":"gh-actions/gh-errors/#a-new-one-cannot-be-created-because-you-enabled","title":"<code>A new one cannot be created because you enabled</code>","text":"<p>Copy the words on the line below and paste them into the search function for your text editor.</p> <pre><code>A new one cannot be created because you enabled\n</code></pre> <p>If that phrase is found with lines similar to the following:</p> <pre><code>[31mA new one cannot be created because you enabled `readonly`\u001b[0m\n[31mProvisioning profiles in your repo for type `appstore`:\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.statuswidget.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.SmallStatusWidget.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.LoopWatch.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.Loop-Intent-Extension.mobileprovision'\u001b[0m\n[31m- 'AppStore_com.NOT_YOUR_TEAMID.loopkit.Loop.LoopWatch.watchkitextension.mobileprovision'\u001b[0m\n</code></pre> <p>This tells you, the <code>Bundle ID</code> you selected in First-Time: Create Loop App in App Store Connect does NOT have your <code>TEAMID</code> embedded in the name.</p> <p>Once you have created an app in the App Store that is not based on your <code>TEAMID</code>, you cannot delete it, but you can Remove it (i.e. hide it so that it is no longer visible on this page and you don't accidentally click on it).</p> <ol> <li>Open this link: App Store Connect / Apps to view your apps; log in if needed.</li> <li>Find the App with the wrong <code>Bundle ID</code> and click on it</li> <li>On the left-hand side, click on <code>App Information</code> (under <code>General</code>)<ul> <li>Confirm the <code>Bundle ID</code> listed does not include your <code>TEAMID</code></li> <li>Scroll all the way to the bottom</li> <li>Tap on <code>Remove App</code></li> <li>New dialog window appears, select <code>Remove</code></li> </ul> </li> </ol> <p>At this point, get your correct <code>TEAMID</code>, fix your Secrets file to have the correct <code>TEAMID</code> and then return to First-Time: Configure Secrets. This time you will be updating <code>TEAMID</code> in the repository secret list.</p>"},{"location":"gh-actions/gh-errors/#repeat-build-loop-errors","title":"Repeat <code>Build Loop</code> Errors","text":"<p>This section is only for people who have successfully built using GitHub Build Actions.</p> <p>Use the Examine the Error instructions to find your error message.</p>"},{"location":"gh-actions/gh-errors/#could-not-install-wwdr-certificate","title":"<code>Could not install WWDR certificate</code>","text":"<p>Assuming you have successfully built using the Browser-Build / GitHub method before:</p> <ul> <li>If the details show this message, <code>Could not install WWDR certificate</code>, make sure your Apple developer account is in good standing and that there are no agreements that need to be accepted</li> <li>Sometimes this is a sign that Apple did not respond to a request, this failure happens in the first few minutes<ul> <li>Repeat the build and it should be fine the next time</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-errors/#starting-over","title":"Starting Over","text":"<p>This is not the first thing to try, but sometimes it is the best approach.</p> <p>Totally Frustrated</p> <p>The directions on the GitHub First Time page have been improved.</p> <p>If you tried this earlier and did not make progress, you can delete the <code>Match-Secrets</code> repository and <code>LoopWorkspace</code> fork in your GitHub account. Make sure your <code>Secrets</code> are all correct and consistent, then start over at First-Time: Create Match-Secrets and keep going. It will go much faster this time.</p> <ul> <li>Instructions to delete a repository are found at GitHub Docs</li> </ul>"},{"location":"gh-actions/gh-first-time/","title":"GitHub First-Time","text":""},{"location":"gh-actions/gh-first-time/#build-loop-using-github-actions","title":"Build Loop using GitHub Actions","text":"<p>This is only available for Loop 3 and greater versions and for Loop development branches.</p> <p>Time Estimate</p> <ul> <li>If you have never built Loop (allow up to one week elapsed time)<ul> <li>Requesting and getting an Apple Developer Account: 1-2 days</li> <li>Creating and configuring your GitHub repositories (without Apple Information): 1-2 hours</li> <li>Adding Secrets (requires Apple Developer Account): 1 hour</li> <li>Performing the Action steps: 30 minutes to 2 hours</li> </ul> </li> <li>If you have previously built Loop with Xcode you have fewer steps and are probably familiar with some of the concepts<ul> <li>Expect 1 to 2 hours</li> </ul> </li> </ul> <p>Summary</p> <p>Once you have Apple Developer and GitHub accounts</p> <ul> <li>Apple: Generate an API Key</li> <li>GitHub:<ul> <li>Create an access token (GH_PAT)</li> <li>Create a Match-Secrets private repository</li> <li>Fork a repository (copy of LoopWorkspace)</li> <li>Add Secrets to your repository</li> <li>Action: 1. Verify Secrets</li> <li>Action: 2. Add Identifiers</li> </ul> </li> <li>Apple:<ul> <li>Configure Identifiers for Loop</li> <li>Create your version of Loop in App Store (personal use only, not for distribution)</li> </ul> </li> <li>GitHub:<ul> <li>Action: 3. Create Certificates</li> <li>Action: 4. Build Loop</li> </ul> </li> <li>Apple: Set up Internal TestFlight Group</li> <li>Phone: Install Loop with TestFlight</li> </ul> <p>FAQs</p> <ul> <li>Do I need a Mac computer? No. This can be done on any browser, although it will be easier using a computer or tablet than just using a phone.</li> <li>Can I do this on my phone? Yes, but the graphics shown on this page are from a computer browser.</li> <li>Isn't it hard to build every 90 days? The initial setup (this page) and deployment (next page) take a lot of your focused time. But once you build once, subsequent builds take very little of your time to start, then the rest is done automatically.</li> <li>Can I use this for my child? You, as the adult, can install using TestFlight on your child's phone. The explicit steps are provided at GitHub Deploy: Install TestFlight Loop for Child.</li> <li>Can I still use my customizations? Yes. Customize with GitHub</li> </ul> <p>You must build Loop every 90 days when you use GitHub build method.</p> <ul> <li>We recommend you configure your GitHub personal access token to never expire<ul> <li>If you have one that expires, go to GitHub Update: Regenerate GitHub Token</li> </ul> </li> <li>Building a new version literally takes seconds once open your browser and go to your GitHub account </li> </ul>"},{"location":"gh-actions/gh-first-time/#prerequisites","title":"Prerequisites","text":"<p>Read and Review</p> <p>Building with GitHub using a browser requires you to do a series of steps in order with no mistakes. But once you've done it once, subsequent builds are trivial.</p> <p>At each point in the process</p> <ul> <li>Check to make sure what you are doing matches the instructions</li> <li>Check to make sure you did not skip a step</li> </ul> <p>Different people approach this differently. Choose your method to achieve success:</p> <ul> <li>Print the summary section above, go through the page sequentially doing each step and check off each step as you go</li> <li>Read this whole page, then review it and read the GitHub Errors: Most Common Mistakes section, then return to this page and start doing each step</li> <li>Figure out your method and use it</li> </ul> <p>Loop 3 requires iOS 15.1 or higher, no reason not to update to latest iOS</p>"},{"location":"gh-actions/gh-first-time/#build-loop","title":"Build Loop","text":"<p>There are only two prerequisites to build Loop with this method.</p> <ol> <li>Paid Apple Developer account</li> <li>Free GitHub account</li> </ol>"},{"location":"gh-actions/gh-first-time/#install-loop","title":"Install Loop","text":"<p>You will need TestFlight, from the Apple App Store, installed on your Compatible Phone. You will install Loop on that phone using the TestFlight app.</p>"},{"location":"gh-actions/gh-first-time/#use-loop","title":"Use Loop","text":"<p>In order to use Loop, you need a Compatible Pump and Compatible CGM. For pumps other than Omnipod DASH, you also need a RileyLink Compatible Device.</p> <p>For the initial steps, you'll be going back and forth between GitHub and Apple Developer webpages. It is best to open each in a separate window or tab for your browser.</p>"},{"location":"gh-actions/gh-first-time/#new-terms-with-github-build","title":"New Terms with GitHub Build","text":"<p>There are a number of terms that may seem unfamiliar with the GitHub Build. As you move through this page, there will be detailed instructions, but it helps to have the overview.</p> <p>Some of these terms have ToolTips, so hover your mouse over the item - or review in the Glossary.</p> <ul> <li>You may find some terms in the Glossary not in alphabetical order. All the Secrets discussed on this page, are listed under Secrets in the Glossary.</li> </ul> <p>Others terms need an expanded explanation. If reading about the new terms first is confusing, finish reviewing the whole page and then come back.</p> <ul> <li><code>Modules</code>: You won't see this term but the concept is important when explaining the other terms<ul> <li>The Loop code uses modules to handle different components of the entire app</li> <li>Some of these modules must be associated with your unique App Group</li> <li>Others do not have this requirement</li> </ul> </li> <li><code>Identifiers</code>: The Identifiers refer to the Modules that must be available to build Loop with GitHub<ul> <li>There are 4 Identifier Names for LoopWorkspace that must be associated with your App Group<ul> <li><code>Loop</code>, <code>Loop Intent Extension</code>, <code>Loop Status Extension</code> and <code>Small Status Widget</code></li> </ul> </li> <li>There are 2 other Identifier Names that must exist but do not require that association<ul> <li><code>WatchApp</code> and <code>WatchAppExtension</code></li> </ul> </li> <li>On the <code>Identifier</code> screen, there will be <code>NAME</code> and <code>IDENTIFIER</code> columns<ul> <li>The items you see under the <code>NAME</code> column depend on whether you previously built with Xcode and may start with <code>XC</code></li> <li>The items under the <code>IDENTIFIER</code> column match the table in the documentation</li> </ul> </li> </ul> </li> <li><code>Secrets</code>: a method to securely embed personal information into your fork of LoopWorkspace to enable GitHub to have the access required to build Loop<ul> <li>There are 6 Secrets that must be added to your fork of LoopWorkspace</li> <li>These Secrets work for any branch in your fork (<code>main</code> or <code>dev</code>, for example)</li> <li>These same Secrets are added to your GitHub fork for Other Apps configured with the same GitHub build method</li> </ul> </li> <li><code>App Store Connect</code>: a website available for Apple Developers to review their apps<ul> <li>Once you purchase an Apple Developer annual account, you are an Apple Developer and have access to this site</li> <li>Most Loopers will not have an App on their page until using the GitHub build method</li> <li>The name of an app must be unique across the entire App Store worldwide<ul> <li>You will need a unique name for your Loop App</li> </ul> </li> </ul> </li> <li>API <code>Key</code>: Application Programming Interface Key<ul> <li>This key will be obtained by you from the Apple Developer website to enable your GitHub account to interface with Apple to create your app</li> </ul> </li> <li><code>Actions</code>: a custom application for the GitHub Actions platform that performs a complex but frequently repeated task<ul> <li>With Loop 3, actions to Verify Secrets, Add Identifiers, Create Certificates, and Build Loop are provided to enable users to build the Loop app from a browser on any computer</li> <li>The GitHub system is maintained by Microsoft Corporation and they do a good job of keeping it running - however, if there is a problem, it will be reported on GitHub Status.</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#configure-to-use-github-build-actions","title":"Configure to use GitHub Build Actions","text":"<p>Review the entire process before starting and then go through slowly and carefully.</p> <p>These instructions allow you to build Loop without having access to a Mac. They also allow you to easily install Loop on phones that are not connected to your computer.</p> <ul> <li>You can send Loop app updates to those you care for</li> <li>You can access and install the Loop app via TestFlight if you lose or damage your device</li> <li>You do not need to worry about the correct Xcode or macOS versions</li> </ul> <p>The setup steps are somewhat involved, but nearly all are one-time steps. Subsequent builds are trivial. The initial steps are best done on a computer where you can save and archive information for later use. Use a text-only editor for this archive file for your Secrets. People have gotten into difficulties when a lower-case character was \"auto-corrected\" to upper-case when pasting into their archive file.</p> <p>TestFlight can be used to deploy Loop to a child's phone (under age 13 in the US) but requires a few extra steps on the phone itself. See Install TestFlight Loop for Child.</p> <p>Your app must be updated once every 90 days, at the current time, but it's simple to make a new build and can be done from anywhere, see Update Loop using GitHub Actions.</p>"},{"location":"gh-actions/gh-first-time/#save-your-information","title":"Save Your Information","text":"<p>Archive This Information</p> <p>For many of the steps on this page, you will need to have access to usernames, email addresses, passwords, and in some cases, special parameters.</p> <ul> <li>Record these in a safe place so you can find them when you need them</li> <li>A digital copy is best because you will be copying and pasting in different locations</li> </ul> <p>Be sure to use a Text-Only editor like NotePad (PC) or TextEdit (Mac) to archive your information.</p> <p>A Note about Capitalization and Spaces</p> <p>In places, you will be told to give something a name like FastLane API Key or FastLane Access Token. Please copy from the docs to use those exact names.</p> <p>The Secrets that you will add later use names that are capitalized and use underscore _ instead of spaces. Be precise and careful.</p> <p>The relationship and creation of each item is explained step-by-step on this page.</p> <p>Use a Text-Only Editor</p> <p>If you use a \"smart\" editor, it may change lower-case letters to upper-case letters at the beginning of a line when you paste items into your archive file.</p> <p>If even one character is capitalized when it should not be, you will get GitHub Errors.</p> <p>If you use a smart editor to store your FASTLANE_KEY, you are likely to get the mysterious <code>invalid curve name</code> error.</p> <p>The list below indicates what you need to record (save digitally so you can copy and paste). Notice that some information is created in one place and used in another. The items in all capital letters will be added to the Secrets for your LoopWorkspace fork, so they are listed twice in the list below.</p> <p>Needed or created at developer.apple.com</p> <ul> <li>Email address (this is your username)</li> <li>password</li> <li><code>TEAMID</code></li> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> </ul> <p>Needed or created at github.com</p> <ul> <li>Email address</li> <li>password</li> <li>username</li> <li>Your GitHub repository address will be: <code>https://github.com/username</code></li> <li>Your LoopWorkspace repository address will be: <code>https://github.com/username/LoopWorkspace</code></li> <li>GitHub Personal Access Token (GH_PAT)</li> <li>a password - make one up and save it (<code>MATCH_PASSWORD</code>)</li> </ul> <p>Needed when you Configure Secrets</p> <ul> <li>Save names and values in a text-only editor</li> <li>These same secrets are used for Loop and for Other Apps<ul> <li><code>TEAMID</code></li> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> <li><code>GH_PAT</code></li> <li><code>MATCH_PASSWORD</code></li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#apple-developer-account","title":"Apple Developer Account","text":"<p>If you have an Apple Developer Account, you should sign in to your account before starting. There will be links to take you to specific pages; if you are not already logged in, you will be required to log in before you can go to that page.</p> <p>If you do not already have a paid Apple Developer account, you need to purchase one ($99 annual fee). It may take a few days for the account to be enabled.</p> <ul> <li>LoopDocs has an Apple Developer Program page that explains in detail how to sign up for an account</li> <li>This link takes you straight to Apple Developer account to sign up</li> </ul>"},{"location":"gh-actions/gh-first-time/#find-teamid","title":"Find TEAMID","text":"<ul> <li>Open this link: Apple developer portal page.</li> <li>Click <code>Account</code> in the top menu bar</li> <li>Click the <code>Membership Details</code> icon </li> <li>Next to the <code>Team ID</code> field, you will see a 10-character ID number.   This is your Apple Developer <code>TEAMID</code>.     </li> <li>Record this for use when you configure your Secrets and when you configure your unique App Group </li> <li> <p>Stop a moment and double-check - if you get this wrong, you will have errors later</p> <p>Do not \"type\" what you think you see</p> <p>Copy and paste from the <code>Team ID</code> from the webpage. (Avoid the wrong number of characters; avoid typing an <code>8</code> when it should be a <code>B</code>.)</p> </li> </ul>"},{"location":"gh-actions/gh-first-time/#generate-api-key","title":"Generate API Key","text":"<p>Need a Paid Apple Developer Account Set Up to Generate the API Key</p> <p>You cannot generate the API Key until you have the paid Apple Developer account set up. If you are still waiting for Apple to enable your account, you can skip ahead to complete part of the GitHub steps (see New GitHub Account or Setup GitHub), but you will need to pause at Configure Secrets.</p> <p>Abstract</p> <p>This section will walk you through the steps required to gather or create these parameters.</p> Name Description <code>TEAMID</code> This 10-character identifier is associated with your Apple Developer ID and never changes <code>FASTLANE_ISSUER_ID</code> The issuer ID is associated with your Apple Developer ID and never changes <code>FASTLANE_KEY_ID</code> Key ID provided when you create an API key in App Store Connect; it is associated with the <code>FASTLANE_KEY</code> <code>FASTLANE_KEY</code> Copy the full key from the text file you downloaded when generating the API key - Filename has <code>FASTLANE_KEY_ID</code> value embedded in it.Include everything in the file from <code>-----BEGIN PRIVATE KEY-----</code>and ending in <code>-----END PRIVATE KEY-----</code> <p>Each step has a link to take you to the specific page you need to do the next step. It is best if you open each link in a separate tab or window so you can refer back to these instructions as you move along.</p> <ol> <li> <p>Open this link: <code>App Store Connect/Access/API</code></p> <ul> <li> <p>Click the <code>Keys</code> tab</p> <ul> <li> <p>If this is your first time here, there will be a dialog for you to follow:</p> <p>\"<code>Permission is required to access the App Store Connect API. You can request access on behalf of your organization.</code>\"</p> <ul> <li>Click on <code>Request Access</code> and follow directions until access is granted</li> </ul> </li> <li> <p>Once access is granted, click on the <code>Generate API Key</code> button</p> </li> </ul> </li> <li> <p>If you did not get routed through the <code>permission is required</code> screens click the blue + sign</p> </li> </ul> <p></p> <ul> <li>A new <code>Generate API Key</code> dialog box will appear as shown in the graphic below</li> </ul> <p></p> <ul> <li>Enter the name of the key as \"<code>FastLane API Key</code>\" and choose <code>Admin</code> in the access drop-down menu</li> <li>Confirm the name and that \"<code>Admin</code>\" is selected and then click on the \"<code>Generate</code>\" button.</li> </ul> </li> </ol>"},{"location":"gh-actions/gh-first-time/#copy-api-key-secrets","title":"Copy API Key Secrets","text":"<p>The <code>Keys</code> screen is seen again with the additional content similar to that shown in the graphic below; the key information is blanked out for security.</p> <ul> <li> <p>Review the graphic and then follow the directions below to save more parameters you will need to Configure Secrets</p> <p></p> </li> <li> <p>A button labeled Copy is always adjacent to the <code>Issuer ID</code> above the word Active (this is the same for all keys that you generate with this Apple Developer ID)</p> <ul> <li>Tap on the <code>Copy</code> button - this copies the <code>Issuer ID</code> into your paste buffer</li> <li>In the file where you are saving information, paste this with the indication that it is for  <code>FASTLANE_ISSUER_ID</code></li> </ul> </li> <li>Hover to the right of the <code>Key ID</code> and the <code>Copy Key ID</code> button shows up<ul> <li>Tap on the <code>Copy Key ID</code> button - this copies the <code>Key ID</code> into your paste buffer</li> <li>In the file where you are saving information, paste this with the indication that it is for  <code>FASTLANE_KEY_ID</code></li> </ul> </li> <li> <p>Click on the <code>Download API Key</code> button - you will be warned you can only download this once.</p> <p></p> </li> <li> <p>Find your <code>AuthKey</code> download in your downloads folder. The name of the file will be \"<code>AuthKey_KeyID.p8</code>\" where <code>KeyID</code> matches your <code>FASTLANE_KEY_ID</code></p> <ul> <li>Double-click to open it and you will be presented a message asking how you'd like to open it (message shown is for a Mac - translate these directions to whatever computer you are using)</li> <li>Click on \"<code>Choose Application...</code>\" and then select \"<code>TextEdit</code>\" (on a Mac, NotePad on a PC, or any text-only editor you prefer)</li> </ul> <p></p> </li> <li> <p>The contents of this file will be used for <code>FASTLANE_KEY</code></p> <ul> <li>Copy the full text, including the \"<code>-----BEGIN PRIVATE KEY-----</code>\" and \"<code>-----END PRIVATE KEY-----</code>\" lines<ul> <li>On a Mac, use Cmd+A, then Cmd+C  to copy all the contents</li> <li>On a PC, use Ctrl+A , then Ctrl+C to copy all the contents</li> </ul> </li> <li>In the file where you are saving information, paste this with the indication that it is for  <code>FASTLANE_KEY</code></li> </ul> <p></p> </li> </ul>"},{"location":"gh-actions/gh-first-time/#do-not-confuse-your-keys","title":"Do Not Confuse Your Keys","text":"<p>API Key vs APN Key</p> <p>If you use Remote Commands with Nightscout, you may notice the Application Programming Interface (API) key has the same type of format as the Apple Push Notification (APN) key. The keys for both of these purposes are p8 keys, but they should not be confused with each other.</p> <p>The Secrets for building with GitHub use the API Key.</p> <p>The config vars for Nightscout use the APN Key.</p> <ul> <li>If you are using remote commands with Nightscout and building with the GitHub build, you must also add the config var of <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> with a value of <code>production</code> to your Nightscout site or the remote commands will not work.</li> </ul>"},{"location":"gh-actions/gh-first-time/#done-with-apple-secrets","title":"Done with Apple Secrets","text":"<p>In summary, from this section, you have found or generated the following, and saved copies for later use</p> <ul> <li><code>TEAMID</code></li> <li><code>FASTLANE_ISSUER_ID</code></li> <li><code>FASTLANE_KEY_ID</code></li> <li><code>FASTLANE_KEY</code></li> </ul> <p>Time for a Break?</p> <p>This is a good place to pause if you need to. Just note where you are on the page so you can return later.</p>"},{"location":"gh-actions/gh-first-time/#lost-fastlane_key","title":"Lost FASTLANE_KEY","text":"<p>I can't find my FASTLANE_KEY</p> <p>If you cannot find where you stored your information, you can get a new key. You cannot recover an old one. Return to Generate API Key, but add this initial step.</p> <p>When you use the link in the Generate API Key step, you will see an Active key. You must first click Edit by the Active section, revoke your \"<code>FastLane API Key</code>\" and then follow the directions to generate a new one. You will have to update the <code>Secrets</code> for every App repository when you take this step.</p> <p>The <code>FASTLANE_KEY_ID</code> and <code>FASTLANE_KEY</code> must both be updated.</p>"},{"location":"gh-actions/gh-first-time/#new-github-account","title":"New GitHub Account","text":"<p>If you have a GitHub account, you can skip to Setup GitHub. Make sure you know your GitHub associated email, username (<code>username</code>), and password.</p> <p>If you do not already have a GitHub account, you need to create one. Be sure to record the email, password, and username for your GitHub account.</p> <p>Decide on a couple of usernames that you will be happy with - this will get embedded into your GitHub URL. Your first choice might not be available, so be prepared with several candidates. Your personal URL will be: <code>https://github.com/username</code>.</p> <ul> <li>Click on this link to sign up for a free account: github account signup<ul> <li>You will need to enter the email you want associated your GitHub account</li> <li>You will be asked to enter a password</li> <li>You will be asked to enter a username</li> <li>You will be asked if you want to receive email, ok to say <code>N</code> for no - you still get important account information with that email</li> <li>Solve the puzzle to prove you're a person</li> <li>Check the associated email to get the code and enter the code into github.com to confirm your account</li> </ul> </li> <li>You should get the Welcome to GitHub screen<ul> <li>Indicate it is \"Just me\" on your team and Continue</li> <li>Don't check anything on the next screen, just tap <code>Continue</code></li> <li>Select the <code>Free</code> option by selecting <code>Continue for Free</code></li> </ul> </li> </ul> <p>The free level comes with plenty of storage and compute time to build Loop.</p>"},{"location":"gh-actions/gh-first-time/#setup-github","title":"Setup GitHub","text":"<p>Now you will configure a personal access token (<code>GH_PAT</code>), create one new repository and then fork the <code>LoopWorkspace</code> repository.</p>"},{"location":"gh-actions/gh-first-time/#create-gh_pat","title":"Create GH_PAT","text":"<p>You must be logged into your GitHub account before starting this step. If you are continuing, you are already logged in.</p> <ol> <li>You will be creating a new GitHub <code>Personal Access Token</code> and giving it the name \"<code>FastLane Access Token</code>\"</li> <li> <p>Open this link: https://github.com/settings/tokens/new</p> <ul> <li>Referring to the graphic<ul> <li>Note that <code>Tokens (classic)</code> is highlighted</li> <li>Most Looper will use the <code>classic Token</code><ul> <li>If you are a developer who needs to use fine-grained <code>tokens</code>, that is fine</li> </ul> </li> <li>Edit the note box to be <code>FastLane Access Token</code></li> </ul> </li> <li>The default Expiration time is 30 days - but you should select <code>No expiration</code> (use the drop down menu to select)<ul> <li>GitHub will show a yellow warning when you do this</li> <li>It is ok to ignore the warning</li> </ul> </li> <li>Add a check beside the <code>workflow</code> permission scope</li> <li>A check will automatically appear in the <code>repo</code> scope as well - this is normal</li> <li>Scroll all the way to the bottom and click <code>Generate token</code> (it's a long way, ignore all other settings, do not check anything else)</li> </ul> <p></p> </li> <li> <p>A new screen appears showing your access token</p> <ul> <li>Copy the <code>token</code> and record it - once you leave this screen you can't see it again</li> <li>You will use this for <code>GH_PAT</code> when you set up your Secrets</li> <li>You can Regenerate GitHub Token for <code>GH_PAT</code> if you lose it, but best to keep it safe</li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#create-match-secrets","title":"Create Match-Secrets","text":"<p>Open your github.com URL (this is <code>https://github.com/username</code>), where you replace <code>username</code> with the name you chose above.</p> <p>Create a new private repository - you can either click on the link below or follow the instructions with the first graphic:</p> <ul> <li>Click on this link: (https://github.com/new)</li> </ul> <p>or</p> <ul> <li> <p>At the top right of the screen, click on the + sign and select <code>New Repository</code></p> <p></p> </li> </ul> <p>This shows you a screen similar to the following graphic which has 3 regions highlighted:</p> <ul> <li>In <code>Repository name</code>, type <code>Match-Secrets</code> (use a hyphen between <code>Match</code> and <code>Secrets</code>)</li> <li>Be sure to check the  box <code>Private</code>  (red circle) to make the repository private</li> <li>Please confirm you selected <code>Match-Secrets</code> repository as private.</li> <li>Scroll to the bottom of the page and tap on \"<code>Create repository</code>\"</li> </ul> <p></p> <p>You will then be shown a screen with a lot of options - you will not do anything on this screen except leave it.</p> <ul> <li>Click on just your username (as indicated by the red rectangle) to return to your main GitHub URL.</li> </ul> <p></p> <p>You will not be interacting with your <code>Match-Secrets</code> repository directly. It needs to exist for other actions to work correctly.</p> <p>You are done with this part of the setup.</p>"},{"location":"gh-actions/gh-first-time/#fork-loopworkspace","title":"Fork LoopWorkspace","text":"<p>Existing Fork</p> <p>Some people may already have a fork of <code>LoopWorkspace</code>. Click on Already Have LoopWorkspace, decide what to do, and follow the appropriate link back to these instructions.</p> <ol> <li>Open this link https://github.com/LoopKit/LoopWorkspace to open the <code>LoopWorkspace</code> repository owned by <code>LoopKit</code>.</li> <li>Review the highlighted locations of the graphic below (yours won't look quite like this yet), but the <code>Fork</code> button is in the same place</li> <li>At the upper right side of the screen, click on the word <code>Fork</code><ul> <li>If you already have a fork, it will not allow you to proceed, see Already Have LoopWorkspace</li> </ul> </li> <li> <p>Now your screen should look like the graphic below</p> <ul> <li>Your username will be automatically filled in as the owner (<code>Owner</code>)</li> <li><code>LoopWorkspace</code> is automatically filled in as the repository name (<code>Repository Name</code>)</li> <li>Leave the selection that says \"<code>Copy the main branch only</code>\" checked</li> <li>Click on the green <code>Create fork</code> button</li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#successful-fork","title":"Successful Fork","text":"<p>After creating the fork, your screen should be similar to the next graphic - it will say <code>main</code> for the branch instead of <code>dev</code> because this graphic was prepared before the release of Loop 3. You may or may not see the messages you are told to dismiss in the next two bullets. No worries if you don't see them.</p> <ul> <li>Near the top right, click on the close button  (<code>x</code>) to dismiss the <code>Successfully fetched</code> message</li> <li>In the middle, click on the <code>Dismiss</code> button to remove the \"<code>Your branch is not protected</code>\" message</li> </ul> <p></p> <p>Carefully compare your screen to the graphic below paying attention to the highlighted sections.</p> <ul> <li>Note that your username is now showing</li> <li>The comment under your username indicates where the fork came from (that is a clickable link)</li> <li>The branch that is selected  is <code>main</code></li> <li>The message says \"<code>This branch is up to date with LoopKit/LoopWorkspace:main</code>\"</li> </ul> <p></p> <p>Time for a Break?</p> <p>This is a good place to pause if you need to. Just note where you are on the page so you can return later.</p>"},{"location":"gh-actions/gh-first-time/#configure-secrets","title":"Configure Secrets","text":"<p>Secrets can be used for Other Apps</p> <ul> <li>There are 6 Secrets that must be added to your fork of <code>LoopWorkspace</code></li> <li>These Secrets work for any branch in your fork (<code>main</code> or <code>dev</code>, for example)</li> <li>These same Secrets would be added to your fork of a repository for Other Apps</li> </ul> <p>You need to be logged into GitHub.</p> <ol> <li> <p>Return to your forked copy of <code>LoopWorkspace</code></p> <ul> <li>Click on your personal icon at the upper right to see the drop-down menu and select \"<code>Your repositories</code>\"</li> </ul> <p></p> </li> <li> <p>You should see (at least) 2 repositories: <code>Match-Secrets</code> and <code>LoopWorkspace</code></p> </li> <li>Click on <code>LoopWorkspace</code> to open that repository</li> <li> <p>Click on the Settings Icon near the top right of your LoopWorkspace</p> <ul> <li>If you don't see \u2699\ufe0f <code>Settings</code>, make your browser wider or scroll to the right</li> <li>If you still don't see \u2699\ufe0f <code>Settings</code>, then you are not on your fork or you need to sign in to your GitHub account</li> <li> <p>After you click on \u2699\ufe0f <code>Settings</code>, your screen should look like the graphic below</p> <p></p> </li> </ul> </li> <li> <p>On the left side, find the <code>Secrets and variables</code> dropdown and choose <code>Actions</code></p> <ul> <li> <p>After you select on <code>Actions</code>, your screen should look like the graphic below</p> <p></p> </li> </ul> </li> <li> <p>Tap on the green button at the top right of your screen labeled <code>New repository secret</code> (refer to the graphic above where the button is highlighted)</p> <ul> <li>A new dialog screen appears as shown in the graphic below</li> <li>Do not do anything yet - first read what you will do in the next section<ul> <li>In the <code>Name *</code>  box where it says <code>YOUR_SECRET_NAME</code>, you will click in the box and paste one of the 6 secret names, as directed in Enter Each Secret</li> <li>In the <code>Secret *</code> box, you will click in the box and paste the value for that secret</li> <li>Once you click on <code>Add Secret</code>, the secret will be added</li> </ul> </li> </ul> </li> </ol> <p></p>"},{"location":"gh-actions/gh-first-time/#enter-each-secret","title":"Enter Each Secret","text":"<p>Refer to the list of parameters found in Save Your Information. This is the time you will enter these items.</p> <p> Take a calming breath. This next part requires care.</p> <ul> <li>Once you enter and save a secret value, you will not be able to view what you just entered, so check carefully before you hit <code>Add Secret</code> to save it<ul> <li>You can replace the value for any secret later - you just can't see what you entered before</li> </ul> </li> <li>If you make a mistake, the actions you take in the next sections will fail, but the error messages help you figure out which secrets you need to fix</li> <li>So collect the list of information you've gathered so it's handy and make up a password for the <code>MATCH_PASSWORD</code> and save that in your secrets archive file</li> <li>Confirm, one more time, that your <code>TEAMID</code> is correct<ul> <li>If it is not, all will appear fine until you try to Build Loop and then you will get failures</li> </ul> </li> </ul> <p>For each of the following secrets, follow the directions below - this list is configured with a copy button () when you hover to the right of each word - this helps avoid spelling errors. <pre><code>TEAMID\n</code></pre> <pre><code>FASTLANE_ISSUER_ID\n</code></pre> <pre><code>FASTLANE_KEY_ID\n</code></pre> <pre><code>FASTLANE_KEY\n</code></pre> <pre><code>GH_PAT\n</code></pre> <pre><code>MATCH_PASSWORD\n</code></pre></p> <ul> <li>For the <code>FASTLANE_KEY</code> value, copy the entire contents from<code>-----BEGIN PRIVATE KEY-----</code> through<code>-----END PRIVATE KEY-----</code></li> <li>For <code>MATCH_PASSWORD</code> value - make up a password for this and save it for later use<ul> <li>The <code>MATCH_PASSWORD</code> must be the same for any repository using this method (Other Apps)</li> </ul> </li> </ul> <p>Once all six secrets have been added to your <code>LoopWorkspace</code>, you are done with Settings. Your screen should look similar to the graphic below.</p> <ul> <li>Take a moment to be sure all of your secrets are spelled correctly</li> <li>If you notice a mistake, just delete the one that is not spelled correctly and add a <code>New repository secret</code> with the correct name</li> </ul> <p></p> <p>Time for a Break?</p> <p> This is a good place to pause if you need to. Just note where you are on the page so you can return later.</p>"},{"location":"gh-actions/gh-first-time/#validate-secrets","title":"Validate Secrets","text":"<p>This step checks that the Secrets you added are correct. Some things cannot be validated at this point, but most can and a relatively clear error message is provided.</p> <p>This will be updated soon, but for now - follow the instructions under \"Add Identifiers for Loop\", but do the first action: \"1 Validate Secrets\".</p>"},{"location":"gh-actions/gh-first-time/#add-identifiers-for-loop","title":"Add Identifiers for Loop","text":"<p>Near the top middle of your <code>LoopWorkspace</code> fork, there is an <code>Actions</code> tab. If you have used <code>Actions</code> on this repository before, skip ahead to Add Identifiers.</p>"},{"location":"gh-actions/gh-first-time/#first-use-of-actions-tab","title":"First Use of Actions Tab","text":"<p>Click on the <code>Actions</code> tab of your <code>LoopWorkspace</code> repository.</p> <ul> <li>The first time you click on <code>Actions</code> with this repository you'll be informed that <code>Workflows aren't being run on this forked repository</code> as shown in the graphic below</li> <li> <p>Tap on the green button that says: <code>I understand my workflows, go ahead and enable them</code></p> <p></p> </li> </ul> <p>The <code>workflows</code> are now displayed: look at the list on the left side as shown in the graphic below. (You can dismiss the <code>Actions Enabled</code> message using the <code>X</code> near the upper right side if it appears).</p> <p></p>"},{"location":"gh-actions/gh-first-time/#add-identifiers","title":"Add Identifiers","text":"<p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the <code>Actions</code> tab of your <code>LoopWorkspace</code> repository</li> <li>On the left side, click on 2. <code>Add Identifiers</code></li> <li>On the right side, click <code>Run Workflow</code> to show a drop-down menu<ul> <li>You will see your default branch (should be <code>main</code>)</li> <li>If your default branch is not <code>main</code>, review GitHub Early Adopters</li> </ul> </li> <li> <p>Tap the green button that says <code>Run workflow</code>.</p> <p></p> </li> </ol> <p>The <code>Add Identifier</code> Action should complete (succeed or fail) in a few minutes as shown in the graphic below.</p> <ul> <li>If you see the green check ()  continue to the next section</li> <li>If you see the red <code>X</code> (): <ul> <li>Examine the Error tells you how to download the file needed to diagnose your problem.</li> <li>Action: Add Identifiers Errors lets you know what to search for in the downloaded file</li> <li>Once you've resolved the error, repeat the Action: Add Identifiers step</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-first-time/#configure-identifiers-for-loop","title":"Configure Identifiers for Loop","text":""},{"location":"gh-actions/gh-first-time/#create-app-group","title":"Create App Group","text":"<p>The <code>Loop</code> App Group already exists if you previously built Loop using Xcode with this Apple Developer ID. If that is the case, skip ahead to Find Loop Identifier.</p> <p>If you have never built Loop with Xcode using your <code>TEAMID</code>, you need to create an App Group associated with your <code>TEAMID</code>.</p> <ol> <li>Open this link: <code>Register an App Group</code> on the Apple developer site.</li> <li>For <code>Description</code>, use <code>Loop App Group</code>.</li> <li>For <code>Identifier</code>, enter <code>group.com.TEAMID.loopkit.LoopGroup</code>, substituting your team id for <code>TEAMID</code>.</li> <li>Double-check the spelling - your <code>TEAMID</code> must be correct and the <code>Loop</code> App Group must match the format shown in the previous step<ul> <li>A mistake here means you will not be able to build Loop until you fix it</li> </ul> </li> <li>Click <code>Continue</code> and then <code>Register</code>.</li> </ol>"},{"location":"gh-actions/gh-first-time/#find-loop-identifier","title":"Find Loop Identifier","text":"<p>Open this link: <code>Certificates, Identifiers &amp; Profiles: Identifiers List</code> on the Apple developer site.</p>"},{"location":"gh-actions/gh-first-time/#new-builders","title":"New Builders","text":"<p>If you never built using Xcode, then after successfully performing the <code>Add Identifiers</code> Action, you will see the six items listed under <code>NAME</code> in the table below with the associated <code>IDENTIFIER</code> information, where your <code>Developer ID</code> replaces the <code>TEAMID</code> in the identifier.</p>"},{"location":"gh-actions/gh-first-time/#previous-xcode-builders","title":"Previous Xcode Builders","text":"<p>If you have built Loop using Xcode, then at least the Loop identifier will appear as <code>XC com.TEAMID.loopkit.Loop</code> under the <code>NAME</code> column. There may be other differences in the <code>NAME</code> column, but key off what you see under the <code>IDENTIFIER</code> column of the table. Only the six listed in the table below are of interest when building Loop.</p>"},{"location":"gh-actions/gh-first-time/#table-with-name-and-identifier-for-loop-3","title":"Table with Name and Identifier for Loop 3","text":"<code>NAME</code> <code>IDENTIFIER</code> <code>Loop</code> <code>com.TEAMID.loopkit.Loop</code> <code>Loop Intent Extension</code> <code>com.TEAMID.loopkit.Loop.Loop-Intent-Extension</code> <code>Loop Status Extension</code> <code>com.TEAMID.loopkit.Loop.statuswidget</code> <code>Small Status Widget</code> <code>com.TEAMID.loopkit.Loop.SmallStatusWidget</code> <code>WatchApp</code> <code>com.TEAMID.loopkit.Loop.LoopWatch</code> <code>WatchAppExtension</code> <code>com.TEAMID.loopkit.Loop.LoopWatch.watchkitextension</code> <p>Loop 2 to Loop 3 Builders</p> <p>Several people who built earlier versions of Loop with Xcode and are using the GitHub method say they can't find the identifier names. You can key off the <code>IDENTIFIER</code> instead of the <code>NAME</code> column in the table above.</p> <p>Or</p> <p>Follow the <code>Delete Identifiers</code> instructions and then run Action: <code>Add Identifiers</code> again. You might not be able to delete the \"Loop\" identifier, so it will still begin with <code>XC</code>, but the others will appear with the short names shown above.</p>"},{"location":"gh-actions/gh-first-time/#add-or-review-configuration-for-loop-identifier","title":"Add or Review Configuration for Loop Identifier","text":"<p>Find and click on the row for the Loop identifier on the Certificates, Identifiers &amp; Profiles: Identifiers List page. Look in the <code>IDENTIFIER</code> column to find <code>com.TEAMID.loopkit.Loop</code>. The name in the <code>NAME</code> column may be different than Loop. </p> <code>NAME</code> <code>IDENTIFIER</code> <code>Loop</code> <code>com.TEAMID.loopkit.Loop</code> <p>The <code>Edit Your App ID Configuration</code> screen will open. You will be taking two actions for the Loop identifier.</p> <ol> <li>Looking at the <code>App Services</code> column, scroll down to the <code>App Groups</code> row<ul> <li>Ensure the check box (under the <code>Capabilities</code> column) for <code>App Groups</code> is checked</li> <li>(<code>XC Loop</code>) - If the word <code>Edit</code> shows up under <code>NOTES</code>, move on to step 2 below</li> <li>If the word <code>Configure</code> shows up, tap on it<ul> <li>This opens the <code>App Group Assignment</code> screen</li> <li>Check the box by <code>Loop</code> App Group that uses your <code>TEAMID</code> in <code>group.com.TEAMID.loopkit.LoopGroup</code> and then <code>Continue</code></li> </ul> </li> </ul> </li> <li> <p>Continue scrolling down to the <code>Time Sensitive Notifications</code> row</p> <ul> <li>Check, or confirm the box is checked, next to <code>Time Sensitive Notifications</code> as shown in the following graphic</li> <li>This is only needed for the <code>Loop</code> identifier</li> </ul> <p></p> </li> <li> <p>Now scroll slowly back up to the top of the page. As you go, confirm that each of these is configured with a check mark; if any are missing, click to enable.</p> <ul> <li><code>Time Sensitive Notifications</code></li> <li><code>Siri</code> (formerly known as <code>SiriKit</code>)</li> <li><code>Push Notifications</code></li> <li><code>HealthKit</code></li> <li><code>App Groups</code> (enabled with <code>group.com.TEAMID.loopkit.LoopGroup</code>)</li> </ul> </li> </ol> <p>If you modified settings for the <code>Loop</code> identifier, the <code>Save</code> button at the top right will become active. Click on <code>Save</code> before leaving this page - otherwise, the change does not take effect.</p> <ul> <li>Tap on <code>Save</code></li> <li>This opens the <code>Modify App Capabilities</code> confirmation screen</li> <li>Click on <code>Confirm</code></li> </ul> <p>If you did not need to make changes, the <code>Save</code> button will not be active.</p> <ul> <li>Tap on the <code>&lt; All Identifiers</code> button at the top left</li> </ul> <p>The full list of Identifiers should be displayed again.</p>"},{"location":"gh-actions/gh-first-time/#add-app-group-to-other-identifiers","title":"Add App Group to Other Identifiers","text":"<p>You will now be checking the status for 3 more identifiers to ensure the App Group is configured to use the <code>Loop</code> App Group. You must add or confirm the App Group for these 3 identifiers:</p> <code>NAME</code> <code>IDENTIFIER</code> <code>Loop Intent Extension</code> <code>com.TEAMID.loopkit.Loop.Loop-Intent-Extension</code> <code>Loop Status Extension</code> <code>com.TEAMID.loopkit.Loop.statuswidget</code> <code>Small Status Widget</code> <code>com.TEAMID.loopkit.Loop.SmallStatusWidget</code> <p>Find and click on a given identifier row on the Certificates, Identifiers &amp; Profiles: Identifiers List page.</p> <p>The <code>Edit Your App ID Configuration</code> screen will open. You will be taking one action for each of these three identifiers.</p> <p>Looking at the <code>App Services</code> column, scroll down to the <code>App Groups</code> row</p> <ul> <li>Ensure the check box (under the <code>Capabilities column</code>) for <code>App Groups</code> is checked</li> <li>If the word <code>Edit</code> shows up under <code>NOTES</code>, return to the identifiers list</li> <li>If the word <code>Configure</code> shows up, tap on it<ul> <li>This opens the <code>App Group Assignment</code> screen</li> <li>Check the box by <code>Loop App Group</code> that uses your <code>TEAMID</code> in <code>group.com.TEAMID.loopkit.LoopGroup</code> and then <code>Continue</code></li> </ul> </li> </ul> <p>If you had to modify a given identifier, the <code>Save</code> button at the top right will become active</p> <ul> <li>Tap on <code>Save</code></li> <li>This opens the <code>Modify App Capabilities confirmation</code> screen</li> <li>Click on <code>Confirm</code></li> </ul> <p>If you did not need to make changes, the <code>Save</code> button will not be active.</p> <ul> <li>Tap on the <code>&lt; All Identifiers</code> button at the top left</li> </ul> <p>The full list of Identifiers should be displayed again.</p>"},{"location":"gh-actions/gh-first-time/#create-loop-app-in-app-store-connect","title":"Create Loop App in App Store Connect","text":"<p>If you have created a <code>Loop app</code> in App Store Connect before, you can skip this section.</p> <p>If have previously used some kind of remote build, like <code>diawi</code> or <code>TestFlight</code>, you may have your Loop in the App Store but can't see it. Don't worry - there are instructions for this case.</p> <ol> <li> <p>Open this link: <code>App Store Connect / Apps</code> to view your apps; log in if needed.</p> <ul> <li>If you have never added an app to App Store Connect, you will not see the icons inside the red rectangle and should keep going, although some people report the search icon shows up for them</li> <li>If you have an app that is not shown, you will see a search icon and the <code>All Statuses</code> dropdown. If you get to step 3 and cannot find your <code>com.TEAMID.loopkit.Loop</code> in the Bundle ID drop-down, this means you need to follow Find My Loop.</li> </ul> <p></p> </li> <li> <p>Click the <code>Add Apps</code> button or the blue \"plus\" icon ( ) and select <code>New App</code> as shown in the graphic below</p> <p></p> </li> <li> <p>The <code>New App</code> dialog box opens and should appear similar to the graphic below. Before you fill anything out, make sure your <code>Bundle ID</code> is available in the dropdown menu (it shows as <code>Choose</code> in the graphic below). If you do not see <code>com.TEAMID.loopkit.Loop</code>, with <code>TEAMID</code> matching your <code>TEAMID</code> in the dropdown menu; back out of this screen and follow the directions in Find My Loop instead.</p> <ul> <li>Select <code>iOS</code>.</li> <li>Enter a name: this will have to be unique<ul> <li>You could start with <code>Loop_ABC</code> where <code>ABC</code> are your initials</li> <li>If that is already taken, you can add a number, for example, <code>Loop_ABC_123</code></li> <li>This name is what you see on the App Store Connect list and in the TestFlight app</li> <li>Once installed on your phone, you will see Loop with the standard Loop Logo</li> <li>You can Change the App Store Connect Name later if you want</li> </ul> </li> <li>Select your primary language.</li> <li>Choose the <code>Bundle ID</code> that matches <code>com.TEAMID.loopkit.Loop</code></li> <li><code>SKU</code> can be anything; for example <code>123</code>.</li> <li>Select \"<code>Full Access</code>\".</li> </ul> <p></p> </li> <li> <p>One last check - if the <code>Bundle ID</code> has a number other than your actual 10-digit <code>TEAMID</code> embedded in it, you will be creating an App in the App Store that you cannot use</p> <ul> <li>In this case, do NOT select <code>Create</code></li> <li>Instead, go back and put the correct value into the <code>TEAMID</code> Secret  and follow the steps in Delete Identifiers</li> </ul> </li> <li>Click <code>Create</code> but do not fill out the next form. That is for submitting to the app store and you will not be doing that.</li> </ol> <p>You are done with this activity and can close the browser tab. It's time to head back to your GitHub account and Create Certificates</p>"},{"location":"gh-actions/gh-first-time/#find-my-loop","title":"Find My Loop","text":"<p>This section is for people who were not able to follow the instructions in the last section because <code>com.TEAMID.loopkit.Loop</code>, with <code>TEAMID</code> matching your <code>TEAMID</code>, was not in the dropdown menu for <code>Bundle ID</code>.</p> <p>There are two possible reasons:</p> <ol> <li>You did not complete Add App Group to Other Identifiers or one of the predecessor steps; review those steps</li> <li>Your app is already in App Store Connect, but you cannot see it</li> </ol> <p>You may have no memory of ever setting up <code>Loop</code> in App Store Connect. If you previously used some kind of remote build, like <code>diawi</code>, your <code>Loop</code> may be there as a Removed App.</p> <ul> <li> <p>Open this link: App Store Connect / Apps, look for <code>All Statuses</code> dropdown indicator and select <code>Removed Apps</code></p> <p></p> </li> <li> <p>Click on the App name:</p> <p></p> </li> <li> <p>Ensure this is the app you want by selecting <code>App Information</code>, highlighted on the left side in the graphic below.</p> <ul> <li>Examine its <code>Bundle ID</code> (not in view in this graphic) - confirm it is correct.</li> <li>The format should be: <code>com.TEAMID.loopkit.Loop</code> with your TEAMID included</li> </ul> </li> <li> <p>Then scroll down to the bottom and choose <code>Restore App</code>.</p> <p></p> </li> <li> <p>Make sure <code>User Access</code> is set to <code>Full Access</code> and click on <code>Restore</code>.</p> <p></p> </li> <li> <p>You are done with this step and ready to Create Certificates</p> </li> </ul>"},{"location":"gh-actions/gh-first-time/#create-certificates","title":"Create Certificates","text":"<p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the \"<code>Actions</code>\" tab of your <code>LoopWorkspace</code> repository</li> <li>On the left side, click on \"<code>Create Certificates</code>\"</li> <li>On the right side, click \"<code>Run Workflow</code>\" to show a drop-down menu<ul> <li>You will see your default branch (should be <code>main</code>)</li> <li>If your default branch is not <code>main</code>, review GitHub Early Adopters</li> </ul> </li> <li> <p>Tap the green button that says \"<code>Run workflow</code>\".</p> <p></p> </li> <li> <p>Wait a minute or two for the action to finish</p> <ul> <li>If this action fails, head over to Action: 3. Create Certificates Errors</li> <li>Once you've resolved the error, repeat the Actions Add Identifiers and then <code>Create Certificates</code>. (The <code>Add Identifiers</code> might not be required but it is fast and should be done as a matter of routine.)</li> </ul> </li> </ol>"},{"location":"gh-actions/gh-first-time/#build-loop_1","title":"Build Loop","text":"<p>Refer to the graphic below for the first four steps:</p> <ol> <li>Click on the \"<code>Actions</code>\" tab of your <code>LoopWorkspace</code> repository.</li> <li>On the left side, click on \"4. <code>Build Loop</code>\".</li> <li>On the right side, click \"<code>Run Workflow</code>\" to show a drop-down menu<ul> <li>You will see your default branch (should be <code>main</code>)</li> <li>If your default branch is not <code>main</code>, review GitHub Early Adopters</li> </ul> </li> <li> <p>Tap the green button that says \"<code>Run workflow</code>\".</p> <p></p> </li> <li> <p>Wait a few minutes to make sure there is not an early failure</p> <ul> <li>If this action fails, head over to Action: Build Loop Errors</li> <li>Once you've resolved the error, it's a good idea to repeat all three steps in this order:<ul> <li>Add Identifiers</li> <li>Create Certificates</li> <li>Build Loop</li> </ul> </li> </ul> </li> <li>If the process appears to be happening without an error, go do something else for a while. The build should take about 20-30 minutes.</li> <li>Your app should eventually appear on <code>App Store Connect</code>.</li> </ol>"},{"location":"gh-actions/gh-first-time/#set-up-users-and-access-testflight","title":"Set Up Users and Access (TestFlight)","text":"<p>Once the first build completes, you will be able to configure TestFlight for the app.</p> <p>You are configuring a private capability for your family using an Internal Testing group (max of 100). You need the Apple ID email address for each adult installing from your build. When building for a child, you will use your own Apple ID, not theirs. See Install TestFlight Loop for Child.</p> <ol> <li> <p>First you need to add the email address(es) to your App Store Connect Access Users list:</p> <ul> <li>Open this link: Users and Access<ul> <li>You must provide a role for each person - <code>Customer Support</code> is a good choice</li> <li>Once you have added them here, you'll be able to select them in the <code>TestFlight</code> group for your app</li> </ul> </li> </ul> <p></p> </li> <li> <p>Open this link: App Store Connect / Apps to view your apps; log in if needed. Then select your Loop app. Click on <code>TestFlight</code> tab and the <code>Internal Testing</code> to add a group.</p> <p></p> </li> <li> <p>Fill out the name you want for the <code>Internal Testing</code> group</p> <ul> <li>Be sure to check the box <code>Enable automatic distribution</code></li> <li>Click <code>Create</code> when done (this can always be modified later)</li> </ul> <p></p> </li> <li> <p>As soon as you create the group, you'll be asked who should be included</p> <ul> <li>Click in the box beside each person you want to include</li> <li>Each person in this group will get an email each time you update (build again) on GitHub</li> <li>Click <code>Add</code> when you are done</li> <li>If building for a child, you will send the invitation to yourself because you will install for your child: See Install Loop for Child</li> </ul> <p></p> </li> </ol>"},{"location":"gh-actions/gh-first-time/#deployment","title":"Deployment","text":"<p>The GitHub Deployment walks you through the steps to deploy to a phone.</p>"},{"location":"gh-actions/gh-first-time/#extra-steps","title":"Extra Steps","text":"<p>Most people won't need the information on the rest of this page.</p>"},{"location":"gh-actions/gh-first-time/#already-have-loopworkspace","title":"Already Have LoopWorkspace","text":"<p>Some people may already have a fork of <code>LoopWorkspace</code>. They might even have one that they forked from somewhere other than <code>LoopKit</code>.</p> <p>Suggestions - choose one of these methods:</p> <ul> <li>Update the repository if it is forked from <code>LoopKit</code><ul> <li>Open your <code>LoopWorkspace</code> repository (<code>https://github.com/username/LoopWorkspace</code>) where you use your GitHub <code>username</code> in the URL</li> <li>Review the graphic in the Successful Fork section<ul> <li>Make sure all the items highlighted by red rectangles are correct with the possible exception of your fork being up to date</li> </ul> </li> <li>If you see a message that your fork is not up to date - tap on the <code>Sync fork</code> button and follow the instructions</li> <li>Continue with the Create GH_PAT section</li> </ul> </li> <li>Delete that repository if it is from somewhere other than <code>LoopKit</code> or the fork you wanted to start with (which might have customizations that you want)<ul> <li>Instructions to delete a repository are found at GitHub Docs</li> <li>You just need to make sure that a repository called <code>LoopWorkspace</code> is no longer in your GitHub account</li> <li>Return to Fork LoopWorkspace and follow all the instructions</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-first-time/#delete-identifiers","title":"Delete Identifiers","text":"<p>When you have already built Loop with Xcode, the Identifier names will not match the directions and you might have trouble deciding which ones to configure.  Your existing <code>Loop</code> identifier will have a name that starts with <code>XC</code> as shown below, where your 10-digit <code>TEAMID</code> is used.</p> <ul> <li><code>Name: XC com TEAMID loopkit Loop</code></li> <li><code>Identifier: com.TEAMID.loopkit.Loop</code></li> </ul> <p>The <code>Identifier</code> that is associated with the <code>Loop</code> identifier cannot be deleted if it is already in the App Store but all others can. If you attempt to delete the <code>XC</code> Loop identifier, you may be told it cannot be deleted because it is in use in the app store. That's OK. Same for other identifiers (if you build a bunch of Apps). If a <code>Bundle ID</code> has ever been associated with an app in the App Store, you cannot delete the <code>Identifier</code>.</p> <p>To make it easy when configuring the identifiers, go through and delete as many as you can.</p> <ul> <li>Open this link: Certificates, Identifiers &amp; Profiles: Identifiers List on the Apple developer site.</li> <li>Use the graphic below as a guide to removing identifiers</li> <li>Keep repeating the steps until you've removed all the identifiers you can (or want to) delete</li> <li>It is OK to delete an identifier even if it does have your correct <code>TEAMID</code><ul> <li>If you try to delete the <code>Loop</code> identifier with your <code>TEAMID</code>, it will refuse, don't worry, just keep going</li> </ul> </li> <li>Note - this graphic indicates where on this page you can find your <code>TEAMID</code><ul> <li>If you notice an identifier with a value embedded in it that does not have your <code>TEAMID</code>, then delete it if you can and Update Secrets with your correct <code>TEAMID</code></li> <li>If you try to delete a Loop identifier that does not have your <code>TEAMID</code>, but you already added to the App Store, it will refuse, don't worry, just keep going</li> </ul> </li> </ul> <p></p> <p>If coming here from the GitHub Errors page because you enter the wrong <code>TEAMID</code> in <code>Secrets</code> - return to that page once you've deleted as many identifiers as you can: Errors: Wrong TEAMID in Secrets.</p> <p>If you were just trying to clean up the identifiers, then follow these steps:</p> <ul> <li>Run Action: Add Identifiers to add Identifiers with the documented short names</li> <li>If you did not complete Find Loop Identifier step, do it now</li> <li>Complete the Add App Group to Other Identifiers</li> <li>If you did not complete the Create Loop App in App Store Connect step, do it now</li> <li>Continue with Create Certificates and then Build Loop</li> </ul>"},{"location":"gh-actions/gh-other-apps/","title":"Other Apps","text":""},{"location":"gh-actions/gh-other-apps/#using-github-to-build-other-apps","title":"Using GitHub to Build Other Apps","text":"<p>Once Loop 3 was released with the ability to build using a browser, a lot of other repositories in the DIY universe began to add the same feature.</p> <p>The same technique is used and the same six Secrets are applied to each repository. Those secrets are tied to your Apple Developer ID and your GitHub account. As other apps are updated, they will be added to this page and the list below will be updated.</p> <ul> <li>LoopCaregiver</li> <li>Loop Follow</li> </ul> <p>GH_PAT - NEW RECOMMENDATION</p> <p>It is now recommended that you use a GitHub Personal Access Token (GH_PAT) that never expires</p> <ul> <li>GitHub Update: Regenerate GitHub Token</li> </ul> <p>If you choose a GitHub personal access token that expires, you will get an email to renew it about 6 days ahead. You will paste your updated GH_PAT into the secrets for each repository you use and initiate the Build Action for that app. This will ensure continued availability of all your apps that you build with this method.</p>"},{"location":"gh-actions/gh-other-apps/#prerequisites","title":"Prerequisites","text":"<p>Wait until the repository you are interested in adds the capability of GitHub build. Many of the steps for each repository are the same as what you used (or would use) for Loop, but you need to take some unique steps. The directions are structured to minimize the need to jump between the pages.</p> <ul> <li> <p>If you have already built using this GitHub method, it is easy to build the next repository. Skip ahead to Fork and Add Secrets</p> </li> <li> <p>If this is the first repository you have built with GitHub, you must first complete the initial steps found on GitHub First-Time. When you reach the point where</p> <ul> <li>You have created your Match-Secrets repository</li> <li>You are told to GitHub First-Time: Fork LoopWorkspace<ul> <li>Review the directions but don't do it</li> <li>Return here and check the table below</li> <li>Use that table to find the link of the repository you will fork</li> </ul> </li> </ul> </li> </ul> <p>Use the repository for the application you are building</p> <p>Many graphics on this page show <code>LoopWorkspace</code>, just remember to use the repository for the app you want to build, that is either <code>LoopFollow</code> or <code>LoopCaregiver</code>.</p>"},{"location":"gh-actions/gh-other-apps/#fork-and-add-secrets","title":"Fork and Add Secrets","text":"<ul> <li>You will return to this page after reviewing (but not doing) this step GitHub First-Time: Fork LoopWorkspace<ul> <li>Use the same method as that section, but fork the repository for the app you plan to build</li> <li>If there is no row for an app, then wait until one is added - that repository is probably not ready yet</li> </ul> </li> </ul> App Fork from this Address Documentation LoopCaregiver https://github.com/LoopKit/LoopCaregiver LoopDocs: LoopCaregiver Loop Follow https://github.com/loopandlearn/LoopFollow Loop Follow"},{"location":"gh-actions/gh-other-apps/#configure-secrets-for-this-app","title":"Configure Secrets for this App","text":"<p>After successfully creating your fork of the repository for this app:</p> <ul> <li> <p>If you have already built Loop using GitHub, skip ahead to Add Existing Secrets</p> </li> <li> <p>If this is the first repository you have built with GitHub</p> <ul> <li>You should follow the detailed steps at GitHub First-Time: Configure Secrets, except you will apply the Secrets to the repository for the app you are planning to build</li> <li>Once your 6 secrets have been added, return to this page and skip ahead to Action: Add Identifiers on this page.</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#add-existing-secrets","title":"Add Existing Secrets","text":"<p>MATCH_PASSWORD</p> <p>An early version of GitHub First-Time had incorrect information about the need to save MATCH_PASSWORD.</p> <p>If you did not save your MATCH_PASSWORD in your file with all your Secrets, you will need to delete your Match-Secrets repository, create a new one and then add all your Secrets into all you repositories again and run all the Actions again.</p> <p>Open the text file in which you maintain a copy of your 6 Secrets so you can copy each value into the Secrets for this repository.</p> <ol> <li>Click on the repository for your app</li> <li> <p>Click on the Settings Icon near the top right of your repository</p> <ul> <li>On the left side, tap on <code>Secrets and variables</code> dropdown and choose Actions</li> <li>After you select Actions, your screen should look like the graphic below</li> </ul> <p></p> </li> <li> <p>Tap on <code>New repository secret</code> and add each of the 6 Secrets</p> <ul> <li>You will notices the New secret dialog looks a little different</li> <li>As soon as you click on the Name* Box, the 6 Secret Names show up as a dropdown as shown in the graphic below</li> <li>Select each one in turn and paste the secret value into the Secret* box and hit Add secret</li> </ul> <p></p> </li> </ol> <p>Once all six Secrets are added, you will either continue to add the identifiers (LoopCaregiver) or use the updated method to first validate your secrets (Loop Follow).</p>"},{"location":"gh-actions/gh-other-apps/#action-validate-secrets","title":"Action: Validate Secrets","text":"<p>The first action step is to Validate Secrets.</p> <p></p> <p>When building LoopCaregiver, the new steps are not yet available, so you'll skip ahead to Action: Add Identifiers.</p> <p>Near the top middle of your Repository fork, click on the \"Actions\" tab.</p> <ul> <li>The first time you click on <code>Actions</code> with this repository you'll be informed that <code>Workflows aren't being run on this forked repository</code></li> <li>Tap on the green button that says: <code>I understand my workflows, go ahead and enable them</code></li> </ul> <p>The workflows are now displayed: look at the list on the left side similar to that shown in the graphic below. (You can dismiss the Actions Enabled message using the X near the upper right side if it appears).</p> <p>This step validates most of your six Secrets and provides error messages if it detects an issue with one or more.</p> <ol> <li>Click on the \"Actions\" tab of your <code>LoopFollow</code> or <code>LoopCaregiver</code> repository and enable workflows if needed</li> <li>On the left side, select \"1. Validate Secrets\".</li> <li>On the right side, click \"Run Workflow\", and tap the green <code>Run workflow</code> button.</li> <li>Wait, and within a minute or two you should see a green checkmark indicating the workflow succeeded.</li> <li>The workflow will check if the required secrets are added and that they are correctly formatted. If errors are detected, please check the run log for details.</li> </ol> <p>Until LoopCaregiver is also updated, the instructions for the rest of this page won't include the numbers for the successive steps.</p>"},{"location":"gh-actions/gh-other-apps/#action-add-identifiers","title":"Action: Add Identifiers","text":"<p>Near the top middle of your Repository fork, click on the \"Actions\" tab.</p> <ul> <li>The first time you click on <code>Actions</code> with this repository you'll be informed that <code>Workflows aren't being run on this forked repository</code></li> <li>Tap on the green button that says: <code>I understand my workflows, go ahead and enable them</code></li> </ul> <p>The workflows are now displayed: look at the list on the left side similar to that shown in the graphic below. (You can dismiss the Actions Enabled message using the X near the upper right side if it appears).</p> <ul> <li>The graphic below is an example from Loop, your screen will show your app and associated repository</li> </ul> <p></p>"},{"location":"gh-actions/gh-other-apps/#add-identifiers","title":"Add Identifiers","text":"<ul> <li>The graphic below is an example from Loop, your screen will show your app and associated repository</li> </ul> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the \"Actions\" tab of your repository</li> <li>On the left side, click on \"Add Identifiers\"</li> <li>On the right side, click \"Run Workflow\" to show a drop-down menu<ul> <li>You will see your default branch (should be <code>main</code>)</li> <li>If you have additional branches, you can change the branch, for example, select <code>dev</code> for the development branch</li> </ul> </li> <li> <p>Tap the green button that says \"Run workflow\".</p> <p></p> </li> </ol> <p>The Add Identifier Action should complete (succeed or fail) in a few minutes.</p> <ul> <li>If you see the green check continue to the next section</li> <li>If you see the red X<ul> <li>Examine the Error tells you how to download the file needed to diagnose your problem.</li> <li>Action: Add Identifiers Errors lets you know what to search for in the downloaded file</li> <li>Once you've resolved the error, repeat the Add Identifiers step</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-other-apps/#review-app-identifier","title":"Review App Identifier","text":"<p>Open this link: Certificates, Identifiers &amp; Profiles: Identifiers List on the apple developer site.</p> <p>After successfully performing the Add Identifiers Action, you will see the identifier for your app with a Name and Bundle ID matching that in the table below. You will see your unique TEAMID embedded in the identifier. (If you previously built this App with Xcode, the name may start with XC but the ending should match.)</p> App Name Name Bundle ID LoopCaregiver LoopCaregiver com.TEAMID.loopkit.LoopCaregiver Loop Follow LoopFollow com.TEAMID.LoopFollow <p>Some apps, like Loop, require updates to the Identifiers after they are generated.</p> <p>Other apps, like LoopCaregiver and Loop Follow, do not require updates to Identifiers after they are generated.</p> <p>LoopCaregiver is under development</p> <p>This app is proving very useful already, but it is still under development. When you fork this from the repository, you will notice that dev branch is the default.</p> <p>Please follow the discussion in the Loop Caregiver App zulipchat stream.</p> <p>If your app is not listed in the Update Required section, skip ahead to Create App in App Store Connect.</p>"},{"location":"gh-actions/gh-other-apps/#update-required","title":"Update Required","text":"<p>This is the list of apps that require you to modify the Identifier(s) before continuing.</p>"},{"location":"gh-actions/gh-other-apps/#app-name","title":"App Name","text":"<p>There are no apps in this section yet.</p>"},{"location":"gh-actions/gh-other-apps/#create-app-in-app-store-connect","title":"Create App in App Store Connect","text":"<p>You will be following the directions below to create an App in App Store Connect if you don't already have one.</p> <p>This requires you to provide some information. Examine the table below for the bundle ID associated with your app. </p> App Name Bundle ID LoopCaregiver com.TEAMID.loopkit.LoopCaregiver Loop Follow com.TEAMID.LoopFollow <ol> <li> <p>Open this link: App Store Connect / Apps to view your apps; log in if needed. </p> </li> <li> <p>If this App already exists, you can continue to Create Certificates</p> </li> <li> <p>Click the Add Apps button or the blue \"plus\" icon and select New App as shown in the graphic below</p> <p></p> </li> <li> <p>The New App dialog box opens and should appear similar to the graphic below. Before you fill anything out, make sure your Bundle ID is available in the dropdown menu. If you do not see the Bundle ID for your app; back out of this screen and follow the directions in GitHub First-Time: Find My Loop, where you'll be finding App Name instead of Loop.</p> <ul> <li>Select \"iOS\".</li> <li>Enter a name: this will have to be unique<ul> <li>You could start with \"App Name ABC\" where ABC are your initials</li> <li>If that is already taken, you can add a number, for example, \"App Name ABC 123\"</li> <li>This name is what you see on the App Store Connect list and in the TestFlight app</li> <li>Once installed on your phone, you will see the actual app name</li> <li>You can Change the App Store Connect Name later if you want</li> </ul> </li> <li>Select your primary language.</li> <li>Choose the bundle ID for your app</li> <li>SKU can be anything; for example \"123\" but must be unique across all your apps, so try 1234 or 12345 depending on how many apps you build with this method</li> <li>Select \"Full Access\".</li> </ul> <p></p> </li> <li> <p>Click Create but do not fill out the next form. That is for submitting to the app store and you will not be doing that.</p> </li> </ol> <p>You are done with this activity. You can close the browser tab, but before you do, note the TestFlight tab at the top of the page. You'll be using that tab after you complete the next two actions.</p>"},{"location":"gh-actions/gh-other-apps/#create-certificates","title":"Create Certificates","text":"<ul> <li>The graphic below is an example from Loop, your screen will show your app and associated repository</li> </ul> <p>Refer to the graphic below for the numbered steps:</p> <ol> <li>Click on the \"Actions\" tab of your Repository repository</li> <li>On the left side, click on \"Create Certificates\"</li> <li>On the right side, click \"Run Workflow\" to show a drop-down menu<ul> <li>You will see your default branch (should be <code>main</code>)</li> <li>If you have additional branches, you can change the branch, for example, select <code>dev</code> for the development branch</li> </ul> </li> <li> <p>Tap the green button that says \"Run workflow\".</p> <p></p> </li> <li> <p>Wait a minute or two for the action to finish</p> <ul> <li>If this action fails, head over to Action: Create Certificates Errors</li> <li>Once you've resolved the error, repeat the Actions Add Identifiers and then Create Certificates. (The Add Identifiers might not be required but it is fast and should be done as a matter of routine.)</li> </ul> </li> </ol>"},{"location":"gh-actions/gh-other-apps/#build-app","title":"Build App","text":"<ul> <li>The graphic below is an example from Loop, your screen will show your app and associated repository</li> </ul> <p>Refer to the graphic below for the first four steps:</p> <ol> <li>Click on the \"Actions\" tab of your Repository repository.</li> <li>On the left side, click on \"Build App Name\".</li> <li>On the right side, click \"Run Workflow\" to show a drop-down menu<ul> <li>You will see your default branch for this app</li> </ul> </li> <li> <p>Tap the green button that says \"Run workflow\".</p> <p></p> </li> <li> <p>Wait a few minutes to make sure there is not an early failure</p> <ul> <li>If this action fails, head over to Action: Build Loop Errors</li> <li>Once you've resolved the error, it's a good idea to repeat all three steps in this order:<ul> <li>Add Identifiers</li> <li>Create Certificates</li> <li>Build Loop</li> </ul> </li> </ul> </li> <li>If the process appears to be happening without an error, go do something else for a while. The build should take about 20-30 minutes.</li> <li>Your app should eventually appear on App Store Connect.</li> </ol>"},{"location":"gh-actions/gh-other-apps/#add-users-to-testflight-for-app","title":"Add Users to TestFlight for App","text":"<p>Once the first build completes, you will be able to configure TestFlight for the app - follow the template for setting up TestFlight for Loop found in GitHub First-Time: Set Up Users and Access (TestFlight)</p>"},{"location":"gh-actions/gh-other-apps/#deployment","title":"Deployment","text":"<p>The GitHub Deployment walks you through the steps to deploy to a phone. When going through those steps, replace your App Name for Loop. Everything else is the same.</p>"},{"location":"gh-actions/gh-overview/","title":"GitHub Build Overview","text":""},{"location":"gh-actions/gh-overview/#build-loop-with-a-browser","title":"Build Loop with a Browser","text":"<p><code>Github Build</code> = <code>Browser-Build</code></p> <p>In this section, we use <code>GitHub build</code> and <code>Browser build</code> interchangeably to mean the same thing, i.e. building Loop with a Web browser.</p> <p>The new GitHub build method is available with the release of Loop 3, as well as for development versions.</p> <ul> <li>Installation on your phone is via TestFlight</li> <li>This can be used by those who don't own a Mac but want to Loop</li> <li>The GitHub build method can be used even if you do use a Mac - the two methods do not interfere with each other</li> </ul> <p>TestFlight is the only method available for installation to a phone when using the GitHub build method, but it can also be used as a remote build option with the Mac-Xcode build method - see TestFlight from Xcode.</p>"},{"location":"gh-actions/gh-overview/#pros-and-cons","title":"Pros and Cons","text":""},{"location":"gh-actions/gh-overview/#advantages-of-github-build","title":"Advantages of GitHub Build","text":"<ul> <li>Mac computer is not required</li> <li>Most recent version of Xcode is not required<ul> <li>No more updating macOS then updating Xcode for certain iOS upgrades</li> <li>The time required for the initial setup for GitHub may take less time than one macOS and Xcode version update</li> </ul> </li> <li>Updates take a few minutes of your time to start and are ready to install on your phone in about an hour</li> </ul>"},{"location":"gh-actions/gh-overview/#cons","title":"Cons","text":"<p>The customization process can be more tedious to set up but then easy to maintain (for personalized customizations).</p> <ul> <li>Instructions are found at Customize with GitHub</li> <li>Frequently used customizations are prepared for you to copy and paste into build_loop.yml<ul> <li>Loop and Learn: Loop Customization</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-overview/#requirements","title":"Requirements","text":"<p>Loop 3 requires iOS 15.1 or higher</p> <p>The requirements for building and using the Loop app with the GitHub Build Actions method are given below.</p> <ol> <li>Compatible iPhone/iPod Touch</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device (not needed for Omnipod DASH)</li> <li>Free GitHub account (instructions included in First-Time with GitHub Actions)</li> <li>Apple Developer Membership<ul> <li>Must be a paid developer account</li> <li>If building for a family member, review this section:<ul> <li>Loopers Need Their Own Apple ID</li> </ul> </li> <li>If building for a child (age depends on the country), review this section:<ul> <li>Install TestFlight Loop for Child</li> </ul> </li> </ul> </li> </ol>"},{"location":"gh-actions/gh-overview/#first-time-github-builder","title":"First-Time GitHub Builder","text":"<p>There are a number of steps that must be completed the first time you use this method.</p> <ul> <li>GitHub First-Time</li> </ul>"},{"location":"gh-actions/gh-overview/#deploy-and-updates","title":"Deploy and Updates","text":"<ul> <li>Instructions to deploy and make updates are found at:<ul> <li>GitHub Deploy</li> <li>GitHub Update</li> </ul> </li> <li>And of course, an errors page is under construction:<ul> <li>GitHub Errors</li> </ul> </li> <li>For those testing the development branch who want to use GitHub build:<ul> <li>GitHub Build for dev</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-overview/#what-if-i-get-stuck","title":"What if I get stuck?","text":"<p>Try to:</p> <ul> <li>Scroll back in the directions and see if you missed a paragraph or step.</li> <li>Compare your display with the graphics in LoopDocs.<ul> <li>Is something different or does yours have an error message?</li> <li>If you have an error message, does it guide you to the problem and solution?</li> <li>Be aware that GitHub often updates where things are - search for GitHub directions if your display looks different than LoopDocs.</li> </ul> </li> <li>If you are still stumped - reach out for help: How to Find Help.</li> </ul>"},{"location":"gh-actions/gh-update/","title":"GitHub Update","text":""},{"location":"gh-actions/gh-update/#update-loop-using-github-actions","title":"Update Loop using GitHub Actions","text":"<p>This is only available with Loop 3 and Loop development branch.</p> <p>Time Estimate</p> <p>Build Loop</p> <ul> <li>Start the Build: 5 minutes</li> <li>Wait for build to complete and appear in TestFlight on your phone<ul> <li>about an hour</li> <li>depends on GitHub, Apple and TestFlight</li> </ul> </li> </ul> <p>Optional: If you need to update your GitHub Personal Access token</p> <ul> <li>5 minutes to regenerate token</li> <li>5 minutes to update the GH_PAT Secret for each of your app repositories</li> </ul> <p>Summary</p> <p>You must build Loop every 90 days when you use the GitHub build method - this is a TestFlight requirement.</p> <ul> <li>The GitHub Personal Access Token expiration is independent of the TestFlight app expiration<ul> <li>LoopDocs used to have you set up your token to expire at the same time as TestFlight but that added an unnecessary burden to the update process</li> <li>The new recommendation is that your GitHub Personal Access Token be updated to <code>No Expiration</code></li> </ul> </li> <li>To update your GitHub Personal Access Token, start at GitHub Token</li> <li>Otherwise, start at GitHub Build Update</li> </ul> <p>FAQs</p> <ul> <li>Do I need a computer? No.</li> <li>Can I do this on my phone? Yes, especially after you update your GitHub token to <code>No Expiration</code>.</li> <li>Did the directions change? Yes. We now recommend you select a GitHub Personal Access Token that never expires. It simplifies the build every 90-day process significantly.</li> <li>How do I set my GitHub Personal Access token to never expire? See this section Regenerate GitHub Token.</li> <li>What happens to my existing builds when I change my GitHub Personal Access Token? Nothing. The GH_PAT only affect future builds. Previous build will be available for the full 90 days.</li> </ul>"},{"location":"gh-actions/gh-update/#github-build-update","title":"GitHub Build Update","text":"<p>Summary of Update Steps</p> <ul> <li>Update Fork</li> <li>Build Loop</li> <li>Wait for TestFlight</li> <li>Install or Confirm Installation</li> </ul>"},{"location":"gh-actions/gh-update/#update-fork","title":"Update Fork","text":"<p>Open GitHub in your browser (sign in if needed) and select your LoopWorkspace repository from your repositories list.</p> <p>Look to see if your fork is up to date.</p> <ul> <li>When you go to your fork to do the update, simply sync the branch if it says there are updates and you get the latest release (details below graphic)<ul> <li>This particular graphic shows the dev branch</li> <li>Yours should show the main branch</li> </ul> </li> </ul> <p></p> <ul> <li>If your fork is up to date with LoopKit version for that <code>{branch}</code>, you will see the message <code>This branch is up to date with LoopKit/LoopWorkspace:{branch}</code> - there is no need to build again unless your Loop app in TestFlight is about to expire - in which case, proceed to Build Loop</li> <li>If your fork shows a message such as <code>This branch is 3 commits behind LoopKit:main</code> and you want to update and build, then click <code>Sync Fork</code> by tapping where the red rectangle is shown in the graphic above, then in the pop-up window, tap on <code>Update branch</code></li> <li>If your fork shows a message such as <code>This branch is 3 commits behind LoopKit:main and 4 commits ahead of LoopKit:main</code>; you might need to manually sync and choose to <code>discard changes</code>; you can always customize again after the update</li> </ul> <p>Building a different branch</p> <p>Do I need to do anything special to build a different branch?</p> <p>Yes: please follow instructions at GitHub Build for dev</p>"},{"location":"gh-actions/gh-update/#build-loop","title":"Build Loop","text":"<p>The section continues immediately after the Update Fork section. Refer to graphic below as you follow the steps to Build Loop.</p> <ul> <li>Click on the 'Actions' tab</li> <li>Select the '4. Build Loop' workflow on the left<ul> <li>If using a mobile browser, be sure to use landscape mode to more closely match how GitHub looks on a computer.</li> </ul> </li> <li>Look on the right and click 'Run workflow' to  see the dropdown</li> <li>Click on the green <code>Run workflow</code> button in the dropdown</li> <li>Wait ~25 min for the build to complete successfully</li> <li>It is then processed by Apple and sent to TestFlight (be patient)</li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#what-if-the-build-fails","title":"What if the Build Fails","text":"<p>There are some updates where you need to run some actions before build. If a new release is announced, look to see if there are instructions about this. In those cases, you will probably be told to run Action 2: Add Identifiers and Action 3: Create Certificates before Action 4: Build Loop. Those steps are fast and there is no harm in trying them.</p> <p>Otherwise, head over to GitHub Errors.</p>"},{"location":"gh-actions/gh-update/#wait-for-testflight","title":"Wait for TestFlight","text":"<p>You'll receive an App Store Connect email confirming that the build has completed processing, and a TestFlight email confirming the new app is ready to test.</p> <ul> <li>If you get an email that the action failed, then return to your repository and look for Build Action error messages<ul> <li>Click on the most recent Build job with the red x by it</li> <li>If the details show this message, \"Could not install WWDR certificate\", make sure your developer account is in good standing and that there are no agreements that need to be accepted</li> <li>Repeat the build (previous step) and it should be fine the next time - that just means Apple did not reply to GitHub as fast as GitHub expected</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-update/#apple-email-to-ignore","title":"Apple Email to Ignore","text":"<ul> <li>You can ignore an email from Apple that there are things you must fix in your app - that refers to things to fix before putting that app in the App Store and you will not be doing that</li> </ul> <p>The updated Loop app will show up in your TestFlight app on the Looper's phone.</p> <ul> <li>Your new app will have \"Expires in 90 days\"<ul> <li>There may be older builds that are still in TestFlight</li> <li>It takes time for the update to show up in the TestFlight app</li> </ul> </li> <li>You will also see a build number in parentheses, that number increments each build - don't worry about the number</li> </ul> <p>Calendar Reminder</p> <p>This is a good time to put a calendar reminder in your favorite app.</p> <p>Set it up for a few days before the TestFlight app will expire.</p>"},{"location":"gh-actions/gh-update/#install-or-confirm-installation","title":"Install or Confirm Installation","text":""},{"location":"gh-actions/gh-update/#automatic-update-disabled","title":"Automatic Update Disabled","text":"<p>Option 1: If you chose to leave TestFlight Automatic Updates disabled for Loop, you choose when to install the app on the phone.</p> <ul> <li>Open TestFlight on your phone and click <code>Install</code> as shown in the GIF below</li> <li>If you are building for a child, follow the Install TestFlight Loop for Child instructions again</li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#automatic-update-enabled","title":"Automatic Update Enabled","text":"<p>Option 2: If you chose to leave TestFlight Automatic Updates enabled for Loop, the updated build will be installed over your existing app.</p> <ul> <li>In this case, when you look at the TestFlight app on your phone, the app should have installed automatically</li> <li>Refer to the GIF above, the message will say <code>Open</code> instead of <code>Install</code></li> </ul>"},{"location":"gh-actions/gh-update/#github-build-details","title":"GitHub Build Details","text":"<p>In the Loop app, once installed on your phone, tap on Settings -&gt; Support -&gt; Issue Report. The graphic below shows an example of the Build Details included in the report.</p> <ul> <li>The <code>profileExpiration</code> listed here is irrelevant - the app expires when the TestFlight expiration indicates - a later version of Loop 3 will probably capture that date and provide a notification in the app; but for now, you must remember<ul> <li>Pro Tip: Add a calender reminder for your next build</li> </ul> </li> <li>An app built with GitHub will display a <code>sourceRoot</code> that starts with <code>/Users/runner/work/LoopWorkspace</code><ul> <li>The <code>buildDateString</code> is when the app was built and transferred to TestFlight, not when it was installed on your phone</li> <li>You can use 90 days from this date, as well as the Expires in ## Days on the TestFlight app, to know when you need to rebuild</li> </ul> </li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#github-token","title":"GitHub Token","text":"<p>If your GitHub Personal Access Token has not expired and you don't want to regenerate it, you don't need this section.</p> <p>If you want to follow the new recommendation of using a GitHub Personal Access Token that never expires, you can regenerate the new one at any time.</p> <p>Update new GH_PAT to Secrets</p> <p>After you get your new token, immediately add it to your Secrets for any app you build with this method. You don't have to rebuild the app, but it's a good idea to at least run Action 1. Verify Secrets for each repository to make sure you did not make a mistake.</p>"},{"location":"gh-actions/gh-update/#regenerate-github-token","title":"Regenerate GitHub Token","text":"<p>You can regenerate your GitHub Personal Access Token at any time by clicking on the link below. (Right-click, control-click to open in a new browser tab.)</p> <ul> <li>Link to access your GitHub Personal Access Token</li> </ul> <p>If you are not logged in to GitHub and have not logged in recently, then you may see the authentication screen. Click on the link below, and authenticate if requested by clicking on the green <code>Send SMS</code> button or entering your password.</p> <p></p> <p>Once you are authenticated, your screen should be similar to the graphic below. The <code>FastLane Access Token</code> is a clickable link.</p> <p></p> <p>After you click on <code>FastLane Access Token</code> your screen should be similar to the graphic below.</p> <p>Your existing TestFlight builds are fine</p> <p>The yellow GitHub warning by the <code>Regenerate Token</code> button is for new builds you make in the future.</p> <p>Previous builds are still available in TestFlight and are not affected by this action.</p> <p>Note - selecting the <code>workflow</code> check box below is new. If yours does not show that selection, add it before you click on Regenerate token (red highlight in graphic below).</p> <p></p> <p>Click on Regenerate token (red highlight in previous graphic) to see screen similar to next graphic. </p> <ul> <li>Most Loopers will have classic personal access tokens<ul> <li>If you are a developer who needs to use the fine-grained (by repository) option, that's fine</li> </ul> </li> </ul> <p>Be sure to change the Expiration from <code>30 days</code> to <code>No Expiration</code>. When you select <code>No Expiration</code> a GitHub warning appears. Click on the green <code>Regenerate Token</code> button (red highlight in following graphic).</p> <p></p> <p>The next screen shows your new token. Copy the token using the copy icon and save it along with your other secret settings.</p> <p></p> <p>The next step is to update GH_PAT in your LoopWorkspace Repository Secrets. (If you build other apps with this method - update the GH_PAT for all of them right now - do not forget.)</p>"},{"location":"gh-actions/gh-update/#update-secrets","title":"Update Secrets","text":"<p>This example is for updating GH_PAT in the Secrets for your repository, but the same method can be applied when changing any Secret.</p> <p>This can be done with the GitHub Personal Access Token still in your paste buffer - but to be safe, save the token with your other secret settings. If you lose track, just Regenerate GitHub Token again.</p> <p>The graphics and instructions in this section are using a phone. This was done just to prove we weren't kidding when we said you can do it all on your phone. Most people use a computer browser.</p> <p>Scroll all the way up to the top of the window to see the hamburger menu, click on it and choose your name and icon (near bottom of the list). Scroll down to the LoopWorkspace repository and tap on the link.</p> <p>Do a horizontal scroll (required on your phone, probably not on a browser) on the row that starts with Code and ends in Settings and tap on Settings. If you don't see Settings (if last item on row is Insights), then you are not on your fork or you need to sign in to your GitHub account. You should see <code>username/LoopWorkspace</code> with forked from <code>LoopKit/LoopWorkspace</code> underneath.</p> <p>Review the GIF below that shows horizontal scroll to find and tap on Settings, then scroll down on the phone to reach \"Secrets and variables\", open the drop down indicator to see Actions.</p> <p></p> <p>After tapping on Settings -&gt; Secrets and Variables -&gt; Actions, keep scrolling on the same screen, past the Action secrets / New repository secret row, until you see your Repository secrets list as shown in the next GIF.</p> <p></p> <p>When you see the secret, GH_PAT, tap on the pencil and then scroll down until you see the Actions secrets / Update secret dialog as shown in the next graphic. Paste your new token into the Value section and tap Update Secret.</p> <p></p> <p>Scroll all the way to the top of the screen and tap on your LoopWorkspace link. Then follow the GitHub Build Update instructions to start a new build.</p>"},{"location":"gh-actions/gh-update/#github-build-for-dev","title":"GitHub Build for dev","text":"<p>You can build any desired branch (available at LoopKit/LoopWorkspace) using the GitHub Browser build method. This section is suitable if you have already built either dev or main branch using the GitHub First-Time instructions.</p> <p>No matter the method used to build Loop for any branch other than main, you are testing development code. Please read this link now before continuing.</p> <ul> <li>What's going on in the dev branch</li> </ul> <p>The graphics show the dev branch. If you want a different branch, just substitute that branch name for dev.</p> <p>Overview of what you will do</p> <ol> <li>Your LoopWorkspace fork must have the branch you want<ul> <li>You will either add it or make sure it is up to date</li> <li>You cannot just rename your existing branch to dev - you must get the dev branch from LoopKit</li> </ul> </li> <li>When you select the action <code>4. Build Loop</code> and then click on the <code>Run Workflow</code> dropdown, you must select <code>dev</code> there before clicking the green <code>Run workflow</code> button - see Build Branch</li> </ol>"},{"location":"gh-actions/gh-update/#one-time-changes","title":"One-Time Changes","text":"<p>There were two changes in the dev branch that require special, one-time actions.</p> <ol> <li>Libre support was added to dev (03 July 2023) using the LibreTransmitter code<ul> <li>This requires (one-time) that the <code>Actions</code> for <code>2. Add Identifiers</code> and <code>3. Create Certificates</code> be run before attempting <code>4. Build Loop</code></li> <li>The LibreTransmitter code requires <code>Near Field Communication</code> and doing these steps adds automatically</li> </ul> </li> <li>Automatic update and automatic monthly build was added to dev (13 July 2023)<ul> <li>Once a month, GitHub will attempt to update and build Loop from your <code>default branch</code> using the instructions in the <code>Action: 4. Build Loop</code> (<code>build_loop.yml</code> file) and send the new app to TestFlight</li> <li>As part of this monthly build, GitHub will check to see if updates are required for your <code>default branch</code></li> <li>When updates are not required, it just builds the app</li> <li>When updates are required:<ul> <li>If it can figure out how to do the <code>sync</code> automatically, it does so</li> <li>If it cannot figure out how to do the <code>sync</code> automatically, the <code>Action</code> to <code>4. Build Loop</code> will fail and you will need to take manual steps</li> </ul> </li> <li>You will get an email that the <code>Build</code> either succeeded or failed</li> </ul> </li> </ol> <p>Automatic Update Requirements</p> <p>To enable the automatic update and rebuild, two steps are required. These are one-time steps.</p> <ul> <li>The GH_PAT must be updated (not regenerated) to add <code>workflow</code><ul> <li>Examine your <code>FastLane Access Token</code></li> <li>If it says <code>repo, workflow</code>, then no further action is needed for your GH_PAT</li> <li>If it say <code>repo</code> only, then click on the <code>FastLane Access Token</code> link, click to add a check to the <code>workflow</code> box and scroll all the way down to select the green <code>Update token</code> button</li> </ul> </li> <li>A new branch called <code>alive</code> must be created from the LoopKit <code>dev</code> branch<ul> <li>Follow the directions at Add Branch, except this time, you will type <code>alive</code> in the empty branch name that you connect to <code>LoopKit/LoopWorkspace</code> <code>dev</code> branch</li> <li>You will not use the <code>alive</code> for anything directly, but it must exist for the automatic update to function</li> </ul> </li> </ul>"},{"location":"gh-actions/gh-update/#check-current-branches","title":"Check Current Branches","text":"<p>Your LoopWorkspace fork is at <code>https://github.com/username/LoopWorkspace</code> where you substitute your actual GitHub <code>username</code>. You need to be logged into GitHub. Review the graphic below as you go through the steps.</p> <ol> <li>Click on the Branches icon to display the branches as shown in the lower half of the graphic below:<ul> <li>If the branch you want is not listed, then continue with Step 2</li> <li>Otherwise, skip ahead to Update Branch</li> </ul> </li> <li>Click on the <code>New branch</code> button and follow the Add Branch steps</li> </ol> <p></p>"},{"location":"gh-actions/gh-update/#add-branch","title":"Add Branch","text":"<p>Each step in the list below matches with the number in the graphic. In the top half of the graphic, the left side shows the initial display and the right side shows the display after making the indicated selections:</p> <ol> <li>Click on the drop down menu labeled 1 in the graphic and choose LoopKit/LoopWorkspace as show in the top right graphic</li> <li>Click on the drop down menu labeled 2 in the graphic and choose dev</li> <li>Click on the Branch name box labeled 3 in the graphic and type dev<ul> <li>The branch name in your fork should always match the branch name you are adding; check that you type it correctly</li> </ul> </li> <li>Review the dialog items to make sure everything is correct and then tap on Create branch</li> </ol> <p></p>"},{"location":"gh-actions/gh-update/#update-branch","title":"Update Branch","text":"<p>Tap the <code>Code</code> button (upper left) and ensure this branch in your fork is up to date.</p> <ul> <li>Select the desired branch in the dropdown menu (this graphic shows dev branch)</li> <li>If the message indicates this branch is \"behind\", tap on the sync fork button and then the Update branch button</li> </ul> <p></p>"},{"location":"gh-actions/gh-update/#build-branch","title":"Build Branch","text":"<p>If you want a branch to be the one you build all the time, you may choose to Change Default Branch. This is not necessary except for special cases.</p> <p>If you have one branch as default, for example main, and choose to build a different branch, there is an extra step when you Build Loop. Refer to step 4 in the graphic below. Use the branch dropdown menu to select the branch you want before hitting the green Run workflow button.</p> <p></p>"},{"location":"gh-actions/gh-update/#change-default-branch","title":"Change Default Branch","text":"<p>There can be several reasons why you would change your default branch.</p> <ul> <li>It can be convenient to have the branch you build most be configured as the default branch</li> <li>The branch you want to build has a different workflow than your default branch (not typical)<ul> <li>In this case, you must modify the default branch</li> <li>Check the zulipchat conversation about the branch you are testing to see if it is necessary to make it default</li> </ul> </li> </ul> <p>These are the steps to modify the default branch.</p> <p>For this example, we show how to change from a default branch of <code>main</code> to a default branch of <code>dev</code>. Note - only the owner of the repository can take this action and they must be logged in. Otherwise the Settings tab does not appear.</p> <p>For the numbered steps below, refer to the graphic found under each group of steps.</p> <ol> <li> <p>Click on the Settings Icon near the top right of your LoopWorkspace</p> <ul> <li>You may need to scroll down to see the Default Branch as shown in the graphic - do not tap on the Branches tab to the left under Code and Automation</li> </ul> <p></p> </li> <li> <p>To the right of the default branch name there is a pencil and a left-right arrow icon</p> <ul> <li>Tap on the left-right arrow icon to bring up the <code>Switch default branch to another branch</code> dialog</li> </ul> </li> <li>Click on the dropdown next to the current default branch, in this example, <code>main</code></li> <li>Select the desired default branch, in this example, <code>dev</code></li> <li> <p>Click on the <code>Update</code> button</p> <p></p> </li> <li> <p>You will be presented with an are-you-sure question.</p> <ul> <li>Click on the red <code>I understand, update the default branch.</code> button</li> </ul> <p></p> </li> </ol> <p>Your default branch has been changed.</p>"},{"location":"intro/loopdocs-how-to/","title":"LoopDocs How-to","text":""},{"location":"intro/loopdocs-how-to/#tooltips","title":"Tooltips","text":"<p>LoopDocs has words that may be unfamiliar. For a definition of any word with a dashed underline, simply hover your mouse over the word, or tap on the word on a mobile device, to view the definition.</p> <p>Every tooltip definition is also found in the Glossary - so head over there if you have trouble reading a tooltip.</p>"},{"location":"intro/loopdocs-how-to/#how-to-find-help","title":"How to Find Help","text":"<p>Volunteers generously provide support for Loop via online platforms. You have a number of options for joining conversations on loop and asking for help.  Links to the main platforms are listed below.  Non-US Loop users in Italy, Australia, and several other countries have also formed Facebook (FB) groups.</p> <ul> <li>The Looped Group on Facebook. Looped Group is the original FB group for DIY looping systems. There are lot of active members there with an excellent history of helping people.</li> <li>Loop and Learn is a community that provides Loop-centric information, a T1D Speaker Series covering many topics of general diabetes interest as well as Loop-specific chats, alerts whenever there is an update to iOS and Xcode, Quick Tips and articles written by mentors providing their Loop experience.<ul> <li>LoopandLearn Facebook Group</li> <li>LoopandLearn Website</li> <li>LoopandLearn YouTube Channel</li> </ul> </li> <li>The LoopTips website provides non-build information that is helpful once you are looping, e.g., how to print endo reports, find Loop data, deal with therapy settings changes, etc.</li> <li>Many Loopers use a companion app called Nightscout. Nightscout help can be found in the CGM in the Cloud Facebook group.</li> <li>For those interested in what is coming next for Loop and those who prefer not to use Facebook, join Loop Zulipchat and be sure to subscribe to all the streams or you'll miss some interesting conversations.</li> <li>Loop has an instagram account @diy.loop where some updates are shared.</li> </ul>"},{"location":"intro/loopdocs-how-to/#how-to-ask-for-help","title":"How to Ask for Help","text":"<p>If you are having trouble building or using your Loop app, there are some important steps to get responses to your question, while also being considerate of our volunteers' time.</p> <ol> <li>Always search in both LoopDocs and your favorite support group. <ul> <li>Confused on how to search in a Facebook group? Here is a video to help.</li> </ul> </li> <li>If you use Facebook, click on the Featured posts (at top of page); many posts asking for help are already answered there.</li> <li>Don't post a duplicate question in multiple groups (mentors monitor many groups). Only post to a different group if you have had no responses for several hours.</li> <li>If a LoopDocs search, FB or zulipchat search, and a check of Looped Group featured posts pinned to top of the page haven't answered your question, then post for help. Review the tips for how to post for help so that our volunteers get all the information they'll need to help you, without needing to ask 40 questions first.    </li> <li>Leave your question posted even after you've gotten an answer, but edit the original post to add the word RESOLVED at the beginning of the original post. <ul> <li>This helps other Loopers who have the same question</li> <li>This helps mentors know they don't need to respond to help you</li> </ul> </li> </ol>"},{"location":"intro/loopdocs-how-to/#how-to-use-loopdocs","title":"How to use LoopDocs","text":""},{"location":"intro/loopdocs-how-to/#website-short-cuts","title":"Website Short Cuts","text":"<p>One of our awesome Loop volunteers captured the domain names  <code>loopdocs.org</code> and <code>looptips.org</code>.  So you can find these valuable websites by simply typing loopdocs or looptips followed by .org in your browser. In other words, you don't need to remember or type <code>https://loopkit.github.io/loopdocs/</code>.</p>"},{"location":"intro/loopdocs-how-to/#website-navigation","title":"Website Navigation","text":"<p>There are a lot of links you can click on this website.</p> <ul> <li>Some links take you to a different section of the same page</li> <li>Some links take you to a different page in LoopDocs</li> <li>Some links take you to a different website</li> </ul> <p>If you click on the link, you are moved to the new location and must hit the back button on your browser to return.</p> <p>You can choose to open that link in a new window or new tab.</p> <ul> <li>If your mouse has a right button, then right click the link</li> <li>On a Mac with no right button, hold down the Control key and click</li> <li>On a mobile device, click and hold the link and choose where to open the link</li> </ul> <p>Keyboard Navigation</p> <p>When viewing the site at a computer, you can use keys as shortcuts:</p> <ul> <li><code>n</code> for next page</li> <li><code>p</code> for previous page</li> <li><code>s</code> for search</li> </ul> <p>The website navigation depends on whether you are on a mobile device or a computer (with browser width &gt; 1220 pixels). </p> <ul> <li>For the wide-view:<ul> <li>The tabs for the different sections of LoopDocs are visible across the top of the browser</li> <li>Once a tab is selected:<ul> <li>That tab is highlighted</li> <li>The list of pages in that tab is displayed on the left side</li> <li>The Table of Contents for the current page is displayed on the right side</li> </ul> </li> </ul> </li> <li>For the mobile (or narrow) display:<ul> <li>From the Home page, tap the Hamburger Menu to display the tabs for the different sections of LoopDocs</li> <li>Once a tab is selected:<ul> <li>The list of pages in that tab is displayed in the Hamburger Menu</li> <li>To return to the main tab list, tap the back arrow</li> <li>To see the Table of Contents, use the Hamburger Menu and scroll to the highlighted page (current page) and tap again</li> </ul> </li> </ul> </li> </ul>"},{"location":"intro/loopdocs-how-to/#website-search","title":"Website Search","text":"<p>It is not uncommon to have a question about Loop. But, it is exceptionally rare to have the question not already answered in LoopDocs, so please search for answers by selecting the Search tool (upper right) or typing <code>s</code> then a search term at a computer. As you begin to type, suggested completions and links to pages are displayed. Click on the item you think answers your question.     </p>"},{"location":"intro/loopdocs-how-to/#how-to-improve-loopdocs","title":"How to Improve LoopDocs","text":"<p>Please submit suggestions for updates and improvements to this documentation. There are many pages of content and we welcome reviewers to help find typos and outdated info/links. If you notice a typo, poor word choice or some explanation that could be improved or clarified, there are a few options. The first two options use github, a website where open-source code and documentation is often shared. You can only use github if you have an account (it's free).</p> <ol> <li>You can issue a Pull Request (best option if it is a simple typo or wording update)</li> <li>You can open an Issue (best option if a major rewrite is needed or you think a conversation would help), or </li> <li>You can post on Facebook or Zulipchat </li> </ol>"},{"location":"intro/loopdocs-how-to/#pull-requests-and-issues","title":"Pull Requests and Issues","text":"<p>If you decide to do a GitHub Pull Request (PR) or create an Issue, first look to see if someone has already opened a PR or Issue on the topic so you don't create a duplicate.</p> <ul> <li>If a PR or Issue on the topic is open, feel free to add your comments (don't be shy), but please don't create a duplicate</li> <li>If a PR doesn't exist, watch this LoopDocs Pull Request video on how to create one (it's easy, video is less than 5 minutes)</li> <li>If your Issue is new, please add it by clicking on the <code>New Issue</code> button<ul> <li>Give the Issue a descriptive title</li> <li>Indicate which page or pages need updating , along with a brief description of the problem(s)</li> </ul> </li> </ul>"},{"location":"intro/loopdocs-how-to/#facebook-or-zulipchat","title":"Facebook or Zulipchat","text":"<p>Helpful tips for providing LoopDocs feedback through Facebook and/or Zulipchat:</p> <ul> <li>In Looped Group - make sure your post is clear that you have a comment about LoopDocs in particular.</li> <li>In Loop Zulipchat, please use the documentation stream, Loopdocs Issue channel.</li> </ul>"},{"location":"intro/overview-intro/","title":"LoopDocs Overview","text":""},{"location":"intro/overview-intro/#loopdocs-contents","title":"LoopDocs Contents","text":"<p>The LoopDocs website is organized as follows</p> <ul> <li>Home: What is Loop?</li> <li>Intro: Introduction to Loop and LoopDocs<ul> <li>Requirements: What is needed regardless of build method</li> </ul> </li> <li>New with Loop 3: Two ways to build<ul> <li>Browser Build: Build Loop app using a browser (Mac computer not required)</li> <li>Mac-Xcode Build: Build Loop app with a Mac the first time, or Update next time</li> </ul> </li> <li>Set Up: How to set up your Loop app</li> <li>Operate: How to use the Loop app</li> <li>Troubleshoot: What to do if you're having trouble with the Loop app</li> <li>Version: Information about Loop versions, code customization and development</li> <li>Nightscout: Loop-specific Nightscout details; Nightscout is a companion application that many Loopers use</li> <li>FAQs: Pages with safety tips, frequently asked questions and the Glossary</li> <li>Translation: Links to Google Translate provided as a convenience, no guaratees about the quality of the translation</li> </ul> <p>It is totally understandable if the thought of building and operating your own Loop app feels intimidating. As you learn the information explained in LoopDocs, this will start feeling more comfortable.</p>"},{"location":"intro/overview-intro/#building-loop","title":"Building Loop","text":"<p>The process for building the Loop app is divided into short segments (sections or pages) in the Build tabs of LoopDocs.</p> <p>Best Practice: Learn to Build</p> <p>You are strongly encouraged to build Loop for yourself.</p> <ul> <li>No links to providers who build Loop as a service  are found in LoopDocs</li> <li>If you choose to use such a service, before you begin, you should:<ul> <li>Read all of LoopDocs</li> <li>Know how to Set up and Operate Loop</li> <li>Ask what features, if any, available with DIY loop are not available with their service</li> <li>These steps are important for your safety</li> </ul> </li> </ul>"},{"location":"intro/overview-intro/#using-a-simulator","title":"Using a Simulator","text":"<p>You can build Loop and practice with a simulated phone, CGM and  pump. You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions.</p> <p>Starting with a simulator can help you decide if you want to move forward with purchasing additional items required to Loop.</p> <p>Please review Simulator Build for more information.</p>"},{"location":"intro/overview-intro/#simulator-using-browser-build","title":"Simulator using Browser Build:","text":"<ul> <li>No Mac computer required</li> <li>Must have a paid Apple Developer ID ($99/year)</li> <li>Must have a compatible phone</li> </ul>"},{"location":"intro/overview-intro/#simulator-using-mac-xcode-build","title":"Simulator using Mac-Xcode Build:","text":"<ul> <li>Must have a Mac computer (or virtual machine, Intel chips only)</li> <li>Can build the simulator with a free Apple Developer ID<ul> <li>Build to Mac (no phone required)</li> <li>Build to compatible phone</li> </ul> </li> </ul>"},{"location":"intro/overview-intro/#operating-loop","title":"Operating Loop","text":"<p>A significant amount of content is provided on this website and via link to other sources. Please review these pages when initially setting up and learning to use Loop.</p> <p>Some techniques are specific to Loop, but the general concepts of how man-made insulin works and strategies to test basal, carb ratios and insulin sensitivity apply to all the hybrid closed-loop systems, commercial and open source.</p>"},{"location":"intro/overview-intro/#development-history","title":"Development History","text":"<p>Loop is an open-source, shared project. The entire project has been, and continues to be, done by volunteers. From the code to the website, you're getting all this because dozens of volunteers have given their time, so please add your time by reading this website thoroughly before embarking on your Loop journey.</p> <p>Here are development history links to other resources for you to explore.</p> <ul> <li> <p>The early history of Loop development:</p> <ul> <li>History of Loop and LoopKit, written by Loop developer Nate Racklyeft</li> </ul> </li> <li> <p>The early days and the many advances brought about by the <code>#We Are Not Waiting</code> diabetes community:</p> <ul> <li>The Artificial Pancreas Book written by Dana Lewis and check out her website DIYPS.</li> </ul> </li> <li> <p>How the Omnipod Eros pods were cracked to work with Loop:</p> <ul> <li>Insulin Pumps, Decapped Chips and Software Defined Radios written by Loop developer Pete Schwamb</li> <li>Deep Dip Teardown of Tubeless Insulin Pump by Sergei Skorobogatov</li> </ul> </li> </ul>"},{"location":"intro/requirements/","title":"Requirements","text":""},{"location":"intro/requirements/#two-loop-build-methods","title":"Two Loop Build Methods","text":"<p>With the release of Loop 3, there are two Build Methods. If you have never built Loop before, you will probably find the GitHub process (also know as Browser Build) easiest. If you are a long time Looper, either method is fine. You only need to follow one of the Build methods, but you can use both methods if you want.</p> <p>The Build Steps have been split into two tabs:</p> <ul> <li>Browser Build<ul> <li>Build Loop using GitHub Actions (no computer required)</li> </ul> </li> <li>Mac-Xcode Build<ul> <li>Traditional, build Loop on a Mac with Xcode</li> </ul> </li> </ul> <p>There are some common requirements and then some different requirements for the two methods.</p>"},{"location":"intro/requirements/#common-requirements","title":"Common Requirements","text":"<p>These requirements are independent of how you build the Loop app:</p> <ol> <li>Compatible iPhone/iPod Touch</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>RileyLink Compatible Device (not needed for Omnipod DASH)</li> <li>Apple Developer Membership<ul> <li>For Browser Build - must be a paid developer account</li> <li>If building for a child, be sure to read Loopers Need Their Own Apple ID</li> </ul> </li> </ol>"},{"location":"intro/requirements/#added-requirements-for-browser-build","title":"Added Requirements for Browser Build","text":"<p>In addition to the paid Apple Developer account, you also need a free GitHub account. The instructions for the GitHub account are included in the Browser Build instructions.</p>"},{"location":"intro/requirements/#added-requirements-for-mac-xcode-build","title":"Added Requirements for Mac-Xcode Build","text":"<p>If you plan to build using the Mac-Xcode Build instructions, you also need:</p> <ol> <li>Compatible Computer</li> <li>Xcode (a free Apple application)</li> </ol>"},{"location":"intro/requirements/#getting-ready-to-build","title":"Getting Ready to Build","text":"<p>Go through the Common Requirements to see what you need to actually Loop.</p> <p>Simulator Option</p> <p>If you want to test the Loop app without attaching CGM or pump hardware, you can run a simulated CGM or simulated pump. You can use actual CGM data using Dexcom Share or Nightscout as a Remote CGM.</p> <p>These simulators are part of the Loop app and are available with either build method you choose.</p> <p>Check out the Simulator page.</p> <p>Once you have chosen your Build Method, go through the pages for that build method several times before beginning, especially if this is new to you.</p> <p>When you are ready to proceed, work through the tasks on each page. Take your time. You can do one a day, take a week per page or blaze through them quickly.  Just be sure to read carefully and if you are confused - reach out for help: How to Find Help.</p> <p>After you build Loop on your phone, keep following along in the docs as you Set up and Operate your Loop app.</p>"},{"location":"intro/requirements/#next-steps","title":"Next Steps:","text":""},{"location":"intro/requirements/#review-the-common-requirements","title":"Review the Common Requirements","text":"<p>Before you start either build method, review the Common Requirements. First one is Compatible iPhone/iPod Touch. On each page, keep clicking Next (or n) until you've finished with the Intro pages and are ready to Build.</p>"},{"location":"intro/requirements/#browser-build","title":"Browser Build","text":"<p>Click here if you want to build with GitHub Build Actions: Browser Build</p>"},{"location":"intro/requirements/#mac-xcode-build","title":"Mac-Xcode Build:","text":"<p>Click here if you want to build on a Mac using Xcode: Mac-Xcode Build</p>"},{"location":"loop-3/add-cgm/","title":"Add CGM","text":""},{"location":"loop-3/add-cgm/#cgm-choices","title":"CGM Choices","text":"<p>A CGM can be added from the Heads-Up-Display (HUD) or from the Loop Settings screen \u2699\ufe0f.</p> <p>The HUD will look like the graphic below if no CGM or Pump is connected with Loop:</p> <p></p> <p>Loop can be connected to the following CGMs:</p> <ul> <li>CGMs that reside on the same phone (internet not required)<ul> <li>Dexcom G5</li> <li>Dexcom G6 (use this for Dexcom ONE)</li> <li>Dexcom G7 (Loop 3 only)</li> <li>Minimed Enlite CGM<ul> <li>Medtronic Pump only</li> <li>You must add pump first<ul> <li>If Enlite is connected to Medtronic pump and that pump is connected to Loop, then an option for Enlite shows up when choosing a CGM, not visible in graphic below</li> </ul> </li> </ul> </li> </ul> </li> <li>CGMs that require active internet (WiFi or Cell)<ul> <li>Dexcom Share</li> <li>Nightscout Remote CGM</li> </ul> </li> <li>CGM Simulator - useful to learn the app interface</li> </ul>"},{"location":"loop-3/add-cgm/#add-cgm","title":"Add CGM","text":"<p>To add a CGM, go to the Settings screen \u2699\ufe0f, tap on <code>Add CGM</code>, and tap on your CGM.</p> <p></p>"},{"location":"loop-3/add-cgm/#dexcom-g5-g6-one","title":"Dexcom G5, G6, ONE","text":"<p>To use the Dexcom G5, G6 or ONE:</p> <ul> <li>Select Dexcom model, use <code>Dexcom G6</code> for either  G6 or ONE</li> <li>Dexcom app must be running on the Loop iPhone and paired to an active transmitter</li> <li>User must enter that active transmitter ID in the location indicated by the red rectangle in the graphic below</li> <li>Do not enter your <code>Share Credentials</code><ul> <li>The graphic below shows <code>Tap to set</code></li> <li>Do not tap, leave it alone</li> </ul> </li> <li>Only add the transmitter ID to Loop after it is paired with the Dexcom app on your phone</li> </ul> <p></p>"},{"location":"loop-3/add-cgm/#where-to-get-the-transmitter-id-for-dexcom-g6","title":"Where to get the Transmitter ID for Dexcom G6?","text":"<p>You can find the transmitter ID in your Dexcom G6 app or on the back of the transmitter box (please refer to the below screenshots). </p> <ul> <li>In your Dexcom G6 app</li> <li>Tap \"\u2699\ufe0f Settings\"</li> <li>The transmitter ID is located under section \"CGM\" where it says \"Transmitter\" with a the 6-digit string.</li> <li>Alternatively, while in Settings, tap on the &gt; in the \"Transmitter\" row: your transmitter ID is the 6-digit identifier next to \"SN\" (short for serial number). </li> </ul> <p></p> <ul> <li>On the back of your transmitter box </li> <li>Your transmitter ID is the 6-digit number next to \"SN\" and the QR code on the back of the carton.</li> </ul> <p></p>"},{"location":"loop-3/add-cgm/#change-dexcom-transmitter","title":"Change Dexcom Transmitter","text":"<p>FYI: When You Change Dexcom Transmitters</p> <p>Before you change Dexcom transmitters, select the <code>Delete CGM</code> button at the very bottom of the CGM info page in Loop. If you leave the transmitter connected in Loop, you may have trouble pairing your new transmitter. If pairing does work, then Loop will not get CGM data from the Dexcom app on your phone.</p> <p>Follow the instructions here: What do I do when I switch Dexcom transmitters?.</p> <p>The Dexcom G7 is handled differently - Loop automatically detects when a new sensor/transmitter pair is added to the Dexcom G7 app.</p>"},{"location":"loop-3/add-cgm/#about-dexcom-share-credentials","title":"About Dexcom Share credentials","text":"<p>You do NOT need your Share account info listed in Loop settings if you are using a G5 or G6 system. The transmitter ID is sufficient. In fact, you should leave your Share credentials blank so that you don't accidentally become internet-dependent for CGM data if you forget to update your transmitter ID when you start a new transmitter.</p>"},{"location":"loop-3/add-cgm/#dexcom-g7","title":"Dexcom G7","text":"<p>This is only available on Loop 3.</p> <p>You must have the G7 app on the same phone as Loop. When the G7 app switches to the next sensor/transmitter assembly, Loop automatically switches too.</p> <p>Minimal documentation is provided.</p> <p></p>"},{"location":"loop-3/add-cgm/#medtronic-enlite-cgm","title":"Medtronic Enlite CGM","text":"<p>The Medtronic Enlite CGM is only available if you have connected it to your compatible Medtronic Pump.</p> <ul> <li>Make sure your pump reports the Enlite CGM results</li> <li>Go through the Add Pump to Loop steps with that Medtronic pump</li> <li>Then do the Add CGM steps and the sensor should be presented as an option</li> </ul>"},{"location":"loop-3/add-cgm/#dexcom-share-as-a-cgm","title":"Dexcom Share as a CGM","text":"<p>If you need to use Dexcom Share</p> <p>If the dexcom is on another phone, you can use Share if internet / cell coverage is good.</p> <p>Dexcom Share is not available for Dexcom ONE CGM.</p> <p>The Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress.</p> <p>If you do not enter your Share credentials correctly into Loop, you will get an error when Loop tries to access your Share account to backfill CGM data. An example of the error message is shown in the graphic below. If you see that message, delete your Share account from Loop settings and try again.</p> <p></p>"},{"location":"loop-3/add-cgm/#nightscout-remote-cgm","title":"Nightscout Remote CGM","text":"<p>If the user is already uploading CGM data to their Nightscout URL, they can select that as a source for CGM data for Loop. The user must acknowledge they understand the risks of using a remote source that requires internet, as shown in the graphic below. </p> <p>In addition to the risks of missing data if the internet is not reliable, you must also make sure the CGM data sent to Nightscout is reliable.</p> <p>DANGER - Make sure Nightscout CGM Data is Reliable</p> <p>Just because you can use Nightscout as a CGM source does not mean you should.</p> <p>If you decide to use Nightscout as a CGM source, make sure the data stored in Nightscout is reliable. If the app you choose uploads bad results to Nightscout, you don't want Loop to use that bad data.</p> <p>Sensors that can be added to Nightscout via other apps include Dexcom, some Libre and some Medtronic sensors. Please refer to Nightscout Docs: Configure your Uploader.</p> <p>There are third party apps that bring Libre data to your Loop phone and there are customization instructions starting at Add Libre App to Loop Phone that explain how to modify Loop 3 to use one of those apps. Please use these steps to get a version of Loop that does not rely on internet access to work.</p> <p>It is recommended that you use Open Loop during warmup until the new sensor begins to provide reasonable data. This is especially important with European Libre 2 using direct bluetooth connection.</p> <p>The xDrip4iOS app (which can also be found in the app store under the name Shuggah) may have a problem during warmup of a new sensor (European Libre 2 using direct bluetooth connection). There were two instances of crazy high values being reported and picked up by Loop 3. One Shuggah user and one xDrip4iOS user who connected via Nighscout as a CGM with Loop 3 had serious overdose of insulin because of bad readings with a new sensor. They are both OK but the Loop and xDrip4iOS developers are looking at this event.</p> <p></p> <p>The user must enter both the URL and API_SECRET for their site to ensure the security of the data. The URL must start with <code>https://</code> and cannot have any extra spaces in the line.</p> <p></p> <p>When using Nightscout Remote CGM, if the user needs to change credentials or switch to a different CGM, the user must go through the Loop-&gt;Settings \u2699\ufe0f-&gt;CGM menu.</p>"},{"location":"loop-3/add-cgm/#change-cgm","title":"Change CGM","text":"<p>To change CGMs, delete your existing CGM and then add a new CGM.</p>"},{"location":"loop-3/add-cgm/#change-a-nightscout-remote-cgm","title":"Change a Nightscout Remote CGM","text":"<p>For Nightscout Remote CGM, the Nightscout URL is opened when tapping on the CGM icon in the Heads-Up Display, while the credential sections with the <code>Delete CGM</code> row are shown when tapping on Loop <code>Settings</code> \u2699\ufe0f, and selecting CGM.</p> <p>After deleting a CGM, the Head-Up-Display at the top of the Loop main screen will show the <code>Add CGM</code> icon.</p>"},{"location":"loop-3/add-cgm/#change-other-cgm","title":"Change Other CGM","text":"<p>Other CGM, you can tap on the CGM from either the Heads-Up Display or tap on <code>Settings</code> \u2699\ufe0f, and select your CGM.</p> <p>Scroll to the bottom of the screen and select <code>Delete CGM</code>.</p> <p>For some CGM that can be added to Loop 3 with a patch, the words may be different, but the steps are the same.</p>"},{"location":"loop-3/add-cgm/#dexcom-g5-g6-and-one-not-g7","title":"Dexcom G5, G6 and One (not G7)","text":"<p>For older Dexcom sensors, the transmitter is replaced separately about once every three months. In order to enter a new transmitter number, you must first delete the CGM and then add the CGM.</p> <p>Detailed instructions are found at CGM FAQs: What do I do when I switch Dexcom transmitters?.</p> <p>Once the Dexcom G7 has been added to Loop, the user only needs to let the Dexcom G7 app know when to use the new sensor. The Loop app automatically switches to the new sensor with no additional steps required by the Looper.</p>"},{"location":"loop-3/add-pump/","title":"Add Pump","text":""},{"location":"loop-3/add-pump/#pump-choices","title":"Pump Choices","text":"<p>You can choose a pump from the Heads-Up-Display (HUD) or from the Loop Settings screen.</p> <p>The HUD looks like the graphic below if no CGM or Pump is chosen:</p> <p></p> <p>Switching Pumps?</p> <p>To change the pump connected to Loop go to Change Pump Type.</p> <p>Loopers can choose from 3 pumps and a simulator:</p> <ul> <li>Minimed 500/700 Series</li> <li>Omnipod</li> <li>Omnipod DASH</li> <li>Insulin Pump Simulator</li> </ul> <p>Omnipod Terms</p> <p>The Loop app and LoopDocs use these terms:</p> <ul> <li>Omnipod is the older (Eros) pods (requires RileyLink compatible device to Loop)</li> <li>Omnipod DASH is the newer BLE pods (phone talks directly to pod - no extra device needed to Loop)</li> <li>Omnipod Common means information common to Omnipod and Omnipod DASH</li> </ul>"},{"location":"loop-3/add-pump/#summary-of-steps-to-add-a-pump","title":"Summary of Steps to Add a Pump","text":"<p>Here is an overview of the different steps for adding each pump.  Before changing pumps, you need to delete the old pump first.  See Change Pump Type section below.</p>"},{"location":"loop-3/add-pump/#steps-for-omnipod","title":"Steps for Omnipod","text":"<ol> <li>Omnipod Common 1 (choose default notifications)</li> <li>Insulin Type</li> <li>Select RileyLink</li> <li>Omnipod Common 2 (Pair Pod)</li> </ol>"},{"location":"loop-3/add-pump/#steps-for-omnipod-dash","title":"Steps for Omnipod DASH","text":"<ol> <li>Omnipod Common 1 (choose default notifications)</li> <li>Insulin Type</li> <li>Omnipod Common 2 (Pair Pod)</li> </ol>"},{"location":"loop-3/add-pump/#steps-for-medtronic","title":"Steps for Medtronic","text":"<ol> <li>Insulin Type</li> <li>Select RileyLink</li> <li>Medtronic</li> </ol>"},{"location":"loop-3/add-pump/#add-pump","title":"Add Pump","text":"<p>Tap on Add Pump in the Settings screen to see pump options (shown in the graphic below).</p> <p>Tap on your Pump.</p> <p></p> <p>Medtronic pump users - skip ahead to Insulin Type.</p>"},{"location":"loop-3/add-pump/#omnipod-common-1","title":"Omnipod Common 1","text":""},{"location":"loop-3/add-pump/#pod-nofication-defaults","title":"Pod Nofication Defaults","text":"<p>Here are the common screens for adding Omnipod or Omnipod DASH showing the default settings. You can change the default settings later.</p> <p></p> <p>After you complete these screens, you select the insulin type.</p>"},{"location":"loop-3/add-pump/#insulin-type","title":"Insulin Type","text":"<p>For all pumps, you can choose from the insulin types below.</p> <ul> <li>Insulin Type<ul> <li>Rapid Acting (Novolog, Humalog, Apidra) or Ultra Rapid (Fiasp, Lyumjev)</li> <li>Inhaled insulin (Afrezza) is not offered because it is not used in pumps. Non-Pump Insulin</li> </ul> </li> </ul> <p></p> <p>To add a Omnipod DASH pump, skip ahead to Omnipod Commom 2.</p> <p>Omnipod and Medtronic users should continue to select a RileyLink compatible device.</p>"},{"location":"loop-3/add-pump/#omnipod-or-medtronic","title":"Omnipod or Medtronic","text":""},{"location":"loop-3/add-pump/#select-rileylink","title":"Select RileyLink","text":"<p>For Omnipod and Medtronic pumps, you need a RileyLink compatible device to Loop.  The Device and your phone must be kept close to your pump for Loop to work.</p> <p>A new RileyLink compatible device is not listed next to its slider until after you connect the device to Loop. Find the little toggle in the device list, switch on that toggle, and the RileyLink will appear after the toggle is green.</p> <p>You can personalize the name once it is connected to Loop.</p> <p></p> <p>All RileyLink compatible devices in the nearby area, not already connected to a Loop app, will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue <code>Continue</code> button at the bottom of the screen.</p> <p>If your device does not appear:</p> <ul> <li>Make sure it is charged and turned on</li> <li>Make sure it is not connected to a different phone or app</li> </ul> <p>If you are adding a Medtronic pump, skip ahead to Medtronic.</p>"},{"location":"loop-3/add-pump/#omnipod-common-2","title":"Omnipod Common 2","text":"<p>After selecting a RileyLink for Omnipod, all other actions for Omnipod and Omnipod DASH are the same. Once a pod is paired, the Pump display is the same, except the Omnipod screen has a RileyLink Devices section.</p> <p>For Omnipod (left) and Omnipod DASH (right), you should see the <code>Pair Pod</code> screen.</p> <p></p> <p>At this point - you should hit <code>Cancel</code> (upper right of screen) and review the Omnipod Common page before pairing a pod.</p> <p>New Looper / New Podder</p> <p>Carefully review the Pair Pod instructions and the rest of the Omnipod Common page before continuing. Then, when you are ready, pair a pod.</p> <p>If you are not ready to fill and attach a pod with insulin, try filling a pod with water and let it drip into a ziplock bag to test running Loop on the pod. (Be sure the pod is not near anything when you hit \"Insert Cannula\".)</p> <p>You may enjoy reading Rufus the Bear.</p>"},{"location":"loop-3/add-pump/#medtronic","title":"Medtronic","text":"<p>If you followed this page to add your Medtronic pump, you have completed the first three steps.  If not, you can prepare your pump now, then do those first three steps using Loop (follow the links). All other steps be completed before you Connect the Pump.</p> <ol> <li>Select Minimed 500/700 Series as your pump</li> <li>Select Insulin Type</li> <li>Select RileyLink</li> <li>Prepare Medtronic Pump</li> <li>Connect Pump to Loop</li> </ol>"},{"location":"loop-3/add-pump/#prepare-medtronic-pump","title":"Prepare Medtronic Pump","text":"<p>Loop requires these settings on your Medtronic pump.</p> <p>Check with your users guide (can be found online if you don't have one) for more detailed instructions on your model of pump if you're not sure how to accomplish these steps.</p> <p>If you have basal rates, insulin to sensitivity factor and carb ratios in your pump - these will be overwritten (using the Therapy Setting values) when you connect your pump to Loop. If those rates are important to you, record them prior to continuing.</p> <ul> <li>Turn off Patterns under the basal menu settings.</li> <li>Set the Max Basal and Max Bolus values in the Medtronic pump to be greater than or equal to the values you enter in the Loop Therapy Settings. Otherwise, Loop will not connect to your pump with the error message: <code>Pump Error. Max setting exceeded</code>.</li> <li>Set your pump's <code>Temp Basal Type</code> to <code>Insulin Rate (U/hr)</code>.</li> <li>Set Remote Devices to <code>ON</code> and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn <code>ON</code> the Remote Options.</li> <li>Cancel any currently running extended or dual wave boluses.  Loop cannot loop with those running.</li> <li>If you are using an Enlite CGM through your Medtronic pump, make sure that is configured properly before adding your pump to Loop</li> </ul>"},{"location":"loop-3/add-pump/#connect-pump-to-loop","title":"Connect Pump to Loop","text":"<p>The final step is to connect your Medtronic pump to Loop.</p> <ul> <li>Make sure your RileyLink is turned on and nearby</li> <li>Add your pump's region, color as shown in the graphic below<ul> <li>Note that some Canadian pumps use <code>CM</code> instead of <code>CA</code> for the region code.  Select <code>CA/CM</code> in the dropdown menu.</li> </ul> </li> </ul> <p></p> <ul> <li>Add your pump's 6-digit serial number as shown in the graphic below</li> <li>Click the <code>Connect</code> button to connect the pump to Loop.</li> <li>The spinning icon continues until you see the blue check mark and <code>Continue</code> button<ul> <li>If Loop is not successful at connecting, you will get an error message and stay on this screen</li> <li>If the Delivery Limits (max basal and max bolus) in the pump are lower than values you entered in Loop you will see an error message: <code>Pump Error. Max setting exceeded</code>. (See note below for other reasons you might see this message.)<ul> <li>In this case, edit the values in the pump and then click <code>Connect</code> to retry.</li> </ul> </li> </ul> </li> </ul> <p></p> <p>Max setting exceeded</p> <p>It turns out the \"Max setting exceeded\" error might be displayed even when Max Bolus and Max Basal Rate are already set appropriately on the pump.</p> <ul> <li>If you had previously used a pump that allows multiples of 0.025 U/hr basal rate and you have one of those rates in the basal rate schedule in Loop, you will not be able to connect to a different Medtronic pump that does not support those rates.</li> <li>If this happens to you, cancel out of connecting to that pump<ul> <li>Refer to Prep for Medtronic on the Settings page<ul> <li>Add a simulator so you can Change the scheduled basal rates</li> <li>Delete the simulator</li> </ul> </li> <li>Try again</li> </ul> </li> </ul> <p>Once you have successfully connected to the Medtronic pump, click on <code>Continue</code>:</p> <ul> <li>You will then be presented with two more screens, click <code>Continue</code> for each<ul> <li>Pump Clock message</li> <li>Pump is ready for use screen</li> </ul> </li> <li>If you have an x23 or x54 pump, there is one more step - highlighted below</li> </ul> <p>For x23 and x54 Medtronic pump users only</p> For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process.Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app.Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the <code>Continue</code> button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app.This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. <p>Now that your pump is paired with Loop, you should select the type of battery you are using and decide whether to use My Sentry:</p> <ol> <li>Select your pump's battery type (lithium or alakine)<ul> <li>There is a whole page about Medtronic pump batteries</li> </ul> </li> <li>Leave the Preferred Data Source on Event History</li> <li>If you have a x23 or x54 pump, choose whether to use My Sentry (saves phone battery) or not (saves OrangeLink battery)<ul> <li>For other Medtronic pumps, adjusting this setting does not do anything</li> </ul> </li> </ol> <p>The Medtronic status and commands available are shown in the Pump Setting page.</p>"},{"location":"loop-3/add-pump/#change-pump-type","title":"Change Pump Type","text":"<p>Before changing from one pump type to another pump type, you must delete the old pump type.</p> <ul> <li> <p>If you are using Medtronic, scroll to the bottom of the pump screen and select <code>Delete Pump</code></p> </li> <li> <p>Before switching between Omnipod and Omnipod DASH or any kind of Omnipod to Medtronic, you must deactivate your current pod</p> <ul> <li>This does not include changing a pod, so long as the pods are of the same type</li> <li>The <code>Switch to other insulin delivery device</code> button will not be available with an active pod</li> <li> <p>Follow along in the GIF below - it cycles though these steps.</p> <ul> <li>Go to the Omnipod screen and tap on Replace Pod</li> <li>Deactivate the pod</li> <li>When deactivation completes, tap on Cancel in upper right<ul> <li>If you hit continue instead, tap cancel when Pair Pod screen appears</li> </ul> </li> <li>On the main Loop screen, tap on the ! No Pod icon</li> <li>Scroll to the bottom of the screen</li> <li>Tap on <code>Switch to other insulin delivery device</code> and follow the directions to complete the task</li> </ul> </li> <li> <p>Now the new pump type can be selected from settings or tapping on the add pump icon on the HUD</p> </li> </ul> <p></p> </li> </ul> <p>The Head-Up-Display at the top of the Loop main screen will now show the add pump icon.</p>"},{"location":"loop-3/displays_v3/","title":"Displays","text":"<p>This page has detailed information about Loop 3 Displays.</p> <p>If you are running Loop v2.2.x, follow this link: Loop v2.2.x Displays.</p>"},{"location":"loop-3/displays_v3/#main-loop-screen","title":"Main Loop Screen","text":"<p>The main Loop screen contains a Heads-Up Display (HUD) at the top (when in portrait mode) with various charts in the middle and a toolbar at the bottom.</p> <p></p>"},{"location":"loop-3/displays_v3/#landscape","title":"Landscape","text":"<p>When the device is in landscape mode, the HUD is no longer visible, but the chart history is increased.  In landscape, the exact number of hours varies by phone, but on my test phone, each chart displays the last 8 hours of history along with the next 6 hours of glucose prediction. The toolbar is always visible while the chart display can be scrolled up and down to view charts of interest.</p>"},{"location":"loop-3/displays_v3/#heads-up-display","title":"Heads-Up Display","text":"<p>The Heads-Up Display (HUD) shows 3 icons:</p> <ul> <li>Left: Glucose status</li> <li>Middle: Loop status</li> <li>Right: Pump status</li> </ul> <p>There is a <code>Status Row</code> underneath those three icons that is used to display bolus progress, some alerts and important messages. The <code>Status Row</code> is also a button that performs an action depending on the message.  These are described in the table in the HUD Status Row section. The <code>Status Row</code> is only visible in portrait mode, so make sure to orient your device to look for these messages.</p>"},{"location":"loop-3/displays_v3/#charts","title":"Charts","text":"<p>There are several charts on the main screen to help you navigate and understand Loop.  Tapping on a chart on your phone opens up additional information.</p>"},{"location":"loop-3/displays_v3/#glucose-chart","title":"Glucose Chart","text":"<p>The Glucose Chart displays glucose values in your preferred units.</p> <p>mg/dL or mmol/L</p> <p>If your preferred glucose unit is not selected, follow these instructions to change Glucose Units.</p> <p>The vertical scale is automatically adjusted by Loop to be as useful as possible while including the highest and lowest readings in the chart.</p> <p>The horizontal axis is set to go forward from the current time through your DIA (insulin duration), so you can see what Loop thinks glucose will be eventually. It then goes back in time as far as there is room, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time.</p> <p>The glucose Correction Range is shown as a blue bar on the glucose chart.  Single-value ranges (such as 100-100 mg/dL), will have a narrower blue bar.  When a temporary override range is enabled, a darker blue bar indicates the correction range during that override.</p> <p>Negative Glucose Prediction</p> <p>If you have a crazy negative glucose prediction - it is likely that you set an Override with a tiny sensitivity.</p> <ul> <li>Do not panic - this is a prediction only; not reality.</li> </ul> <p>Best approach:</p> <ul> <li>Open the loop until the prediction settles down.</li> <li>In future, do not choose a tiny sensitivity to force less insulin<ul> <li>Increase the correction range in your override with a moderate change in sensitivity (50% to 90%)</li> <li>Loop will reduce your basal rate at the next cycle (within 5 minutes)</li> <li>Be cautious adding carbs during an override - make sure you understand the effects first</li> </ul> </li> </ul> <p>If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below.</p>"},{"location":"loop-3/displays_v3/#predicted-glucose-chart","title":"Predicted Glucose Chart","text":"<p>The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual glucose.</p> <p></p> <p>The graph at the top of this view will match your Glucose Chart. Below this chart you will see an explanation of the variables Loop takes into account in predicting your future glucose value:  Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction. You can tap on any of the entries to see the effects of that component by looking at the dashed lines.</p> <p>Display Only</p> <p>These elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects.</p>"},{"location":"loop-3/displays_v3/#active-insulin-chart","title":"Active Insulin Chart","text":"<p>The Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive or negative.  Negative IOB results from the suspension of normally scheduled basals.</p> <p>The active insulin displayed in the upper right corner of the chart updates as soon as Loop issues a command to your pump.</p> <p>It may later be modified and the Event History updated if:</p> <ul> <li>The command does not go through and Loop is sure it did not go through</li> <li>The user cancels a bolus</li> <li>The user cancels a temp basal</li> </ul> <p>There are some times when communication is interrupted at a critical moment in the communication cycle. When that happens the Loop Alert - Unable to Reach Pump modal screen appears on your device. Typically, this resolves by itself. Click the link above for more information.</p> <p>Medtronic Only: So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB.</p>"},{"location":"loop-3/displays_v3/#insulin-delivery-chart","title":"Insulin Delivery Chart","text":"<p>The Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as <code>+0 units</code> would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin, is given in the upper right corner of the graph.</p> <p>Please note that for safety reasons, Loop will assume a bolus was successful, even if it is not sure that the pump responded as expected.  Once the communications with the pump settle down, Loop will (almost always) be able to reconcile whether a dose went through as expected. Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event.  This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart as the equivalent of a high temp basal rate.</p>"},{"location":"loop-3/displays_v3/#event-history-reservoir-and-non-pump-insulin","title":"Event History, Reservoir and Non-Pump Insulin","text":"<p>Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are three tabs that can be viewed, with Event History shown by default:</p> <p></p> <ul> <li> <p>Event History: Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability.</p> </li> <li> <p>Reservoir:</p> <ul> <li>Omnipod users should not worry if the reservoir display is blank. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. When a pod is deactivated, the reservoir history for that pod is no longer displayed.</li> <li>Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues.</li> </ul> </li> <li> <p>Non-Pump Insulin: The user can enter insulin taken by another method such as inhaled or by injection. The user can choose a different insulin type than used by the pump. This is explained further at this link.</p> </li> </ul> <p>Previous Pod Insulin History</p> <p>For those who want to delete some recorded insulin near the end of a pod because the site was not absorbing properly, this can be done in Apple Health.</p> <p>Before attempting that modification, please read this entire section on How does Loop use Apple HealthKit in detail.</p> <p>Pay special attention to Insulin and Apple HealthKit section.</p>"},{"location":"loop-3/displays_v3/#active-carbohydrates-chart","title":"Active Carbohydrates Chart","text":"<p>The Carbohydrate chart displays the carbs used by Loop to predict glucose changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen.  Please read the Meal Entry page for more information about entering and editing carb entries.</p>"},{"location":"loop-3/displays_v3/#ice-chart","title":"ICE Chart","text":"<p>Click this link for even more details about Insulin Counteraction Effects. It's a good idea to read both the Meal Entry and ICE pages - this is an important concept.</p>"},{"location":"loop-3/displays_v3/#toolbar","title":"Toolbar","text":"<p>The toolbar is always found at the bottom of the main Loop screen in both portrait and landscape orientation. By tapping on one of these icons, you can begin a Meal Entry, start a Pre-Meal Range, initiate a Manual Bolus, select an Override or go to the Loop Settings screen.</p> <p>From left to right, the icons are:</p> <ul> <li> <p>Meal Entry- click on this icon to enter meals. Detailed info regarding how to enter, save, and edit meal entries can be found in the Meal Entry page.</p> <ul> <li>For those used to entering carbs on a Medtronic pump or coming from non-Loop DIY systems, Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the meal entry tool.</li> </ul> </li> <li> <p>Pre-Meal Range - click on this icon to start the Pre-Meal Range for one hour or until carbs are entered. (plate symbol turns dark green when active)</p> </li> <li> <p>Bolus - click on this icon to open the Bolus tool.</p> </li> <li> <p>Overrides - click on this icon to select a saved or custom Override or to cancel an override if one is active (heart symbol turns dark blue when active)</p> </li> <li> <p>Loop Settings - click on this icon to make changes to any of your Loop settings.</p> </li> </ul>"},{"location":"loop-3/displays_v3/#hud-details","title":"HUD Details","text":"<p>Very Detailed Section</p> <p>This section is packed with an incredible amount of detail. Remember it exists and come back when you need a reference to Loop 3 icons and messages.</p> <p>If you are a new looper your eyes may glaze over the first time through. Don't worry. But do come back and read this section again after you've used the system in Open Loop mode (before you enable Closed Loop mode). And then come back again after a day or so of closed loop testing.</p> <p>Experienced loopers need to read the detail on this page. There are important changes from Loop 2.2.x.</p> <p>The Heads-Up-Display, visible in portrait mode, shows the Glucose Status on the left, the Loop Status in the middle and the Pump Status on the right. Once a CGM and pump have been added to Loop, the Loop Status icon will update and ideally be similar to the graphic below.</p> <p></p> <ul> <li>The Glucose is displayed in the same units as the selected CGM<ul> <li>If units are incorrect, quit Loop, allow your CGM app to update and then restart Loop</li> <li>You can override the display units, later, by selecting the units in Apple Health</li> </ul> </li> <li>The green Loop icon indicates that within the last 5 minutes Loop completed a cycle</li> <li>The Pump Status indicates the scheduled basal rate is running<ul> <li>The +0.0 U display means the basal currently running is 0 U/hr different from the scheduled basal</li> </ul> </li> </ul>"},{"location":"loop-3/displays_v3/#loop-status-icon","title":"Loop Status Icon","text":"<p>The Loop Status Icon is the colored circle in the center of the main Loop display.  The three colors displayed are Green, Yellow or Red.  In all cases, more information is displayed by tapping on the Loop Status Icon, which brings up a modal message indicating the last time a loop cycle completed and other descriptive text.</p>"},{"location":"loop-3/displays_v3/#loop-cycle","title":"Loop Cycle","text":"<p>A complete Loop cycle, at high level, includes these steps:</p> <ul> <li>Current Glucose is updated</li> <li>Glucose prediction is calculated along with any recommended change to insulin delivery to maintain future glucose above safety threshold and within correction range</li> <li>Messages are sent to the pump to modify insulin delivery if required and request current pump status</li> <li>Pump acknowledges the loop messages</li> </ul> <p>This table shows examples of Loop Status Icons and what each icon means.</p>  Icon Meaning A green circle indicates the app is in Closed Loop mode and it completed a cycle within the last 5 minutes. A yellow circle indicates the app is in Closed Loop mode and it has completed a cycle in the last 5-15 minutes.It is not unusual to have a few instances of yellow loops per day.  They can be caused by being out of range (physically), Bluetooth or RileyLink \u201cnoise\u201d interference, or even that the pump was giving a bolus.Most yellow loops will self-resolve without needing any special troubleshooting. A red circle indicates the Loop has not completed in over 15 minutes.This is not a typical state, and you should troubleshoot the problem.In this case, either the Glucose Icon or the Pump Icon or both will display an <code>alert</code> graphic. When the circle is open at the top, Loop is operating in \u201copen-loop\u201d mode. The color code is the same as for closed loop except the cycle involves updating predictions from available blood glucose values and obtaining pump status; but the app will not make any automated changes in insulin delivery.While Manual Temp Basal (MTB) is active, the Open Loop icon will be displayed until MTB expires or is cancelled. Note that MTB is only implemented in Loop 3 for Omnipod and Omnipod DASH, at the current time. <p>Fun Fact</p> <p>The loop status icon will pulse slightly when Loop is communicating with the pump.  The pulsing will stop when the communication has completed (green loop) or given up (yellow or red loop).</p>"},{"location":"loop-3/displays_v3/#example-loop-status-modal-messages","title":"Example Loop Status Modal Messages","text":"<p>When you tap on the Loop Icon on the main screen, you will see a message similar to one of those shown below. The message content depends on:</p> <ul> <li>Closed Loop enabled or disabled</li> <li>How long since the last successful Loop Cycle; &lt;20 minutes, &lt;4 hours, more than 4 hours</li> </ul> <p>On your phone, you should see the green, yellow or red icon in the background - the color is not captured when taking screen shots of the modal message.</p> <p></p>"},{"location":"loop-3/displays_v3/#glucose-status-icon","title":"Glucose Status Icon","text":"<p>The table below shows examples of the Glucose Status Icon and what each icon means. The Glucose Color Code is provided below the table.</p>  Icon Meaning The current glucose reading is displayed. It can be from the CGM or from a finger stick. The value must have been updated within the last 15 minutes to be displayed.For the example shown, a valid trend arrow is available and is blue. Color codes are explained at this link. The last glucose reading from the CGM or from a finger stick is stale, i.e., it was acquired more than 15 minutes ago. In this case, the glucose prediction will stop updating.The HUD Status Row message enables user to enter fingerstick glucose value if desired.If in closed-loop mode, no changes will be made to insulin delivery. If a temporary basal is running, it continues running for the scheduled duration. Once the temporary basal expires, the pump resumes the scheduled basal rate.When the app issues a temporary basal, the duration is always 30 minutes.The user can enter a manual temporary basal duration up to the limits of their pump. If no CGM is currently selected, the Add CGM icon is displayed. The user can add a CGM following these instructions. If no CGM is currently selected, but a glucose value was acquired within the last 15 minutes (from fingerstick or a different CGM), that value is displayed along with a plus sign. By tapping on the icon, the user can add a CGM following these instructions."},{"location":"loop-3/displays_v3/#glucose-color-code","title":"Glucose Color Code","text":"Glucose Range Glucose Value Color Trend Arrow Color 55 mg/dL (3.0 mmol/L) or below red regardless of background color red 56 to 79 mg/dL (3.1 and 4.4 mmol/L) black (light mode) / white (dark mode) yellow 80 to 199 mg/dL (4.4 to 11.0 mmol/L) black (light mode) / white (dark mode) blue 200 mg/dL (11.1 mmol/L) or above black (light mode) / white (dark mode) yellow"},{"location":"loop-3/displays_v3/#cgm-display","title":"CGM Display","text":"<p>Tapping on the CGM icon in the HUD shows more information about the last CGM reading.</p> <p>For Dexcom G5/G6 and Share, the same screen is obtained by tapping on Loop Settings-&gt;CGM.</p> <p>For Nightscout Remote CGM, the Nightscout URL is opened when tapping on the CGM icon in the HUD, while the credential sections is shown when tapping on Loop Settings-&gt;CGM.</p> <p>The graphic below shows the result of tapping on the CGM icon when using a Dexcom G6.  It includes the time of the last reading to the nearest second, along with other information about that sensor and transmitter. It also has an option to go to the Dexcom app on the same device.</p> <p></p>"},{"location":"loop-3/displays_v3/#pump-status-icon","title":"Pump Status Icon","text":"<p>The nominal pump icon displays high-level status information for the pump with two main components: left side is the basal delivery status and right side is the reservoir status. For Pods, a lifecycle line is displayed underneath the pump icon during the last 24 hours of nominal pod life.</p> <ul> <li>The basal delivery status displays the enacted temp basal change relative to the scheduled basal.  For example, for a scheduled basal of 0.45 U/hr<ul> <li>If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.25 U</li> <li>If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.05 U</li> <li>When scheduled basal is running, the icon displays +0.0 U</li> </ul> </li> <li>But what about Overrides?<ul> <li>Using scheduled basal of 0.45 U/hr with override set to 70%, the \"override basal rate\" is 0.315 U/hr<ul> <li>That is a value that cannot be set in the pump, but Loop uses it for IOB calculations<ul> <li>If Loop sets a temp basal rate of 0.2 U/hr, the icon displays -0.115 U</li> <li>If Loop sets a temp basal rate of 1.5 U/hr, the icon displays +1.185 U</li> </ul> </li> </ul> </li> </ul> </li> <li>The reservoir status indicates insulin remaining graphically and displays a value when less than 50 U remain.<ul> <li>For Medtronic Pumps, the reservoir display indicates the level graphically.</li> <li>For Pods, the reservoir graphic is constant until the pod begins to report reservoir level when less than 50 U remain.</li> </ul> </li> </ul> <p>The table below shows examples for a few nominal Pump Status Icons and Alert messages that might be shown.  In all cases, tapping on the Pump Status Icon opens the Pump Settings screen with more information.</p>  Icon Meaning This nominal pump status graphic is for a Pod with temp basal less than scheduled basal rate and no reported reservoir level. This nominal pump status graphic is for a Medtronic pump running scheduled basal rate and with a half-full reservoir.For a Pod, the reservoir shows full until pod estimates reservoir is below 50 U remaining. This nominal pump status graphic is for a pump running a high temp basal rate with the reservoir level reported. When the reservoir level is above the notification level, the reservoir graphic is orange. This pump status graphic indicates 2 alerts: (1) the 15 U reservoir level is less than the notification level of 20 U selected by this user and (2) a small clock icon is added to the display to indicate the phone time zone and pump time zone do not match. When the reservoir level is below the notification level, the reservoir graphic is yellow.Follow the link for time zone information. This alert message indicates the reservoir reports 0 U. Although  pumps will continue to deliver some insulin after this point (max of 4 U for pods, or until all insulin is gone for both pods and Medtronic), the user should be aware that insulin delivery could stop at any moment.Note that if you see a display of 0 U in yellow, that means there is 0.5 U or less reported by the pump. This alert message indicates no pod is currently paired so no insulin is being delivered.Tap on the icon to reach the pod setting screen and pair a new pod, or switch to a different source for providing insulin. This alert message indicates all insulin delivery has been suspended. A Status Row message appears to enable the user to resume delivery with one tap. Alternatively, insulin can be resumed by tapping on the Pump Icon to enter the Pump Setting display and resume from that screen. This alert message indicates the user has initiated a manual temp basal (MTB). While the MTB is active, the Loop Icon Status will also display an Open Loop symbol to indicate no automatic adjustments are made until MTB expires or is canceled. The lifecycle indicator across the bottom of the pod status indicates a pod within the final 24 hours of nominal life.Tapping on the icon takes the user to the pump settings display where the rate and duration of the MTB are displayed. This alert message indicates it has been more than 15 minutes since the app was able to communicate with the pump.Follow these troubleshooting steps. This alert message indicates no pump has been added. Follow the instruction for adding a pump."},{"location":"loop-3/displays_v3/#time-zone","title":"Time Zone","text":"<p>Loop allows your pump to have a different time zone from your phone.</p> <ul> <li>For Medtronic - the pump time shows on the pump display<ul> <li>Always use Loop to set your pump time</li> </ul> </li> <li>For Omnipod Common - there isn't a clock on pods, but Loop has a concept of \"pump\" time for that pod</li> </ul> <p>Your daily schedule for basal rates, correction ranges, insulin sensitivity factors and carb ratios is displayed with respect to midnight on \"pump time\". When you first Add Pump to Loop, the pump and phone are in the same time zone, but it's important to understand what happens when the time zone changes on the phone.</p> <ul> <li> <p>The scheduled rates for basal, correction range, ISF and CR follow  the pump time</p> <ul> <li>This is true even when your phone updates because of a new time zone (travel) or because of daylight savings (summer) time</li> <li>This is true across pod changes</li> </ul> </li> <li> <p>To change the pump time zone to match your phone, select the Pump Settings display</p> <ul> <li>An active row is available when phone and pump time zones are different</li> <li>Touch the active row to update the pump time zone to phone time zone<ul> <li>Medtronic: Loop sets the pump time to the current phone time</li> <li>Omnipod Common: Loop sends your scheduled basal rates to your pod based on phone time</li> <li>Make sure your gear is close together (phone, pump and, if needed, RileyLink)</li> </ul> </li> </ul> </li> </ul> <p>The display to modify time zone is slightly different for Loop 2.2.x and Loop 3 (links below):</p> <ul> <li>Loop 3 Omnipod</li> <li>Loop 3 Medtronic</li> <li>Loop 2.2.x</li> </ul> <p>You can choose to leave the pump and phone time zones different; the pump icon on the HUD (Loop 3 only) will show the clock icon to remind you. Many people do this for short trips.</p>"},{"location":"loop-3/displays_v3/#other-time-changes","title":"Other Time Changes","text":"<p>What about other time changes?  Suppose the iOS -&gt; General -&gt; Time &amp; Date is modified to manually change the time, but the time zone is not adjusted. (Sometimes this is done to defeat limits on games. Do Not do this on a Looping phone.  If you have an \"old\" glucose reading in the \"future\" - Loop will not predict correctly which may have dangerous consequences.) There will not be an obvious display in the HUD or Omnipod screen (which keys off time zone) but you will get regular warnings that phone does not have automatic time set.</p> <p>Loop 3 will display this warning modal screen if it detects a problem with the Phone time. It leaves it up the user to decide what action should be taken. To make this warning stop, go to iOS -&gt; General -&gt; Time &amp; Date and enable Set Automatically. </p> <p></p>"},{"location":"loop-3/displays_v3/#hud-status-row","title":"HUD Status Row","text":"<p>The Status Row is located immediately below the CGM, Loop and Pump Icons and is used to provide status, action buttons and information. The messages in the table are in order of priority. For example, a <code>No Recent Glucose</code> message is displayed even when an <code>Override</code> is active.</p> <p>Bolus In Progress</p> <p>The bolus messages are displayed with the highest priority:</p> <ul> <li>If another message is shown when a bolus starts, the bolus message is displayed instead</li> <li>To return to the other message, such as Override or <code>No Recent Glucose</code>, you must either wait for the bolus to complete or cancel the bolus by tapping on the <code>Status Row</code></li> <li>To ensure you do not accidentally cancel a bolus, keep the phone locked when not in use</li> </ul> Status Row / Meaning When the user issues a manual bolus through the app, a <code>Starting Bolus</code> information message is displayed. Tapping on this message has no action.As soon as the app issues a command to the pump (or sends it to the RileyLink to be delivered to the pump), the bolus in progress message appears. As soon as a bolus is started, from either a manual command or an automatic bolus, the bolus in progress message is displayed. Tapping on the <code>Status Row</code> causes the app to attempt to cancel the bolus. The app can only cancel a bolus if communication is active between the app and the pump.The message says <code>Bolused</code>value<code>of</code>total<code>U</code>. The value is based on a timer, so it is possible for an occlusion or other fault to occur while the app indicates bolus is in progress.In case of a fault, the user can tap on the pump icon to force a new pump status reading. For the case of pods, this allows you to  silence a screaming pod quickly. Once the app communicates with the pump, the actual delivery status will be updated. If the user taps on the bolus in progress message in the <code>Status Row</code>, the message changes to Canceling Bolus. Tapping on this message has no action. As soon the app determines that the pump is suspended, the <code>Insulin Suspended, Tap to Resume</code> message is displayed. Tapping on the <code>Status Row</code> resumes scheduled basal delivery if communication is active between the app and the pump.Medtronic pump users who suspend directly on the pump will notice a delay before this message is displayed. It is best to use the app Pump Settings screen to suspend the pump. If a higher priority message is not displayed in the <code>Status Row</code> and the glucose value is stale (more than 15 minutes old), the <code>No Recent Glucose, Tap to Add</code> message is displayed. Tapping on the <code>Status Row</code> opens the Manual Bolus screen for entry of a Fingerstick Glucose. Note that if you choose not to accept a recommended bolus on this screen but you want to save the Fingerstick value, you need to tap the Bolus line to force it to 0 U and then tap <code>Save Without Bolusing</code>. However, be aware that, in Closed Loop mode, the app will use that glucose value for the next 15 minutes and may adjust insulin delivery accordingly. If a higher priority message is not displayed in the <code>Status Row</code> and an override is active, the override symbol and name, along with the time at which the override expires, is displayed. Tapping on the <code>Status Row</code> opens the screen for that particular override to enable the user to edit the override. Note that any changes made to that override are applied just to the current session. If you want the override permanently modified, refer to the Overrides instructions. If a higher priority message is not displayed in the <code>Status Row</code> and the Pre-Meal Range is active in the toolbar, the <code>Pre-meal Preset, until time stamp</code> is displayed. Tapping on the status row has no effect for this message.New with Loop 3: The Pre-Meal Preset can be engaged with an Override. When both are active, the Pre-Meal Range supersedes the range of the active Override, but the other settings for that Override still apply. When both are active, the <code>Status Row</code> message reflects the Override with both the Pre-Meal and Override icons in the toolbar highlighted."},{"location":"loop-3/features/","title":"Features","text":""},{"location":"loop-3/features/#work-in-progress","title":"Work in Progress","text":"<p>work in progress</p> <p>This page will be deleted after all the relevant information is incorporated into the appropriate locations as part of the development process for Loop 3.</p> <p>Now that Loop 3 has been released, this page may be updated, but leaving it alone for now.</p> <p>This page discusses updated versions of Loop features as well as new capabilities provided with Loop 3.</p> <p>Loop 3 Displays</p> <p>One thing you may notice on some screens is the primary button, with associated information message, is always visible at the bottom of even small screens.  You may need to scroll to see intermediate rows. </p> <p>For example, if the default action on a bolus screen is to deliver the recommended bolus, that button is visible and active. The button remains fixed as other portions of the screen are scrolled up and down. When you make changes to selections, then the information displayed and the button label updates to reflect the action taken if you tap on the button.</p> <p>There are other screens, like the Onboarding and Therapy Settings screens, where you should read all the provided information.  Those screens require you to scroll to the bottom before being able to hit <code>Continue</code> or <code>Save</code>.</p>"},{"location":"loop-3/features/#non-pump-insulin","title":"Non-Pump Insulin","text":"<p>If insulin is taken from a different source and the user wants to let Loop know, there is a new method in Loop 3.</p> <p>With Loop 2.2.x, the user manually entered the Insulin dose into the Apple Health app. Loop then imported that value.</p> <p>With Loop 3, the \"old\" method still works, but there is a new method for entering this information. This method enables the user to indicate the type of insulin so that the appropriate model is used by Loop. An updated <code>Glucose</code> prediction chart is displayed prior to saving the dose.</p>"},{"location":"loop-3/features/#enter-non-pump-insulin-before-carbs","title":"Enter non-pump insulin before carbs","text":"<p>WARNING</p> <p>If you are planning to enter non-pump insulin to cover carbs and you do NOT want Loop to automatically start increasing insulin based on the carb entry, enter the non-pump insulin first and then add the carbs.</p> <p>To find out what Loop recommends, without actually dosing with Loop:</p> <ul> <li>Wait for a CGM entry (or fingerstick) to appear in the HUD<ul> <li>Enter the carbs and continue to the bolus screen, i.e., do not save carbs</li> <li>Note the recommended bolus, but do not actually bolus</li> <li>Back up to the carb entry screen and <code>Cancel</code></li> </ul> </li> <li>Go to the non-pump insulin screen and enter the bolus amount you've decided to take and select the model if a different from your pump<ul> <li>Don't forget to actually take the insulin</li> <li>Add the carb entry and save carbs without bolusing</li> </ul> </li> </ul> <ol> <li> <p>Tap on either of the insulin charts (Active Insulin or Insulin Delivery) on the home screen to display the <code>Insulin Delivery Screen</code>. This screen has 3 tabs.</p> <ul> <li>Event History (default) is similar to Loop 2.2.x; however, the event history from a prior pod is not displayed once it is deactivated</li> <li>Reservoir is similar to Loop 2.2.x; however, the reservoir value from a prior pod is not displayed once it is deactivated</li> <li>Non-Pump Insulin is a new feature with Loop 3</li> </ul> </li> <li> <p>Select the <code>Non-Pump Insulin</code> tab to bring up the graphic shown below</p> <ul> <li>Tap on the + sign (green solid lines)</li> <li><code>Log Dose</code> screen is displayed showing the current <code>Glucose</code> prediction</li> <li>The default insulin type is that used by the pump</li> <li>To modify Insulin Type, tap on that row (red dashed lines)<ul> <li>Picker wheel allows other insulin types to be selected</li> <li>Note that some insulin types, such as Afrezza are only available for non-pump insulin selection</li> </ul> </li> <li>Tap on the <code>Bolus</code> row (blue dash-dot lines) to bring up a keyboard<ul> <li>The <code>Glucose</code> prediction chart updates automatically based on the value entered in the Bolus row</li> <li>Tip, add 0.001 to the actual dose to make it easier to see if reviewing in Apple Health</li> <li>Once the user selects <code>Done</code> on the keyboard display, the entered value is displayed on the <code>Bolus</code> row and the <code>Log Dose</code> button changes from gray to blue</li> <li>Tap on <code>Log Dose</code> to record or <code>Cancel</code> to quit</li> </ul> </li> </ul> </li> </ol> <p></p>"},{"location":"loop-3/features/#bolus-entry","title":"Bolus Entry","text":"<p>The bolus following carbs (<code>Meal Bolus</code>) and manual bolus (<code>Bolus</code>) screens are updated from Loop 2.2.x version. There is still a predicted <code>Glucose</code> chart that actively updates as the bolus value is updated and various buttons. </p> <ul> <li>With Loop 2.2.x<ul> <li>The Recommended Bolus is provided but the default for the Bolus value is 0</li> <li>If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row</li> </ul> </li> <li>With Loop 3<ul> <li>The Recommended Bolus is provided AND the default for the Bolus is the recommended value</li> <li>If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry</li> </ul> </li> </ul> <p>Blue Means Active</p> <ul> <li>The blue color indicates an active button, whereas a grey button is inactive.</li> <li>The value displayed on the <code>Bolus</code> row is blue to indicate if you tap on that, you can edit the value</li> </ul>"},{"location":"loop-3/features/#meal-bolus","title":"Meal Bolus","text":"<p>When the <code>Meal Bolus</code> screen is entered following a carb entry or edit action, the active button might be <code>Save and Bolus</code> or, if no bolus was recommended, <code>Save without Bolusing</code>. The <code>Save</code> refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen.</p>"},{"location":"loop-3/features/#accept-recommendation","title":"Accept Recommendation","text":"<p>In the graphic below, the user enters carbs and taps continue to display the Meal Bolus screen.</p> <ul> <li>The left graphic shows a case where a bolus is recommended - tapping on the <code>Save and Deliver</code> button saves the carbs and delivers the bolus</li> <li>The right graphic shows a case where no bolus is recommended - tapping on the <code>Save without Bolusing</code> saves the carbs</li> <li>Note that these graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the <code>Recommended Bolus</code> and <code>Bolus</code> rows</li> <li>For both graphics<ul> <li>Active Carbs and Active Insulin are displayed above the <code>Glucose</code> prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved)</li> <li>The Bolus Summary is presented below the <code>Glucose</code> prediction graph with three rows:<ul> <li><code>Carb Entry</code>, the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the <code>&lt; Carb Entry</code> button at upper left</li> <li><code>Recommended Bolus</code> displays what Loop recommends for that proposed <code>Carb Entry</code></li> <li><code>Bolus</code> default display is what Loop recommends, but user can edit that value</li> </ul> </li> </ul> </li> </ul> <p></p> <p>If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged.</p>"},{"location":"loop-3/features/#modify-bolus","title":"Modify Bolus","text":"<p>This section is a continuation of the information presented in the Accept Recommendation portion of the <code>Meal Bolus</code> section. In the graphic below, the user overrides the recommended bolus.</p> <ul> <li>The left side shows a modified bolus less than the recommended bolus</li> <li>The right side shows a modified bolus greater than the recommended bolus</li> <li>Note that the <code>Glucose</code> prediction graph updates based off the <code>Bolus</code> value, giving the user the opportunity to accept or change their proposed value before tapping <code>Save and Deliver</code></li> <li>At the next Loop cycle, the app modifies insulin delivery based on the saved information<ul> <li>For the example with bolus less than recommended amount:<ul> <li>Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the <code>Correction</code> range</li> <li>The recommendation to add insulin when the current glucose is below the <code>Correction Range</code> is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the <code>Safety Threshold</code></li> </ul> </li> <li>For the example with bolus greater than recommended amount:<ul> <li>Loop will probably issue an automatic temp basal of 0 U/hr</li> <li>This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post meal spikes</li> </ul> </li> </ul> </li> <li>Remember - the <code>Glucose</code> prediction is what happens if you <code>Save and Deliver</code> and then no further adjustments are made to insulin delivery by Loop</li> </ul> <p></p>"},{"location":"loop-3/features/#manual-bolus","title":"Manual Bolus","text":"<p>When the <code>Bolus</code> screen is entered directly from the toolbar, the button choices are <code>Enter Bolus</code> if none is recommended, <code>Deliver</code> if a value is on the <code>Bolus</code> row or <code>Cancel</code> using the button on the upper left. The user can also tap on the value on the <code>Bolus</code> row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero.</p> <p>There are other alert messages that might be displayed if the pump or CGM is not active.  Those are found on the Loop 3 Displays page.</p> <p>The two graphics below are examples of manual bolus screens. </p> <ul> <li>In the first graphic, no bolus was recommended<ul> <li>If you tap on the <code>Enter Bolus</code> button at the bottom, it brings up a screen to enable you to type in an amount and then <code>Deliver</code> it. </li> <li>Alternatively, you can tap the <code>0</code> amount in the <code>Bolus</code> row and perform the same action as the <code>Enter Bolus</code> button</li> <li>If you do not want to override the recommendation, hit the <code>Cancel</code> button at upper left.</li> </ul> </li> </ul> <p></p> <ul> <li>In the second graphic, a recommended amount is shown<ul> <li>If you tap on <code>Deliver</code> that recommended dose is delivered</li> <li>If you tap on the value on the <code>Bolus</code> row, you can override the amount</li> <li>The amount displayed on the <code>Bolus</code> row is modified to 0 U with the first tap - at that point, you may enter a new value or tap <code>Cancel</code> using the button at upper left of the screen</li> </ul> </li> </ul> <p></p>"},{"location":"loop-3/features/#remote-carb-bolus","title":"Remote Carb / Bolus","text":"<p>Loop 3 has a Remote Carb and Remote Bolus feature to enable remote caregivers to better assist the person who needs support managing with Loop.</p> <p>The author of this feature wrote this Remote Carb/Bolus Guide documentation. Please read carefully and use with the appropriate level of caution.</p> <p>WARNING</p> <p>You will be using this feature at  your own risk, like any other Loop code you build. It is very important you completely read and re-read the Remote Carb/Bolus Guide before getting started. </p> <p>There are validation and troubleshooting steps for each section of the guide. </p> <p>Please make sure not to skip sections as this makes it difficult to troubleshoot.</p> <p>Be aware:</p> <ul> <li>Apple limits how many push notifications (used by this feature) can be received on an iOS device</li> <li>If the system feels too many are being sent, it may begin to throttle notifications</li> <li>There is not a published limit, but consider limiting it to 1 per hour</li> <li>When on cellular data, there may be further limitations to protect your data usage</li> </ul>"},{"location":"loop-3/features/#next-section-moved-from-loop-3-overviewmd-page","title":"Next Section moved from loop-3-overview.md page","text":""},{"location":"loop-3/features/#new-with-loop-3","title":"New with Loop 3","text":"<p>The Loop 3 app, building off work by Tidepool and DIY contributors, provides a major upgrade in user safety, user experience and user interface with the same great Loop algorithm..</p> <p>Here are some highlights:</p> <ul> <li>Onboarding protocol with guardrails to help configure settings</li> <li>Streamlined main screen display and user experience</li> <li>Better alerts and notifications</li> <li>Omnipod Dash compatibility</li> <li>Fingerstick blood glucose prompts when data is stale</li> <li>Non-pump insulin entry within the app</li> <li>Remote Carb/Bolus capability</li> </ul>"},{"location":"loop-3/loop-3-overview/","title":"Overview","text":""},{"location":"loop-3/loop-3-overview/#loop-3-set-up-overview","title":"Loop 3 Set Up Overview","text":"<p>Congratulations on Building Loop!</p> <p>The first time you build Loop 3, the app takes you through the Onboarding process. Review this page before using your app.</p> <p>Suggestion</p> <ul> <li>Read this page all the way through without clicking on any links</li> <li>Scroll back to the top of the page and click the links for more detail on particular topics as needed<ul> <li>Use the back button on your browser to return from a link</li> </ul> </li> </ul>"},{"location":"loop-3/loop-3-overview/#brand-new-loopers","title":"Brand New Loopers","text":"<ul> <li>Review these 3 pages in detail before you touch any buttons on your app<ul> <li>Onboarding</li> <li>Add CGM</li> <li>Add Pump</li> </ul> </li> <li> <p>Review these pages from the Intro tab of LoopDocs</p> <ul> <li>Test Settings</li> <li>Loop Data</li> <li>Meet the Community</li> </ul> </li> <li> <p>Read the rest of the pages listed under All Loopers, below. </p> <ul> <li>The information on the pages will become clearer as you learn to use the app.  You can find a page later using the search function</li> <li>Complete the Onboarding steps to set up Loop</li> <li>Learn to use Loop starting with the Open Loop page</li> <li>Once you are comfortable with manually controlling Loop and have settings that work with the algorithm, move on to the Closed Loop page</li> <li>Make suggestions if you think parts of LoopDocs could be clarified, especially from the viewpoint of a brand-new Looper</li> </ul> </li> </ul>"},{"location":"loop-3/loop-3-overview/#experienced-loopers","title":"Experienced Loopers","text":"<ul> <li>Skim these 3 pages before you touch any buttons on your app<ul> <li>Onboarding<ul> <li>Read in detail Onboarding: Experienced Loopers</li> </ul> </li> <li>Add CGM</li> <li>Add Pump<ul> <li>If switching to DASH, read Change Pump Type</li> </ul> </li> </ul> </li> <li>Read the rest of the pages listed under All Loopers, below<ul> <li>Some of the screens and user interface changed with Loop 3</li> <li>Many of the new Loop 3 features are described</li> <li>Reach out if information is missing or needs to be clarified, suggestions are always welcome</li> </ul> </li> <li>LoopDocs design<ul> <li>Sections specific to experienced Loopers are after the sections for new Loopers</li> <li>The goal is to make LoopDocs easier for new Loopers to navigate</li> <li>Experienced Loopers can scroll ahead, check the page table of contents or use the search feature</li> </ul> </li> </ul>"},{"location":"loop-3/loop-3-overview/#all-loopers","title":"All Loopers","text":"<p>These pages have a lot of detailed Loop information.</p> <ul> <li>Settings</li> <li>Therapy Settings</li> <li>Optional Services</li> <li>Displays</li> </ul> <p>And a lot of detailed information about Status and Commands for:</p> <ul> <li>RileyLink</li> <li>Omnipod Common</li> <li>Medtronic</li> </ul> <p>Medtronic Users</p> <p>You must select Insulin Type on your pump settings screen after updating from Loop 2 to Loop 3 and completing the onboarding. Without an insulin type, closed loop will not work.</p>"},{"location":"loop-3/loop-3-overview/#safety","title":"Safety","text":"<p>Please be informed so you can Loop safely.</p> <p>Consult with your health care professional regarding your diabetes management.</p> <p>Open Source</p> <ul> <li>The Loop app is an open source project used by many, but it is not approved for therapy by any government organization.</li> <li>You take full responsibility for building and running this system and do so at your own risk.</li> </ul>"},{"location":"loop-3/medtronic/","title":"Medtronic Pump","text":""},{"location":"loop-3/medtronic/#pump-settings","title":"Pump Settings","text":"<p>To bring up the Pump Settings display, tap on the pump icon in the Heads Up Display (HUD) or your connected pump in the Loop Settings screen.</p>"},{"location":"loop-3/medtronic/#medtronic-status-and-commands","title":"Medtronic Status and Commands","text":"<p>Medtronic status and commands are found in the Pump Settings screen shown in the graphic below. The top section is configured at the time the pump is connected to Loop. You cannot edit those lines.</p> <p></p>"},{"location":"loop-3/medtronic/#suspend-delivery","title":"Suspend Delivery","text":"<p>Tapping on the <code>Suspend Delivery</code> row will suspend all insulin delivery: basals, temp basals, and boluses in progress. When you press <code>Suspend Delivery</code>, the label changes to <code>Suspending</code> while Loop is communicating with the pump. When the label changes to <code>Resume Delivery</code>, all insulin delivery is stopped until the user resumes using the HUD Status Row, the Pump Settings screen or on the pump itself.</p> <p>As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. Make sure your RileyLink device is powered on and close to the phone and pump.</p> <p>When the phone is in portrait mode, so the HUD is visible:</p> <ul> <li>The user is alerted that pump is suspended by the HUD Pump Status Icon.</li> </ul> <p></p> <ul> <li>The HUD Status Row message can be tapped to resume delivery.</li> </ul> <p></p> <p>You can still suspend and resume insulin on the pump itself.  It may take until the next Loop cycle (typically less than 5 minutes), but Loop will detect that the pump is suspended or basal is resumed and the HUD Status Row will update.</p> <p>If you request a manual bolus with Loop while the pump is suspended, Loop resumes basal delivery as well. No automated boluses are initiated while suspended, only manual ones.</p>"},{"location":"loop-3/medtronic/#change-time-zone","title":"Change Time Zone","text":"<p>During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to <code>Change Time Zone</code>. Please review Time Zone for more details.</p> <p>If you notice a small clock symbol in upper right of the pump status icon, that indicates the time zone for the pump and phone are not the same.</p> <p></p>"},{"location":"loop-3/medtronic/#pump-battery-type","title":"Pump Battery Type","text":"<p>The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump.</p>"},{"location":"loop-3/medtronic/#preferred-data-source","title":"Preferred Data Source","text":"<p>Leave the Preferred Data Source set to on Event History.</p>"},{"location":"loop-3/medtronic/#insulin-type","title":"Insulin Type","text":"<p>You selected insulin type when connecting to this pump.</p> <p>Use this row if you switch to a different type of insulin.</p> <ul> <li>The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences</li> <li>If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model</li> </ul>"},{"location":"loop-3/medtronic/#use-mysentry","title":"Use MySentry","text":"<p>Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly.  This option allows you to turn off MySentry within the Loop app.</p> <p></p>"},{"location":"loop-3/medtronic/#devices","title":"Devices","text":"<p>This allows access to the RileyLink screen for each connected RileyLink compatible device.</p>"},{"location":"loop-3/medtronic/#delete-pump","title":"Delete Pump","text":"<p>If you want to switch to a different pump you must first delete this one:</p> <ul> <li>Deselect your RileyLink compatible device<ul> <li>Move the slider(s) so it is no longer green</li> </ul> </li> <li>Tap on <code>Delete Pump</code></li> <li>Acknowledge you really mean it when asked by tapping <code>Delete Pump</code> again</li> <li>Add a new pump</li> </ul> <p>For more information, follow this link: Modify Pump.</p>"},{"location":"loop-3/omnipod/","title":"Omnipod Pump","text":""},{"location":"loop-3/omnipod/#omnipod-and-omnipod-dash-pump","title":"Omnipod and Omnipod DASH Pump","text":"<p>The information and user interface for Omnipod (Eros) and DASH pods is the same, except Omnipod DASH pods do not require a RileyLink compatible device. They communicate directly with the phone through Bluetooth.</p>"},{"location":"loop-3/omnipod/#pair-pod","title":"Pair Pod","text":"<p>Max Fill is 200 Units</p> <p>When you fill the Pod do not exceed 200 units.</p> <p>If you overfill the pods, you may get a pod fault right after priming.</p> <p>Pod Filling and Insertion</p> <p>The Pod filling and insertion instructions are the same with the Loop app as they are for the PDM.  These videos: Filling a Pod with Insulin and Inserting the Cannula, may be useful.</p> <p>For DASH Pods:</p> <ul> <li>You will use your phone instead of the PDM.  Be sure to keep the phone close to the pod during pairing and insertion because the Pod uses a low-power mode during these activities.</li> </ul> <p>For Eros Pods:</p> <ul> <li>You will use your phone and RileyLink compatible device instead of the PDM.  Be sure to keep the phone and RileyLink close during pairing and insertion because the Pod uses a low-power mode during these activities.</li> </ul> <p>You'll be pairing a pod every 2 or 3 days (max pod life is 80 hours).</p> <p>You'll see this screen every time you ask Loop to <code>Pair New Pod</code>.</p> <p>The Omnipod Common pairing protocol is the same for all pods. The difference is that Omnipod requires a RileyLink compatible device and Omnipod DASH does not. There are also slight differences in some of the text and graphics, e.g., Omnipod DASH uses a blue needle cap and Omnipod has a clear needle cap.</p> <p>Graphic below shows the Pair Pod screen for Omnipod (left) and Omnipod DASH (right).</p> <p></p> <p>Loop walks you through each step of the filling, pairing, priming, attaching and insertion process.</p> <p>It makes sure you are really ready to do the insertion.</p> <p>Please watch the video to see the full process before pairing your first pod.</p> <p>A video is found here for what shows on the Loop app screen when pairing a DASH pod. Once the pod starts priming in the video, you may want to skip forward (it takes about a minute to prime).</p> <p>Keep Gear Close</p> <ul> <li>Make sure phone (and RileyLink if using one) are close to the pod before you tap Pair Pod<ul> <li>Do NOT move devices away from the pod until you see the blue check mark and the <code>Continue</code> button on the phone screen</li> <li>You can then move away to attach the pod to your body</li> </ul> </li> <li>Make sure phone (and RileyLink if using one) are close to the pod before you tap <code>Insert Cannula</code><ul> <li>Do NOT move devices away from the pod until you see the blue check mark and the <code>Continue</code> button on the phone screen</li> </ul> </li> </ul> <p>The Screen that says Setup Complete allows you to change the Scheduled Reminder for this pod if you want a different reminder time (including none) from your usual setting.</p> <ul> <li>This only changes the reminder for this one pod</li> <li>If you want to change all future reminders, tap on Notifications to modify the Reminder Default</li> <li>In that same location, you can also change notification for the current pod</li> </ul>"},{"location":"loop-3/omnipod/#pod-status","title":"Pod Status","text":"<p>The Pod Status screen is shown in the graphic below. The dashed green outline indicates the <code>Device</code> portion that is found only for the Omnipod.  All other features of the screen are common for Omnipod and Omnipod DASH.</p> <p></p>"},{"location":"loop-3/omnipod/#play-beeps","title":"Play Beeps","text":"<p>If you want to make sure Loop can talk to your pod, click on the sound icon (highlighted by the red box) in the graphic above. If the icon is greyed out - that means Loop is having a communication issue reaching your pod. Follow the usual Troubleshoot: Pump is Not Responding steps to resolve this problem.</p> <p>Other Uses</p> <ul> <li>Find (or startle) your child</li> <li>Find the pod that fell off overnight and is mixed with the laundry</li> </ul>"},{"location":"loop-3/omnipod/#pod-expires","title":"Pod Expires","text":"<ul> <li>This line provides a count-down until expiration along with a graphical representation of pod life<ul> <li>Once you are on the final day, the time remaining until expiration starts to report in Hours and Minutes</li> <li>The solid bar is proportional to pod hours since activation<ul> <li>It is blue for the first 48 hours</li> <li>It is orange for the last 24 hours and also appears in the HUD Pump Status icon</li> <li>After expiration, a full-width red bar is shown here and in the HUD Pump Status icon</li> </ul> </li> </ul> </li> <li>Once the pod officially expires, at 72 hours, there is an 8 hour grace period<ul> <li>Insulet does not guarantee the pod will keep working that long, but it often does</li> <li>A note will appear on the Pod Status screen with count-down text:<ul> <li>Change pod now. Insulin delivery will stop in HH hours, MM minutes or when no more insulin remains</li> </ul> </li> </ul> </li> </ul>"},{"location":"loop-3/omnipod/#basal-report","title":"Basal Report","text":"<p>The next row changes the label depending on the situation. In all cases, the current basal rate is reported.</p>  Label Description Scheduled Basal Pod is running the scheduled basal rate Insulin Delivery Pod is running an automated or manual temporary basal rate"},{"location":"loop-3/omnipod/#insulin-remaining","title":"Insulin Remaining","text":"<p>Pods start reporting reservoir values when 50 U are left.</p>  Value Meaning 50+ U Pod reservoir is greater than 50 U Value U Pod reservoir is estimated to be at least as great as the indicated value. 0 U Pod will attempt to deliver up to 4 U after it reports 0 U. This is not guaranteed. The pod senses when it is not successful delivering pulses and that can happen before 4 U have been delivered."},{"location":"loop-3/omnipod/#activity","title":"Activity","text":""},{"location":"loop-3/omnipod/#suspend-delivery","title":"Suspend Delivery","text":"<p>You may want to consider using a Manual Temp Basal of 0 U/hr instead of suspend.</p> <p>Tapping on <code>Suspend Delivery</code> brings up a timed reminder screen. You can choose to be reminded (via a beep on the pod itself) with 4 choices (or you can cancel the request):</p> <ul> <li>30 minutes</li> <li>1 hour</li> <li>1 hour 30 minutes</li> <li>2 hours</li> </ul> <p>After you select the reminder time, Loop issues a command to the pod to halt all insulin delivery: basals, temp basals, and boluses in progress. The label on the <code>Suspend Delivery</code> row changes to <code>Suspending</code> while Loop is communicating with the pump. When the label changes to <code>Resume Delivery</code>, all insulin delivery is stopped until the user resumes using the HUD Status Row or the Pod Status screen.</p> <p>As long as the spinning icon is spinning, Loop is trying to execute the Suspend or Resume command. If it fails to complete, a modal alert will appear that says \"Error Suspending\" or \"Failed to Resume Insulin Delivery\" which you must acknowledge. You must then repeat the command to try again. For Omnipod, make sure your RileyLink device is powered on and close to the phone and pod.</p> <p>When the phone is in portrait mode, so the HUD is visible:</p> <ul> <li>The user is alerted that pump is suspended by the HUD Pump Status Icon.</li> </ul> <p></p> <ul> <li>The HUD Status Row message can be tapped to resume delivery.</li> </ul> <p></p>"},{"location":"loop-3/omnipod/#no-manual-bolus-while-pod-is-suspended","title":"No Manual Bolus While Pod is Suspended","text":"<p>If you request a manual bolus with Loop while a pod is suspended, Loop will send a notification that Bolus Failed with instructions that Pump is Suspended, Resume Delivery.  In other words, you must resume delivery before you will be allowed to bolus with pods.</p>"},{"location":"loop-3/omnipod/#suspend-timer-reminder","title":"Suspend Timer Reminder","text":"<p>At the end of the reminder time, an alert beep is issued by the pod and a modal alert will be provided on the Loop app. You must acknowledge the modal alert on the phone to silence future pod alerts. </p> <ul> <li>If you do not acknowledge the modal alert, the pod will keep beeping</li> <li>If you need a silent pod, consider using Manual Temp Basal of 0 U/hr instead of Suspend</li> </ul> <p></p> <p>Manually Resume Insulin Delivery</p> <p>The halt of all insulin delivery continues until you manually resume. There is no automatic resumption of basal insulin from a suspend command.</p> <p>If you select a Manual Temp Basal command of 0 U/hr instead of Suspend:</p> <ul> <li>Basal Delivery automatically resumes at the end of the selected duration without need for Loop to command it</li> <li>At the end of the duration, Loop will restore Closed Loop, if you were in closed loop when you issued the Manual Temp Basal command</li> <li>There are no beeps on the pod to remind you to resume insulin delivery</li> </ul>"},{"location":"loop-3/omnipod/#manual-temp-basal","title":"Manual Temp Basal","text":"<p>Tap on the <code>Set Temporary Basal Rate</code> to select a Manual Temp Basal.</p> <p>This brings up the <code>Temporary Basal</code> screen shown on the left of the graphic below. </p> <ul> <li>You can select any basal rate from 0 U/hr to your maximum basal rate set in Delivery Limits</li> <li>You can choose any duration up to 12 hours in half-hour increments</li> <li>Once you select rate and duration and tap <code>Set Temporary Basal</code>, Loop goes into Open Loop mode and the pod is commanded to that rate and duration. </li> </ul> <p>In other words, you can leave your phone behind and the selected basal rate continues for the selected basal duration. There will be no automated adjustments of delivery for the temp basal duration.</p> <p></p>"},{"location":"loop-3/omnipod/#during-manual-temp-basal","title":"During Manual Temp Basal","text":"<p>This Pod Only</p> <p>The manual temp basal command from Loop tells the pod to initiate a temp basal for the designated rate and duration.</p> <ul> <li>The pod itself takes care of the temp basal with no further interaction with Loop</li> <li>Loop will no longer issue commands to the pod without manual intervention from the user until the expected duration ends or user selects <code>Cancel Manual Basal</code></li> <li>Loop continues to request and receive status reports from the pod while the pod is within communication range</li> </ul> <p>Deactivating this pod and pairing a new one interrupts the temp basal.</p> <p>If you still need that basal rate, you must initiate it on the new pod.</p> <p>Once the manual temp basal command is sent to the pod, Loop changes to Open Loop mode and updates displays as shown in the graphic above</p> <ul> <li>Pod Status screen:<ul> <li>The Basal Report updates with the new rate and label indicates <code>Insulin Delivery</code></li> <li>The row label changes to <code>Cancel Manual Basal</code> and reports the time remaining until the temp basal expires</li> </ul> </li> <li>Main screen (refer to red rectangle highlights):<ul> <li>The HUD Loop Status Icon changes to an <code>Open Loop</code> icon and the HUD Pump Status Icon indicates <code>Manual Basal</code></li> <li>The Insulin Delivery plot indicates the planned duration of the manual temp basal</li> <li>The Glucose Prediction updates using that assumed change in insulin delivery</li> </ul> </li> </ul> <p>So long as you were in Closed Loop before requesting the Temp Basal, Loop returns to Closed Loop automatically when the duration ends or you cancel the temporary basal.</p> <p>Automatic Resumption of Scheduled Basal</p> <p>The phone does not need to be in contact with the pod for insulin delivery to return to scheduled basal at the end of the selected duration. That duration is commanded along with the temporary rate. Once the pod accepts that command, and you'll get an error message if it does not, the pod will resume scheduled basal rate without further commanding if there is insulin in the reservoir and a pod fault does not occur.</p> <p>For situations where you need a modification of your insulin needs that is not dependent on a particular pod, review the information on the Overrides page.</p>"},{"location":"loop-3/omnipod/#devices","title":"Devices","text":"<p>For Omnipod, there is a Devices section used to access the RileyLink status and commands screen.</p>"},{"location":"loop-3/omnipod/#pod-details","title":"Pod Details","text":"<p>The Pod Details table, shown in the graphic below, reports:</p> <ul> <li>Time at which pod was Activated</li> <li>Time at which pod will Expire</li> <li>Access to Device Details</li> </ul> <p></p> <p>Time Drift</p> <p>The pod will expire when it thinks it has been 80 hours. The pod clock may drift a few seconds with respect to phone time during the pod life. The Expiration time gets updated when the pod reports how long it thinks it has been since it was activated.</p>"},{"location":"loop-3/omnipod/#device-details","title":"Device Details","text":"<p>Some additional details from the most recent pod status response message are displayed if you tap the Device Details row, as shown in the graphic below. Most people will not need to view this.</p> <p>The graphic shows an example for Omnipod on the left, Omnipod DASH (TWI BOARD) in the middle and Omnipod DASH (NXP BLE) on the right. Do not worry about the different board styles (Device Name) for DASH. The developers did that for you. If you are asking for help from a mentor - they may request this information.</p> <p></p>"},{"location":"loop-3/omnipod/#replace-pod","title":"Replace Pod","text":"<p>When you tap on the <code>Replace Pod</code> row, the <code>Deactivate Pod</code> screen, shown below, is displayed. </p> <ul> <li>If you tap <code>Deactivate Pod</code> on this screen, insulin delivery stops for this pod and cannot be resumed</li> <li>If you have changed your mind, tap Back or Cancel to continue using the pod</li> </ul> <p></p>"},{"location":"loop-3/omnipod/#configuration","title":"Configuration","text":""},{"location":"loop-3/omnipod/#notification-settings","title":"Notification Settings","text":"<p>When you tap on the <code>Notifcation Settings</code> row, the graphic below is displayed. The notifications are a combination of beeps on the pod with associated modal alerts on the phone app that must be acknowledged to prevent future beeps.</p> <ul> <li>Expiration Reminder Default: changes the reminder time for any future pod (not the current one)</li> <li>Scheduled Reminder: affects the reminder for the current pod (not future pods)<ul> <li>If no pod is connected, you will not see the Scheduled Reminder section</li> </ul> </li> <li>Low Reservoir Reminder: changes the reminder level for the current pod and all future pods<ul> <li>If no pod is connected, the app will not allow you to modify this setting</li> <li>Change it after the next pod is paired</li> </ul> </li> <li>Critical Alerts: Information row about which alerts can be silenced by phone settings</li> </ul> <p></p>"},{"location":"loop-3/omnipod/#confidence-reminders","title":"Confidence Reminders","text":"<p>When you tap on the <code>Confidence Reminder</code> row, the graphic below is displayed.  You can choose from three levels of audible responses that Loop requests from the pod:</p> <ul> <li>Disabled: no audible pod alerts to acknowledge commands</li> <li>Enabled: each manual command provides an audible sound to acknowledge it:<ul> <li>For manual dosage change, the pod beeps at both the beginning and end of the manual command.</li> <li>For automated dosage change, the pod does not beep.</li> </ul> </li> <li>Extended: Automated dosage change beeps, similar to the manual commands when set to <code>Enabled</code></li> </ul> <p></p>"},{"location":"loop-3/omnipod/#insulin-type","title":"Insulin Type","text":"<p>You selected insulin type when connecting to this pump.</p> <p>Tap on this row if you switch to a different type of insulin.</p> <ul> <li>The model used by Loop for all the rapid insulin brands are the same, but it's a good idea to record if you change brands - some people notice differences</li> <li>If you switch between rapid and ultra-rapid insulin, you need to let Loop know so it will use the appropriate model</li> </ul>"},{"location":"loop-3/omnipod/#pump-time","title":"Pump Time","text":"<p>Click on Time Zone to understand how Loop treats \"pump\" time for pods.</p> <p>When the Pump time zone matches the phone time zone, the Pump Time is displayed with black font. </p> <p>When the phone time zone and pump time zone do not match, there is a clock icon on the main screen in the Pump Status Icon of the HUD.</p> <ul> <li>Tap on the Pump Status Icon in the HUD (top red rectangle in graphic below)</li> <li>Information about Time Change is provided on the Omnipod screen</li> <li>The Pump Time displays the clock icon and yellow font<ul> <li>The <code>Sync to Current Time</code> row appears</li> <li>Tap on the <code>Sync to Current Time</code> row to choose whether to make Pump Time match Phone Time or not (bottom red rectangle in graphic below)</li> </ul> </li> </ul> <p></p>"},{"location":"loop-3/omnipod/#other-time-changes","title":"Other Time Changes","text":"<p>What about other time changes?  Suppose the iOS -&gt; General -&gt; Time &amp; Date is modified to manually change the time, but the time zone is not adjusted. (Sometimes this is done to defeat limits on games. Do Not do this on a Looping phone.  If you have an \"old\" glucose reading in the \"future\" - Loop will not predict correctly which may have dangerous consequences.) There will not be an obvious display in the HUD or Omnipod screen (which keys off time zone) but you will get regular warnings that phone does not have automatic time set.</p> <p>Loop 3 will display this warning modal screen if it detects a problem with the Phone time. It leaves it up the user to decide what action should be taken. To make this warning stop, go to iOS -&gt; General -&gt; Time &amp; Date and enable Set Automatically. </p> <p></p>"},{"location":"loop-3/omnipod/#previous-pod-information","title":"Previous Pod Information","text":"<p>When you tap on the <code>Previous Pod Information</code> row, a graphic similar to those shown below is displayed. This provides summary information about the pod before the one currently in use. </p> <p>If the previous pod had a fault and you choose to report it to Insulet, this screen reports the PDM reference code that Insulet uses in their tracking system.</p> <p></p> <p>Do Not Call Insulet about -049 (0x31) Faults</p> <p>If you should happen to get a fault where the last 3 digits of the PDM ref code are \"-049\" (the Hex Designation is fault code 0x31), do not report this to Insulet and do not ask for a replacement. This means Loop did not ensure the pod was in the correct state to accept a command. In other words, it was a bug in the Loop code. </p> <p>We believe the code has been updated to prevent these faults. There was a brief period during development in which at least one of these happened - this was fixed July 3, 2022. If this happens to you, report it on zulipchat for the developers, save a Loop Report and rebuild if you have an older version of the development code.</p> <p>With Loop 3, do not leave the screen open and unlocked for long periods of time without first reading Is there an increase in pod failures on Loop?</p>"},{"location":"loop-3/omnipod/#pod-error-messages","title":"Pod Error Messages","text":"<p>This section presents some of the error message screens you may see specific to pods.</p>"},{"location":"loop-3/omnipod/#pod-faults","title":"Pod Faults","text":"<p>You are likely to hear a pod fault before Loop notices. If your phone is locked, Loop only checks status every 5 minutes for Omnipod or 3 minutes for Omnipod DASH.</p> <p>Unlock your phone, open Loop, navigate to the Pod Status screen and tap on Deactivate Pod to stop the noise. The pod fault - even if it does not show up in the HUD or the Pod Status screen, will be picked up by the process of hitting Deactivate Pod. You can then view the Fault information in the Previous Pod Information screen.</p>"},{"location":"loop-3/onboarding/","title":"Onboarding","text":""},{"location":"loop-3/onboarding/#onboarding","title":"Onboarding","text":"<p>As soon as your app builds on your phone, you are guided through the onboarding (set up) process. You will see information screens for each Therapy Setting and must acknowledge each screen. You can review those informational screens later by clicking the Therapy Settings screen after a pump has been added.</p>"},{"location":"loop-3/onboarding/#entering-and-editing-values","title":"Entering and Editing Values","text":"<p>This section explains how to enter and edit values with Loop 3.</p> <ul> <li>For more information on a specific therapy setting, tap on the information icon on the screen or review the detailed Therapy Settings page in LoopDocs</li> <li>Some screens only have one value for a given quantity<ul> <li>In that case, you can tap on and edit that value</li> <li>If you tap on the value and the <code>Confirm Setting</code> or <code>Save</code> button is inactive, move the picker value to make the button active,</li> </ul> </li> <li>Some screens allow different values for different times of day<ul> <li>Scheduled entries must start at midnight and at least one entry is required</li> <li>During onboarding, new loopers must tap the + sign to get the initial midnight time slot</li> <li>When one or more entries are present, tap the + sign to add an entry<ul> <li>Choose any time-slot without an entry</li> <li>Enter desired value</li> <li>Tap Add to include this entry in your schedule</li> </ul> </li> <li>Tap on a time-slot with an entry to edit it<ul> <li>You can change the time within the range of half hour after the slot immediately before and half hour before the slot after the slot under edit</li> <li>You can edit the value to any allowed value</li> </ul> </li> <li>To delete one or more entries, tap on Edit<ul> <li>Then tap the red icon to the left of the time-slot you want to delete and select delete</li> <li>Continue until done, then tap Done</li> </ul> </li> </ul> </li> </ul>"},{"location":"loop-3/onboarding/#glucose-units","title":"Glucose Units","text":"<p>First time connecting a glucose monitoring device to your phone's Apple Health app?  If so, the units on the phone might not be in the units you want, i.e., mg/dL or mmol/L. Loop uses the units in Apple Health.</p> <ul> <li>If the Apple Health units are mg/dL and you try to enter therapy settings suitable for mmol/L, or vice versa, the guardrails in Loop will prevent your entries</li> <li>If this happens:<ul> <li>Quit onboarding</li> <li>Click on the link FAQs: How Do I Change Glucose Units?</li> <li>Start the Loop app again and Onboarding will restart</li> </ul> </li> </ul>"},{"location":"loop-3/onboarding/#onboarding-steps","title":"Onboarding Steps","text":"<p>Each onboarding step is presented in order on this page. Please follow this document while entering values into your app for the first time.</p> <p>Settings Help</p> <p>Please stay in Open Loop until you verify that your settings (basal rates, insulin sensitivity, carb ratio, etc) are properly adjusted to work with the Loop algorithm. You may need time to evaluate and perhaps identify settings to adjust.</p> <p>If you need help with your settings adjustment, you may find useful tips in the companion website, LoopTips at this link: LoopTips: Settings tab.</p>"},{"location":"loop-3/onboarding/#welcome-to-loop","title":"Welcome to Loop","text":"<p>The first screen you will see is the Welcome to Loop screen shown in the graphic below. Tap on <code>Let's Go</code> to continue.</p> <p></p>"},{"location":"loop-3/onboarding/#apple-health-permissions","title":"Apple Health Permissions","text":"<p>Next, you need to give Loop permission to read and write to Apple Health. In the graphic below, from left to right, tap on the buttons highlighted with red boxes to configure permissions:</p> <ul> <li>Tap on the <code>Share with Apple Heath</code> button</li> <li>Tap on the <code>Turn On All</code> button in the middle</li> <li>Tap on the <code>Allow</code> button at upper right</li> </ul> <p>You need to enable Health Permissions for Loop to work.</p> <p></p> <p>You can review the permissions screen later. FAQS: How Do I Modify Apple HealthKit Permissions.</p>"},{"location":"loop-3/onboarding/#usage-data-sharing","title":"Usage Data Sharing","text":"<p>Language?</p> <p>If the instructions on this screen are not your preferred language, make sure you built the released code.</p> <p>Next, you will be asked your preference for Usage Data Sharing, with the default automatically set to <code>Share Version Only</code> as shown in the graphic below:</p> <p></p> <p>If you choose to share usage data, it is collected anonymously. The choices are:</p> <ul> <li>Do not share any usage data</li> <li>Share the Loop version number, phone type and iOS version number</li> <li>Additionally share usage data in terms of events only - health data such as values for glucose, insulin and carbs is not collected</li> </ul>"},{"location":"loop-3/onboarding/#share-usage-data","title":"Share Usage Data","text":"<p>If you select Share Usage Data you may wonder types of information is available to the Loop Developers.</p> <ul> <li>Statistics on loop failures can show which devices are causing more issues and which issues are more widespread</li> <li>Pod failures show whether particular versions of Loop affect the rate of failure, which helps determine fixes</li> <li>Learning how often particular features, like overrides, are used helps with future user interface design and improvements</li> <li>Language and location information helps understand the user base so <code>localization</code> (language translations) can be prioritized</li> <li>Version information helps quantify risk when a bug is found in a particular version of Loop, giving an indication of how many people may be affected</li> </ul> <p>The Loop Developers are the only ones with access to this data.</p>"},{"location":"loop-3/onboarding/#connect-loop-to-nightscout","title":"Connect Loop to Nightscout","text":"<p>The next screen, shown on the left of the graphic below, enables the user to both connect Loop to Nightscout and to download existing Loop settings from Nightscout.</p> <p>Nightscout</p> <ul> <li>Nightscout is not required for Loop</li> <li>It can be added later</li> </ul> <p>Loop 3 with Nightscout Requires API_SECRET</p> <ul> <li>Even if you used Nightscout with Loop 2, you will neeed to add it again and you must include your API_SECRET</li> </ul> <ul> <li> <p>If you have do not have a Nightscout site, or choose not to use it, select <code>Setup Loop without Nightscout</code> and skip ahead to Therapy Settings (Onboarding)</p> </li> <li> <p>If you have a Nightscout site, select <code>Use Nightscout with Loop</code> to connect Loop to your site and download your profile (Therapy Settings) from Nightscout for review.</p> </li> <li> <p>If you were using a Nightscout site with a prior version of Loop, you need to type it in again.</p> </li> </ul> <p></p> <p>If you select <code>Use Nightscout with Loop</code>:</p> <ul> <li>The right side of the graphic above shows the screen used to enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET.</li> <li>Once those credentials are accepted, choose whether you want to import your settings from your Nightscout profile (including any overrides previously saved).</li> <li>Every Therapy Setting downloaded from Nightscout is presented for review.</li> </ul>"},{"location":"loop-3/onboarding/#therapy-settings-onboarding","title":"Therapy Settings (Onboarding)","text":"<p>The next onboarding screens take you through the therapy settings one at a time.</p> <p>The therapy settings are the heart of how Loop makes predictions. If your settings are not close, the predictions will not be correct.</p> <ul> <li>Therapy Settings<ul> <li>An informational graphic is shown before you are asked to enter or confirm each therapy setting</li> <li>This Onboarding Page provides a brief summary of each therapy setting.<ul> <li>Each setting section on this page has a link to a more detailed description of that setting on the Therapy Settings page.</li> <li>If you follow a link, click on your browser back button to return to your place on this Onboarding page</li> </ul> </li> <li>While onboarding, you will see, in order:<ul> <li>Glucose Safety Limit</li> <li>Correction Range</li> <li>Pre-Meal Range</li> <li>Basal Rates</li> <li>Delivery Limits<ul> <li>Maximum Basal Rate</li> <li>Maximum Bolus</li> </ul> </li> <li>Carb Ratios</li> <li>Insulin Sensitivites</li> </ul> </li> </ul> </li> </ul>"},{"location":"loop-3/onboarding/#guardrails-while-onboarding","title":"Guardrails While Onboarding","text":"<p>Warning - Outside Typical?</p> <p>The Therapy Settings have \"guardrails\" to warn you if your settings are unusual.</p> <ul> <li>Some indications are based on surveys of experienced Loopers</li> <li>Some indications are for safety</li> <li>It's fine to put Glucose Safety or Correction Ranges higher than \"is typical\"</li> <li>It's fine to put Delivery Limits lower than \"is typical\"</li> </ul> <p>Take the yellow (and red) indications with a grain of salt. You will get an extra modal screen that you must acknowledge. Simply confirm your choice and keep going.</p> <ul> <li>It's OK to ignore warnings when being conservative</li> <li>Experienced loopers may choose to ignore warnings to be more aggressive</li> </ul> <p>A red limit cannot be exceeded without modifying the code itself. But values that show up as red can be saved - they are valid therapy selections.</p> <p>mmol/L</p> <p>People using mmol/L should avoid the red (the min or max end points) glucose values for their settings. They sometimes cause a crash.</p> <p>The Guardrails for Settings are summarized on the Therapy Settings page.</p>"},{"location":"loop-3/onboarding/#glucose-safety-limit","title":"Glucose Safety Limit","text":"<p>If Loop predicts that your glucose will go below the Glucose Safety Limit at any time in the next 3 hours and Loop is in Closed Loop, it will set a temporary basal rate of 0 U/hr in an attempt to prevent that future low.</p> <p>If you ask Loop for a bolus recommendation, and loop predicts your glucose will go below the Glucose Safety Limit at any time in the next 3 hours, no bolus will be recommended.</p> <p>The Glucose Safety Limit can never be higher than the lowest of these related settings: Correction Range and Pre-Meal Range.</p>"},{"location":"loop-3/onboarding/#correction-range","title":"Correction Range","text":"<p>Loop uses the Correction Range as the goal when it recommends a bolus and makes automated adjustments to insulin dosing.</p> <p>Correction Range vs Time in Range</p> <p>For example, you may choose a correction range of 100-110 mg/dL (5.6-6.1 mmol/L) for Loop, but you may monitor your \"success\" or Time in Range using 70-180 mg/dL (3.9-10 mmol/L).</p>"},{"location":"loop-3/onboarding/#manual-vs-automated-dosing","title":"Manual vs Automated Dosing","text":"<p>Loop estimates future glucose over the next 6 hours (DIA) and, when in closed loop, adjusts insulin dosing. Loop uses or recommends the smallest amount of insulin that will bring you to your target (Correction Range midpoint) over the whole forecast.</p> <p>If you ask Loop for a manual Bolus recommendation while your current glucose is below the bottom of the correction range and above the glucose safety limit, Loop will recommend a value that should keep your glucose above the safety limit.</p> <ul> <li>This is only if you manually request a bolus recommendation.</li> <li>Loop will not automatically provide extra insulin, via high temp basal or automatic bolus, until your current glucose is higher than the bottom of your correction range.</li> </ul>"},{"location":"loop-3/onboarding/#pre-meal-range","title":"Pre-Meal Range","text":"<p>The Pre-Meal Range, which is optional, gives you a small amount of insulin before a meal to help control post-meal glucose spikes. The Pre-Meal icon is inactive if you choose not to enter a range.</p> <p>Example</p> <p>If your normal range is 100-110 mg/dL (5.6-6.1 mmol/L) and pre-meal range is 80-80 mg/d L (4.4 mmol/L), Loop will give you extra insulin to move you towards the lower range number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the pre-meal icon in the toolbar, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first.</p>"},{"location":"loop-3/onboarding/#basal-rates","title":"Basal Rates","text":"<p>You must provide a Basal Rate schedule and the schedule must start at midnight. Loop does not provide the option for having more than one profile saved that you can switch between.</p> <p>If you onboard basal rates before a pump is added, you are limited to increments of 0.05 U/hr for basal rates and 0.00 U/hr is not allowed. Enter values close to what you actually use because the values determine your maximum basal rate in the Delivery Limits.</p> <p>Once a pump is added, the basal increments will match those on your pump. The onboarding basal rates will be saved to your added pump. Return to Therapy Settings to adjust the Basal rates to your pump increments.</p>"},{"location":"loop-3/onboarding/#medtronic-pump-users","title":"Medtronic Pump Users","text":"<p>If you will be connecting a Medtronic pump after onboarding:</p> <ul> <li>The values entered here will overwrite whatever is in your Medtronic pump when you first connect it</li> <li>For those who build Loop 3 over an existing Loop app with a Medtronic pump attached - you will just be confirming values you used previously</li> <li>If you have values in a Loopable Medtronic pump that you plan to attach after onboarding - please record those values if they are important to you</li> </ul>"},{"location":"loop-3/onboarding/#delivery-limits","title":"Delivery Limits","text":"<p>The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits.</p> <p>The Maximum Basal Rate the app allows you to choose will be limited based on the basal rate schedule you just entered as well as pump limits, so make sure you put in sensible values. (There is a back button if you need it.)</p>"},{"location":"loop-3/onboarding/#medtronic-pump-users_1","title":"Medtronic Pump Users","text":"<p>If you will be connecting a Medtronic pump after onboarding:</p> <ul> <li>The values entered here will overwrite whatever is in your Medtronic pump when you first connect it</li> <li>Make sure that the Delivery Limit values in the Medtronic pump are equal to or greater than the values you enter while onboarding or you will not be allowed to connect to the pump.</li> </ul>"},{"location":"loop-3/onboarding/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>Maximum Basal Rate will cap the the maximum temporary basal rate that Loop issues to meet your correction range when you are in Closed Loop with a Dosing Strategy of Temp Basal Only.</p> <p>For safety, new loopers should start with max basal set 2-3 times their highest scheduled basal rate. If you choose 2 times your highest scheduled basal, you may get a message informing you this is \"lower than typical.\" Ignore this to put safety first as a new looper.</p> <p>Experienced loopers typically set their maximum basal rate around 3-4 times their highest scheduled basal rate. Loop 3 app will not allow you to exceed 6.4 times your highest scheduled rate.</p>"},{"location":"loop-3/onboarding/#maximum-bolus","title":"Maximum Bolus","text":"<p>Maximum Bolus is the highest bolus amount Loop can recommend at one time to cover carbs or bring down high glucose.</p> <p>For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U.</p>"},{"location":"loop-3/onboarding/#carb-ratios","title":"Carb Ratios","text":"<p>Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin.</p> <ul> <li>At least one carb ratio (CR) must be entered</li> <li>A daily schedule with varying CR can be entered</li> </ul>"},{"location":"loop-3/onboarding/#insulin-sensitivities","title":"Insulin Sensitivities","text":"<p>Your Insulin Sensitivity Factor is the drop in glucose expected from one unit of insulin over the entire duration of insulin activity. It may be a different value than what you used as the Correction Factor with shots or manual pumping. Loop uses your ISF every 5 minutes when calculating predicted glucose levels.</p> <ul> <li>At least one insulin sensitivity factor (ISF) must be entered</li> <li>A daily schedule with varying ISF can be entered</li> </ul> <p>Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF.</p> <p>Incorrectly set ISF is a common cause of roller coaster glucoses for new Loop users. You may need to raise (increase) your ISF value/number to help smooth a roller coaster glucose trend. You can read about that topic more over in LoopTips here.</p>"},{"location":"loop-3/onboarding/#therapy-settings-review","title":"Therapy Settings Review","text":"<p>Once these are all entered, the Therapy Settings screen is shown for your review. You must scroll down to see all settings and reveal the Save Settings button.  Only the top and bottom portions are shown, the other settings were not captured for this graphic.</p> <p></p> <p> </p>"},{"location":"loop-3/onboarding/#notifications-and-bluetooth","title":"Notifications and Bluetooth","text":"<p>Once you save settings, Loop asks to send notifications and use Bluetooth. You must allow both for Loop to work properly.</p> <ul> <li> <p>Notifications are necessary for safety reasons while Looping.</p> </li> <li> <p>Bluetooth lets Loop get data from your CGM and talk to your Pump.</p> </li> </ul> <p></p> <p> </p>"},{"location":"loop-3/onboarding/#cgm-and-pump","title":"CGM and Pump","text":"<p>For new Loopers, it is now time to add a CGM and a pump.  Follow these links for instructions.</p> <ul> <li>Add a CGM</li> <li>Add a Pump</li> </ul> <p>Medtronic CGM</p> <p>If you plan to use a Medtronic Enlite sensor for your CGM, you must first add that pump to Loop before the sensor will be shown as an option.</p> <p>If you built Loop 3 over an existing app, your CGM and pump selections should have carried over.</p>"},{"location":"loop-3/onboarding/#experienced-loopers","title":"Experienced Loopers","text":"<p>Insulin Type</p> <p>Insulin Type is in Pump Settings (not therapy settings) and will NOT be imported.</p> <p>After you finish onboarding, you must select Insulin Type on your pump settings screen. Without an insulin type, closed loop might not work or a different insulin type might be selected.</p> <p>The first time you build Loop 3 on a device, you will need to go through the onboarding process too.</p> <ul> <li> <p>If you build Loop 3 over Loop 2.2.x, the onboarding remembers the settings, previously saved overrides and your current pod or pump information is maintained. (Yes, you can build Loop 3 and keep using the same pod.)</p> </li> <li> <p>If you build Loop 3 onto a device without an existing Loop app and you have a Nightscout site, you can enter your Nightscout URL (remember to use https: with the \"s\") and API_SECRET and it will ask if you want to import your settings from your Nightscout profile. This includes all the overrides you have previously saved.</p> </li> <li> <p>If you are building on a device that does not have an existing Loop app and you choose not to use Nightscout, then follow the new Looper Onboarding Steps.</p> </li> </ul> <p>You will be presented with an information screen describing the setting (with a continue button) followed by your current settings (if available), which you must confirm to keep - or can modify and then confirm to change. Depending on the device you are using, you may need to scroll down to see the Continue or Save buttons for each setting.</p> <p>What is in my Nightscout Profile</p> <p>To check what is in your Nightscout profile that Loop would use as part of onboarding, follow these instructions.</p> <p>Note: you will get a json file - look that up using your favorite internet search method.</p> <ol> <li>Open your Nightscout URL</li> <li>Click in the URL address and append this text \"/api/v1/profile.json\"</li> <li>You can download the file and examine it if you are interested</li> </ol>"},{"location":"loop-3/onboarding/#check-imported-settings","title":"Check Imported Settings","text":"<p>WARNING</p> <p>The new onboarding forces you to check all your imported Therapy Settings (Onboarding Summary) but there may be other settings you need to check as well.</p> <ul> <li>Dosing Strategy: may be at the default value of <code>Temp Basal Only</code>, even if you were using <code>Automatic Bolus</code> before</li> <li>Overrides: verify these are populated as expected</li> <li>Pumps that use a RileyLink: confirm the device is selected and active in the Pump settings screen</li> <li>If you use Nightscout, make sure the site is getting Loop updates</li> </ul> <p>HIGHLIGHTING THIS ONE - A LOT OF PEOPLE MISSED THIS:</p> <ul> <li>Insulin Type: ensure the correct insulin type is selected</li> </ul>"},{"location":"loop-3/onboarding/#carb-absorption-time-update","title":"Carb Absorption Time Update","text":"<p>If you used earlier versions of Loop, please be aware that absorption times have changed.</p> <p>Loop 3 Carb Absorption Times</p> <p>Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details.</p> <ul> <li>Loop 3 uses absorption times of 30 minute, 3 hours and 5 hours for the Candy, Taco, Pizza icons<ul> <li>Loop 2.2.x used 2 hours, 3 hours and 4 hours</li> </ul> </li> <li>The 30 minute (candy) time is for rapid acting carbs only</li> </ul> <p>If you selected the candy icon for a complex meal, you told Loop to expect your glucose to rise rapidly. When that rapid rise does not materialize, you may find Loop predicts an unexpectedly low glucose because the algorithm assumes something must be affecting your glucose downward in a strong way.</p> <p>If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction.</p>"},{"location":"loop-3/onboarding/#carb-data-source","title":"Carb Data Source","text":"<p>Loop 3 does not read non-Loop carbohydrate entries from Apple Health, as previous versions did. It still writes to Apple Health. Some experienced loopers want to modify the code to enable Loop to read carbohydrate records from Apple Health with the full understanding of how that works. The instructions for this code customization option, using a flag set in the LoopConfigOverride.xcconfig file, see the Customize: Build-Time Features section.</p> <p>Users who build Loop 3 over Loop 2.2.x, may find a permission switch to give Loop permission to read carb data from health, but without making the customization mentioned above, changing permission does not change the behavior of Loop.</p>"},{"location":"loop-3/services/","title":"Optional: Services","text":"<p>## Loop Services</p> <p>Near the bottom of your Loop settings screen is a section called \"Services\".</p> <p>Sevices are Optional</p> <ul> <li>Loop will work whether you use these or not.</li> <li>Nightscout is highly recommended by experienced Loopers but can be added later - you don't need it to get started.</li> <li>If you are running Loop 2.2.x, see Loop 2 Services</li> </ul> <p>The services are added by tapping on the + sign and choosing the service from the list. Services are shown alphabetically. The most common services are Nightscout and Tidepool.</p> <p></p>"},{"location":"loop-3/services/#nightscout","title":"Nightscout","text":"<p>There is a whole section in LoopDocs about Nightscout. Please follow this link to the Using Nightscout with Loop section of LoopDocs. That also has the links you might need to the official Nightscout Documentation (different website).</p> <p>If you have an existing Nightscout site, it's still a good idea to review that section, but here's the quick summary of how to add your Site URL and API_SECRET to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API_SECRET, it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites).</p> <p>The two most common errors in filling out this section are:</p> <ol> <li>Failure to use <code>https://</code>  in the site URL.  If you use <code>http://</code> (see how that doesn't have the \"s\" at the end?), you will get an error message about an App Transport Security policy.</li> <li>Having a trailing slash on the end of the URL (or an embedded space). If you copy and paste from a web browser, make sure to delete the trailing slash on the URL entry.</li> </ol> <p>More Tips about Nightscout</p> <ul> <li>One family had an app configured to block some websites for their child's phone and accidentally blocked their Nightscout URL - took them a while to figure out that mistake.</li> </ul>"},{"location":"loop-3/services/#tidepool","title":"Tidepool","text":"<p>With Loop 3.2.x and newer versions, data can be directly uploaded from Loop to Tidepool.</p> <p>User Beware</p> <p>Don't use the Loop Tidepool uploader yet unless you want to help the developers work through some known issues. The Tidepool Mobile app still works to upload some of your Loop data from Health.</p> <ul> <li>There is a new authentication framework in Tidepool<ul> <li>Loop developers are working on handling this new authentication protocol</li> </ul> </li> <li>One other problem is that data uploaded with the Tidepool Mobile uploader from Apple Health shows up as duplicate data<ul> <li>Even if you turn off access of the Tidepool Mobile uploader to Apple Health, there will still be 7-days of overlap with Loop that will display as duplicated data (think 2x carbs, insulin etc in your Tidepool Web display) when you enable Loop Tidepool service as the uploader</li> </ul> </li> </ul> <p>Please refer to the LoopTips: Data: Tidepool page for more information about Tidepool. The Tidepool display browser is undergoing some updates; the information on these pages will be updated after changes happen.</p> <p>The Tidepool Mobile app serves 2 purposes:</p> <ol> <li>Allow notes to be recorded with associated glucose, carbs and insulin record for a snap shot in time</li> <li>Upload Loop data stored in Health to the Tidepool database for display in their browser tool; when the Connect to Health feature is enabled</li> </ol> <p>With the new Loop Service to upload to Tidepool, additional information that is not stored in Health can be made available to Tidepool. However, this is a work in progress.</p> <p>At the current time:</p> <ul> <li>If you have Tidepool Mobile installed on your phone, with the Connect to Health feature enabled, while also using the Tidepool Service in Loop, all of your carb and insulin records will be doubled on the Tidepool Web browser display<ul> <li>In other words, your data is uploaded by the Tidepool Mobile app and by the Loop app and duplicates are not filtered (at the current time)</li> </ul> </li> <li>Short Term: There is a filter button at the bottom right of the browser display where you turn off the Loop portion for days when you have both Tidepool Mobile uploader and Loop uploader turned on</li> </ul> <p>When you add the Tidepool Service to Loop, be sure to disable Tidepool Mobile ability to read from Apple Health.</p> <p></p> <ul> <li>Warning: Even when you turn off the access to Health on the Tidepool Mobile app on the day that you turn on Loop Tidepool service, you will still get 7 days of overlap because Loop stores 7 days of data.</li> </ul> <p>You can still use the note taking feature with Tidepool Mobile when Health is not connected, although you must have internet connectivity for this to work.</p> <p>Tidepool Support is available to help troubleshoot issues or answer questions about using Tidepool. Contact them via email at support@tidepool.org.</p>"},{"location":"loop-3/services/#loggly","title":"Loggly","text":"<p>Loggly is a free logging service. If you sign up for an account, you'll need to go under Source Setup and then Customer Tokens. Copy and paste your customer token into your Loop App settings for Loggly.</p> <p></p>"},{"location":"loop-3/services/#amplitude","title":"Amplitude","text":"<p>Amplitude is a remote event monitoring service and can be used to quickly identify errors and events with Loop. Amplitude stores the events and allows you to view those events as points in time. To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues. If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.</p> <p></p>"},{"location":"loop-3/services/#next-step-loop-displays","title":"Next Step: Loop Displays","text":"<p>Great job, almost finished! Now that you have completed your services, let's move onto understanding your Loop Displays. </p> <p>Loop displays is a valuable tool for understanding your Loop and a great page to review when troubleshooting.</p>"},{"location":"loop-3/settings/","title":"Settings","text":""},{"location":"loop-3/settings/#loop-settings-screen","title":"Loop Settings Screen","text":"<p>The Settings screen, shown in the graphic below, is reached by tapping the gear icon in the Toolbar on the Main Loop Screen.</p> <p></p> <p>Each section and row on the Settings screen is described below.</p>"},{"location":"loop-3/settings/#closed-loop","title":"Closed Loop","text":"<p>The user can select closed loop or open loop using this slider. When you first start Loop, we encourage you to leave this slider disabled and become familiar with the app using Open Loop mode.</p> <p></p> <p>As soon as Closed Loop is enabled, Loop will begin automatic adjustment of insulin dosing. Please ensure the settings you entered are appropriate for the Loop algorithm.</p> <p>No automatic (closed loop) adjustment of insulin will occur and the slider will be disabled under the following conditions.</p> <ul> <li>No Pump added</li> <li>No CGM added</li> <li>User set a Manual Temp Basal</li> </ul>"},{"location":"loop-3/settings/#recommended-insulin","title":"Recommended Insulin","text":"<p>With every loop cycle - typically every 5 minutes - Loop updates the glucose prediction using</p> <ul> <li>CGM or Fingerstick glucose value (no older than 15 minutes)</li> <li>COB from meal entries</li> <li>IOB from previous insulin delivery</li> <li>Your Therapy Settings</li> </ul> <p>Based on this prediction, Loop calculates a modification to insulin dosing to bring the user into the desired correction range. This can be a reduction in basal to raise the glucose prediction or a recommended bolus, subject to Delivery Limits, to lower the prediction. The glucose prediction is shown in the Glucose Chart along with the measured glucose values.</p> <ul> <li>When in Open Loop, no automated action is taken.</li> <li>When in Closed Loop, automated action is taken based on the selected Dosing Strategy.</li> </ul> <p>If you find this confusing, read how to Think Like a Loop on the LoopTips website.</p>"},{"location":"loop-3/settings/#dosing-strategy","title":"Dosing Strategy","text":"<p>This row gives you the ability to select Dosing Strategy. The Dosing Strategy only affects the method by which the recommended bolus - if any - is delivered. The current selection is noted underneath the Dosing Strategy label. The default (initial) value for this setting is Temp Basal Only. Tap on the arrow to the right to modify your selection.</p> <p></p> <p>Words in Graphic</p> <p>Temp Basal Only: Loop will set temporary basal rates to increase and decrease insulin delivery.</p> <p>Automatic Bolus: Loop will automatically bolus when insulin needs are above scheduled basal, and will use temporary basal rates when needed to reduce insulin delivery below scheduled basal.</p> <p>Regardless of the Dosing Strategy selected, when glucose is below target or predicted to go below target, Loop decreases basal insulin using Temporary Basal.</p> <p>Temp Basal Only: Subject to your Delivery Limits, Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB. </p> <p>Automatic Bolus: Subject to your Delivery Limits, you receive 40% of the Recommended Bolus at every loop cycle.</p>"},{"location":"loop-3/settings/#automatic-bolus","title":"Automatic Bolus","text":"<p>When you first start Loop, we encourage you to leave Dosing Strategy set to Temp Basal Only until you are sure your settings are dialed in.</p> <p>The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged.</p> <p>As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen.  Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus.</p>"},{"location":"loop-3/settings/#configuration","title":"Configuration","text":"<p>The Configuration section allows entry to the following screens:</p>"},{"location":"loop-3/settings/#therapy-settings","title":"Therapy Settings","text":"<p>There's a LoopDocs page devoted to therapy settings. Click on the link to get to that page: Therapy Settings.</p>"},{"location":"loop-3/settings/#add-pump-for-therapy-settings","title":"Add Pump for Therapy Settings","text":"<p>But I don't see Therapy Settings!</p> <p>Therapy Settings is only accessible in the Settings screen when you have a pump connected to Loop.</p> <ul> <li>Loop needs to know the parameters for the pump</li> <li>There are several options presented below</li> </ul>"},{"location":"loop-3/settings/#option-1-prep-for-pods","title":"Option 1: Prep for Pods","text":"<p>If you add an Omnipod (requires RileyLink) or Omnipod DASH up to the <code>Pair Pod</code> screen and then cancel, Loop will use the common Omnipod details to allow you to modify your Therapy Settings.</p>"},{"location":"loop-3/settings/#option-2-prep-for-medtronic","title":"Option 2: Prep for Medtronic","text":"<p>If you need to modify Therapy Settings before connecting to a Medtronic pump:</p> <ul> <li>Add the Insulin Pump Simulator<ul> <li>Tap on the Pump in settings or the HUD to bring up the control screen</li> <li>Select the type of Medtronic</li> <li>Adjust the Therapy Settings as required</li> </ul> </li> <li>Delete the Insulin Pump Simulator</li> </ul>"},{"location":"loop-3/settings/#option-3-simulate-loop","title":"Option 3: Simulate Loop","text":"<p>If you want to use Loop in parallel with your current method of dosing insulin.</p> <ul> <li>Add the Insulin Pump Simulator</li> <li>Tap on the Pump in settings or the HUD to bring up the control screen</li> <li>Choose the type of pump you wish to simulate (notice each pump has specific basal rates and ranges available)</li> <li>For best fidelity, use a real CGM (if available on the same phone) or set up the CGM to be from Dexcom Share or Nightscout</li> <li>For every meal or correction, you can echo that meal or correction with Loop using the simulated pump - watch and learn from recommendations and predictions</li> </ul>"},{"location":"loop-3/settings/#usage-data-sharing","title":"Usage Data Sharing","text":"<p>iOS 15</p> <p>If you are running an iOS 15 device, this screen is shown in German regardless of the language you choose for Loop. That is an accident that will be fixed by the next release. The English version is shown below.</p> <p>You can review and modify your preference for Usage Data Sharing as shown in the graphic below:</p> <p></p> <p>If you change the check mark, it is immediately modified. Tap on Settings in upper left to return to the main Settings screen.</p> <p>If you choose to share usage data, it is collected anonymously. The choices are:</p> <ul> <li>Do not share any usage data</li> <li>Share the Loop version number, phone type and iOS version number</li> <li>Additionally share usage data in terms of events only - health data such as values for glucose, insulin and carbs is not collected</li> </ul>"},{"location":"loop-3/settings/#pump","title":"Pump","text":"<p>The information about the pump section is detailed on several different pages. Follow the links below:</p> <ul> <li>Add or Modify Pump</li> <li>Omnipod or Omnipod DASH Status and Commands</li> <li>Medtronic Status and Commands</li> </ul>"},{"location":"loop-3/settings/#cgm-settings","title":"CGM Settings","text":"<p>The information about the CGM is found on the Add or Modify CGM page.</p>"},{"location":"loop-3/settings/#services","title":"Services","text":"<p>The Services section allows additions of other services such Nightscout, Tidepool, Loggly and Amplitude.</p> <p>Please refer to the Optional: Service page.</p>"},{"location":"loop-3/settings/#support","title":"Support","text":"<p>The Support section enables the user to provide output data (Loop Report and/or Critical Logs) about the app. This information can be very helpful to folks trying to assist with problem reports.</p> <p>The graphic below shows the screen provided when you tap on the Support row at the bottom of the Settings screen.</p> <p></p>"},{"location":"loop-3/settings/#issue-report","title":"<code>Issue Report</code>","text":"<p>Tap on the <code>Issue Report</code> row, on the graphic above, to create a Loop Report text file with a lot of useful information for the mentors or developers if they need to assist you in solving a problem. This covers 84-hours (to enable a full pod history for users of Omnipod or Omnipod DASH). When you tap that row, you'll see a message that the file is loading.  That message never goes away but the rest of the page fills in fairly quickly. After that happens, use the up arrow to see various options to save the report.</p> <p>Issue vs <code>Issue Report</code></p> <p>Be aware:</p> <ul> <li>Issue (on github) is used to report code problems</li> <li><code>Issue Report</code> is an action in Loop app to provide information you may need when you ask for help: refer to How to Find Help</li> </ul> <p>It's a good idea to use the <code>Issue Report</code> button and save it along with a screen shot if you think you will ask for help.  You can always discard these if you resolve the problem on your own.</p> <p>Pro Tip</p> <p>The Loop Reports can be saved in the Files section on your iPhone. I have a folder on my phone Files named Loop Reports.</p> <p>You can upload them to zulipchat from your phone (new feature) using the paperclip in the zulipchat app. (Don't see a paperclip - update your app.)</p>"},{"location":"loop-3/settings/#submit-bug-report","title":"Submit Bug Report","text":"<p>Tap on the <code>Submit Bug Report</code> row to bring up one of the two views shown in the graphic below.  The left view is if you do not have a github account (or the phone is not signed in to your account). The right view is if your github credentials are available.</p> <p>In either case, the first action should be to add a term or phrase to the search box (red rectangle) to see if your issue has already been reported and to read the status if it has been reported.  Please refer to the GitHub Issues section for more information.</p> <p></p> <p>Not for Build or Settings Help</p> <p>Submit Bug Report should be used when you believe there is an error in the code.</p> <ul> <li>Use How to Find Help instead for these cases:<ul> <li>Trouble building</li> <li>Trouble pairing a pod</li> <li>Trouble with red loops</li> <li>RileyLink is not working</li> <li>Trouble adjusting your settings</li> </ul> </li> </ul>"},{"location":"loop-3/settings/#export-critical-event-logs","title":"Export Critical Event Logs","text":"<p>The last row under Support creates a zip (compressed file) with detailed app information over a 7-day period. It is stored in a different format from the Loop Report and provides critical information to the developers when troubleshooting. Once the compressed file is created, you can save it and later share it with the developers if they request it.  You can always discard these if you resolve the problem on your own.</p> <p>Pro Tip</p> <p>The Critical Logs zip file can be saved in the Files section on your iPhone. I have a folder on my phone Files named Critical Logs.</p> <p>You can upload them to zulipchat from your phone (new feature) using the paperclip in the zulipchat app. (Don't see a paperclip - update your app.)</p>"},{"location":"loop-3/settings/#critical-log-format","title":"Critical Log Format","text":"<p>The critical logs use a JSON (JavaScript Object Notation) format.</p> <p>Each day (in user's local time) has the following files:</p> <ul> <li>Alerts.json</li> <li>Carbs.json</li> <li>DeviceLog.json</li> <li>Doses.json</li> <li>DosingDecisions.json</li> <li>Glucoses.json</li> <li>Settings.json</li> </ul> <p>The JSON file for each day are zipped into one file for that day and then the zip files are again zipped into a single file that you can save. The current day (up to the current time) is combined with the previous day's data.</p> <p>The time stamps within the JSON files use UTC.</p>"},{"location":"loop-3/settings/#app-profile","title":"App Profile","text":"<p>The Profile Expiration is reported at the bottom of the Settings display along with the number of days remaining before Loop stops working.</p> <p>The link for <code>How to update (LoopDocs)</code> is provided for Mac-Xcode build.</p> <p>In fine print, the exact date and time of the expiration is reported in your local time zone.</p> <p></p> <p>The Profile Expiration is different for GitHub Browser Build method. A feature request is in place (but not yet added to the code) to report the TestFlight expiration for that build method.</p>"},{"location":"loop-3/therapy-settings/","title":"Therapy Settings","text":""},{"location":"loop-3/therapy-settings/#loop-therapy-settings","title":"Loop Therapy Settings","text":"<p>During Onboarding, all of your therapy settings were entered.</p> <p>After onboarding, the Therapy Settings screen is reached by going through the Loop Settings screen after a pump has been added.</p> <p>When building Loop 3 over Loop 2.2.x, the existing values from Loop 2.2.x are kept where possible and presented to the user as the \"default\" value when moving through each screen.</p> <p>This page provides more details about each of your Therapy Settings.</p>"},{"location":"loop-3/therapy-settings/#authorization-required","title":"Authorization Required","text":"<p>All the settings configured under Therapy Settings are protected by the same authorization method (FaceID, Fingerprint or Passcode) used to enable the app to issue a manual bolus.</p>"},{"location":"loop-3/therapy-settings/#details-for-therapy-settings","title":"Details for Therapy Settings","text":"<p>Loop 3 has Guardrails for some Therapy Settings. These are grouped in the Guardrails for Settings section of this page.</p> <p>New Loopers</p> <p>New Loopers may prefer settings that show up outside the \"typical\" range.</p> <ul> <li>These show yellow font on the picker dial and you must acknowledge a warning message that the selected value is lower, higher or outside \"typical\"</li> <li>It is always fine to pick a yellow or even red value when being cautious</li> </ul> <p>For example, choosing a Correction Range that is higher than \"typical\" when starting to learn Loop is fine. Once you are comfortable with how the system works, the range can be adjusted if desired - entirely up to you in consulatation with your health care professional.</p> <p>Therapy Settings are used for automated insulin delivery when Loop is in Closed-Loop mode.</p> <ul> <li>If your Therapy Settings are not \"dialed-in\" before you enable closed loop, you may experience too much or too little automated insulin delivery</li> <li>Please spend the time to thoroughly understand the effect of each therapy setting</li> </ul>"},{"location":"loop-3/therapy-settings/#screens-displayed","title":"Screens Displayed","text":"<p>Some screens displayed on this page were acquired during Onboarding.</p> <ul> <li>When saving a Therapy Setting<ul> <li>During Onboarding, the button is labeled \"Confirm Setting\"</li> <li>Otherwise, the button is labeled \"Save\"</li> </ul> </li> </ul>"},{"location":"loop-3/therapy-settings/#glucose-safety-limit","title":"Glucose Safety Limit","text":"<p>Loop will deliver basal and recommend bolus insulin only if your glucose is predicted to be above the Glucose Safety Limit for the next three hours.</p> <p>The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8.</p> <p></p> <p>The GIF below shows two screens for Glucose Safety Limit.</p> <ul> <li>Frame 1: During onboarding, user can accept the default limit by tapping \"Confirm Setting\" or tap the row to configure the range (see Frame 2)</li> <li>Frame 2: The user adjusts the picker wheel to select desired value and then taps on the \"Confirm Setting\" or \"Save\" button</li> </ul> <p></p> <p>If you feel more comfortable with a higher limit, do not let the yellow font influence you. Once you've used Loop for a while, you can revisit this setting.</p> <p>Note</p> <p>The value you select for Glucose Safety Limit will dictate the lowest value on the glucose picker that is available for Correction Range and Pre-Meal Range. Those cannot be lower than the Glucose Safety Limit.</p> <p>Guardrails for Glucose Safety Limit</p>"},{"location":"loop-3/therapy-settings/#correction-range","title":"Correction Range","text":"<p>Your Correction Range is the glucose value (or range of values) that you want Loop to aim for in adjusting your basal insulin and helping you calculate your boluses.</p> <p>The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8.</p> <p></p> <p>The GIF below shows four screens when first adding and selecting a correction range. The red box indicates where the user taps.</p> <ul> <li>Frame 1: Tap the + sign</li> <li>Frame 2: Use the picker wheels to select desired values<ul> <li>This is the first entry so must start at midnight - additional rows can be added for other times</li> <li>When happy with the picker values, user must tap add</li> </ul> </li> <li>Frame 3: This screen is shown only if a value is outside \"typical\"</li> <li>Frame 4: Tap on the \"Confirm Setting\" or \"Save\" button to accept the values</li> </ul> <p></p> <p>Do not let the yellow font discourage you if you want to have a \"higher than typical\" range to start with. Once you've used Loop for a while, you can revisit this setting.</p> <p>Guardrails for Correction Range</p>"},{"location":"loop-3/therapy-settings/#manual-vs-automated-dosing","title":"Manual vs Automated Dosing","text":"<p>Loop estimates future glucose over the next 6 hours (DIA) and, when in closed loop, adjusts insulin dosing. Loop uses or recommends the smallest amount of insulin that will bring you to your target (Correction Range midpoint) over the whole forecast.</p> <p>If you ask Loop for a manual Bolus recommendation while your current glucose is below the bottom of the correction range and above the glucose safety limit, Loop will recommend a value that should keep your glucose above the safety limit.</p> <ul> <li>This is only if you manually request a bolus recommendation.</li> <li>Loop will not automatically provide extra insulin, via high temp basal or automatic bolus, until your current glucose is higher than the bottom of your correction range.</li> </ul>"},{"location":"loop-3/therapy-settings/#pre-meal-range","title":"Pre-Meal Range","text":"<p>Your Pre-Meal Range is used to temporarily lower your glucose target before a meal to impact post-meal glucose spikes.</p> <p>The graphic below shows the information screen presented during onboarding or when user taps the information icon, \u24d8.</p> <p></p> <p>The GIF below shows three screens from various scenarios. The red box indicates where the user taps. If the user chooses to leave Pre-Meal not set, the Pre-Meal icon in the tool bar is disabled. Some users prefer this.</p> <ul> <li>Frame 1: During onboarding, user can choose not to add a pre-meal range by tapping \"Confirm Setting\" or tap the Pre-Meal row to configure the range (see Frame 2)</li> <li>Frame 2: User adjusts the Pre-Meal range using the picker and then \"Save\"</li> <li>Frame 3: If a pre-meal range was added, user can remove it by tapping \"Delete\" and then \"Save\"</li> </ul> <p></p> <p>Note</p> <ul> <li>If you do not add an entry, the pre-meal icon on the toolbar is disabled</li> <li>If you add an entry, the pre-meal icon is activated for 1 hour or until carbs are entered or until the user cancels it</li> </ul> <p>Guardrails for Pre-Meal Range</p>"},{"location":"loop-3/therapy-settings/#basal-rates","title":"Basal Rates","text":"<p>Your Basal Rate of insulin is the number of units per hour that you want to use to cover your background insulin needs.</p> <ul> <li>Loop supports 1 to 48 rates per day</li> <li>The schedule starts at midnight and cannot contain a rate of 0 U/hr (as the only entry)</li> </ul> <p>Guardrails for Basal Rates</p>"},{"location":"loop-3/therapy-settings/#delivery-limits","title":"Delivery Limits","text":"<p>Delivery Limits are safety guardrails for your insulin delivery.</p> <ul> <li>Click on one of the limits on this screen, Maximum Basal Rate or Maximum Bolus, to display the picker wheel for that limit</li> <li>You must first move the picker off the current value before saving<ul> <li>When onboarding, you can restore the picker to the original level once it has been moved</li> <li>When adjusting settings later, one of the two limits must be changed to make the <code>Save</code> button active</li> </ul> </li> <li>You may need to put your finger on part of the screen away from the picker wheel and scroll up and down to see the other setting</li> <li>Make sure both Maximum Basal Rate and Maximum Bolus have the desired value before hitting <code>Save</code></li> </ul>"},{"location":"loop-3/therapy-settings/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>Maximum Basal Rate is the maximum automatically adjusted basal rate that Loop is allowed to enact to help reach your correction range. Some users choose a value 2, 3, or 4 times their highest scheduled basal rate. Work with your healthcare provider to choose a value that is higher than your highest scheduled basal rate, but as conservative or aggressive as is comfortable.</p> <p>If the Dosing Strategy is configured to Temp Basal Only, then the maximum basal rate can be used to limit how much extra insulin can be supplied automatically.</p> <p>Guardrails for Maximum Basal Rate</p>"},{"location":"loop-3/therapy-settings/#maximum-bolus","title":"Maximum Bolus","text":"<p>Maximum Bolus is the highest bolus amount that you will allow Loop to recommend at one time to cover carbs or bring down high glucose.</p> <p>If you manually enter a value in the Bolus screen that is greater than the Maximum Bolus setting, Loop will show a warning message and refuse to bolus that amount.</p> <p>For safety, don't set a maximum bolus limit any higher than your typical large meal bolus. Many people like to set a value less than 10 U, for example, 9 or 9.9 U, to avoid accidentally typing in a bolus of 10 instead of 1.0 U.</p> <p>If the Dosing Strategy is configured to Automatic Bolus, then the maximum bolus that is automatically supplied is 40% of the maximum bolus, but this can be applied at 5-minute intervals.</p> <p>Guardrails for Maximum Bolus</p>"},{"location":"loop-3/therapy-settings/#carb-ratios","title":"Carb Ratios","text":"<p>Your Carb Ratio is the number of grams of carbohydrates covered by one unit of insulin.</p> <ul> <li>At least one carb ratio must be entered<ul> <li>Use the + sign, picker wheels and then tap \"Add\"</li> <li>The method was described in the Correction Range section</li> </ul> </li> <li>Loop supports 1 to 48 carb ratios per day</li> </ul> <p>Guardrails for Carb Ratios</p>"},{"location":"loop-3/therapy-settings/#insulin-sensitivities","title":"Insulin Sensitivities","text":"<p>Your Insulin Sensitivities refer to the drop in glucose expected from one unit of insulin over the full duration of the insulin action time. You may have also seen the term Correction Factor or Insulin Sensitivity Factor (ISF). These are all referring to the same setting.</p> <ul> <li>At least one insulin sensitivity must be entered<ul> <li>Use the + sign, picker wheels and then tap \"Add\"</li> <li>The method was described in the Correction Range section</li> </ul> </li> <li>Loop supports 1 to 48 insulin sensitivities per day</li> </ul> <p>Guardrails for Insulin Sensitivities</p>"},{"location":"loop-3/therapy-settings/#guardrails-for-settings","title":"Guardrails for Settings","text":"<p>Loop has guardrails for Therapy Settings.</p> <ul> <li>The limits in the code are provided for reference below<ul> <li>The tables list from left to right: the lower limit, min recommended, max recommended and upper limit values for that guardrail</li> </ul> </li> <li>The limits for some settings can be altered by other therapy settings you have selected</li> </ul> <p>Experienced Loopers</p> <p>The guardrails for each therapy setting used by Loop can be modified with Code Customization.</p> <p>mmol/L</p> <p>People using mmol/L should avoid the red (the min or max end points) glucose values for their settings. They sometimes cause a crash.</p> <p>The font color in the value picker has the following meaning:</p> <ul> <li>black: value is within the range \"recommended by Loop\"</li> <li>yellow: value is outside the range \"typical\" for Loopers<ul> <li>It is fine to choose yellow values - sometimes that's a good choice for a new Looper</li> </ul> </li> <li>red: value is minimum or maximum limit of the range \"allowed by Loop\"</li> </ul> <p>Mobile Device</p> <ul> <li>On a mobile device, you may need to scroll the table left to right to see all four values</li> <li>Try landscape mode to see the entire table width without scrolling</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-glucose-safety-limit","title":"Guardrails for Glucose Safety Limit","text":"Units limit min max limit mg/dL 67 74 80 110 mmol/L 3.7 4.2 4.4 6.0 <p>Glucose Safety Limit Info</p> <p>Top value available on the picker limited by lowest of:</p> <ul> <li>code constraint</li> <li>your Correction Range</li> <li>your Pre-Meal Range</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-correction-range","title":"Guardrails for Correction Range","text":"Units limit min max limit mg/dL 87 100 115 180 mmol/L 4.8 5.6 6.3 10.0 <p>Correction Range Info</p> <p>Bottom value available on the picker limited by highest of:</p> <ul> <li>code constraint</li> <li>your Glucose Safety Limit</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-pre-meal-range","title":"Guardrails for Pre-Meal Range","text":"Units limit min max limit mg/dL n/a safety 106 130 mmol/L n/a safety 5.9 7.2 <p>Pre-Meal Range Info</p> <p>Bottom value available on the picker limited by highest of:</p> <ul> <li>code constraint</li> <li>your Glucose Safety Limit</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-basal-rates","title":"Guardrails for Basal Rates","text":"<ul> <li>Limited by your selected pump (or if no pump selected, then generic pump limits apply)<ul> <li>Generic Pump rates from 0.05 U/hr to 30 U/hr in steps of 0.05</li> </ul> </li> <li>Top value available on the picker is your Maximum Basal Rate (once that is set)</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-maximum-basal-rate","title":"Guardrails for Maximum Basal Rate","text":"<ul> <li>Top value available on the picker is 6.4 times the highest basal rate in your scheduled basal rates</li> </ul>"},{"location":"loop-3/therapy-settings/#guardrails-for-maximum-bolus","title":"Guardrails for Maximum Bolus","text":"<p>The maximum bolus is limited by your pump, but it is a good idea to limit it to the maximum you use for a common \"big\" meal. This only limits the bolus for a single dose.</p>"},{"location":"loop-3/therapy-settings/#guardrails-for-carb-ratios","title":"Guardrails for Carb Ratios","text":"<p>Remember, CR goes in the denominator when calculating insulin dose for carbs. So the min - max values in the table below correspond to stronger - weaker values for CR.</p> Units limit min max limit g/U 2.0 4.0 28.0 150.0"},{"location":"loop-3/therapy-settings/#guardrails-for-insulin-sensitivities","title":"Guardrails for Insulin Sensitivities","text":"<p>Remember, ISF goes in the denominator when calculating insulin dose for a correction. So the min - max values in the table below correspond to stronger - weaker values for ISF.</p> Units limit min max limit mg/dL/U 10 16 399 500 mmol/L/U 0.6 0.9 22.1 27.8"},{"location":"nightscout/new_user/","title":"New Nightscout","text":""},{"location":"nightscout/new_user/#why-nightscout","title":"Why Nightscout?","text":"<p>Nightscout is not required, but is recommended for Loop</p> <ul> <li>A Nightscout site provides a dashboard for remote viewing of Loop actions including the temporary basal rates Loop is setting, the current insulin on board, or a recent bolus and carb entry</li> <li>A Nightscout site provides reports for retrospective review of your settings</li> <li>You will want a Nightscout site:<ul> <li>If you are a parent of a little Loop user</li> <li>If you want to see Loop's actions anywhere other than the Looper's iPhone</li> <li>If you want to ask a mentor for help adjusting your settings</li> <li>If you want to prepare reports to evaluate your own settings</li> <li>If you want to prepare reports to hand to your doctor</li> </ul> </li> </ul>"},{"location":"nightscout/new_user/#setup-nightscout","title":"Setup Nightscout","text":"<p>Please visit Nightscout: Documentation to read about Nightscout. There are several options, mentioned in that documentation, for setting up your Nightscout site.</p> <ul> <li>You can choose one of many free (except for your time) DIY methods</li> <li>You can choose one of many DIY methods where you pay a monthly fee for data storage</li> <li>You can choose a managed site (for a monthly fee) that creates your site, keeps the software up to date and provides data storage</li> <li>Social Media sites for announcements, help and discussion:<ul> <li>CGM in the Cloud Facebook group</li> <li>Nightscout Discord Channel</li> </ul> </li> </ul> <p>Once your Nightscout site is operational and you've read the information about using your site, return to LoopDocs to follow the directions on the LoopDocs: Nightscout with Loop page.</p> <p>Comments</p> <p>Most of the free DIY methods provide sufficient storage for a single Loop user, but will require you to delete older data after a year or two of use. The one exception is the Google Cloud method which includes multiple GB of storage.</p> <p>If there are multiple Loopers in your family and you want to stay in the \"free\" tier, each will need their own site to stay under the monthly usage limitations. That means an account for each user under different email addresses for each user.</p> <p>\"Free\" sites might potentially stop being \"free\" in the future.</p> <p>One of the Nightscout as a Service providers will not allow you to put in your own Apple Push Notification variables, you must use theirs. If you have no plans to use remote commands via Nightscout, this will not affect you. If you decide to use remote commands, you may need to switch to a different service or get Loop through that same provider for an extra monthly fee.</p>"},{"location":"nightscout/new_user/#configure-nightscout-to-use-with-loop","title":"Configure Nightscout to use with Loop","text":"<p>There are a few Loop-specific variables you should configure to get the most out of your Nightscout site. Follow the instructions on the LoopDocs: Nightscout with Loop page.</p>"},{"location":"nightscout/new_user/#add-nightscout-to-loop","title":"Add Nightscout to Loop","text":"<p>Once you finish setting up your new Nightscout site, don't forget to enter your website URL and API_SECRET into your Loop settings, LoopDocs: Services - Nightscout. This way Loop will have access to your Nightscout site to upload all the wonderful data.</p>"},{"location":"nightscout/new_user/#nightscout-troubleshooting","title":"Nightscout Troubleshooting","text":"<p>If your Nightscout site is not showing CGM (and Loop, if you are Looping) data within about 10 minutes of finishing your setup, then please follow the steps on the Nightscout: Troubleshooting page.</p>"},{"location":"nightscout/ns_crossref/","title":"Nightscout Cross Ref","text":""},{"location":"nightscout/ns_crossref/#nightscout-documentation","title":"Nightscout Documentation","text":"<p>A number of pages that used to be in LoopDocs have been moved to the Nightscout documentation and are in the process of being integrated into their menu structure. To prevent duplication and inconsistency, those pages have been removed from LoopDocs.  A cross-reference to the Nightscout pages is provided below.</p> <ul> <li>Warning: As of Sep 2021, some of the pages moved from LoopDocs to Nightscout documentation are not yet in the Nightscout menu structure</li> <li>You can always use the search function of Nightscout: Documentation to find any topic</li> </ul>"},{"location":"nightscout/ns_crossref/#ifttt-integration","title":"IFTTT Integration","text":"<p>If This, Then That (IFTTT) integration is a useful Nightscout capability. By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more.</p> <ul> <li>Please see<ul> <li>Nightscout: Configurations: IFTTT Maker</li> <li>Nightscout: IFTTT</li> </ul> </li> </ul>"},{"location":"nightscout/ns_crossref/#remote-notifications","title":"Remote Notifications","text":"<p>While the Loop app sends notifications locally on the Loop user's iPhone, parents and caregivers may want those messages on their phones, too.  We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover.</p> <ul> <li>Please see<ul> <li>Nightscout: Configurations: Pushover</li> <li>Nightscout: Remote Notifications</li> </ul> </li> </ul>"},{"location":"nightscout/ns_crossref/#loop-follow","title":"Loop Follow","text":"<p>Loop Follow was created by Jon Fawcett who took ideas from multiple other apps to create a single app to assist in his caregiving role. It is popular with Loopers who like the display and notifications as well as Loop caregivers. It can work with just the Dexcom Share credentials and/or the Nightscout URL and allows for easy customization of alerts and alarms. Jon has handed over maintenance of this app to the Loop and Learn team.</p> <ul> <li>Please see<ul> <li>Loop and Learn: Loop Follow page</li> <li>Loop and Learn Facebook group</li> </ul> </li> </ul>"},{"location":"nightscout/ns_crossref/#pebble-watch","title":"Pebble Watch","text":"<p>LoopDocs had a page specifically about the Pebble Watchface called <code>SkyLoop Predict</code>, which is no longer being supported. The Nightscout Documentation provides information about many methods for displaying your Nightscout data on a variety of wearable devices.</p> <ul> <li>Please see<ul> <li>Nightscout: On Your Watch</li> </ul> </li> </ul>"},{"location":"nightscout/ns_crossref/#reports","title":"Reports","text":"<p>Nightscout offers some fantastic data-crunching report tools.</p> <ul> <li>Please see<ul> <li>Nightscout: Reports</li> </ul> </li> </ul>"},{"location":"nightscout/overview/","title":"Nightscout Overview","text":""},{"location":"nightscout/overview/#overview","title":"Overview","text":"<p>Nightscout is an excellent tool for remotely viewing Loop's actions. Nightscout can act as a stand-alone tool or be integrated with Loop. (Nightscout also integrates with other open-source hybrid closed loop systems such as OpenAPS, AndroidAPS and FreeAPS X. LoopDocs focuses on Loop.)</p> <p>When integrated with Loop, Nightscout provides monitoring of Loop activities such as viewing history of glucose, carbs, boluses, temp basals and overrides; troubleshooting Loop errors; and provides extensive reports for analyzing data trends and patterns. These reports assist when Loop Therapy Settings need to be adjusted.</p> <p>For caregivers, Nightscout enables remote monitoring and even the ability to issue remote commands through Nightscout when both Loop and Nightscout are properly configured. There is a whole page devoted to LoopDocs: Remote Commands. If you are a caregiver, this summary of remote capabilities may encourage you to look into Nightscout.</p> <p>Remote Commands</p> <ul> <li>Loop 2.2.x<ul> <li>Overrides can be enabled and disabled</li> </ul> </li> <li>Loop 3<ul> <li>Overrides can be enabled and disabled</li> <li>Carbs can be entered</li> <li>Boluses can be commanded</li> <li>LoopCaregiver app (under development, iOS only) enables the following from the caregiver's phone<ul> <li>monitor Loop</li> <li>issue remote commands for carbs, bolus and overrides</li> </ul> </li> </ul> </li> </ul> <p>Nightscout is useful for all Loopers. Adults who take care of themselves find the reports and analysis methods from the Nightscout site provide effective tools to monitor their settings and provide reports for their health care provider. It also stores Loop configurations so they can be reviewed. With Loop 3, the saved Nightscout profiles can be downloaded to a new app for quick onboarding, should you ever need to start fresh.</p> <p>Setting up a Nightscout site is described in a separate web site: Nightscout: Documentation.</p> <p>There are Nightscout apps in your iPhone App Store that allow you to view the Nightscout site after you've configured it, or you can use a web browser to view the data. The app alone is not enough - you need to follow the steps to configure your own Nightscout site and obtain your specific Nightscout URL.</p> <ul> <li>Nightscout is highly recommended for Loop users, especially those using Loop as caregivers</li> <li>Nightscout displays are often the easiest way to troubleshoot Loop settings if you are having problems and seeking input from others</li> <li>Nightscout provides reporting features for longer-term review and preparing information for your physician</li> </ul>"},{"location":"nightscout/overview/#nightscout-documentation","title":"Nightscout Documentation","text":"<p>There used to be a lot of Nightscout information found only in LoopDocs, but that was transferred and subsequently updated in Nightscout: Documentation. The information that remains in LoopDocs is Loop specific. So you may be jumping back and forth between the two sets of documents.</p> <ul> <li>If you see the Nightscout Owl logo in upper left you are in the Nightscout website</li> <li>If you see the LoopDocs green-loop logo in upper left you are in the LoopDocs website</li> <li>While in the Nightscout tab of LoopDocs, most links have a <code>Nightscout:</code> or <code>LoopDocs:</code> in the link name to let you know which website has the link of interest</li> <li>Suggestion: open the Nightscout: Documentation in a separate tab or window of your browser for easy access to both websites</li> </ul>"},{"location":"nightscout/overview/#nightscout-with-loop","title":"Nightscout with Loop","text":"<p>This page provides general discussion about the Nightscout display, as well as some Loop-specific display information. Over time, interactions between Loop and Nightscout were improved. The information on this page has been updated for Loop 3 and Nightscout version 14.2.6 (or later). Older versions may exhibit some differences in display of Loop information on the Nightscout site.</p>"},{"location":"nightscout/overview/#loop-uploads-to-nightscout","title":"Loop Uploads to Nightscout","text":"<p>Loop 3</p> <p>The Nightscout display updates when the Looper's phone is connected to the internet via WiFi or cellular service. When the uploads stop, the Loop pill becomes \"stale\" (cannot open it) after 15 minutes.</p> <p>\"Pills\" are the little information boxes. They are Nightscout: Plugins that must be enabled with configuration variables and then the display for each pill can be turned on or off within your Nightscout site.</p> <p>If upload to Nightscout is interrupted, Loop stores up to 7 days of Nightscout information in a local buffer on the phone, and will attempt to upload later when access is restored. Once access is restored, a stale Loop Pill may require 15 minutes before it will open to display additional Loop information.</p> <p>The Carb pill on the Nightscout site is populated by Loop when Loop is actively uploading to Nightscout - but it may lag the value displayed in the Loop pill by one loop cycle and it will display 0 COB within 5 to 10 minutes if upload is interrupted. In other words, if the COB pill shows 0 unexpectedly and Loop pill is active, you can believe the value shown in the Loop pill.</p>"},{"location":"nightscout/overview/#loop-2-red-loop-warning","title":"Loop 2 Red Loop Warning","text":"<p>With Loop 2.2.9 and earlier versions, when Loop has a Nightscout site added in Loop Services AND is unable to upload messages to that site, it can fill up a buffer of stored upload messages. This may lead to sluggish behavior in Loop or even Red Loops. This can happen if the Nightscout site is \"down\" or if the database is full so it is not accepting messages.</p> <p>Step 1: Remove Nightscout URL from Loop Services</p> <p>Step 2: Figure out why the Nightscout site is not accepting uploads from Loop and fix that problem.</p> <ul> <li>Nightscout: Troubleshooting</li> <li>Nightscout: Database Management</li> </ul> <p>Step 3: Add Nightscout URL to Loop Services</p> <p>More Information</p> <p>For those who want to know more:</p> <p>There is a big architectural change between Loop 2 and Loop 3 for remote data services like Nightscout.</p> <p>It used to be that data would be \u201cheld on\u201d to be uploaded, and a non functional service could cause large backlogs. The new system does not allow for this. Uploaders individually keep track of where they are in the upload stream via a lightweight \u201cquery handle\u201d, and if the data in Loop\u2019s data stores expires before they upload, then they\u2019ll just not be able to upload that data.</p> <p>The default data store for Loop 3 is 7 days.</p>"},{"location":"nightscout/overview/#nightscout-dashboard","title":"Nightscout Dashboard","text":""},{"location":"nightscout/overview/#blood-glucose","title":"Blood Glucose","text":"<p>Glucose readings from the CGM are shown in green, yellow, or red in the main Dashboard of Nightscout. (The graphic above was generated with Colors enabled in Nightscout; there are other display options.) You can adjust your high and low glucose alarm thresholds in Nightscout by modifying configuration variables. This is optional - defaults are provided if you do not set them. The alarm thresholds affect the color of the displayed CGM data points and, if enabled, determine when an audible and visible alarm sounds. The Nightscout alarm thresholds will not affect Loop performance. Loop only uses the glucose correction ranges in the Loop app settings.</p> <p>The main dashboard (upper section) for Nightscout displays the time duration you have selected (in the example above, 12 hours). The bottom of the screen shows the last 48-hours of glucose trends. You can scan backward by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days.</p>"},{"location":"nightscout/overview/#sage-cage-bage-pills","title":"SAGE, CAGE, BAGE pills","text":"<p>The SAGE, CAGE, and BAGE pills are for Sensor Age, Cannula Age, and (pump) Battery Age. These optional pills track the time since your CGM sensor, Pump site, and Pump battery were last changed. You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes. These fields will not auto-update from pump or CGM devices, instead you will have to update them using Nightscout Careportal so that the pill information is accurate.</p>"},{"location":"nightscout/overview/#carbs","title":"Carbs","text":"<p>Carbs are automatically uploaded to Nightscout by the Loop app. The amount of carbs on board (active carbs or COB) can be seen by clicking the Loop pill. The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from Nightscout for use in looping calculations, it only uploads carbs to Nightscout that have been entered in the Loop app.</p>"},{"location":"nightscout/overview/#boluses","title":"Boluses","text":"<p>Insulin boluses are automatically uploaded to Nightscout by the Loop app. The bolus is shown as a filled-in blue lower-half of the dot, and the specific amount of the bolus is also shown. There may be a separation between the bolus and the carb entry, especially if the user preboluses a meal.</p> <p>The bolus is uploaded to Nightscout as soon as it starts and Insulin on board (active insulin or IOB) is updated in the Loop pill. Should the bolus be interrupted, the Nightscout information is updated when the Loop information updates (assuming internet access is active).</p>"},{"location":"nightscout/overview/#temp-basals","title":"Temp Basals","text":"<p>Your current basal profile is automatically updated to Nightscout whenever it is changed by Loop. The dashed blue line represents the scheduled basal profile. The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate. If the graph and Loop pill do not agree, you should believe the Loop pill.</p>"},{"location":"nightscout/overview/#predicted-bg","title":"Predicted BG","text":"<p>The purple line to the right of the BG is Loop's predicted BG. Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps. You can read more on that topic in the LoopDocs: Algorithm section of these docs. If you don't see the prediction (and all other Nightscout and Loop settings are configured), tap on the 3 dots to the right of the 24 to reveal the choice to display AR2 prediction or Loop prediction. Adjust the check boxes to show just the Loop prediction.</p>"},{"location":"nightscout/overview/#loop-pill","title":"Loop pill","text":"<p>The Loop pill is the little display box which, when hovered over or clicked, will provide additional information about recent Loop activities and status. Information included is the last time Loop ran, the temp basal set, IOB, and COB. Looking at the Loop pill is a quick method for assessing if your loop is currently active, as well.</p> <p>Loop Pill status indicator symbols</p> <p>X \u00a0 Error in Loop</p> <p>\u03d5 \u00a0 Recommending basal, but not enacting (open loop or pump suspended)</p> <p>\u2301 \u00a0 Enacted a new temp basal</p> <p>\u21bb \u00a0 Loop is continuing with last temp basal, no change</p> <p>\u26a0 \u00a0 Warning indicating Loop is either red or has failed to upload to Nightscout for a longer period of time.</p> <p>Mouse over or Touch the Loop pill to view a tool tip containing one or more of the latest status messages. The most up-to-date Nightscout also includes information in the Loop pill for the minimum and maximum predicted BG, eventual and predicted BG.</p> <p></p>"},{"location":"nightscout/remote-overrides/","title":"Remote Commands","text":""},{"location":"nightscout/remote-overrides/#set-up-remote-for-nightscout","title":"Set Up Remote for Nightscout","text":"<p>You can use your Nightscout site to remotely set and cancel your override presets in your Loop app. What?! Yes, really...you can set/cancel an override remotely for your child's Loop.</p> <p>If you are using \u00a0Loop 3, then you can also send remote commands to add carbs and command a bolus.</p> <p>Remote Nightscout Interface Caveats</p> <ul> <li>Requires <code>Apple Push Notifications service (APNs)</code> - not available with a Free account</li> <li>When you build Loop, the required APN information is tied to your Apple Developer account<ul> <li>You add your APN information to your Nightscout site (directions on this page)</li> <li>Nightscout sites, in general, allow you to add the required APN information</li> </ul> </li> <li>If you use T1Pal for Nightscout and want to use remote commands, contact T1Pal about enabling them for a subscription fee.</li> </ul> <p>Remote Builds</p> <p>There are several methods for building remotely for your family members (or even yourself).</p> <ul> <li>LoopDocs: GitHub Build Actions (new with Loop 3) allows you to build on a browser (no need for a Mac) and send Loop to your phone using TestFlight</li> <li>Loop and Learn: Remote Build with Diawi allows you to save a build created by Xcode, store it in the cloud, and then download and install it on your phone later</li> </ul> <p>Both of these remote options require this Nightscout: Config Var to be added to Nightscout:</p> <p><code>LOOP_PUSH_SERVER_ENVIRONMENT = production</code></p> <p>Be aware that if you then return to building directly from Xcode, you must disable that config var from Nightscout and restart the server.</p> <p>Note - this is covered in detail in step 3 below when you LoopDocs: Add APN Variables to Nightscout.</p> <p>What you will need to do..</p> <ol> <li> <p>Update the Looper's iPhone Settings</p> </li> <li> <p>Create a Key for an <code>Apple Push Notifications service (APNs)</code></p> </li> <li> <p>Update your Nightscout site and add some \"config vars\" lines in your Nightscout site settings.</p> </li> </ol> <p>And read this entire page - focus on warnings and caveats.</p> <p>New Feature in Loop 3</p> <p>Remote bolus and remote carb capability are added with Loop version 3. In order to support this capability, there are new minimum versions:</p> <ul> <li>Loop 3\u00a0 or newer</li> <li>iOS 15.1 or newer</li> <li>Nightscout version 14.2.6 or newer     Required to get all the features</li> </ul> <p>Not required and is still under development, but users who are testing this separate app are pleased</p> <ul> <li>LoopCaregiver app (iOS 16 or higher) enables the following from the caregiver's phone:<ul> <li>monitor \u00a0Loop</li> <li>issue remote commands for carbs, bolus, and overrides</li> </ul> </li> <li>To clarify minimum versions for using updated remote features with LoopCaregiver<ul> <li>LoopCaregiver phone: iOS 16</li> <li>Loop phone: iOS 15.1 running Loop 3</li> <li>Nightscout\u00a0 14.2.6</li> </ul> </li> </ul> <p>The expanded capabilities for remote commands in \u00a0Loop 3\u00a0 are currently documented in this Remote Carb/Bolus Guide. That information will be incorporated into LoopDocs soon.</p>"},{"location":"nightscout/remote-overrides/#step-1-update-the-loopers-iphone-settings","title":"Step 1: Update the Looper's iPhone settings","text":"<p>For remote commands to successfully deploy to a Looper's iPhone, they will need to have two settings on the iPhone enabled.</p> <ol> <li>The slider in <code>iPhone -&gt; Settings -&gt; Loop -&gt; Notifications</code> needs to be turned to <code>Allow Notifications</code></li> <li>The slider in <code>iPhone -&gt; Settings -&gt; General -&gt; Background App Refresh -&gt; Loop</code> must be enabled</li> </ol> <p>Error messages if Looper's phone is not configured correctly:</p> <ul> <li>Without notifications, the person trying to set a remote override will see a message about <code>\"no deviceToken\"</code> and no remote override will actually enact</li> <li>If Background app refresh is not enabled, the remote overrides will only enact if the Loop app is open and the phone is unlocked.</li> </ul>"},{"location":"nightscout/remote-overrides/#step-2-apple-push-notifications","title":"Step 2: Apple Push Notifications","text":"<p>The next part of this will help your Loop app give permissions to your Nightscout site to remotely interact with it. To enable this, you need to create a key and grant it access to the Apple Push Notification Service (APNS). </p> <p>Reminder</p> <p>This only works with the paid Apple Developer ID.</p> <ol> <li>To get started, go to the <code>Keys</code> section under Apple Developer's <code>Certificates, Identifiers &amp; Profiles</code> and login with the Apple ID associated with your developer team that you used to sign your Loop app.</li> <li>If not already open in your browser (compare with the below screenshot), <ul> <li>Click on <code>Keys</code> (located in the left-hand column). </li> <li>Either click on the blue <code>Create a new key</code> button OR the plus button ()  to add a new key. <p></p> </li> </ul> </li> <li>In the form that appears, do the following:<ul> <li>Click the checkbox for enabling <code>Apple Push Notifications service (APNs)</code></li> <li>Enter a name for the key such as <code>Nightscout</code> (you can name it however you want, just make sure you know what the key is for by the name you choose).</li> <li>Then click the <code>Continue</code> button in the upper right of the screen.   <p></p> </li> </ul> </li> <li>In the screen that follows, click the blue <code>Register</code> button.   <p></p> </li> <li>In the screen that follows, click the blue <code>Download</code> button.     This step will download a file with a name that starts with <code>AuthKey</code> and ends with <code>.p8</code>.   <p></p> </li> <li>Find your <code>AuthKey</code> downloaded file in your downloads folder.    Double-click to open it and you will be presented a message asking how you'd like to open it.    Click on <code>Choose Application...</code> and then select <code>TextEdit</code> as your application to open it with.   <p> </p> </li> <li> <p>When the file opens, it will look similar to the screenshot below. In a few minutes, after we do a few other steps first, we will need to highlight ALL OF THE CONTENTS of that file and copy it because we will be pasting it in Heroku or whichever Nightscout provider you are using. Yes, allllll of the contents.     So, the easiest way is to:</p> <ul> <li>Click inside that file</li> <li>Highlight all the text, and then</li> <li>Copy all the text to the clipboard (Cf. screenshot below).<ul> <li>On a Mac, press Cmd+A to select all, then press Cmd+C to copy the selection. </li> <li>On a PC, press Ctrl+A to select all, then press Ctrl+C to copy the selection.</li> </ul> </li> </ul> <p>You don't have to do it right now...just keep that window open in the background for now until we need it a little further down. Then we will copy all that text.</p> <p></p> </li> </ol>"},{"location":"nightscout/remote-overrides/#step-3-add-apn-to-nightscout","title":"Step 3: Add APN to Nightscout","text":""},{"location":"nightscout/remote-overrides/#update-nightscout-site","title":"Update Nightscout Site","text":"<p>You'll need to make sure your Nightscout site version is version <code>13.0.1</code> or newer for remote overrides and version <code>14.2.6</code> or newer for access to all the remote command features. </p> <p>What is my Nightscout Version Number?</p> <p>To find your Nightscout version number:</p> <ul> <li>Tap on (<code>\u2630</code>) the hamburger button (3 horizontal lines stacked on each other) at the upper right, near the authentication button.</li> <li>A context menu slides in from below the hamburger.</li> <li>Scroll to the very bottom of this menu.</li> <li>The version is located in the <code>About</code> section after the <code>Settings</code> section, (below the <code>Save</code> button).</li> </ul> <p>This link should be used if you want to Nightscout: Update your Nightscout site.</p> <p>Note for Google Cloud Users</p> <p>The <code>Xdrip</code>: Google Cloud Nightscout instructions include information about updating your site. Scroll down to the line (on that page) that says <code>Update Nightscout</code>.</p>"},{"location":"nightscout/remote-overrides/#add-apn-variables-to-nightscout","title":"Add APN Variables to Nightscout","text":"<p>In order to use remote overrides, you must add a couple of new variables. If you don't know how to update your Nightscout configuration, review Nightscout: Setup Variables and then come back.</p> <p>The instructions in this section show Heroku images. If you are using a different method, you should be able to \"translate\" the steps.</p> <p>Go to the <code>Settings</code> tab near the top of the screen on your Heroku app and then click on <code>Reveal Config Vars</code>.</p> <p></p> <p>Scroll down the bottom of the <code>Config Vars</code> lines until you find the last blank one.  You are going to add three new rows of config vars for remote overrides as shown below:</p> <p></p> KEY VALUE <code>LOOP_APNS_KEY</code> Enter the ENTIRE contents of the downloaded <code>.p8</code> file including the <code>BEGIN</code> and <code>END</code> lines. Here's where you can use the Cmd+A and Cmd+C to highlight and copy all the text in that file so you can paste it into Heroku here for this new variable you are creating.  <code>LOOP_APNS_KEY_ID</code> String of characters on the <code>.p8</code> download file immediately following the underscore (<code>_</code>) and not including the file extension (<code>.p8</code>), or you can get it from your saved key in your developer account as shown next step, too. This is a part of the downloaded filename located after the underscore (<code>_</code>) and before the file extension (<code>.p8</code>).     <code>LOOP_DEVELOPER_TEAM_ID</code> Get this value from Loop app signing or in your Apple Developer account's top right corner under your name  <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> (optional) Set this to <code>production</code> if you installed Loop remotely such as with TestFlight, Diawi, AppCenter, or an IPA. If you built directly to your phone in XCode with your phone plugged into to your computer, do not include this variable."},{"location":"nightscout/remote-overrides/#remote-build-config-var-requirement","title":"Remote Build Config Var Requirement","text":"<p>That last row of the table above is needed if you are using a remote build option such as LoopDocs: GitHub Build Actions or downloaded an archived file via Loop and Learn: Remote Build with Diawi. If you later return to a direct Xcode build to your phone, you must remove that config var or remote commands will not work.</p> <p>When executed properly, you should have something that looks like this for the three new variables that you added:</p> <p></p>"},{"location":"nightscout/remote-overrides/#do-not-confuse-your-keys","title":"Do Not Confuse Your Keys","text":"<p>API Key vs APN Key</p> <p>If you build with the GitHub Browser Build, you may notice the <code>Application Programming Interface (API)</code> key has the same type of format as the <code>Apple Push Notification (APN)</code> key. The keys for both purposes are of type <code>p8</code>, but should not be confused.</p> <p>The Secrets for building with GitHub use the API Key.</p> <p>The config vars for Nightscout use the APN Key.</p> <ul> <li>If you are using remote commands with Nightscout and building with the GitHub build, you must also add the config var of <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> with a value of <code>production</code> to your Nightscout site or the remote commands will not work.</li> <li>If you are using the Mac-Xcode build method, do not have a config var of <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> entered - remove it if it is present.</li> </ul>"},{"location":"nightscout/remote-overrides/#faqs-on-remote-overrides","title":"FAQs on Remote Overrides","text":"<p>Don't forget to read Loopdocs: Overrides. For remote overrides in particular:</p> <ol> <li> <p>Can I set a different override in Nighscout than I have programmed into Loop app? Answer: No. You will only be able to enact override presets already programmed into the Loop app.</p> </li> <li> <p>If I didn't start the override in Nightscout (it was started in Loop itself), can I still use Nightscout to cancel it? Answer: Yes. You can cancel an override set in Loop with a Nightscout-set cancel \"temporary override\" command in the careportal.</p> </li> <li> <p>Can I replace an override set in Loop with an override set in Nightscout? Answer: Yes.</p> </li> <li> <p>If I have multiple Nightscout sites because I have multiple kiddos with T1D looping, do I need multiple APNs Keys? Answer: No. If you have multiple kids using Loop, you can use the one APNs key in each of their Nightscout sites.</p> </li> <li> <p>How can I tell if it worked? Answer: You should see your override pill in Nightscout, with the  NEXT Loop cycle, reflecting that the desired override action took place. If you are near the Loop app, you should see the new override within less than 30 seconds or so.</p> </li> <li> <p>Can I see on Nightscout when a temporary override has been set using the looper\u2019s phone? Answer: Yes. There will be a grey bar with the name of the override noted and the Loop Pill will display the targets and duration. Remember, there is a KNOWN issue with the grey bars, so use the pill as your best guide.</p> </li> <li> <p>Can a looper cancel a remote override? Answer: Yes. They can tap the heart icon  in Loop so that it is no longer highlighted. This turns off the override, regardless of where it was initiated.</p> </li> <li> <p>I set a remote override in Nightscout but the Looper tapped the heart symbol  in the Loop app, so the override turned off. Will the override get reinstated  the next time Loop completes with internet access? Answer: No. The APN is only sent once. You can set the remote override again if need be.</p> </li> <li> <p>Can I schedule a remote override ahead of time using Nightscout? Answer: No. When you set a remote override in Nightscout, it starts immediately and lasts for the duration programmed for that override in the Loop app. You can only set an override in advance using the Loop app.</p> </li> </ol>"},{"location":"nightscout/remote-overrides/#warnings-for-remote-commands","title":"Warnings for Remote Commands","text":"<p>Duplicate Delivery Risk</p> <p>We want to highlight a very important risk before you get started.</p> <p>For safety, always assume a previous remote carbs/bolus was delivered. For motivation think of the following example:</p> <ul> <li>You send a 5-unit remote bolus.</li> <li>The bolus is delivered to the Looper.</li> <li>Nightscout is having a temporary technical issue and doesn't show the bolus was received.</li> <li>You are watching Nightscout and you don\u2019t see a delivery so you assume it failed.</li> <li>You send another remote 5-unit bolus.</li> <li>The second 5-unit bolus is delivered to the Looper (10 Units total).</li> </ul> <p>You can see the danger of sending duplicate bolus/carbs so be careful. If a remote bolus/carb entry doesn\u2019t show in Nightscout, use your own judgment on whether enough time has passed to try again.</p> <p>If sending both, choose Bolus then Carbs</p> <p>If you plan to send a carb command remotely and later decide to issue a bolus command - STOP and consider.</p> <p>There are 2 scenarios of concern that could lead to too much insulin:</p> <ul> <li>Looper is using the <code>Temp Basal</code> (temporary basal) Dosing Strategy<ul> <li>Loop will initiate a max <code>Temp Basal</code> when it receives the carbs remote command</li> <li>Your bolus will be accepted and take place in addition to the high temporary basal</li> </ul> </li> <li>Looper is using <code>Automatic Bolus</code> Dosing Strategy<ul> <li>Loop will initiate 40% of the recommended dose when it receives the carbs remote command</li> <li>Your bolus will be accepted and take place in addition to an automatic boluses</li> </ul> </li> </ul> <p>Typically, sending a carbs command alone is sufficient for Loop to know about the carbs and begin to dose for them.</p> <p>If you really want to both bolus for carbs and enter carbs, then do it in that order.</p> <ol> <li>The bolus, when accepted, will cause Loop to issue a 0 <code>Temp Basal</code> (temporary basal) (which is \"safer\")</li> <li>The carbs, when accepted, will cause Loop to respond to the carbs while including the bolus already delivered and included in the Looper' IOB</li> </ol> <p>\u2757\ufe0f Remember - you should pause at least 60 seconds between remote commands or the One-Time-Password (OTP) will be rejected as having already been used.</p>"},{"location":"nightscout/remote-overrides/#using-remote-commands","title":"Using Remote Commands","text":"<p>There are four ways you can trigger your commands remotely; LoopCaregiver (under development), Nightscout Careportal, Shortcuts, and IFTTT.</p> <p>Config Var Reminder</p> <ul> <li>If you used a remote method for your build of Loop, don't forget you must add <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> config variable to your Nightcout site or remote commands will not work. LoopDocs: Remote Build Config Var Requirement</li> <li>If you then return to Xcode build, you must remove the <code>LOOP_PUSH_SERVER_ENVIRONMENT</code> config var.</li> </ul>"},{"location":"nightscout/remote-overrides/#loopcaregiver","title":"LoopCaregiver","text":"<p>The LoopCaregiver app is under development to make remote commands easier to implement and monitor.</p> <p>Configuration Update with Breaking Change on January 24, 2023</p> <p>What does that mean? Sounds scary!</p> <p>This is an app under development. Sometimes, when improvements are added, you have to start over with a fresh download and enter all your information again to take advantage of the update. The app on your phone keeps working until you are ready to update.</p> <ul> <li>The location of the repository has moved</li> <li>The ability to build with GitHub as well as Xcode has been added</li> <li>The <code>bundle ID</code> has been modified</li> </ul> <p>Because the <code>bundle ID</code> has changed:</p> <ul> <li>If you already have LoopCaregiver running and do a fresh download and build, you will be building a separate app and will need to delete the old one and add your Looper(s) in again</li> <li>If you haven't built LoopCaregiver, the app you download and build today has the new format for the <code>bundle ID</code></li> </ul> <ul> <li>Minimum Requirements<ul> <li>iOS 16 for LoopCaregiver's phone</li> <li>iOS 15.1 with Loop 3 for Looper's phone</li> <li>Nightscout 14.2.6</li> </ul> </li> <li>Complete all 3 steps:<ul> <li>Step 1: Update the Looper's iPhone settings</li> <li>Step 2: Apple Push Notifications</li> <li>Step 3: Add APN to Nightscout</li> </ul> </li> <li>Safety First - Read these 2 sections again<ul> <li>FAQs on Remote Overrides</li> <li>Warnings for Remote Commands</li> </ul> </li> </ul> <p>Older Nightscout Versions</p> <p>If you ignore this minimum version requirement - what happens:</p> <ul> <li>If you attempt to use the carb entry in the past or future, the caregiver app accepts it but the remote commands accepted by the Loopers phone show up at the current time - not when the caregiver intended to insert carbs</li> <li>Please take the time to update your Nightscout site to <code>master</code></li> <li>Nightscout 14.2.6 was released 30-Sep-2022 as <code>Classic Liquorice</code></li> </ul> <p>If you plan to use LoopCaregiver, please join Loop Caregiver App Zulipchat stream.</p> <p>As with all development code, monitor Zulipchat for announcements, report any problems you experience, be prepared to build frequently, and pay attention.</p>"},{"location":"nightscout/remote-overrides/#build-loopcaregiver","title":"Build LoopCaregiver","text":"<p>A build script is available to assist in building LoopCaregiver. This should be straightforward for anyone who has previously built \u00a0Loop 3\u00a0 using the script. You may also choose to build it with the GitHub build method as documented on the Browser Build: Other Apps page.</p> <ul> <li>Open a terminal window. </li> <li>Spot the line below that starts with <code>/bin/bash</code></li> <li>Click the gray copy button () located near the bottom right side of that line  (should say <code>Copy to Clipboard</code> when you hover the mouse over it).   Once clicked, a confirmation message that says <code>Copied to Clipboard</code> will appear on your screen.     Copy and Paste to start the BuildLoopCaregiver.sh script<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildLoopCaregiver.sh)\"\n</code></pre></li> <li>Important: Click anywhere in the terminal before trying to paste</li> <li>Paste the line into the Terminal window.  <ul> <li>on Mac, you can do this in one of the following ways:<ul> <li>Press Cmd+V </li> <li>or Press Ctrl+click and select <code>Paste</code> from the menu </li> <li>or select <code>Edit =&gt; Paste</code> (i.e. click the <code>Edit</code> menu at the top of the Mac screen then click <code>Paste</code>).</li> </ul> </li> <li>on PC: <ul> <li>Press Ctrl+V</li> </ul> </li> </ul> </li> <li>Once the line is pasted, hit Return (Enter) to execute the script. </li> <li>The script displays the directions for downloading and building.       Please read them carefully.</li> </ul> <p>Not \u00a0Loop</p> <p>The output you see in the Terminal may look very similar to when you build \u00a0Loop 3\u00a0 from a script.</p> <p>It is pulling down a clone from a different location (<code>LoopKit/LoopCaregiver</code>). It uses some modules from Loop. The target and scheme are automatically selected for LoopCaregiver and if you follow directions for a paid Developer account, the signing is automatic.</p>"},{"location":"nightscout/remote-overrides/#use-loopcaregiver","title":"Use LoopCaregiver","text":"<p>Some limited directions for using the LoopCaregiver app are provided - please also read the Zulipchat stream.</p>"},{"location":"nightscout/remote-overrides/#loopcaregiver-main-screen","title":"LoopCaregiver\u00a0 Main Screen","text":"<p>LoopCaregiver uses a lot of features from Loop with some Nightscout-like features in the Timeline.</p> <p>The Timeline:</p> <ul> <li>Autoscales the vertical display for glucose reported over the last 24 hours (plus the forecast if that is turned on)<ul> <li><code>Show Prediction</code> for Timeline is turned off in the graphic below.</li> </ul> </li> <li>Horizontal display can be adjusted with spreading/pinching and scrolling.</li> <li>A double tap on the Timeline provides a factor of 2 expansion horizontally if at default</li> <li>A double tap on the Timeline returns the display to default if expanded</li> </ul> <p></p>"},{"location":"nightscout/remote-overrides/#add-a-looper-to-loopcaregiver","title":"Add a Looper to LoopCaregiver","text":"<p>You add each Looper under settings. (LoopCaregiver can monitor more than one Looper).</p> <ul> <li>On the Looper' phone:<ul> <li>Tap on <code>Loop -&gt; Settings -&gt; Services -&gt; Nightscout</code></li> <li>Tap on the <code>One-Time-Password</code> row to see the QR code  </li> <li> <p>Pro-tip</p>    Take a screenshot and store it on your computer.    You can then add view the QR code in LoopCaregiver without bothering your Looper. </li> </ul> </li> <li>On the LoopCaregiver' phone:<ul> <li>Tap on <code>LoopCaregiver -&gt; Settings</code></li> <li>Tap on the plus sign  to add a Looper</li> <li>Enter the name of the Looper, the Nightscout URL (use  https://) and <code>API_SECRET</code></li> <li>Touch the QR code row - this opens the camera - point the camera at the QR code from Looper's phone</li> </ul> </li> </ul> <p>You can also use the <code>LoopCaregiver -&gt; Settings</code> screen to modify:</p> <ul> <li>Units used for glucose display: <code>mg/dL</code> or <code>mmol/L</code></li> <li>Include the \u00a0Loop forecast display on the Timeline chart as well as the Glucose chart of the main display (<code>Show Prediction</code> is turned off in the graphic above)</li> </ul>"},{"location":"nightscout/remote-overrides/#issue-remote-commands-with-loopcaregiver","title":"Issue Remote Commands with \u00a0LoopCaregiver","text":"<p>You issue override, carb, and bolus commands using a toolbar similar to the one seen on Loop. In the example graphic above, the carb and bolus entries visible were issued remotely. (Note that: <code>Adam 6</code> is a test phone.)</p> <p>Carb and bolus commands each require authorization before they are accepted. The authorization (FaceID, Fingerprint, or passcode) matches that required to unlock the LoopCaregiver's phone.</p> <p>The use of LoopCaregiver makes remote commands much easier and more reliable.</p> <p>Go back and read the warnings again before using the app. Warnings for Remote Commands</p>"},{"location":"nightscout/remote-overrides/#nightscout-careportal","title":"Nightscout Careportal","text":"<p>To use remote commands, I'm assuming you've set up your Nightscout site according to the directions here in Loopdocs. Especially the part about your ENABLE line including each of the words: <code>override</code> <code>careportal</code> <code>Loop</code> (in addition to other variables you'd be interested in - the order of the words in the <code>ENABLE</code> line is not important). You'll also need to have your site authenticated so that your careportal is active to send remote overrides. Once authenticated by entering your <code>API_SECRET</code>, then there will be a plus sign () in the upper right corner of your site. That is your careportal. Tap the careportal plus sign () and then scroll down in the <code>event type</code> menu to find <code>Temporary Override</code>. Within there, you will find all your Loop override presets already loaded for you.</p> <p></p> <p>The Looper will see a banner notification that a remote command has been sent with details about that command and whether it succeeded (or not).</p> <p></p> <p>Canceling an override through Nightscout careportal is as simple as selecting the event type <code>Temporary Override Cancel</code> and submitting.</p>"},{"location":"nightscout/remote-overrides/#shortcuts","title":"Shortcuts","text":"<p>If you want to make your life SUPER AMAZING, check out using the iPhone's Shortcuts app. The Shortcuts app is for making little automations (like mini apps) that can integrate parts of your life. In this case, we've written a couple of shortcuts for you that integrate \u00a0Loop\u00a0 overrides with Nightscout.</p> <p>Important Note</p> <p>Before you click on the download file below...save yourself some trouble.</p> <ol> <li>Download the Shortcuts app if you don't have it yet</li> <li>Choose to run any shortcut from the Gallery. It can be the laundry timer...I don't care, just pick one shortcut and run it.  </li> <li>THEN, go to download the shortcut of your choice below.    \u2139\ufe0f The shortcuts that aren't run through the Gallery option are called \"untrusted\". And you need a slider in your iPhone to trust the \"untrusted\" shortcuts you would be downloading here.    But...in a lovely iOS glitch...that slider doesn't appear unless you've run a trusted shortcut first.  So, run one now.</li> <li>Then, this slider will now be visible in the iPhone Settings app under the Shortcuts app menu.</li> <li>When you will see the message \"This shortcut cannot be opened because your Shortcuts security system settings don't allow untrusted shortcuts\"</li> <li>Open iPhone Settings and scroll down the list and tap the Shortcuts menu to turn on \"Allow Untrusted Shortcuts\".</li> </ol> <p>Click these links on your iPhone and you'll be prompted to download the premade shortcuts (assuming you open the links in Safari browser on iPhone):</p> <p>Comprehensive Loop Shortcut includes Set Remote Override, Cancel Override, Loop Troubleshooting Tips, Quick Text options, Manual BG entry, Bookmarks to websites, etc.</p> <p>And if you want to save one click to get to these one functions more directly: these shortcuts are simplified to offer only one function:</p> <p>Set Remote Override only shortcut</p> <p>Cancel Override only shortcut</p> <p>A couple notes about these shortcuts:</p> <ol> <li>You will need iOS 13 at a minimum on the phone you'd like to trigger these shortcuts from. Looper's phone can still be lower than iOS 13, but your phone as the shortcut user would need iOS 13.<ul> <li>For \u00a0Loop 3, the minimum iOS is iOS 15.1</li> </ul> </li> <li>You need to open those links in the Safari browser on your iPhone. A confirmation will show to initiate the download. After the download finishes, tap the button marked <code>AA</code> near your Safari address bar and tap <code>Downloads</code> (downloads)  to find and open the downloaded Shortcut. Then wait a bit, and the shortcut's inner guts will be there...scroll ALL the way down to the bottom to click the button to save the untrusted shortcut.</li> </ol> <ol> <li>When you enter your Nightscout URL in the <code>URL</code> field of the \u00a0Loop\u00a0 shortcut setup, make sure you don't include a trailing <code>/</code>, or the API calls to Heroku will error out.</li> <li>When a remote override is set properly, you'll see an <code>ok</code> message displayed. If there is an error, you'll see an error message. Most errors will be that you have an <code>API_SECRET</code> wrong (make sure there isn't a space at the end of your <code>API_SECRET</code> that you don't see) or you failed to do the steps to setup Nightscout and update your Loop app as described in steps 1-3 above.</li> <li>You can absolutely customize these bits and pieces within the shortcut. Change the text messages, and change the links... It is totally up to you.</li> </ol>"},{"location":"nightscout/remote-overrides/#ifttt","title":"IFTTT","text":"<p>If you want to walk uphill both ways in the snow carrying bags of uneven groceries, you can also set overrides remotely by setting up IFTTT, too.</p>"},{"location":"nightscout/remote-overrides/#known-issues","title":"Known Issues","text":"<p>Just a brief mention so you are aware:</p> <ol> <li>The override pill will display information about what override is currently active in the Looper's phone. BUT, there can be a slight delay as that information is only transmitted every 5 minutes at best (it is tied to Loop runs and Nightscout upload events in Loop). So, wait 5 minutes to see that the information has gone through a refresh cycle before assuming the override message failed to enact.</li> <li>When you add a new override preset in Loop, that preset has to be uploaded to Nightscout before it will be available as a remote override. To trigger that upload, you can simply enact that new override for a few seconds and turn it off again. That will get the Nightscout upload going.</li> </ol>"},{"location":"nightscout/remote-overrides/#common-errors","title":"Common Errors","text":"<p>Once you've set up remote overrides, you may encounter errors when trying to run them via Nightscout or iOS Shortcuts.  Below are the most common and typical solutions.</p> <ol> <li><code>Error: Loop notification failed: Could not find deviceToken in loopSettings</code> You might see this in either Nightscout or Shortcuts.  The error is most commonly caused by Loop not pointing to the right Nightscout instance or you haven't yet run an override locally (with the Loop app) before trying to run one remotely. Solution: Confirm the Loop app is pointing to the right Nightscout site (and there are no extra spaces or a slash (<code>/</code>) at the end, and always run an override for a few seconds in the Loop app before you try to run one remotely.</li> <li><code>Error: cannot POST/api/v2/notifications/loop</code> You might see this in iOS Shortcuts.  This means Nightscout is not updated correctly and you are running a version of Nightscout that doesn't yet support remote overrides.  Solution: Follow the steps above again on how to update to the version of Nightscout that supports remote overrides.</li> <li><code>Error: {\u201cstatus\u201d:401,\u201dmessage\u201d:\u201dUnauthorized\u201d,\u201ddescription\u201d:Invalid\\\\/Missing\u201d}</code> You might see this in iOS Shortcuts.  This is caused by having an incorrect <code>API_SECRET</code> in the shortcut. Solution: Double check the <code>API_SECRET</code> is correct and that there are no spaces at the end.</li> <li><code>Error: APNs delivery failed: InvalidProviderToken</code> You might see this in either Nightscout or Shortcuts.  This is caused because your <code>LOOP_APNS_KEY_ID</code> and <code>LOOP_DEVELOPER_TEAM_ID</code> are swapped in Heroku.  Solution: Double check what's listed in your Apple Developer Account and compare it to the config variables in Heroku. Your <code>Team_ID</code> is next to your name in the top right corner.  The other code is your <code>Key_ID</code>. Get the IDs in the correct location in Heroku to resolve the error.</li> </ol>"},{"location":"nightscout/troublehoot/","title":"Nightscout Troubleshooting","text":""},{"location":"nightscout/troublehoot/#setup-troubleshooting","title":"Setup Troubleshooting","text":"<p>If you have just tried to set up your Nightscout site and have problems with seeing all your data, please check out the Nightscout: Troubleshooting  page.</p>"},{"location":"nightscout/troublehoot/#dexcom-data-not-showing","title":"Dexcom data not showing","text":"<p>If you use a Dexcom and get your CGM data into Nightscout using Dexcom Share (bridge in Nightscout) and everything was working but the Dexcom data stops showing, please review Nightscout: Dexcom bridge Troubleshooting.</p> <p>As part of that troubleshooting, you may need to remove the Nightscout service credentials from Loop. You may need to remove Dexcom credential from all third-party apps that get data from Dexcom Share. Be sure to add them back after the CGM data to Nightscout is restored.</p> <p>You do not need to use Share or bridge with Nightscout. You can choose to have Loop update your CGM readings to Nightscout directly. There's a check box in the Loop CGM setting screen to select this. You must select that check box every time you update your transmitter for Dexcom G5 or G6.</p>"},{"location":"nightscout/troublehoot/#loop-data-not-showing","title":"Loop data not showing","text":"<p>If your BG data is showing, but Loop data is not (like Loop pill is empty and carbs and boluses are not showing), please delete your Nightscout account in Loop settings area. Enter the information in Loop again. Make sure to use <code>https://</code> to start the site URL. Make sure there is no trailing slash at the end of the URL. Enter your API_SECRET correctly. Make sure you have <code>loop</code> on the ENABLE line in Heroku settings.</p>"},{"location":"nightscout/update_user/","title":"Nightscout with Loop","text":""},{"location":"nightscout/update_user/#adding-loop-to-existing-nightscout-site","title":"Adding Loop to Existing Nightscout Site","text":"<p>Many people may already have an existing Nightscout site setup from before adding Loop to their management strategies. In order to make the most of your Looping setup, you will need to modify your existing Nightscout site a bit specifically for Loop. The process is pretty easy and should not take long.</p> <p>The graphics on this page are from a Heroku implementation for DIY Nightscout. When you read the Nightscout documents, you'll notice there are a lot more options than just Heroku. When Heroku announced that the \"free\" tier for Heroku would be disabled in November 2022, the #WeAreNotWaiting community developed a lot of options - both free DIY, nominal cost DIY and there were already several companies that provide Nightscout as a service. If your site is not with Heroku, you need to translate how to adjust the configuration variables.</p>"},{"location":"nightscout/update_user/#variables-for-loopers","title":"Variables for Loopers","text":"<p>Once you have created a Nightscout site, there are some Nightscout Config Vars specific to Loop.</p> <ul> <li> <p>First the Config Vars need to be added to the Nightscout site.</p> </li> <li> <p>For each instance of viewing the Nightscout site (i.e., on broswer or phone app), you can individually select which of those configured items are displayed.  This is on a per-view basis. However, Config Vars like the <code>SHOW_PLUGINS</code> line allow you to preconfigure what will be shown by default.</p> </li> </ul>"},{"location":"nightscout/update_user/#editadd-config-vars","title":"Edit/Add Config Vars","text":"<p>These instructions are for people using Heroku, because that is the most common choice. If your Nightscout site is not on Heroku, this page provides a guide for the Config Vars used by Loop.</p> <p>Login to your Heroku account, select the <code>Settings</code> tab near the top of the screen on your Heroku app.</p> <p></p> <p>Click on <code>Reveal Config Vars</code>.  Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping.</p> <p>Omnipod Users can skip the Config Vars that begin with <code>PUMP_</code>. Those are useful for Medtronic users.</p> <p></p> ENABLE bridge loop pump iob cob basal careportal sage cage bage override dbsize (Note: If you are an existing NS user, you likely already have an ENABLE line in this section of Heroku. Don't add a new one. Simply find the existing ENABLE line, click on the little pencil icon to the right of it, and add the words shown on the ENABLE line above to the existing words already on the enable line.  Avoid duplicates. The remainder of the lines are likely going to be brand new additions to your Heroku settings.) DEVICESTATUS_ADVANCED true PUMP_FIELDS battery reservoir clock status PUMP_RETRO_FIELDS battery reservoir clock status SHOW_FORECAST loop SHOW_PLUGINS loop pump cob iob sage cage careportal basal override dbsize PUMP_ENABLE_ALERTS true PUMP_URGENT_BATT_U 30(This is the pump battery percentage that will trigger a red, urgent alert in NS.) PUMP_URGENT_BATT_V 1.25(This is the pump battery voltage that will trigger a red, urgent alert in NS.) PUMP_URGENT_RES 10(This is the reservoir volume that will trigger a red, urgent alert in NS.) PUMP_URGENT_CLOCK 30 LOOP_ENABLE_ALERTS true LOOP_WARN 20(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.) LOOP_URGENT 60(Same as the alert above, but will be red in color and have a shorter snooze option.) BASAL_RENDER default <p>Click on <code>Open App</code> in the top right corner of your Heroku site.</p> <p></p>"},{"location":"nightscout/update_user/#plugins-selection","title":"Plugins Selection","text":"<p>Once you are viewing an instance of your Nightscout site (browser or app), you can adjust what this instance of the display will show.</p> <p>Click on the \"hamburger\" menu - those three horizontal lines in the upper right corner of the main NS display.  </p> <p>Different sets of documentation call the three horizontal lines in the upper right of the Nightscout display different things such as:</p> <ul> <li>Settings</li> <li>Hamburger Menu</li> <li>Drawer Menu</li> </ul> <p></p> <p>The graphic below shows some of the check boxes you can select.  Make sure your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), adjust alarms (on or off), check the boxes that you\u2019d like display as pills in the SHOW PLUGINS section (usually all of them), and then click save. (You are saving your display preferences, not modifying anything in the NS database.)</p> <p>Note - Nightscout has been updated since this figure was generated.</p> <p></p>"},{"location":"nightscout/update_user/#authenticate-site","title":"Authenticate Site","text":"<p>If the current display of your NS site has been not authenticated, you will not be able to access certain portions of Nightscout such as the careportal, administration tools and remote overrides.  There are two ways to authenticate.</p> <ul> <li> <p>Use API_SECRET to access all features of Nightscout</p> </li> <li> <p>Use Tokens to generate a URL that opens with predefined role(s)</p> </li> </ul> <p>The use of tokens is documented at this link to the security page in the Nightscout documentation.</p> <ul> <li>Please see Nightscout: Tokens</li> </ul> <p>You can authenticate with your API_SECRET using either of these methods:</p> <ul> <li> <p>Click on the hamburger menu and scroll all the way to the bottom, click on authenticate and add your API_SECRET</p> </li> <li> <p>Click on the Lock symbol on upper right on main display (requires careportal plugin to be enabled) and add your API_SECRET</p> </li> </ul> <p>An authenticated site, with careportal plugin enabled, will show a + at upper right of the main display instead of a lock symbol. Tapping on the + gives you access to the careportal.</p>"},{"location":"nightscout/update_user/#nightscout-version-update","title":"Nightscout Version Update","text":"<p>If you are new to Loop and haven\u2019t updated your Nightscout site for a while, check to see if there's an available update. Visit Nightscout: Update Instructions for directions on updating.</p>"},{"location":"nightscout/update_user/#more-variables-for-loopers","title":"More Variables for Loopers","text":"<p>The list of Variables for Loopers above can be expanded if you want your site to automatically open with specific values and alarm settings.</p> <p>This Loop and Learn: Nightscout Variables page, created for folks using the Google Cloud method to create a Nightscout site, has a convenient, expanded list.</p>"},{"location":"operation/overview/","title":"Loop 2 Set Up Overview","text":"<p>This section of LoopDocs will be maintained during the transition to Loop 3. These pages are specific to Loop 2.2.x and some forks based off that older version. </p> <p>Be aware that older versions and forks will probably not be updated as the Apple environment changes.</p> <p>With Loop 2.2.x, you must manually step through every Loop setting and fill out the appropriate values. If you miss some, you may get errors in the app. If this happens to you, review every setting carefully.</p> <p>You need to work through the steps listed in the headings under this page one by one. Please follow along with each page's information to make sure that you don't miss any valuable information about your Loop's settings and function.</p> <p>You can work through each page completely and click on the link at the bottom of the page to proceed to the next page. Or you can use the back button on your browser to return to this page and click on the link for the page of interest.</p>"},{"location":"operation/overview/#permissions","title":"Permissions","text":"<p>Make sure that Loop has permission to send you notifications. For example, you will want to know if Loop has stopped working for more than 20 minutes.</p> <p>Make sure Loop has permission to access Bluetooth devices.  You'll need that for your CGM and to connect a pump to Loop.</p>"},{"location":"operation/overview/#loop-2-health-permissions","title":"Loop 2 Health Permissions","text":"<p>Follow the instructions on the Loop 2 Health Permission page. Note that the Carbohydrate read permission should be turned off after enabling all.</p>"},{"location":"operation/overview/#loop-2-add-pump","title":"Loop 2 Add Pump","text":"<p>Select and configure your insulin pump. There are separate pages for setting up a Medtronic (MDT) pump or an Omnipod Eros pump (aka \"pods\"). Click on one of the pages to go straight to that page's guide.</p> <p>Loop 2 Add Medtronic Pump</p> <p>Loop 2 Add Omnipod Pump</p> <p></p>"},{"location":"operation/overview/#loop-2-add-cgm","title":"Loop 2 Add CGM","text":"<p>Follow direction on the Loop 2 Add CGM page. If you are wondering which CGMs are supported natively by Loop, check Compatible CGM.</p> <p></p>"},{"location":"operation/overview/#loop-2-configurations","title":"Loop 2 Configurations","text":"<p>Configure Loop's settings. Within this section, you will be entering many settings that you are already familiar with such as basal rates, carb ratios, and insulin sensitivity factor (aka correction factor). There are also several new terms that you may be unfamiliar with like insulin model selection, suspend threshold, and override ranges. Make sure to refer to the Loop 2 Configurations while entering values - DO NOT GUESS.</p> <p></p>"},{"location":"operation/overview/#loop-2-services-optional","title":"Loop 2 Services (Optional)","text":"<p>You are not required to use services although many Loopers use Nightscout. If you do not yet have Nightscout configured and want to add it later, just return to the Services page when you are ready. Note that Loop 3 and Loop 2 use the same documentation page for Services. Services can be added at any time.</p> <p></p>"},{"location":"operation/overview/#loop-2-displays","title":"Loop 2 Displays","text":"<p>After you are done entering your settings, you should familiarize yourself with the information displays. The Loop 2 Displays page will help you recognize and begin to understand what all the icons, graphs, and data mean.</p> <p>It is a good idea to remain in Open Loop while becoming familiar with the app.</p>"},{"location":"operation/overview/#loop-2-pump-settings-screen","title":"Loop 2 Pump Settings Screen","text":"<p>The pump settings screens for Loop 3 were updated. The older interface used by Loop 2 is documented at Loop 2 Pump Settings</p>"},{"location":"operation/overview/#rileylink-screen","title":"RileyLink Screen","text":"<p>The documentation for Loop 3 and Loop 2 is the same for the RileyLink screen. This screen is only available after configuring a pump that uses a RileyLink Compatible Device.</p> <p>After a pump that uses a RileyLink is connected to the app, tap on a RileyLink name in the pump settings screen to bring up the displays and commands found on the RileyLink Menu screen.</p>"},{"location":"operation/algorithm/bolus/","title":"Bolus Recommendations","text":""},{"location":"operation/algorithm/bolus/#loop-manual-bolus","title":"Loop Manual Bolus","text":"<p>Loop will recommend bolus insulin corrections when the eventual blood glucose is greater than the correction target and the active insulin plus any active 30-minute temporary basal will not be sufficient to cover the predicted excursion above correction target.</p> <p>These recommendations are not proactively sent to the Loop user through any notification or banner alert; the recommendation is only viewable when the user clicks on the bolus tool. Note that Loop never issues a bolus command automatically while using the default Temp Basal dosing strategy; all boluses are initiated by the user unless the automatic bolus dosing strategy is enabled. With automatic bolus enabled, each automatic bolus is limited to 40% of the recommended amount or the maximum bolus setting, whichever is smaller.</p> <p>The bolus dose calculation is identical to the dose equation given in the basal recommendations section, with the exception that:</p> <ul> <li>the insulin contribution from the currently running temporary basal set by Loop is removed or subtracted from the recommended bolus amount, and  </li> <li>the delta is calculated for the top of the correction range, rather than the average of the correction range.</li> </ul> <p>For recently saved carbohydrates where the projected carbohydrate absorption will outlast the insulin activity duration (e.g., very slow-digesting meals like pizza or pasta), Loop\u2019s algorithm will inherently decrease the initial meal bolus \u2014 to prevent hypoglycemia events that often occur after these meals \u2014 by only recommending enough bolus to prevent minimum predicted glucose from going below the suspend threshold. As described above, the Loop algorithm computes the recommended bolus such that predicted glucose will not dip below the suspend threshold. This may result in future blood glucose levels predicted above correction range, but will prevent a hypoglycemia event shortly after the meal (as it sometimes occurs for people giving a \"pizza bolus\" in traditional pump therapy). Loop will then later make corrections by issuing higher temporary basals or automatic boluses. In effect, this algorithm behavior mimics traditional pump therapy of \u201cextended\u201d or \u201cdual wave\u201d bolusing, but with the benefit of added information about actual carbohydrate absorption effects as time goes by.</p> <p>Finally, Loop checks that the result of the calculations is below the maximum single bolus the Loop user specified in their settings. If the calculated bolus is less than the maximum single bolus setting, then the recommended bolus will be displayed in Loop\u2019s bolus tool.</p> <p>Bolusing safety feature</p> <p>If the current blood glucose, or any predicted blood glucose, falls below the suspend threshold, Loop will not return a recommended bolus. When the minimum blood glucose rises above the suspend threshold, the bolus tool will provide a recommended bolus.</p>"},{"location":"operation/algorithm/bolus/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/algorithm/overview/","title":"Algorithm Overview","text":""},{"location":"operation/algorithm/overview/#loop-algorithm","title":"Loop Algorithm","text":"<p>Loop\u2019s algorithm for adjusting insulin delivery is oriented around making a blood glucose prediction. Every five minutes, triggered by new blood glucose data, it generates a new prediction. Both bolus recommendations and temporary basal rate adjustments are set based on this prediction.</p>"},{"location":"operation/algorithm/overview/#algorithm-terminology","title":"Algorithm Terminology","text":"<p>This graph and legend illustrates terms commonly used in discussing Loop's algorithm, and shows them in the context of historical and forecasted blood glucose in style similar to the status screen of Loop.</p> <p></p> Insulin activity duration The insulin activity duration is the duration of the insulin activity curve, and describes the point at which the delivered insulin dose no longer affects blood glucose. The insulin activity duration is 6 hours for Loop's rapid-acting and ultra-rapid insulin models. Correction range The correction range is the blood glucose range Loop uses to determine corrective actions (e.g., between 90 and 120 mg/dL in the figure). NOTE: Loop\u2019s correction range is a user setting and should not be confused with the target range, typically 70-180 mg/dL, used for the purpose of calculating the percent time in range. Correction minimum The lower or minimum value of the user\u2019s correction range, which is 90 mg/dL in the figure. Correction maximum The upper or maximum value of the user\u2019s correction range, which is 120 mg/dL in the figure. Correction target The correction target is the average value of the correction range. In the overview figure, this is 105 mg/dL given that the correction minimum is 90 mg/dL and the correction maximum is 120 mg/dL. Predicted blood glucose Loop makes a prediction of blood glucose values out for a length of time equal to your insulin action duration. The predicted blood glucose is the basis for how Loop makes its insulin delivery recommendations and actions. Eventual blood glucose The last value of the predicted glucose curve, in other words the very last blood glucose predicted at the end of your insulin action duration. In the figure above, this is 85 mg/dL. Minimum predicted blood glucose The lowest blood glucose value at any point in time within the prediction. In the figure above, this is 77 mg/dL. Delta The delta is the difference between the eventual blood glucose and the correction target. In the overview figure, the eventual blood glucose is 85 mg/dL and the correction target is 105 mg/dL, which means that the delta is  -20 mg/dL. Suspend Threshold The suspend threshold is a safety feature of the Loop algorithm. If any predicted blood glucose is below this threshold, the Loop algorithm will issue a temporary basal rate of 0 CGM data Blood glucose readings made by a continuous glucose monitor. Insulin sensitivity factor A configuration value that provides an estimate of how much blood glucose will drop given a unit of insulin. Active insulin Active insulin, often referred to as Insulin-on-Board (IOB), is the remaining amount of insulin activity from boluses and temporary basal rates relative to a user\u2019s scheduled basal rates. More specifically, it is the total amount of insulin activity due to all bolus and basal insulin delivered within the last N hours, where N is determined by the insulin activity duration. The amount of \u201cactive\u201d insulin depends upon the insulin activity curve, and also accounts for the insulin withheld via basal suspensions. As such, it is possible that the active insulin can be negative. Negative active insulin will result in an increase in predicted blood glucose. The active insulin displayed in Loop's main display does not reflect the currently enacted temporary basal rate, as that basal rate may be canceled or modified before completion over the next 30 minutes. In others words, Loop doesn't count chickens before the eggs hatch...insulin delivery must be confirmed before being added to the active insulin reporting."},{"location":"operation/algorithm/overview/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/algorithm/prediction/","title":"Glucose Prediction","text":""},{"location":"operation/algorithm/prediction/#blood-glucose-prediction","title":"Blood Glucose Prediction","text":"<p>Loop uses an algorithm to maintain blood glucose in a correction range by predicting the contributions from four individual effects (insulin, carbohydrates, retrospective correction, and blood glucose momentum) at any time t to recommend temporary basal rate corrections and boluses.</p> \\[ BG[t] = Insulin[t] + Carb[t] + RetrospectiveCorrection[t] + Momentum[t] \\] <p>You can see the individual contributions of these effects by tapping on the predicted blood glucose chart on Loop's status screen. Loop updates this blood glucose prediction every five minutes when a new CGM value has been received and the pump's status has been updated.</p> <p>Just a note, this whole section is fairly technical. While perhaps not the most interesting topic for many readers, if you are seeking the detailed view of the Loop algorithm this discussion is quite useful. If you want a more surface understanding, the overview and temporary basal recommendations sections alone are probably sufficient.</p>"},{"location":"operation/algorithm/prediction/#overview","title":"Overview","text":"<p>Before we delve into each of the four individual effects, a general overview figure may be a helpful start. There are four effects summed together to produce Loop's final predicted blood glucose curve. Each individual effect, along with their combined effect, is illustrated in the figure below. Insulin, from boluses and temporary basals, will have a decreasing effect on the prediction. Carbohydrates will have an increasing effect on the prediction. Blood glucose momentum effect can have a positive or negative effect, depending on how blood glucose is trending in the most recent CGM values. As shown in the example below, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is lowering the prediction, indicating that the recent rise in blood glucose was not as large as had been predicted by Loop in the recent past.</p> <p></p> <p>The sections below provide detailed information on each of the four contributions.</p>"},{"location":"operation/algorithm/prediction/#insulin-effect","title":"Insulin Effect","text":"<p>Most traditional pump users and caregivers are already familiar with the concept of an insulin activity curve, where the insulin\u2019s effect is time-dependent. Insulin takes a little while to affect blood glucose. The insulin effect typically peaks around one hour after giving insulin and then gradually decays.</p> <p></p> <p>Loop 2.x provides users with two different classes of insulin models (i.e., an exponential model and the Walsh model). All of the exponential models have an insulin activity duration of 6 hours, whereas the insulin activity duration is customizable for the Walsh model. The rapid-acting and Fiasp insulin activity curves are modeled as exponential curves that match the shape of the insulin activity curves from insulin labeling, and as observed in both adults and children.</p> <p>Loop 3 drops the Walsh model and, by default, does not include the concept of child versus adult for \"rapid\" acting insulin, i.e., Humalog, Novalog and Apidra. Loop 3 adds the concept of non-pump insulin to account for injections or inhaled insulin. The Afrezza model is added as a non-pump insulin. The Insulin Type is selected in the Pump Settings screen. All insulin types are modeled by selecting parameters in the exponential model. See also Exponential Insulin Curve on the Code Customization page.</p> <p></p> <p>The amount of insulin effect remaining, or percent of remaining active insulin after an insulin bolus is delivered, is modeled mathematically in Loop with an exponential decay curve.</p>"},{"location":"operation/algorithm/prediction/#insulin-effect-remaining","title":"Insulin Effect Remaining","text":"<p>If a user\u2019s insulin sensitivity factor (ISF) is 50 mg/dL per 1 unit of insulin and the user gives 2 units of insulin, then the user\u2019s blood glucose would be expected to drop 100 mg/dL within the 6 hours following the insulin delivery. This insulin effect can be visualized in several different ways: the expected active insulin, expected drop in blood glucose every 5 minutes after delivery, and the expected cumulative drop in blood glucose. The figures below use the Rapid Acting - Adult insulin model in Loop.</p>"},{"location":"operation/algorithm/prediction/#active-insulin","title":"Active Insulin","text":"<p>This figure shows that 2 units of insulin are given initially, and the corresponding active insulin (i.e., insulin on board IOB) decays according to the curve below.</p> <p></p> <p>The active insulin at any time is the product of original insulin delivered and the percent of insulin activity remaining. Knowing the expected active insulin over the next 6 hours, and the insulin sensitivity factor (50 mg/dL, in this case), Loop can calculate the expected drop in blood glucose from that dose of insulin as shown in the figure below.</p> <p></p> <p>NOTE: ISF is also a function of time, which means if the user\u2019s scheduled ISF changes during the insulin activity time, it will change the expected drop in blood glucose due to the insulin effect.</p>"},{"location":"operation/algorithm/prediction/#expected-change-in-blood-glucose","title":"Expected Change in Blood Glucose","text":"<p>Lastly, taking the first derivative (i.e., the rate of change) of the cumulative drop in the blood glucose curve yields the expected change in blood glucose over the insulin activity duration. For each dose of insulin given, Loop calculates the expected discrete drop in blood glucose at each 5-minute period for the insulin activity duration, as shown below.</p> <p></p>"},{"location":"operation/algorithm/prediction/#insulin-effect-on-blood-glucose","title":"Insulin Effect on Blood Glucose","text":"<p>For this example, assuming a user\u2019s blood glucose was 205 mg/dL at the time of insulin delivery, Loop would predict a drop in blood glucose due to the two units delivered at 12 pm as shown in the figure below.</p> <p></p>"},{"location":"operation/algorithm/prediction/#scheduled-basal-rates","title":"Scheduled Basal Rates","text":"<p>In traditional basal/bolus pump therapy, basal rates are set to accommodate the user's endogenous glucose production (EGP) that causes blood glucose to rise. If a user's basal settings were exactly right in traditional pump therapy, the user would have perfectly flat blood glucose all day, all other factors being equal.</p> <p>In reality, people with type 1 diabetes, and their caregivers, know that basal settings are never exactly right. Every day is a little different, and a myriad of factors that affect blood glucose (e.g., including stress, hormones, sleep, etc.) may affect insulin needs. Some people have different basal profiles to accommodate these variations. Some people regularly tune and adjust their basal rates, and/or do so at their endocrinology clinic visits.</p> <p>Since the Loop algorithm assumes that the user-set basal rates are correct, it calculates the effect of insulin relative to scheduled basal rates. If basal rates are not entirely correct, Loop can compensate a bit through the retrospective correction and blood glucose momentum effects, discussed later in this page.</p> <p>The insulin delivery chart below displays a bar-graph history of the temporary basal rates enacted by Loop. The display is relative to the scheduled basal rates entered in the Loop settings. A rate displayed in this chart as +0 would indicate that no temporary basal rate was set and that the basal rate being delivered was the scheduled basal rate. Positive values indicate a temporary basal rate was set above the scheduled basal rate (i.e., more insulin delivered), and negative values indicate that a temporary basal rate was set below the scheduled basal rate (i.e., less insulin delivered).</p> <p></p> <p>For example, if the user\u2019s scheduled basal rate is 1 U/hr, and Loop gives a temporary basal rate of 3 U/hr, then it will calculate the expected drop in blood glucose due to +2 U/hr of insulin.</p> <p>Similarly if Loop sets a temporary basal rate of 0 U/hr for 1 hour, then the insulin effect will also be relative to the current scheduled basal rate of 1 U/hr, and Loop would predict the user\u2019s blood glucose to increase by the amount of change from -1 U/hr of insulin. If the user\u2019s ISF is 50 mg/dL, then Loop would predict blood glucose to rise 50 mg/dL over the insulin activity duration (6 hours).</p> <p>Here is a real-world example where Loop is setting many temporary basal rates over the course of the day. The light orange bars are the temporary basal rates delivered and the solid orange line is the active insulin at any given time during the day.  </p> <p></p>"},{"location":"operation/algorithm/prediction/#total-insulin-effect-combining-boluses-and-temporary-basal-rates","title":"Total Insulin Effect (combining boluses and temporary basal rates)","text":"<p>Loop will combine or stack the active insulin of all the discrete (individual) boluses and temporary basal rates over the past insulin activity duration (6 hours), to predict the active insulin for the next 6 hours. As demonstrated above, using the predicted active insulin Loop can predict the blood glucose drop over the next 6 hours.</p> <p>Lastly, the combined effect of bolus and basal insulin are visually represented for the user by Loop\u2019s insulin charts:</p> <p></p> <p>The insulin effect can be expressed mathematically:</p> \\[ \\Delta BG_{I}[t] = ISF[t] \\times IA[t] \\] <p>where BG is the expected change in blood glucose with the units (mg/dL/5min), ISF is the insulin sensitivity factor (mg/dL/U) at time t, and IA is the insulin activity (U/5min) at time t. Insulin activity can also be thought of as a velocity or rate of change in blood glucose due to insulin. The insulin activity accounts for the EGP and any active insulin from basals and boluses.</p>"},{"location":"operation/algorithm/prediction/#carbohydrate-effect","title":"Carbohydrate Effect","text":"<p>Carbohydrates will raise blood glucose, but the speed and degree to which they impact blood glucose are dependent on the type of carbohydrates. High glycemic index (GI) carbohydrates will raise blood glucose quickly over a shorter time, whereas low GI foods will raise blood glucose more slowly over a longer period. Foods like candy, juice, and fruits tend to be high GI foods, while pizza, burritos, and quesadillas are usually lower GI foods. Digestion issues like gastroparesis may also contribute to variations in carbohydrate absorption.</p> <p>Because carbohydrate absorption can be quite variable, Loop has a model that dynamically adjusts the expected remaining time of carbohydrate absorption. To start with, Loop allows the user to input a rough guess of how long they think the food or drink will take to absorb. The user\u2019s guess is used as a middle of the road estimate, and Loop\u2019s algorithm will shorten or lengthen it based on observed blood glucose change.</p> <p>For all carbohydrate entries, Loop assumes carbohydrates will not start absorbing for 10 minutes, so there is a 10-minute period of no absorption that is modeled prior to the absorption modeled in the next sections.</p>"},{"location":"operation/algorithm/prediction/#linear-carbohydrate-absorption","title":"Linear Carbohydrate Absorption","text":"<p>Loop takes a conservative view of how fast the remaining carbohydrates will absorb.  Because it is safer to under-deliver insulin for long-duration meals, Loop starts out at a minimum rate of absorption based on extending the entered carbohydrate duration by 50%. Said another way, the minimum carbohydrate absorption rate is the total number of grams of carbohydrates over 150% of the entered duration.</p> <p>Using this initial minimum absorption rate, the remaining carbohydrates are modeled to absorb linearly. For example, if the user enters a 72g carbohydrate meal, and selects an estimated absorption time of 4 hours, then Loop will forecast a 12g/hr absorption rate for the next 6 hours. This rate can be termed the minimum absorption rate, which can be represented mathematically as:</p> \\[ MAR[t] = \\frac{CA[t]}{1.5 \\times d} \\] <p>where MAR is the minimum absorption rate (g/hr), CA is the number of carbohydrates (g) and d is the expected duration (hr) it will take the carbohydrates to absorb.</p>"},{"location":"operation/algorithm/prediction/#dynamic-carbohydrate-absorption","title":"Dynamic Carbohydrate Absorption","text":"<p>The linear model above is modulated by an additional calculation that uses recently observed blood glucose data to estimate how fast carbohydrates have been absorbing. The expected change in blood glucose due to insulin effects alone is compared to the actual observed changes in blood glucose. This difference is termed the insulin counteraction effect (ICE):</p> \\[ ICE[t] = OA[t] + IA[t] \\] <p>where, ICE (mg/dL/5 min) is the insulin counteraction effect, OA is the observed activity (mg/dL/5min) or observed change in blood glucose at time t, and IA is the insulin activity (mg/dL/5min).</p> <p>Insulin counteraction effects are caused by more than just carbohydrates, and can include exercise, sensitivity changes, or incorrectly configured insulin delivery settings (e.g., basal rate, ISF, etc.). However, since the effect of carbohydrates is often dominant (after insulin), Loop can still make useful ongoing adjustments to its carbohydrate model by assuming that the increase in blood glucose is mainly carbohydrate absorption in the period following recorded meal entries.  </p> <p>The insulin counteraction effect is converted into an estimated carbohydrate absorption amount by using the current carbohydrate-to-insulin ratio and the insulin sensitivity factor at the time of the recorded meal entry.</p> \\[ AC[t] = ICE[t] \\times \\frac{CIR[t]}{ISF[t]} \\] <p>where AC is the number of carbohydrates absorbed (g/5min), ICE is the insulin counteraction effect, CIR is the carbohydrate-to-insulin ratio (g/U), and ISF is the insulin sensitivity factor (mg/dL/U) at time t.</p> <p>If multiple meal entries are active (i.e., still absorbing), the estimated absorption is split between each carbohydrate entry in proportion to each carbohydrate entry\u2019s minimum absorption rate. For example, if 72g carbohydrates with an expected absorption time of 4 hours was consumed at 12 pm, and another 72g of carbohydrates with an expected absorption time of 2 hours was consumed at 3 pm, then the minimum absorption rate (see MAR equation above) would be 12 g/hr and 6 g/hr respectively, or 1 g/5min and 0.5 g/5min.</p> \\[ MAR[t = 12pm] = \\frac{ 72g }{ 1.5 \\times 4hr } = 12 \\frac{ g }{ hr } = 1 \\frac{ g }{ 5min } \\] \\[ MAR[t = 3pm] = \\frac{ 72g }{ 1.5 \\times 2hr } = 6 \\frac{ g }{ hr } = 0.5 \\frac{ g }{ 5min } \\] <p>Examining just the simple linear carbohydrate effect of these two meals:</p> <p></p> <p>If we further expand this example, by assuming the following at 4pm:</p> <ul> <li>that there are still carbohydrates left to be absorbed from both meals,</li> <li>that the estimated insulin counteraction effect (ICE) is \\(+15 \\frac{mg/dL}{5min}\\), and</li> <li>the user\u2019s CIR is \\(10 \\frac{g}{U}\\) and the ISF is \\(50 \\frac{mg/dL}{U}\\),</li> </ul> <p>then the estimated amount of carbohydrates absorbed at 4pm would be 3g:</p> \\[ AC[t = 4pm] = 15 \\frac{mg/dL}{5min} \\times \\frac{10 \\frac{g}{U}}{50 \\frac{mg/dL}{U}} = 3 \\frac{g}{5min} \\] <p>Those 3g of carbohydrates would then be split amongst the meals proportional to their minimum absorption rates:</p> \\[ \\text{Proportion to Meal1} = \\frac{MAR_{meal1}}{MAR_{meal1} + MAR_{meal2}} = \\frac{12}{12+6}=\\frac{2}{3} = 66.6\\% \\] \\[ \\text{Proportion to Meal2} = \\frac{MAR_{meal2}}{MAR_{meal1} + MAR_{meal2}} = \\frac{6}{12+6}=\\frac{1}{3} = 33.3\\% \\] <p>resulting in 2g of absorption being attributed to Meal 1 and 1g attributed to Meal 2.</p>"},{"location":"operation/algorithm/prediction/#minimum-carbohydrate-absorption-rate","title":"Minimum Carbohydrate Absorption Rate","text":"<p>If the estimated carbohydrate absorption of a meal entry is less than what would have been absorbed using the minimum absorption rate, then the minimum absorption rate is used instead. This is to ensure that meal entries expire in a reasonable amount of time.</p>"},{"location":"operation/algorithm/prediction/#modeling-remaining-active-carbohydrates","title":"Modeling Remaining Active Carbohydrates","text":"<p>After the estimated absorbed carbohydrates have been subtracted from each meal entry, the remaining carbohydrates (for each entry) are then forecasted to decay or absorb using the minimum absorption rate. Loop uses this forecast to estimate the effect (active carbohydrates, or carbohydrate activity) of the remaining carbohydrates. The carbohydrate effect can be expressed mathematically using the terms described above:</p> \\[ \\Delta BG_{C}[t] = MAR[t] \\times \\frac{ISF[t]}{CIR[t]} \\]"},{"location":"operation/algorithm/prediction/#retrospective-correction-effect","title":"Retrospective Correction Effect","text":"<p>The retrospective correction effect allows the Loop algorithm to account for effects that are not modeled with the insulin and carbohydrate effects, by comparing historical predictions to the actual blood glucose.</p> <p>In addition to the modeled effects of insulin and carbohydrates, there are many other factors that affect blood glucose (e.g., exercise, stress, hormones, etc.). Many of these effects are active for a period of time. By observing its own forecast error, Loop can estimate the magnitude of these effects and, by assuming that they will continue for some short period of time, incorporate them into the forecast to improve forecast accuracy.</p> <p>To do this, Loop calculates a retrospective forecast with a start time of 30 minutes in the past, ending at the current time. Loop compares the retrospective forecast to the actual observed change in blood glucose, and the difference is used to determine a blood glucose velocity or rate of difference:</p> \\[ BG_{vel}=\\frac{1}{6} \\times \\left(BG[0] - RF[0]\\right) \\] <p>where BGvel is a velocity term (mg/dL per 5min) that represents the average blood glucose difference between the retrospective forecast (RF) and the actual blood glucose (BG) over the last 30 minutes. This term is applied to the current forecast from the insulin and carb effects with a linear decay over the next hour. For example, the first forecast point (t=5) is 100% of this velocity, the forecast point one-half hour from now is adjusted by approximately 50% of the velocity, and points from one hour or more in the future are not affected by this term.</p> <p>The retrospective correction effect can be expressed mathematically:</p> \\[ \\Delta BG_{RC}[t] = BG_{vel} \\times \\left(1-\\frac{t-5}{55}\\right) \\] <p>where BG is the predicted change in blood glucose with the units (mg/dL/5min) at time t over the time range of 5 to 60 minutes, and the other term gives the percentage of BGvel that is applied to this effect.</p> <p>The retrospective correction effect can be illustrated with an example: if the BGvel over the past 30 minutes was -10 mg/dL per 5min, then the retrospective correction effect over the next 60 minutes would be as follows:</p> Minutes relative to now (t=0) Percent of \\(BG_{vel}\\) Applied to RC Effect \\(\\Delta BG_{RC}[t]\\) 5 100% -10 10 91% -9.1 15 82% -8.2 20 73% -7.3 25 64% -6.4 30 55% -5.5 35 45% -4.5 40 36% -3.6 45 27% -2.7 50 18% -1.8 55 9% -0.9 60 0% 0 <p>The example below that shows the retrospective correction effect when the BGvel over the past 30 minutes was -3 mg/dL/5min.</p> <p></p>"},{"location":"operation/algorithm/prediction/#blood-glucose-momentum-effect","title":"Blood Glucose Momentum Effect","text":"<p>The blood glucose momentum effect incorporates a prediction component based on the assumption that recent blood glucose trends tend to persist for a short period of time. In other words, the best predictor of the future is the recent past.</p> <p>The blood glucose momentum portion of the algorithm gives weight or importance to recent blood glucose to improve the near-future forecast. Loop calculates the slope of the last 3 continuous CGM readings (i.e., the last 15 minutes) using linear regression. Using multiple points helps filter out noise in the CGM data while still responding fast to changing situations. That momentum slope (Mslope) is the approximate or average rate of change over the last 15 minutes, though it is normalized to 5 minutes so that the units are (mg/dL/5min).</p> <p>The momentum slope is then blended into the next 20 minutes of predicted blood glucose from the other effects (i.e., insulin, carbohydrates, and retrospective correction effects). This, in essence, makes the next 20 minutes of blood glucose prediction more sensitive to recent blood glucose trends. The blending of the recent trend slope into the next 20 minutes is weighted so that the first prediction point (5 minutes into the future) is highly influenced by the slope, and the influence of the slope gradually decays over the 20 minute time period. The momentum effect can be expressed mathematically as:</p> \\[ \\Delta BG_{M}[t] = M_{slope} \\times \\left( 1 - \\frac{t-5}{15} \\right) \\] <p>NOTE: The term \\(\\left(\\frac{t-5}{15}\\right)\\) is also applied to the combined insulin, carbohydrates, and retrospective correction effects to get the delta blood glucose prediction.</p> <p>The momentum effect can be illustrated with an example: if the last 3 blood glucose readings were 100, 103, and 106 mg/dL, then the slope would be 3 mg/dL per 5 minutes (0.6 mg/dL per minute). The amount of that recent trend or slope applied to the next 20 minutes of predictions (i.e., the next 4 predictions from the other effects) is roughly 100% (3 mg/dL per 5 min) at 5 minutes, 66% (2 mg/dL per 5 min) at 10 minutes, 33% (1 mg/dL per 5 min) at 15 minutes, and 0% (0 mg/dL per 5 min) at 20 minutes.</p> <p>Also, if the combined effect from the insulin, carbohydrates, and retrospective correction is assumed to be a constant 6 mg/dL/5min over the next 20 minutes, then the expected overall effect and the predicted blood glucose can be calculated as follows.</p> Minutes relative to now (t=0) Percent of Slope Applied to Momentum Effect Momentum Effect (3mg/dL/5min) Percent of Other Effects Applied Overall Effect Other Effects (Insulin, Carbohydrate, and Retrospective Correction) Overall Effect (mg/dL/5min) Predicted BG (mg/dL) 5 100% 3 0 6 3 109 10 66.6% 2 33.3%&lt; 6 4 113 15 33.3% 1 66.6% 6 5 118 20 0% 0 100% 6 6 124 <p>This example is illustrated in the figure below.</p> <p></p> <p>It is also worth noting that Loop will not calculate blood glucose momentum in instances where CGM data is not continuous (i.e., must have at least three continuous CGM readings to draw the best-fit straight line trend). It also will not calculate blood glucose momentum when the last three CGM readings contain any calibration points, as those may not be representative of true blood glucose momentum trends.</p>"},{"location":"operation/algorithm/prediction/#predicting-glucose","title":"Predicting Glucose","text":"<p>As described in the momentum effect section, the momentum effect is blended with the insulin, carbohydrate, and retrospective correction effects to predict the change in blood glucose:</p> \\[ \\Delta BG[t] = \\Delta BG_{M}[t] + \\left(\\Delta BG_{I}[t] + \\Delta BG_{C}[t]+ \\Delta BG_{RC}[t] \\right) \\times min\\left(\\frac{t-5}{15}, 1\\right) \\] <p>Lastly, the forecast or predicted blood glucose BG at time t is the current blood glucose BG plus the sum of all blood glucose effects BG over the time interval [t5, t]:</p> \\[ \\widehat{BG}[t] = BG[t_{o}] + \\sum_{i=5}^{t} \\Delta BG[t_{o+i}] \\] <p>Each individual effect along with the combined effects are illustrated in the figure below. As shown, blood glucose is trending slightly upwards at the time of the prediction. Therefore, the blood glucose momentum effect\u2019s contribution is pulling up the overall prediction from the other three effects for a short time. Retrospective correction is lowering the current prediction, indicating that the recent rise in blood glucose was not as great as had been predicted in the recent past.</p> <p></p>"},{"location":"operation/algorithm/prediction/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/algorithm/temp-basal/","title":"Automated Adjustments","text":""},{"location":"operation/algorithm/temp-basal/#calculated-dose","title":"Calculated Dose","text":"<p>The Loop algorithm takes one of four actions depending upon the eventual blood glucose, predicted glucose, target range and glucose safety threshold when Closed Loop operation is enabled.</p> <p>The recommended insulin dose (positive or negative) is calculated first, then the Temp Basal or Automatic Bolus to be enacted is modified based on the recommended dose, dosing strategy, maximum Temp Basal and maximum Bolus settings. The automated dosing (increase or decrease) is updated with every CGM value - typically every 5 minutes.</p> <p>Dosing Strategy: Temp Basal Only</p> <p>All temporary basal rate commands are issued for 30 minutes, however they may be updated (re-issued) every 5 minutes. Said another way, Loop may enact a new temporary basal rate every 5 minutes. But, if communication with the pump is lost, the last issued temporary basal rate will last for at most 30 minutes before the pump reverts to the user\u2019s scheduled basal rates.</p> <p>Dosing Strategy: Automatic Bolus</p> <p>If the Looper has selected Automatic Bolus Dosing Strategy and an increase in insulin dose is recommended, then the Four Actions discussion below applies to the automatic bolus decision.</p>"},{"location":"operation/algorithm/temp-basal/#no-automatic-dosing","title":"No Automatic Dosing","text":"<p>If glucose is entirely below the correction range but above glucose safety level, no automatic increase in insulin delivery will be enacted. The Looper can tap on the manual bolus tool and get a recommendation, but no automatic bolus or high temp basal will be issued automatically until the glucose level is higher than the minimum value of the correction range.</p> <p>The Pre-Meal button or a named override can be configured with a correction range lower than the scheduled correction to assist in getting insulin delivered automatically after meals.</p>"},{"location":"operation/algorithm/temp-basal/#four-possible-actions","title":"Four Possible Actions","text":"<p>Loop implements one of four possible temporary basal actions: decrease, increase, suspend, or resume a scheduled basal rate.</p> <p>Automatic Bolus</p> <p>If you are using an Automatic-Bolus Dosing Strategy in closed Loop mode and Loop predicts you need an increase in insulin; this increase is provided as a percentage of the recommended bolus instead of an increased temporary basal. The default percentage is 40%.</p>"},{"location":"operation/algorithm/temp-basal/#decrease-basal-rate","title":"Decrease Basal Rate","text":"<p>If the eventual blood glucose is less than the correction range and all of the predicted glucose values are above the suspend threshold, then Loop will issue a temporary basal rate that is lower than the current scheduled basal rate to bring the eventual blood glucose up to the correction target.</p> <p></p>"},{"location":"operation/algorithm/temp-basal/#increase-basal-rate","title":"Increase Basal Rate","text":"<p>If the eventual blood glucose is greater than the correction range and all of the predicted glucose values are both above the suspend threshold and equal to or above the correction range, then Loop will issue a temporary basal rate that is higher than the current basal rate to bring the eventual blood glucose down to the correction target.</p> <p></p>"},{"location":"operation/algorithm/temp-basal/#suspend-basal-rate","title":"Suspend Basal Rate","text":"<p>If the minimum predicted blood glucose goes below the suspend threshold, then Loop will issue a temporary basal rate of zero units per hour, regardless of the eventual blood glucose.</p> <p></p>"},{"location":"operation/algorithm/temp-basal/#resume-basal-rate","title":"Resume Basal Rate","text":"<p>There are three situations where the Loop algorithm will resume the current scheduled basal rate.</p> <p>If the eventual blood glucose is within the correction range, and all of the predicted glucose values are above the suspend threshold, then Loop will resume the current scheduled basal rate.</p> <p></p> <p>If the eventual blood glucose is above the correction range, and the predicted glucose values have a temporary excursion below the correction range but still above the suspend threshold, then Loop will resume the current scheduled basal rate.</p> <p></p> <p>If the Loop algorithm does not have ALL of the data it needs to make a prediction, it will let the remaining temporary basal rate run its duration (maximum of 30 minutes), and then the basal rate will default back to the current scheduled basal rate, thus returning to the same therapy pattern that they would receive using a traditional insulin pump.</p>"},{"location":"operation/algorithm/temp-basal/#determining-the-temporary-basal-rate","title":"Determining the Temporary Basal Rate","text":"<p>To determine the corrective temporary basal rate to implement, Loop calculates a \u201cdose\u201d in the same way doses are calculated in both open-loop and traditional insulin pump therapy. It's also the same math many people on multiple-daily injection therapy use. The benefit of Loop (and all other close-loop algorithms) is that it does this math every 5 minutes, and is far less prone to error than humans doing the math. Loop also does its math based on predicting into the future, which traditional pumps and humans, do not always have the time or inclination to do.</p> <p>The amount of insulin needed, or dose, is calculated using the desired reduction in blood glucose and the user\u2019s ISF. For the Loop algorithm, the desired reduction in blood glucose is the delta between the eventual blood glucose and the correction target:</p> \\[ \\mathit{dose} = \\frac{\\mathit{BG_{eventual}} - \\mathit{BG_{target}}}{\\mathit{ISF}} \\] <p>Loop Dose Calculation</p> <p>A major difference between traditional pump therapy and how the Loop calculates dose is that in pump therapy the current blood glucose is used to estimate the dose, whereas in the Loop algorithm the eventual and minimum blood glucose predictions are also used in determining dosing decisions.</p> <p>Loop then converts the dose into a basal rate using the Loop\u2019s temporary basal rate duration of 30 minutes:</p> \\[ \\mathit{BR_correction} = \\frac{\\mathit{dose}}{30 \\mathrm{min}} = \\frac{\\mathit{dose}}{\\frac{1}{2} \\mathrm{hr}} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} \\] <p>where \\(\\mathit{BR_correction}\\) is the basal rate ( \\(\\mathrm{\\frac{U}{hr}}\\) ), which is the amount of insulin needed over the next 30 minutes to bring the eventual blood glucose to the correction target. The basal rate, however, is the amount of basal rate needed beyond the user\u2019s scheduled basal rate. As such, the required basal rate can be determined by:</p> \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} \\] <p>Finally, Loop compares the \\(BR_{required}\\) with the user-specified maximum temporary basal rate \\(BR_{max}\\) setting to determine the temporary basal to issue:</p> \\[ \\mathit{BR_temp} = \\max(\\min( \\mathit{BR_required}, \\mathit{BR_max} ), 0) \\] <p>After running the temporary basal calculation described above, Loop checks whether there is already an appropriate basal running with at least 10 minutes remaining. If so, Loop will not reissue the temporary basal. However, if the recommended temporary basal differs from the currently running temporary basal \u2014 or the current scheduled basal if no temporary is running \u2014  then Loop will replace the current basal rate with the recommended temporary basal rate.</p> <p>As mentioned at the beginning of this section, the process of determining whether a temporary basal should be issued is repeated every 5 minutes.</p>"},{"location":"operation/algorithm/temp-basal/#temporary-basal-rate-calculation-example","title":"Temporary Basal Rate Calculation Example","text":"<p>To illustrate how the Loop calculates the temporary basal rate to issue, consider the calculation for the following scenario:</p> <ul> <li>\\(\\mathit{BG_eventual} = 200 \\mathrm{\\frac{mg}{dL}}\\)</li> <li>\\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\)</li> <li>\\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\)</li> <li>\\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\)</li> <li>\\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\) (set by user in Loop)</li> </ul> <p>First, calculate the dose:</p> \\[ dose = \\frac{\\mathit{BG_eventual} - \\mathit{BG_target}}{\\mathit{ISF}} = \\frac{200 \\mathrm{\\frac{mg}{dL}} - 100 \\mathrm{\\frac{mg}{dL}}}{50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}} = 2 \\mathrm{U} \\] <p>Then, convert the dose into a basal rate to be issued for the next 30 minutes:</p> \\[ \\mathit{BR_correction} = \\frac{2 \\times \\mathit{dose}}{\\mathrm{hr}} = \\frac{2 \\times 2 \\mathrm{U}}{\\mathrm{hr}} = 4 \\mathrm{\\frac{U}{hr}} \\] <p>Next, calculate the required basal rate:</p> \\[ \\mathit{BR_required} = \\mathit{BR_scheduled} + \\mathit{BR_correction} = 1 \\mathrm{\\frac{U}{hr}} + 4 \\mathrm{\\frac{U}{hr}} = 5 \\mathrm{\\frac{U}{hr}} \\] <p>Lastly, compare the required basal rate to the maximum temporary basal rate, and find that Loop will enact a temporary basal rate of \\(5 \\mathrm{\\frac{U}{hr}}\\) for 30 minutes since this temporary basal rate is below the maximum temporary basal rate of \\(6 \\mathrm{\\frac{U}{hr}}\\), which was set by the user in Loop app settings.</p> \\[ \\mathit{BR_{temp}} = \\max(\\min( \\mathit{BR_{required}}, \\mathit{BR_max}), 0) = \\max(\\min( 5 \\mathrm{\\frac{U}{hr}}, 6 \\mathrm{\\frac{U}{hr}} ), 0) = 5 \\mathrm{\\frac{U}{hr}}\\]"},{"location":"operation/algorithm/temp-basal/#more-examples","title":"More Examples","text":"<p>Consider the following values as fixed values for our calculation:</p> <ul> <li>\\(\\mathit{BG_target} = 100 \\mathrm{\\frac{mg}{dL}}\\)</li> <li>\\(\\mathit{ISF} = 50 \\mathrm{\\frac{\\frac{mg}{dL}}{U}}\\)</li> <li>\\(\\mathit{BR_scheduled} = 1 \\mathrm{\\frac{U}{hr}}\\)</li> <li>\\(\\mathit{BR_max} = 6 \\mathrm{\\frac{U}{hr}}\\)</li> </ul> <p>The table below shows the \\(\\mathit{BR_temp}\\) for different \\(\\mathit{BG_eventual}\\). \\(\\mathit{BR_temp}\\) should never turn negative and should never be greater than \\(\\mathit{BR_max}\\).</p> \\(\\mathit{BG_eventual}\\) \\(\\mathrm{(\\frac{mg}{dL}})\\) \\(\\mathit{dose}\\) \\(\\mathrm{(U)}\\) \\(\\mathit{BR_correction}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_required}\\) \\(\\mathrm{(\\frac{U}{hr}})\\) \\(\\mathit{BR_temp}\\) \\(\\mathrm{(\\frac{U}{hr})}\\) 300 4.0 8.0 9.0 6.0 200 2.0 4.0 5.0 5.0 100 0.0 0.0 1.0 1.0 90 -0.2 -0.4 0.6 0.6 75 -0.5 -1.0 0.0 0.0 50 -1.0 -2.0 -1.0 0.0"},{"location":"operation/algorithm/temp-basal/#algorithm-section-menu","title":"Algorithm Section Menu","text":"<ul> <li>Algorithm Overview<ul> <li>Bolus Recommendations</li> <li>Blood Glucose Prediction</li> <li>Temp Basal Adjustments</li> </ul> </li> </ul>"},{"location":"operation/features/battery/","title":"MDT Pump Battery","text":""},{"location":"operation/features/battery/#medtronic-pump-battery","title":"Medtronic Pump Battery","text":"<p>One common confusion point for new Loop users is how to interpret their pump's battery levels and whether they need to change their pump batteries based on which pieces of information.</p>"},{"location":"operation/features/battery/#discharge-curves","title":"Discharge Curves","text":"<p>There are generally two different types of AAA batteries that we use in these Medtronic pumps; alkaline or lithium.</p> <p>To understand pump battery levels, you first need to know a little about battery discharge curves.  It's not a hard concept...basically how a battery dies over time as it is used or sits in a drawer.  More technically said, a battery discharge curve is the measure of volts that a battery puts out over time.  Batteries start at a higher voltage output and slowly that voltage output degrades over time (or use) until the battery no longer provides enough \"ummph\" to keep the electronic gadget going.  BUT, alkaline batteries and lithium batteries have different discharge curves due to the chemistry inside them, and the curves can be slightly different depending on the environment (temperature) and battery manufacturer.</p> <p>Alkaline batteries have a relatively steady voltage drop over time, as shown below.  Notice the shape of the curve has a significant amount of time in the 1.3 to 1.2 volts range, and a relatively smooth decline to about 1.2 volts.</p> <p></p> <p>Lithium batteries have a much steadier voltage output over time, as shown below.  Notice how the shape of the curve is relatively flat for a large portion of the battery life before suddenly off around 1.3 volts.</p> <p></p> <p>What does the above information mean in terms of Looping?  A lithium battery at 1.3v is going to have a much quicker time to death than an alkaline battery sitting at 1.3v.  You might only get a couple of hours of looping left when a lithium battery is at 1.3v, but an alkaline battery at 1.3v might go for several more days.  So when we talk about setting alarm levels in either system, your battery type is an important consideration.</p>"},{"location":"operation/features/battery/#medtronic-pump-battery-level-indicator","title":"Medtronic Pump Battery Level Indicator","text":"<p>If you read Medtronic's literature, it will tell you to use Energizer alkaline batteries in their pumps.  Why would that be?  Hint: the answer doesn't mean that Duracell batteries are inherently worse than Energizer or that lithium batteries won't work in Medtronic pumps.</p> <p>The answer is all about the accuracy of their little pump battery level indicator on their pump's screen.  Medtronic calibrated their pump battery level indicator to:</p> <ul> <li>Energizer alkaline batteries</li> <li>Normal (non-Loop) uses</li> <li>Temperatures between 37\u00b0F (3\u00b0C) to 104\u00b0F (40\u00b0C).</li> </ul> <p>In other words, Medtronic ran experiments to see exactly how long an Energizer alkaline battery will last in normal pump use and made their own discharge curve.  They programmed their pump battery level indicator to change from 4 bars to 3 bars to 2 bars to 1 bar based on that particular discharge curve.</p> <p>However, Loop users are slightly more demanding on the pump's battery/voltage than simply delivering insulin.  We are also asking for the pump to perform radio communications, in addition to delivering insulin.  Those radio communications need a slightly higher voltage than the typical \"normal\" pump use.  So while a non-Looper might be ok running their pump until a voltage of about 1.12 for insulin delivery, radio communications might stop at a voltage output of about 1.17.  If you experiment with your Looping pump, you'll find Loop will turn red from failed pump comms before the pump actually fails at insulin delivery.  This difference between \"failure\" voltages needs to be considered when determining how much useful battery life is left for a pump battery.</p> <p>In summary, that little pump battery indicator on the Medtronic pump screen is ONLY useful if you are:</p> <ul> <li>not using the pump for Looping,</li> <li>using Energizer alkaline batteries, and</li> <li>in the temperature environment similar to their testing.</li> </ul> <p>Loop users should not rely on their Medtronic pump screen's pump battery indicator, and instead use the Loop's pump battery level indicator.</p>"},{"location":"operation/features/battery/#loops-pump-battery-level-indicator","title":"Loop's Pump Battery Level Indicator","text":"<p>Keeping the information about battery discharge curves in mind, Loop developers tested various battery brands and types to develop discharge curves for Loop users.  These discharge curves form the basis of the pump battery level indicator found in the top right of the Loop's main display screen and the pump battery notifications provided by the Loop app.  The pump battery level indicator will also report in %.</p> <ul> <li>For x23 and x54 model users, the Loop's pump battery level will move in 25% increments.</li> <li>For x15 and x22 model users, the Loop's pump battery level will move in discrete % increments.</li> </ul> <p>Based on the battery type selected and the pump model being used, the Loop's pump battery level notifications are designed to give the user about 8 hours of notice before pump communications are likely to fail.  The Loop user should have some additional time after pump comms fail before actual insulin delivery would stop.</p>"},{"location":"operation/features/battery/#nightscout-pump-battery-display","title":"Nightscout Pump Battery Display","text":"<p>The Nightscout information regarding pump battery levels will depend on pump model being used.</p> <ul> <li>If you use an x23 or x54 pump and MySentry, the pump levels are reported as a percent to NS, because that's how MySentry reports the data to Loop.  The packets use 100%, 75%, 50%, and 25% increments, and the Loop's main display matches the NS pump display.</li> <li>If you use an x22 or x15 pump, the pump levels are reported as voltage readings to NS because Loop has to specifically request the voltage reading from the pump.  The Loop's main display will show pump battery level as discrete %, not the individual voltage measurement.</li> <li>No matter what pump you are using, you can always get the current pump battery's voltage by using the RileyLink's <code>Read Pump Status</code> command.</li> <li>The extra communications effort for non-MySentry model pumps will mean slightly shorter battery life vs. MySentry model pumps.</li> </ul>"},{"location":"operation/features/battery/#nightscout-pump-battery-alarms","title":"Nightscout Pump Battery Alarms","text":"<p>The Nightscout alarms are based on the Heroku settings that you have input specifically.  If you don't specifically set them, Nightscout will use the default settings for pump battery alerts as shown below:</p> <p></p> <p>Nightscout pump battery levels, if you leave things at default installation, will not trigger alarms.  If however you add a setting of <code>PUMP_ENABLE_ALERTS</code> to <code>true</code>, you will receive pump battery notifications according to the levels shown in the parenthesis above.  For example, your x23 pump is reporting its levels in percent, therefore you'd receive a yellow warning alarm at 30% and an urgent red alarm at 20%.  Your x22 pump however is reporting its levels at voltage readings, therefore you'd receive a warning yellow alarm at 1.35v and an urgent red alarm at 1.30v.</p> <p>Are the default NS alarm levels going to work for you?  The answer depends on what type of battery level you are using, what model pump you are using, and how much advance notification you want to receive before needing to change a pump battery.  There is a bit of personal preference and experimentation to finding what works for you.</p> <p>For x22 or x15 pump users, the NS alert settings that may need to be adjusted are the ones based on voltage.</p> <p>Generally speaking, for a x22 or x15 pump using alkaline batteries, the default NS alarm levels will be too early to be useful and lead you to change out your battery too frequently.  Alkaline batteries can go to low 1.2s or high 1.1s before Looping starts to have communication problems.  How much lower than the default voltage 1.35/1.30 alarm levels you want to go will depend on how far in advance you want to be warned about an upcoming battery change.</p> <p>If however, you are using a x22 or x15 pump with lithium batteries, the default 1.35v/1.30v alarm levels may be completely appropriate.  Remember how the lithium battery curves at the start of this discussion died off quickly around 1.3v?  You won't get hardly any heads-up notice for a lithium battery if you set the alarm below 1.3v.</p> <p>For x23 or x54 pump users, the NS alert settings that may need to be adjusted are the ones based on percentage settings.</p> <p>Alkaline and lithium batteries should have automatically had their percentage-remaining based on the correct battery type in your Loop settings.  So, generally speaking the default NS alert levels don't generally need adjusting.  However, if you are using lithium batteries, the drop off between 75% to 25% can be quite dramatic and not be easy to anticipate (especially if the drop happens overnight).</p> <p>As an alternative method of tracking pump battery changes, you could use the insulin age (IAGE) plug-in to anticipate your pump battery changes as well.  For example, after tracking pump battery life on my 723 using energizer batteries lithium batteries for the last several months, I know that we get about 15 days plus a handful of hours.  The amount of hours more beyond 15 days varies depending on how much we've interacted with the pump buttons directly, whether we've looped the full 15-days solid, and if the pump has been in extreme weather (cold weather can sap pump battery life).  By tracking the pump battery changes with NS's careportal \"insulin cartridge change\", I can see in advance if we are nearing an overnight on a 15 day battery and decide to change batteries before overnight to prevent any middle-of-night battery issues.</p> <ul> <li>Lithium batteries will get a significantly longer life than an alkaline battery.</li> <li>Experiment and track your particular pump model and battery type to understand what NS settings will work best for you.</li> <li>Do not rely on the pump's on-screen pump battery indicator, especially when using lithium batteries.</li> </ul>"},{"location":"operation/features/bolus/","title":"Bolus","text":""},{"location":"operation/features/bolus/#bolus","title":"Bolus","text":"<p>This page was updated with information for Loop 3.</p>"},{"location":"operation/features/bolus/#loop-2-and-3-differences","title":"Loop 2 and 3 Differences","text":"<p>Most of the information is the same for Loop 2.2.x and Loop 3. </p> <p>Loop 2 and 3 differences:</p> <ul> <li>Bolus Row: <ul> <li>With Loop 3<ul> <li>The Recommended Bolus is provided AND the default for the Bolus is the recommended value</li> <li>If the user taps on the Bolus row, the amount is modified to 0 and the keyboard is opened for entry</li> </ul> </li> <li>With Loop 2.2.x<ul> <li>The Recommended Bolus is provided but the default for the Bolus value is 0</li> <li>If the user taps on the Recommended Bolus row, the recommended amount is transferred to the Bolus row</li> </ul> </li> </ul> </li> <li>Loop 3 uses the setting name of Glucose Safety Limit, which has the same meaning as Suspend Threshold in Loop 2</li> </ul>"},{"location":"operation/features/bolus/#meal-bolus","title":"Meal Bolus","text":"<p>The Meal Bolus screen is entered following a carb entry or edit action, the active button might be Save and Bolus or, if no bolus was recommended, Save without Bolusing. </p> <p>The Save refers to saving the Carb entry or Carb edit that led to this screen in addition to saving the amount that might be bolused. It can also refer to saving a fingerstick value entered in the Meal Bolus screen (Loop 3 only).</p> <p>You can review the carb information at the Meal Entry link.</p> <p>Carbs are Saved in Meal Bolus Screen</p> <p>Carbs are saved when the <code>Save and Bolus</code> or <code>Save without Bolusing</code> button is tapped in Meal Bolus Screen. When the button is tapped, carbs are saved even if the bolus does not go through to the pump.</p> <p>If you see a <code>Bolus Issue</code> notification (Bolus in progress, etc) after saving a carb entry, check the state of Loop carb entries.</p> <p>Do not just add the carbs again.</p>"},{"location":"operation/features/bolus/#accept-recommendation","title":"Accept Recommendation","text":"<p>The graphic below shows the Meal Bolus screen after the user entered carbs and tapped continue:</p> <ul> <li>The left graphic shows a case where a bolus is recommended - tapping on the Save and Deliver button saves the carbs and delivers the bolus</li> <li>The right graphic shows a case where no bolus is recommended - tapping on the Save without Bolusing saves the carbs</li> <li>These graphics are taken from a small phone - the left graphic shows all the information at once whereas the right graphic has an extra information message that requires the user to scroll to see the Recommended Bolus and Bolus rows</li> <li>For both graphics<ul> <li>Active Carbs and Active Insulin are displayed above the Glucose prediction graph - these are accurate at the time this screen is entered (before carbs or bolus are saved)</li> <li>The Bolus Summary is presented below the Glucose prediction graph with three rows:<ul> <li>Carb Entry, the proposed carbs with the time to add the carbs and the absorption time displayed - to modify that information, tap on the &lt; Carb Entry button at upper left</li> <li>Recommended Bolus displays what Loop recommends for that proposed Carb Entry</li> <li>Bolus default display is what Loop recommends, but user can edit that value</li> </ul> </li> </ul> </li> </ul> <p></p> <p>If a CGM entry arrives while in this screen, a Bolus Recommendation Updated modal message will be displayed and must be acknowledged.</p>"},{"location":"operation/features/bolus/#modify-bolus","title":"Modify Bolus","text":"<p>This section is a continuation of the information presented in the Accept Recommendation section above. In the graphic below, the user overrides the recommended bolus.</p> <ul> <li>The left side shows a modified bolus less than the recommended bolus</li> <li>The right side shows a modified bolus greater than the recommended bolus</li> <li>The Glucose prediction graph updates with changes to the Bolus value, giving the user the opportunity to accept or change their proposed value before tapping Save and Deliver</li> <li>At the next Loop cycle, the app modifies insulin delivery based on the saved information<ul> <li>For the example with bolus less than recommended amount:<ul> <li>Loop will NOT begin to automatically increase insulin delivery until the current glucose is above the bottom of the Correction range</li> <li>The recommendation to add insulin when the current glucose is below the Correction Range is only offered as a manual feature and is limited to an amount predicted to maintain glucose above the Safety Threshold</li> </ul> </li> <li>For the example with bolus greater than recommended amount:<ul> <li>Loop will probably issue an automatic temp basal of 0 U/hr</li> <li>This is a common \"super-bolus\" scenario; in other words, \"borrow\" basal for the meal bolus to limit post meal spikes</li> </ul> </li> </ul> </li> <li>Remember - the Glucose prediction is what happens if you Save and Deliver and then no further adjustments are made to insulin delivery by Loop</li> </ul> <p></p>"},{"location":"operation/features/bolus/#manual-or-correction-bolus","title":"Manual (or Correction) Bolus","text":"<p>To start a bolus entry, tap on the double orange triangles (circled below) in the toolbar at the bottom of the Loop status screen.</p> <p></p> <p>The Loop app will open to the Bolus screen. This looks similar to the Meal Bolus screen without the Carb Entry row. Loop considers the Glucose Safety Limit and Predicted Glucose when determining the recommended bolus. </p> <p>In the graphic below, the current glucose is under the Correction Range. Loop allows you to dip below the correction range but its recommended bolus will be limited by the glucose prediction and the Glucose Safety Limit. Check back once your glucose starts to rise and there will probably be a bigger recommendation.</p> <p>This screen behaves differently for Loop 2.2.x and Loop 3. The graphics and instructions on this page are for Loop 3 version. Click on the Loop 2.2.x link above to view the Loop 2 version.</p> <p>When the Bolus screen is entered directly from the toolbar, the button choices are Enter Bolus if none is recommended, Deliver if a value is on the Bolus row or Cancel using the button on the upper left. The user can also tap on the value on the Bolus row to bring up a keyboard to modify that amount. When doing that, the value is automatically set to zero.</p> <p>The two graphics below are examples of manual bolus screens. </p> <ul> <li>In the first graphic, no bolus was recommended<ul> <li>If you tap on the Enter Bolus button at the bottom, it brings up a screen to enable you to type in an amount and then Deliver it. </li> <li>Alternatively, you can tap the 0 amount in the Bolus row and perform the same action as the Enter Bolus button</li> <li>If you do not want to override the recommendation, hit the Cancel button at upper left.</li> </ul> </li> </ul> <p></p> <ul> <li>In the second graphic, a recommended amount is shown<ul> <li>If you tap on Deliver that recommended dose is delivered</li> <li>If you tap on the value on the Bolus row, you can override the amount</li> <li>The amount displayed on the Bolus row is modified to 0 U with the first tap - at that point, you may enter a new value or tap Cancel using the button at upper left of the screen</li> </ul> </li> </ul> <p></p>"},{"location":"operation/features/bolus/#recommended-bolus","title":"Recommended Bolus","text":"<p>Loop updates the glucose prediction every time a new glucose reading is detected, typically every 5 minutes. If Loop predicts your glucose will be above the high end of your Correction Range at the end of the Duration of Insulin Activity (DIA) and the predicted glucose is above the Glucose Safety Threshold, it will provide a Recommended Bolus. Loop will not give an alert when a bolus is being recommended, the bolus entry tool must be clicked to check for one. The Loop pill in Nightscout will display when Loop is recommending a bolus.</p> <ul> <li> <p>If your Dosing Strategy is set to Temp Basal (default)</p> <ul> <li>Loop will provide increased temporary basal rates until it has delivered enough insulin to bring predicted glucose into range</li> <li>The increased temporary basal rates are subject to your Delivery Limits.</li> </ul> </li> <li> <p>If your Dosing Strategy is set to Automatic Bolus</p> <ul> <li>Loop will recalculate the correction bolus at each successive loop interval, i.e., every 5 minutes</li> <li>Loop will then automatically deliver 40% of that new correction value</li> <li>Each automatic bolus is subject to your Delivery Limits</li> </ul> </li> </ul>"},{"location":"operation/features/bolus/#bolus-status-line","title":"Bolus Status Line","text":"<p>Lock Phone During Bolus</p> <p>Once the bolus has started, you should lock your phone to avoid inadvertently cancelling a bolus.</p> <p>When the phone is in portrait mode, a bolus status line will appear below the Heads Up Display when Loop has a bolus in progress. The \"starting bolus\" indicator is shown in the left screenshot above - this is when Loop is communicating with the RileyLink. Once the message has been sent to the RilyLink, even if a response from the pump did not make it back to Loop, the bolused xx of yy with the circle display begins, as shown in the right screenshot above. If you change your mind, just click on the bolus status line while the bolus is in progress to cancel your bolus, as shown in the screenshot below.  (Newer versions of Loop explicitly state: Tap to Stop on this line.) The amount bolused shown in this display is based on time.  Loop reconciles the bolus amount with messages received from the pump once the bolus completes.</p> <p></p> <p>If you see a 'pump is suspended notice' in the bolus status line after cancelling your bolus, just tap on it to resume pump operations.</p>"},{"location":"operation/features/bolus/#bolus-failure-notifications","title":"Bolus Failure Notifications","text":"<p>On occasion, you will receive a notification that a bolus may have failed. If your Dosing Strategy is set to Automatic Bolus, this can happen when an automatic bolus is in progress. In some of these cases, the bolus was delivered. On a Medtronic pump, you should check the pump screen to verify the bolus status before attempting to redeliver a failed bolus.  Omnipod users can hear the clicks if the room is quiet enough.</p> <p>If you get an uncertain delivery message, you may still see the \"bolused xx of yy\" display continue for as long as it would have taken to actually deliver the bolus. This display is driven by a timer and logic on the phone. (Loop is not asking the pump repeatedly - \"are you done yet?\"). You may want to interrupt an uncertain bolus if it is large, evaluate status and then resume with a fresh bolus. Loop should update the status the next time it contacts the pump. It can determine whether that bolus actually went through or not and will update the screen.  Look at the Event History screen (accessed by tapping the Active Insulin or Insulin Delivery plots). Turn your phone to landscape orientation and you should see either \"Certain\" or \"Uncertain\" at the end of each Bolus record. (If you tap on the specific record, even more detail is displayed.)</p> <p>If an \"uncertain\" delivery is not resolved:</p> <ul> <li>Make sure the RileyLink compatible device is communicating properly</li> <li>You can try to turn off Bluetooth and then turn it back on again</li> <li>Quit the Loop app and restart it. (Note - this is different from a power cycle of the phone which remembers settings within an app that was running before the power cycle.)</li> </ul> <p>If that does not resolve the issue, please tap on Loop Settings, Issue Report and email it to yourself. Then post on Facebook or Zulipchat, explain what happened and say you have an Issue Report. Someone should reach out to you.</p> <p>There are other alert messages that might be displayed if the pump or CGM is not active.  Those are found on the Loop 3 Displays page.</p>"},{"location":"operation/features/bolus/#loop-2-bolus-screen","title":"Loop 2 Bolus Screen","text":"<ul> <li> <p>Loop 2.2.x shows the recommended bolus but the bolus row is initially set to 0</p> <ul> <li>You can tap on the Recommended line and that value will be transferred to the Bolus line</li> <li>OR </li> <li>You can tap on 0.0u on the Bolus row and type in your desired bolus amount</li> <li>As soon as a value is entered on the Bolus row, the Deliver button turns blue and can be tapped to deliver that amount via your pump.</li> </ul> <p></p> </li> </ul>"},{"location":"operation/features/carbs/","title":"Meal Entries","text":""},{"location":"operation/features/carbs/#meal-entry","title":"Meal Entry","text":"<p>This page was updated with information for Loop 3.</p>"},{"location":"operation/features/carbs/#loop-3-updates","title":"Loop 3 Updates:","text":"<ul> <li>Time: Loop 3 adds the +/- 15 minute buttons to adjust time for entry</li> <li>Food Type: emoji keyboard<ul> <li>Loop 3 initially displays Medium emojis and the association of some emojis with absorption time has been improved</li> <li>Loop 2.2.x initially displays Fast emojis</li> </ul> </li> <li>Absorption Time: values for fast, medium and slow<ul> <li>Loop 3 uses 30 minutes, 3 hr, 5 hr</li> <li>Loop 2.2.x uses 2 hr, 3 hr, 4 hr</li> </ul> </li> <li>Meal Bolus: Loop 3 fills in the Bolus row with Recommended Bolus</li> <li>Large Meal Warning<ul> <li>The warning limit of 99 g was chosen to assist in catching mistakes such as entering 115 grams instead of 15 grams</li> </ul> </li> <li>Override Active Warning<ul> <li>A warning is presented when entering carbs while an override with sensitivity other than 100% is active</li> </ul> </li> </ul>"},{"location":"operation/features/carbs/#meal-entry-fast-version","title":"Meal Entry - Fast Version","text":"<p>To start a new meal entry, tap on the green plate icon (circled below) in the toolbar at the bottom of the Loop status screen. Your Loop app will open to the Add Carb Entry screen.</p> <p></p> <p>Loop assumes carbs saved will be absorbed and Loop will adjust recommended insulin, and, when Closed Loop is enabled, Loop will adjust automated dosing based on those carbs.</p> <ul> <li>Loop updates the carb estimate dynamically based on your glucose while meal is active</li> <li>Approximate entry is \"good enough\"; better to underestimate carbs than to overestimate</li> <li>The Loop recommended bolus can be modified by editing the Bolus amount after tapping the Continue button on the Add or Edit Carb Entry screen.</li> </ul> <p>Beginner's Tip</p> <ul> <li>Add some amount of carbs when you normally would dose before or at a meal<ul> <li>Make sure the amount of insulin recommended is not more than you expect</li> <li>If the amount seems too large, you might need to reduce Amount Consumed entry or adjust settings</li> </ul> </li> <li>Accept the defaults as directed below</li> </ul>"},{"location":"operation/features/carbs/#meal-entry_1","title":"Meal Entry","text":"<p>The steps and graphics in this section are for users of Loop 3. To view the version used by Loop 2.2.x, click on this link.</p> <p>Tap the meal entry icon on the toolbar to open the Add Carb Entry screen:</p> <ol> <li>Enter number of grams of carbs in the Amount Consumed row (keyboard appears automatically)</li> <li>Tap continue to advance to the Meal Bolus screen (as shown in the graphic below)</li> <li>Tap Save and Deliver to Save the carbs and Deliver the recommended bolus</li> </ol> <p>The carbs are not saved until the Meal Bolus screen is completed.</p> <ul> <li>If no bolus is recommended in the Meal Bolus screen:<ul> <li>A No Bolus Recommended warning appears with the reason why</li> <li>The blue button on the Meal Bolus screen says Save without Bolusing</li> <li>In this case, carbs are saved when the Save without Bolusing button is tapped</li> </ul> </li> </ul> <p></p> <p>Carbs are Saved in Meal Bolus Screen</p> <p>Carbs are saved when the <code>Save and Bolus</code> or <code>Save without Bolusing</code> button is tapped in Meal Bolus Screen. When the button is tapped, carbs are saved even if the bolus does not go through to the pump.</p> <p>If you see a <code>Bolus Issue</code> notification (Bolus in progress, etc) after saving a carb entry, check the state of Loop carb entries.</p> <p>Do not just add the carbs again.</p> <p>By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals.</p>"},{"location":"operation/features/carbs/#meal-entry-row-by-row","title":"Meal Entry Row by Row","text":"<p>Do you want to know more? This section discusses each row in turn.</p>"},{"location":"operation/features/carbs/#amount-consumed","title":"Amount Consumed","text":"<p>When entering the Add Carb Entry screen, the number keypad is deployed and when you start typing, that value is entered into the Amount Consumed row.</p> <p>Tapping on any other row dismisses the number keypad. It can be restored by tapping on the Amount Consumed row.</p> <p>Some value must be entered into the Amount Consumed row to continue.</p> <p>Many Loopers increase the carbohydrate amount to cover the expected effect of protein and fat in their meal entry. For simplicity, the rest of this page only refers to carbs because all the figures show carbs or carbohydrates in the menus. You should consider the whole meal, including fat and protein, especially if you eat lower carb.</p> <p>Loopers who consume mostly carbs in a given meal, might do better entering just the carbs.</p>"},{"location":"operation/features/carbs/#time","title":"Time","text":"<p>Modifying the Time for a new meal entry from the default value of \"now\" is optional.</p> <ul> <li>Each tap on the \u2212 icon changes the time earlier in 15 minute increments</li> <li>Each tap on the + icon changes the time later in 15 minute increments</li> <li>Tap on the time to bring up a picker wheel for desired time</li> </ul> <p>The 15 minute increments, which are also available on the watch interface, can be handy if the Looper chooses to prebolus.</p> <p>Reasons to modify the time when entering a meal:</p> <ul> <li>Meal is planned for the future, e.g., prebolus now (optional)<ul> <li>If meal is planned more than 15 minutes from \"now\", it's a good idea to modify the time to the planned start time</li> <li>In Closed Loop, insulin dosing adjusts for planned carbs while maintaining the Glucose Safety Limit</li> </ul> </li> <li>Meal was eaten in the past but carbs were not entered<ul> <li>Loop does a better job with predictions if you enter the meal at the time it was eaten</li> <li>Entering a previous meal (now) makes Loop think the carbs will all be in the future (not some of them in the past) and can cause too much insulin to be recommended / delivered</li> </ul> </li> <li>Some foods, like pizza, may need entries to start later with a longer absorption time</li> </ul> <p>Limits for time entry of when meal was consumed:</p> <ul> <li>The carbs can be entered up to 12 hours earlier or 1 hour later<ul> <li>When editing, this limit applies to the time when the carb entry was previously saved</li> </ul> </li> </ul>"},{"location":"operation/features/carbs/#food-type","title":"Food Type","text":"<p>Food Type entries are optional.</p> <p>The information about the next row: Absorption Time is also important when discussing Food Type entries.</p> <ul> <li>The first touch of any icon sets the absorption time to the value associated with that icon<ul> <li>This includes the 3 icons (Lollipop, Taco, Pizza) on the Food Type row</li> <li>If you touch the plate icon (or the words Food Type), a new set of icons (food emoji) appear as shown in the graphic below<ul> <li>Each emoji is associated with Fast, Medium or Slow absorption time</li> <li>The first emojis presented are medium - scroll in either direction to view the fast and slow emojis or tap on the short-cut tabs at the bottom of the screen</li> <li>The emojis under Other have no effect on absorption time and they do not \"count\" as a first tap; e.g., wine followed by bacon updates absorption time to Slow.</li> </ul> </li> </ul> </li> <li>Any additional icon touches have no effect on selected absorption time</li> <li>At any time, the Absorption Time picker can be used to adjust the absorption time</li> </ul> <p></p> <p>Pro Tip</p> <ul> <li>If you want to enter food emojis<ul> <li>Verify food absorption time when you are done</li> <li>If you know you want to keep the 3 hour absorption time, tap the taco icon on the main screen before entering food emojis</li> </ul> </li> </ul> <p>Loop 3 Absorption Times</p> <p>If you switched to Loop 3 from Loop 2.2.x, please be aware that absorption times for the Lollipop, Taco, Pizza icons have been updated.</p> <ul> <li>Loop 3 uses 30 minute, 3 hours and 5 hours</li> <li>Loop 2.2.x used 2 hours, 3 hours and 4 hours</li> </ul> <p>Beware using Lollipop for Complex meals</p> <p>If you select the Lollipop icon for a large complex meal with Loop 3, you tell Loop to expect glucose to rise rapidly (30 min absorption). When that rapid rise does not materialize, Loop may predict an unexpectedly low glucose because the algorithm assumes something must be affecting glucose downward in a strong way.</p> <p>If this happens to you, edit the carb entry to have a longer absorption time and Loop will recalculate the prediction.</p> <p>\ud83c\udf6d (Fast) is for simple foods often used for low treatments. Some Loopers use it for coffee.</p>"},{"location":"operation/features/carbs/#absorption-time","title":"Absorption Time","text":"<p>Modifying the Absorption Time from the default value of 3 hours is optional.</p> <ul> <li>If you touch any icon on the main entry or Food Type row, the absorption time associated with that icon becomes the new absorption time<ul> <li>Any additional icon touches have no effect on selected absorption time</li> </ul> </li> <li>At any time, the Absorption Time picker can be used to adjust the absorption time</li> </ul> <p>Loop uses the absorption time for the carbs, along with your glucose readings, ISF and CR to recommend insulin dosing and to estimate over time the carbs absorbed and carbs expected. See Algorithm: Prediction for more details.</p> <p>Loop assumes a specific model for how those carbs will be absorbed that is spread out over an interval that is 150% of the selected time. This allows for variations in actual absorption.  More information about this model is found in the prediction link above.</p> <p>Many meals can be entered with the medium (3 hour) default absorption time. Learn by experimenting and modify going forward. Evaluate the CR setting, as well as the entries for Amount Consumed and Absorption Time for adjusting meal entries. The amount of up-front insulin recommended is typically similar up through 3 hours absorption and then begins to decrease as absorption time is increased.</p> <p>Experiment for yourself - how much does Loop recommend compared to a straight Carbs/CR value? Try this at different times; especially when glucose is nominal and flat compared to low and dropping or high and rising.</p> <ul> <li>Enter an absorption time and hit continue</li> <li>Examine recommended bolus</li> <li>Tap the &lt; Carb Entry button at upper left</li> <li>Modify the absorption time and hit continue</li> <li>Repeat to get a feel for the up front bolus under different scenarios</li> </ul>"},{"location":"operation/features/carbs/#continue","title":"Continue","text":"<p>Carbs are not saved in the Add Carb Entry screen until the Continue button is pressed and the user saves those carbs in the Meal Bolus  screen, follow the link for details.</p>"},{"location":"operation/features/carbs/#large-meal-warning","title":"Large Meal Warning","text":"<p>If the <code>Amount Consumed</code> row exceeds 99 grams when the Continue button is tapped, the user is provided with a modal alert from which they can proceed to the Meal Bolus screen, or return to edit <code>Amount Consumed</code> if that was not the intended amount.</p> <p></p>"},{"location":"operation/features/carbs/#override-active-warning","title":"Override Active Warning","text":"<p>If you have an override active with insulin sensitivity value set to anything other than 100%, a warning message appears at the top of the Add Carb Entry screen.</p> <p></p>"},{"location":"operation/features/carbs/#automatic-bolus","title":"Automatic Bolus","text":"<p>Loopers who are using the Automatic Bolus Dosing Strategy should still prebolus and/or bolus for meals. The amount of <code>Recommended</code> insulin that will appear in the Meal Bolus screen will be the full amount of the bolus Loop recommends (not the 40% partial bolus delivered automatically). As discussed above, you can accept this recommendation or enter a different amount, however, and this is very important, if your Dosing Strategy is set to Automatic Bolus, by entering less than the recommended amount and tapping <code>Deliver</code> or tapping <code>Save Without Bolusing</code>, you are telling Loop to deliver the remaining recommended insulin in the future using 40% of the recommended bolus at each successive Loop interval.</p> <p>Carb Entry Leads to Insulin Delivery</p> <p>Note that this same automatic delivery of insulin in response to entered carbs occurs when Dosing Strategy is set to Temp Basal, but the delivery via temporary basal rates is slower, providing more time for an error to be noticed. By the same token, the Automatic Bolus Dosing Strategy responds more quickly to increases in blood glucose, helping to minimize food spikes.</p>"},{"location":"operation/features/carbs/#edit-meals","title":"Edit Meals","text":"<p>Adjusting a meal entry can be a particularly useful tool when:</p> <ul> <li>You did not finish an entire meal that you bolused for,</li> <li>You did not get to eat the meal at the time you originally expected,</li> <li>You ate more servings than originally entered, or</li> <li>You suspect your carb count was in error because BGs are rising more/less than expected.</li> </ul> <p>From the main Loop screen, tap on the Active Carbohydrates chart to view the Carbohydrates screen (see graphic below).</p> <p>To adjust an entry, simply tap on it (do not tap the <code>Edit</code> button at the top of the screen). You can change the time, modify carb amounts, or adjust absorption times (even mid-meal). To delete an entry, you first tap <code>Edit</code> and tap on the red circle to the left of the entry that you would like to delete. It is a little counterintuitive, but the <code>Edit</code> button lets you delete, but not edit an entry.</p> <p></p> <p>For more information on some of the details reported on this screen, review Dynamic Carb Absorption</p>"},{"location":"operation/features/carbs/#review-carb-absorption","title":"Review Carb Absorption","text":"<p>New Loopers, and even experienced Loopers with an unfamiliar meal or activity, should review how Loop reports absorption for the carbs you entered for a meal. If you have perfect dosing for your meal (the mythical flat line), then the carb absorption will match the model perfectly. But sometimes, there might be COB on the Active Carbohydrates Chart Loop 3 / Loop 2 that doesn't reflect your current situation, and you might need to make an adjustment. Note that while Loop is pretty forgiving on exact values and absorption time, you need to learn what works for you. Some common things to consider are listed below.</p> <ul> <li>Need to adjust value for carbs or account for fat/protein</li> <li>Need to adjust aborption time</li> <li>Need to review settings</li> <li>Settings, carbs and absorption time are good for this meal but there was more or less activity than normal</li> <li>Stress / Hormones / Exercise</li> <li>Other effects</li> </ul> <p>You can Edit previously saved carbs so Loop has a better idea of how to adjust predicted glucose moving forward. This can head off a low or a high.</p>"},{"location":"operation/features/carbs/#check-cob-before-adding-more","title":"Check COB Before Adding More","text":"<p>Loop works better when informed that carbs are coming, but if you have a lot of left-over carbs from an earlier entry - wait before adding more carbs for that next snack. If Loop thinks more carbs are expected, it will dose extra insulin to accommodate. Maybe set a timer and check back in half-an-hour or an hour to see if you really need to add more carbs.</p> <p>Dosing at a Party</p> <p>Example - at a party where Looper is eating small amounts at a time, get some carbs entered to get some insulin up front, but pay attention when clicking add carbs (especially when using the watch and accepting recommended dosing).</p>"},{"location":"operation/features/carbs/#avoid-double-meal-entries","title":"Avoid Double Meal Entries","text":"<p>Be Aware</p> <p>If you have accidentally made duplicate entries for the same meal, click on the Active Carbohydrates chart in the main Loop screen and tap <code>Edit</code> to delete the redundant entries. Deleting the meal entry will not impact the insulin that has already been delivered, but it will alert Loop to adjust your BG projection for purposes of calculating future insulin delivery.</p>"},{"location":"operation/features/carbs/#dynamic-carb-absorption","title":"Dynamic Carb Absorption","text":"<p>Loop observes the blood glucose impact of the meal within the 150% absorption time window. Loop calculates how many carbs have been absorbed (regardless of how many you entered) based on your BG pattern and your settings.</p> <p>You can watch the progression of  Loop's observations of your meal by tapping on the Active Carbohydrates chart at the bottom of Loop's main screen and watching the insulin counteraction effects (ICE) on the Carbohydrates screen. An example of the screen is on the left side of the figure below. An explanation of the dual lines for each entry and the color coding scheme is explained below the figure. Click on the ICE link for more details and an in-real-life example.</p> <p></p> <ul> <li>Top line of each entry for the graphic on the left (above)<ul> <li>Amount you entered, time of entry, absorption time entered</li> </ul> </li> <li>Bottom line of each entry (changes with each CGM reading)<ul> <li>Amount absorbed, estimated time when amount you entered will be absorbed</li> <li>Color codes while within the 150% absorption time window<ul> <li>Green: amount absorbed is less than 10% above the entered amount</li> <li>Yellow: amount absorbed exceeds 10% above the entered amount</li> </ul> </li> <li>Color codes after 150% absorption time window expires<ul> <li>Grey: amount absorbed is within 10% of the entered amount</li> <li>Yellow: amount absorbed is exceeds 10% above or below the entered amount</li> </ul> </li> </ul> </li> </ul> <p>The information available on the Carbohydrates screen disappears for any meals older than 12 hours, so if you're looking for details as to how a particular meal absorbed, you may need to screenshot or otherwise capture this information within that window. Previous entries can be modified or deleted through this screen.</p>"},{"location":"operation/features/carbs/#medtronic-warning","title":"Medtronic Warning","text":"<ul> <li>Do not enter carbs into your Medtronic pump<ul> <li>If you use your Medtronic pump bolus wizard or carb entry screen, the pump will give you insulin but Loop will not know about the carbs</li> <li>The Loop predictions will be off and next time Loop reads the reservoir history on the pump, it will probably command a temporary basal rate of 0.0 U/hr</li> </ul> </li> </ul>"},{"location":"operation/features/carbs/#nightscout-entries","title":"Nightscout Entries","text":"<p>With Loop 3, a caregiver can add remote carbs and perform remote bolus through Nightscout, but that requires set-up between the caregiver and Loopers phone and use of the Remote Carb and Remote Bolus entries in the Careportal.</p> <p>If you enter carbs (not remote carbs) into the Careportal, they are not read by Loop and will not be reflected in COB.</p> <ul> <li>There may be times you want to do this, e.g., you want to indicate a low treatment you don't want Loop to know about</li> </ul>"},{"location":"operation/features/carbs/#third-party-apps","title":"Third Party Apps","text":"<p>This is relevant for Loop 2.2.x versions. Loop 3 does not read carbs from Apple Health unless you modified the code.</p> <p>Please see Loop 2 Permissions.</p>"},{"location":"operation/features/carbs/#carb-absorption-model","title":"Carb Absorption Model","text":"<p>For more information about the way Loop models the effects of carbs, insulin, etc., see the algorithm page.</p>"},{"location":"operation/features/carbs/#loop-2-fast-meal-entry","title":"Loop 2 - Fast Meal Entry","text":"<p>This section is for users of Loop 2.2.x.</p> <p>Tap meal entry icon on toolbar</p> <ol> <li>Enter number of grams of carbs in the Amount Consumed row</li> <li>Tap continue to advance to the Meal Bolus screen</li> <li>Tap Recommended line to transfer the value to the Bolus line (Loop 2.2.x)</li> <li>Tap Deliver</li> </ol> <p>The carbs are not saved until the Meal Bolus screen is completed.</p> <p></p> <p>By tapping on the Active Carbohydrates chart on the main Loop display, previously entered carbs can be edited, refer to Edit Meals.</p>"},{"location":"operation/features/ice/","title":"Using ICE Info","text":""},{"location":"operation/features/ice/#insulin-counteraction-effects","title":"Insulin Counteraction Effects","text":"<p>Tapping on your Carbohydrates graph will open up a page that tracks your carb entries for the day (since midnight).  At the top of the page is a useful graphic called Insulin Counteraction Effects (ICE for short).  What is it?  Basically, a graphical representation of predicted upward-BG effects vs. encountered upward-BG effects.</p> <p>Consider the possible sources of triggers that counteract insulin (in other words, make BGs go up)</p> <ul> <li>food</li> <li>stress</li> <li>illness</li> <li>someone sat too close to you</li> </ul> <p>As we all know, this list can be long but, on \"normal\" days FOOD will be the single strongest \"insulin counteracter\".  Food will be the most influence on making BGs go up.  There are also other reasons that BGs climb when we may have expected them to be steady; basals being set too low, failed infusion site, etc.</p> <p>If we assume that it's a \"normal\" day (basals are close to correct, illness is not an issue, the site is good), Loop will expect most of the UPWARD pressure on BGs are from food.  Loop is calling that upward pressure Insulin Counteraction Effect (ICE).  This is a pretty reasonable assumption so let's use that for the rest of this discussion.</p>"},{"location":"operation/features/ice/#ice-display","title":"ICE display","text":"<p>Let's take a look at an example day using the screenshot below.  The graph at the top of your ICE page represents that upward pressure Loop expects from the food entries.  The predicted ICE is shown as grey bars.  As a meal is tracked by Loop, you'll see green bars of observed ICE.</p> <p></p> <p>When you make a food entry originally, Loop will save your entry as you've made it.  On the line below your original entry, Loop will also start tracking your food entry assuming a 1.5 times longer carb absorption time.  This helps Loop track carbs that may actually be absorbing longer than you expected (part of that whole dynamic carb absorption modeling).  Loop will be updating that value of \"observed\" carb absorption time as well as absorbed carbs as your meal goes on.</p>"},{"location":"operation/features/ice/#practical-use","title":"Practical use","text":"<p>So how can we use this information to make our Looping experience better?  The answer is probably best illustrated using a real-world example.  Chinese food...in fact, THIS Chinese dish.  General Tso's chicken.  As you can see in the recipe, loads of fast carbs with ingredients like hoisin sauce, brown sugar, and cornstarch.  But also slower carbs like chicken.  Rice can be a difficult one because for us, it acts fast but also seems to have a long tail.</p> <p></p> <p>It was a busy day and I really didn't want to count carbs.  Ok, even on the slow days I don't want to count carbs.  I just eyeballed the bowl of food and guessed.  As I entered the food in originally, I was still trying to come up with a good guess on the ratio of fast:slow carbs but kid was in a hurry to eat.  My initial guess around 3:30pm was 70g of carbs at 5 hours absorption (note: it gets edited to 80g in a little bit), we bolused for that and she started to eat.  About 10 minutes later, I decided to add 10g of fast-acting carbs at 1-hour absorption to help with the sauce's speedy carbs.</p> <p></p> <p>Watching what was going on a little later...BGs were rising at a decent clip and I had a feeling I really didn't cover things super well...so I edited the original 70g entry, adding 10g and making it 80g instead.  (That's why there is a 2U bolus around 4:20pm.)  And of course around 5:40pm there was a little bit of nibbling on the leftovers as we put them into the fridge.  We gave 10g for that.  BGs climbed a bit more, not surprising given how we were underestimating fast carbs at this point...but still not so bad at 180 peak BG.  (Anna gave 2 units correction at the peak because there was dessert coming later that night and she wanted to be ready for it without too much pre-bolus.)</p> <p></p> <p>So, how can I use the ICE info to make this meal better?  I can look at the observed ICE information and the observed carb entry Loop has recorded to adjust my insulin bolusing the next time we eat this meal.</p> <p>For example, the biggest weakness I had in this (and suspected it even as I did the initial bolus) was that I underestimated the sauce's fast carbs.  I can see this in the observed ICE graph having the early green peaks after the meal, and in the way that the observed carb distribution was more like 7:2 vs my original guess of 8:1 (slow:fast carbs).  Overall, it appears that I guess on overall carb content pretty closely (90g vs. 89g observed).  Next time we have General Tso's chicken, I will likely bolus it as 70g at 5 hours and 20g at 2 hours.</p> <p></p> <p>So remember to check your ICE page at the end of a meal's absorption.  By checking in on the meal's observed behaviors, you'll have a good starting point to fine-tuning any new or unknown carb breakdown.</p> <p>Side note:  remember this conversation is assuming you have basals fairly well set and are not sick.  If other factors could be significantly causing your BGs to swing that Loop doesn't know about (bad sites, illness, or basal rates that need to be adjusted), they may be attributed to ICE when they really aren't food-related.  In those cases, address the underlying cause and then use the ICE pages when you've come back to \"normal\".</p>"},{"location":"operation/features/notifications/","title":"Loop Notifications","text":""},{"location":"operation/features/notifications/#loop-notifications","title":"Loop Notifications","text":"<p>Loop provides discrete notifications on the iPhone and Watch which will appear on the (locked) screen and vibrate, depending on your notification settings of Loop.</p>"},{"location":"operation/features/notifications/#loop-alert-unable-to-reach-pump","title":"Loop Alert - Unable to Reach Pump","text":"<p>With Loop 3, there is a new modal alert that halts all Loop activity until pump communication can be restored.</p> <p></p> <p>When you tap on the Learn More button, another screen appears. The only option allowed on the second screen is to give up and discard the pump (or pod) or continue to wait - tap the Back button. The second screen is there if you need to tell Loop you will not be able to restore communication and it should treat the last attempt to send a command as uncertain. Loop will then allow you to add a new pod or new Medtronic pump or switch to a different insulin delivery device. </p> <p>Only do this if bringing your phone and pump into close proximity, waiting a few minutes and then trying the Reset Loop-to-Pump Communications suggestions are not successful.</p> <p>Why Stop all Activity?</p> <p>When communication is interrupted at a critical moment in the communication cycle, Loop cannot provide a reliable calculation for IOB. When that happens a warning screen similar to the graphic above appears on your device. You cannot do anything but wait for Loop to restore communications or give up on that device.</p>"},{"location":"operation/features/notifications/#loop-app-expiration-notification","title":"Loop App Expiration Notification","text":"<p>Profile expiration notification was added with Loop 2.2.5.</p> <p></p> <ul> <li>When fewer than 20 days remain until profile expiration, you'll get a notification when you open the app but no more frequently than every 2 days</li> <li>When fewer than 24 hours remain, you'll get a notification when you open the app, once every hour at most</li> <li>Simply tap on the <code>More Info</code> button of the notification to go directly to the LoopDocs Updating page.</li> </ul>"},{"location":"operation/features/notifications/#free-7-day-loop-app-expiration-notification","title":"Free (7-day) Loop App Expiration Notification","text":"<p>The expiration notification pattern is the same as for the Paid Loop App. You may want to add an Expiration Notification Customization to modify the first appearance and frequency of the notification.</p>"},{"location":"operation/features/notifications/#loop-app-expiration-date","title":"Loop App Expiration Date","text":""},{"location":"operation/features/notifications/#for-loop-32x-and-newer-versions","title":"For Loop 3.2.x and newer versions","text":"<p>The expiration date is found in the App Profile section at the bottom of the Loop Settings screen.</p>"},{"location":"operation/features/notifications/#for-loop-225-through-loop-30","title":"For Loop 2.2.5 through Loop 3.0","text":"<p>If you want to see the expiration date at any time:</p> <ul> <li>Loop 2.2.5 through 2.2.9: tap on Settings, then tap on Issue Report</li> <li>Loop 3.x.x: tap on Settings, scroll down and tap on Support, then tap on Issue Report</li> </ul> <p>The expiration date is near the top of the report (to the right of <code>profileExpiration</code>).  If you don't see that, time to rebuild to get that feature. Once you've viewed the expiration date, tap Settings to back out of the Issue Report display. The time uses UTC, so adjust to your time zone if you procrastinated until the last minute.</p> <p></p>"},{"location":"operation/features/notifications/#omnipod-beeps","title":"Omnipod Beeps","text":"<p>Most pod beep alarms are disabled for a more discrete use of pods than is available with the PDM. Only the following audible acknowledgments or alarms are used. Some can be configured in Omnipod: Notification Settings:</p> <ul> <li>Pod activated acknowledgment when filling the pod with enough insulin when pairing a new Pod.</li> <li>Pod expiration advisory alarm, which you can configure between 48 and 72 hours (3 days)</li> <li>Pod low reservoir alert<ul> <li>Note that the pod may continue delivering after the reservoir reports 0 U</li> <li>The pod will continue until the pod runs out of insulin or 4 U is delivered, which ever comes first</li> <li>Loop will update the actual delivery amounts based on pod reported information</li> </ul> </li> <li>Pod deactivation acknowledgment</li> <li>Pod fault alarm (also called a screamer) when reaching the max life of the Pod: 80 hours (3 days + 8 hours), running out of insulin or a fault/occlusion happens<ul> <li>Screamers are silenced using the Replace Pod row on the pod settings page</li> <li>The one exception is if communications with the pod is lost and cannot be restored - in that case, you will be offered the chance to discard the pod from Loop but will still want to Silence the Pod</li> </ul> </li> </ul>"},{"location":"operation/features/notifications/#notification-settings-for-loop","title":"Notification settings for Loop","text":"<p>You can customize the way notifications of Loop are behaving in the Settings App of the iPhone:</p> <p></p> <p>Loop 3 Notifications Settings:</p> <p></p> <p>Mark Loop 3 notifications as time-sensitive and ask for immediate delivery:</p> <ul> <li>tick the <code>Immediate Delivery</code> so that notifications are delivered right away</li> <li>enable the <code>TimeSensistive Notifications</code> checkbox </li> </ul> <p>Notification Delivery</p> <p>You will see the <code>Notification Delivery</code> section only if you previously toggled on <code>Settings / Notifications / Scheduled Summary</code> in order to receive a summary of notifications at a certain time of the day. If this is not what you want, simply ignore it.</p> <p>Announce Notifications</p> <p>The <code>Announce Notifications</code> section is displayed only if you previously turned on the toggle <code>Settings / Notifications / Announce Notifications</code>. Use it if you want Siri to read Loop's notifications out loud on CarPlay, and AirPods...</p> <p>Make sure Loop notifications are allowed in your Focus mode. Edit the focus mode to:</p> <ul> <li>add <code>Loop</code> to the list of apps with allowed notifications</li> <li>enable the <code>Time Sensitive Notifications</code> toggle button</li> </ul>"},{"location":"operation/features/notifications/#taking-a-loop-break","title":"Taking a Loop Break","text":"<p>If you want to take a break from using Loop but want to keep the app on your phone, you'll want to disable Loop Notifications while you are not using Loop. Otherwise, the Loop Failure messages will drive you crazy. </p> <p>When you are ready to resume using Loop, the main screen will remind you to turn those notifications back on.</p> <p>Another time you might want to disable notifications is if you are testing with a simulated pump. When the app is closed or phone is locked, the simulated pump is inactive and you would get the Loop Failure notifications.</p>"},{"location":"operation/features/notifications/#loop-failure","title":"Loop Failure","text":"<p>At 20, 40, 60, and 120 minutes, there is a Loop Failure notification. This mostly happens when the connection is lost for a longer period of time between the CGM or the Rileylink and Loop.</p> <p></p>"},{"location":"operation/features/notifications/#bolus-failure","title":"Bolus Failure","text":"<p>If Loop detects that a bolus was not able to be delivered, it will provide a notification.  Bolus failures are usually due to stale pump data.  Try fetching recent history from the RileyLink menu to update pump data.  Loop will also notify of partial bolus deliveries.</p> <p></p>"},{"location":"operation/features/notifications/#low-reservoir","title":"Low Reservoir","text":"<p>Medtronic At 20% and 10% remaining reservoir volume, there is a Low Reservoir notification.</p> <p>Omnipod Select your desired notification level for low reservoir Omnipod: Notification Settings </p> <p></p>"},{"location":"operation/features/notifications/#empty-reservoir","title":"Empty Reservoir","text":"<ul> <li>Loop 2 will notify when the reservoir is empty.</li> </ul> <ul> <li>Loop 3 reports No Insulin on the Heads-Up-Display.</li> </ul> <p>Omnipod After the reservoir reports 0 U, the pod attempts to deliver insulin when requested.</p> <ul> <li>After 4 U are delivered, the pod alarms and must be changed</li> <li>If during the attempt to deliver the 4 U (below zero), the pod runs out of insulin, the pod alarms and must be changed</li> <li>In both cases, the pod reports it is out-of-insulin</li> </ul>"},{"location":"operation/features/notifications/#low-battery-medtronic","title":"Low Battery (Medtronic)","text":"<p>Loop will notify when battery levels have approximately 8-10 hours of battery life remaining.</p>"},{"location":"operation/features/notifications/#remote-notifications","title":"Remote Notifications","text":"<p>Loop does not have a remote notification to other devices.  If you are a remotely monitoring parent, you will want to read here about setting up pushover alerts using your Nightscout site if you want proactive notifications of looping related information.</p>"},{"location":"operation/features/notifications/#loop-follow","title":"Loop Follow","text":"<p>Many people use additional apps to assist in following a loved one or to support a loved one who needs help waking up to alarms. One of the more popular options is Loop Follow, written by a parent of a Looper. There are a number of features to assist in remote monitoring with a variety of options for the source of data.</p> <p></p> <p>For more information, please read the Loop Follow documentation. You can build Loop Follow using the same Build Select Script you used to build the Loop app or using the GitHub Browser Build Method.</p>"},{"location":"operation/features/premeal/","title":"Pre-Meal Target","text":""},{"location":"operation/features/premeal/#pre-meal-range","title":"Pre-Meal Range","text":"<p>The Loop toolbar's second icon from the left is a small clock with a knife and fork on the sides. This is the pre-meal tool.  The tool will be colored grey until you define a glucose range in Loop settings.  Once a pre-meal range is available in Loop Settings, the icon will be colored green and available for use. The background coloring of the Pre-Meal Range icon will turn green when active and there will be a dark blue line on the glucose chart indicating the pre-meal range.</p> <p>The pre-meal range can be used as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes. It's not designed to replace a traditional pre-bolus, but rather as a more gentle way to build up some pre-meal insulin activity.</p> <p>If your normal target is 100-110 mg/dL and pre-meal range is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal range, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually canceled... whichever comes first. Setting an override will also cancel pre-meal range.</p> <p>Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time.</p> <p>Other Uses</p> <p>Some people prefer to use this as an easy way to raise the correction range for an hour.</p>"},{"location":"operation/features/premeal/#how-to-adjust-pre-meal-range","title":"How to Adjust Pre-Meal Range","text":"<p>Loop 3:</p> <ul> <li>In Loop Settings, select Therapy Settings and then tap on Pre-Meal Range to adjust</li> <li>If you prefer not to have that icon active on the Toolbar, you can tap Delete in the upper right corner of the adjustment screen</li> </ul> <p>Loop 2.2.x:</p> <ul> <li>In Loop settings, find the Correction Range section.  The Correction Range sections stores all targets for Loop over the hours of the day, including Pre-Meal.</li> </ul>"},{"location":"operation/features/premeal/#assessing-the-impact-of-pre-meal","title":"Assessing the impact of pre-meal","text":"<p>The intent of the pre-meal icon on the toolbar is to provide an eating-soon mode in Loop. Do not set pre-meal limits to any hypoglycemic ranges that may require treatment.</p> <p>To mitigate the impact of unintentional pre-meal activation:</p> <ul> <li>If you are running Loop 3, you can delete the setting to deactivate the icon</li> <li>If you are running Loop 2.2.x, you can set the pre-meal range to the same value as your usual correction range</li> </ul> <p>Custom Pre-Meal Overrides</p> <p>Some loopers set up a custom override to use instead of the pre-meal icon.  This allows enabling the override remotely with Nightscout, permits specifying a custom duration, and will keep the override enabled after carbs are announced.</p>"},{"location":"operation/features/watch/","title":"Apple Watch","text":""},{"location":"operation/features/watch/#loop-with-apple-watch","title":"Loop with Apple Watch","text":"<p>The Loop user can directly enter carbs and boluses and turn on or off premeal or override settings from the watch, without needing to pull their iPhone out. There are some caveats when iPhone is not within Bluetooth range - the action requested by the watch will not be enacted until iPhone reconnects.</p> <p></p> <p>There are two screens in the Loop watch app, shown in the bottom half of the graphic above. By swiping left or right, the other screen is displayed. The eventual (predicted) glucose feature, shown on both screens in the graphic can be turned off as a feature in Loop 3, but requires the user to rebuild. It is on by default.</p> <p>The screen on the left side of the graphic shows Loop status, current glucose, trend arrow and eventual glucose with icons to enable carb entry, bolus entry, pre-meal and override selection. If necessary, use the crown (or swipe up and down) to see the full display.</p>"},{"location":"operation/features/watch/#watch-carb-bolus-overview","title":"Watch Carb / Bolus Overview","text":"<p>After tapping on the carb or bolus icons, you can adjust the entries using the crown to dial in more/less. See Meal Entry on Watch for more details.</p> <ul> <li>The watch carb entry screen allows you to choose the amount and absorption time, using the standard icons, and adjust the time the carbs were or are planned to be consumed. After tapping continue on the carb screen, the meal bolus screen is displayed - carbs are only saved after selecting Save or Save &amp; Bolus on the meal bolus screen.</li> <li>The watch bolus screen displays the recommended bolus. If you want to decrease/increase from the recommended amount, use the digital crown or tap on +/- icons to modify.</li> <li>Once the bolus button is tapped, the bolus command is only delivered after using the digital crown to Spin for Watch Bolus to align the two triangles.</li> <li>If you tap Save &amp; Bolus on the bolus screen when entered from the carb screen AND then fail to turn the digital crown to confirm the bolus or hit Cancel, that means the bolus was not delivered and the carbs might not saved - but check to be sure.</li> </ul>"},{"location":"operation/features/watch/#watch-graph-and-status","title":"Watch Graph and Status","text":"<p>If you swipe the Apple Watch Loop screen from right-to-left, a second screen, as displayed on the right side of the graphic above, is available.  This second screen displays a graph of recent glucose and predicted glucose data.  The display can be scrolled with a finger swipe or turn of the crown to display Active Insulin, Active Carbs, Net Basal Rate (with respect to scheduled rate) and in some cases Reservoir Units.  (A recently changed pod may show the reservoir level from the prior pod - just ignore that. It goes away within 24 hours.)</p> <ul> <li>Check the Recent Carbs List on Watch by tapping the Active Carbs row:<ul> <li>If a desired carb entry added by the watch is not present on the watch display, you are safe to try again</li> <li>If the carb entry is present on the watch display, do not enter it again</li> <li>If your phone is not in range of your watch, carbs entered on the watch will be added to the phone carb storage when you reconnect</li> </ul> </li> </ul>"},{"location":"operation/features/watch/#watch-graph-windows","title":"Watch Graph Windows","text":"<p>The windows for history and prediction available on the watch can be modified to suit your preference. The windows can be modified from 2 hours to 12 hours.</p> <ul> <li>Double tap on the graph to increase the windows</li> <li>Single tap on the graph to decrease the windows</li> </ul> <p>The selection for the window remains as selected until you change it.</p>"},{"location":"operation/features/watch/#loop-complication","title":"Loop Complication","text":"<p>A loop complication exists to show glucose on the watch face but the update rate is limited by Apple. If you have a Loop complication installed in the watch face, you can simply tap the complication to open the Loop watch app.</p> <p>In some positions and with some watch faces, the complication includes a graph.</p> <ul> <li>The windows for the Loop Complication history and prediction are fixed (not modified when you change the Watch Graph Windows)</li> </ul>"},{"location":"operation/features/watch/#loop-watch-features","title":"Loop Watch Features","text":""},{"location":"operation/features/watch/#spin-for-watch-bolus","title":"Spin for Watch Bolus","text":"<p>To prevent an accidental bolus from your Watch app, don't let your kids hold your watch. Just kidding, we've added an even better solution. After requesting a bolus or accepting a meal entry recommended bolus, the watch face displays a graphic like the one below. As you spin the digital crown, the two triangles will begin to merge. Once they merge, the bolus is confirmed through a little haptic and a white checkmark will appear on the watch screen.</p> <p></p>"},{"location":"operation/features/watch/#bolus-cancel-or-spin-fail","title":"Bolus Cancel or Spin Fail","text":"<p>At this point if you hit cancel, or fail to merge the two triangles, the bolus will not be delivered. You will feel a haptic and may hear a notification when Loop stops waiting. The watch display restores to the nominal screen.</p>"},{"location":"operation/features/watch/#meal-entry-on-watch","title":"Meal Entry on Watch","text":"<p>Tap on the Meal entry icon on the watch to view the watch carb entry screen as show in the graphic below.</p> <p></p> <p>The watch carb entry screen allows you to choose the amount and absorption time, using the standard icons, and adjust the time the carbs were or are planned to be consumed.</p> <ul> <li>While the Amount is highlighted, the + and - buttons add or subtract 5 g of carbs from the amount, or you can use the digital crown to adjust the amount</li> <li>Tap on the time and the + and - buttons add or subtract 15 minutes from the time when the meal was or will be consumed, or you can use the digital crown to adjust the time</li> <li>The default absorption time is 3 hours (taco), but the fast (30 minute, lollipop) or slow (5 hour, pizza) can be selected</li> </ul> <p>After tapping the Continue button on the carb screen, the meal bolus screen is displayed - carbs are only saved after selecting Save or Save &amp; Bolus on the meal bolus screen.</p>"},{"location":"operation/features/watch/#carb-entry-no-bolus","title":"Carb Entry, No Bolus","text":"<p>If you enter carbs from the watch and no bolus is recommended or selected, you will see a screen like the graphic below where the Save button is offered. You can choose to Save the carbs, or cancel the entry.</p> <p>If you choose to modify the zero bolus recommendation, the display changes to the option shown in the graphic in the following section.</p> <p></p> <p>If your phone is in communication with your watch, then when you hit the Save button, the carbs will be immediately saved to your phone record as well as your watch.</p> <p>If your phone is not in range of your watch, then when they are brought into communication later, the carbs will appear on the phone.</p>"},{"location":"operation/features/watch/#carb-entry-with-bolus","title":"Carb Entry, With Bolus","text":"<p>If you enter carbs from the watch and a bolus is recommended or selected, you will see a screen like the graphic below where the Save &amp; Bolus button is offered.</p> <p></p> <p>You may choose to leave that bolus at the recommended level, tap on the + or - buttons to add or subtract 0.5 U per tap or use the digital crown to adjust the value. Should the value go to zero, then the Save button appears as shown in the graphic in the previous section; but remember, Loop will begin adjusting automatic insulin delivery based on those newly entered carbs, even if you choose not to bolus.</p> <ul> <li> <p>If your phone is in communication with your watch</p> <ul> <li>When you hit the Save &amp; Bolus button, the carbs will be immediately saved to your phone record as well as your watch</li> <li>Your pump will be commanded to deliver the indicated dose (from your phone)<ul> <li>If the pump communication succeeds, the delivery begins</li> <li>If the pump communication fails, the bolus not delivered message will apear on the phone</li> <li>You might want to have confirmation beeps enabled so you can hear if the pump bolus starts</li> </ul> </li> </ul> </li> <li> <p>If your phone is not in range of your watch</p> <ul> <li>The carbs are saved in the watch carb storage</li> <li>When the watch reconnects with the phone, the carbs are added to the phone carb storage</li> <li>The bolus not delivered message will appear on the phone</li> </ul> </li> </ul>"},{"location":"operation/features/watch/#recent-carbs-list-on-watch","title":"Recent Carbs List on Watch","text":"<p>You can review the recent carb entries on the Apple Watch. Simply swipe left to see the blood glucose graph screen on the watch. Scroll down with your finger or the digital crown to the Active Carbs row beneath the graph, and tap that row. You can see the list of recent carb entries.</p> <p>If you enter carbs on your watch while not connected to the phone, they will appear on this display and, when the phone reconnects, will be transferred to the phone.</p> <p>Be Cautious - Avoid Double Entry</p> <p>If the phone and watch are not connected, someone could add entries to the phone manually or via remote commanding and the watch will not know about them. So be careful and check the phone carb record when the phone and watch reconnect. This is especially important if more than one caregiver is involved.</p>"},{"location":"operation/features/watch/#eventual-glucose-on-watch","title":"Eventual Glucose on Watch","text":"<p>One feature on the Watch app that can be turned on and off with Loop 3 is the eventual glucose display on the watch. That display is shown on the graphic above with current glucose on left, trend arrow beside it and eventual (from prediction) glucose on the right.</p> <p>If this is a feature you want turned off, please follow the directions on the Code Customization page (found under the Version tab): Build Time Features.</p>"},{"location":"operation/features/watch/#adding-a-watch-to-existing-loop","title":"Adding a Watch to Existing Loop","text":"<p>If you add an Apple Watch after building Loop using Xcode on a computer, you will need to pair your watch to your iPhone and then rebuild Loop to enable the Loop watch app to show up as an available watch app.</p> <p>If you use the new, Loop 3 only, Build Loop using GitHub Actions process that enables building without needing a Mac, the watch app should work so long as you have the watch paired to your phone when you install from TestFlight.</p>"},{"location":"operation/features/watch/#watch-hardware-and-os-requirements","title":"Watch Hardware and OS Requirements","text":"<p>Loop 2.2.9 and FreeAPS is currently supported with all released versions of the Apple Watch and Apple watchOS 4.1 and newer.</p> <p>Loop 3 requires newer versions of the watch and requires watchOS 8 as a minimum.</p> <p>The compatibility list below is copied from Apple. Note that some version of iOS require specific versions of watchOS. That level of detail is not captured here. Please review LoopDocs: Wikipedia Chart for Apple Versions.</p>"},{"location":"operation/features/watch/#watchos-8-compatibility","title":"watchOS 8 Compatibility:","text":"<p>watchOS 8 requires iPhone 6s or later with iOS 15 or later and one of the following Apple Watch models:</p> <ul> <li>Apple Watch Series 3.</li> <li>Apple Watch Series 4.</li> <li>Apple Watch Series 5.</li> <li>Apple Watch SE.</li> <li>Apple Watch Series 6.</li> <li>Apple Watch Series 7.</li> <li>Not all features are available on all devices.</li> </ul>"},{"location":"operation/features/watch/#watchos-9-compatibility","title":"watchOS 9 Compatibility:","text":"<p>watchOS 9 requires iPhone 8 or later with iOS 16 or later and one of the following Apple Watch models:</p> <ul> <li>Apple Watch Series 5.</li> <li>Apple Watch SE.</li> <li>Apple Watch Series 6.</li> <li>Apple Watch Series 7.</li> <li>Apple Watch Series 8.</li> <li>Apple Watch Ultra.</li> </ul>"},{"location":"operation/features/widget/","title":"iPhone Widget","text":""},{"location":"operation/features/widget/#loop-3","title":"Loop 3","text":"<p>Loop 3 uses the new-style widget is in process. There are a lot of updates with widgets. With the advent of iOS 16, you can add widgets that show up on the lock screen without need to swipe to view. There is work in progress on this - please be patient.</p>"},{"location":"operation/features/widget/#old-style-loop-widget","title":"Old-Style Loop Widget","text":"<p>Loop 2.2.x and FreeAPS both include an old-style widget.</p> <p>With older versions of iOS, the widget is available in the Today view of your iPhone.  Swipe right on your iPhone home screen and your widgets will be available.  The Loop widget may be at the bottom of your widget list.  Scroll down to the bottom of the screen and press the <code>edit</code> button.  That opens an \"Add Widgets\" screen.  If you hold and drag the three horizontal lines on the Loop widget row, you can drag it up to the order you'd like it to appear on your widget list.</p> <p></p> <p>With newer version of iOS, the old-style widgets cannot be moved to the top of the screen. The example graphic below shows the new-style Dexcom G6 widget above the old-style Loop 3 widget.</p> <p></p> <p>New to Loop or never added a widget before</p> <ul> <li>There is a difference in behavior between \"new-style\" Widgets and \"old-style\" Widgets<ul> <li>New-Style Widgets: always appear at the top of your Today View, can be changed by long-pressing on one and then dragging around, or can be added with the + button in edit mode</li> <li>Old-Style Widgets, like that available with Loop: use a different method to install</li> </ul> </li> <li>Make sure your phone is unlocked, then swipe from the Home Screen to get to Today View<ul> <li>You can't edit the screen if you start from a locked phone</li> </ul> </li> <li>Start the Edit mode (where all of the icons are shaking), either by long-pressing on one of the new-style widgets, or by scrolling all the way to the bottom of Today View and pressing Edit.</li> <li>Scroll all the way to the bottom again to find and select the button labeled \"Customize\"</li> <li>Now you can configure (add, remove, rearrange) the \"old-style\" widgets for your screen.</li> <li>The Loop widget should appear in the list available there.</li> </ul> <p>Experienced Looper who already had a widget should not need to modify anything to see it.</p>"},{"location":"operation/features/workout/","title":"Overrides","text":""},{"location":"operation/features/workout/#new-loopers-please-read","title":"New Loopers - Please Read","text":"<p>Please do not use this feature until you understand it.</p> <p>Many new Loopers interpret Loop Overrides as a one-for-one replacement for manual pump options where a temporary basal was applied for a particular activity. Although Loop Overrides can help in a situation where you previously used a temporary basal rate, overrides are more powerful.</p> <p>Changing Overall Insulin Needs is NOT like Manual Pump Temp Basal Change</p> <p>Loop Overrides are not the same as adjusting temporary basal on a manual pump. The easiest way to restrict basal rates with an automated system is to raise your correction target temporarily. In some cases, you may need to also adjust insulin needs, but begin just by changing that target.</p> <p>When you modify insulin needs, you are affecting basal rates, carb ratios, and insulin sensitivity factors (ISF) for the duration of the override.</p> <p>A common mistake is to think selecting an override with 10% Overall Insulin Needs is like selecting 10% basal rate with a manual pump. With Loop, that selection modifies all your normal settings by a factor of 10!\u00df</p>"},{"location":"operation/features/workout/#manual-temp-basal","title":"Manual Temp Basal","text":"<p>Sometimes you need to set a manual temp basal and you need it to keep working whether you are near your gear. There's a function for that with Loop 3.</p> <ul> <li>Pods: use the Manual Temp Basal setting</li> <li>Medtronic: select Open Loop and use your Medtronic pump temp basal feature</li> </ul>"},{"location":"operation/features/workout/#how-overrides-work","title":"How Overrides Work","text":"<p>Overrides let Loop know selected settings are modified for the duration of the override. The override can change either the correction range or the overall insulin needs or both. When you set an override on insulin needs, the override adjusts basal schedule, ISF, and CR together. Examples where this can be helpful include hormone cycles, steroid medications, and/or exercise.</p> <p>Override presets are (1) optional and (2) can be configured within Loop's workout icon (the little blue heart icon in the Loop toolbar). Once override presets are created, they can be turned on/off by using the workout icon as well.</p> <p></p>"},{"location":"operation/features/workout/#features-of-an-override","title":"Features of an Override","text":"<p>Overrides allow you to specify:</p> <ul> <li>an overall insulin needs adjustment</li> <li>a correction target range</li> <li>a duration in 15-minute increments (or indefinite)</li> <li>a start time</li> </ul> <p>The override only works when your Loop gear is with you. For example, if Loop sets a zero temporary basal rate based on an override and then you leave your gear behind; at the end of half an hour, your pump will resume scheduled insulin delivery.</p> <p></p> <p>The target range replaces the correction range target for the duration of the override.</p> <ul> <li>If the target range is left blank, your scheduled correction range continues to be in effect</li> <li>If the target range is specified, that range is used instead of your scheduled correction range</li> </ul> <p>The overall insulin needs is applied to your basal rates, insulin sensitivities and carb ratios for the duration of the override.</p> <ul> <li>If the insulin needs is left at 100%, no change is made to basal rates, ISF or CR</li> <li>If you set an overall insulin needs adjustment below 100%, you are telling Loop you are more insulin sensitive and need a lighter touch.<ul> <li>Loop uses basal rates decreased from scheduled rates</li> <li>Loop uses ISF and CR numbers increased from settings</li> </ul> </li> <li>If you set an overall insulin needs adjustment above 100%, you are telling Loop you are less insulin sensitive and need a heavier touch.<ul> <li>Loop uses basal rates increased from scheduled rates</li> <li>Loop uses ISF and CR numbers decreased from settings</li> </ul> </li> <li>While the override is active, the modified basal rates, ISF and CR are applied for every automated or manual insulin delivery and affect the calculation for future IOB while the override is active<ul> <li>Those ISF and CR numbers are associated with the carbs and/or insulin delivered during the override</li> <li>As the carbs and/or insulin \"ages\" during their absorption-time/duration-of-action, Loop maintains the sensitivity values associated with those during-the-override entries</li> </ul> </li> </ul> <p>For an override to be accepted:</p> <ul> <li>You must change either insulin needs or target range</li> <li>A named override can be saved and used again<ul> <li>To save the override, you must supply a name and an icon</li> <li>Named overrides can be set to occur at a scheduled time</li> </ul> </li> <li>A Custom override is used only once</li> <li>Any override can be edited while it is active</li> </ul>"},{"location":"operation/features/workout/#future-override","title":"Future Override","text":"<p>When an override is scheduled to start in the future, it can have an effect earlier than you might think. The closed loop automated insulin increase or restriction at each cycle is calculated to map your predicted glucose to the desired target range over the duration of insulin action (6 hours). If the future override has a higher target, that higher target is factored into the Loop calculations.</p> <p>Example:</p> <ul> <li>At 10 pm, you set an override with a higher correction range target to start the following morning at 6 am</li> <li>At approximately midnight, Loop will begin taking that future target into account in the dosing for each Loop cycle</li> <li>By the time you awaken at 6 am, Loop should have your glucose in that higher target range</li> <li>The insulin needs modification, if any, associated with that override do not affect the Loop prediction until the scheduled start time for the override</li> </ul>"},{"location":"operation/features/workout/#how-overrides-do-not-work","title":"How Overrides Do NOT Work","text":"<p>Overrides will work while you are Looping. Sounds obvious, right? But, the thing to remember is that the adjustments (multipliers) that overrides make are not saved back to your Medtronic pump or Omnipod. They only exist in the Loop app.</p> <p>If you walk away from iPhone and/or RileyLink...</p> <p>If you stop Looping (i.e., walk away from your gear or your glucose reading is stale), your existing temp basal will complete the remainder of whatever is left of its original 30 minutes and you will return to scheduled basal rates in your Therapy Settings. Your adjusted needs as set-up in any override will not continue if your Loop is not running properly. So you cannot set a 50% override and then hop in the ocean for a 2-mile swim without your iPhone and RileyLink and expect decreased basals of 50%. Just be aware that in situations where you need prolonged lower basals while away from Looping gear, you will need to edit your scheduled basals or use a Manual Temp Basal setting.</p>"},{"location":"operation/features/workout/#avoid-extreme-insulin-needs-setting","title":"Avoid Extreme Insulin Needs Setting","text":"<p>There have been users who select a 10% overall insulin need. This is NOT the same as choosing a 10% temporary basal with the PDM. This changes your basal rates, ISF and CR by a factor of 10!</p> <p>Scenario for 10% Insulin Need</p> <ul> <li>User really wants insulin reduced and chooses 10% insulin need</li> <li>User doesn't think about the 10% and enters carbs while the override is active<ul> <li>Loop suggests a tiny bolus and the user accepts<ul> <li>User goes high because CR was 10 times higher than Therapy Setting Value</li> <li>User stays high because ISF is also 10 times higher than Therapy Setting Value<ul> <li>Automated corrections are 10% of typical corrections</li> <li>Basal supplied is 10% of the Therapy Setting value</li> </ul> </li> </ul> </li> <li>OR</li> <li>Loop suggests a tiny bolus and the user manually boluses the amount they know the food needs<ul> <li>User glucose may be normal BUT<ul> <li>Loop predicts a negative eventual glucose (prediction only - this will never happen)</li> <li>Loop immediately withholds all basal until prediction normalizes</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>Instead of selecting 10%, raise your correction range with a moderate needs adjustment. Loop tends to suspend insulin delivery via temp basals with the next CGM reading.</p> <p>With Loop 3, there is now a warning message in the meal entry screen when an override is active with an overall insulin needs value other than 100%. The user can decide whether to proceed with the meal entry with the override active.</p> <p>If you feel the need to immediately halt insulin delivery, consider a Manual Temp Basal or suspend command to the pump. If you choose to suspend, be sure to pay attention to the reminder to resume insulin delivery later.</p> <p>Extreme Athletes</p> <p>There are athletes who do need those extreme overall insulin need changes and know how to use them appropriately. This typically involves extreme or prolonged exercise.</p>"},{"location":"operation/features/workout/#create-an-override-preset","title":"Create an Override Preset","text":"<p>To create an override preset, tap on the workout icon. Then click the + sign in the upper right corner to start a new preset entry.</p> <p>You must select an emoji, name the preset and modify either the overall insulin needs or target range or both to save your new preset</p> <ul> <li>Pick an emoji</li> <li>Enter a name for the preset</li> <li>Optional: change insulin needs<ul> <li>Default is 100% - no change to your settings</li> <li>You may use the picker wheel or Select 1% Insulin Needs increments</li> </ul> </li> <li>Optional: enter a target range<ul> <li>If you do not enter a target range, Loop will use your existing scheduled target range</li> </ul> </li> <li>Select whether you want the override to run indefinitely or for a finite time</li> </ul> <p>When you've made your selections, save the preset using the \"Save\" button in the upper right corner.</p>"},{"location":"operation/features/workout/#select-1-insulin-needs","title":"Select 1% Insulin Needs","text":"<p>Not Available in 2.2.x</p> <p>This feature is only available in Loop 3 or later.</p> <ul> <li>Not available in Loop 2.2.x</li> </ul> <p>The selectable Overall Insulin Needs values are not limited by the default picker values of 10%.</p> <ul> <li>When adjusting Needs, press and hold the \"orange\" bar, highlighted by the red rectangle in the graphic below</li> <li>Move your finger left and right to adjust by 1%</li> <li>Release to select the desired level</li> </ul> <p></p>"},{"location":"operation/features/workout/#activate-an-override","title":"Activate an Override","text":"<p>To enact your override preset, tap on the workout icon toolbar and select an override from your list of saved presets, create a new one or use the custom override for one-time use.</p> <p></p> <p>The heart will be highlighted in a blue square while active and the HUD Status Row will indicate the active override name. The Glucose Chart will show a darker blue bar indicating the active target range and duration.</p> <p></p>"},{"location":"operation/features/workout/#schedule-an-override","title":"Schedule an Override","text":"<p>You can set up a future start time when selecting a saved override by tapping on the calendar icon to the right of the override. Adjust the \"Start time\" row. Tap the \"Enable\" button in the top right corner.</p> <p>A Future Override can be very helpful, for example, to set an exercise override the night before your workout. You'll wake up with less insulin on board and at your desired exercise targets.</p>"},{"location":"operation/features/workout/#deactivating-an-override","title":"Deactivating an Override","text":"<p>Tap the heart icon to turn off your override at any time. This happens without confirmation, so be sure to lock your phone when you have an override running to avoid accidentally turning it off.</p> <p>Override presets with a finite duration will automatically deactivate when the duration is over.</p>"},{"location":"operation/features/workout/#apple-watch","title":"Apple Watch","text":"<p>Saved overrides can be turned on and off by tapping on the blue heart icon on your watch.</p>"},{"location":"operation/features/workout/#editing-an-active-override","title":"Editing an Active Override","text":"<p>Tap on the active override in the HUD Status Row with the phone in portrait orientation. This brings up a screen to edit the override currently running.</p> <p>This only affects this override during the current period. It is not saved to that named override. For example, you can extend the duration or modify the needs value or target value based on a temporary situation.</p> <p>Higher Priority Messages</p> <p>If the HUD Status Row is displaying a higher priority message, you must wait for that message to complete before you'll be able to edit an active override. If you want to edit an active override, you can choose to cancel an active bolus and edit the override immediately.  The edited override will then be in effect for the next Loop cycle or manual recommendation.</p> <p>HUD Status Row messages with higher priority:</p> <ul> <li>Bolus starting, in-progress or canceling</li> <li>Pump suspended</li> <li>No recent glucose</li> </ul>"},{"location":"operation/features/workout/#remote-overrides","title":"Remote Overrides","text":"<p>You can also use your Nightscout site to activate/deactivate your Loop's override presets. To accomplish this, you will need to do some legwork as outlined on this page for how to set up Remote Overrides in Nightscout and you will need to be using a paid Apple developer account. Remote overrides require Apple Push Notifications service, and that is only available on paid accounts.</p>"},{"location":"operation/loop/close-loop/","title":"Closed Loop","text":""},{"location":"operation/loop/close-loop/#closed-loop","title":"Closed-Loop","text":"<p>After you learn what you need from open-loop, this page provides suggestions to smooth the transition to closed loop.</p>"},{"location":"operation/loop/close-loop/#timing","title":"Timing","text":"<p>Consider transitioning in steps.  Some loopers start closed-loop when there are fewer distractions, possibly on weekends. It can be easier to transition at a time that does not involve food, possibly overnight.</p>"},{"location":"operation/loop/close-loop/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>When starting closed-loop, it is important to be conservative. Start with the \"Temp Basal Only\" dosing strategy and limit the maximum basal rate.  If your Meal Entries or Therapy Settings (basal rates, CR, ISF) are incorrect, this approach limits the risk of getting too much insulin. Typically, experienced loopers set their max closed-loop basal rate at no more than 3-4 times their average basal rate.  Wait until you are comfortable with the slower corrections in \"Temp Basal Only\" before transitioning to \"Automatic Bolus\".</p> <p>Temp Basal Only vs Automatic Bolus</p> <p>Both Dosing Strategy methods update the prediction with each CGM or glucose reading, typically every 5 minutes, and use the updated prediction to generate a recommended bolus or recommended dosing restriction.</p> <ul> <li>\"Temp Basal Only\" provides no more than 17% (per 5 minute interval) of that recommended bolus using temporary basal</li> <li>\"Automatic Bolus\" mode provides 40% of that recommended bolus as an immediate bolus</li> <li>When Loop recommends restricting insulin, both methods use temporary basals that are less than the scheduled basal, often commanding a temp basal of 0 U/hr</li> </ul>"},{"location":"operation/loop/close-loop/#glucose-correction-range","title":"Glucose Correction Range","text":"<p>If your basal, ISF, or carb ratios are not correct, Loop may give you more insulin than you need to reach the correction you selected. Setting the correction range slightly higher at first helps prevent unexpected low glucose as you adjust your settings.</p>"},{"location":"operation/loop/close-loop/#watch-the-iob","title":"Watch the IOB","text":"<p>Watch whether Loop accumulates positive or negative IOB while holding your glucose steady when no food is present.  If you consistently have positive or negative IOB, review whether to adjust your basal rate or ISF.</p> <p>Expert Tip</p> <p>In the absence of food, glucose trends should flatten out when positive or negative IOB trends to zero.</p> <ul> <li>If glucose drops below the correction range and continues to drop while IOB goes negative, basal rates may be too high</li> <li>If glucose remains above the correction range while IOB remains positive, basal rates may be too low</li> </ul> <p>The ISF is also important, but basal should be evaluated first.</p>"},{"location":"operation/loop/close-loop/#meals","title":"Meals","text":"<p>Start with meals that you know well. If Loop suggests less or more insulin than expected as a bolus before the meal - consider why this may be true.</p> <ul> <li>If glucose is trending down, Loop may be trying to prevent a low glucose event</li> <li>If glucose is trending up, Loop may be trying to add a correction to the meal dose</li> <li>In any case:<ul> <li>You can adjust the absorption time and carb amount to see if that modifies the suggested bolus</li> <li>You can override the Loop suggestion</li> <li>Do not be surprised if Loop immediately suspends basal</li> <li>Loop needs to see glucose start to rise before deciding you need more insulin after the initial meal bolus recommendation</li> <li>Loop will not automatically provide more insulin until your glucose is above the lower range of the correction range (but will recommend a manual bolus)</li> </ul> </li> </ul> <p>This is definitely an area where YDMV (your diabetes may vary), so don't expect or accept that what works for others will work for you.  Test, observe, and adjust as needed.</p>"},{"location":"operation/loop/looptips/","title":"Loop Tips","text":""},{"location":"operation/loop/looptips/#loop-tips","title":"Loop Tips","text":"<p>These docs are a great resource for the technical aspects of building your Loop app.  However, they don't really cover in detail a lot of the frequently asked questions about USING Loop.</p> <p>Things such as:</p> <ul> <li>How to enter low treatments while using Loop?</li> <li>What to discuss with your Endo?</li> <li>What data reports might be useful?</li> <li>How to deal with failed sites?</li> <li>What about pizza boluses?</li> <li>What do I do when I shower or swim?</li> </ul> <p>All of those usability questions and more are addressed over in the companion site called LoopTips.  </p> <p>Please head over to Looptips in order to read some really helpful tips to make your Looping easier.</p> <p></p>"},{"location":"operation/loop/open-loop/","title":"Open Loop","text":""},{"location":"operation/loop/open-loop/#open-loop-introduction","title":"Open Loop Introduction","text":"<p>Open Loop is the best place to start with Loop.</p> <ul> <li>Become familiar with Loop by watching it operate with Closed Loop disabled.</li> <li>Take it slow and safe to become a successful Looper.</li> </ul> <p>Practice with Simulators</p> <p>You can build Loop without connecting it to any hardware.</p> <ul> <li>You can use your phone, a partner's phone or a simulated phone on the computer</li> <li>You can practice with a simulated CGM and / or  a simulated pump.</li> <li>You can use Dexcom Share or Nightscout as a CGM to follow your own glucose.</li> <li>You can \"dose\" the simulated pump and your real pump at the same time and watch the glucose predictions.</li> </ul>"},{"location":"operation/loop/open-loop/#glucose-prediction","title":"Glucose Prediction","text":"<p>Pay attention to the prediction in the Glucose Chart. Practice with the user interface while you manually control your insulin delivery. Compare the recommended insulin after entering carbs for a familiar meal. If you do not understand the predictions or recommendations, do not enable Closed Loop. You may need to adjust settings or learn more about how the app works. Loop tries to keep predicted glucose in the Correction Range and, more importantly, above your Glucose Safety Limit.</p> <p>There's a lot to learn and understand. New loopers may need to adjust the following Therapy Settings, typically in this order:</p> <ol> <li>Basal Rates</li> <li>Insulin Sensitivity Factor (ISF)</li> <li>Carb Ratios (CR)</li> </ol> <p>Using an algorithm that updates glucose predictions and adjusts insulin delivery every 5 minutes requires accurate settings. Entering carbs and absorption time is a new skill that takes time to master.</p>"},{"location":"operation/loop/open-loop/#eventual-glucose","title":"Eventual Glucose","text":"<p>Watch the eventual glucose, current glucose and prediction curve in the Glucose Chart to understand Loop recommendations for insulin delivery adjustment.  Loop is looking at current glucose, glucose momentum, carbs on board, insulin on board, and retrospective trends to predict an eventual glucose.  Its current decisions are based on predicted, actual and eventual glucose.</p> <p>If there is a dip in the predicted glucose below the Glucose Safety Limit, Loop will not recommend insulin even if the eventual glucose is above your Correction Range.</p> <ul> <li>In Closed Loop mode, Loop automatically decreases insulin delivery using a temp basal of 0 U/hr until the predicted glucose exceeds the Glucose Safety Limit</li> <li>When you tap on the Bolus icon in the Toolbar, Loop recommends insulin delivery only after predicted glucose is above Glucose Safety Limit</li> <li>In Closed Loop mode, Loop automatically increases insulin delivery only after predicted glucose is above the bottom of the Correction Range</li> </ul> <p>If the Loop predictions don't match your experience, your settings may need to be adjusted.</p>"},{"location":"operation/loop/open-loop/#testing","title":"Testing","text":"<p>Open Loop mode shows you glucose trends without the influence of temp-basal or automatic-bolus from Loop. This is particularly helpful if you haven't used Medtronic sites/pumps or Omnipod prior to Loop. You may find that your basal rates and carb ratios can change significantly coming from other brands of pumps or from multiple daily injections (MDI).</p> <p>Take the time to establish a good basal profile using the pump you plan to use for Loop while in Open Loop mode.</p> <p>Test your insulin sensitivity factor (ISF) during Open Loop after your basal rates are established.  Loop uses your ISF every 5 minutes to update predictions, so it's worth testing before turning on automated insulin dosing with Closed Loop mode.</p>"},{"location":"operation/loop/open-loop/#meal-entry","title":"Meal Entry","text":"<p>Loop recommends increased insulin dosing as soon as you save carbs.</p> <p>Meal Entry is an important concept - there's a whole page devoted to it - but here's a quick summary. You tap on the plate icon in the Toolbar to start a meal entry.</p> <ul> <li>Meal Entry:<ul> <li>In the Add Carb Entry screen, you must enter Amount Consumed, defaults are ok for other rows</li> <li>The meal entry is not saved when you tap continue - Loop takes you to the Meal Bolus screen</li> <li>In the Meal Bolus screen, you can save the carbs and accept or override the recommended bolus</li> <li>Review the recommended bolus for the carb entry<ul> <li>Does the recommendation make sense based on your prior experience</li> <li>Pay attention to the glucose prediction chart embedded in the Meal Bolus tool</li> <li>Practice modifying when the carbs are expected and how long they are expected to last</li> <li>Practice modifying the bolus recommendation - note how the prediction changes</li> <li>When you are confident, you can save the carbs and deliver the bolus</li> </ul> </li> </ul> </li> </ul>"},{"location":"operation/loop/open-loop/#carb-absorption","title":"Carb Absorption","text":"<p>Loop uses carb absorption as a component to every meal entry. Watch your meals and try to estimate how long they impact your glucose for various types of food. Notice when Loop would suspend basal or increase insulin delivery and ask yourself why it would be doing that. Ask if this is the same decision you would make.  This effort  will help smooth the transition to closed loop.</p>"},{"location":"operation/loop/open-loop/#manual-or-correction-bolus","title":"Manual (or Correction) Bolus","text":"<p>At any time, you can enter a bolus using the Bolus (double orange triangles) icon in the Toolbar. Loop offers a recommendation if the glucose prediction supports one. Review the Eventual Glucose section above to understand when Loop will recommend a bolus. The Loop recommendation can be modified by editing the Bolus amount.</p> <p>More detail is provided at this link.</p>"},{"location":"operation/loop/open-loop/#troubleshooting","title":"Troubleshooting","text":"<p>If you use a RileyLink, determine how far the link can be from your phone and pump, and plan where to carry the link. DASH Omnipod users do not need the RileyLink but should determine how far their phone can be from the pod without communication problems.</p> <p>Learn to troubleshoot Red Loops and the cause of potential loop issues. You'll be less frustrated starting on closed loop if you know how to address these issues</p> <p>Familiarize yourself with the \"Bolus May Have Failed\" notifications and how to handle them.  Double-check the displays to verify that the bolus didn't enact before trying to give the bolus again.</p>"},{"location":"operation/loop/open-loop/#caregiver-training","title":"Caregiver training","text":"<p>Caregivers for Loopers should learn how to use Loop. Consider giving caregivers an individualized quick info sheet on Loop. School staff or your child need to know how to handle a site change at school. Try to watch Nightscout while you get to know Loop so that you can become better at remote troubleshooting problems you might encounter.</p>"},{"location":"operation/loop/open-loop/#loop-2-open-loop","title":"Loop 2 - Open Loop","text":"<p>Loop 2 SAFETY WARNING</p> <p>When you are operating in Open Loop mode, Loop 2.2.x offers recommendations for insulin delivery adjustment and displays them on the HUD.</p> <ul> <li>If you tap on the recommendation line, Loop applies that recommendation without asking for confirmation</li> <li>This is true for temp basal and automatic bolus</li> <li>To protect against accidental command of increased or decreased insulin dosing, make sure your phone is locked when not in use</li> </ul> <p>For safety reasons, these recommendations are no longer supplied with Loop 3. </p> <ul> <li>Tap on the bolus icon to see the recommendation if you think insulin is needed</li> <li>Use a Manual Temp Basal to reduce delivery if you see a low prediction</li> </ul>"},{"location":"operation/loop-settings/cgm/","title":"Loop 2 Add CGM","text":""},{"location":"operation/loop-settings/cgm/#add-cgm","title":"Add CGM","text":"<p>Now we need to add a CGM source so that Loop has glucose data. From the Loop settings screen, select <code>Add CGM</code>.</p> <p></p> <p>The standard selections are:</p> <ul> <li>Dexcom G6 (use this for Dexcom ONE)</li> <li>Dexcom G5</li> <li>Dexcom G4</li> <li>Dexcom Share</li> </ul> <p>If you added a compatible Medtronic pump earlier in the setup process, then you will also see an option for the compatible Medtronic sensor that works with that same pump. If you are using a compatible MDT sensor, select that option and the CGM data will be uploaded to Loop when pump status is updated.</p>"},{"location":"operation/loop-settings/cgm/#about-dexcom-share-credentials","title":"About Dexcom Share credentials","text":"<p>You do NOT need your Share account info listed in Loop settings if you are using a G4, G5, or G6 system. The transmitter ID is sufficient. In fact, the recommendation is that you leave your Share account empty so that you don't accidentally become internet-dependent for CGM data when you forget to update your transmitter ID when you start a new transmitter. Just leave the Share credentials blank.</p> <p>If you need to use Dexcom Share</p> <p>If the dexcom is on another phone and you choose to use Share (not advised), here is some information.</p> <p>For all selections, the Dexcom Share credentials (in other words, account login) is the same as what you used to log in to the active Dexcom app on your iPhone. Dexcom Share account is not always the same login info as your Dexcom Clarity account. For G4 users, the Share account is found in the account tab on the app. For G5/G6 users, unfortunately, there is no information in the app displaying what your account name is. The information is entered when you first log in to the app and then is never displayed again, nor visible under any information screens. If you have forgotten your G5/G6 account info, you can delete the Dexcom app and redownload it to try logging in again. This will not cause a restart of any sensor sessions in progress.</p> <p>If you do not enter your Share credentials correctly, you will get an error when Loop tries to access your Share account to backfill CGM data. That error message will look like below. If you see that message, delete your Share account from Loop settings and try again...or just leave it out and depend on your transmitter ID.</p> <p></p>"},{"location":"operation/loop-settings/cgm/#dexcom-g5-g6-one","title":"Dexcom G5, G6, ONE","text":"<p>The Dexcom G5 and G6 options only require the addition of the active transmitter ID, and the matching Dexcom app to be running on the Loop iPhone. Use the G6 options if you are using a Dexcom ONE CGM.</p> <p>When you change transmitters, you will need to select the <code>Delete CGM</code> button at the very bottom of the CGM info page in Loop. Then you will select your Dexcom system again and add the new transmitter ID. You cannot just tap on your old transmitter ID to update it.</p> <p>If you don't update your transmitter ID when you change active transmitters, your Loop will not get CGM data from the Dexcom app.</p> <p>If you did add Share credential, Loop will get data from your Dexcom Share server and will not work without cell or wifi connection. When Loop is using data from Dexcom Share servers, a small cloud will appear above the glucose reading in Loop and should tip you off that maybe you forgot to update your transmitter ID.</p>"},{"location":"operation/loop-settings/cgm/#dexcom-g4","title":"Dexcom G4","text":"<p>Dexcom G4 users will need the Dexcom G4 Share2 app active on their iPhone and paired to their Dexcom G4 Share receiver.</p>"},{"location":"operation/loop-settings/cgm/#dexcom-share","title":"Dexcom Share","text":"<p>The Dexcom Share selection is primarily for people who wish to test Loop function without a local CGM source and who are not running the Dexcom app on their Loop iPhone. This selection will require login access to a Dexcom Share account with live data and active internet connection in order to work.</p> <p>Dexcom Share is not available for Dexcom ONE CGM.</p>"},{"location":"operation/loop-settings/cgm/#libre-and-other-cgm","title":"Libre and Other CGM","text":"<p>Loop 2 does not natively support Libre CGM. </p> <p>If you switch to Loop 3, there are additional CGM options:</p> <ul> <li> <p>If you can upload your CGM to Nightscout, Loop 3 offers the option to use Nightscout as a CGM source.</p> </li> <li> <p>You can choose to download the Loop with patches option when building with the script.</p> <ul> <li>As a prerequisite, you must interface your iPhone to the Libre</li> </ul> </li> </ul>"},{"location":"operation/loop-settings/cgm/#next-step-loop-2-configuration","title":"Next Step: Loop 2 Configuration","text":"<p>Now that you have added your CGM source, we need to complete the configuration and settings in your Loop. Please head over to the Loop 2 Configuration page for guidance with this important part of Loop's setup.</p>"},{"location":"operation/loop-settings/configurations/","title":"Loop 2 Configuration","text":""},{"location":"operation/loop-settings/configurations/#configuration","title":"Configuration","text":"<p>This page will cover two general parts of the Loop app settings for Loop 2.2.x versions. The sections documented are circled in red in the screenshot below. The headings will match the flow of the screen, top to bottom.</p> <ul> <li> <p>The first circled section covers closed/open loop status and how to issue a Loop Report.</p> </li> <li> <p>The second circled section is the configuration section. This section contains a lot of really important settings that control how your Loop will calculate your predicted glucose curve. Given the importance of your predicted glucose curve to Loop's actions, please make sure you read over this page carefully to know how to navigate the selections and entries.</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/configurations/#closedopen-loop","title":"Closed/Open Loop","text":"<p>The user can select closed loop or open loop using this slider. When you first start Loop, we encourage you to leave this slider disabled and become familiar with the app using Open Loop mode.</p> <p>As soon as Closed Loop is enabled, Loop will begin automatic adjustment of insulin dosing. Please ensure the settings you entered are appropriate for the Loop algorithm.</p>"},{"location":"operation/loop-settings/configurations/#open-loop-mode","title":"Open Loop Mode","text":"<p>When the Closed Loop switch is in the (Off\u00a0\u00a0\u00a0\u00a0\u00a0) position, Loop WILL NOT modify insulin dosing automatically.</p>"},{"location":"operation/loop-settings/configurations/#closed-loop-mode","title":"Closed Loop Mode","text":"<p>When the Closed Loop switch is in the (\u00a0\u00a0\u00a0\u00a0\u00a0   On) position, Loop WILL automatically modify insulin dosing on the configured insulin pump. This is known as closed loop. Typically, Loop will show the recommended temp basal or automatic bolus just above the blood glucose graph prior to automatically enacting it. It may take a few seconds for Loop to connect to the pump to enact the modified dose.</p>"},{"location":"operation/loop-settings/configurations/#issue-report","title":"<code>Issue Report</code>","text":"<p>If you run into problems or errors with your Loop, a Loop Report, generated by tapping on the <code>Issue Report</code> row can be used to help identify where the problem is occurring. The Loop Report can be sent to yourself via text or email. You can then post it on Zulipchat to ask for help.</p> <p>Frequently, if you seek help with a technical problem, a Loop Report will provide insight for the developers and troubleshooters. Please email yourself a Loop Report anytime you are questioning Loop actions or displays. Acquiring a screen shot of the phone is also useful. You can use the report and graphics later to ask for help or discard them if you figure it out on your own.</p>"},{"location":"operation/loop-settings/configurations/#select-glucose-units","title":"Select Glucose Units","text":"<p>Before you continue further, a word about glucose units</p> <p>Entries into the configuration section will be available in mg/dL or mmol/L automatically, based upon how your blood glucose values are received. By default they are set to mg/dL, however once CGM values arrive in mmol/L these Loop settings can be entered in mmol/L. If you are planning to use mmol/L, be sure to wait to set your entries until after you have started to receive CGM values in Loop. If you do these in the wrong order, then your charts and entries may have incorrect units.</p>"},{"location":"operation/loop-settings/configurations/#correction-range","title":"Correction Range","text":"<p>The correction range is your blood glucose range that you would like Loop to correct to. Correction range is not necessarily the same target blood glucose range that you have discussed with your endocrinologist; generally the doctor's range may be much wider. For example, you may keep a correction target of 100-110 for Loop to aim to, but use a desired glucose target range of 80-180 when discussing things with your endo about \"time in range\".</p> <p></p> <p>Click the + in the upper right corner to add correction glucose range(s). You can have multiple ranges based on time of day, but the first setting of the day needs to begin at midnight.</p> <p>Correction ranges can be a single number, such as 100-100 mg/dL, or a range such as 100-120 mg/dL. Generally speaking, if you choose to use a range, keeping the range between about 10-30 mg/dL between the lowest and highest value is a good starting place.</p>"},{"location":"operation/loop-settings/configurations/#pre-meal-range","title":"Pre-Meal Range","text":"<p>Below the Correction Range entry is a section called \"Overrides\" with a Pre-Meal setting. While active, the pre-meal targets will replace the usual correction range for Loop's temp basal recommendations. If a pre-meal range is not entered in this section, the icon will remain grey and unusable on the main screen's toolbar.</p> <p>The pre-meal override target can be used as an easy way to get a small amount of insulin delivered before a meal in order to help control post-meal blood glucose spikes.</p> <p>If your normal target is 100-110 mg/dL and pre-meal target is 80-80 mg/dL, for example, Loop will give you an extra push to get you to the lower target number before the meal. This early insulin brings you into the meal with a mini-prebolus. The pre-meal target, when activated by pressing on the icon, will stay active for one hour, until carbs are entered, or until it is manually cancelled...whichever comes first.</p> <p>Loop will adjust any insulin bolus as needed based on the extra insulin provided during this pre-meal time.</p>"},{"location":"operation/loop-settings/configurations/#suspend-threshold","title":"Suspend Threshold","text":"<p>The suspend threshold must be set up for successful configuration of Loop. Your Loop will not turn green without setting this value. This value affects both bolus and basal recommendations by Loop.</p>"},{"location":"operation/loop-settings/configurations/#bolus","title":"Bolus","text":"<ul> <li>If you are trying to bolus a meal while any part of the predicted glucose curve is below this suspend threshold value, Loop will not recommend a bolus.  Instead, you will need to wait until your prediction curve is above the suspend threshold value in order to bolus.</li> </ul>"},{"location":"operation/loop-settings/configurations/#basal","title":"Basal","text":"<ul> <li>If your current or any point on your predicted glucose curve is below the suspend threshold, Loop will always recommend a temporary basal rate of 0 U/hr.</li> </ul> <p>Reasonable settings for suspend threshold will depend on user preference, but recommended not set lower than 65 mg/dL.</p>"},{"location":"operation/loop-settings/configurations/#basal-rates","title":"Basal Rates","text":"<p>Note: You cannot enter basal rates until you first add a pump in Loop settings. Your basal rates will be initially populated when you walk through the <code>Add Pump</code> part of the setup at the beginning of this setup guide.  </p> <p>Only one basal schedule may be set in each Loop app. The basal increments are available according to the increments of the particular pump/pod you are using. Not all pumps provide the same increments for basal deliveries. Basal schedule must start at midnight and cannot contain rates of 0 U/hr.</p> <p>To edit a line in your basal schedule, tap the line and adjust the time and/or amount.  To remove a line, select Edit in the top right and delete it.  If tapping the line doesn't work, try closing and re-opening the app.  When finished editing, click on the <code>Save to Pump...</code> or <code>Sync With Pod</code> button, depending on which pump you are using.</p> <p>If you make any basal edits and use the <code>Cancel</code> button to go back to the menu without successfully saving/syncing to pump/pod, the changes you made will not be saved. Loop makes saving/syncing to pump a mandatory step to successfully editing basal rates. If you get an error message while trying to save/sync the edited basal rates, please retry until successful.</p>"},{"location":"operation/loop-settings/configurations/#delivery-limits","title":"Delivery Limits","text":"<p>The maximum basal rate and maximum bolus settings are collectively referred to as Delivery Limits. This section will have been initially populated when you finished the <code>Add Pump</code> part of the setup previously. For safety, similar to basal schedule, you must keep these values the same on both the Loop app and within the pump/pod settings. If you edit these settings in Loop app, always use the <code>Save to Pump...</code> or <code>Sync With Pod</code> button, depending on which pump you are using.</p>"},{"location":"operation/loop-settings/configurations/#maximum-basal-rate","title":"Maximum Basal Rate","text":"<p>Maximum basal rate will cap the maximum temporary basal rate that the Loop is allowed to enact to meet your correction range. Typically, Loop users set their maximum basal rate around 3-4 times their highest scheduled basal rate. When you are first beginning to use Loop, it is wise to start conservative (low) in setting your maximum basal rate. If your settings are incorrect in other areas (basal rates, insulin sensitivity, carb ratio, etc), you may need time to identify where settings need to be adjusted. This process is easier if Loop is given less latitude to set high basal rates. Gradually increase your maximum basal rate as your comfort and confidence in Loop increases. If you need help with your settings adjustment, head over to LoopTips for some initial settings help</p>"},{"location":"operation/loop-settings/configurations/#maximum-bolus","title":"Maximum Bolus","text":"<p>Enter your desired single bolus maximum here. For safety, don't set a maximum bolus limit any higher than your typical large meal bolus.</p>"},{"location":"operation/loop-settings/configurations/#insulin-model","title":"Insulin Model","text":"<p>There are four insulin models to choose from with Loop 2.x; Walsh, Rapid-Acting Adults, Rapid-Acting Children, and Fiasp. If you want to read the nitty-gritty discussion that went into the development of the Rapid-Acting and Fiasp curves (collectively called \"exponential insulin models\"), you can see that in GitHub here.</p> <p>Loop 3 Insulin Type</p> <p>Loop 3 drops the Walsh model and, by default, does not include the concept of child versus adult for \"rapid\" acting insulin, i.e., Humalog, Novalog and Apidra.</p> <ul> <li>Insulin Type is selected when the user adds a pump</li> <li>The user can choose to customize Loop 3 to Enable Child Model</li> </ul> <p>We highly recommend selecting one of the exponential insulin models for Loop 2.2.x (in other words, not the Walsh model).</p> <p>A common new Loop user error is to select Walsh model in order to easily shorten their insulin duration (DIA) to one like they used prior to Looping. This almost invariably leads to insulin stacking. If you would like to read more about why the duration of insulin action is important in Loop vs how you've traditionally used it, please click here to read a blog post about the subject. In summary, choosing Walsh curve just to shorten your DIA will lead to insulin stacking and less than desired bolusing recommendations.</p> <p>You can click on each model and see what each model's insulin activity curve looks like, active one selected in blue.</p> <p></p> <p>The differences between the three exponential models (two Rapid-Acting and Fiasp) models has to do with the timing of the peak insulin activity timing. Not surprising, since Fiasp is marketed as the \"faster acting\" insulin. Currently all the exponential models are defaulted to an insulin duration of 6 hours, but the peak activity of the curves differs:</p> <ul> <li>Rapid-acting adult curve peaks at 75 minutes</li> <li>Rapid-acting child curve peaks at 65 minutes</li> <li>Fiasp peaks curve peaks at 55 minutes</li> </ul>"},{"location":"operation/loop-settings/configurations/#dosing-strategy","title":"Dosing Strategy","text":"<p>This configuration setting gives you the ability to select the Dosing Strategy. (If you do not see this setting, then you are running Loop v2.2.4 or older.) If you tap on that Dosing Strategy, it reveals a selection screen, shown in the graphic below, with some explanation.  Note that this Dosing Strategy feature was available for more than a year in the automatic-bolus branch.  Users who have been using the automatic-bolus feature should update as soon as possible to get the other improvements recently added, Loop Releases.</p> <p></p> <p>The Automatic Bolus selection causes Loop to provide 40% of the recommended dose as a bolus at the beginning of each Loop cycle (when a CGM reading comes in). This is a faster method of getting the recommended insulin delivered. When Loop delivers extra insulin, the scheduled basal rate continues unchanged.</p> <p>Both Temp Basal Only and Automatic Bolus strategies restrict basal rates to reduce the amount of insulin delivered when appropriate.</p>"},{"location":"operation/loop-settings/configurations/#temp-basal-only","title":"Temp Basal Only","text":"<ol> <li>When your glucose is at or above target, Loop determines the amount of Recommended Bolus based upon your settings.  Subject to your Delivery Limits, Loop will deliver the Recommended Bolus over 30 minutes using positive temp basals (i.e., increase over your scheduled basal rate) to increase your IOB. This decision is re-evaluated during every Loop interval.</li> <li>When your glucose is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB. This decision is also re-evaluated during every Loop interval.</li> </ol> <p>You can manually bolus at any time by pressing the Bolus icon in the center of Loop\u2019s Main Screen.</p>"},{"location":"operation/loop-settings/configurations/#automatic-bolus","title":"Automatic Bolus","text":"<p>When you are first starting Loop, we encourage you to leave automatic boluses disabled until you are sure your settings are dialed in.  To enable automatic boluses, click on Settings \u2013 Dosing Strategy \u2013 Automatic Bolus.  This Automatic Bolus checkbox turns-off positive temporary basal so that:</p> <ol> <li>When your glucose is at or above target, you receive 40% of the Recommended Bolus at every Loop interval.</li> <li>When your glucose is below target, negative temp basals (i.e., reduction of your scheduled basal rate) are used to reduce your IOB. This decision is re-evaluated during every Loop interval (same as with the Temp Basal Only dosing strategy).</li> </ol> <p>As with all Loop versions, you can manually bolus at any time by pressing the Bolus icon in the center of Loop's Main Screen.  Any bolus recommendation that you see when you press the Bolus icon will be 100% of the Recommended Bolus.</p>"},{"location":"operation/loop-settings/configurations/#carb-ratios","title":"Carb Ratios","text":"<p>Click the + in the upper right to add carb ratios for various times of day. Loop works best if you have tested and optimized your carb ratio settings for accuracy.</p> <p>Beware of other apps writing carbs to Health app</p> <p>If you are using a third-party app (such as Spike or MyFitness) that can write carbohydrates to the phone's Health app, you will need to double-check permissions to make sure Loop doesn't read those carb entries.  Confirm Loop permissions in Health to only <code>write</code> and not <code>read</code> carbs.  See see Loop Permissions.</p>"},{"location":"operation/loop-settings/configurations/#insulin-sensitivities","title":"Insulin Sensitivities","text":"<p>Insulin Sensitivity Factor (ISF) is the same term as Correction Factor used in some clinics and endocrinology offices. ISF represents the drop in blood glucose levels expected from one unit of insulin. Click the + in the upper right to add insulin sensitivities for various times of day. Loop works best if you have tested and optimized your ISF settings for accuracy. Insulin sensitivities can change for many reasons including waiting too long to change your infusion set. Loop will not auto-detect changes in ISF.</p> <p>Incorrectly set ISF is the most common cause of roller coaster glucose for new Loop users. You will need to raise (increase) your ISF value/number to help smooth a roller coaster glucose trend. You can read about that topic more over in LoopTips here.</p>"},{"location":"operation/loop-settings/configurations/#loop-2-services-optional","title":"Loop 2 Services (Optional)","text":"<p>You are not required to use services, although many Loopers use Nightscout. If you do not yet have Nightscout configured and want to add it later, just return to this page when you are ready. This can be added at any time. The same is true for the other services. For more details, click on Loop 2 Services.</p> <p></p>"},{"location":"operation/loop-settings/configurations/#next-step-loop-2-displays","title":"Next Step: Loop 2 Displays","text":"<p>Proceed to the Loop 2 Displays page. Understanding the Loop displays can be a valuable tool to understanding your Loop's actions, and also for troubleshooting, if you are having issues.</p>"},{"location":"operation/loop-settings/displays/","title":"Loop 2 Displays","text":""},{"location":"operation/loop-settings/displays/#loop-displays","title":"Loop Displays","text":"<p>This section of the docs describes the Loop displays available and what information they offer.  Information about Loop's actions (or inactions) can often be found simply by looking at the visuals presented in the app. (Page last updated for Loop v2.2.4.) For Loop 3, refer to Loop 3 Displays.</p>"},{"location":"operation/loop-settings/displays/#status-screen","title":"Status Screen","text":"<p>The Status Screen is the main root navigation screen in Loop. It is broken up into 3 main display areas; Heads Up Display (HUD), Charts, and Toolbar. The HUD is the top area of the screen. This shows the status of the last time loop ran, current BG Reading, current temp basal, and current pump information. The next area is the charting area. This includes, glucose trend and prediction, Active Insulin, Insulin Delivery, and Carbohydrates. The final display area is the toolbar which has buttons for Carbs, Pre-Meal, Bolus, Overrides, and Settings.</p> <p></p>"},{"location":"operation/loop-settings/displays/#heads-up-display","title":"Heads Up Display","text":"<p>The Heads Up Display (HUD) is a very useful quick reference guide to your Loop's status. Every 5 minutes, Loop updates CGM and pump/pod data. Loop timestamps the HUD data with the last data point that came in. If a timestamp goes older than 5 minutes old, that is a valuable indicator to where your Loop is failing to get the needed information. The HUD's first three icons, from left to right, are the same no matter whether you are using a Medtronic pump or Omnipod; status of the last time loop ran, current BG Reading, and current relative temp basal. The last two icons will change depending on what type of pump you are using.</p> <p>Medtronic users: The last two icons are the most recent (1) pump/reservoir status and (2) pump percentage battery remaining. Details below</p> <p></p> <p>Omnipod users: The last two icons are the most recent (1) pod status and (2) hours of pod use. Details below</p> <p></p>"},{"location":"operation/loop-settings/displays/#loop-status","title":"Loop Status","text":"<p>The Loop Status is the colored circle in the upper left corner of the main Loop display.  There are four colors that are typically displayed.</p> A grey circle indicates the Loop is warming up and hasn\u2019t yet completed its initial loop.  When the Loop is first activated, it may take about 15-20 minutes to complete the first Loop, and the grey circle will be displayed.  It needs CGM data to be gathered, so be patient.  When it finally completes its first loop, the circle will turn green.  If you can't get your grey loop to turn green, please see the Yellow and Red Loop troubleshooting page  for tips. A green circle indicates the Loop has been successfully completed within the last 5 minutes.  The time since the loop last completed will be displayed under the circle. A yellow circle indicates the Loop has not completed in the last 5-15 minutes.  It is not unusual to have a few instances of yellow circles throughout a day of looping.  They can be caused by temporarily getting too far away from RileyLink or iPhone (more than about 3-10 feet depending on conditions), CGM failing to read or being in ???, radio frequency \u201cnoise\u201d interference, and such.  Generally, most yellow circles will self-resolve without needing any special troubleshooting. A red circle indicates the Loop has not completed in over 15 minutes.  This is not a typical state, and you should troubleshoot why Loop is not completing.  Please review the Yellow and Red Loop troubleshooting page for tips on how to get your green Loop back.  Clicking on the red circle will also pop-up the last error message to help guide your troubleshooting. When the circle is notched and not complete, that means the Loop is operating in \u201copen-loop\u201d mode.  When the \u201cclosed-loop\u201d setting is turned on, the loop status will show a completed circle. <p>Fun Fact</p> <p>The loop status icon will pulse slightly when Loop is communicating with the pump.  The pulsing will stop when the communication has completed (green loop) or given up (yellow or red loop).</p>"},{"location":"operation/loop-settings/displays/#glucose","title":"Glucose","text":"The current BG reading from the CGM will display, including trending arrow and time the reading was taken.  If the BG is being read straight from the G5/G6 transmitter or G4 receiver, no special symbols will appear. If the BG is being read from the Dexcom Share Servers, a small cloud icon will be in the corner of the BG reading.  Internet access is required to run in this mode. When you first start Loop, there may be a small yellow alert next to the BG.  This should go away within a short period of time (around 5 minutes or less).  If the yellow alert remains, something may be wrong with fetching BG data.  You can try restarting the Loop app (double tap home button, up-swipe on the app to close it) to see if BG data will resume.  Special note for Dexcom G5/G6 users&gt;, a yellow alert will appear when calibration is needed.  The alert will clear once the calibration is given, but typically Loop will work IF the yellow alert is only for a needed G5/G6 calibration."},{"location":"operation/loop-settings/displays/#temp-basal","title":"Temp Basal","text":"The temp basal will display the enacted temp basal change relative to the scheduled basal.  So if the scheduled basal was 1.0 units per hour and Loop has set a temp basal of 0.2 units per hour, the temp basal icon will display -0.8 U, as shown in the graphic to the left."},{"location":"operation/loop-settings/displays/#reservoir-medtronic-users","title":"Reservoir (Medtronic Users)","text":"The reservoir icon will remain grey and plain until insulin volume decreases.  At 25% reservoir volume remaining, the reservoir icon will turn yellow.  At 10% reservoir volume remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds."},{"location":"operation/loop-settings/displays/#battery-medtronic-users","title":"Battery (Medtronic Users)","text":"For x54 pumps, the battery icon will show 100/75/50/25% increments just as the pump does.  As the battery level decreases, the icon will turn from grey to yellow to red.  For x22, x23 pumps, the battery icon will read discrete % values.  The warning colors/levels on Loop's battery indicator work in conjunction with the type of battery selected.  If you change battery types, please make sure to update your battery selection in the Loop app settings.   The pump's on-screen battery indicator is not a good indicator of remaining battery life for the purposes of looping.  Loop's pump communications will fail from low battery levels sooner than the insulin delivery will fail.  The Loop's battery level warnings are designed to give you approximately 8 hours of notice before the pump battery will need changing."},{"location":"operation/loop-settings/displays/#reservoir-omnipod-users","title":"Reservoir (Omnipod Users)","text":"The pod icon will remain grey and plain until insulin volume decreases.  At 50 units or less insulin remaining, the reservoir icon will turn yellow. At 20 units or less remaining, the reservoir icon will turn red.  The remaining units will be displayed when it gets to these lower thresholds. When the reading is 0 units, there may be up to 4 units of insulin available but don't count on it. If the pod senses insulin can no longer be delivered, the pod will have a sustained audible alarm (the scream). Tapping Replace Pod in Loop-&gt;Pod-&gt;Settings should silence the alarm."},{"location":"operation/loop-settings/displays/#pod-age-omnipod-users","title":"Pod Age (Omnipod Users)","text":"The pod's age, typically a 3-day lifespan, is represented by three equal segments of the pod age icon. As the pod ages, the segments are converted to a darker grey color. At 54 hours old, the pod age icon will turn yellow. At 72 hours old, the pod age icon will turn red, the pod will begin the periodic warning beep, and the pod age icon will show a \"replace pod\" message in the HUD. When you reach 80 hours of pod use, the pod will have a sustained audible alarm (the scream) and stops all insulin delivery. Tapping Replace Pod in Loop-&gt;Pod-&gt;Settings should silence the alarm."},{"location":"operation/loop-settings/displays/#charts","title":"Charts","text":"<p>There are several charts that help you navigate your Loop actions.  Clicking on each of the charts will also open up additional information.</p>"},{"location":"operation/loop-settings/displays/#glucose-chart","title":"Glucose Chart","text":"<p>The glucose chart displays BG values in your preferred units. (If not, quit and restart Loop app on your phone.) The vertical scale of the chart is calculated on the fly by Loop to be as useful as possible while including the highest and lowest readings in the chart.</p> <p>The horizontal axis is set to go forward from the current time until your DIA (insulin duration) forward (so you can see what Loop thinks BG will be eventually). It then goes back in time as far as it can, based upon the width in pixels of your screen. Note, if you turn your device to landscape mode you will have more screen real estate and thus will be able to see further back in time.</p> <p>The BG correction range is shown as a blue bar on the glucose chart.  Single-value range BG range (such as 100-100 mg/dL), will have a narrower blue range.  When a temporary override range is enabled, a darker blue bar where the overrides are set will be displayed, as well as the normal correction range in lighter blue.</p> <p>If you have a crazy negative prediction - it is likely that you set an override with a tiny sensitivity. Don't do that again. Best approach: Do not panic - this is a prediction only; not reality. Open the loop until the prediction settles down. In future, do not choose a tiny sensitivity to force less insulin, simply increase the correction range in your override - Loop will reduce your basal rate at the next cycle (within 5 minutes).</p> <p>The eventual BG displayed on the right side of the chart does NOT take into account a recently enacted temp basal.  In other words, if you are above BG range and Loop just enacted a high temp basal to help, the eventual BG does not reflect the expected lowering of BGs that would result from that recently enacted temp basal.  Loop waits until the insulin has actually been delivered before it \"uses\" the insulin in its calculations for BG impacts.  If you suspended your pump or had a \"no delivery\" alarm shortly after the temp basal was started, you would want that accurately reflected in the insulin on board and associated eventual BG.</p> <p>If you tap on the Glucose Chart itself, it will open the Predicted Glucose chart described below.</p>"},{"location":"operation/loop-settings/displays/#predicted-glucose-chart","title":"Predicted Glucose Chart","text":"<p>The predicted glucose view is a great way to gain insight into the various components\u2019 importance in Loop\u2019s prediction of eventual BG.</p> <p></p> <p>The graph at the top of this view will match your Glucose Chart. Below this chart you will see a very detailed explanation of all of the variables that Loop takes into account in predicting your future BG value. Each of those effects (including Carbohydrates, Insulin, Glucose Momentum and Retrospective Correction) includes details of the calculation used. You can tap on any of the entries to turn them off and on for visualization. The resulting changes can be viewed by the changes in the dashed lines.</p> <p>Note - these elements are not turned on and off in the Loop predictions. They just modify the graph so you can view the relative effects.</p>"},{"location":"operation/loop-settings/displays/#active-insulin-chart","title":"Active Insulin Chart","text":"<p>The Active Insulin chart displays the total insulin contribution from both temp basals and boluses.  Active IOB can be either positive and negative IOB.  Negative IOB results from the suspension of normally scheduled basals.  The active insulin displayed in the upper right corner of the chart does NOT include insulin contributions from a recently enacted temp basal or bolus until the (for Medtronic) pump\u2019s reservoir volume is read and confirms a drop in reservoir volume (confirming the insulin has actually been delivered). The opposite is true for Omnipods. If a message is sent from Loop, it assumes the pod got the message and enacted it - even if the acknowledgement is not received.  Later, when communication is restored, if a command was not enacted by the pod, the Event History is updated.</p> <p>Medtronic Only: So long as you have Event History as the Preferred Data Source in Loop settings, primed insulin deliveries (e.g., cannula fills or manual primes) will not be counted towards IOB.</p>"},{"location":"operation/loop-settings/displays/#insulin-delivery-chart","title":"Insulin Delivery Chart","text":"<p>The Insulin Delivery chart displays a history of the temp basals enacted by Loop.  The display is relative to the scheduled basal rates entered in the Loop settings.  So, a rate displayed in this chart as <code>+0 units</code> would indicate no temp basal was set, and Loop defaulted to the scheduled basal rate.  Individual boluses are indicated by an orange triangle on the chart (shown in the graphic above, near the left-most time).  The total insulin delivered since midnight, including all basals and boluses AND (Medtronic Only) priming insulin, is given in the upper right corner of the graph.</p> <p>Please be patient for a bolus delivery to appear.  There is a lag time from when you press the \u201cdeliver\u201d bolus button to when the orange triangle is drawn sometimes.  The insulin has to be delivered and then the (Medtronic Only) pump reservoir needs to be read to confirm delivery, before the triangle will appear and IOB will be added.  Occasionally, the bolus may be temporarily rendered (drawn) as a very high temp basal rate vs. a (triangle) discrete bolus event.  This does NOT mean that the Loop actually enacted a high temp basal rate...only that the bolus is being drawn on the chart in the equivalent of a high temp basal rate.</p>"},{"location":"operation/loop-settings/displays/#reservoir-and-event-history","title":"Reservoir and Event History","text":"<p>Clicking on either the Active Insulin or Insulin Delivery charts will open your Insulin Delivery history.  The top of the screen will display the current IOB and the total insulin delivered for the day since midnight (or since the time the loop became active if you started Loop after midnight). There are two viewing options; Reservoir or Event History.  </p> <ul> <li> <p>Reservoir: Omnipod users should not worry about the reservoir display. Pods do not report or track insulin remaining until their reservoirs get below 50 units remaining. If your pod has more insulin than that - you'll see the reservoir history from the previous pod - ignore that. Medtronic users will have reservoir history displayed in 5-minute increments, unless Loop has been having communication issues.</p> </li> <li> <p>Event History: Event history is a detailed accounting of all pump/pod actions. Both Medtronic and Omnipod users will have a detailed record of event history. If you tap on an event, you get more detail. Turn your phone to landscape to improve readability.</p> </li> </ul>"},{"location":"operation/loop-settings/displays/#active-carbohydrates-chart","title":"Active Carbohydrates Chart","text":"<p>The Carbohydrate chart displays the carbs used by Loop to predict BG changes.  The active COB is displayed in the upper right corner of the chart.  Clicking on the chart will open the Carb Entries history and you can edit/delete any previous entries through that screen.  Please read the Carb Entry page for more information about editing carb entries.</p> <p></p> <p>For more information about the Insulin Counteraction Effects information found in the Carb History, please see here.</p>"},{"location":"operation/loop-settings/displays/#tool-bar","title":"Tool Bar","text":"<p>The toolbar is where your inputs to the Loop behavior take place.  The individual components of the toolbar are, left to right:</p> <ul> <li> <p>Carb entry tool- click on this tool to enter carbs into the Loop app.  Loop will not read carb entries from a Medtronic pump or Nightscout, so you must use the carb entry tool in Loop app in order to have carbs accounted for by the Loop.  Detailed info regarding how to enter, save, and edit carb entries can be found in the Carb Entry page.</p> </li> <li> <p>Pre-meal range - click this tool to set the Pre-Meal temporary override range. (If you have not configured a pre-meal range under Loop Settings, this icon will be inactive - some people prefer this to avoid accidently tapping it.) This range will remain in effect (1) for 60 minutes, (2) until a carb entry is saved, or (3) until the range is toggled off manually or by tapping on the override icon, whichever comes first.  The background coloring of the Pre-Meal range will turn green when active and there will be a dark blue line on the BG chart indicating where the override range is enabled.</p> </li> <li> <p>Bolus tool - click on this tool to bring up the bolus tool.  Normally, this screen will automatically open on its own and function as a bolus wizard when a meal is saved on the carb entry tool screen.  But you can click on this icon anytime to manually bolus. During rapidly rising BGs, where Loop doesn't have an adequate temp basal rate to cover the pace at which BGs are rising, you may try clicking on the bolus tool to see if Loop is recommending a correction bolus to help control the BG spike. Or if you want to trade bolus now for basal later (super bolus), you can enter a bolus greater than Loop recommends - Loop will set zero Temp Basal next cycle. For more information about the Bolus tool features and use, see the Bolus page.</p> </li> <li> <p>Overrides - click this tool to set an Override.</p> </li> <li> <p>Loop Settings - click on this tool to make changes to any of your Loop settings.</p> </li> </ul>"},{"location":"operation/loop-settings/displays/#next-step-pump-settings","title":"Next Step: Pump Settings","text":"<p>The pump attached to Loop has a screen to display status and command options. For Loop 2, these are documented in Loop 2 Pump Settings.</p>"},{"location":"operation/loop-settings/mdt-pump/","title":"Loop 2 Add Medtronic","text":""},{"location":"operation/loop-settings/mdt-pump/#medtronic-pump-users","title":"Medtronic Pump Users","text":"<p>Your Loop app will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Medtronic pump, you can follow along for the rest of this page. If you are using an Omnipod pump, please head over to Loop 2 Add Omnipod instead.</p>"},{"location":"operation/loop-settings/mdt-pump/#prepare-medtronic-pump","title":"Prepare Medtronic Pump","text":"<p>Before you begin the rest of the setup process, there are several steps on your Medtronic pump that you will need to complete prior to moving on with Loop setup. DO NOT SKIP THESE STEPS OR YOUR LOOP WILL NOT WORK.</p> <ol> <li>Turn off Patterns under the basal menu settings. This will force Loop to use your \"Standard\" basal rate schedule.</li> <li>Make sure your standard basal rate schedule is up-to-date and accurate. Loop will automatically import your pump's existing standard basal rate schedule when you add your pump in the subsequent parts of this page. If you change basal rates later...make sure to make those changes in the Loop app and use Loop to save the changes back to the pump.  If you make changes directly in the pump, Loop will not automatically know about those changes and you will cause a mismatch.</li> <li>Set your pump's <code>Temp Basal Type</code> to <code>Insulin Rate (U/hr)</code>. Do NOT use percentage. Your Loop will not run unless your temp basal type is set to units/hour.</li> <li>Make sure your maximum basal rate and maximum bolus (those are particular settings in the pump) are reasonably set for your particular needs. For new Loop users, a maximum basal rate equal to approximately 2-4 times your highest scheduled basal rate is a good starting point as you learn Loop and dial in your other settings. You can adjust as your comfort and use of Loop develop.</li> <li>Set Remote Devices to <code>ON</code> and enter any random ID (010101 will work - avoid using all zeros). This setting is found in the pump's Utilities menu (for x23 continue to Connect Devices, Remotes) and turn <code>ON</code> the Remote Options.</li> <li>Cancel any currently running extended or dual wave boluses.  Loop cannot loop with those running.</li> <li>Make sure the other settings in your pump, such as bolus wizard settings, are up-to-date so that if you stop using Loop, those settings will be accurate for non-Loop traditional pump use.</li> </ol>"},{"location":"operation/loop-settings/mdt-pump/#select-pump-type","title":"Select Pump Type","text":"<p>Let\u2019s start by clicking on the Loop Settings button in the tool bar at the bottom of your Loop app. It looks like a little sprocket. On the settings screen that opens, click on <code>Add Pump</code> and select the Medtronic pump option that appears.</p> <p></p>"},{"location":"operation/loop-settings/mdt-pump/#connect-pump-to-loop","title":"Connect Pump to Loop","text":"<p>New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \"RileyLink\" name...go ahead and switch that toggle. The default device name will appear after that toggle is green.</p> <p>You can later personalize the default device name once it is connected to Loop.</p> <p></p> <p>Continue with these steps to connect your Medtronic pump to Loop.  </p> <ol> <li>Make sure your RileyLink is turned on and nearby, then you will see a RileyLink listed in this area of the settings.  Actually, you will see a list of any RileyLinks that are in the nearby area. Slide on the toggle for just one RileyLink.</li> <li>Add your pump's region, color, and serial number. <ul> <li>Note that some Canadian pumps use <code>CM</code> instead of <code>CA</code> for the region code.  Just select <code>CA</code> in the dropdown menu.</li> </ul> </li> <li>Click the <code>Continue</code> button to finish the addition of your pump. </li> </ol> <p></p> <p>For x23 and x54 Medtronic pump users only</p> For x23 and x54 Medtronic pump users, there is a packet of information special to those pumps called MySentry messages. If you have never setup this part of the pump previously, you may see a screen, called \"Pump Broadcasts\", at this point in the setup process.Follow the directions on the screen. They will require you to take some manual steps on your pump to \"pair\" it with your Loop app.Basically, you will need to go to your pump's main menu, scroll down to Utilities, then Connect Devices, then Other Devices, turn that setting On, and then select Find Device. Once you do that, click on the <code>Continue</code> button in Loop app and the pairing will take place. This will allow those MySentry packets of information to flow to Loop app.This step does not apply for x22 or x15 pump users, since those pumps do not have MySentry capabilities. <p>Now that your pump is paired with Loop, you will be finishing these steps:</p> <ol> <li>Change your pump time using the Loop app (and read all the info on that screen)</li> <li>Import your pump's basal rate schedule, maximum basal rate, and maximum bolus (maximums are collectively called \"delivery limits\" in Loop)</li> <li>Select your pump's battery type (lithium or alkaline)</li> <li>Leave the Preferred Data Source on Event History</li> </ol> <p>Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History.</p> <p></p>"},{"location":"operation/loop-settings/mdt-pump/#change-time-zone","title":"Change Time Zone","text":"<p>Loop automatically prompts you to set your pump time using the Loop app as part of initial Loop setup. There will be other times you need to change the time - traveling or daylight savings time start and end. It is important that you use Loop to change time on your pump; do not adjust time on your pump directly once it is attached to Loop.  </p> <p>If you are traveling through time zones, Loop continues to work - just be aware that your basal rate and other configuration settings will be in the original time zone. To change time zones, please follow the Change Time Zone instructions.</p> <p>Always use the Loop -&gt; Pump -&gt; Change Time command to change pump time. Do not use the Medtronic pump menus to change your pump's time when Looping.</p>"},{"location":"operation/loop-settings/mdt-pump/#next-step-add-cgm","title":"Next Step: Add CGM","text":"<p>Congrats! You've added your Medtronic pump to your Loop app. Now, click on the settings button in the upper left corner to take you back to Loop's settings menu. Your next step is to Loop 2 Add CGM to your Loop app. After all, without CGM data, your Loop won't loop.</p>"},{"location":"operation/loop-settings/omnipod-pump/","title":"Loop 2 Add Omnipod","text":""},{"location":"operation/loop-settings/omnipod-pump/#omnipod-users","title":"Omnipod Users","text":"<p>Your Loop app will have a lot of blank spots until you input some basic settings. The beginning step is to add a pump to your Loop app. If you are using an Omnipod pump, you can follow along for the rest of this page. If you are using a Medtronic pump, please head over to Loop 2 Add Medtronic Pump page instead.</p>"},{"location":"operation/loop-settings/omnipod-pump/#select-pump-type","title":"Select Pump Type","text":"<p>Let\u2019s start by clicking on the Loop Settings button in the toolbar at the bottom of your Loop app. It looks like a little gear. On the settings screen that opens, click on <code>Add Pump</code> and select the Omnipod option.</p> <p></p>"},{"location":"operation/loop-settings/omnipod-pump/#select-rileylink","title":"Select RileyLink","text":"<p>New RileyLink compatible devices won't have a name listed next to their slider at first. The name will only be displayed after connecting the device to Loop for the first time. So, if all you see in the device list is a little toggle and no \"RileyLink\" name...go ahead and switch that toggle. The default device name will appear after that toggle is green.</p> <p>You can later personalize the default device name once it is connected to Loop.</p> <p></p> <p>A list of all RileyLink compatible devices in the nearby area will display in the RileyLink Setup screen. Select your RileyLink by sliding the toggle to display green and then press the blue <code>Continue</code> button at the bottom of the screen. If your RileyLink does not appear, make sure it is charged and turned on: slide the recessed switch toward the case's keyring.</p>"},{"location":"operation/loop-settings/omnipod-pump/#delivery-limits-and-basals","title":"Delivery Limits and Basals","text":"<p>The next screen will offer two areas where you will need to enter information:</p> <ul> <li> <p>Delivery Limits: Tapping on Delivery Limits presents a screen where you enter your Maximum Basal Rate and your Maximum Bolus.</p> <ul> <li>Your Maximum Basal Rate limits how aggressive your Loop app can be in setting temporary basal rates to treat high blood glucose.</li> <li>The recommended value for new users is about 3 times their highest scheduled basal rate.</li> <li>Your Maximum Bolus entry limits the size of a single bolus.</li> <li>The recommended value for new users is the largest bolus typically used for meals.  </li> </ul> </li> <li> <p>Basal Rates: Enter your scheduled basal rates, beginning at midnight. Consistent with Omnipod use, the scheduled basal rates have a maximum of 24 entries, no 0 u/hr entries are allowed, and the rate increments are 0.05 u/hr.</p> <ul> <li>Start by tapping the + at the top right of the Basal Rates screen to enter the first value.  </li> <li>Tap + to add rows as needed.</li> <li>When you are done, hit the <code>Back</code> button at the upper left.</li> <li>Note - once a pod is paired to the Loop app, you will press <code>Sync to Pod</code> instead of <code>Back</code> to save your basal rates - you only see <code>Back</code> when no pod is paired.</li> <li>To delete a basal rate or rearrange the order, first tap <code>Edit</code> on upper right and then use standard Apple gestures (for your phone iOS) to delete or move rows.</li> <li>You will not be able to move or delete the row for midnight.</li> <li>You will not be able to add another row if the last row is for 11:30 pm</li> </ul> </li> </ul> <p></p> <p>When you finish entering these values, press the blue <code>Continue</code> button on the bottom of the Pod Settings screen to continue with the next steps of Pod setup.</p>"},{"location":"operation/loop-settings/omnipod-pump/#pair-pod","title":"Pair Pod","text":"<p>Max Fill is 200 Units</p> <p>When you fill the Pod do not exceed 200 units.</p> <p>If you overfill the pods, you may get a pod fault right after priming.</p> <p>Pod Filling and Insertion</p> <p>The Pod filling and insertion instructions are the same with the Loop app as they are for the PDM.  These videos: Filling a Pod with Insulin and Inserting the Cannula, may be useful.  You will use your phone and RileyLink compatible device instead of the PDM.  Be sure to keep the phone and RileyLink close during pairing and insertion because the Pod uses a low-power mode during these activities.</p> <ol> <li>Fill the Pod with insulin until it beeps (minimum fill is 80 units)</li> <li>Place the Pod about 6 inches from the RileyLink compatible device with the phone within a few feet</li> <li>Click the <code>Pair</code> button</li> <li>Loop checks on the radio signal strength (RSSI) reported by the pod when it starts to pair and if it is not within the optimum range, it will ask you to move the RileyLink closer or further away and try again.</li> <li>Wait while the progress bar for priming completes</li> <li>Press the <code>Continue</code> button when the blue checkmark confirms priming is complete</li> </ol> <p></p>"},{"location":"operation/loop-settings/omnipod-pump/#insert-cannula","title":"Insert Cannula","text":"<ol> <li>Prepare your insertion site</li> <li>Remove the Pod's needle cap and adhesive backing</li> <li>If the cannula is safely tucked away, apply the Pod to your desired infusion site. If cannula is sticking out, press <code>cancel</code> in the upper right corner of the screen and try a new Pod. (Report this issue to Insulet; it is a Pod problem.)</li> <li>Press the <code>Insert Cannula</code> button.</li> <li>Listen to the clicks filling the cannula, wait for insertion and the progress bar to complete. The number of clicks to insertion is not consistent. The cannula will deploy before the progress bar is completed.</li> <li>Confirm cannula has deployed: you should feel it and there is a pink slide that can be seen on the outside of the pod as shown in this video: Inserting the Cannula.</li> <li>Proceed to the Expiration Reminder screen to accept or modify the default reminder.</li> </ol>"},{"location":"operation/loop-settings/omnipod-pump/#expiration-reminder","title":"Expiration Reminder","text":"<p>Finish the setup using the default expiration reminder time (2 hours before a full 3-days of usage). You can modify that expiration reminder at any time, see Expiration Reminder. The notification will come from Loop; your Pod will not beep at this time. Setup is complete and your Pod is ready for use when you press the <code>Continue</code> button.</p> <p>Range</p> <p>Now that the priming and insertion steps are complete, the Pod is in normal power mode, so the range between the Pod and RileyLink compatible device is increased.</p> <p></p>"},{"location":"operation/loop-settings/omnipod-pump/#pod-settings","title":"Pod Settings","text":"<p>After the Pod setup is complete, you will be on the Pod Settings screen. The information on this screen is described in Omnipod Pump Commands.</p>"},{"location":"operation/loop-settings/omnipod-pump/#next-step-add-cgm","title":"Next Step: Add CGM","text":"<p>Congrats! You've added your Pod to your Loop app. Now, click on the <code>Done</code> button in the upper right corner of your Pump Settings screen to take you back to Loop Settings. Your next step is to Loop 2 Add CGM to your Loop app. After all, without CGM data, your Loop app won't loop.</p>"},{"location":"operation/loop-settings/pump-commands/","title":"Loop 2 Pump Settings","text":""},{"location":"operation/loop-settings/pump-commands/#pump-settings","title":"Pump Settings","text":"<p>To bring up the Pod/Pump Settings display, tap on the reservoir icon in the Heads Up Display or the image of the pump in the Loop settings screen.</p> <p>Omnipod Eros vs DASH</p> <p>With the addition of DASH pods with Loop 3, you will notice all reference to Eros pods continue to say Omnipod in both the documentation and the code.</p> <p>Documentation and screens in the app indicate DASH explicitly.</p>"},{"location":"operation/loop-settings/pump-commands/#change-time-zone","title":"Change Time Zone","text":"<p>The schedules for the basal rates, correction ranges, insulin sensitivity factors and carb ratios stay at the pump time even if the user and their phone change time zones or when daylight savings time occurs.  To bring the pump into the same time zone as the phone, use this command in Loop. (Medtronic users - do NOT adjust time on your pump - always go through Loop.)</p> <p>Select the Pod/Pump Settings display, scroll down to the Change Time Zone line, example shown in the graphic below.  You can leave the time zone offset unchanged or touch it to change to the current time zone.  Note that the 24 hour configuration pattern for basal rates, insulin sensitivity factor, carb ratio and correction range are aligned with the time zone shown on this line.</p> <p></p> <p>Once the Change Time Zone command is tapped, Loop no longer shifts the 24 hour configuration pattern to the old time zone. Some behavior depends on whether the pump is an Omnipod or Medtronic.</p>"},{"location":"operation/loop-settings/pump-commands/#omnipod-commands","title":"Omnipod Commands","text":"<p>To bring up the Pod Settings display, tap on the Pod Age icon on the Heads Up Display or the image of the Omnipod in the Loop settings display to reach the Pod Settings display.</p> <p>This screen provides important information about your Pod and allows you to issue some commands to the Pod through Loop. There were some recent modifications made to the layout and underlying information for some of the rows.</p> <ul> <li> <p>Enable/Disable Confirmation Beeps: moved up to the Configuration section; beeps for all manual pod operations; uses a more efficient implementation</p> </li> <li> <p>Suspend/Resume: Pod will beep every 5 minutes when suspended; the beeps can be silenced by tapping on the Alarms line</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/pump-commands/#pod-information","title":"Pod Information","text":"<p>The first section has the (72 hour) Pod expiration date/time and how long the Pod has been active. These are determined when the Pod is activated by injecting insulin into the reservoir and uses pod active time.</p>"},{"location":"operation/loop-settings/pump-commands/#bolus-delivery","title":"Bolus Delivery","text":"<p>This line reports the % progress of any ongoing bolus. This line reports <code>None</code> unless a bolus is actively being delivered when you enter Pod Settings. This line may not update until you tap on the refresh symbol to the right of the Pod image, or exit and re-enter the Pod Settings screen.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#basal-delivery","title":"Basal Delivery","text":"<p>This line reports</p> <ul> <li>schedule for scheduled basals</li> <li>U/hour for a 30 minute Temporary Basal</li> <li>suspended if the Pod is suspended</li> </ul> <p></p>"},{"location":"operation/loop-settings/pump-commands/#alarms","title":"Alarms","text":"<p>This line displays Alerts or Alarms; tapping on it, or on the accompanying banner displayed in the HUD, acknowledges the alert</p> <ul> <li>If your Pod is beeping an alert, this line will display information about the alert. Tapping on the alert clears or \"snoozes\" the alert status.</li> <li>If your Pod is screaming, it's time to change it.  Tapping on this line stimulates an immediate reading of the actual error (normally this happens at the next CGM reading).</li> <li>There was overwhelming preference during initial testing to minimize the \"beeping\" of Pods. You can turn on additional beeps by enabling Confirmation Beeps. These are the Loop Notifications and Pod beeps you should expect with the default (confirmation beeps disabled) setting:<ul> <li>Expiration Reminder - Loop notification only, no Pod beeps</li> <li>72 Hours Expiration - Loop notification and Pod beeps (Pod beeps continue  once per hour until alert is acknowledged)</li> <li>79 Hour Alert - Loop notification and Pod beeps (Pod beeps continue every 15 minutes until alert is acknowledged)</li> <li>Pod Suspended (v2.2.5 or later): Pod beeps once per 5 minute unless this alarm is cleared</li> </ul> </li> </ul> <p></p>"},{"location":"operation/loop-settings/pump-commands/#reservoir","title":"Reservoir","text":"<p>Pods do not report the volume of insulin remaining in the reservoir until there are less than 50 units remaining. So, typically you will see \"50+ U\" in this line for quite a while with a new Pod.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#insulin-delivered","title":"Insulin Delivered","text":"<p>This line is the basal and bolus insulin delivered by the Pod since the cannula was inserted. It is obtained by taking the reported Pod insulin delivery and subtracting the amount used to prime the Pod and fill the cannula upon insertion (about 3\u00a0U).</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#pod-commands","title":"Pod Commands","text":"<p>This section contains commands the typical user will use.</p>"},{"location":"operation/loop-settings/pump-commands/#suspend-delivery","title":"Suspend Delivery","text":"<p>This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say <code>Resume Delivery</code>. (If the display does not update, tap the refresh screen icon at the top of the screen to the right of the Pod image.)</p> <p></p> <p>A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended. Unless you are running v2.2.4 or earlier, a pod beep is initiated with a frequency of every 5 minutes.  This can be silenced by acknowledging the alarm.</p> <p></p> <p>You will need to press <code>Tap to Resume</code> in the banner or the <code>Resume Delivery</code> button in the Pod Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed.</p> <p>When you resume delivery, the 24 hour Pod basal rate schedule is sent to the Pod. Be sure the Phone, RileyLink and Pod stay close until the message exchange is complete.  </p>"},{"location":"operation/loop-settings/pump-commands/#enable-confirmation-beeps","title":"Enable Confirmation Beeps","text":"<p>This turns confirmation beeps on for the Pod. The Pod beeps when you enable this, but is silent when you disable it.</p> <ul> <li>Bolus Acknowledgement - the Pod beeps when it has received and accepted the bolus command from Loop (manual or automatic) and then beeps again when the bolus is completed.</li> <li>Other - all the manual commands you can issue to the Pod will have an associated confirmation beep when the message is received by the pod, such as updating the basal rate, requesting Pod status, canceling a bolus, suspending or resuming delivery.</li> </ul>"},{"location":"operation/loop-settings/pump-commands/#expiration-reminder","title":"Expiration Reminder","text":"<p>With the Expiration Reminder you can set a convenient time to get a notification to replace your Pod. Loop sets the default to 70 hours, i.e., two hours before the full 3 days that Insulet guarantees. The allowed range of values is between 1 hour and 24 hours prior to the Pod expiration at 72 hours of Pod life. If you select a date/time outside this range, Loop will modify your selection to the closest allowed value.</p> <p>As with the PDM, Loop allows the Pod to continue operating after expiration until it reaches the maximum allowed 80 hours of life, at which time, the Pod shuts down and alarms.  Loop detects this message the next time it tries to communicate with the Pod. In the event your Pod runs out of insulin before that time, then you will get a \"Pod empty\" notification.</p> <p>The glitch in setting the Expiration Reminder in v2.2.4 is now fixed.</p> <p>Loop v2.2.4 has a \"glitch\" in setting the Expiration Reminder.  Tap on the line (can't change time), scroll the entire display up or down until the line no longer is visible and then scroll it back. The Expiration Reminder display should now look like the graphic below. The expiration reminder time can now be selected.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#change-time-zone_1","title":"Change Time Zone","text":"<p>Use the <code>Change Time Zone</code> command to align your configuration settings with the current time zone. Note that this updates your basal schedule on your Pod. If you start a new Pod session without modifying the time zone here, the original time zone will be used for the new Pod. Please wait until you see <code>Succeeded</code> appear on the page to ensure the command has successfully been received by the Pod.</p> <p>Make sure the phone, RileyLink compatible device and Pod are kept in close proximity until this command has completed. The time zone is updated by Loop issuing the 24-hour basal rate schedule to the Pod based on the current time.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#replace-pod","title":"Replace Pod","text":"<p>This command deactivates a Pod prior to replacing it. Once you tap <code>Replace Pod</code>, another screen appears for you to confirm that you mean it.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#devices","title":"Devices","text":"<p>This allows access to the RileyLink screen for each connected RileyLink compatible device.</p>"},{"location":"operation/loop-settings/pump-commands/#pod-diagnostics","title":"Pod Diagnostics","text":"<p>This section is labeled Diagnostics, but many Pod users make use of this section.</p>"},{"location":"operation/loop-settings/pump-commands/#read-pod-status","title":"Read Pod Status","text":"<p>This command requests the status of the Pod and reports some of the returned information.</p> <ul> <li> <p>The line labeled <code>Pulses</code> reports the total number of pulses of insulin delivered by that Pod since activation (adding insulin to the reservoir). To convert this to units of insulin, multiply by 0.05 units/pulse. If you compare this report (for your Pod) to the <code>Insulin Delivered</code> line in Pod settings, for your Pod at the same time, the difference is the insulin used to prime the Pod and fill the cannula at insertion.</p> </li> <li> <p>The line label <code>RSSI</code> reports the Received Signal Strength Indicator (RSSI) between the RileyLink compatible device and the Pod. The RSSI is a positive number with a larger number indicating a stronger signal strength detected by the Pod.</p> <p></p> </li> </ul>"},{"location":"operation/loop-settings/pump-commands/#play-test-beeps","title":"Play Test Beeps","text":"<p>This command requests the Pod emit a beep pattern. If you hear it, you know the commands are getting to the Pod. A message appears on your screen to indicate Loop got or did not get an acknowledgment from the Pod.</p>"},{"location":"operation/loop-settings/pump-commands/#read-pulse-log","title":"Read Pulse Log","text":"<p>This command reads the pulse log (diagnostic), displays it on the screen and saves the result in the log file. It takes some time, so keep your gear close until command completes. This can be extracted by sending the pulse log to yourself using the send-to icon at the top right of the screen.  It is also included in the Issue Report. If you are having communication issues, you can provide this report to an expert who may be able to provide assistance. Post for help in either zulipchat or a Facebook group to request assistance and you'll get information about how to get that log file submitted.</p>"},{"location":"operation/loop-settings/pump-commands/#test-command","title":"Test Command","text":"<p>This verifies communication with the Pod. Loop reports success or failure.  Use Get Pod Status if you want to see the some of the information returned from the Pod.</p>"},{"location":"operation/loop-settings/pump-commands/#pod-details","title":"Pod Details","text":"<p>This section provides some Pod identifying information. The Lot number and TID number are the tiny number stamped on the Pod that Insulet might ask you to report if you happen to call in this Pod for an appropriate failure.</p>"},{"location":"operation/loop-settings/pump-commands/#medtronic-commands","title":"Medtronic Commands","text":"<p>Medtronic commands are found in the Pump Settings screen shown in the graphic below. The top section is configured at the time the pump is connected to Loop and can only be modified by deleting the pump and adding a pump. This screen is the same as for earlier versions with the addition of the <code>Use MySentry</code> row.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#suspend-delivery_1","title":"Suspend Delivery","text":"<p>This command will suspend all insulin delivery; basals, temp basals, and boluses in progress. When you press suspend delivery, all insulin delivery stops indefinitely and the display changes to say <code>Resume Delivery</code>.</p> <p>A banner notice will appear on the Loop's main screen when phone is in portrait mode when insulin delivery is suspended.</p> <p>You will need to press <code>Tap to Resume</code> in the banner or the <code>Resume Delivery</code> button in Pump Settings to resume your scheduled basal rate and let Loop get back to action. If a bolus delivery was interrupted by the Suspend Pod command, it will not be resumed.</p>"},{"location":"operation/loop-settings/pump-commands/#change-time-zone_2","title":"Change Time Zone","text":"<p>During normal operation, Loop automatically keeps phone time and pump time aligned. In the case of time-zone or daylight savings time changes, Loop allows the differences to persist until the user chooses to <code>Change Time Zone</code> and accounts for time zones when performing insulin delivery accounting.</p>"},{"location":"operation/loop-settings/pump-commands/#pump-battery-type","title":"Pump Battery Type","text":"<p>The type of battery used in the Medtronic pump affects how Loop interprets the battery level for the pump.</p>"},{"location":"operation/loop-settings/pump-commands/#preferred-data-source","title":"Preferred Data Source","text":"<p>Leave the Preferred Data Source set to on Event History for proper functioning of Loop.</p> <p>Event History must be selected for Nightscout to display temp basals, carbs, and boluses from Loop. Event History must also be selected in order for prime events to be detected and NOT contribute to IOB during site changes. Please just leave the Preferred Data Source on Event History.</p>"},{"location":"operation/loop-settings/pump-commands/#use-mysentry","title":"Use MySentry","text":"<p>This is a new option. If you don't see this row, consider updating your Loop app.  Using the MySentry feature on some Medtronic pumps when using an OrangeLink causes the batteries to die quickly.  This option allows you to turn off MySentry within the Loop app.</p> <p></p>"},{"location":"operation/loop-settings/pump-commands/#devices_1","title":"Devices","text":"<p>This allows access to the RileyLink screen for each connected RileyLink compatible device.</p>"},{"location":"operation/loop-settings/rileylink/","title":"RileyLink Display","text":""},{"location":"operation/loop-settings/rileylink/#rileylink","title":"RileyLink","text":"<p>The RileyLink (or compatible device) screen is accessed by clicking on the image of your connected pump in Loop settings or the pump icon in the Heads Up Display to bring up the associated pump screen. From that screen, scroll down to the section labeled <code>DEVICES</code> to view the list of connected RileyLink compatible device(s) and tap on the name with a green slider that you want to display. An example is shown in the graphic below.</p> <p></p>"},{"location":"operation/loop-settings/rileylink/#signal-loss","title":"Signal Loss","text":"<p>If there is a problem communicating with that RileyLink compatible device, tapping on the line will show out-of-date or missing information. Go to Troubleshoot: Red Loop: Reset Loop-to-Pump Communications for suggestions.</p> <p>With Loop 3</p> <ul> <li>The Pump Devices display will show the signal loss icon instead of reporting dB as shown in the graphic below. </li> <li>If the problem persists, you'll start to see some Error Messages as well.</li> </ul> <p></p>"},{"location":"operation/loop-settings/rileylink/#rileylink-status-and-commands","title":"RileyLink Status and Commands","text":"<p>Tapping on a name with a green slider takes you to the RileyLink Status and Commands screen for that device.</p> <p>The name at the top center is whatever you named your RileyLink compatible device. The RileyLink screen is the same regardless of the pump you are using.</p> <ul> <li>The three graphics below match the display for Loop 3. </li> <li>For Loop 2.2.x - the displays are almost identical when the patch mentioned below the graphic is applied.</li> <li>The firmware displayed is specific to each device. </li> </ul> <p></p> <p>Patch Required for Loop 2.2.x</p> <p>Some devices have features not available with other devices.  With Loop 2.2.6 some features were added to the OrangeLink, but there is a mismatch of reported hardware for some versions of OrangeLink firmware which prevents the Find Device row from showing up for OL Pro. The EmaLink extra features did not make it into the Loop v2.2.6 release.</p> <ul> <li>With Loop 2.2.x, to see the displays shown in the graphics below, please follow instructions in the EmaLink and OrangeLink Feature and Patch sections.</li> </ul>"},{"location":"operation/loop-settings/rileylink/#device","title":"Device","text":"<p>The lines under the Device section provide information on the device. The two most important lines are the Connection Status and Signal Strength.</p> <ul> <li> <p>The Connections Status should say <code>connected</code> if the device is connected to the iPhone's Bluetooth. If the status says <code>connecting</code> or <code>disconnected</code> then you should toggle the iPhone's BT and/or power cycle the device to help reconnect.</p> </li> <li> <p>The Signal Strength is the strength of the Bluetooth signal between the iPhone and the device.  It is not the signal strength of the radio communications with the pump/pod.  </p> </li> <li> <p>The phone to device Signal Strenth is reported as a negative number so a -50\u00a0dB signal is stronger than -80\u00a0dB. As you move the device and iPhone closer/farther apart, you will be able to see the signal strength change. In a pinch, this can be used to help locate a lost device in the house or at the park after dark.</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/rileylink/#personalize-device","title":"Personalize Device","text":"<p>As soon as you connect the RileyLink compatible device initially - it is strongly encouraged that you rename it from the default name for that device, e.g., RileyLink or OrangeLink or EmaLink.</p> <p>Once you display the RileyLink Status and Commands screen:</p> <ul> <li>Tap on the Name line</li> <li>Enter your desired name</li> <li>Wait a few seconds before doing anything<ul> <li>The new name needs to be transferred and saved in the device</li> <li>If you return to the Pump screen too soon, it might not happen - just repeat the process</li> <li>The device must be connected and on to change its name</li> </ul> </li> </ul>"},{"location":"operation/loop-settings/services_v2/","title":"Loop 2 Services","text":""},{"location":"operation/loop-settings/services_v2/#loop-services","title":"Loop Services","text":"<p>Near the bottom of your Loop settings screen is a section called \"Services\".</p> <p>Sevices are Optional</p> <ul> <li>Loop will work whether you use these or not.</li> <li>Nightscout is highly recommended by experienced Loopers but can be added later - you don't need it to get started.</li> </ul> <ul> <li> <p>For Loop 2.2.x, the services listed in the graphic below can be added by clicking on the <code>Tap to set</code> arrow.</p> </li> <li> <p>Click for Loop 3 Services</p> </li> </ul> <p></p>"},{"location":"operation/loop-settings/services_v2/#nightscout","title":"Nightscout","text":"<p>There is a whole section in LoopDocs about Nightscout. Please follow this link to the Using Nightscout with Loop section of LoopDocs. That also has the links you might need to the official Nightscout Documentation (different website).</p> <p>If you have an existing Nightscout site, it's still a good idea to review that section, but here's the quick summary of how to add your Site URL and API_SECRET to have your Loop data transmitted to your Nightscout site. If you can\u2019t remember your API_SECRET, it can be found under Settings, Reveal Config Vars for Heroku sites (or Application Settings, Connection Strings for Azure sites).</p> <p>The two most common errors in filling out this section are:</p> <ol> <li>Failure to use <code>https://</code>  in the site URL.  If you use <code>http://</code> (see how that doesn't have the \"s\" at the end?), you will get an error message about an App Transport Security policy.</li> <li>Having a trailing slash on the end of the URL (or an embedded space). If you copy and paste from a web browser, make sure to delete the trailing slash on the URL entry.</li> </ol> <p>More Tips about Nightscout</p> <ul> <li>One family had an app configured to block some websites for their child's phone and accidentally blocked their Nightscout URL - took them a while to figure out that mistake.</li> <li>If you use T1pal (paid Nightscout Service)<ul> <li>Sign in to T1pal</li> <li>Select <code>Configure my Nightscout</code></li> <li>Select <code>Uploaders</code></li> <li>Use the copy button for URL and paste into Loop</li> <li>Repeat for API_SECRET</li> </ul> </li> </ul>"},{"location":"operation/loop-settings/services_v2/#loggly","title":"Loggly","text":"<p>Loggly is a free logging service. If you sign up for an account, you'll need to go under Source Setup and then Customer Tokens. Copy and paste your customer token into your Loop App settings for Loggly.</p> <p></p>"},{"location":"operation/loop-settings/services_v2/#amplitude","title":"Amplitude","text":"<p>Amplitude is a remote event monitoring service and can be used to quickly identify errors and events with Loop. Amplitude stores the events and allows you to view those events as points in time. To retrieve the details of the events you will need to look at corresponding mLab data entries to get a complete picture of the issues. If you sign up for a free account with Amplitude, you will be given an API Key that you can enter here to have Loop integration setup.</p> <p></p>"},{"location":"operation/loop-settings/services_v2/#next-step-loop-displays","title":"Next Step: Loop Displays","text":"<p>Great job, almost finished! Now that you have completed your services, let's move onto understanding your Loop Displays.</p> <ul> <li> <p>Loop 2.2.x - click on this link for Displays</p> </li> <li> <p>Loop 3 - click on this link for Displays. </p> </li> </ul> <p>Loop displays is a valuable tool for understanding your Loop and a great page to review when troubleshooting.</p>"},{"location":"troubleshooting/loop-crashing/","title":"Loop App Crashes","text":""},{"location":"troubleshooting/loop-crashing/#loop-crashes-upon-opening","title":"Loop Crashes Upon Opening","text":"<p>If your Loop app crashes immediately upon opening, you have a problem that needs to be fixed. What do I mean by \"crashes\"? Your Loop app immediately turns to a white (light mode) or black (dark mode) screen and then shuts itself down, landing you back at your iPhone's main screen. No amount of tapping will let you keep your Loop app open.</p> <ul> <li>If you built Loop 3.0.0 or just updated the iOS while running Loop 3.0.0<ul> <li>The most likely cause is the \"Apple Health Glitch\"</li> <li>This problem was fixed in Loop 3.2.0 so update as soon as possible</li> </ul> </li> <li>If you are running Loop 2.2.x:<ul> <li>The most likely cause of this is your Loop App Expired</li> </ul> </li> </ul>"},{"location":"troubleshooting/loop-crashing/#apple-health-glitch","title":"Apple Health Glitch","text":"<p>With Loop version 3.0.0, there is a known glitch that is fixed in the development (dev) branch and thus will be fixed in the next Loop release.</p>"},{"location":"troubleshooting/loop-crashing/#solution","title":"Solution","text":"<p>Long term solution, build Loop 3.2.x or newer version.</p> <p>Short term solution if the Loop app crashes following a update to version 3.0.0 or an iOS update:</p> <ol> <li>Turn off Apple Health permissions for Loop<ul> <li>Tap on iOS Settings</li> <li>Tap on Health ( icon)</li> <li>Tap on Data Access &amp; Devices</li> <li>Tap on Loop</li> <li>Tap on <code>Turn Off All</code></li> </ul> </li> <li>Return to phone main screen and open Loop</li> <li>Loop app should now open without issue</li> <li>Turn on Apple Health permissions for Loop<ul> <li>Tap on iOS Settings</li> <li>Tap on Health ( icon)</li> <li>Tap on Data Access &amp; Devices</li> <li>Tap on Loop</li> <li>Tap on <code>Turn On All</code></li> </ul> </li> </ol> <p>Loop 3 has a data store that contains all Looping information for 7 full days. So there will be no loss of Loop information stored in Apple Health by taking this action - so long as permissions are restored.</p> <p>More Details - if you are interested</p> <p>After an iOS update, the phone goes through a new indexing process, which Apple warns can slow down performance and increase battery usage over the first few hours.</p> <p>Starting with iOS 16.2, the Apple Health Glitch with Loop was observed by some users. The anchor that Loop uses to correlate an item in its data store with that same item stored Apple Health was sometimes \"lost\". The way Loop handled that \"took too long\" to resolve and the app would be closed by the operating system. The work-around shown above fixes this for Loop 3.0.0.</p> <p>Starting with Loop 3.2.0, a modification for handling of anchors was added, so the process is transparent to the user.</p>"},{"location":"troubleshooting/loop-crashing/#loop-app-expired","title":"Loop App Expired","text":"<p>Your Loop app has an expiration date. The expiration date will depend on the type of developer account that signed the app.</p> <ul> <li>If you build with a paid account, your app will expire after 12 months.</li> <li>If you build with a free account, your app will expire after 7 days.</li> </ul>"},{"location":"troubleshooting/loop-crashing/#paid-account-1-year","title":"Paid account (1 year)","text":"<p>When your app expires after a year, you need to follow the steps on the Build Updating page. Your phone will probably have a new iOS that may require an updated version of Xcode that may require an updated Mac operating system.  All this is explained in the link above.  Give yourself time before expiration to prepare yourself.</p> <p>To make it easy to build when you have to, practice building every 3 to 6 months. This makes the process much lower stress. Also, each time you build, when you follow the link above, you give yourself another full year before rebuilding is required. Please review the Updating FAQS</p>"},{"location":"troubleshooting/loop-crashing/#personal-team-7-day","title":"Personal Team (7 day)","text":"<p>When your app expires, you simply need to open Xcode, reopen the project: File-&gt;Open Recent, plug your phone back into the computer and select it in Xcode and press the play button on your project again. This will rebuild. If you want to change to a paid signing team before rebuilding, please make sure to double-check which signing team is selected before building again.</p>"},{"location":"troubleshooting/loop-crashing/#switching-from-free-to-paid","title":"Switching From Free to Paid","text":"<p>If you started with a free account and switched to a paid account:</p> <p>Many people accidentally build with their old free account</p> <ul> <li>How can you tell which you're signing with?</li> <li>The free signing team has the <code>(Personal Team)</code> listed after your name in the signing team</li> </ul> <p>Remember that switching from free to paid changes the developer name incorporated into your Loop App</p> <ul> <li>A separate Loop app is created - see Switching from Free to Paid Membership for more details</li> <li>Did you select the new app and enter all your settings into it and then delete the 7-day app?</li> <li>The new app issue only happens if you change developer name</li> <li>As long as you stick with the same developer ID, updated Loop apps are built over existing apps and all your settings should be maintained</li> </ul>"},{"location":"troubleshooting/loop-crashing/#other-reasons","title":"Other reasons","text":"<p>If you experience a crash for any other reason, please gather all the information you can about what was happening before the crash and report it to your favorite Loop Social Media help site - you will need to get some personalized help. Please - choose one site for your post and wait for someone to get back to you.  While you are waiting, search on any of the sites and, if on Facebook, read all the announcements.</p>"},{"location":"troubleshooting/omnipod-faults/","title":"Omnipod Faults","text":""},{"location":"troubleshooting/omnipod-faults/#omnipod-faults","title":"Omnipod Faults","text":"<p>Pod faults are shown in the HUD:</p> <p></p> <p>Loop will put a higher battery load on a pod than the PDM due to its regular and repeated communications. A pod with lower battery level appears to be more likely to fault for conditions like static electricity and occlusions/pump issues that Loop is not directly causing, like internal fault codes 052, 061, 064 and 066. Pods always perform safety checks and if a potential problem is found, the pod will end itself by screaming and stop with the insulin delivery.</p> <p>Note</p> <p>During extensive tests after getting all commands working properly, many failures due to one specific safety check were still encountered. This check needed to recover its counter within 30 minutes after a temp basal returning to a normal basal schedule, or else the pod would scream. Eventually, this was resolved by disabling only this particular check. Therefore the 096-106 faults are always ignored in the current configuration of Loop.</p>"},{"location":"troubleshooting/omnipod-faults/#known-internal-pod-fault-codes","title":"Known internal pod fault codes","text":"<p>The currently known pod faults are listed here on the openomni wiki page: Pod Fault codes</p>"},{"location":"troubleshooting/omnipod-faults/#ways-to-reduce-the-possibility-of-a-fault","title":"Ways to reduce the possibility of a fault","text":"<p>None of the ways listed here are guaranteed to reduce the possibility of a screaming pod, but they could be worth considering.</p> <ul> <li>Keep the Loop app up to date; newer versions might include improvements to reduce pod battery load</li> <li>Use a 433 Mhz RileyLink for Eros Pods</li> <li>Maintain a wider correction range (10 to 20 mg/dL; 0.5 to 1.1 mmol/L) instead of a single number</li> </ul>"},{"location":"troubleshooting/omnipod-faults/#not-replacement-pod-situations","title":"Not \"replacement pod\" situations","text":"<p>Normal pod use will still give these two reasons for a screaming pod. These are not eligible for a replacement:</p> <ul> <li>028, Pod expired, (HEX code: 0x1C)</li> <li>024, Empty reservoir, (HEX code: 0x18)</li> </ul> <p>In the unlikely event that Loop issues a command to the pod when the pod is not in the correct state to receive it, the pod will scream and the reported fault is:</p> <ul> <li>049, Incorrect pod state for command, (HEX code: 0x31)</li> <li>This is not the type of fault to report to Insulet or ask for a replacement pod</li> <li>Instead, capture a Loop Report and report it to the developers as soon as possible</li> </ul>"},{"location":"troubleshooting/omnipod-faults/#replacement-pod-situations","title":"Replacement pod situations","text":"<p>You can always call Insulet tech support if a pod has a clear failure on the pod, such as:</p> <ul> <li>A cannula was sticking out when the end cap was removed.</li> <li>Visual inspection of the pod's cannula window indicating the cannula insertion was not successful.</li> <li>Leaking or kinked cannula was causing insulin delivery issues.</li> <li>The adhesive was not working properly when trying to place it on your body.</li> <li>The pod begins to scream during pairing or priming or insertion</li> </ul> <p>If the pod fails during use with Loop, a replacement might still be possible. The software which communicates with the pod isn't developed or supported by Insulet. Generally speaking, calling in failed pods for reasons not in the list above, on the third day of pod life, is a bit of a reach for the DIY community. There is a grey area here that we should be careful of and acknowledge that Looping may be a contributor in certain faults.</p> <p>Insulet is aware that pods are used by the DIY community. You can be honest about your use and might receive replacement pods. If your pod fails early, it is worth informing Insulet for their troubleshooting records even if you do not get a replacement.</p>"},{"location":"troubleshooting/overview/","title":"Troubleshooting Overview","text":"<p>After you have been using Loop for a while, there's a potential that you will run across a behavior or issue that you wonder if it is normal or intended.  When that happens, there are a few things that we'd recommend doing to resolve the issue.</p>"},{"location":"troubleshooting/overview/#use-automatic-time-on-loop-phone","title":"Use Automatic Time on Loop Phone","text":"<p>If you have modified the Loop time (not changed time zone, but turned off automatic time and manually changed the time), please read: Loop Phone Must be on Automatic Time.</p>"},{"location":"troubleshooting/overview/#gather-information","title":"Gather information","text":""},{"location":"troubleshooting/overview/#screenshots","title":"Screenshots","text":"<p>Take a screenshot of your Loop main display screen, or other screens such as the display when you touch a red loop icon that may help you or troubleshooters better understand your issue.  A lot of times a picture is worth a thousand words.  Being able to see recent Loop basal adjustments, predicted BG curve, and carb entries really help fill in the full story of the current Loop status.  If you didn't manage to get a screenshot when the issue was happening, you can also go to Nightscout and scroll back over the previous 48 hours to obtain much of the same information.  Try to capture a Nightscout screen from the time period in question.</p>"},{"location":"troubleshooting/overview/#check-the-docs","title":"Check the Docs","text":"<p>Loop docs are updated regularly.  If you built your Loop app awhile ago, chances are good that more information has been updated and changed since you last read them.  Please use the search tool - if there's an error message - search for it. Scan the topics in the <code>Troubleshoot</code> tab of LoopDocs and look for a page that may be applicable.  The FAQs pages are definitely worth reviewing too.</p>"},{"location":"troubleshooting/overview/#issue-report","title":"<code>Issue Report</code>","text":"<p>Use the <code>Issue Report</code> Loop 3 / Loop 2 command under Loop Settings to generate a Loop Report. This has a lot of detailed information that may help you or a mentor understand your problem.</p> <p>The Loop Report (a text file) contains important information about actions and status that can be very useful for troubleshooters...particularly with unexplained behaviors.  The upper right corner of the Loop Report includes a button so that you can email the Loop Report to yourself (or others).</p>"},{"location":"troubleshooting/overview/#check-resources","title":"Check Resources","text":""},{"location":"troubleshooting/overview/#github-issues","title":"GitHub Issues","text":"<p>Check the current list of GitHub Loop Issues for known issues.  Many times other users have noticed the same issue previously and opened an Issue so that more information can be added to help develop a solution.  If you see your same issue has already been reported, please add to the open issue instead of creating a new one.</p> <p>There is a nice search feature on github issues - type a keyword into the box next to Filters: where it says \"is:issue is:open\" in the graphic and the display will show just those open issues that contain the keyword in the title.</p> <p></p>"},{"location":"troubleshooting/overview/#zulipchat-and-facebook","title":"Zulipchat and Facebook","text":"<p>Search in Zulipchat, Looped Facebook Group or LoopandLearn Facebook Group.  Quite possibly someone else has already posted about the same issue and perhaps a resolution has already been provided.  </p>"},{"location":"troubleshooting/overview/#ask-for-help","title":"Ask for Help","text":"<p>If you can't find any information in LoopDocs, GitHub Issues, Zulipchat, or Facebook...PLEASE post and ask for help.  GitHub Issues list is an EXCELLENT place to post issues of unexpected Loop behavior (that you believe are errant or need improvement).  However, if you are just seeking clarifications on Loop, but don't necessarily expect that there's a problem with the underlying code, then Facebook and Zulipchat is a better place.  For example, Zulipchat and Facebook are great for asking about bolus strategies or exercise target use...those aren't really code issues.</p> <p>When you post, provide a description along with any screenshots of the issue you are having and include the version of Loop you are running and the iOS on your device.  (Tap on Loop-Settings and look at the top of the screen to get the Loop version number).  You don't necessarily have to tag any particular person, the community is fairly active in replying to messages.</p> <p>Post in only one place - the same volunteers monitor various sites.</p>"},{"location":"troubleshooting/pod-pairing/","title":"Pod Pairing Failures","text":""},{"location":"troubleshooting/pod-pairing/#pod-pairing-failures","title":"Pod Pairing Failures","text":"<p>Have you seen an error message during the pairing process for a new pod? The most common messages are \"No response from pod\" or \"Pod sent ack instead of response\", as shown below.</p> <p></p> <p>There have been a large number of fixes and improvements to reduce various pairing problems and to automatically recover from them when they do occur. Make sure you stay on top of Loop updates to take advantage of these code improvements. It is strongly recommended to update to a modern stable version (i.e., the current Loop master release) when running any version of Loop prior to V2.2.4 with an Omnipod. In particular, you should never run Loop V2.2.3 with an Omnipod due to a severe UI bug that can result in a partially setup pod where the only possible recovery is an immediate Loop update to be able to complete the pod setup process.</p>"},{"location":"troubleshooting/pod-pairing/#why-do-pod-pairings-fail","title":"Why do pod pairings fail?","text":"<p>Assuming the RileyLink is ok, the most common cause of a pod pairing failure is that Loop incorrectly partially pairs with the pod due to some problems during the fragile pairing process, perhaps aggravated by the placement of the RileyLink and the pod, wireless communications interference, and/or incorrect handling of some fault and retry conditions in versions of Loop prior to V2.2.4 that can leave the pod in an apparent non-responding state. This page will help you walk through some easy troubleshooting steps to recover that pod into good working order.</p> <p>Move Logically</p> <p>Let's walk through the pod pairing/replacement process from the very beginning to make sure that we have all the important steps clearly identified even before you attempt to press that Pair button.</p>"},{"location":"troubleshooting/pod-pairing/#step-0-check-your-loop-version","title":"Step 0: Check your Loop version","text":"<p>You can check which version of Loop you are running by pressing the gear in the bottom right hand corner of the Loop home screen and then looking at the line under the header. If you are running Loop V2.2.3, you should update immediately as this is the only way to recover from a number of pairing failure situations. If you are running a version of Loop prior to V2.2.4 (or its equivalent), it is recommended to update to the current Loop master release to prevent pairing difficulties.</p>"},{"location":"troubleshooting/pod-pairing/#step-1-verify-the-rileylink","title":"Step 1: Verify the RileyLink","text":"<p>First, let's make sure everything is ok as far as the RileyLink goes:</p> <ol> <li>RileyLink is charged and nearby, and</li> <li>RileyLink has a green LED light lit (indicating a Bluetooth connection with your iPhone), and</li> <li>Try toggling the RileyLink off/on at its physical switch if the green light is not on.</li> </ol>"},{"location":"troubleshooting/pod-pairing/#step-2-deactivate-old-pod","title":"Step 2: Deactivate old Pod","text":"<p>Make sure you've deactivated your old pod. If you had issues deactivating your pod, you likely may have some RileyLink issues going on...so make sure to see the steps above. If you have a problem with deactivating a pod, go ahead and skip to Step 5 to get a new pod going. You should also remove that old pod (that would not deactivate) from your vicinity. Put it in a microwave or throw it over the fence into the neighbor's backyard (kidding, obviously...but outside trashcan is a good idea).</p>"},{"location":"troubleshooting/pod-pairing/#step-3-start-new-pairing-process","title":"Step 3: Start new pairing process","text":"<p>You've deactivated your old pod successfully...great! As the first part of pairing a new pod, Loop will prompt you to fill the new pod with insulin. Once a new pod is powered-up by the insertion of at least 85 units of insulin, the pod will emit reminder beeps every 5 or 10 minutes until the entire pod pairing process has completed. This pairing process must be completed within 60 minutes of beeps starting, or the pod will give up and never pair. These activation reminder beeps do not actually indicate that any pod communication is being attempted, just that the activation has not yet been completed and your 60 minute timer is counting down.</p> <p>Hopefully, your pod pairing continues uneventfully at this point. You'll press the Pair button and the pod pairs, primes, and the cannula insertion is successful. BUT, if not...you'll want to keep reading Steps 4-5 to find out how to recover.</p> <p>One beeping pod at a time, please</p> <p>It is very important to not have two pods giving reminder beeps at the same time as this can cause even more confusion for you and for Loop. Continue to work with a single pod at a time, retrying the Pair attempts multiple times if needed as described in Step 4. </p> <p>If you cannot get the pairing to complete with the single beeping pod (after trying the procedures described below a few times with multiple Pair attempts during each try), then you should completely abandon that pod before attempting to use another pod. \"Completely abandon\" means move that failed-to-pair-no-matter-what-you-tried pod far, far away from you or put it in a not-turned-on-but-door-is-closed microwave. You do not want that beeping-but-not-pairing pod to be able to plague your next pod's communications with Loop during the fresh pairing process.</p>"},{"location":"troubleshooting/pod-pairing/#step-4-check-the-rileylink-and-pods-placement","title":"Step 4: Check the RileyLink and Pod's Placement","text":"<p>Pod pairing failed?</p> <p>Ok, so you've pressed that Pair button and received an error message like shown at the top of screen? It's time to start the stepwise process of seeing if we can get it to recover successfully.</p> <p>The placement of the pod and the RileyLink relative to each other is critical variable because the pod operates in a low power radio mode during pairing which can lead to a number of potential faulty and half-paired pod situations, particularly with earlier versions of Loop.</p> <p>How close should they be? Most people assume \"the closer the better\", but it has been measured that if the RileyLink and pod are too close together, the RileyLink may not be able to pick up the pairing response. The current recommendation is for the RileyLink to be placed a few inches to the side of the pod being paired.</p> <p></p> <p>If Pair fails, move a bit and RETRY</p> <ul> <li>If the Pair operation is not succeeding, try repositioning the relative placement of the RileyLink and the pod multiple times. A little closer together if you had them far apart? A bit farther apart if they were really close? RileyLink on its side? Try standing it up with the antenna pointed to the ceiling.</li> <li>If the pairing is still unsuccessful with multiple repositioning attempts, move yourself, the RileyLink, and the pod to another area/room (preferably away from other radio frequency signals that might be interfering), and try Pair again. Again don't be shy to try repositioning the RileyLink and pod's relative position, if needed, in this new area/room too.</li> <li>If you have another available RileyLink, you can also try pairing using that RileyLink instead.</li> </ul>"},{"location":"troubleshooting/pod-pairing/#step-5-pod-pairing-recovery","title":"Step 5: Pod Pairing Recovery","text":"<p>When you have a pod that continues to appear non-responsive or sending \"ack\" responses after several retried Pair attempts, it may be possible to recover by forcing Loop to start the pairing process from the beginning.</p> <p>To start we will have to press the Cancel button in the upper right corner of the pairing screen. Depending on which state the pod is stuck at in the pairing process...you'll see one of two screens after you select the Cancel button. Follow the directions (Step 5A vs Step 5B) for whichever screen corresponds to what you see after pressing Cancel.</p> <ul> <li> <p>Step 5A \"Switch from Omnipod Pumps\": You press Cancel and Loop will send you back to the Pod Settings screen to do the \"Switch from Omnipod Pumps\" method</p> </li> <li> <p>Step 5B \"Deactivate\": You press Cancel and Loop will display a screen giving the option to \"Deactivate\"</p> </li> </ul>"},{"location":"troubleshooting/pod-pairing/#step-5a-switch-from-omnipod-pumps","title":"Step 5A \"Switch from Omnipod Pumps\"","text":"<p>If you press the Cancel button and see a screen like below, you're going to select Switch from Omnipod Pumps in red. While this appears to confirm that you want to stop using the Omnipod, we will be adding pods back soon. Don't worry.</p> <p></p> <p>Don't fret. None of your Loop settings including the basal schedule and delivery limits, will be lost deleting the Omnipod pump. Select Delete Omnipod to proceed which will take you back to the Loop home screen.  From here, select the gear icon at the bottom right to go the Loop <code>Settings</code> page. Then select Add Pump in blue and then select Omnipod from the <code>Add Pump</code> list displayed.</p> <p></p> <p>Verify that the green LED on the RileyLink goes on and off as you touch the switch for RileyLink you are using indicating a successful Bluetooth connection between the RileyLink and your iPhone. Leave the RileyLink enabled with its green LED and slider turned on, and then touch the Continue button on the bottom. The Pod Settings screen should have the previous Basal Rates and Delivery Limits in effect from your previous run which can be verified at this time. Once ready, select Continue on the bottom of the screen.</p> <p></p> <p>Finally, you will be back to the <code>Pod Pairing</code> screen.</p> <p></p> <p>Instead of filling a new pod with insulin, attempt to pair again using the original pod which was previously filled but unable to complete the pairing process successfully. That pod should still be occasionally giving reminder beeps. Place the RileyLink a few inches to the side of the pod and press the Pair button at the bottom of the screen and hopefully Loop will be able to successfully pair this time after starting from a fresh slate. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally.</p>"},{"location":"troubleshooting/pod-pairing/#step-5b-deactivate-pod","title":"Step 5B \"Deactivate pod\"","text":"<p>If you press the Cancel button and see an option for \"Deactivate pod\", we're going to do a little differently than Step 5A.</p> <p>You might lose your pod by attempting this procedure</p> <p>This is a point of no return for certain pod pairing situations and it is possible that the pod will be lost by attempting this procedure depending on the pod state. Some will recover fine, others may not. Since you can't know in advance if you might lose the pod, it is important to have already exhausted other possibilities described above in Steps 1-4 to try pairing. Specifically, (1) attempting to pair several times using varied relative positions of the RileyLink and pod (2) trying the pairing again but in a different room/location that might have less wireless interference, and (3) verifying your RileyLink is connected and functioning correctly.</p> <p>For this next part, we want to make sure that the pod doesn't accidentally receive the deactivation command we are about to use. We want Loop to do the command...we just really don't want the pod to hear it. There's two ways we can keep the pod from hearing it, either (1) prevent the RileyLink from hearing Loop's command (and thus the command cannot reach the pod) or (2) prevent the pod from hearing the command from RileyLink. To accomplish our keep-the-pod-ignorant goal, you can try either option like so:</p> <ol> <li>Prevent RileyLink from hearing: Turn your RileyLink off temporarily at its physical switch. Some people worry about accidentally breaking their RileyLink switch, and if that's you...you can instead put the RileyLink far away from your iPhone or put the RileyLink in the microwave. That will keep the RileyLink from hearing the Loop's deactivate pod command. If RileyLink can't hear it, then your pod won't receive it.</li> <li>Prevent pod from hearing: Move the beeping pod to a place that the pod is incapable of hearing the command. There's several options depending on what works for you:<ul> <li>Put the beeping pod far away...\"shouldn't be able to hear those beeps anymore\" kind of distance.</li> <li>Put the pod in a not-turned-on-but-door-is-closed microwave.</li> <li>Put the pod in a faraday bag, if you own one.</li> </ul> </li> </ol> <p>Ok. Have the pod nice and ignorant? Good. Now press the \"Deactivate Pod\" button. It will take a few attempts, and you will see some failure messages about how the deactivation failed (of course it did...we hid the pod!) Eventually, you'll be given an \"Continue\" button that you'll want to use.</p> <p></p> <p>Press the \"Continue\" button. The instructions start with \"fill a new pod with insulin\"...BUT DO NOT!  Instead, bring that beeping pod back to the hearing range. Turn that RileyLink back on if you turned it off. Once you get the RileyLink on and the pod back in range, you'll just press the Pair button and hopefully you'll find success with the process. If this pairing attempt is still unsuccessful, remember to still exhaust repositioning and Step 4 options before giving up on that pod. If it really won't pair after all that...then mark that loser pod with a Sharpie-drawn sad face and follow the directions in Step 3's colored box so that you don't end up with multiple beeping pods around accidentally.</p> <p></p>"},{"location":"troubleshooting/pod-pairing/#step-6-help-improve-pod-pairing-process","title":"Step 6: Help improve pod pairing process","text":"<p>To help fix pairing bugs, some improvements have also been made in our ability to save the communications between the pods and Loop app during the pairing process. So, please help us leverage these new improvements and better squash bugs.</p> <p>If you run into any pairing problems when running a version of Loop prior to V2.2.4, which required Step 5A or Step 5B to be able to pair, or you had a pod that had to be abandoned, it would be helpful to generate an \"Issue Report\" after you finally get a pod paired (whether is was the original pod or if a different pod) and then post the resulting \"Loop Report\" on Zulipchat here with a short explanation of what happened.</p>"},{"location":"troubleshooting/pod-pairing/#what-about-other-pod-start-up-failures","title":"What about other pod start-up failures?","text":"<p>If you have a pod that has already started the priming operation and then has problems either finishing the priming operation or the cannula insertion, then forcing a pod pairing recovery is not possible. If a pod fails during priming or cannula insertion, the pod is no good and it should be deactivated and disposed of properly.</p>"},{"location":"troubleshooting/pod-pairing/#what-about-that-insulin","title":"What about that insulin?","text":"<p>If you have the misfortune of losing a pod during pairing, you can opt to not waste the insulin in that pod. Simply use the same syringe and same fill port on the pod to suck the insulin OUT of the loser pod.</p> <p>If you do that, good practice is to make sure that you get that loser pod far away from the process as you go forward. Mark a big \"X\" on the failed pod and put it in a microwave, or very far away from you, so that it can't interfere with subsequent pod pairing attempts.</p>"},{"location":"troubleshooting/pump-errors/","title":"MDT Pump Errors","text":""},{"location":"troubleshooting/pump-errors/#medtronic-pump-errors","title":"Medtronic Pump Errors","text":"<p>The Medtronic pumps are used and typically not under warranty.  Use this section at your own risk.  However, that said, some of the most common pump errors are repairable, or not actually a real problem.</p>"},{"location":"troubleshooting/pump-errors/#a21-error","title":"A21 error","text":"<p>This error message is common when a pump has been stored for a period of time without a battery.  Most pumps will show an A21 error when you first purchase them on the used market.  Not a big deal.  Press the down arrow (also has the symbol of a light bulb on it) and the pump screen message will scroll down to let you know how to clear that error message (press ESC then ACT).  If the message is coming up on a pump that hasn't been in storage, pull the battery out and replace with a fresh, new battery.  Chances are your battery or battery cap are old.  Look for signs of dirt or rust in the battery cap, give it a little cleaning.</p> <p>Display Tip</p> <p>When the pump screen has a little black/white bar on the right side, that is a scroll bar.  Use the arrow keys on the right of the pump screen to scroll and see the additional information.</p> <p></p>"},{"location":"troubleshooting/pump-errors/#batt-out-limit","title":"Batt Out Limit","text":"<p>This error message \"battery out of limits\" has to do with the internal pump battery, not the AAA battery you replace.  The internal battery cannot be replaced, and unfortunately also has a finite lifespan.  The error message is more of an annoyance than a true problem.  You can try to change the AAA battery faster.  But, the worst-case scenario is that you'll have to re-enter the time and date when you get this message more often.  (Don't forget to use RileyLink to set the time after you get this message.)</p> <p></p>"},{"location":"troubleshooting/pump-errors/#button-error","title":"Button Error","text":"<p>The Button Error message usually happens from water, moisture, or dust getting under the pump's button pad and causing button(s) to fail.  The fix luckily is quite straight-forward and takes less than 30 minutes.  Check out the fix here for a YouTube video or here for photo gallery</p> <p></p> <p>The solution involves simply prying up the button pad's sticker face to expose the layers beneath.</p> <p></p> <p>You can see some evidence of crud/rust on the underside of this button pad which caused the button error.</p> <p></p> <p>After you finish your fix, another excellent idea is to make sure you add a length of clear packing tape across the front face of the pump to prevent errant water or dirt from having easy access to the button pad seams.</p> <p></p>"},{"location":"troubleshooting/pump-errors/#crackmissing-piece-repairs","title":"Crack/Missing Piece Repairs","text":"<p>Another common issue on these Medtronic pumps are cracks and/or missing bits of plastic near the battery cap or reservoir sleeve. You can repair these fairly easily. For filling small cracks, Testor's plastic cement or Gorilla epoxy are good choices.</p> <p>For more extensive repairs to replace missing chunks of plastic, Gorilla epoxy or Sugru are excellent choices.  </p> <p>You can use teflon thread tape on the battery cap to make sure the epoxy or Sugru don't stick to the battery cap, but still recreate the threads.  The first photos are of a Sugru repair and second set of photos are Gorilla epoxy repair.</p> <p></p> <p></p>"},{"location":"troubleshooting/pump-errors/#motor-error","title":"Motor error","text":"<p>Often a motor error is the result of a poorly seated reservoir or tubing cap.  If you get a motor error, the first thing you should do is detach from your infusion site.  Remove and reseat the reservoir, prime again, and see if the motor error resolves.  If it does not, try replacing the tubing cap on the reservoir (new tubing).  If that does not resolve the motor error, also replace the entire reservoir.</p> <p></p>"},{"location":"troubleshooting/pump-errors/#a33-error","title":"A33 error","text":"<p>Safety warning</p> <p>If you get this error, DO NOT push on the bulged out end cap.  Always detach your tubing from your infusion set before addressing this error message.  If you push on the end cap in an attempt to get it back flush, you may delivery a dangerous amount of insulin mistakenly.</p> <p>This error is a bit more involved to repair.  The problem is that there is a loose drive support cap.  Most of the time this error message will appear during a priming event as the end cap of the drive will slip, releasing the ability of the reservoir plunger to get pressure to delivery insulin.  The pump senses the lack of pressure and delivers the A33 error.</p> <p></p> <p></p> <p>The solution is to UNHOOK from your site.  See warning above.  Remove reservoir and put your finger inside the reservoir sleeve.  Push on the drive so that the end cap is pushed out the most possible.  This will give your the most surface area possible to place the super glue GEL that you will use.  (don't use regular super glue...it must be gel.)  Remove the sticker that covers the end cap, save it for later because you can reattach when repair is completed.</p> <p>With the end cap pushed out, take some glue gel with the toothpick and apply it on the outside of the popped out cap . Be generous cause you can do this only once . Once you are done take a napkin and press hard the cap toward the pump so it can go back inside and keep it pressed for a few seconds. Then remove all the small parts of the napkin that has glued to the pump. Leave the pump to dry for about 10-15 minutes.</p> <p></p> <p>Now to test whether the pumps was glued well. You have already waited about 10-15 minutes so put your finger back in and press hard the plunger.  If you glued it well, the end cap will not move.  If the cap goes out again, you have to glue one more time. If all looks well, put some glue back on top of the pump cap and reattach the sticker that was removed to start.</p>"},{"location":"troubleshooting/pump-errors/#a32-and-e22-error-loop","title":"A32 and E22 error loop","text":"<p>From what we know, this set of error codes seems like a pump killer.  A call to Medtronic support gave this less than hopeful information:</p> <p>A32 - failure of flash memory E22 - software re-installation is necessary</p> <p>We don't have any reports of a good fix for these error codes.  When seen, usually the E22 error comes up and as soon as it is cleared, the A32 error comes up.  And the loop continues with a pump restart.</p>"},{"location":"troubleshooting/time-change/","title":"Time Change FAQs","text":""},{"location":"troubleshooting/time-change/#loop-phone-must-be-on-automatic-time","title":"Loop Phone Must be on Automatic Time","text":"<p>Loop Phone is a Medical Device</p> <p>There have been several instances where a Looper disabled automatic time to change the time on their Loop phone.</p> <p>One scenario should be enough to convince you not to do this:</p> <ul> <li>Glucose is 180 mg/dL (10 mmol/L) when you set time one day ahead (for a game)</li> <li>Later you return time to automatic and think nothing of it</li> <li>As soon as automatic time is restored, Loop thinks your eventual glucose will be the future value (in this example 180 mg/dL) and attempts to bring you to your correction range</li> <li>Because that future value is \"stuck\", Loop keeps providing more insulin</li> </ul>"},{"location":"troubleshooting/time-change/#remove-future-glucose","title":"Remove Future Glucose","text":"<ul> <li>You MUST go into Apple Health and remove any glucose values in the future</li> <li>Loop 2.2.x will use those future readings.<ul> <li>If you want to know more, check out this link: Request: Detect Future Glucose</li> </ul> </li> <li>Loop 3 detects the future glucose and stops looping<ul> <li>It might not be completely obvious why Loop stopped, but you will get a red loop within 15 minutes and Loop is not Looping notifications starting a 20 minutes</li> <li>If you tap on the bolus icon, Loop informs you it detected invalid future glucose</li> <li>If you tap on the glucose icon - it takes you to your CGM which probably has a very different number from that shown on the main Loop screen</li> </ul> </li> <li>If you also use Nightscout and have the upload CGM readings enabled in Loop, those future glucose values will appear in Nightscout<ul> <li>To fix this problem (after you fix Apple Health), use the Admin Tools in Nightscout to remove future treatments and future entries</li> </ul> </li> </ul> <p>One added improvement with Loop 3 is it very aggressive at warning you if you make this mistake. you will get a notification - even when you are in a different app. The graphic below shows the alert when you next open Loop after turning off automatic time and changing the time. Even if you respond right away, you may have at least one glucose reading in the future when you see this alert. Please Remove Future Glucose.</p> <p></p> <p>The rest of this page is about changing time zones.</p> <p>This happens safely with Loop because Loop keeps track of everything using UTC.</p>"},{"location":"troubleshooting/time-change/#time-zones-daylight-savings-time-summer-time","title":"Time Zones, Daylight Savings Time, Summer Time","text":"<p>Loop operates across time zones and time changes. The phone that is running Loop will automatically update the time, but you choose when to modify the time zone for \"pump time\".</p> <p>What Therapy Settings are set by \"pump time\"?</p> <ul> <li>Basal Rate Schedule</li> <li>CR and ISF Schedule</li> <li>Correction Range Schedule</li> </ul> <p>Time Change comments:</p> <ul> <li>The Pump Settings screen is used to modify time zones<ul> <li>Tap on Pump Status Icon from the HUD</li> <li>or Loop-&gt;Settings-&gt;Pump</li> </ul> </li> <li>Travel<ul> <li>There is no urgency to update the pump time to match the wall-clocks when traveling</li> <li>For short trips, many Loopers just leave the pump time alone</li> </ul> </li> <li>Time Change (Daylight Savings Time or Summer Time)<ul> <li>Most people want to update their pump time immediately after the clocks change</li> </ul> </li> <li>With Loop 3 there is a Clock Icon added to the HUD Pump Status display</li> </ul> <p>If you want more information, click on this link: Time Zone, which provides detail and connects to the Loop 2.2.x or the Loop 3 version sections.</p> <p>Medtronic Users</p> <p>Do not use the Medtronic pump menus to change your pump's time when Looping.</p>"},{"location":"troubleshooting/time-change/#iphone","title":"iPhone","text":"<p>Loop will warn you if your phone does not have time configured to automatically update. The configuration is under iOS Settings -&gt; General -&gt; Time &amp; Date.</p> <p>Do not ever adjust the time manually on your Looping phone to \"defeat\" time-based rules for a game. Your phone with Loop is now a critical medical device - make sure anyone who uses your phone understands this.</p>"},{"location":"troubleshooting/time-change/#minimed-pump-and-cgm","title":"Minimed Pump and CGM","text":"<p>The Minimed pump doesn't expose a universal clock, instead it exposes the components of a date (YMDHIS). It has no concept of political time zones, and just continues to increment its components on schedule. Therefore, Loop assumes that the pump's date, until changed, remains at a fixed offset from UTC.</p> <p>That offset is stored by Loop the first time the pump ID is changed, and every time the pump's time is changed using the \"Change Time Zone\" command.</p>"},{"location":"troubleshooting/time-change/#dexcom-cgm","title":"Dexcom CGM","text":"<p>No particular input is needed on your part for Loop to work with Dexcom CGM data. All times use UTC.  However for Dexcom receiver users, at time changes you may want to manually change your receiver's time setting just so the time visually appears correct when you are viewing the screen.</p>"},{"location":"troubleshooting/time-change/#airports","title":"Airports","text":"<p>RileyLinks have no problem going through any of the airport security systems. You can carry it with you in the airplane cabin and it can go through the x-ray scanner that your carry-on bags go through.</p>"},{"location":"troubleshooting/time-change/#airplane-mode","title":"Airplane Mode","text":"<p>Nothing wrong with airplane mode, but many people forget about it at the time they travel. So, you can do this simple preparation step now:</p> <p>Turn airplane mode on. Then make sure your Bluetooth is still slid \u201con\u201d. If Bluetooth isn\u2019t on, then go slide it on again. Now go ahead and turn airplane mode off again.</p> <p>Why did we just do that? Because in older versions of iOS, airplane mode turned off the first time you ever use it.</p> <p>But, if you remember to turn Bluetooth back on while in airplane mode, two things happen (1) Dexcom and Loop will work while in airplane and (2) airplane mode will \u201cremember\u201d the next time that you like Bluetooth left on in airplane mode and will not turn it off the next time you slide airplane mode on. So now you\u2019ve just prevented yourself from forgetting to turn Bluetooth on the next time you fly and are in a hurry to meet your lovely seat mate and stow your luggage. You can safely follow cabin instructions and put phone in airplane mode without losing Loop or Dexcom.</p>"},{"location":"troubleshooting/yellow-red-loop/","title":"Red Loop","text":""},{"location":"troubleshooting/yellow-red-loop/#red-loop-overview","title":"Red Loop Overview","text":"<p>This page provides help if your Loop icon is red and Loop is not working or only working sometimes.</p> <p>With Loop 3 - clicking on the Loop icon on the main screen tells you the last time Loop completed, but you need to look at the Pump Status Icon and the Glucose Status Icon for more information. For example, when Glucose is stale (more than 15 minutes old), the Glucose icon shows \"- - -\". For example, when the Pump is having a communication issue, you will see a No Signal icon.</p> <p>With Loop 2.2.x - clicking on the Loop icon on the main screen provides an error message. If you understand it, great...that should help you fix the problem. If not, grab a screenshot so you can ask for help from a mentor.</p> <p>Omnipod Users</p> <p>Do not pull a pod when there is a red loop. </p> <ul> <li>Usually the problem is with Loop, not the pod</li> <li>A new pod won't fix a Loop (Bluetooth or RileyLink communication problem)</li> </ul> <p>There are a few times when it is the pod - but try all the steps on this page first.</p> <p>Medtronic Users</p> <p>You must select Insulin Type on your pump settings screen after updating from Loop 2 to Loop 3 and completing the onboarding. Without an insulin type, closed loop will not work.</p> <p>A Red Loop icon means that Loop has not completed a cycle for 15-minutes or more and this is normally because of a communication break-down with one of the systems listed below.</p>"},{"location":"troubleshooting/yellow-red-loop/#typical-causes-for-red-loop","title":"Typical Causes for Red Loop","text":"<p>Some of the reasons listed below cause Loop to go Red and stay Red until you fix it.  Others will cause intermittent Red Loops that come and go.</p> <ol> <li>Reset Loop-to-Pump Communications</li> <li>Continuous Glucose Monitor (CGM)</li> <li>Apple Health</li> <li>Background App Refresh is not enabled for Phone, Loop and/or CGM</li> <li>Nightscout (optional service)</li> <li>Phone Storage is Full</li> <li>Lost Pod Information If running Loop 2.2.x or FreeAPS, read this section first</li> </ol>"},{"location":"troubleshooting/yellow-red-loop/#lost-pod-information","title":"Lost Pod Information","text":"<p>We think this was fixed with Loop 3. If you are running Loop 2.2.x or FreeAPS:</p> <ul> <li>Before attempting to resolve a red-loop with a phone reboot; please review this section. It can affect the stored CGM information as well as the stored pump information.</li> </ul> <p>Be Careful with Phone Reboots with Loop 2 or FreeAPS</p> <p>If you are using an Omnipod, then before rebooting the phone, make sure it is absolutely necessary - try all other methods first. Be prepared to check that the pod is still communicating with Loop following the reboot. If this rare event happens to you, please report it, save and post a Loop Report and be prepared to put on a new pod and possibly re-enter your CGM information.</p> <p>This could happen to someone using a Medtronic pump, but the consequence is less of a concern because the pump information is not modified as frequently as for Omnipod users.</p>"},{"location":"troubleshooting/yellow-red-loop/#reset-loop-to-pump-communications","title":"Reset Loop-to-Pump Communications","text":"<p>If the indication is one of these (or something similar), it can probably be fixed by resetting the Loop-to-Pump communication. For DASH, this is Bluetooth only. For Eros or Medtronic, it is a combination of Bluetooth and the RileyLink compatible device.</p> <ul> <li>pump history is too old</li> <li>no rileylink could be found</li> <li>pod cannot be reached</li> <li>the <code>Unable to Reach Pump</code> modal screen is visible</li> </ul> <p>Do these steps until one of them fixes the issue:</p> <ul> <li>Turn off Bluetooth on your phone and then turn it right back on again.</li> <li>Close your Loop app (upswiping it in the iPhone's app selector) and reopen it.</li> <li> <p>Eros or Medtronic: Turn your RileyLink off/on at its physical power switch located on the side of the RileyLink.</p> <ul> <li>If you have a different device, make sure you know how to power-cycle the device.</li> <li>For RileyLink (without wireless charging) use a small pointy object to carefully move the slider away from the charging port and then back up towards the charging port. A paperclip on the keyring can provide the help you need to reach the switch in the recessed case, and double as a screaming pod silencer tool.</li> </ul> <p></p> </li> </ul> <p>This should restore a green Loop within 5 minutes. If you're impatient and are using pods, you can tap on Play Beeps. With Medtronic, you can attempt to suspend/resume the pump. If this is successful, you've established communication again.</p> <p>Last thing to try is:</p>"},{"location":"troubleshooting/yellow-red-loop/#power-cycle-your-phone","title":"Power cycle your phone.","text":"<ul> <li>This suggestion is last because of a rare, intermittent issue (with iOS 15 and Loop 2.2.x) in which power cycling the phone does not load the latest version of Loop information</li> <li>This was fixed with Loop 3</li> <li>Click on the Lost Pod Information link for more information</li> </ul> <p>If this was not successful, check out the Pump is Not Responding section.</p>"},{"location":"troubleshooting/yellow-red-loop/#cgm-values-are-not-being-collected-by-loop","title":"CGM Values Are Not Being Collected by Loop","text":""},{"location":"troubleshooting/yellow-red-loop/#new-transmitter","title":"New Transmitter","text":"<p>If you recently changed a transmitter, you need to also update your Loop settings to reflect the new transmitter ID. Go to the CGM section of Loop settings and <code>Delete CGM</code> (it's a button on the bottom of that page). Then use the <code>Add CGM</code> in Loop settings to include the new transmitter ID.</p> <p>If you fail to update your Transmitter ID in Loop and you also left Share Credentials in Loop (not recommended), you will see messages such as: <code>Failed to decode SGV</code> when the Share server cannot be reached. That's your notice to update the Transmitter ID (or if you think you already did - check for typos in data entry).</p>"},{"location":"troubleshooting/yellow-red-loop/#delete-share-account","title":"Delete Share Account","text":"<p>Finally, we see a lot of errors reported because people have problems with their Share server information in Loop app. Please delete your Share account information from within Loop settings. In other words, the credentials portion of the Share account info, as shown in the screenshot below, should say <code>Tap to Set</code> and not have your account info. It is unnecessary to have this portion filled out as local, non-internet spying of a transmitter is the preferred CGM source anyways. In fact, by leaving this information out, it will help you remember to change your transmitter ID when you change transmitters because CGM data won't appear in Loop. By not including Share account in Loop, you will prevent yourself from accidentally becoming internet dependent.</p> <p></p>"},{"location":"troubleshooting/yellow-red-loop/#firefly-style-transmitter","title":"Firefly-style Transmitter","text":"<p>Leaving this in for historical interest only. It illustrates the need to keep Loop up-to-date.  Who knows what the next hardware change will be. Enough time has passed that everyone's Loop code should be newer.</p> <p>In July 2019, we started to see a new style of Dexcom G6 transmitters on the market. These new transmitters required a rework of some of the Loop's code to continue to \"spy\" on the transmitter. Without that update, your Loop can not get CGM data unless it is pulling from Share servers (which is not a recommended mode of operation). So, download fresh code for your Loop app if you have a new transmitter type and haven't downloaded since July 2019.</p>"},{"location":"troubleshooting/yellow-red-loop/#apple-health","title":"Apple Health","text":"<p>Make sure both the Loop app and the Dexcom app have permission to write to Apple Health by checking the Apple Health Permissions</p> <p>In the early days of iOS 14, there were problems with the Apple HealthKit.  The consequence is that some people's database was corrupted.  If you tap on the Heart Icon on your phone to go to Apple Health and display data and it is very slow to respond - or never responds, you probably need to get rid of a corrupted database and start fresh.  Be sure to go Open Loop if this is needed. Please get help from your favorite Loop Social Media group or from Apple support in this case.</p>"},{"location":"troubleshooting/yellow-red-loop/#background-app-refresh","title":"Background App Refresh","text":"<p>If you have not enabled background app refresh on your phone, then Loop is likely to stop communicating as soon as the phone is locked.</p> <ol> <li>Phone Settings -&gt; General -&gt; Background App Refresh -&gt; enable</li> <li>Then scroll down until you find Loop and make sure the green slider is enabled</li> <li>While you are there - check your CGM app as well</li> </ol> <p>For iOS 15, there is a new feature described by Dexcom</p> <ol> <li>Phone Settings -&gt; Screen Time -&gt; choose Always Allowed -&gt; select an app, tap the plus icon to add to Always Allowed list<ul> <li>add Dexcom</li> <li>add Loop</li> </ul> </li> </ol>"},{"location":"troubleshooting/yellow-red-loop/#nightscout","title":"Nightscout","text":"<p>If you added your Nightscout URL to Loop and are uploading information to Nightscout, make sure the communication is working properly.  For short-term interruptions, Loop will store information to upload to Nightscout later.  But if too much information builds up, Loop can slow down and in some cases have a Red Loop.</p> <ol> <li>Check to see that internet service (WiFi or Cell) is operating</li> <li>Check that Nightscout database size isn't full (more details below)</li> <li>If Red Loops are resolved by removing the Nightscout URL from Loop; you need to figure out if it's the connection or the database or some other issue</li> </ol> <p>If you opted for the free DIY Nightscout, you will need to clean your database once or twice a year. Follow the Nightscout Database cleanup steps. Make sure you are periodically checking your database size (and that the dbsize keyword is in your ENABLE list and cleaning it.</p>"},{"location":"troubleshooting/yellow-red-loop/#phone-storage-is-full","title":"Phone Storage is Full","text":"<p>This was reported by a user in November 2021. His phone storage was almost full and the reported error messages for Loop was:</p> <ul> <li><code>Sqlite Error: A Sqlite Error Occurred: (13) Database or Disk is Full</code></li> </ul> <p>The error message from Dexcom was not as helpful.  If you see this, check your phone storage:</p> <ul> <li><code>The Dexcom G6 app has stopped working. Please delete the app from your device and redownload it from the App Store</code></li> </ul> <p>Solution: clear up space on your phone.</p>"},{"location":"troubleshooting/yellow-red-loop/#other-reasons-for-red-loop","title":"Other Reasons for Red Loop","text":""},{"location":"troubleshooting/yellow-red-loop/#pump-is-not-responding","title":"Pump is Not Responding","text":"<p>The first step is to make sure the phone and if needed, the RileyLink compatible device, is not so far away from the pump or pod that they cannot communicate. Assuming you've addressed this, then you can move on to other steps.</p> <p>Omnipod Loopers:</p> <p>If the pod is screaming, it should still be able to communicate with Loop, but sometimes you need to restore communication so you can deactivate the pod and quiet it. Follow the steps below, just do it with the added \"noise\".</p> <p>The Reset Loop-to-Pump Communications steps almost always fix the issue. It is possible that the pod really had stopped communicating, but try everything else before burning another pod.</p> <p>Medtronic Loopers: If the pump is not responding with \"decoding\" errors or various other messages about pump responses. Try the following:</p> <ol> <li>Change pump battery. Low pump battery will cause radio communications to fail.</li> <li>Use the <code>Change Time</code> command in the pump menu to update the pump's clock. If you've accidentally changed the pump's time in the pump itself or if the pump time has drifted, this will get the Loop app and pump time back in sync.</li> <li>If using a x23 or x54 pump, try deleting all the IDs under the \"Other Devices\" submenu in the pump's \"Connect Devices\" menu.  Then go to the RileyLink menu and use the MySentry pairing command to get a fresh ID issued. Follow the directions listed in the MySentry pairing command's screen to scan for devices. A fresh ID can help prevent recurring red loops for x23 and x54 users, particularly if they started to occur after a recent Loop update.</li> <li>Make sure the following are checked in the pump:<ul> <li>Your pump cannot be suspended.  Resume insulin deliveries.</li> <li>Temp basal type must be set to unit/hour, not percent, in pump's Basal menu.</li> </ul> </li> </ol>"},{"location":"troubleshooting/yellow-red-loop/#resolving-frequent-red-loops","title":"Resolving Frequent Red Loops","text":"<p>Here's some things to check if you have frequent red loops:</p> <ul> <li> <p>Try deleting your Nightscout account from Loop settings and see if your Loop stops having red loops. If it does, then you'll need to assess what's going wrong in your Nightscout site and fix it. Most of the time, your database is getting too big and cleanup is required.</p> </li> <li> <p>Is your RileyLink battery plugged in all the way on the board? One Looper recently posted that her RileyLink battery connection needed to be reseated after several years of service.</p> </li> <li> <p>Has your RL been fully charged? Try charging your RL for an hour or two, make sure the red light comes on while charging. Try a new charger or cable.</p> </li> <li> <p>Oddly, some people have found that turning off Siri integrations for Loop and Dexcom apps in your iPhone settings has helped. This may be coincidental, but if you're still having trouble, you might want to try it.</p> </li> <li> <p>Check for sources of wireless interference. If you have a certain environment that seems to have more drops than others, it is likely that there is a source of wireless communication interfering with your Loop. Lots of Medtronic Loopers in a room together will often interfere with each other and get \"cross-talk\" red loop error messages. If it is a bedroom at night causing problems, try moving other wireless devices such as routers or baby monitors farther away from where you and your RileyLink compatible device.</p> </li> <li> <p>In some cases, you may need to clean out Apple Health, or even reset your phone to factory defaults and reload all your personal information and then rebuild the Loop app. Before you do this, you may want to Post for Help (next section).</p> </li> </ul>"},{"location":"troubleshooting/yellow-red-loop/#posting-for-help","title":"Posting for Help","text":"<p>Before you post on Looped group for help with a red loop, please make sure you've reset the RileyLink / Phone.</p> <p>Before you post for help, please also check your Nightscout status including database size. This step is often overlooked and yet solves a lot of problems.</p> <p>When posting for help, include two screenshots of Loop's main screen; one with the red loop's error message and the other just the plain Loop main screen. Include a detailed description of what you have tried doing from the troubleshooting list above. For example, state if you've double checked the transmitter ID, deleted the Share account info from Loop settings so that we can rule out some of the causes of CGM issues.</p>"},{"location":"troubleshooting/yellow-red-loop/#what-else","title":"What Else?","text":"<p>There are a few other things to consider:</p> <ul> <li>RileyLink is broken</li> <li>Battery has failed</li> <li>OrangeLink has firmware 2.6</li> </ul>"},{"location":"troubleshooting/yellow-red-loop/#rileylink-is-broken","title":"RileyLink is Broken","text":"<p>How can you tell if your RileyLink has a problem? The answer is mostly within the LED lights that display on the board. Some information is listed below, but also review the FAQs at getrileylink.org.</p> <p>If you have a different RileyLink compatible device, please check the appropriate site for troubleshooting help.</p> <p>Red light: comes on during charging and will turn off/on periodically, while still plugged in, after charge is complete.</p> <p>Green light: Indicates an active BT connection with the phone. You want the green light to stay on all the time on the RileyLink. If the green light is not on, then make sure your iPhone's bluetooth is still switched on.</p> <p>Blue light: The blue light will flash off/on periodically when the RileyLink and pump are actively communicating...it should NOT be always on. If your blue light is stuck on, that is an indication of a problem on the board. Try looking for signs of damage or debris that may be causing a short on the board. Clean the board with rubbing alcohol (unplug the battery first). If you still can't get the blue light off, then contact GetRileyLink for help or check out RileyLink Compatible Devices for replacement options.</p>"},{"location":"troubleshooting/yellow-red-loop/#battery-has-failed","title":"Battery has Failed","text":"<p>Both RileyLink and EmaLink use LiPo batteries.  If they stop holding charge for as long as they used to, or if they swell (often first noticed as bowing of the case), stop using the battery and replace it as soon as possible.</p> <p>OrangeLink uses regular batteries, so just change them out.</p>"},{"location":"troubleshooting/yellow-red-loop/#orangelink-firmware","title":"OrangeLink Firmware","text":"<p>One version of the OrangeLine firmware did not communicate well with Loop (or Android APS).</p> <p>If you have FW 2.6 on your OrangeLink or OrangeLink Pro, please upgrade to FW 3.2 as soon as possible.</p>"},{"location":"version/build-dev/","title":"Build Loop Dev","text":""},{"location":"version/build-dev/#building-development-code","title":"Building Development Code","text":"<p>No matter the method used to build Loop-dev: GitHub actions or git commands, you are testing development code. Please read this link now before continuing.</p> <ul> <li>What's going on in the dev branch</li> </ul> <p>Several methods to build Loop-dev are mentioned on this page:</p> <ol> <li>For the GitHub Browser Build method<ul> <li>Update Loop-dev: GitHub Build method</li> </ul> </li> <li>For the Mac-Xcode method:<ul> <li>Update Loop-dev: Mac-Xcode Build method</li> </ul> </li> </ol>"},{"location":"version/build-dev/#buildloopdev-script","title":"BuildLoopDev Script","text":"<p>There is a script to assist in building the dev branch. It gives you the option to choose the tip of the dev branch or to build a lightly tested commit. If you have not used the Build Select Script to build Loop previously, you may want to review that page.</p> Copy and Paste to start the BuildLoopDev script<pre><code>/bin/bash -c \"$(curl -fsSL \\\nhttps://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildLoopDev.sh)\"\n</code></pre>"},{"location":"version/build-dev/#buildloopdev-script-libre","title":"BuildLoopDev Script Libre","text":"<p>You can use the BuildLoopDev script to build a specific development branch, other than dev. See the example below, that builds the libre branch. Substitute the branch desired for libre. There must be a space after the final quote, followed by a hyphen, another space and then the branch name.</p> Example for libre branch with the BuildLoopDev script<pre><code>/bin/bash -c \"$(curl -fsSL \\\nhttps://raw.githubusercontent.com/loopandlearn/lnl-scripts/main/BuildLoopDev.sh)\" - libre\n</code></pre>"},{"location":"version/build-dev/#update-loop-dev","title":"Update Loop-dev","text":"<p>While Loop-dev is under active development, you should monitor zulipchat and update frequently.</p>"},{"location":"version/build-dev/#github-build-method","title":"GitHub Build Method","text":"<p>If you are using the GitHub method, once you have configured your fork to point to the dev branch, just follow the update instructions.</p> <ul> <li>GitHub Build for dev</li> </ul>"},{"location":"version/build-dev/#mac-xcode-build-method","title":"Mac-Xcode Build Method","text":"<p>You can use TestFlight with this method if you want the convenience of a remote build. See TestFlight with your Mac-Xcode build. With TestFlight, you need to renew the build every 90 days.</p> <p>When building frequently, it is optional to update your provisioning profile with every new build. If you want to always ensure one year, copy and paste the following command into the terminal before building. This forces Xcode to create a new provisioning profile instead of reusing one with an older expiration date.</p> Copy and Paste to remove Provisioning Profiles<pre><code>rm ~/Library/MobileDevice/Provisioning\\ Profiles/*.mobileprovision\n</code></pre> <p>Checking for updates every week is a good idea. Also - subscribe to all the streams on Loop Zulipchat to make sure you don't miss critical information.</p> <p>You may choose to download fresh each time you update. </p> <p>You may prefer to use commands to fetch and pull the latest code without making a new clone.</p> <ul> <li>Some users like to use GitKraken to assist them (link takes you to a tutorial video).</li> <li>Some are comfortable with the command line git commands described on here.</li> </ul>"},{"location":"version/build-dev/#loop-dev-version","title":"Loop-dev Version","text":"<p>The version of code that shows up under the Loop Settings screen does not change when the dev branch is modified.</p> <p>If you need help with your app, the mentors need more information. Please issue a Loop Report when asking for help. Refer to Support for how to issue a Loop Report. If you want to keep track yourself, refer to Identify Loop-dev Version</p> <p>With the release of Loop 3, the numbering for Loop-dev has a new pattern of even (released) and odd (dev) numbers for the \"x\" place in 3.x.m. </p> <p>For example:</p> <ul> <li>Loop 3.0.0 was the first released version of Loop 3<ul> <li>If minor updates are required before the next release, they will be numbered Loop 3.0.1, etc.</li> </ul> </li> <li>Loop 3.1.0 was the development version before Loop 3.2.0 was released</li> <li>Loop 3.2.0 was the next released version</li> <li>Loop 3.2.1 and 3.2.2 were minor releases</li> <li>Loop 3.3.0 is the current development version</li> </ul>"},{"location":"version/build-dev/#identify-loop-dev-version","title":"Identify Loop-dev Version","text":"<p>The version of code that shows up under the Loop Settings screen will remain fixed until Loop-dev is released. In order to identify which version of dev you have on your phone, you need the commit.</p> <p>The commit is identified by a 7-digit alphanumeric code.  That code was also appended to the folder name of the downloaded code under Downloads/BuildLoop as shown in the graphic above.  You can use finder to view the folder name after the script completes. It also appears in the Loop Report, refer to Support for instructions on issuing a Loop Report. After you issue the Loop Report, look at the workspaceGitRevision number near the beginning of the report.</p>"},{"location":"version/development/","title":"Loop Development","text":""},{"location":"version/development/#loop-development","title":"Loop Development","text":"<p>The early history of Loop was touched on in the introductory LoopDocs Overview: Development History section.</p> <p>The Loop Releases page lists releases since version 2.0 in reverse chronological order.</p> <p>The next version of Loop is developed using branch(es), independent of the released Loop version, which is found in the master branch. The dev branch is used by the developers to push out changes for users to test. You should only test a development branch if you are willing to be both an active participant with the developers to monitor annoucements and provide feedback, and to build frequently to obtain the latest feature or bug-fix that is being tested. If you are willing to help out - this is the way the next release of Loop is improved.</p> <p>There is a lot of interest in being a \"tester\" of dev right now, because the Omnipod DASH and Dexcom G7 are supported in the dev branch. If you choose to use dev, you accept that this code is not released.</p> <p>Please read this entire page before using any version of Loop other than the released code.</p>"},{"location":"version/development/#what-are-branches","title":"What are branches?","text":"<p>There is a lot of discussion about \"branches\" with Loop but the concept is simple. Basically, they are all slightly different versions of Loop...kind of like different edits of the same book.</p> <p>To really understand what branches are, we should probably explain a little more about Loop's code and how development works.  You can watch a 30-minute long, classic Katie DiSimone video explanation about branches created when Loop Version 2.0 was newly released. The information in this video is still generally useful with the last-half focused on automatic-bolus - the automatic-bolus dosing strategy has now been incorporated into Loop master branch. Loop has moved on to using only one stable branch (master), with dev recommended for developer/testers.</p>"},{"location":"version/development/#loop-github-information","title":"Loop GitHub Information","text":"<p>Loop developers own an account in GitHub called LoopKit.  Within that account, the developers have several \"repositories\" that support Loop in particular. A repository is like a book...let's think of it like a cookbook for now. Within the LoopKit account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of the info about the app itself; the outward facing things that you interact with. How information is put to you and taken in from you...that's in Loop repository code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. CGMBLEkit for some of the transmitter parts of Loop, RileyLink_ios for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc.</p> <p>When you build Loop, in the background, Loop pulls those other frameworks (7 in total) into the build process using \"Carthage\".  Carthage is like a personal shopper. You give it a shopping list (the cartfile in Loop code is that shopping list) and it goes and fetches that for you during the build process. Sometimes your computer has an old shopping list...and that can cause build errors. Hence the \"carthage update\" fix in the Build Errors page...that command updates the shopping list to get the right versions of those frameworks.</p> <p></p> <p>Anyways...so now you know about the general structure of Loop and LoopKit in GitHub. Now we can discuss Loop itself a little deeper.</p> <p>So let's imagine Loop as a cookbook. The developers are the authors/chefs of the recipes (code) in the cookbook. The authors spend countless hours testing new recipes, taste testing, documenting improvements. They send the drafts to the editor, who makes suggestions and eventually the cookbook is finalized. There are no grammar issues, no typos, the photos are beautiful and the recipes are yummy. They publish the book and you see a gorgeous final product on the shelves. That is called a \"release\" and it is the master branch. This book has been well-tested and is super stable. Every time you cook with those recipes, you know exactly what you're getting and lots of people have had a chance before you to make sure that it all tastes good. Master branch is stable and tested.</p> <p>But then...the chefs/developers go on a trip. They are inspired by new cuisine and want to add new recipes to the old cookbook. (Things like omnipod support and overrides are new \"recipes\" that were developed since the last master release, for example.) But, the process for developing a recipe is arduous. Lots of trial and error involved. Lots of tweaking ingredients (code). The editors try out the new recipes and offer feedback (similar to the Issues List in GitHub). While the recipes are being developed, they have a version of the old cookbook that gets marked up...edited in pencil a lot. Scribbles and notes in the side. Revisions happen frequently, because that's what testing new recipes is all about. These marked-up versions of the cookbook are called \"dev\" branch. Short for \"development\" branch. Like the name sounds...this is where new developments are happening, new recipes and tweaks.</p> <p>After much testing and tweaking, eventually the recipes get the flavors right (bugs in code are squashed) and enough people have provided feedback and careful observations of results...that the book goes to the publishing house for the next printing. The cookbook is republished with an updated edition number and new recipes are highlighted. When this happens in Loop, Loop's master branch is updated with the new features coming from dev (aka, \"dev branch is merged into master branch\"). When that happens, master branch gets another \"release\" version. For that moment, dev and master are exactly the same. They stay the same until the Loop developers start working on the next batch of improvements, could be the next hour even or days later, but the process begins again. The developers will start editing the code again and dropping those edits in dev branch for further development.</p>"},{"location":"version/development/#whats-going-on-in-the-dev-branch","title":"What's going on in the dev branch?","text":"<p>The dev branch, currently v3.3.0, is where the next version of Loop is being developed and tested.</p> <p>If you choose to come into a dev branch build, you need to be aware that dev may update code frequently and unannounced in the traditional sense that most users in Looped group or Instagram would see. Developers are not helped by people being in a dev branch if those users are mistakenly thinking of it as a stable master branch with lots of detailed docs to go with it. People should only use a dev branch build if they EDUCATE themselves on the expectations and how to properly manage dev information and updates. People using dev branch should also have regular access to a computer to be able to rebuild quickly if a new bug/fix is identified.</p> <p>If you choose to use a dev build, you can stay abreast of developments in a number of ways...but they will all require you to do some legwork and keep yourself informed. This is not a situation where you should expect a fancy Loopdocs page updated regularly with current \"dev updates\"...that's just not the way dev branch works (at least normally).</p>"},{"location":"version/development/#subscribe-to-the-zulipchat-channels","title":"Subscribe to the Zulipchat channels","text":"<p>Use Zulipchat forums for Loop. This forum has several \"streams\" of conversations depending on interest. I highly recommend following all the streams so you do not miss conversations.  You can select by stream and by topic within a stream to focus on a given conversation. If you are using dev branch, you must be in the #development stream.  If you want to know when LoopDocs gets updated, follow the #documentation stream. Code changes are called \"commits\" in GitHub. The #github stream will have an automated post whenever a new commit is made and it will give a brief line description of the commit.</p> <p></p> <p>You can also go directly to the commit history for each of the branches if you'd like.</p> <p>Loop main branch commit history</p> <p>Loop dev branch commit history</p> <p>If you click on the commit, you can see exactly what changes to the code were made. It's an interesting learning experience. In red are the code that is old, in green is the updated code. The line numbers and file names of the edited code are also there to help.</p> <p></p> <p>I don't expect many of you would understand exactly what the edits mean, or how the new code might function...but I bring up the topic of commit history so that you can use that to realize just how often dev is updated. Go ahead and look at the number and frequency of commits in that dev branch...that is why there is no way someone is going to keep a \"loopdocs\" of dev changes. It's just too much a moving target.</p>"},{"location":"version/development/#watch-the-loop-repo-and-issues-list","title":"Watch the Loop Repo and Issues list","text":"<p>Subscribe to the Loop repo's Issues list by \"watching\" the Loop repo. You can choose to watch the repo so that you get emails when new Issues are reported. This is a good way to find out if there's other people reporting odd behavior that you are wondering about. If you use dev and wonder about something you are seeing in Loop, you can check Issues list to see if others are noticing the same. If so, you can help by capturing information and reporting it. Not super helpful to just say \"yeah, me too...\" but better if you can attach screenshots, Issue Reports from Loop settings, and a thorough description of the problem you are seeing. Be a part of the solution by thoughtfully providing information to help debug.</p> <p></p>"},{"location":"version/development/#keep-checking-looped-group","title":"Keep checking Looped group","text":"<p>Keep watching The Looped Facebook Group. Major concerns/issues are brought up there...so no harm in scrolling through and seeing what's going on there.</p>"},{"location":"version/development/#become-familiar-with-your-data-sources","title":"Become familiar with your data sources","text":"<p>Another useful thing if you'll be on dev branches undergoing a lot of active change...know how Loop works and where to look for additional information about what you are seeing. For example, if you see an IOB value that looks odd, you should know to look at the insulin deliveries are stored in Health app.</p>"},{"location":"version/development/#generate-an-issue-report","title":"Generate an Issue Report","text":"<p>Know how to generate an Issue Report when you see a problem so you can provide that if asked. An Issue Report is a log file generated by the Loop app that has a lot of information the developers can parse to figure out what Loop was doing when you were having a problem.</p> <ul> <li>Loop v2.2.9 and earlier: Loop Settings -&gt; Issue Report</li> <li>Loop 3 and later: Loop Settings -&gt; Support -&gt; Issue Report</li> </ul> <p>Do not confuse this with reporting an issue with Loop.  That is done by logging into GitHub and going to the Issue page to report a new issue.  You can read about existing issues without logging in, but to report a new one, you must log in to GitHub.</p>"},{"location":"version/development/#create-a-debug-report","title":"Create a Debug Report","text":"<p>This 6-minute long, classic Katie DiSimone video shows how to capture debugging logs. If you are testing a new branch, this is a valuable skill to assist developers in identifying problems. In addition to showing you how to generate and save the debug text information, the video explains a method in which you create a gist of the debug information using your GitHub account and file an official Issue on the Loop GitHub repository. This may be required in some cases.  But start by chatting directly on zulipchat with the developer. What you are experiencing may already be known. If the developers need a new Issue opened, they will say so on zulipchat.</p>"},{"location":"version/development/#what-is-expected-in-the-future","title":"What is expected in the future?","text":"<p>The dev branch is where a lot of user interface and setting safety work has been developed with some cross-talk with the open source modifications available from Tidepool Loop.</p> <p>There has been some reorganization of code to make it easier to drop in new pump and CGM modules.  These may not be obvious to the user, but are important for moving forward.</p> <p>And, of course, the integration of Omnipod DASH. The RileyLink Compatible devices are no longer required with DASH.</p>"},{"location":"version/development/#repositories-and-code","title":"Repositories and Code","text":"<p>If you're a developer looking for direct links to the code and documentation in GitHub:</p> <ul> <li>Loop</li> <li>LoopDocs</li> </ul> <p>For more information on how to contribute code to the project, please review:</p> <ul> <li>How to Contribute to Open Source</li> <li>Review the Loop LICENSE</li> <li>Review the Loop CODE_OF_CONDUCT</li> </ul> <p>If you want to contribute code improvements, please join Loop Zulipchat and be sure to subscribe to all the channels. Meet the developers and testers who make this app, and learn about what is coming next.</p>"},{"location":"version/loopworkspace/","title":"LoopWorkspace","text":""},{"location":"version/loopworkspace/#loop-workspace","title":"Loop Workspace","text":"<p>This page is for the \"advanced\" user. It is a short introduction for folks interested in testing code before it is released, or contributing to that code.</p> <p>If you wandered over here meaning to build the latest Loop release, the rest of this page might be interesting but you should not follow any of the steps. Head back over to Build Loop App when you are ready to build the app.</p> <p>LoopWorkspace is now used for all Loop Builds</p> <ul> <li>With the release of Xcode 13, Loop builds require LoopWorkspace</li> <li>Loop old-timers may remember the zip-download method - it is no longer available</li> <li>For all Loopers who want the latest<ul> <li>Loop Release</li> <li>Follow the step-by-step instructions found at Build Loop App</li> </ul> </li> </ul> <p>The typical user who wants to build Loop does not need to know the level of detail on the rest of this page.</p>"},{"location":"version/loopworkspace/#new-way-to-sign","title":"New Way to Sign","text":"<p>One of the recent changes to LoopWorkspace is the addition of the file: <code>LoopConfigOverride.xcconfig</code> to the LoopWorkspace folder. The contents of this file are shown in the graphic below.</p> <p></p> <p>There are several ways to use this to sign the targets automatically.</p> <ol> <li>Edit the line highlighted by the red rectangle to remove the comment marks (<code>//</code>) from the beginning of the line and replace the indicated TeamID (UY678SP37Q) with your own Team ID</li> <li>For developers who may have more than one clone for various testing, note the first line of that file, highlighted by the blue-dashed rectangle<ul> <li>If a <code>LoopConfigOverride.xcconfig</code> exists up two levels from the current LoopWorkspace folder, it will be included</li> <li>Use a directory structure for clones similar to the example shown in the graphic below where clones were created under ~/Downloads/ManualClones.</li> <li>Make a copy of the <code>LoopConfigOverride.xcconfig</code> in the ~/Downloads/ManualClones folder (from any LoopWorkspace folder) and edit that version with your TeamID</li> <li>All future clones created in this directory grouping are then automatically signed</li> </ul> </li> <li>For users of the Build Select Script, the script automatically generates the copy of  <code>LoopConfigOverride.xcconfig</code> in the ~/Downloads/BuildLoop folder the first time the script is run, guides the user into adding their TeamID and then, in subsequent downloads, uses that previously created file</li> </ol> <p></p>"},{"location":"version/loopworkspace/#team-id","title":"Team ID","text":"<p>Your Apple Developer ID is the 10-character Team ID   found on the Membership page after logging into your account at:    https://developer.apple.com/account/#!/membership.</p>"},{"location":"version/loopworkspace/#what-is-git","title":"What is git?","text":"<p>Git is a system of \"distributed version control\" that allows remotely (as in not located in the same place) collaborating people to work on one project and still track their changes to the same place. For example, if I sent 5 people one document to proof-read at the same time...it is quite possible that the edits I will get back from those 5 people would conflict with each other. Bob may have entirely deleted a sentence while Mary would have added words to that sentence. Git lets these remotely collaborating people deal with \"resolving conflict\" between versions more easily and merging suggestions (pull requests) into a coordinated space.</p> <p>So, in using git, we can do things with \"git commands\". Like \"Hey git...make me an exact copy of that guy's work over there.\" or \"Hey git, I'd like to compare my version of this page with Joe's version of the same page.\" Or using my old cookbook analogy...\"Hey git, I'd like to start a new cookbook called Italian Desserts.\"</p> <p>But yes, git commands take awhile to properly use. And they are not plain English-friendly.</p>"},{"location":"version/loopworkspace/#what-is-loopworkspace","title":"What is LoopWorkspace?","text":"<p>There is more information in Loop Development that is not repeated here.</p> <p>The important fact for this discussion on LoopWorkspace is that Loop developers own an account in GitHub called LoopKit.  Within that account, the developers have several \"repositories\" that support Loop in particular. A repository is like a book...let's think of it like a cookbook for now. Within the LoopKit account, there are repositories for Loop itself, LoopDocs, and various other supporting \"frameworks\" that are helper repositories for Loop to build correctly. For example, Loop's repo has a lot of info about the app itself; the outward-facing things that you interact with. How information is put to you and taken in from you...that's in Loop repository code. But, there's more than just a user interface for Loop. Loop has to do a lot of complex work like Bluetooth communications, algorithm math, pump communications, etc. The Loop app has help from frameworks to do those other parts. CGMBLEkit for some of the transmitter parts of Loop, RileyLink_ios for the pump managers (talking to the pumps and decoding their information), LoopKit for the algorithm about carbs and insulin curves, etc.</p> <p>When you build Loop from LoopWorkspace, each of those repositories is downloaded to your computer.  This is slower than the old zip-download as far as downloading Loop - but it is much faster when you build Loop because all the files are already on your computer.</p> <p>LoopWorkspace uses submodules to define how the frameworks are coordinated for building. The graphic below shows the dev branch at a particular point in time.  The precise version, or commit, of each submodule is defined by 7-character hexadecimal codes (look up SHA-1) with the repository for each submodule defined in a text file called <code>.gitmodules</code>.</p> <ul> <li>Several key <code>git</code> and other operating system commands will be provided later to assist you</li> <li>These commands will not be explained in detail</li> <li>If you want to know more, search the internet for documentation</li> <li>Often a series of commands is shown on one line, separated by semicolons</li> </ul> <p>The commit identifier for each submodule is important because that repository can be modified after things are set up and working with Loop.  When you download the code from that repository you want the exact version that was tested.</p> <ul> <li>Later on there will be information about determining your <code>git branch</code> for a given submodule</li> <li>You'll see language: <code>(HEAD detached at #)</code></li> <li>That # is the commit identifier for the submodule</li> </ul> <p>The commit for the LoopKit submodule is highlighted by the red rectangle in the graphic below. Advanced users testing the dev branch (or other branches or forks) need to know how to tell if their current download is up-to-date.</p> <p></p>"},{"location":"version/loopworkspace/#clone-loopworkspace","title":"Clone LoopWorkspace","text":"<p>To get that LoopWorkspace code to your computer, first open a terminal. Make sure your current path name does not have any embedded spaces.  If it does, you will get errors on your build.</p> <p>If you don't know how to open a terminal and navigate to a directory, reconsider whether you are ready for this page.</p> <p>You need to use a \"git clone\" command LIKE THIS (but not exactly the same...you're going to edit the \"branch-name\" part in there):</p> <p><code>git clone --branch=branch-name --recurse-submodules https://github.com/LoopKit/LoopWorkspace</code></p> <p>Now...look carefully and notice two things...that command is getting (1) the version of LoopWorkspace found in the LoopKit repository and (2) selects the branch you want to start working with when the clone is done.</p> <p>So, you will need to edit that \"branch-name\" before using the command so that you are getting started with the branch you want. If you want to clone from a different fork, the LoopKit will be replaced with the name of the github site for the fork. For example, to test dev (which is under development and has some cool new architecture and features), you would copy/paste:</p> <pre><code>git clone --branch=dev --recurse-submodules https://github.com/LoopKit/LoopWorkspace\n</code></pre>"},{"location":"version/loopworkspace/#start-xcode-using-command-line","title":"Start Xcode using command line","text":"<p>If you want to start the build from the command line, enter the following 2 lines into the terminal.</p> <pre><code>cd LoopWorkspace\nxed .\n</code></pre> <p>Remember the warning - if you build dev on your phone from Loop master, it should work fine. Going backwards, please delete the app from you phone and enter all your settings again to return to master.</p>"},{"location":"version/loopworkspace/#start-xcode-using-finder","title":"Start Xcode using Finder","text":"<p>The cloned version of the LoopWorkspace will go into the current directory in the Terminal app when you executed the command. Terminal app opens in your User account home directory by default when you first open it. Unless you changed to a different directory, check your home directory for the LoopWorkspace folder.</p> <p>How can you find your home directory?</p> <ol> <li>In Terminal, if you use <code>cd</code> that will take you there automatically.</li> <li>In Finder, Shift+Cmd+H will open your <code>home</code> folder.</li> </ol> <p></p> <p>There are a lot of cloned things in this home directory that involve Loop. You may have fewer...but be aware, you can always delete and reclone if you are in doubt or confused. You can also set up a special directory to hold the cloned code - just make sure there are no embedded spaces in the full path name.</p> <p>For this graphic, the cloned LoopWorkspace is in the home directory.</p> <p>Loop to LoopWorkspace in dev</p> <p>Note that the directory <code>Loop.xcworkspace</code> has been renamed to <code>LoopWorkspace.xcworkspace</code> in the dev branch. This change makes LoopWorkspace the default target to simplify the build process.</p> <p>The words will be updated with the next release. It may take more time for the figures to be updated.</p> <ol> <li>Open Finder and navigate to the location that has LoopWorkspace</li> <li>Open the LoopWorkspace folder</li> <li>Search for and double-click on the <code>LoopWorkspace.xcworkspace</code> folder - this automatically opens the Workspace in Xcode</li> </ol> <p></p> <ul> <li>Enter your Apple Developers ID in the LoopConfigOverride.xcconfig file that now appears in the top of the folder list (not shown in this graphic)</li> <li>This automatically signs the 5 targets required for the dev branch</li> <li>Choose your device</li> <li>Tap on the build (play) button to build to your selected device</li> </ul>"},{"location":"version/loopworkspace/#updating-loop-using-loopworkspace","title":"Updating Loop using LoopWorkspace","text":"<p>When it's time to update the copy of LoopWorkspace on your computer - you have choices. You can use the method below or redo the whole cloning process.</p> <p>Be sure your terminal is in the correct location using Open a Terminal in LoopWorkspace Folder</p> <ol> <li>Make sure you are in the correct branch using this git command:     <pre><code>git branch\n</code></pre></li> <li>If you are not in the correct branch, for example <code>dev</code>, then issue this git command (suitably modified for the desired branch)     <pre><code>git checkout dev\n</code></pre></li> <li>Use the following git commands in the LoopWorkspace folder of your terminal:     <pre><code>git fetch\ngit pull --recurse\n</code></pre></li> </ol> <p>If you are testing the LoopKit dev branch, you need to be on zulipchat and subscribe to at least the #development and #github streams. (It's a good idea to subscribe to all the streams.) When you see repository updates similar to the graphic below, there may also be an announcement in the #development channel that LoopWorkspace is updated and ready to test. If not you can check the commits in LoopWorkspace and see if they've been updated. It's a good idea to wait 24 hours. My procedure is to build dev to my backup phone and then put it on my \"real\" phone. Otherwise, wait for someone else to do it and give the all-clear in zulipchat.</p> <p></p>"},{"location":"version/loopworkspace/#updating-loop-to-a-specific-loopworkspace-commit","title":"Updating Loop to a Specific LoopWorkspace commit","text":"<p>Sometimes, you know a feature you want was added at a specific commit number; however, you know there are other changes later than that commit which you do not want to test. There is a solution.</p> <p>Be sure your terminal is in the correct location using Open a Terminal in LoopWorkspace Folder. First you have to bring down all the latest dev commits. Then you will back up to the one you want.</p> <ol> <li>Make sure you are in the correct branch using this git command:     <pre><code>git branch\n</code></pre></li> <li>If you are not in the correct branch, normally the desired branch is <code>dev</code>, then issue this git command (suitably modified for the desired branch)     <pre><code>git checkout dev\n</code></pre></li> <li>Use the following git commands to bring down all the newer commits to your copy:     <pre><code>git fetch\ngit pull --recurse\n</code></pre></li> <li> <p>Now you want to \"backup\" to the desired commit:</p> <ul> <li>You will need to figure out what that commit should be - there is no copy button here - you need to create this line yourself with the correct commit:</li> </ul> <pre><code>git checkout &lt;desired commit here&gt;\n</code></pre> <ul> <li>Once you have checked out the correct commit, assuming there were no errors, you need to update all the submodules to that commit with this command (which you can copy and paste)</li> </ul> <pre><code>git submodule update\n</code></pre> </li> <li> <p>Assuming there were no errors, see Local Modifications Conflict, in the process above, you can now build that commit.</p> </li> </ol>"},{"location":"version/loopworkspace/#build-following-update","title":"Build Following Update","text":"<p>Sometimes there is a change to the Workspace scheme in Xcode that interferes with building following an update to your local clone. In those cases, these steps typically work. Try the first one, and if that doesn't work, try the first two, etc.  Only after trying all three should you post asking for help on zulipchat.</p> <ol> <li>In Xcode Menu, select Product-&gt;Clean Build Folder</li> <li>In Xcode Menu, select File-&gt;Close Workspace and then File-&gt;Open Recent and select top line (one you just closed)</li> <li>Quit Xcode and delete derived data, then reopen Xcode (you may need to resolve package versions again)</li> </ol>"},{"location":"version/loopworkspace/#delete-derived-data","title":"Delete Derived Data","text":"<p>This command deletes derived data stored across all workspaces and projects by Xcode on your computer. If you have multiple clones locally, it deletes derived data from all of them. The derived data will be regenerated next time you build with Xcode using that clone.</p> <p>Copy and paste this command into a terminal window.</p> Copy and Paste to Delete Derived Data<pre><code>rm -rf ~/Library/Developer/Xcode/DerivedData\n</code></pre>"},{"location":"version/loopworkspace/#compare-your-local-clone-to-loopworkspace","title":"Compare your local clone to LoopWorkspace","text":"<p>In an ideal world, LoopWorkspace has the most recent compatible submodule identifiers revised at the same time the submodules are updated.  You will notice the commit identifiers for the updated submodules are different from the ones you have locally.</p> <p>You can check your current submodules with the <code>git submodule status</code> command in the LoopWorkspace folder of your terminal:</p> <p></p> <p>What are those super-long numbers?  Those are the actual SHA-1 (remember - look it up) for the commits.  But the first 7 characters are sufficient to uniquely identify the commit you need for the repository and branch identified in <code>.gitmodules</code>.  So compare the first 7 characters to the LoopKit / LoopWorkspace number and you know whether you need to update or not.</p> <p>To determine the commit for a single submodule on your computer, use the following commands in the LoopWorkspace folder:</p> <pre><code>  cd &lt;submodule-name&gt;; git branch; cd ..\n</code></pre> <p>The response will be similar to this exchange:</p> <pre><code>  cd rileylink_ios; git branch; cd ..\n</code></pre> <pre><code>  * (HEAD detached at 2541c1c)\n    dev\n</code></pre> <p>The asterick indicates the branch that is currently checked out (active).</p> <p>The phrase <code>* (HEAD detached at #)</code> allows you to compare your local version with the commit identifier on github.</p>"},{"location":"version/loopworkspace/#loopworkspace-unchanged","title":"LoopWorkspace Unchanged","text":"<p>What happens if you update (<code>git pull --recurse</code>) and there are no changes at the LoopWorkspace repository? There will be no change to your current clone on your computer.</p> <ul> <li>You'll see a series of responses saying:<ul> <li><code>Fetching submodule submodule-name</code> for each submodule-name</li> <li>followed by <code>Already up to date.</code></li> </ul> </li> </ul>"},{"location":"version/loopworkspace/#loopworkspace-updated","title":"LoopWorkspace Updated","text":"<p>What happens if you update (<code>git pull --recurse</code>) and there are changes at the LoopWorkspace repository? The changes will be brought down to your clone on your computer.</p> <p>You'll need to build Loop again to get these changes incorporated in the app on your phone.</p> <ul> <li>You'll see a series of responses saying:<ul> <li><code>Fetching submodule submodule-name</code> for each submodule-name</li> <li>One or more will show changes and specify which submodules were changed<ul> <li>followed by <code>Submodule path submodule-name: checked out</code> new SHA-1</li> </ul> </li> </ul> </li> </ul>"},{"location":"version/loopworkspace/#update-locally","title":"Update Locally","text":"<p>It has happened that you notice changes in one or more repository (in the #github stream) followed by an announcement in the #development stream that changes have been committed and please test.  But you get the response shown in the LoopWorkspace Unchanged scenario. You can make a comment in zulipchat, saying please update LoopWorkspace and then wait, or you can download the appropriate commit. If you are a new tester - you probably want to wait.</p> <p>If you want to go on and test, you can update to the correct commit without waiting for LoopWorkspace to get updated.</p> <p>First, in zulipchat, in the #github stream of the commit, click on the word <code>pushed</code> and that will take you to the commit. For example, clicking on pushed in zulipchat from the graphic shown above, goes to this website:</p> <p><code>https://github.com/ps2/rileylink_ios/compare/8ff4bca2bc5f...2541c1c899a9</code></p> <p>This indicates the final commit of that push for rileylink_ios is identified as <code>2541c1c</code>.</p> <p>At this point, the commands to get that commit locally on your computer are as follows, starting from the LoopWorkspace folder:</p> <p><code>cd rileylink_ios; git fetch; git checkout 2541c1c; cd ..</code></p> <p>If you got an error message the # you requested <code>did not match any file(s) known to git</code>, you either typed it incorrectly or you forgot the <code>git fetch</code> command. The fetch command brings down information from github to your computer but doesn't make changes to what you have checked out.</p>"},{"location":"version/loopworkspace/#local-modifications-conflict","title":"Local Modifications Conflict","text":"<p>If you have modified anything in a submodule folder on your computer, it might be in conflict with the latest commit.</p> <p>If you get a message such as this:</p> <pre><code>  error: Your local changes to the following files would be overwritten by checkout:\n    Loop/Models/LoopConstants.swift\n  Please commit your changes or stash them before you switch branches.\n  Aborting\n</code></pre> <p>The easiest fix is to type commands similar to the following, where you modify Loop to be whichever folder(s) had the conflict. If more than one folder had a conflict, then issue the stash for each folder. The submodule update command will continue to show errors until you stash all local changes that interfere with the new code:</p> <pre><code>  cd Loop; git stash; cd ..\n  git submodule update\n</code></pre> <p>After stashing and updating with no errors, you can try to restore your changes: <pre><code>  cd Loop; git stash pop; cd ..\n</code></pre></p> <p>If you see errors indicating you cannot use <code>pop</code>, that means you need to manually add your customizations back.</p> <p>You will need to repeat this for each submodule that has a conflict. Use the lines above (for Loop submodule) as a template to resolve conflict(s) other submodule(s).</p>"},{"location":"version/loopworkspace/#checking-out-different-branches-within-a-loopworkspace","title":"Checking out different branches within a LoopWorkspace","text":"<p>More advanced users...I'm not going to explain this in quite so much detail, but yes, you can individually change the branches in a LoopWorkspace.</p> <p>There are 2 main ways to do this.</p> <ol> <li> <p>If you're already familiar with git, the easiest way is to <code>cd</code> into the appropriate repository (like <code>cd rileylink_ios</code>) and <code>checkout</code> the desired branch.</p> </li> <li> <p>If you're not as familiar with git, if you edit your .gitmodules directory in LoopWorkspace, you can specify other repos to use (and add a line to specify branches, too). Then if you do a <code>git submodule sync</code> the workspace will sync to new submodules. Then <code>git submodule update --init --recursive --remote</code> will update all the submodules to the right branches and get HEADs detached correctly, etc. Note that the HEADs will be detached at the top of the branch (most recent commit) based off of <code>.gitmodules</code>.</p> </li> </ol> <p></p>"},{"location":"version/loopworkspace/#branch-tutorial","title":"Branch Tutorial","text":"<p>This tutorial is pretty nice.</p> <p>Git Tutorial</p> <p>When I first started using git, my adult son answered all my questions very politely then started sending me links to this tutorial instead.</p> <ul> <li>Learn Git Branching</li> </ul> <p>There's a section called <code>Main</code> which goes over commands in your local copy (clone) of the code. There's a section called <code>Remote</code> that goes over fetching, pulling, and pushing to remote copies.</p> <p>For Open Source Software, you might fetch and pull from the LoopKit repositories, but you will only push to your fork.</p> <ul> <li>You may need to add <code>git remote add &lt;name&gt; &lt;your-fork-repo&gt;</code> and <code>git push --set-upstream &lt;name&gt; &lt;branch&gt;</code> to your vocabulary.</li> </ul>"},{"location":"version/loopworkspace/#non-loopkit-clones","title":"Non-LoopKit clones","text":"<p>Average Loopers can skip this whole section...it's for Developers mostly</p> <p>This whole section about non-LoopKit workspace clones is something almost every Looper can totally skip over. I'm only writing up this section for people who are interested in dabbling in code collaborations/customizations that they would want to maintain separately from LoopKit proper.</p> <p>Scenario: You have a friend named DeveloperBob who has his own version of LoopWorkspace that he's customized. DeveloperBob wants you to look at his code customizations and collaborate with him. You need to change the \"git clone\" command to get DeveloperBob's version, not LoopKit's version. And, you'd want to make sure you specify the branch that the new feature is on, too. DeveloperBob should usually include the branch name when he posts/shares. So, the command line might be edited to something like:</p> <p><code>git clone --branch=new-features --recurse-submodules https://github.com/DeveloperBob/LoopWorkspace</code></p> <p>So...if you are trying to grab someone's LoopWorkspace to use it, you'll need to make sure you get the command correct if they don't specify it for you. You can't clone mutliple \"LoopWorkspaces\" into the exact same home directory (because they will have the same name), so you may want to create a subdirectory to put them in. Like you could make a folder called \"DeveloperBob\" and then move into that directory in Terminal before you clone DeveloperBob's LoopWorkspace.</p> <p>How would you do that? Simple <code>cd &amp;&amp; mkdir DeveloperBob</code> would make the new folder in your home directory. And then <code>cd DeveloperBob</code> would move your Terminal app to be working inside the new DeveloperBob folder. So if you wanted to clone DeveloperBob's LoopWorkspace, that would be a good way to keep track of where the code came from.</p> <p>If you ever get in doubt and can't remember where your code was cloned from, you can <code>cd LoopWorkspace</code> to get into the directory and then use <code>git remote -v</code> to tell you where it came from.</p>"},{"location":"version/loopworkspace/#pushing-commits-from-loopworkspace","title":"Pushing commits from LoopWorkspace","text":"<p>So you've got a great idea for a new feature, made those changes to your LoopWorkspace and want to get them into GitHub. Awesome!</p> <p>To understand how to do this, we'll need to understand a bit more about how git keeps track of changes. In git, developers can have different \"branches\" (see What are Branches on the Loop Development page for more details about what a branch is). There are two different types of branches: remote and local. If you were to fork Loop on GitHub, then the branches that you can see on GitHub are \"remote\" branches - they're hosted on the GitHub server. On the other hand, you can also create \"local\" branches that are stored directly on your computer by \"checking out\" the remote branch. You'll need to \"commit\" your changes to the local branch, then \"push\" those changes to the remote branch in order to be able to see them in GitHub. There are specific commands that you can type into the command line to do all of these actions, but I'm not going to go into detail because there are different ways and everyone has their own preference.</p> <p>It's a little easier to think about this with an analogy. Let's say you're working at a company that's creating a cookbook. There's a centralized, production-ready version of the cookbook on their website that all the employees can view. Think of the website version of this cookbook as being like the remote branch. You're assigned to change the pancake recipe in the cookbook. Since the company doesn't want employees to make changes directly to the version of the cookbook that the customers see, you need to make a copy of it on your computer so you can make your changes to the pancake recipe. When you make the personal copy on your computer, it's like \"checking out\" the remote branch. Your copy is like the local branch - you can make whatever changes you want without having to worry about customers accidentally seeing them. When you make an important change to the recipe (like adding a photo or changing the ingredients), you might want to make a note in the edit history so that you can go back to that version of the recipe in case you accidentally make unintended changes - those notes you make would be \"commits\". Once you're happy with the recipe, you'll add it back into the production version of the cookbook on the website, which is similar to what you're doing when you \"push\" your changes.</p> <p>Where do the submodules fit in? Each submodule is actually a branch, so when you make changes to multiple submodules, you'll need to commit those changes to their respective branches. Let's say you've made changes to Loop and LoopKit. You'll need to go into Loop and commit and push the changes, then go into LoopKit and commit and push the changes.</p> <p>There are a few different ways to keep track of all these different branches. Some people like using the command line (which is what you're using when you do commands like <code>git clone</code>) because it's very customizable and has the largest variety of commands. Others like to use graphical Git editors, which make it easier to see changes and be able to do a variety of common actions (like cloning, committing, and pushing) with the push of a button. Everyone has their own preferences, but some methods that Loop contributors have used in the past include the command line, Gitkraken, and SourceTree.</p>"},{"location":"version/overview-version/","title":"Version Overview","text":""},{"location":"version/overview-version/#version-overview","title":"Version Overview","text":"<p>The Version tab of LoopDocs contains information about Loop versions, code customization and development.</p> <p>Map to this section:</p> <ul> <li>Loop Releases<ul> <li>Description of the current released version of Loop including when it was released</li> <li>Reverse chronology of earlier releases</li> </ul> </li> <li>Code Customization<ul> <li>Instructions for customizing your DIY code</li> <li>Think of this as your personalized version</li> </ul> </li> <li>Customize with GitHub<ul> <li>Instructions for customizing using just a browser</li> </ul> </li> <li>Simulator Build<ul> <li>Instructions for building to a simulator</li> </ul> </li> <li>Loop Development<ul> <li>Description of the development process for Loop</li> <li>Information you need if you want to participate</li> </ul> </li> <li>Build Dev<ul> <li>Discussion of methods to build the dev branch</li> </ul> </li> <li>LoopWorkspace<ul> <li>If you are interested in development, this page goes into more detail</li> <li>The primary focus is on techniques for using git</li> </ul> </li> </ul>"},{"location":"version/releases/","title":"Loop Releases","text":""},{"location":"version/releases/#loop-releases","title":"Loop Releases","text":"<p>The new features added with each Loop release (starting with Loop version 2.0) are provided for reference.</p>"},{"location":"version/releases/#loop-3-compatibility","title":"Loop 3 Compatibility","text":"<p>Be aware that Loop 3 is forward compatible:</p> <ul> <li>You can build Loop 3 over older versions of Loop and maintain therapy settings as well as your configuration for CGM and pump (including a pod)</li> <li>You can build Loop 3 using a browser on any computer (no Mac required) with GitHub Browser Build</li> <li>Your phone must be running at least iOS 15.1 (although some people report they needed newer iOS than that when building with GitHub Browser Build)</li> </ul> <p>Loop 3 is NOT backwards compatible.\u00a0Once you build Loop 3 or later on your phone, you cannot return to Loop 2.2.x or FreeAPS without some additional work.</p> <ul> <li>Be prepared to enter all your settings again and start a new pod</li> <li>If you use Loop Follow, you do not need to delete Loop Follow</li> <li>When downgrading to an older version of Loop from Loop 3, you have to delete all apps with a shared app group ID<ul> <li>For more information, click on Remove Apps with Shared App Group</li> </ul> </li> </ul>"},{"location":"version/releases/#current-release","title":"Current Release","text":"<p>The current released version for Loop main is v3.2.2. The dates and contents for Loop releases are summarized below in reverse chronological order (so newest release information comes first).</p>"},{"location":"version/releases/#what-version-do-i-have","title":"What Version Do I Have?","text":"<p>Tap on the Settings icon at the bottom of the Loop app main screen and look at the version information at upper left. This graphic was generated with an older version, Loop 2.2.8.</p> <p></p>"},{"location":"version/releases/#is-the-released-version-newer","title":"Is the Released Version Newer?","text":"<p>Release information is always found on the GitHub LoopKit/Loop release page. The information on this LoopDocs page is a summary of that information with a little extra explanation.</p> <p>Be aware that updates to LoopDocs may take some time after a new release comes out.</p>"},{"location":"version/releases/#loop-3-version-history","title":"Loop 3 Version History","text":""},{"location":"version/releases/#loop-v322","title":"Loop v3.2.2","text":"<p>Loop v3.2.2 was released on April 24, 2023.</p> <p>This is a minor release to fix archiving with Xcode 14.3.</p>"},{"location":"version/releases/#loop-v321","title":"Loop v3.2.1","text":"<p>Loop v3.2.1 was released on March 20, 2023.</p> <p>This is a minor release primarily dealing with localization updates.</p> <ul> <li>G7 Plugin localization fixed: was defaulting to Spanish in some cases.</li> <li>Updated translations from translators on Lokalise.</li> <li>Many behind-the-scenes fixes for how strings are tracked in the various frameworks that Loop uses, fixing a large number of broken/missing translations.</li> </ul>"},{"location":"version/releases/#loop-v320","title":"Loop v3.2.0","text":"<p>Loop v3.2.0 was released on March 17, 2023.</p> <p>There are some important bug fixes and new features, so please rebuild to this version as soon as possible.</p> <p>Pete's announcment:</p> <p>Loop 3.2 Is released! This contains some very important bug fixes for everyone. If you are running latest dev, you do not need to update, but everyone else running older 3.x versions of Loop should consider upgrading as soon as you can.</p> <p>https://github.com/LoopKit/Loop/releases/tag/v3.2.0</p> <p>Bug Fixes (Please update ASAP):</p> <ul> <li>Omnipod bolus tracking issue fixed: link</li> <li>Medtronic temp basal tracking issue fixed: link</li> <li>Crashes caused by large updates from Apple Health fixed</li> <li>Automatic refresh timers for Omnipod (both Dash and Eros) have been removed, to reduce load on pods and reduce frequency of failed pods.</li> </ul> <p>Updates and new Features:</p> <ul> <li>Missed Meal Notifications. If you want, Loop will detect situations where it looks like you may have consumed carbs but did not enter them into Loop, and will notify you with an easy option to enter the amount, and the time of eating already estimated for you. Find this option in the Alert Management section of Loop settings.</li> <li>Tidepool Service added. This lets you upload your diabetes data from Loop to Tidepool! It is in early stages, so there may be issues. Please report any issues you have with this integration on DIY Loop forums, like Zulip, GitHub, or the Looped group.</li> <li>Translations! Loop now has very good coverage for several languages, including German, Spanish, Italian, French, Danish, Polish, Dutch, Norwegian, Russian, Turkish, and Romanian!<ul> <li>Warning - a few items got overwritten by Spanish - if you can't figure it out, try Google translate</li> </ul> </li> <li>A new safeguard restricts automatic dosing to keep your IOB below a limit of 2 times your max bolus. Manual dosing can still be delivered to put your IOB above this amount. link</li> <li>Add missing X-Large watch complications. link</li> <li>\u201cDeactivate Pod\u201d button on some screens changed to not be so alarming, as it doesn\u2019t actually deactivate the pod, but takes you to a screen where you can, and has an option to cancel: link</li> </ul>"},{"location":"version/releases/#loop-v300","title":"Loop v3.0.0","text":"<p>After several years of development and a lot of testing, Loop 3 is here!</p> <p>Loop v3.0.0 was released on January 14, 2023.</p> <p>Link to release notes for Loop 3.0</p> <p>Use Script not Zip</p> <p>If you follow that link above, there is an <code>Assets</code> section with a zip link</p> <ul> <li>Do not try to build from the zip link</li> <li>For Browser Build, refer to: GitHub Overview</li> <li>For Mac-Xcode Build refer to:<ul> <li>Updating</li> <li>Build Loop</li> </ul> </li> </ul> <p>Branch Name Change</p> <p>The branch name associated with the latest Loop release is \"main\".</p> <ul> <li>All new Git repositories on GitHub will be named \"main\" instead of \"master\" starting October 1, 2020</li> <li>GitHub provides tools to assist in modifying existing repositories to use main</li> </ul>"},{"location":"version/releases/#remove-apps-with-shared-app-group","title":"Remove Apps with Shared App Group","text":"<p>The storage of data with Loop 3 is not backward compatible. In other words, if you attempt to build Loop 2.2.x (or FreeAPS) on a phone which has been upgraded to Loop 3, you will not be able to run that app. You can successfully build the app, which will overwrite Loop 3 on the phone, but the app will crash and you will not be able to Loop.</p> <p>At this point, you can restore your Loop 3 build on your phone and continue using Loop 3 or you delete all apps on your phone with a shared app group. This list includes Loop, FreeAPS, FreeAPS X, xDrip4iOS, Glucose-Direct, and the g5 Transmitter Reset app.</p> <p>If you tried to delete \"all\" the apps and still have something causing an issue; you can follow the directions to Review Provisioning Profiles and then delete the profiles for all the apps by using the - sign. </p> <p>You do not need to delete Loop Follow, so if you use Loop Follow - do not delete that provisioning profile.</p>"},{"location":"version/releases/#loop-2-version-history","title":"Loop 2 Version History","text":""},{"location":"version/releases/#loop-v229","title":"Loop v2.2.9","text":"<p>This release updates Loop to handle Dexcom Share server changes for how glucose trend is parsed. Dexcom used to provide integers that mapped to the meaning for the arrows.  They changed that to strings, like \"Flat\" or \"FortyFiveUp\".</p> <p>Loop v2.2.9 was released on April 4, 2022.</p>"},{"location":"version/releases/#loop-v228","title":"Loop v2.2.8","text":"<p>This is a hotfix (no features were modified in the Loop app) to enable the app to be built with Xcode 13.3.</p> <p>Loop v2.2.8 was released on March 16, 2022.</p>"},{"location":"version/releases/#loop-v227","title":"Loop v2.2.7","text":"<p>This is a fix (no features were modified in the Loop app) to enable the app to be distributed via TestFlight.</p> <p>Loop v2.2.7 was released on Jan 11, 2022.</p>"},{"location":"version/releases/#loop-v226","title":"Loop v2.2.6","text":"<p>Several users reported issues with IOB accounting in Loop v2.2.5, where IOB was being under-reported, which could cause Loop to continue recommending increases in insulin delivery. A fix was made and provided as Loop v2.2.6. </p> <p>This is a serious issue, so updating to this release is strongly recommended for anyone currently running v2.2.5. If you tap on Loop Settings and look at the top, and see LOOP V2.2.5, then rebuild ASAP. The time window when you would have built v2.2.5 is from Aug 22 through Sep 6, 2021.</p> <p>The issue appears to be the result of a failure to write to Apple HealthKit, which may occur if the Health app on your phone is having problems, or if you have turned off Loop's ability to write Insulin data to HealthKit. The fix involves reverting a change made in v2.2.5.  This change was an attempt to reduce overlaps of Reservoir and Pump Event reconciliation which intermittently over estimate insulin delivery. Instead, that issue will be fixed in the next major release of Loop.</p> <p>Thanks to all who helped with reporting, digging, and testing this quickly. It's great to have such a strong community of people eager to help.</p> <p>Loop v2.2.6 was released on September 6, 2021.</p>"},{"location":"version/releases/#loop-v225","title":"Loop v2.2.5","text":"<p>This is an interim release as we prepare for the major changes currently in development. If you are running an older version of Loop, such as v2.2.4 (master or automatic-bolus branch) or an older version, it is recommended that you update to v2.2.6 to get all these new features. A summary of modifications with respect to Loop v2.2.4 is listed below.</p> <p>Loop v2.2.5 was released on August 22, 2021.</p>"},{"location":"version/releases/#new-features","title":"New Features:","text":"<p>Automatic Bolus (Experimental) Dosing Strategy</p> <ul> <li>Users may select Dosing Strategy</li> <li>Default Dosing Strategy continues to be Temp Basal Only</li> <li>Automatic Bolus Dosing Strategy is marked experimental<ul> <li>If you used Loop v2.2.4 automatic-bolus branch, this release will behave the same</li> <li>If you used Loop v2.2.4 master branch, approach this feature with caution; it may require changes to settings</li> <li>Tracking automatic vs manual boluses is not yet implemented in the code and databases</li> </ul> </li> </ul> <p>Provisioning Profile Expiration Notifications:</p> <ul> <li>User gets notified when Loop app expiration date nears</li> <li>Expiration date is included in the issue report</li> </ul> <p>RileyLink Compatible Devices:</p> <ul> <li>The RileyLink compatible device displays are pump independent</li> <li>OrangeLink Support added for connection monitoring, battery level alerting, find device, and light/vibration controls</li> <li>Medtronic Pump Settings screen updated with option to disable MySentry use; user can trade Medtronic pump battery for longer RileyLink compatible device battery life</li> </ul> <p>Omnipod Features:</p> <ul> <li>Pod Settings layout: improved layout and functionality</li> <li>Fault Codes: PDM style Ref code displayed for pod faults</li> <li>Confirmation beeps: improved and more uniform implementation</li> <li>Pod Suspended: pod beeps once every 5 minutes until delivery is resumed or alarm cleared</li> </ul>"},{"location":"version/releases/#code-fixes","title":"Code Fixes:","text":"<p>Omnipod Code Fixes:</p> <ul> <li>Make insertion more robust (LoopKit issue #1369)</li> <li>Fix \u201cPod already primed\u201d errors when priming cancelled (rileylink_ios issue #661)</li> <li>Prevent 049 pod faults during setup (rileylink_ios issue #627)</li> <li>See RileyLink Pull Request 676 for additional details.</li> </ul> <p>(REMOVED) Insulin Accounting:</p> <ul> <li>Reduced occurrences of overlaps in accounting for insulin via reservoir and dose history, which causes temporary overestimation of IOB</li> <li>See Loop Pull Request 344 for details</li> <li>This modification (in v2.2.5) was removed for v2.2.6<ul> <li>It worked as advertised during testing, but . . .</li> <li>If the user's phone had trouble communicating with the Apple HealthKit app, this could cause IOB to be under-reported and cause Loop to provide more insulin than needed</li> </ul> </li> </ul> <p>Dexcom Non-US Share:</p> <ul> <li>Dexcom Share URL for non-US users has been fixed.</li> </ul> <p>For community support, please use one of the Loop Social Media help sites.</p>"},{"location":"version/releases/#loop-v224","title":"Loop v2.2.4","text":"<p>Released October 3, 2020 with \"fixes\" introduced without renumbering the version number. Last change was on January 19, 2021.</p> <ul> <li>Revert to previous date pickers (Thanks @novalegra!)</li> <li>Pod fault handling improvements (Thanks @itsmojo!)</li> <li>Fix issue with pod status screen not allowing new pod pairing or continuing of interrupted pairing.</li> <li>October 22, 2020, update travis to make it work with Xcode 12</li> <li>January 19, 2021, pin the carthage to 0.36.0.  Users no longer required to install homebrew or carthage</li> </ul>"},{"location":"version/releases/#loop-v223","title":"Loop v2.2.3","text":"<p>Released September 25, 2020</p> <p>Warning - Rebuild ASAP for Pods</p> <ul> <li>A bug was introduced in this version, quickly fixed in v2.2.4.</li> <li>If you use pods, please rebuild using v2.2.6.</li> </ul> <ul> <li>Fetch pump and cgm data on manual loop retry (when Loop icon is red or yellow)</li> <li>Re-arranged pod status screen to prioritize needed information and actions.</li> <li>Pod pairing fixes for more edge cases.</li> <li>Translation updates.</li> <li>Fix share server integration, pointing to share2.</li> <li>Report RSSI and low gain in Read Pod Status command.</li> <li>Report failure properly when Play Test Beeps command fails.</li> <li>Carthage build fix for Xcode 12.0.1</li> </ul>"},{"location":"version/releases/#loop-v221","title":"Loop v2.2.1","text":"<p>Released August 9, 2020</p> <ul> <li>Include pending insulin in:<ul> <li>forecast uploaded to Nightscout</li> <li>status extension forecast</li> </ul> </li> <li>Updated translations, fixes for temp override translations, new Arabic translations.</li> <li>Omnipod integration fixes:<ul> <li>Avoid suspending during deactivation if pod has a fault, is in setup, or already suspended.</li> <li>Show the correct expected address in invalid address error</li> <li>Reuse same address during attempts to pair with same pod</li> <li>Fix for Medtronic only: when a bolus issued via the Loop interface was canceled by issuing a suspend on the pump itself, Loop will incorrectly track the bolus as if the full amount were delivered</li> <li>Updates for omnipod packet parser</li> <li>Suggest moving RileyLink to new area on multiple pairing failures</li> </ul> </li> <li>Minimed updates:<ul> <li>Detect temp basal cancellation performed on pump</li> </ul> </li> </ul>"},{"location":"version/releases/#loop-v22","title":"Loop v2.2","text":"<p>Released April 17, 2020</p> <ul> <li>Updated carb/bolus screens. Thanks @mpangburn!<ul> <li>Carbs and boluses are now entered together, which is a more familiar model to many caregivers.</li> <li>Forecast preview while entering bolus allows you to see potential impact of your bolus before delivering.</li> </ul> </li> <li>Improvements in Watch updates; sleep data being used to update complications when you are awake. Thanks @novalegra!</li> <li>Omnipod pairing improvements. Bug fixes, and better error messaging. Thanks @itsmojo!</li> <li>Many performance improvements, especially effecting long time Loop users. Delays in rendering graphs during app launch should be fixed.</li> <li>New device communication logging facility- Additional logging across pod swaps, and logging of CGM communication.</li> <li>Rendering fixes to prevent insulin graph from drawing outside of bounds.</li> <li>Bug fix to align use of 10m insulin delay in dose computation and forecast.</li> <li>Include current bg in suspend threshold evaluation.</li> </ul>"},{"location":"version/releases/#loop-v20","title":"Loop v2.0","text":"<p>Released December 31, 2019.</p> <p>For Reference Only</p> <p>Enough time has passed that this version should no longer be on anyone's phones (the one-year expiration time should take care of that).</p> <p>There is a lot more detail provided in the Loop v2.0 section because it constituted a significant change to parts of Loop from prior releases. This section and the Omnipod-Testing branch sections are left here for historical interest.</p>"},{"location":"version/releases/#what-was-new-in-loop-v20","title":"What was new in Loop v2.0?","text":"<p>This is a highlights reel comparing Loop v2.0 to v1.9.6.</p>"},{"location":"version/releases/#uploading-of-bgs-to-nightscout","title":"Uploading of BGs to Nightscout","text":"<p>Loop v2.0 has an option to upload your BG data to Nightscout directly. It is a new slider under the CGM configuration section for Dexcom users. After you add your CGM transmitter ID, go back into the CGM info and you'll see a new slider called \"Upload Readings.\"  Technically, Loop's dev branch had that feature for a hot minute before Loop v2.0 was released...but for almost everyone this will be a brand new feature they haven't had before. This feature can help if/when Dexcom's Share servers ever go through another large outage like we had before. If that happens, you can turn on the \"Upload Readings\" switch and your CGM data will now be in Nightscout even without Share servers working properly. Good practice would be to temporarily disable your Share bridge in Nightscout while Loop is responsible for CGM uploading so that you don't get duplicate data. You can disable Share bridge by logging into your Heroku account, going to the Settings tab, clicking on \"reveal config vars\" and then deleting the word \"bridge\" from the ENABLE line.</p>"},{"location":"version/releases/#a-fix-for-settings-loss","title":"A fix for settings loss","text":"<p>iOS 13 brought about a quirky little bug where you could suddenly lose settings in Loop. But, it wasn't just limited to Loop, sometimes people lost Dexcom app settings too. The issue is most common when the phone goes through a power cycle, but it has happened at other times, too. There's a fix for that new bug in Loop now...so that's a good reason to update. (If you encounter that bug before you have a chance to update your Loop app, simply restart the Loop app and your settings should reappear.)</p>"},{"location":"version/releases/#confirmation-beeps-expanded","title":"Confirmation beeps expanded","text":"<p>Confirmation beeps have been expanded based on user feedback...we heard parents and school nurses really appreciate hearing a beep for not just boluses, but also for suspend/resume commands and editing basal schedule (so you are sure it saved properly). So, confirmation beeps are now for boluses, suspend/resume, and basal schedule edit saves.</p>"},{"location":"version/releases/#read-pod-status-added","title":"Read Pod Status added","text":"<p>There's a new command in the RileyLink menu for \"Read Pod Status\" that is analogous to the existing command for Medtronic users. You can query your Pod for its current status info using that command.</p>"},{"location":"version/releases/#nightscout-profile-uploading-introduced","title":"Nightscout profile uploading introduced","text":"<p>Loop will upload your basal schedule, ISFs, carb ratios, and override presets from Loop settings to your Nightscout profile. If you ever lose your phone and need to setup Loop brand new...your settings will be easy to find in Nightscout now.</p>"},{"location":"version/releases/#non-linear-carb-model-introduced-as-default","title":"Non-linear carb model introduced as default","text":"<p>All branches (master and dev) now use a \"non-linear\" carb model, so let's give some info about the change.</p> <p>Previously, the carb model Loop used had a linear absorption predicted with dynamic carbs adjustments. What this means is that food absorption was modeled as a flat, even effect (like the straight grey graph that you'll see in the Insulin Counteraction Effects chart after you added a carb entry. But looking at large groups of meals' datasets (and supported by personal, anecdotal experiences), food really has a bit more of a non-linear absorption. Meaning, we usually see more of a food impact up-front than the old carb model in Loop predicted.</p> <p>What did that mismatch mean for us if the model predicts a linear absorption, but the meal actually behaves differently?</p> <ol> <li>Bolusing: You've probably seen smaller upfront boluses for meals than you would have preferred. This is because the insulin was predicted to over-power the linear (slower) carb model soon after a bolus is given.</li> <li>Early low temp basals: You've also probably seen a tendency to have early zero basal or low basals set by Loop for the first 30-60 minutes after a meal bolus if you don't have a significant blood glucose spike immediately after the carb entry. This might have been even more obvious for those of you who are regularly waiting to eat after a bolus, too.</li> </ol> <p>With a non-linear absorption model, the carb absorption will more closely match observed blood glucose impacts we've seen after meals. And when the model is more closely matching actual experience, that means the predicted blood glucose curves will do a better job at providing more upfront bolus and not having the tendency to have overly conservative temp basals soon after a meal.</p>"},{"location":"version/releases/#overrides-introduced","title":"Overrides Introduced","text":"<p>Loop v2.0 marks the first time Loop master branch has overrides included. Additionally, this release moves overrides setup from the configurations area of Loop settings to the workout icon in the Loop toolbar. There has also been bug squashing in dev branch for overrides over the recent past, so updating is a good idea even if you already have overrides on your current build. Want to learn more about overrides? Read about them here.</p>"},{"location":"version/releases/#retrospective-correction-always-on","title":"Retrospective Correction always on","text":"<p>Retrospective correction used to be an optional toggle in the algorithm. It is now on by default all the time. It is an important part of the algorithm (helps Loop look at how good/bad its recent prediction curve has been vs reality), and leaving it on made sense anyways.</p>"},{"location":"version/releases/#omnipod-support-in-released-code","title":"Omnipod support in Released Code","text":"<p>Yes, most of you are already using Omnipod with your Loop...but this is the first time that Loop master branch supports Omnipod users. Please update if you have been using Omnipod-testing branch especially...it's time to get all the bug fixes that we've done in Loop.</p>"},{"location":"version/simulator/","title":"Simulator Build","text":""},{"location":"version/simulator/#simulator-build","title":"Simulator Build","text":"<p>There are 2 main types of simulators users may want to build. Each of these require less up-front acquisition of hardware and may be desirable as a first step towards becoming a Looper.</p> <p>Please, review all the Intro and Build pages, even if you will not complete them yet.</p>"},{"location":"version/simulator/#mac-xcode-build-to-a-simulated-iphone","title":"Mac-Xcode Build to a Simulated iPhone","text":"<p>This simulator requires access to a Mac or virtual computer, see Compatible Computer</p> <ul> <li>Build pages to review, but complete later<ul> <li>Compatible iPhone/iPod</li> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>Order a RileyLink (not required for Omnipod DASH)</li> <li>Apple Developer Program (can use a free account)</li> </ul> </li> <li>Follow Download Xcode</li> <li>Follow Xcode Preferences but can skip the <code>Add Apple ID</code> section</li> <li>Follow Build the Loop App but with the following variation:<ul> <li>Skip the section on Developer Mode (that is only when building to a phone)</li> <li>Download the code as directed</li> <li>Choose to Sign Manually in the Signing Targets section</li> <li>Continue with the Build Free Loop page</li> <li>Select a simulator (not your phone) when told to do so</li> <li>Complete the Build to a Simulator section</li> </ul> </li> <li>Use the simulated iPhone and set up the app as desired</li> </ul>"},{"location":"version/simulator/#build-to-a-real-iphone","title":"Build to a Real iPhone","text":""},{"location":"version/simulator/#common-requirements","title":"Common Requirements","text":"<p>This simulator requires a compatible phone, see Compatible iPhone/iPod</p> <ul> <li>Pages to review, but complete later<ul> <li>Compatible Pump</li> <li>Compatible CGM</li> <li>Order a RileyLink (not required for Omnipod DASH)</li> </ul> </li> </ul>"},{"location":"version/simulator/#what-to-expect","title":"What to Expect","text":"<p>Loop will not work in the background without either a real CGM or a real pump to \"wake\" it up.</p> <p>The app will only work in the background in these special cases:</p> <ul> <li>Loop is on on the same phone as a Dexcom CGM and you've added that CGM information to Loop</li> <li>Loop is attached to a pump (Pod or Medtronic) dripping water (instead of being attached to your body)</li> </ul> <p>In all other cases, the phone must be open and unlocked for you to test the app.</p> <p>These CGM and pump options work to provide glucose readings or accept pump commands while the app is open, but will not \"wake\" the app when in the background or phone is locked:</p> <ul> <li>Dexcom Share</li> <li>Nightscout Remote CGM</li> <li>CGM Simulator</li> <li>Pump Simulator</li> </ul> <p>Disable Notifications</p> <p>When you have the Loop app on your phone to test as a simulator, you may want to disable notifications when you are not actively using it. Even if you quit the app, you will get Loop not Looping notifications while the app is on your phone.</p> <p>To Disable Notifications:</p> <ol> <li>Tap on iOS Settings -&gt; Notifications -&gt; Loop</li> <li>Disable <code>Allow Notifications</code></li> </ol> <p>The Loop app, when open, will be quite aggressive at warning you that you have disabled Notifications, so you can reverse those directions to enable notifications when actually using the app.</p>"},{"location":"version/simulator/#browser-build-loop-3","title":"Browser Build (Loop 3)","text":"<ul> <li> <p>Best to configure building using GitHub Actions with a computer or tablet. It does not need to be a Mac.</p> </li> <li> <p>Complete the steps in Browser Build tab, starting with GitHub Build Overview</p> </li> </ul>"},{"location":"version/simulator/#mac-xcode-build-loop-2-or-later","title":"Mac-Xcode Build (Loop 2 or later)","text":"<ul> <li> <p>Need access to a mac or virtual computer, see Compatible Computer</p> </li> <li> <p>You can use a Free Apple Developer account</p> </li> <li>Follow Download Xcode</li> <li>Follow Xcode Preferences<ul> <li>If you have a developer ID, use it in the <code>Add Apple ID</code> step and follow the normal build directions</li> <li>If you do not have a developer ID, use the Free Developer Account instructions in the <code>Add Apple ID</code> section</li> </ul> </li> <li>Follow Build the Loop App using the Free Account instructions<ul> <li>If your phone is running iOS 16, you must enable Developer Mode</li> <li>Download the code as directed</li> <li>Choose to Sign Manually in the Signing Targets section</li> <li>Continue with the Build Free Loop page</li> </ul> </li> <li>Once the App is on your phone<ul> <li>Follow the set up the app instructions on your phone but choose a simulated pump</li> <li>If you have a Dexcom CGM, you can select Dexcom Follow or Nightscout for the CGM; otherwise, you can enter glucose values in Apple Health and Loop will pick up the values</li> </ul> </li> </ul>"}]}